    TEST(gbcemu, opcode_9c) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 9C 0000
        gbc.setState(0x51cb, 0xf4f, 0xdf60, 0xff5e, 0x83d, 0x40e4, 0x1, 0x0);
        gbc.writeMem(0x51cb, { 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf4f, gbc.sp());
        EXPECT(0x51cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0001
        gbc.setState(0x975a, 0x8a48, 0xf7d0, 0x193e, 0xeb5b, 0x4d9b, 0x1, 0x1);
        gbc.writeMem(0x975a, { 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8a48, gbc.sp());
        EXPECT(0x975b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x975a));
        // 9C 0002
        gbc.setState(0x43ab, 0xdc82, 0x4b40, 0x5d69, 0xaa2d, 0x7544, 0x0, 0x1);
        gbc.writeMem(0x43ab, { 0x9c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdc82, gbc.sp());
        EXPECT(0x43ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0003
        gbc.setState(0xcc33, 0x10aa, 0x1730, 0x839a, 0x5762, 0xcdbe, 0x1, 0x0);
        gbc.writeMem(0xcc33, { 0x9c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x10aa, gbc.sp());
        EXPECT(0xcc34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcc33));
        // 9C 0004
        gbc.setState(0x293b, 0x45a4, 0xce90, 0x43bc, 0x8232, 0xcc8a, 0x0, 0x0);
        gbc.writeMem(0x293b, { 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x45a4, gbc.sp());
        EXPECT(0x293c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0005
        gbc.setState(0xcd43, 0x3933, 0x3210, 0xb8d9, 0xd25b, 0xbeae, 0x1, 0x1);
        gbc.writeMem(0xcd43, { 0x9c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3933, gbc.sp());
        EXPECT(0xcd44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcd43));
        // 9C 0006
        gbc.setState(0x6fa1, 0xaf08, 0xfec0, 0x6b59, 0x9846, 0x1548, 0x0, 0x0);
        gbc.writeMem(0x6fa1, { 0x9c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaf08, gbc.sp());
        EXPECT(0x6fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0007
        gbc.setState(0x5070, 0x69d9, 0xb920, 0x5cb8, 0xd9dd, 0xc1f4, 0x1, 0x1);
        gbc.writeMem(0x5070, { 0x9c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x69d9, gbc.sp());
        EXPECT(0x5071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0008
        gbc.setState(0xb9b, 0x1224, 0xe190, 0xdeee, 0xa724, 0x8044, 0x0, 0x1);
        gbc.writeMem(0xb9b, { 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1224, gbc.sp());
        EXPECT(0xb9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0009
        gbc.setState(0x5f6b, 0xb944, 0xd1c0, 0x7058, 0xb740, 0xe065, 0x0, 0x0);
        gbc.writeMem(0x5f6b, { 0x9c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb944, gbc.sp());
        EXPECT(0x5f6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 000A
        gbc.setState(0x3e52, 0x9e86, 0x7cd0, 0x63ae, 0xca14, 0x67c4, 0x0, 0x1);
        gbc.writeMem(0x3e52, { 0x9c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9e86, gbc.sp());
        EXPECT(0x3e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 000B
        gbc.setState(0xdbec, 0x9fe3, 0x5180, 0xb5e0, 0xc0af, 0x7efe, 0x0, 0x1);
        gbc.writeMem(0xdbec, { 0x9c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9fe3, gbc.sp());
        EXPECT(0xdbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xdbec));
        // 9C 000C
        gbc.setState(0x8404, 0x94ce, 0xe8a0, 0xfe78, 0x9639, 0x86d4, 0x0, 0x1);
        gbc.writeMem(0x8404, { 0x9c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x94ce, gbc.sp());
        EXPECT(0x8405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8404));
        // 9C 000D
        gbc.setState(0x7360, 0x2b4d, 0xf2d0, 0x4f15, 0x4e2, 0xc730, 0x1, 0x0);
        gbc.writeMem(0x7360, { 0x9c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2b4d, gbc.sp());
        EXPECT(0x7361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 000E
        gbc.setState(0x177e, 0x8a51, 0x70a0, 0xb850, 0x95ed, 0x6953, 0x1, 0x0);
        gbc.writeMem(0x177e, { 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8a51, gbc.sp());
        EXPECT(0x177f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 000F
        gbc.setState(0xda34, 0x4aa1, 0xd7e0, 0xe4bc, 0x9ee9, 0x1ed0, 0x0, 0x0);
        gbc.writeMem(0xda34, { 0x9c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4aa1, gbc.sp());
        EXPECT(0xda35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xda34));
        // 9C 0010
        gbc.setState(0x3b25, 0x390b, 0x54f0, 0xdf59, 0x82fb, 0xe37a, 0x1, 0x0);
        gbc.writeMem(0x3b25, { 0x9c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x390b, gbc.sp());
        EXPECT(0x3b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0011
        gbc.setState(0x47e9, 0xa91c, 0x8410, 0xbc2c, 0xb21c, 0xe9fe, 0x0, 0x1);
        gbc.writeMem(0x47e9, { 0x9c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa91c, gbc.sp());
        EXPECT(0x47ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0012
        gbc.setState(0x44a2, 0x2b7c, 0xb8f0, 0x5c2f, 0xd6c, 0x825c, 0x1, 0x0);
        gbc.writeMem(0x44a2, { 0x9c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2b7c, gbc.sp());
        EXPECT(0x44a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0013
        gbc.setState(0x87fe, 0xc0a3, 0x4e30, 0x6463, 0xfff1, 0xbbed, 0x1, 0x0);
        gbc.writeMem(0x87fe, { 0x9c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc0a3, gbc.sp());
        EXPECT(0x87ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x87fe));
        // 9C 0014
        gbc.setState(0x5769, 0xb12f, 0x5800, 0x2039, 0x2255, 0xf858, 0x1, 0x1);
        gbc.writeMem(0x5769, { 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb12f, gbc.sp());
        EXPECT(0x576a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0016
        gbc.setState(0xce8c, 0xf425, 0xb5a0, 0x8144, 0x12e1, 0x7574, 0x0, 0x1);
        gbc.writeMem(0xce8c, { 0x9c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf425, gbc.sp());
        EXPECT(0xce8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xce8c));
        // 9C 0017
        gbc.setState(0xa604, 0x703b, 0x7a70, 0x7bd1, 0xcf49, 0x26a8, 0x1, 0x0);
        gbc.writeMem(0xa604, { 0x9c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x703b, gbc.sp());
        EXPECT(0xa605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa604));
        // 9C 0019
        gbc.setState(0x6690, 0xe03e, 0xa410, 0x507c, 0x2548, 0x1f84, 0x1, 0x0);
        gbc.writeMem(0x6690, { 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe03e, gbc.sp());
        EXPECT(0x6691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 001A
        gbc.setState(0xb5ab, 0x5ae2, 0x41b0, 0x5d91, 0xa9cd, 0x11c8, 0x0, 0x0);
        gbc.writeMem(0xb5ab, { 0x9c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5ae2, gbc.sp());
        EXPECT(0xb5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb5ab));
        // 9C 001B
        gbc.setState(0x875b, 0xe81c, 0x5e00, 0x47b3, 0x5f5f, 0xc5f9, 0x0, 0x0);
        gbc.writeMem(0x875b, { 0x9c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe81c, gbc.sp());
        EXPECT(0x875c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x875b));
        // 9C 001C
        gbc.setState(0xcf18, 0x21aa, 0x3ae0, 0xbee4, 0x2fc0, 0xd86, 0x1, 0x1);
        gbc.writeMem(0xcf18, { 0x9c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x21aa, gbc.sp());
        EXPECT(0xcf19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcf18));
        // 9C 001D
        gbc.setState(0x4547, 0xf2c1, 0x5830, 0x8840, 0x53d9, 0xdab, 0x1, 0x0);
        gbc.writeMem(0x4547, { 0x9c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf2c1, gbc.sp());
        EXPECT(0x4548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 001E
        gbc.setState(0x3049, 0xb6f3, 0xdab0, 0x32b2, 0xf076, 0x64fd, 0x0, 0x0);
        gbc.writeMem(0x3049, { 0x9c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb6f3, gbc.sp());
        EXPECT(0x304a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 001F
        gbc.setState(0x9369, 0x714d, 0x3c80, 0x8474, 0xd977, 0x100b, 0x1, 0x1);
        gbc.writeMem(0x9369, { 0x9c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x714d, gbc.sp());
        EXPECT(0x936a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9369));
        // 9C 0020
        gbc.setState(0x7d76, 0xf39b, 0x1a80, 0x9908, 0x684c, 0xe8b3, 0x1, 0x1);
        gbc.writeMem(0x7d76, { 0x9c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf39b, gbc.sp());
        EXPECT(0x7d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0021
        gbc.setState(0x293a, 0x1a47, 0xff10, 0x38de, 0x4e0e, 0xdda1, 0x0, 0x1);
        gbc.writeMem(0x293a, { 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1a47, gbc.sp());
        EXPECT(0x293b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0022
        gbc.setState(0x706b, 0x8950, 0x9600, 0x137e, 0x7a26, 0x1935, 0x0, 0x1);
        gbc.writeMem(0x706b, { 0x9c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8950, gbc.sp());
        EXPECT(0x706c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0023
        gbc.setState(0x6b92, 0x42ca, 0xa370, 0x14c4, 0x3193, 0x8cda, 0x0, 0x0);
        gbc.writeMem(0x6b92, { 0x9c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x42ca, gbc.sp());
        EXPECT(0x6b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0024
        gbc.setState(0x1d09, 0x1a65, 0x51d0, 0xa5e7, 0x9bb0, 0x3d2b, 0x0, 0x1);
        gbc.writeMem(0x1d09, { 0x9c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1a65, gbc.sp());
        EXPECT(0x1d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0025
        gbc.setState(0x5a65, 0x4bf0, 0x73c0, 0x75b0, 0xbb9c, 0xc769, 0x1, 0x1);
        gbc.writeMem(0x5a65, { 0x9c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4bf0, gbc.sp());
        EXPECT(0x5a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0026
        gbc.setState(0x3d78, 0x54f1, 0x3810, 0xe2ab, 0xdafc, 0x8bcc, 0x0, 0x1);
        gbc.writeMem(0x3d78, { 0x9c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x54f1, gbc.sp());
        EXPECT(0x3d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0027
        gbc.setState(0x6180, 0x3576, 0x8a00, 0xde78, 0xb7dc, 0xee02, 0x0, 0x0);
        gbc.writeMem(0x6180, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3576, gbc.sp());
        EXPECT(0x6181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0028
        gbc.setState(0x151e, 0x43a7, 0x9d00, 0x4707, 0x7b44, 0x528f, 0x0, 0x1);
        gbc.writeMem(0x151e, { 0x9c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x43a7, gbc.sp());
        EXPECT(0x151f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0029
        gbc.setState(0xcf6a, 0x857b, 0xfbb0, 0x7484, 0xa34c, 0xaa22, 0x0, 0x1);
        gbc.writeMem(0xcf6a, { 0x9c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x857b, gbc.sp());
        EXPECT(0xcf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcf6a));
        // 9C 002A
        gbc.setState(0xfb0, 0xee2a, 0x4040, 0xdb14, 0xc977, 0xbebd, 0x1, 0x1);
        gbc.writeMem(0xfb0, { 0x9c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xee2a, gbc.sp());
        EXPECT(0xfb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 002B
        gbc.setState(0x5f6, 0x8b3c, 0xf360, 0x4940, 0x42ba, 0x676e, 0x1, 0x0);
        gbc.writeMem(0x5f6, { 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8b3c, gbc.sp());
        EXPECT(0x5f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 002C
        gbc.setState(0x347c, 0xe4e0, 0x97f0, 0x8177, 0x4d1a, 0xefaf, 0x1, 0x1);
        gbc.writeMem(0x347c, { 0x9c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe4e0, gbc.sp());
        EXPECT(0x347d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 002D
        gbc.setState(0x24dd, 0x1438, 0x20f0, 0xdc73, 0x22c1, 0xb356, 0x1, 0x1);
        gbc.writeMem(0x24dd, { 0x9c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1438, gbc.sp());
        EXPECT(0x24de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 002E
        gbc.setState(0xde8, 0x37ae, 0xd230, 0xf97, 0xd1ec, 0x9e70, 0x0, 0x1);
        gbc.writeMem(0xde8, { 0x9c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x37ae, gbc.sp());
        EXPECT(0xde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 002F
        gbc.setState(0x67e1, 0xcad5, 0xd470, 0xdd80, 0xdbc1, 0x56c4, 0x0, 0x1);
        gbc.writeMem(0x67e1, { 0x9c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcad5, gbc.sp());
        EXPECT(0x67e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0030
        gbc.setState(0x2708, 0x4e6e, 0x3470, 0x6b6c, 0x5b3c, 0x280c, 0x0, 0x0);
        gbc.writeMem(0x2708, { 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4e6e, gbc.sp());
        EXPECT(0x2709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0031
        gbc.setState(0x8f53, 0xba5b, 0x5710, 0x52f0, 0xaba6, 0x7e03, 0x1, 0x0);
        gbc.writeMem(0x8f53, { 0x9c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xba5b, gbc.sp());
        EXPECT(0x8f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8f53));
        // 9C 0032
        gbc.setState(0xcbb, 0x1279, 0xede0, 0x1505, 0xef4b, 0xdfcf, 0x1, 0x1);
        gbc.writeMem(0xcbb, { 0x9c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1279, gbc.sp());
        EXPECT(0xcbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0033
        gbc.setState(0x7d29, 0xc304, 0x9420, 0xb111, 0x1290, 0x5f3b, 0x1, 0x0);
        gbc.writeMem(0x7d29, { 0x9c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc304, gbc.sp());
        EXPECT(0x7d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0034
        gbc.setState(0xb81a, 0xeaa3, 0xf610, 0x340e, 0x6d53, 0x9214, 0x0, 0x0);
        gbc.writeMem(0xb81a, { 0x9c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xeaa3, gbc.sp());
        EXPECT(0xb81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb81a));
        // 9C 0035
        gbc.setState(0x9748, 0x1a96, 0xaee0, 0x283e, 0xc001, 0x37d8, 0x0, 0x1);
        gbc.writeMem(0x9748, { 0x9c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1a96, gbc.sp());
        EXPECT(0x9749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9748));
        // 9C 0036
        gbc.setState(0x223, 0x6d2e, 0x62f0, 0x210b, 0x5651, 0x5ac, 0x0, 0x0);
        gbc.writeMem(0x223, { 0x9c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6d2e, gbc.sp());
        EXPECT(0x224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0037
        gbc.setState(0xc789, 0xd401, 0x1690, 0x706f, 0x7918, 0x9c4d, 0x1, 0x1);
        gbc.writeMem(0xc789, { 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd401, gbc.sp());
        EXPECT(0xc78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc789));
        // 9C 0038
        gbc.setState(0x7ba5, 0xcb82, 0xf1c0, 0x46a8, 0xa136, 0x3f03, 0x1, 0x0);
        gbc.writeMem(0x7ba5, { 0x9c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcb82, gbc.sp());
        EXPECT(0x7ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0039
        gbc.setState(0xd4ec, 0xa139, 0xca50, 0x198f, 0xf155, 0x7b83, 0x1, 0x0);
        gbc.writeMem(0xd4ec, { 0x9c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa139, gbc.sp());
        EXPECT(0xd4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd4ec));
        // 9C 003A
        gbc.setState(0xebd6, 0x70f7, 0x9940, 0xe578, 0xb8b8, 0xa7a2, 0x0, 0x0);
        gbc.writeMem(0xebd6, { 0x9c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x70f7, gbc.sp());
        EXPECT(0xebd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xebd6));
        // 9C 003B
        gbc.setState(0x883d, 0xa964, 0xbef0, 0xf098, 0x9cf5, 0x136b, 0x0, 0x1);
        gbc.writeMem(0x883d, { 0x9c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa964, gbc.sp());
        EXPECT(0x883e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x883d));
        // 9C 003C
        gbc.setState(0xa70d, 0x9b99, 0x1ef0, 0x5e1d, 0x34af, 0x3b03, 0x0, 0x0);
        gbc.writeMem(0xa70d, { 0x9c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9b99, gbc.sp());
        EXPECT(0xa70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa70d));
        // 9C 003D
        gbc.setState(0x34c2, 0x6873, 0x8630, 0xccc, 0xb01a, 0xfaeb, 0x1, 0x1);
        gbc.writeMem(0x34c2, { 0x9c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6873, gbc.sp());
        EXPECT(0x34c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 003E
        gbc.setState(0x97d9, 0x3a60, 0x86b0, 0xf9a9, 0xdad9, 0x8092, 0x1, 0x0);
        gbc.writeMem(0x97d9, { 0x9c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3a60, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x97d9));
        // 9C 003F
        gbc.setState(0xc236, 0xa827, 0x280, 0x4587, 0x355c, 0x8ca0, 0x0, 0x1);
        gbc.writeMem(0xc236, { 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa827, gbc.sp());
        EXPECT(0xc237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc236));
        // 9C 0040
        gbc.setState(0x9e56, 0xf17b, 0xb590, 0xa7f0, 0xc70e, 0x2c97, 0x1, 0x1);
        gbc.writeMem(0x9e56, { 0x9c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf17b, gbc.sp());
        EXPECT(0x9e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9e56));
        // 9C 0041
        gbc.setState(0xec97, 0xe9d4, 0x9e70, 0xad6, 0xc39e, 0x1399, 0x0, 0x1);
        gbc.writeMem(0xec97, { 0x9c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe9d4, gbc.sp());
        EXPECT(0xec98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xec97));
        // 9C 0042
        gbc.setState(0x80f6, 0x9ef8, 0xb4f0, 0xce7a, 0xace2, 0xf3cd, 0x0, 0x1);
        gbc.writeMem(0x80f6, { 0x9c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9ef8, gbc.sp());
        EXPECT(0x80f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x80f6));
        // 9C 0043
        gbc.setState(0xce89, 0x8225, 0x8150, 0x3c7c, 0xa7c0, 0x6af, 0x1, 0x1);
        gbc.writeMem(0xce89, { 0x9c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8225, gbc.sp());
        EXPECT(0xce8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xce89));
        // 9C 0044
        gbc.setState(0x5d42, 0xbe2a, 0x7420, 0x5c84, 0x287e, 0x6fea, 0x0, 0x0);
        gbc.writeMem(0x5d42, { 0x9c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbe2a, gbc.sp());
        EXPECT(0x5d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0045
        gbc.setState(0xd784, 0x6e2a, 0xfd50, 0x37aa, 0xe953, 0xbef7, 0x0, 0x1);
        gbc.writeMem(0xd784, { 0x9c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6e2a, gbc.sp());
        EXPECT(0xd785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd784));
        // 9C 0047
        gbc.setState(0xb783, 0xf835, 0x8830, 0xf34d, 0x267d, 0xb47c, 0x1, 0x1);
        gbc.writeMem(0xb783, { 0x9c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf835, gbc.sp());
        EXPECT(0xb784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb783));
        // 9C 0049
        gbc.setState(0xae70, 0xfdfc, 0x2260, 0xee6c, 0x3fec, 0x47e, 0x0, 0x1);
        gbc.writeMem(0xae70, { 0x9c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfdfc, gbc.sp());
        EXPECT(0xae71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xae70));
        // 9C 004A
        gbc.setState(0xd965, 0x4ff8, 0x7790, 0x5152, 0xc608, 0xddd3, 0x1, 0x0);
        gbc.writeMem(0xd965, { 0x9c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4ff8, gbc.sp());
        EXPECT(0xd966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd965));
        // 9C 004B
        gbc.setState(0x5fd6, 0x5625, 0xa720, 0x1cda, 0x841b, 0x1b5e, 0x1, 0x1);
        gbc.writeMem(0x5fd6, { 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5625, gbc.sp());
        EXPECT(0x5fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 004C
        gbc.setState(0x6a9, 0x57ad, 0x7660, 0x18cb, 0x357e, 0x8da2, 0x1, 0x1);
        gbc.writeMem(0x6a9, { 0x9c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x57ad, gbc.sp());
        EXPECT(0x6aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 004D
        gbc.setState(0x8f3a, 0x64d9, 0x9e80, 0x2276, 0xe8ac, 0x57a, 0x1, 0x1);
        gbc.writeMem(0x8f3a, { 0x9c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x64d9, gbc.sp());
        EXPECT(0x8f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8f3a));
        // 9C 004E
        gbc.setState(0x23ed, 0x84f, 0x69d0, 0x5e30, 0xd8dc, 0xc14f, 0x1, 0x0);
        gbc.writeMem(0x23ed, { 0x9c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x84f, gbc.sp());
        EXPECT(0x23ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 004F
        gbc.setState(0x609b, 0xbc46, 0x4af0, 0xa0a1, 0xa99c, 0x3cc0, 0x0, 0x0);
        gbc.writeMem(0x609b, { 0x9c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbc46, gbc.sp());
        EXPECT(0x609c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0050
        gbc.setState(0x1f67, 0xa887, 0x5f90, 0xf0b0, 0x7e00, 0x6a7f, 0x0, 0x1);
        gbc.writeMem(0x1f67, { 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa887, gbc.sp());
        EXPECT(0x1f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0051
        gbc.setState(0x3b24, 0x144d, 0x1a80, 0xb95e, 0xc479, 0xfb96, 0x0, 0x1);
        gbc.writeMem(0x3b24, { 0x9c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x144d, gbc.sp());
        EXPECT(0x3b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0052
        gbc.setState(0xbc4b, 0x5c2c, 0xaaf0, 0xa21, 0x4408, 0xef3b, 0x0, 0x0);
        gbc.writeMem(0xbc4b, { 0x9c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5c2c, gbc.sp());
        EXPECT(0xbc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbc4b));
        // 9C 0053
        gbc.setState(0xefd8, 0x7d5d, 0x55c0, 0x62d9, 0xb5fc, 0x1996, 0x0, 0x1);
        gbc.writeMem(0xefd8, { 0x9c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0xefd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xefd8));
        // 9C 0054
        gbc.setState(0x5be, 0xdd38, 0xf780, 0x7df8, 0x9cdf, 0xef11, 0x0, 0x1);
        gbc.writeMem(0x5be, { 0x9c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdd38, gbc.sp());
        EXPECT(0x5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0055
        gbc.setState(0x7109, 0x894, 0x4dc0, 0xa99f, 0x86eb, 0x45bd, 0x0, 0x1);
        gbc.writeMem(0x7109, { 0x9c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x894, gbc.sp());
        EXPECT(0x710a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0056
        gbc.setState(0xded, 0x6002, 0x1cb0, 0x780b, 0xf42f, 0x5469, 0x0, 0x1);
        gbc.writeMem(0xded, { 0x9c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6002, gbc.sp());
        EXPECT(0xdee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0058
        gbc.setState(0x4d5b, 0x5e4c, 0x2ae0, 0x188a, 0xa351, 0xd28a, 0x0, 0x1);
        gbc.writeMem(0x4d5b, { 0x9c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5e4c, gbc.sp());
        EXPECT(0x4d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0059
        gbc.setState(0x7cf5, 0xf7a0, 0xf520, 0xc251, 0x6157, 0xc92c, 0x0, 0x0);
        gbc.writeMem(0x7cf5, { 0x9c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf7a0, gbc.sp());
        EXPECT(0x7cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 005A
        gbc.setState(0x2f58, 0xcb75, 0x7150, 0xff3b, 0x37bb, 0x6753, 0x0, 0x1);
        gbc.writeMem(0x2f58, { 0x9c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcb75, gbc.sp());
        EXPECT(0x2f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 005B
        gbc.setState(0xe6d8, 0xfb54, 0x3920, 0xa80a, 0x1304, 0xee23, 0x0, 0x0);
        gbc.writeMem(0xe6d8, { 0x9c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfb54, gbc.sp());
        EXPECT(0xe6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe6d8));
        // 9C 005D
        gbc.setState(0xf7b, 0x9afb, 0xa6c0, 0xb282, 0x2e6f, 0xd716, 0x0, 0x1);
        gbc.writeMem(0xf7b, { 0x9c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9afb, gbc.sp());
        EXPECT(0xf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 005F
        gbc.setState(0xdd92, 0xa877, 0x1440, 0x597c, 0x4d2b, 0x50e7, 0x0, 0x1);
        gbc.writeMem(0xdd92, { 0x9c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa877, gbc.sp());
        EXPECT(0xdd93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xdd92));
        // 9C 0060
        gbc.setState(0xc4fc, 0xaa7b, 0x77e0, 0xae4c, 0xae7c, 0xb172, 0x1, 0x0);
        gbc.writeMem(0xc4fc, { 0x9c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xaa7b, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc4fc));
        // 9C 0061
        gbc.setState(0x1bd2, 0xe5d5, 0x36b0, 0x43aa, 0x29e2, 0xb007, 0x1, 0x0);
        gbc.writeMem(0x1bd2, { 0x9c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe5d5, gbc.sp());
        EXPECT(0x1bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0062
        gbc.setState(0xca8, 0x2a32, 0x8a80, 0xb7c2, 0x8053, 0x3e0d, 0x1, 0x0);
        gbc.writeMem(0xca8, { 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2a32, gbc.sp());
        EXPECT(0xca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0063
        gbc.setState(0x3ddd, 0x4b9e, 0xbbe0, 0x7454, 0x4020, 0xa5b6, 0x0, 0x0);
        gbc.writeMem(0x3ddd, { 0x9c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4b9e, gbc.sp());
        EXPECT(0x3dde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0064
        gbc.setState(0x37cf, 0xeb23, 0xe650, 0x7206, 0x23dd, 0x8c49, 0x0, 0x0);
        gbc.writeMem(0x37cf, { 0x9c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xeb23, gbc.sp());
        EXPECT(0x37d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0065
        gbc.setState(0x8611, 0x22fe, 0x2560, 0x6492, 0x7f2b, 0x6c70, 0x0, 0x0);
        gbc.writeMem(0x8611, { 0x9c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x22fe, gbc.sp());
        EXPECT(0x8612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8611));
        // 9C 0066
        gbc.setState(0x90c3, 0x963d, 0x2700, 0x866a, 0xe81a, 0x742c, 0x0, 0x0);
        gbc.writeMem(0x90c3, { 0x9c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x963d, gbc.sp());
        EXPECT(0x90c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x90c3));
        // 9C 0067
        gbc.setState(0xcee, 0x13cb, 0xdee0, 0x941e, 0xf684, 0x387e, 0x0, 0x0);
        gbc.writeMem(0xcee, { 0x9c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x13cb, gbc.sp());
        EXPECT(0xcef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0069
        gbc.setState(0xcfb4, 0xb19b, 0x8680, 0xcc4a, 0xdd5a, 0xd3f4, 0x0, 0x1);
        gbc.writeMem(0xcfb4, { 0x9c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb19b, gbc.sp());
        EXPECT(0xcfb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcfb4));
        // 9C 006A
        gbc.setState(0x561a, 0x9447, 0xde80, 0xb1ef, 0xd4, 0xfa7f, 0x0, 0x1);
        gbc.writeMem(0x561a, { 0x9c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9447, gbc.sp());
        EXPECT(0x561b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 006B
        gbc.setState(0x39a8, 0x143b, 0xa1d0, 0x43fd, 0xbcd9, 0xb7c1, 0x1, 0x1);
        gbc.writeMem(0x39a8, { 0x9c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x143b, gbc.sp());
        EXPECT(0x39a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 006C
        gbc.setState(0x6e49, 0x20e, 0x7000, 0xd57c, 0x976d, 0x6bb0, 0x0, 0x0);
        gbc.writeMem(0x6e49, { 0x9c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x20e, gbc.sp());
        EXPECT(0x6e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 006D
        gbc.setState(0x5309, 0xf594, 0xd700, 0xbae3, 0x5cff, 0x27cd, 0x1, 0x1);
        gbc.writeMem(0x5309, { 0x9c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf594, gbc.sp());
        EXPECT(0x530a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 006E
        gbc.setState(0xd7c5, 0xc97a, 0x1ed0, 0x318, 0xcfc1, 0x5e63, 0x1, 0x1);
        gbc.writeMem(0xd7c5, { 0x9c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc97a, gbc.sp());
        EXPECT(0xd7c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd7c5));
        // 9C 006F
        gbc.setState(0xd89b, 0xc782, 0xb060, 0xbe0, 0xa5e, 0x499, 0x1, 0x1);
        gbc.writeMem(0xd89b, { 0x9c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc782, gbc.sp());
        EXPECT(0xd89c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd89b));
        // 9C 0070
        gbc.setState(0x72f4, 0xcb41, 0x99f0, 0x53df, 0xee94, 0xbd5b, 0x1, 0x1);
        gbc.writeMem(0x72f4, { 0x9c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcb41, gbc.sp());
        EXPECT(0x72f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0071
        gbc.setState(0xd30d, 0xb817, 0x3100, 0xfa40, 0x2d4c, 0xceaf, 0x0, 0x1);
        gbc.writeMem(0xd30d, { 0x9c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb817, gbc.sp());
        EXPECT(0xd30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd30d));
        // 9C 0072
        gbc.setState(0x492c, 0x8139, 0x9e10, 0x849e, 0x7127, 0x8807, 0x1, 0x0);
        gbc.writeMem(0x492c, { 0x9c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8139, gbc.sp());
        EXPECT(0x492d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0073
        gbc.setState(0x64a7, 0xa759, 0x7b30, 0x2100, 0xfefd, 0x3341, 0x0, 0x0);
        gbc.writeMem(0x64a7, { 0x9c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa759, gbc.sp());
        EXPECT(0x64a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0074
        gbc.setState(0x68f6, 0xcb97, 0x12d0, 0xe612, 0x7c97, 0xef7b, 0x1, 0x0);
        gbc.writeMem(0x68f6, { 0x9c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcb97, gbc.sp());
        EXPECT(0x68f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0075
        gbc.setState(0x663c, 0x5d8, 0xdee0, 0xe8f8, 0x8a65, 0x1e06, 0x0, 0x1);
        gbc.writeMem(0x663c, { 0x9c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5d8, gbc.sp());
        EXPECT(0x663d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0076
        gbc.setState(0x5e0f, 0xb4c0, 0x1000, 0xa103, 0xd015, 0xb29d, 0x1, 0x0);
        gbc.writeMem(0x5e0f, { 0x9c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb4c0, gbc.sp());
        EXPECT(0x5e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0077
        gbc.setState(0x342a, 0xf4ef, 0x81b0, 0x9a53, 0xac77, 0xdc81, 0x0, 0x1);
        gbc.writeMem(0x342a, { 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf4ef, gbc.sp());
        EXPECT(0x342b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0078
        gbc.setState(0x8895, 0xfba1, 0xda10, 0xd0ba, 0x487d, 0x234b, 0x0, 0x1);
        gbc.writeMem(0x8895, { 0x9c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfba1, gbc.sp());
        EXPECT(0x8896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8895));
        // 9C 007A
        gbc.setState(0xa3dc, 0x3189, 0x6600, 0x1ee3, 0xa2a5, 0x4c12, 0x1, 0x0);
        gbc.writeMem(0xa3dc, { 0x9c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3189, gbc.sp());
        EXPECT(0xa3dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa3dc));
        // 9C 007B
        gbc.setState(0xcb59, 0xe1b0, 0x37a0, 0xc086, 0x655c, 0xeb36, 0x0, 0x0);
        gbc.writeMem(0xcb59, { 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe1b0, gbc.sp());
        EXPECT(0xcb5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcb59));
        // 9C 007C
        gbc.setState(0xcbb4, 0xf5f5, 0xb1d0, 0x30c2, 0x710e, 0xaf72, 0x1, 0x0);
        gbc.writeMem(0xcbb4, { 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf5f5, gbc.sp());
        EXPECT(0xcbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcbb4));
        // 9C 007D
        gbc.setState(0x367f, 0x28c1, 0xe1d0, 0xf49f, 0x3911, 0x19ac, 0x0, 0x1);
        gbc.writeMem(0x367f, { 0x9c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x28c1, gbc.sp());
        EXPECT(0x3680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 007E
        gbc.setState(0x8c1b, 0x568d, 0x2ae0, 0x20fc, 0xe483, 0xf363, 0x1, 0x1);
        gbc.writeMem(0x8c1b, { 0x9c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x568d, gbc.sp());
        EXPECT(0x8c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8c1b));
        // 9C 007F
        gbc.setState(0x5810, 0x41df, 0xde40, 0xd9f8, 0xf063, 0x7cc3, 0x0, 0x0);
        gbc.writeMem(0x5810, { 0x9c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x41df, gbc.sp());
        EXPECT(0x5811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0080
        gbc.setState(0x8095, 0x3a3f, 0x80d0, 0x879a, 0x5a09, 0x43d4, 0x0, 0x0);
        gbc.writeMem(0x8095, { 0x9c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3a3f, gbc.sp());
        EXPECT(0x8096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8095));
        // 9C 0081
        gbc.setState(0x5884, 0x3af9, 0xedc0, 0x2c2d, 0xaf3d, 0xbc4a, 0x1, 0x0);
        gbc.writeMem(0x5884, { 0x9c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0x5885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0082
        gbc.setState(0x80de, 0xc66c, 0x25d0, 0xef7e, 0xf0ef, 0x4fa1, 0x1, 0x0);
        gbc.writeMem(0x80de, { 0x9c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc66c, gbc.sp());
        EXPECT(0x80df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x80de));
        // 9C 0083
        gbc.setState(0x3d21, 0xb7d0, 0x7e20, 0x5c0a, 0xd6fb, 0x3afe, 0x0, 0x0);
        gbc.writeMem(0x3d21, { 0x9c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb7d0, gbc.sp());
        EXPECT(0x3d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0084
        gbc.setState(0x2c7f, 0x7363, 0x2810, 0x6585, 0x4944, 0x4523, 0x0, 0x0);
        gbc.writeMem(0x2c7f, { 0x9c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7363, gbc.sp());
        EXPECT(0x2c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0085
        gbc.setState(0x9af1, 0x1893, 0x4850, 0x71be, 0x3b04, 0x467, 0x1, 0x0);
        gbc.writeMem(0x9af1, { 0x9c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1893, gbc.sp());
        EXPECT(0x9af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9af1));
        // 9C 0086
        gbc.setState(0xac38, 0xe246, 0x41a0, 0x9c18, 0x101e, 0xa075, 0x0, 0x0);
        gbc.writeMem(0xac38, { 0x9c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe246, gbc.sp());
        EXPECT(0xac39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xac38));
        // 9C 0087
        gbc.setState(0x1715, 0x2a7f, 0x2490, 0x8d93, 0x87e3, 0x77e4, 0x1, 0x1);
        gbc.writeMem(0x1715, { 0x9c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0x1716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0088
        gbc.setState(0x87e3, 0x818d, 0xe930, 0xfde0, 0x322a, 0xfb17, 0x1, 0x1);
        gbc.writeMem(0x87e3, { 0x9c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x818d, gbc.sp());
        EXPECT(0x87e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x87e3));
        // 9C 0089
        gbc.setState(0x8c3b, 0x8abd, 0x27f0, 0xe025, 0x5c39, 0x224d, 0x1, 0x0);
        gbc.writeMem(0x8c3b, { 0x9c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8abd, gbc.sp());
        EXPECT(0x8c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8c3b));
        // 9C 008A
        gbc.setState(0x147b, 0x40d1, 0x1cb0, 0x5f91, 0x3db1, 0x690, 0x0, 0x1);
        gbc.writeMem(0x147b, { 0x9c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x40d1, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 008B
        gbc.setState(0x6f2a, 0xabb0, 0x6a70, 0x878c, 0x6cb5, 0x47e, 0x1, 0x1);
        gbc.writeMem(0x6f2a, { 0x9c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xabb0, gbc.sp());
        EXPECT(0x6f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 008C
        gbc.setState(0x23cb, 0x5192, 0x53c0, 0x94c9, 0x2729, 0xef9f, 0x0, 0x0);
        gbc.writeMem(0x23cb, { 0x9c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5192, gbc.sp());
        EXPECT(0x23cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 008D
        gbc.setState(0x8009, 0x509, 0xea80, 0x7baf, 0x82f1, 0xc59a, 0x1, 0x0);
        gbc.writeMem(0x8009, { 0x9c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x509, gbc.sp());
        EXPECT(0x800a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8009));
        // 9C 008E
        gbc.setState(0xec6f, 0x1815, 0x9540, 0xb88, 0xfc7e, 0xaa64, 0x1, 0x1);
        gbc.writeMem(0xec6f, { 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1815, gbc.sp());
        EXPECT(0xec70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xec6f));
        // 9C 008F
        gbc.setState(0xe995, 0x3748, 0x6e40, 0xae4e, 0x1e51, 0x790f, 0x1, 0x1);
        gbc.writeMem(0xe995, { 0x9c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3748, gbc.sp());
        EXPECT(0xe996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe995));
        // 9C 0090
        gbc.setState(0x40eb, 0x5762, 0x6360, 0x9c49, 0x36e7, 0xb993, 0x1, 0x0);
        gbc.writeMem(0x40eb, { 0x9c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5762, gbc.sp());
        EXPECT(0x40ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0091
        gbc.setState(0x424b, 0x36d9, 0x59d0, 0xc4c3, 0x2782, 0x5e73, 0x1, 0x1);
        gbc.writeMem(0x424b, { 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x36d9, gbc.sp());
        EXPECT(0x424c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0092
        gbc.setState(0x8e28, 0xd6ae, 0x5700, 0x3c3a, 0x211e, 0xfc1f, 0x0, 0x1);
        gbc.writeMem(0x8e28, { 0x9c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd6ae, gbc.sp());
        EXPECT(0x8e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8e28));
        // 9C 0093
        gbc.setState(0x3817, 0xdc9d, 0x6980, 0xdcd6, 0x161d, 0x879c, 0x1, 0x1);
        gbc.writeMem(0x3817, { 0x9c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdc9d, gbc.sp());
        EXPECT(0x3818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0094
        gbc.setState(0x9bb7, 0xb7ba, 0xce60, 0xeb28, 0x3e1d, 0x32d7, 0x0, 0x0);
        gbc.writeMem(0x9bb7, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb7ba, gbc.sp());
        EXPECT(0x9bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9bb7));
        // 9C 0095
        gbc.setState(0xe080, 0xd0d0, 0x2fb0, 0x3f97, 0x7565, 0xb4f3, 0x1, 0x0);
        gbc.writeMem(0xe080, { 0x9c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd0d0, gbc.sp());
        EXPECT(0xe081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe080));
        // 9C 0097
        gbc.setState(0x6f7e, 0x6c23, 0xf460, 0x6aff, 0x1bb8, 0x17b6, 0x1, 0x0);
        gbc.writeMem(0x6f7e, { 0x9c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6c23, gbc.sp());
        EXPECT(0x6f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0098
        gbc.setState(0xeb92, 0x1ff4, 0x3f30, 0x376, 0x8862, 0x16a3, 0x1, 0x0);
        gbc.writeMem(0xeb92, { 0x9c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1ff4, gbc.sp());
        EXPECT(0xeb93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xeb92));
        // 9C 0099
        gbc.setState(0x7fa2, 0xd4f0, 0xdd70, 0xb5cd, 0xd02d, 0x8c71, 0x1, 0x1);
        gbc.writeMem(0x7fa2, { 0x9c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd4f0, gbc.sp());
        EXPECT(0x7fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 009A
        gbc.setState(0x4807, 0xee4, 0xf770, 0x1258, 0xc9b3, 0xfdcc, 0x1, 0x1);
        gbc.writeMem(0x4807, { 0x9c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xee4, gbc.sp());
        EXPECT(0x4808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 009B
        gbc.setState(0x5a9c, 0x40a7, 0x79a0, 0x3c1b, 0xa76d, 0xafe7, 0x1, 0x0);
        gbc.writeMem(0x5a9c, { 0x9c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x40a7, gbc.sp());
        EXPECT(0x5a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 009C
        gbc.setState(0x47f8, 0x4a3c, 0x4050, 0x7ff2, 0x90bb, 0x5396, 0x1, 0x1);
        gbc.writeMem(0x47f8, { 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4a3c, gbc.sp());
        EXPECT(0x47f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 009D
        gbc.setState(0x826e, 0xd298, 0x3d90, 0xe198, 0x5760, 0xc820, 0x0, 0x1);
        gbc.writeMem(0x826e, { 0x9c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd298, gbc.sp());
        EXPECT(0x826f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x826e));
        // 9C 009E
        gbc.setState(0x61c1, 0x1983, 0x6730, 0xf6ff, 0x6f3b, 0x11, 0x1, 0x0);
        gbc.writeMem(0x61c1, { 0x9c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1983, gbc.sp());
        EXPECT(0x61c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 009F
        gbc.setState(0xe787, 0x71de, 0x7ca0, 0xbdf3, 0x20f2, 0x2c64, 0x0, 0x0);
        gbc.writeMem(0xe787, { 0x9c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x71de, gbc.sp());
        EXPECT(0xe788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe787));
        // 9C 00A0
        gbc.setState(0x405f, 0xcf8c, 0x82f0, 0xb554, 0x2ad5, 0xfde5, 0x0, 0x1);
        gbc.writeMem(0x405f, { 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcf8c, gbc.sp());
        EXPECT(0x4060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00A1
        gbc.setState(0x80ec, 0x725c, 0x93f0, 0x654b, 0xfe5c, 0x6783, 0x1, 0x1);
        gbc.writeMem(0x80ec, { 0x9c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x725c, gbc.sp());
        EXPECT(0x80ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x80ec));
        // 9C 00A2
        gbc.setState(0x1abb, 0x3c51, 0x82f0, 0x1b35, 0x1e68, 0x2816, 0x0, 0x1);
        gbc.writeMem(0x1abb, { 0x9c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3c51, gbc.sp());
        EXPECT(0x1abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00A3
        gbc.setState(0xd5aa, 0xb7d0, 0xaee0, 0x21d6, 0xf2c6, 0x3598, 0x0, 0x1);
        gbc.writeMem(0xd5aa, { 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb7d0, gbc.sp());
        EXPECT(0xd5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd5aa));
        // 9C 00A4
        gbc.setState(0x4186, 0xfe98, 0x4e30, 0x7196, 0x6101, 0xe271, 0x1, 0x1);
        gbc.writeMem(0x4186, { 0x9c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfe98, gbc.sp());
        EXPECT(0x4187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00A5
        gbc.setState(0x807e, 0xe2f0, 0xa930, 0x45f7, 0xe57e, 0xf14b, 0x0, 0x0);
        gbc.writeMem(0x807e, { 0x9c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe2f0, gbc.sp());
        EXPECT(0x807f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x807e));
        // 9C 00A6
        gbc.setState(0x26e5, 0xb97c, 0x1180, 0xa115, 0xae1c, 0x3f72, 0x0, 0x0);
        gbc.writeMem(0x26e5, { 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb97c, gbc.sp());
        EXPECT(0x26e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00A7
        gbc.setState(0x41f6, 0x5369, 0xdcb0, 0x1590, 0xa96b, 0x9439, 0x0, 0x1);
        gbc.writeMem(0x41f6, { 0x9c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5369, gbc.sp());
        EXPECT(0x41f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00A8
        gbc.setState(0xa3e3, 0x960a, 0xd060, 0xd95c, 0xb0e2, 0xcbaf, 0x1, 0x0);
        gbc.writeMem(0xa3e3, { 0x9c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x960a, gbc.sp());
        EXPECT(0xa3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa3e3));
        // 9C 00A9
        gbc.setState(0x484e, 0xfc38, 0xed70, 0xbdea, 0x5e03, 0xfa6c, 0x1, 0x0);
        gbc.writeMem(0x484e, { 0x9c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfc38, gbc.sp());
        EXPECT(0x484f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00AA
        gbc.setState(0x9941, 0x6fbe, 0x6040, 0x3b7, 0x967d, 0x5477, 0x1, 0x0);
        gbc.writeMem(0x9941, { 0x9c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6fbe, gbc.sp());
        EXPECT(0x9942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9941));
        // 9C 00AB
        gbc.setState(0x9461, 0x946f, 0x1790, 0x1b32, 0x302d, 0xd8b4, 0x1, 0x1);
        gbc.writeMem(0x9461, { 0x9c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x946f, gbc.sp());
        EXPECT(0x9462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9461));
        // 9C 00AC
        gbc.setState(0x6afd, 0xc041, 0xd260, 0xd990, 0xa8a2, 0x97d, 0x0, 0x0);
        gbc.writeMem(0x6afd, { 0x9c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc041, gbc.sp());
        EXPECT(0x6afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00AD
        gbc.setState(0xeb84, 0xa275, 0xa130, 0x39f3, 0x3b07, 0x9088, 0x0, 0x0);
        gbc.writeMem(0xeb84, { 0x9c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa275, gbc.sp());
        EXPECT(0xeb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xeb84));
        // 9C 00AE
        gbc.setState(0x74ec, 0xa267, 0x8700, 0xe077, 0xe726, 0xb6c2, 0x1, 0x0);
        gbc.writeMem(0x74ec, { 0x9c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa267, gbc.sp());
        EXPECT(0x74ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00AF
        gbc.setState(0x68cd, 0x9c32, 0x2c10, 0x9eb3, 0xd7ce, 0x7ca8, 0x0, 0x0);
        gbc.writeMem(0x68cd, { 0x9c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9c32, gbc.sp());
        EXPECT(0x68ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00B0
        gbc.setState(0x77e3, 0x492d, 0x6620, 0x3446, 0xefa9, 0x945, 0x1, 0x0);
        gbc.writeMem(0x77e3, { 0x9c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x492d, gbc.sp());
        EXPECT(0x77e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00B1
        gbc.setState(0xe582, 0x5065, 0x9470, 0x9be, 0x6f0, 0xccde, 0x1, 0x1);
        gbc.writeMem(0xe582, { 0x9c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5065, gbc.sp());
        EXPECT(0xe583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe582));
        // 9C 00B3
        gbc.setState(0xa3da, 0xcfc0, 0xd980, 0xc34f, 0xc4de, 0xea26, 0x1, 0x0);
        gbc.writeMem(0xa3da, { 0x9c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcfc0, gbc.sp());
        EXPECT(0xa3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa3da));
        // 9C 00B4
        gbc.setState(0x8c4f, 0x2620, 0x5310, 0xdbb1, 0x148c, 0x316b, 0x1, 0x0);
        gbc.writeMem(0x8c4f, { 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2620, gbc.sp());
        EXPECT(0x8c50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8c4f));
        // 9C 00B5
        gbc.setState(0x6799, 0x8933, 0x5340, 0x1df5, 0xbcf3, 0x4737, 0x1, 0x0);
        gbc.writeMem(0x6799, { 0x9c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8933, gbc.sp());
        EXPECT(0x679a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00B6
        gbc.setState(0x39c2, 0x33f4, 0x8aa0, 0x2a32, 0x251a, 0xaacd, 0x1, 0x1);
        gbc.writeMem(0x39c2, { 0x9c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x33f4, gbc.sp());
        EXPECT(0x39c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00B7
        gbc.setState(0x319a, 0x2360, 0xb760, 0x104e, 0xa324, 0x21fa, 0x1, 0x1);
        gbc.writeMem(0x319a, { 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2360, gbc.sp());
        EXPECT(0x319b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00B8
        gbc.setState(0xafd6, 0x5328, 0x75b0, 0xf047, 0xc2c6, 0xc527, 0x1, 0x1);
        gbc.writeMem(0xafd6, { 0x9c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5328, gbc.sp());
        EXPECT(0xafd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xafd6));
        // 9C 00B9
        gbc.setState(0x3a06, 0x4e35, 0xd990, 0xab0b, 0xc8b, 0xdbf3, 0x1, 0x0);
        gbc.writeMem(0x3a06, { 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4e35, gbc.sp());
        EXPECT(0x3a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00BA
        gbc.setState(0xd2b5, 0x3e2a, 0x5590, 0x3640, 0x74e0, 0xa7e8, 0x0, 0x0);
        gbc.writeMem(0xd2b5, { 0x9c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3e2a, gbc.sp());
        EXPECT(0xd2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd2b5));
        // 9C 00BB
        gbc.setState(0xd397, 0x572e, 0x9d90, 0x5566, 0x2774, 0xbb70, 0x1, 0x0);
        gbc.writeMem(0xd397, { 0x9c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x572e, gbc.sp());
        EXPECT(0xd398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd397));
        // 9C 00BC
        gbc.setState(0x9319, 0x5e0a, 0x4cd0, 0x5aa1, 0x6486, 0xb9d4, 0x0, 0x1);
        gbc.writeMem(0x9319, { 0x9c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5e0a, gbc.sp());
        EXPECT(0x931a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9319));
        // 9C 00BD
        gbc.setState(0x377e, 0x342e, 0x1a20, 0x97a8, 0x9706, 0x1994, 0x0, 0x1);
        gbc.writeMem(0x377e, { 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x342e, gbc.sp());
        EXPECT(0x377f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00BE
        gbc.setState(0xa109, 0x2670, 0x77c0, 0x4106, 0x30e2, 0xd8a5, 0x0, 0x0);
        gbc.writeMem(0xa109, { 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2670, gbc.sp());
        EXPECT(0xa10a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa109));
        // 9C 00BF
        gbc.setState(0xc7d8, 0x65fe, 0xba70, 0x4489, 0xd134, 0x75ee, 0x1, 0x1);
        gbc.writeMem(0xc7d8, { 0x9c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x65fe, gbc.sp());
        EXPECT(0xc7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc7d8));
        // 9C 00C0
        gbc.setState(0xe21d, 0x3bfd, 0x5240, 0x52fa, 0x38c, 0xed76, 0x0, 0x0);
        gbc.writeMem(0xe21d, { 0x9c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3bfd, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe21d));
        // 9C 00C1
        gbc.setState(0xb106, 0x7910, 0xdd70, 0x394c, 0x1164, 0x2469, 0x1, 0x0);
        gbc.writeMem(0xb106, { 0x9c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7910, gbc.sp());
        EXPECT(0xb107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb106));
        // 9C 00C2
        gbc.setState(0x8198, 0x9173, 0xabb0, 0xa159, 0xd82e, 0x8c5b, 0x0, 0x1);
        gbc.writeMem(0x8198, { 0x9c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9173, gbc.sp());
        EXPECT(0x8199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8198));
        // 9C 00C3
        gbc.setState(0x2ceb, 0x27a7, 0xa550, 0x40b7, 0xd097, 0xa7d2, 0x0, 0x0);
        gbc.writeMem(0x2ceb, { 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x27a7, gbc.sp());
        EXPECT(0x2cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00C4
        gbc.setState(0x4c83, 0x3f83, 0x4410, 0x3c5a, 0x785c, 0xd286, 0x1, 0x0);
        gbc.writeMem(0x4c83, { 0x9c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3f83, gbc.sp());
        EXPECT(0x4c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00C5
        gbc.setState(0x865e, 0x7c99, 0xd3d0, 0xa9ea, 0x9859, 0xb4aa, 0x0, 0x0);
        gbc.writeMem(0x865e, { 0x9c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7c99, gbc.sp());
        EXPECT(0x865f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x865e));
        // 9C 00C6
        gbc.setState(0x75e4, 0x35fd, 0x4e90, 0x76fb, 0xd389, 0xd7fa, 0x1, 0x0);
        gbc.writeMem(0x75e4, { 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x35fd, gbc.sp());
        EXPECT(0x75e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00C7
        gbc.setState(0xadfd, 0x38f4, 0x9a80, 0xd47c, 0x7701, 0x2e23, 0x0, 0x1);
        gbc.writeMem(0xadfd, { 0x9c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x38f4, gbc.sp());
        EXPECT(0xadfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xadfd));
        // 9C 00C8
        gbc.setState(0x9491, 0xf4dc, 0x78f0, 0x91f6, 0x9589, 0x86c6, 0x0, 0x0);
        gbc.writeMem(0x9491, { 0x9c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf4dc, gbc.sp());
        EXPECT(0x9492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9491));
        // 9C 00C9
        gbc.setState(0xb7c3, 0x69e8, 0xca90, 0x5a90, 0xda1b, 0x1713, 0x0, 0x1);
        gbc.writeMem(0xb7c3, { 0x9c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x69e8, gbc.sp());
        EXPECT(0xb7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb7c3));
        // 9C 00CA
        gbc.setState(0xb48e, 0xd572, 0x7250, 0xa1a6, 0x7efe, 0x2bd3, 0x1, 0x0);
        gbc.writeMem(0xb48e, { 0x9c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd572, gbc.sp());
        EXPECT(0xb48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb48e));
        // 9C 00CB
        gbc.setState(0xbad, 0x16e2, 0x2a30, 0xf54, 0x7e6a, 0x4c58, 0x1, 0x1);
        gbc.writeMem(0xbad, { 0x9c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x16e2, gbc.sp());
        EXPECT(0xbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00CC
        gbc.setState(0x2177, 0x4c86, 0xea40, 0xbd09, 0xebd3, 0xe0df, 0x0, 0x0);
        gbc.writeMem(0x2177, { 0x9c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4c86, gbc.sp());
        EXPECT(0x2178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00CD
        gbc.setState(0xb903, 0xaaea, 0xfc70, 0xe9b1, 0xf834, 0xdb45, 0x1, 0x1);
        gbc.writeMem(0xb903, { 0x9c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xaaea, gbc.sp());
        EXPECT(0xb904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb903));
        // 9C 00CE
        gbc.setState(0x4cf3, 0xc451, 0xe0d0, 0x5a99, 0xb622, 0x64fb, 0x1, 0x1);
        gbc.writeMem(0x4cf3, { 0x9c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc451, gbc.sp());
        EXPECT(0x4cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00CF
        gbc.setState(0x970f, 0xb9bc, 0x74f0, 0xd6ff, 0x604c, 0xfde3, 0x1, 0x1);
        gbc.writeMem(0x970f, { 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb9bc, gbc.sp());
        EXPECT(0x9710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x970f));
        // 9C 00D0
        gbc.setState(0x1a4f, 0x6355, 0xf60, 0x70ff, 0xbea6, 0x66f5, 0x0, 0x0);
        gbc.writeMem(0x1a4f, { 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6355, gbc.sp());
        EXPECT(0x1a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00D1
        gbc.setState(0xe4f5, 0xa7f2, 0xf2c0, 0x9248, 0x12e9, 0x7a83, 0x1, 0x0);
        gbc.writeMem(0xe4f5, { 0x9c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa7f2, gbc.sp());
        EXPECT(0xe4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe4f5));
        // 9C 00D2
        gbc.setState(0x2aa1, 0x448e, 0x6100, 0x89e1, 0x275d, 0x34a7, 0x0, 0x1);
        gbc.writeMem(0x2aa1, { 0x9c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x448e, gbc.sp());
        EXPECT(0x2aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00D3
        gbc.setState(0xbac9, 0xc7f8, 0xfd80, 0xc6a4, 0xd40a, 0x5061, 0x0, 0x0);
        gbc.writeMem(0xbac9, { 0x9c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc7f8, gbc.sp());
        EXPECT(0xbaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbac9));
        // 9C 00D4
        gbc.setState(0x15cb, 0xbaa4, 0x6f90, 0xd08d, 0x5441, 0x5cd0, 0x0, 0x1);
        gbc.writeMem(0x15cb, { 0x9c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbaa4, gbc.sp());
        EXPECT(0x15cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00D5
        gbc.setState(0xd462, 0x54e, 0x9cc0, 0x3968, 0xbf80, 0x545, 0x0, 0x1);
        gbc.writeMem(0xd462, { 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x54e, gbc.sp());
        EXPECT(0xd463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd462));
        // 9C 00D6
        gbc.setState(0xed7b, 0xb177, 0xd1b0, 0x2f60, 0x56f0, 0x27e7, 0x1, 0x1);
        gbc.writeMem(0xed7b, { 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb177, gbc.sp());
        EXPECT(0xed7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xed7b));
        // 9C 00D7
        gbc.setState(0x8438, 0x2b5d, 0xffe0, 0x12a8, 0x3260, 0x3ace, 0x0, 0x0);
        gbc.writeMem(0x8438, { 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2b5d, gbc.sp());
        EXPECT(0x8439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8438));
        // 9C 00D8
        gbc.setState(0x6ef5, 0x22a4, 0x7d30, 0xc349, 0xd9fe, 0xcc2f, 0x1, 0x1);
        gbc.writeMem(0x6ef5, { 0x9c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x22a4, gbc.sp());
        EXPECT(0x6ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00D9
        gbc.setState(0x3cc4, 0x6ca4, 0x8420, 0x2c1d, 0x5a83, 0x933f, 0x0, 0x0);
        gbc.writeMem(0x3cc4, { 0x9c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6ca4, gbc.sp());
        EXPECT(0x3cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00DA
        gbc.setState(0xb41d, 0x4830, 0x7780, 0xcc01, 0x491b, 0x32d9, 0x1, 0x0);
        gbc.writeMem(0xb41d, { 0x9c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4830, gbc.sp());
        EXPECT(0xb41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb41d));
        // 9C 00DB
        gbc.setState(0xaa42, 0xd217, 0xad80, 0x599, 0xa977, 0xc88e, 0x1, 0x1);
        gbc.writeMem(0xaa42, { 0x9c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd217, gbc.sp());
        EXPECT(0xaa43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xaa42));
        // 9C 00DC
        gbc.setState(0xd045, 0x2a02, 0x6e0, 0xf49a, 0x77fd, 0x5c61, 0x0, 0x1);
        gbc.writeMem(0xd045, { 0x9c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2a02, gbc.sp());
        EXPECT(0xd046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd045));
        // 9C 00DD
        gbc.setState(0x90c5, 0x3e89, 0xd820, 0xa5d3, 0xf225, 0x999f, 0x0, 0x0);
        gbc.writeMem(0x90c5, { 0x9c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3e89, gbc.sp());
        EXPECT(0x90c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x90c5));
        // 9C 00DE
        gbc.setState(0x5a2, 0x4424, 0xa420, 0xdec3, 0xae1d, 0xa228, 0x0, 0x1);
        gbc.writeMem(0x5a2, { 0x9c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4424, gbc.sp());
        EXPECT(0x5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00DF
        gbc.setState(0x637f, 0x537f, 0xc300, 0x1b1d, 0xb3ea, 0x5e20, 0x1, 0x0);
        gbc.writeMem(0x637f, { 0x9c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x537f, gbc.sp());
        EXPECT(0x6380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00E0
        gbc.setState(0x5540, 0x28e6, 0xaef0, 0xfe94, 0xe21f, 0x1059, 0x0, 0x0);
        gbc.writeMem(0x5540, { 0x9c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x28e6, gbc.sp());
        EXPECT(0x5541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00E1
        gbc.setState(0x56de, 0x30d2, 0x5480, 0x5699, 0xa925, 0x9c93, 0x0, 0x1);
        gbc.writeMem(0x56de, { 0x9c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x30d2, gbc.sp());
        EXPECT(0x56df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00E2
        gbc.setState(0xefb6, 0x407b, 0x1310, 0x3050, 0x8088, 0x69cb, 0x0, 0x1);
        gbc.writeMem(0xefb6, { 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x407b, gbc.sp());
        EXPECT(0xefb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xefb6));
        // 9C 00E4
        gbc.setState(0x759f, 0xd57d, 0x2860, 0x9f8, 0x2d68, 0x1d65, 0x1, 0x1);
        gbc.writeMem(0x759f, { 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd57d, gbc.sp());
        EXPECT(0x75a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00E5
        gbc.setState(0x37ee, 0xc138, 0x3ce0, 0x7d07, 0x1ef4, 0xce4b, 0x0, 0x1);
        gbc.writeMem(0x37ee, { 0x9c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc138, gbc.sp());
        EXPECT(0x37ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00E6
        gbc.setState(0x81ae, 0xa2f6, 0xc010, 0x4e31, 0xd679, 0xb29a, 0x0, 0x1);
        gbc.writeMem(0x81ae, { 0x9c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa2f6, gbc.sp());
        EXPECT(0x81af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x81ae));
        // 9C 00E7
        gbc.setState(0xe04a, 0xa5d4, 0xa520, 0xaef7, 0x4c57, 0x5f27, 0x1, 0x0);
        gbc.writeMem(0xe04a, { 0x9c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa5d4, gbc.sp());
        EXPECT(0xe04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe04a));
        // 9C 00E8
        gbc.setState(0xc3b2, 0xd39b, 0x16a0, 0xb939, 0x4514, 0x197e, 0x1, 0x0);
        gbc.writeMem(0xc3b2, { 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd39b, gbc.sp());
        EXPECT(0xc3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc3b2));
        // 9C 00E9
        gbc.setState(0x1ed4, 0xed3f, 0x8310, 0x3b57, 0x4db8, 0x222d, 0x0, 0x0);
        gbc.writeMem(0x1ed4, { 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xed3f, gbc.sp());
        EXPECT(0x1ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00EA
        gbc.setState(0x9b94, 0x70d3, 0x3490, 0xb7d8, 0x1c0, 0x582a, 0x0, 0x0);
        gbc.writeMem(0x9b94, { 0x9c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x70d3, gbc.sp());
        EXPECT(0x9b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9b94));
        // 9C 00EB
        gbc.setState(0x3843, 0xba03, 0x8210, 0xc33c, 0x2ce7, 0x5412, 0x1, 0x0);
        gbc.writeMem(0x3843, { 0x9c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xba03, gbc.sp());
        EXPECT(0x3844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00EC
        gbc.setState(0x4fb9, 0x8a8e, 0x4120, 0x1ddd, 0xaaa2, 0x9bf0, 0x1, 0x1);
        gbc.writeMem(0x4fb9, { 0x9c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8a8e, gbc.sp());
        EXPECT(0x4fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00ED
        gbc.setState(0x166a, 0xee26, 0x2bc0, 0xaf50, 0xbdaf, 0xe385, 0x0, 0x0);
        gbc.writeMem(0x166a, { 0x9c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xee26, gbc.sp());
        EXPECT(0x166b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00EE
        gbc.setState(0xcada, 0xd94c, 0x9df0, 0x4775, 0x8b22, 0x903a, 0x1, 0x0);
        gbc.writeMem(0xcada, { 0x9c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd94c, gbc.sp());
        EXPECT(0xcadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcada));
        // 9C 00EF
        gbc.setState(0x66f1, 0x3339, 0x70c0, 0x5fe3, 0x66b9, 0xe7c2, 0x0, 0x1);
        gbc.writeMem(0x66f1, { 0x9c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3339, gbc.sp());
        EXPECT(0x66f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00F0
        gbc.setState(0x605b, 0x73a9, 0xf600, 0x50d7, 0x132f, 0x29ae, 0x1, 0x0);
        gbc.writeMem(0x605b, { 0x9c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x73a9, gbc.sp());
        EXPECT(0x605c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00F1
        gbc.setState(0x3a65, 0x7850, 0x62f0, 0x38f0, 0xf2ed, 0xdabe, 0x0, 0x1);
        gbc.writeMem(0x3a65, { 0x9c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7850, gbc.sp());
        EXPECT(0x3a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00F2
        gbc.setState(0xaf9f, 0x6c4b, 0xf950, 0x51bb, 0xd2a2, 0xfa3d, 0x1, 0x1);
        gbc.writeMem(0xaf9f, { 0x9c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6c4b, gbc.sp());
        EXPECT(0xafa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xaf9f));
        // 9C 00F3
        gbc.setState(0x6bd6, 0x76cd, 0x5490, 0x9858, 0x3337, 0xde, 0x1, 0x0);
        gbc.writeMem(0x6bd6, { 0x9c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x76cd, gbc.sp());
        EXPECT(0x6bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00F4
        gbc.setState(0x1fde, 0x1db7, 0x69c0, 0x7532, 0x152f, 0xfa61, 0x1, 0x0);
        gbc.writeMem(0x1fde, { 0x9c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1db7, gbc.sp());
        EXPECT(0x1fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00F5
        gbc.setState(0x1acf, 0xa36c, 0x4010, 0x9265, 0x12d5, 0xe881, 0x0, 0x0);
        gbc.writeMem(0x1acf, { 0x9c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa36c, gbc.sp());
        EXPECT(0x1ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00F7
        gbc.setState(0xb747, 0xb446, 0x750, 0x9a21, 0x260b, 0xe1fd, 0x1, 0x0);
        gbc.writeMem(0xb747, { 0x9c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb446, gbc.sp());
        EXPECT(0xb748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb747));
        // 9C 00F8
        gbc.setState(0x58a0, 0x6ccb, 0xf360, 0x6d6c, 0x4671, 0x1d05, 0x1, 0x1);
        gbc.writeMem(0x58a0, { 0x9c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6ccb, gbc.sp());
        EXPECT(0x58a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00F9
        gbc.setState(0xbb9, 0xafb2, 0x6ab0, 0xcb85, 0xa739, 0x913f, 0x0, 0x1);
        gbc.writeMem(0xbb9, { 0x9c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xafb2, gbc.sp());
        EXPECT(0xbba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00FA
        gbc.setState(0x7643, 0xc4e5, 0xdd60, 0x9c91, 0x8551, 0xc968, 0x0, 0x1);
        gbc.writeMem(0x7643, { 0x9c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc4e5, gbc.sp());
        EXPECT(0x7644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00FB
        gbc.setState(0x1cc7, 0xa74a, 0x5780, 0xe747, 0xd282, 0x7816, 0x1, 0x0);
        gbc.writeMem(0x1cc7, { 0x9c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa74a, gbc.sp());
        EXPECT(0x1cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 00FC
        gbc.setState(0x3a12, 0x44a7, 0x7e40, 0xc96b, 0x9907, 0x690d, 0x1, 0x1);
        gbc.writeMem(0x3a12, { 0x9c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x44a7, gbc.sp());
        EXPECT(0x3a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00FD
        gbc.setState(0x8aa9, 0x8e1a, 0xa640, 0x4110, 0xef4c, 0x68e2, 0x1, 0x0);
        gbc.writeMem(0x8aa9, { 0x9c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8e1a, gbc.sp());
        EXPECT(0x8aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8aa9));
        // 9C 00FE
        gbc.setState(0x64a5, 0x41dc, 0xb290, 0x42fd, 0x8105, 0x49d5, 0x1, 0x0);
        gbc.writeMem(0x64a5, { 0x9c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x41dc, gbc.sp());
        EXPECT(0x64a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 00FF
        gbc.setState(0xbe4a, 0xbd85, 0x4b70, 0xc6b2, 0xcfec, 0x1db, 0x1, 0x1);
        gbc.writeMem(0xbe4a, { 0x9c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbd85, gbc.sp());
        EXPECT(0xbe4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbe4a));
        // 9C 0100
        gbc.setState(0xaa72, 0x33ab, 0xce50, 0xf36, 0xc8f9, 0x31b6, 0x1, 0x0);
        gbc.writeMem(0xaa72, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x33ab, gbc.sp());
        EXPECT(0xaa73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xaa72));
        // 9C 0101
        gbc.setState(0x296e, 0xccc1, 0xcdf0, 0xc3ed, 0x3d52, 0x7213, 0x0, 0x1);
        gbc.writeMem(0x296e, { 0x9c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xccc1, gbc.sp());
        EXPECT(0x296f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0102
        gbc.setState(0x6c3c, 0x8ccd, 0x5020, 0x6e76, 0xa695, 0x4b8, 0x0, 0x0);
        gbc.writeMem(0x6c3c, { 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8ccd, gbc.sp());
        EXPECT(0x6c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0103
        gbc.setState(0xad3a, 0xe6b2, 0x6040, 0x6fbe, 0xf281, 0x45fa, 0x1, 0x1);
        gbc.writeMem(0xad3a, { 0x9c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe6b2, gbc.sp());
        EXPECT(0xad3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xad3a));
        // 9C 0104
        gbc.setState(0x9b4a, 0x9388, 0x1630, 0xedc6, 0x5e85, 0x306c, 0x0, 0x1);
        gbc.writeMem(0x9b4a, { 0x9c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9388, gbc.sp());
        EXPECT(0x9b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9b4a));
        // 9C 0105
        gbc.setState(0x284b, 0xe7e1, 0x9ae0, 0xd76f, 0x86dc, 0xbbf0, 0x0, 0x1);
        gbc.writeMem(0x284b, { 0x9c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe7e1, gbc.sp());
        EXPECT(0x284c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0106
        gbc.setState(0xac91, 0xa913, 0xb1a0, 0x382f, 0x51b2, 0x4283, 0x1, 0x1);
        gbc.writeMem(0xac91, { 0x9c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa913, gbc.sp());
        EXPECT(0xac92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xac91));
        // 9C 0107
        gbc.setState(0xe2e4, 0xf4f5, 0xb870, 0xf918, 0x24ff, 0xbd02, 0x0, 0x0);
        gbc.writeMem(0xe2e4, { 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf4f5, gbc.sp());
        EXPECT(0xe2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe2e4));
        // 9C 0109
        gbc.setState(0xa62d, 0x5fa7, 0x3400, 0x5fdd, 0x899e, 0xbf0a, 0x0, 0x1);
        gbc.writeMem(0xa62d, { 0x9c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5fa7, gbc.sp());
        EXPECT(0xa62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa62d));
        // 9C 010A
        gbc.setState(0xa576, 0x25a6, 0xaf90, 0xbbd2, 0xbe69, 0x3b01, 0x0, 0x1);
        gbc.writeMem(0xa576, { 0x9c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x25a6, gbc.sp());
        EXPECT(0xa577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa576));
        // 9C 010B
        gbc.setState(0x54c4, 0x283b, 0x7850, 0x3f73, 0x19b9, 0xf19f, 0x1, 0x1);
        gbc.writeMem(0x54c4, { 0x9c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x283b, gbc.sp());
        EXPECT(0x54c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 010C
        gbc.setState(0x30cc, 0x4b61, 0x19a0, 0x68f3, 0x3097, 0xacee, 0x0, 0x1);
        gbc.writeMem(0x30cc, { 0x9c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4b61, gbc.sp());
        EXPECT(0x30cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 010D
        gbc.setState(0x35d6, 0x440c, 0xd4c0, 0x5f06, 0x6c5e, 0x3e1a, 0x0, 0x1);
        gbc.writeMem(0x35d6, { 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x440c, gbc.sp());
        EXPECT(0x35d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 010F
        gbc.setState(0x13bd, 0x275a, 0x22b0, 0x406f, 0xa443, 0xe6c0, 0x0, 0x1);
        gbc.writeMem(0x13bd, { 0x9c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x275a, gbc.sp());
        EXPECT(0x13be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0110
        gbc.setState(0xd5fa, 0xdfef, 0xa900, 0xe342, 0x172c, 0x4280, 0x1, 0x0);
        gbc.writeMem(0xd5fa, { 0x9c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdfef, gbc.sp());
        EXPECT(0xd5fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd5fa));
        // 9C 0111
        gbc.setState(0xb3c8, 0xb227, 0x6500, 0x725b, 0xe35d, 0xc7f9, 0x0, 0x1);
        gbc.writeMem(0xb3c8, { 0x9c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb227, gbc.sp());
        EXPECT(0xb3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb3c8));
        // 9C 0112
        gbc.setState(0x859c, 0x4b5, 0xea70, 0x5106, 0xee97, 0x6b54, 0x1, 0x0);
        gbc.writeMem(0x859c, { 0x9c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4b5, gbc.sp());
        EXPECT(0x859d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x859c));
        // 9C 0113
        gbc.setState(0x47d0, 0x7520, 0x4620, 0x75ca, 0x691c, 0x24b9, 0x1, 0x1);
        gbc.writeMem(0x47d0, { 0x9c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7520, gbc.sp());
        EXPECT(0x47d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0114
        gbc.setState(0x8146, 0xabd3, 0x11b0, 0xc718, 0x6326, 0x5d83, 0x1, 0x0);
        gbc.writeMem(0x8146, { 0x9c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xabd3, gbc.sp());
        EXPECT(0x8147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8146));
        // 9C 0115
        gbc.setState(0xd2a6, 0xcb46, 0x3480, 0x9354, 0x6397, 0x495d, 0x1, 0x1);
        gbc.writeMem(0xd2a6, { 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcb46, gbc.sp());
        EXPECT(0xd2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd2a6));
        // 9C 0116
        gbc.setState(0xe72d, 0x270f, 0xcc50, 0xdf18, 0x7352, 0x5997, 0x0, 0x0);
        gbc.writeMem(0xe72d, { 0x9c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x270f, gbc.sp());
        EXPECT(0xe72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe72d));
        // 9C 0117
        gbc.setState(0xd541, 0xfe6e, 0xb000, 0x183e, 0xcd17, 0x9beb, 0x0, 0x0);
        gbc.writeMem(0xd541, { 0x9c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfe6e, gbc.sp());
        EXPECT(0xd542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd541));
        // 9C 0118
        gbc.setState(0xc7ad, 0x1f23, 0x1450, 0x73ad, 0x3596, 0x6dd7, 0x1, 0x1);
        gbc.writeMem(0xc7ad, { 0x9c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1f23, gbc.sp());
        EXPECT(0xc7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc7ad));
        // 9C 0119
        gbc.setState(0xe32f, 0x50f5, 0xc1c0, 0x2adf, 0xa999, 0x654c, 0x0, 0x1);
        gbc.writeMem(0xe32f, { 0x9c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x50f5, gbc.sp());
        EXPECT(0xe330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe32f));
        // 9C 011B
        gbc.setState(0x7023, 0x34f6, 0xc8e0, 0x359f, 0x8433, 0x2aa6, 0x1, 0x0);
        gbc.writeMem(0x7023, { 0x9c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x34f6, gbc.sp());
        EXPECT(0x7024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 011C
        gbc.setState(0xa053, 0xa761, 0x9ea0, 0xde0a, 0xa41b, 0xd3b9, 0x1, 0x0);
        gbc.writeMem(0xa053, { 0x9c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa761, gbc.sp());
        EXPECT(0xa054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa053));
        // 9C 011E
        gbc.setState(0x3dff, 0xde49, 0xd520, 0x8b5f, 0xe6c9, 0x9363, 0x1, 0x1);
        gbc.writeMem(0x3dff, { 0x9c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xde49, gbc.sp());
        EXPECT(0x3e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 011F
        gbc.setState(0x203c, 0xe950, 0xe0e0, 0x8dd9, 0x5f3, 0xf43a, 0x1, 0x0);
        gbc.writeMem(0x203c, { 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe950, gbc.sp());
        EXPECT(0x203d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0122
        gbc.setState(0xd149, 0x4808, 0x3d60, 0x4c46, 0x507, 0xd002, 0x1, 0x1);
        gbc.writeMem(0xd149, { 0x9c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4808, gbc.sp());
        EXPECT(0xd14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd149));
        // 9C 0123
        gbc.setState(0xaee4, 0x9dc2, 0xeb0, 0xa327, 0x87d4, 0x1e42, 0x0, 0x0);
        gbc.writeMem(0xaee4, { 0x9c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9dc2, gbc.sp());
        EXPECT(0xaee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xaee4));
        // 9C 0124
        gbc.setState(0x35f9, 0x59e4, 0x8d10, 0xbb7d, 0x8be, 0xec2f, 0x1, 0x1);
        gbc.writeMem(0x35f9, { 0x9c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x59e4, gbc.sp());
        EXPECT(0x35fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0125
        gbc.setState(0x9b47, 0x7e1f, 0x3780, 0x6ec0, 0x852a, 0xa244, 0x1, 0x1);
        gbc.writeMem(0x9b47, { 0x9c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7e1f, gbc.sp());
        EXPECT(0x9b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9b47));
        // 9C 0126
        gbc.setState(0xcb40, 0x656a, 0x53a0, 0xde88, 0x84b9, 0x5838, 0x1, 0x0);
        gbc.writeMem(0xcb40, { 0x9c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x656a, gbc.sp());
        EXPECT(0xcb41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcb40));
        // 9C 0127
        gbc.setState(0x8d88, 0x5de, 0x7e60, 0x1d6c, 0xb8fe, 0xfc36, 0x0, 0x0);
        gbc.writeMem(0x8d88, { 0x9c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5de, gbc.sp());
        EXPECT(0x8d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8d88));
        // 9C 0128
        gbc.setState(0xdfed, 0xff76, 0xeaf0, 0x1ad7, 0xed6f, 0xfdce, 0x1, 0x1);
        gbc.writeMem(0xdfed, { 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xff76, gbc.sp());
        EXPECT(0xdfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xdfed));
        // 9C 0129
        gbc.setState(0x4083, 0x2abb, 0xc0c0, 0x6ba7, 0x550f, 0x797, 0x1, 0x1);
        gbc.writeMem(0x4083, { 0x9c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2abb, gbc.sp());
        EXPECT(0x4084, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 012A
        gbc.setState(0xe78, 0x7d4e, 0xaa90, 0xca00, 0x31d5, 0x2e, 0x1, 0x1);
        gbc.writeMem(0xe78, { 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7d4e, gbc.sp());
        EXPECT(0xe79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 012B
        gbc.setState(0x2773, 0x96bf, 0xe880, 0x2786, 0x90b8, 0x7eb6, 0x1, 0x1);
        gbc.writeMem(0x2773, { 0x9c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x96bf, gbc.sp());
        EXPECT(0x2774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 012C
        gbc.setState(0xa117, 0x43af, 0xb680, 0xc68, 0x101a, 0xaaae, 0x0, 0x0);
        gbc.writeMem(0xa117, { 0x9c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x43af, gbc.sp());
        EXPECT(0xa118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa117));
        // 9C 012D
        gbc.setState(0x253f, 0x6289, 0xfb50, 0xc9ad, 0x2565, 0xf7ca, 0x0, 0x1);
        gbc.writeMem(0x253f, { 0x9c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6289, gbc.sp());
        EXPECT(0x2540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 012E
        gbc.setState(0xacf3, 0x57e, 0xac40, 0xbf51, 0xc07a, 0xf537, 0x1, 0x0);
        gbc.writeMem(0xacf3, { 0x9c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x57e, gbc.sp());
        EXPECT(0xacf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xacf3));
        // 9C 012F
        gbc.setState(0xc68d, 0xe6c2, 0x2460, 0xfd93, 0xb1c9, 0x6a19, 0x1, 0x1);
        gbc.writeMem(0xc68d, { 0x9c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe6c2, gbc.sp());
        EXPECT(0xc68e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc68d));
        // 9C 0131
        gbc.setState(0xe923, 0x330c, 0x5490, 0x802f, 0x60d4, 0xc78b, 0x1, 0x0);
        gbc.writeMem(0xe923, { 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x330c, gbc.sp());
        EXPECT(0xe924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe923));
        // 9C 0132
        gbc.setState(0x8532, 0x35a, 0x7f30, 0xccf4, 0xa059, 0x87bc, 0x1, 0x1);
        gbc.writeMem(0x8532, { 0x9c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x35a, gbc.sp());
        EXPECT(0x8533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8532));
        // 9C 0133
        gbc.setState(0xc4d3, 0x34fa, 0x6a60, 0x24fb, 0x282d, 0x112, 0x0, 0x0);
        gbc.writeMem(0xc4d3, { 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x34fa, gbc.sp());
        EXPECT(0xc4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc4d3));
        // 9C 0134
        gbc.setState(0xde45, 0xa9a8, 0x7080, 0x42df, 0x4f01, 0xabf1, 0x0, 0x1);
        gbc.writeMem(0xde45, { 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa9a8, gbc.sp());
        EXPECT(0xde46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xde45));
        // 9C 0135
        gbc.setState(0x3fda, 0xcc3f, 0xd100, 0x5a75, 0xd592, 0x40ad, 0x0, 0x0);
        gbc.writeMem(0x3fda, { 0x9c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcc3f, gbc.sp());
        EXPECT(0x3fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0136
        gbc.setState(0x50b0, 0x6145, 0xfe30, 0x78ed, 0x8667, 0x1584, 0x0, 0x0);
        gbc.writeMem(0x50b0, { 0x9c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6145, gbc.sp());
        EXPECT(0x50b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0138
        gbc.setState(0xd32c, 0xfc8e, 0x7fe0, 0x8d53, 0xd31d, 0x7e63, 0x0, 0x0);
        gbc.writeMem(0xd32c, { 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfc8e, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd32c));
        // 9C 0139
        gbc.setState(0xcfe, 0xbb39, 0xbb70, 0x65b9, 0xa114, 0x2074, 0x1, 0x1);
        gbc.writeMem(0xcfe, { 0x9c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbb39, gbc.sp());
        EXPECT(0xcff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 013A
        gbc.setState(0x9ee1, 0x3081, 0xa780, 0x3303, 0xb925, 0x9f59, 0x1, 0x1);
        gbc.writeMem(0x9ee1, { 0x9c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3081, gbc.sp());
        EXPECT(0x9ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9ee1));
        // 9C 013B
        gbc.setState(0x1f7e, 0x32d7, 0x6910, 0xddc8, 0x9290, 0x9a29, 0x1, 0x0);
        gbc.writeMem(0x1f7e, { 0x9c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x32d7, gbc.sp());
        EXPECT(0x1f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 013C
        gbc.setState(0xe2ed, 0x719d, 0x6700, 0x3dfd, 0x2556, 0xfdab, 0x1, 0x0);
        gbc.writeMem(0xe2ed, { 0x9c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x719d, gbc.sp());
        EXPECT(0xe2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe2ed));
        // 9C 013D
        gbc.setState(0x7d2f, 0xd082, 0x9580, 0xd242, 0x2471, 0x7012, 0x0, 0x1);
        gbc.writeMem(0x7d2f, { 0x9c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd082, gbc.sp());
        EXPECT(0x7d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 013E
        gbc.setState(0xcf4a, 0x575a, 0xb2b0, 0x6eb1, 0xfa08, 0x2dcb, 0x1, 0x0);
        gbc.writeMem(0xcf4a, { 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x575a, gbc.sp());
        EXPECT(0xcf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcf4a));
        // 9C 013F
        gbc.setState(0x7fce, 0x5e76, 0x6c70, 0x4112, 0xfd16, 0xe5f9, 0x1, 0x0);
        gbc.writeMem(0x7fce, { 0x9c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5e76, gbc.sp());
        EXPECT(0x7fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0140
        gbc.setState(0x9a88, 0xdb02, 0x2f00, 0x2fe8, 0x4f4d, 0xaf2d, 0x0, 0x1);
        gbc.writeMem(0x9a88, { 0x9c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdb02, gbc.sp());
        EXPECT(0x9a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9a88));
        // 9C 0141
        gbc.setState(0x64d3, 0x8d10, 0xe6d0, 0xd1c2, 0xff57, 0xe384, 0x0, 0x1);
        gbc.writeMem(0x64d3, { 0x9c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8d10, gbc.sp());
        EXPECT(0x64d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0142
        gbc.setState(0xa941, 0xbfe7, 0xff0, 0x8b1, 0x4006, 0x4934, 0x0, 0x1);
        gbc.writeMem(0xa941, { 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbfe7, gbc.sp());
        EXPECT(0xa942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa941));
        // 9C 0143
        gbc.setState(0x814f, 0xb74e, 0xa6d0, 0x3bb1, 0x4655, 0x2b30, 0x1, 0x1);
        gbc.writeMem(0x814f, { 0x9c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb74e, gbc.sp());
        EXPECT(0x8150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x814f));
        // 9C 0144
        gbc.setState(0x1552, 0xc775, 0xab0, 0x4c0d, 0x2353, 0xc34e, 0x0, 0x1);
        gbc.writeMem(0x1552, { 0x9c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc775, gbc.sp());
        EXPECT(0x1553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0145
        gbc.setState(0x9ec5, 0xbb34, 0x820, 0x37a3, 0xf55f, 0xf1ac, 0x0, 0x0);
        gbc.writeMem(0x9ec5, { 0x9c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbb34, gbc.sp());
        EXPECT(0x9ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9ec5));
        // 9C 0146
        gbc.setState(0xeb10, 0x716b, 0xe430, 0xf185, 0x57fc, 0x5eac, 0x1, 0x0);
        gbc.writeMem(0xeb10, { 0x9c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x716b, gbc.sp());
        EXPECT(0xeb11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xeb10));
        // 9C 0148
        gbc.setState(0xb6a5, 0x35ec, 0x3240, 0x1030, 0x5516, 0xae1a, 0x0, 0x0);
        gbc.writeMem(0xb6a5, { 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x35ec, gbc.sp());
        EXPECT(0xb6a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb6a5));
        // 9C 0149
        gbc.setState(0xeb1e, 0x6101, 0xe710, 0x10bb, 0x66de, 0x4574, 0x0, 0x1);
        gbc.writeMem(0xeb1e, { 0x9c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6101, gbc.sp());
        EXPECT(0xeb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xeb1e));
        // 9C 014A
        gbc.setState(0x4b21, 0x45f8, 0x36d0, 0x933c, 0x3046, 0x13e8, 0x0, 0x0);
        gbc.writeMem(0x4b21, { 0x9c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x45f8, gbc.sp());
        EXPECT(0x4b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 014B
        gbc.setState(0x374a, 0x2f88, 0x2230, 0x7f7, 0x98fe, 0x7ce3, 0x1, 0x0);
        gbc.writeMem(0x374a, { 0x9c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2f88, gbc.sp());
        EXPECT(0x374b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 014C
        gbc.setState(0xcc28, 0xf480, 0x25b0, 0xbfd5, 0x522a, 0x9b3c, 0x1, 0x0);
        gbc.writeMem(0xcc28, { 0x9c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf480, gbc.sp());
        EXPECT(0xcc29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcc28));
        // 9C 014E
        gbc.setState(0xd5a9, 0x15df, 0xe800, 0x2fc9, 0x7578, 0x2c61, 0x0, 0x0);
        gbc.writeMem(0xd5a9, { 0x9c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x15df, gbc.sp());
        EXPECT(0xd5aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd5a9));
        // 9C 014F
        gbc.setState(0x161b, 0x28ad, 0xd820, 0xc249, 0x49a9, 0x8f35, 0x1, 0x1);
        gbc.writeMem(0x161b, { 0x9c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x28ad, gbc.sp());
        EXPECT(0x161c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0150
        gbc.setState(0x58fd, 0xe8dd, 0xdf40, 0xf19e, 0xe209, 0xcdbd, 0x1, 0x0);
        gbc.writeMem(0x58fd, { 0x9c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe8dd, gbc.sp());
        EXPECT(0x58fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0151
        gbc.setState(0x1c81, 0x3adf, 0x6b80, 0xb9eb, 0xa4bf, 0x2f10, 0x1, 0x1);
        gbc.writeMem(0x1c81, { 0x9c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3adf, gbc.sp());
        EXPECT(0x1c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0152
        gbc.setState(0x7673, 0xa97, 0x77b0, 0x9e8f, 0x918d, 0x910e, 0x0, 0x0);
        gbc.writeMem(0x7673, { 0x9c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa97, gbc.sp());
        EXPECT(0x7674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0153
        gbc.setState(0x1a6e, 0x8128, 0x5bf0, 0xc44, 0x52b, 0x46d9, 0x0, 0x0);
        gbc.writeMem(0x1a6e, { 0x9c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8128, gbc.sp());
        EXPECT(0x1a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0154
        gbc.setState(0xc9bb, 0xa6c9, 0x9460, 0xe986, 0xb7c3, 0x3de9, 0x1, 0x0);
        gbc.writeMem(0xc9bb, { 0x9c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa6c9, gbc.sp());
        EXPECT(0xc9bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc9bb));
        // 9C 0155
        gbc.setState(0x9e93, 0xebf4, 0x8a80, 0x6930, 0x2afc, 0x1e2, 0x1, 0x0);
        gbc.writeMem(0x9e93, { 0x9c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xebf4, gbc.sp());
        EXPECT(0x9e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9e93));
        // 9C 0157
        gbc.setState(0x29d9, 0xbf08, 0xcd0, 0x137, 0xff22, 0x7e3e, 0x0, 0x1);
        gbc.writeMem(0x29d9, { 0x9c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbf08, gbc.sp());
        EXPECT(0x29da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0158
        gbc.setState(0x3b3f, 0x8341, 0x2bf0, 0xd769, 0x335e, 0x23eb, 0x1, 0x1);
        gbc.writeMem(0x3b3f, { 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8341, gbc.sp());
        EXPECT(0x3b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0159
        gbc.setState(0xe9ce, 0xa370, 0xfa20, 0x7a6, 0x5de, 0x6f6e, 0x1, 0x1);
        gbc.writeMem(0xe9ce, { 0x9c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa370, gbc.sp());
        EXPECT(0xe9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe9ce));
        // 9C 015A
        gbc.setState(0x2ed9, 0x6e40, 0x1560, 0x473d, 0xf1ae, 0xec6, 0x1, 0x0);
        gbc.writeMem(0x2ed9, { 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6e40, gbc.sp());
        EXPECT(0x2eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 015B
        gbc.setState(0x1262, 0xa630, 0x6cf0, 0x13fa, 0x4cc3, 0xa95a, 0x0, 0x1);
        gbc.writeMem(0x1262, { 0x9c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa630, gbc.sp());
        EXPECT(0x1263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 015C
        gbc.setState(0xef2e, 0x8065, 0x9be0, 0x725c, 0x4743, 0x1670, 0x0, 0x0);
        gbc.writeMem(0xef2e, { 0x9c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8065, gbc.sp());
        EXPECT(0xef2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xef2e));
        // 9C 015D
        gbc.setState(0x14de, 0x9bf4, 0x1d10, 0x5690, 0x4056, 0x55f1, 0x1, 0x0);
        gbc.writeMem(0x14de, { 0x9c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9bf4, gbc.sp());
        EXPECT(0x14df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 015E
        gbc.setState(0x7b9b, 0xcd4d, 0xf0, 0xd809, 0xbb45, 0xd3af, 0x0, 0x1);
        gbc.writeMem(0x7b9b, { 0x9c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcd4d, gbc.sp());
        EXPECT(0x7b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 015F
        gbc.setState(0x2fc5, 0xa81e, 0x8120, 0xd8e5, 0x34ed, 0x7ded, 0x1, 0x1);
        gbc.writeMem(0x2fc5, { 0x9c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa81e, gbc.sp());
        EXPECT(0x2fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0160
        gbc.setState(0x6f33, 0xb498, 0x1a10, 0x9e58, 0x9e26, 0x26a4, 0x0, 0x0);
        gbc.writeMem(0x6f33, { 0x9c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb498, gbc.sp());
        EXPECT(0x6f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0161
        gbc.setState(0x99f7, 0x54ad, 0x2ba0, 0x3884, 0x61b9, 0x964c, 0x0, 0x1);
        gbc.writeMem(0x99f7, { 0x9c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x54ad, gbc.sp());
        EXPECT(0x99f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x99f7));
        // 9C 0162
        gbc.setState(0x40eb, 0xab15, 0x43c0, 0x6449, 0x5512, 0xb272, 0x0, 0x1);
        gbc.writeMem(0x40eb, { 0x9c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xab15, gbc.sp());
        EXPECT(0x40ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0163
        gbc.setState(0xc55a, 0xcd1a, 0xb2e0, 0x45b0, 0xb4da, 0x9277, 0x0, 0x0);
        gbc.writeMem(0xc55a, { 0x9c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcd1a, gbc.sp());
        EXPECT(0xc55b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc55a));
        // 9C 0164
        gbc.setState(0xa3d2, 0xde7f, 0xebd0, 0xf004, 0xe133, 0xf888, 0x0, 0x1);
        gbc.writeMem(0xa3d2, { 0x9c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xde7f, gbc.sp());
        EXPECT(0xa3d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa3d2));
        // 9C 0165
        gbc.setState(0x3f5e, 0xd376, 0x8230, 0x2a91, 0x62d5, 0x8c21, 0x1, 0x0);
        gbc.writeMem(0x3f5e, { 0x9c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd376, gbc.sp());
        EXPECT(0x3f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0166
        gbc.setState(0xc9f0, 0x4cb7, 0xe470, 0xfdf6, 0x2a33, 0xb566, 0x1, 0x0);
        gbc.writeMem(0xc9f0, { 0x9c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4cb7, gbc.sp());
        EXPECT(0xc9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc9f0));
        // 9C 0167
        gbc.setState(0x3f76, 0xd786, 0x340, 0x8f55, 0x8ef, 0x4ed, 0x0, 0x1);
        gbc.writeMem(0x3f76, { 0x9c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd786, gbc.sp());
        EXPECT(0x3f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0168
        gbc.setState(0x9403, 0xc088, 0xdaa0, 0xea64, 0x5e55, 0xfeea, 0x0, 0x0);
        gbc.writeMem(0x9403, { 0x9c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc088, gbc.sp());
        EXPECT(0x9404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9403));
        // 9C 0169
        gbc.setState(0xb4f5, 0x9e28, 0x5360, 0xdef5, 0x3372, 0x706a, 0x0, 0x0);
        gbc.writeMem(0xb4f5, { 0x9c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9e28, gbc.sp());
        EXPECT(0xb4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb4f5));
        // 9C 016A
        gbc.setState(0xd54c, 0x6828, 0xf9c0, 0xe319, 0x4c11, 0x5549, 0x0, 0x1);
        gbc.writeMem(0xd54c, { 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6828, gbc.sp());
        EXPECT(0xd54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd54c));
        // 9C 016B
        gbc.setState(0x35b4, 0x7a40, 0x8510, 0x46c1, 0xa1ed, 0x87f0, 0x0, 0x1);
        gbc.writeMem(0x35b4, { 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7a40, gbc.sp());
        EXPECT(0x35b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 016D
        gbc.setState(0x188d, 0xdc81, 0x26c0, 0x94d1, 0xf07c, 0xd629, 0x0, 0x0);
        gbc.writeMem(0x188d, { 0x9c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdc81, gbc.sp());
        EXPECT(0x188e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 016E
        gbc.setState(0x175c, 0xc249, 0x1040, 0x3b1a, 0xb58, 0x556e, 0x0, 0x0);
        gbc.writeMem(0x175c, { 0x9c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc249, gbc.sp());
        EXPECT(0x175d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 016F
        gbc.setState(0xcf86, 0xa89, 0x2380, 0xd305, 0x7856, 0xcb3d, 0x0, 0x0);
        gbc.writeMem(0xcf86, { 0x9c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa89, gbc.sp());
        EXPECT(0xcf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcf86));
        // 9C 0170
        gbc.setState(0x77f, 0x965c, 0x74e0, 0xf0cb, 0xa5bf, 0xafb9, 0x0, 0x1);
        gbc.writeMem(0x77f, { 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x965c, gbc.sp());
        EXPECT(0x780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0171
        gbc.setState(0x5497, 0x1f71, 0x6490, 0xdaa1, 0x22e5, 0x3023, 0x0, 0x1);
        gbc.writeMem(0x5497, { 0x9c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1f71, gbc.sp());
        EXPECT(0x5498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0172
        gbc.setState(0x64f1, 0x4fdf, 0x3a80, 0x6187, 0x5706, 0xbc13, 0x0, 0x1);
        gbc.writeMem(0x64f1, { 0x9c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4fdf, gbc.sp());
        EXPECT(0x64f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0173
        gbc.setState(0x8b0e, 0xdced, 0x7410, 0xcd7e, 0xb6ba, 0x219e, 0x1, 0x1);
        gbc.writeMem(0x8b0e, { 0x9c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdced, gbc.sp());
        EXPECT(0x8b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8b0e));
        // 9C 0174
        gbc.setState(0x764f, 0xe3f5, 0x9450, 0x815, 0x2dfd, 0xd5a6, 0x0, 0x0);
        gbc.writeMem(0x764f, { 0x9c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe3f5, gbc.sp());
        EXPECT(0x7650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0175
        gbc.setState(0x27de, 0x4ca5, 0xb4e0, 0x5b29, 0xfd0, 0x6018, 0x0, 0x0);
        gbc.writeMem(0x27de, { 0x9c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4ca5, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0176
        gbc.setState(0x7fb9, 0x3de8, 0x700, 0x4384, 0x5ac9, 0x6089, 0x1, 0x0);
        gbc.writeMem(0x7fb9, { 0x9c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3de8, gbc.sp());
        EXPECT(0x7fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0177
        gbc.setState(0xae53, 0xc687, 0x8e90, 0xdec3, 0x885e, 0x4555, 0x0, 0x1);
        gbc.writeMem(0xae53, { 0x9c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc687, gbc.sp());
        EXPECT(0xae54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xae53));
        // 9C 0178
        gbc.setState(0x8264, 0xd79, 0x2c60, 0x384c, 0x68de, 0xe2e3, 0x0, 0x0);
        gbc.writeMem(0x8264, { 0x9c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd79, gbc.sp());
        EXPECT(0x8265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8264));
        // 9C 0179
        gbc.setState(0xdff6, 0xf2fc, 0x23c0, 0x8617, 0xef85, 0x575b, 0x0, 0x0);
        gbc.writeMem(0xdff6, { 0x9c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf2fc, gbc.sp());
        EXPECT(0xdff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xdff6));
        // 9C 017A
        gbc.setState(0x84ec, 0xce35, 0x2c10, 0x2a0b, 0xfeaf, 0xafd1, 0x1, 0x0);
        gbc.writeMem(0x84ec, { 0x9c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xce35, gbc.sp());
        EXPECT(0x84ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x84ec));
        // 9C 017B
        gbc.setState(0xd62, 0xbdf9, 0x550, 0x57d, 0x6680, 0xdf16, 0x1, 0x0);
        gbc.writeMem(0xd62, { 0x9c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbdf9, gbc.sp());
        EXPECT(0xd63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 017C
        gbc.setState(0xd6d9, 0x63d1, 0xa2f0, 0xebf4, 0x33af, 0x613a, 0x1, 0x1);
        gbc.writeMem(0xd6d9, { 0x9c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x63d1, gbc.sp());
        EXPECT(0xd6da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd6d9));
        // 9C 017D
        gbc.setState(0x400f, 0xc84, 0x8b90, 0x563, 0x3bb4, 0x72f7, 0x1, 0x1);
        gbc.writeMem(0x400f, { 0x9c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc84, gbc.sp());
        EXPECT(0x4010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 017E
        gbc.setState(0xb306, 0x27c4, 0x4990, 0xaacb, 0x1684, 0x4a65, 0x1, 0x1);
        gbc.writeMem(0xb306, { 0x9c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x27c4, gbc.sp());
        EXPECT(0xb307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb306));
        // 9C 017F
        gbc.setState(0x9fd4, 0xf7b0, 0x5160, 0xaa71, 0xfd4, 0xf036, 0x1, 0x0);
        gbc.writeMem(0x9fd4, { 0x9c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf7b0, gbc.sp());
        EXPECT(0x9fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9fd4));
        // 9C 0180
        gbc.setState(0xabb2, 0xd280, 0xae70, 0x9ad2, 0x15f0, 0x6122, 0x0, 0x1);
        gbc.writeMem(0xabb2, { 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd280, gbc.sp());
        EXPECT(0xabb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xabb2));
        // 9C 0181
        gbc.setState(0xe44f, 0x74cd, 0xcee0, 0x873c, 0x44bf, 0xdb2a, 0x0, 0x0);
        gbc.writeMem(0xe44f, { 0x9c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x74cd, gbc.sp());
        EXPECT(0xe450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe44f));
        // 9C 0183
        gbc.setState(0xd7e6, 0x7aca, 0x8a40, 0x1292, 0x8e65, 0xe8de, 0x1, 0x1);
        gbc.writeMem(0xd7e6, { 0x9c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7aca, gbc.sp());
        EXPECT(0xd7e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd7e6));
        // 9C 0184
        gbc.setState(0x12c4, 0x1a5e, 0xe160, 0xffa9, 0x974a, 0x8fa5, 0x1, 0x0);
        gbc.writeMem(0x12c4, { 0x9c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1a5e, gbc.sp());
        EXPECT(0x12c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0185
        gbc.setState(0x8d8b, 0x6f9, 0xec20, 0xb2bb, 0xc928, 0x1af0, 0x1, 0x0);
        gbc.writeMem(0x8d8b, { 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6f9, gbc.sp());
        EXPECT(0x8d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8d8b));
        // 9C 0186
        gbc.setState(0xbd28, 0xd46a, 0xbb90, 0x1108, 0x3bbf, 0x7c70, 0x1, 0x0);
        gbc.writeMem(0xbd28, { 0x9c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd46a, gbc.sp());
        EXPECT(0xbd29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbd28));
        // 9C 0187
        gbc.setState(0x94d7, 0x2ffe, 0xb1f0, 0xf5ca, 0x99c3, 0x7f38, 0x1, 0x0);
        gbc.writeMem(0x94d7, { 0x9c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2ffe, gbc.sp());
        EXPECT(0x94d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x94d7));
        // 9C 0188
        gbc.setState(0x58dc, 0xb230, 0x69e0, 0x4d7d, 0x3a3c, 0xf89b, 0x0, 0x1);
        gbc.writeMem(0x58dc, { 0x9c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb230, gbc.sp());
        EXPECT(0x58dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0189
        gbc.setState(0x47e7, 0x5dbb, 0x2e60, 0x50ad, 0x5de3, 0x85d5, 0x0, 0x1);
        gbc.writeMem(0x47e7, { 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5dbb, gbc.sp());
        EXPECT(0x47e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 018A
        gbc.setState(0x40eb, 0xa3ef, 0xe210, 0x8685, 0xed5b, 0xfb30, 0x1, 0x1);
        gbc.writeMem(0x40eb, { 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa3ef, gbc.sp());
        EXPECT(0x40ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 018B
        gbc.setState(0x5a37, 0xadcd, 0x8450, 0x7e39, 0xb680, 0x65b2, 0x0, 0x1);
        gbc.writeMem(0x5a37, { 0x9c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xadcd, gbc.sp());
        EXPECT(0x5a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 018C
        gbc.setState(0x928f, 0xcc, 0xcae0, 0xa462, 0xd006, 0x51ac, 0x0, 0x0);
        gbc.writeMem(0x928f, { 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xcc, gbc.sp());
        EXPECT(0x9290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x928f));
        // 9C 018D
        gbc.setState(0xd9a1, 0xea37, 0x2aa0, 0xec3a, 0xb4ac, 0x3af4, 0x0, 0x1);
        gbc.writeMem(0xd9a1, { 0x9c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xea37, gbc.sp());
        EXPECT(0xd9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd9a1));
        // 9C 018E
        gbc.setState(0x81bc, 0xbb88, 0xe5b0, 0x10f8, 0x9198, 0xe65e, 0x1, 0x1);
        gbc.writeMem(0x81bc, { 0x9c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbb88, gbc.sp());
        EXPECT(0x81bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x81bc));
        // 9C 0190
        gbc.setState(0x60d1, 0xa7b5, 0x8300, 0xe335, 0x8967, 0x5b92, 0x0, 0x0);
        gbc.writeMem(0x60d1, { 0x9c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa7b5, gbc.sp());
        EXPECT(0x60d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0191
        gbc.setState(0xe5c3, 0x9e3a, 0x3660, 0xddf3, 0xc0cc, 0xde24, 0x0, 0x0);
        gbc.writeMem(0xe5c3, { 0x9c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9e3a, gbc.sp());
        EXPECT(0xe5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe5c3));
        // 9C 0192
        gbc.setState(0x355e, 0xb3c4, 0xba90, 0xb971, 0x1a4d, 0x8223, 0x1, 0x0);
        gbc.writeMem(0x355e, { 0x9c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb3c4, gbc.sp());
        EXPECT(0x355f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0194
        gbc.setState(0xc9d6, 0x8eda, 0xa90, 0xefaa, 0x74dd, 0x7e0, 0x0, 0x0);
        gbc.writeMem(0xc9d6, { 0x9c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8eda, gbc.sp());
        EXPECT(0xc9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc9d6));
        // 9C 0195
        gbc.setState(0xd5a, 0x96d2, 0x3fa0, 0x5a11, 0x784b, 0x7bee, 0x0, 0x0);
        gbc.writeMem(0xd5a, { 0x9c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x96d2, gbc.sp());
        EXPECT(0xd5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0196
        gbc.setState(0x85ee, 0x101e, 0x3df0, 0x4b8, 0x5d16, 0x6e15, 0x1, 0x1);
        gbc.writeMem(0x85ee, { 0x9c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x101e, gbc.sp());
        EXPECT(0x85ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x85ee));
        // 9C 0197
        gbc.setState(0x972e, 0xa7a3, 0xfd80, 0x9a63, 0xb370, 0x79dd, 0x0, 0x1);
        gbc.writeMem(0x972e, { 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa7a3, gbc.sp());
        EXPECT(0x972f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x972e));
        // 9C 0198
        gbc.setState(0x618e, 0xe7a3, 0xe8a0, 0x71ff, 0x5749, 0x74e2, 0x0, 0x1);
        gbc.writeMem(0x618e, { 0x9c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe7a3, gbc.sp());
        EXPECT(0x618f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0199
        gbc.setState(0x9747, 0x93e, 0x18b0, 0x887a, 0xc0ae, 0xcb32, 0x1, 0x0);
        gbc.writeMem(0x9747, { 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x93e, gbc.sp());
        EXPECT(0x9748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9747));
        // 9C 019A
        gbc.setState(0x81cc, 0xee64, 0xdfb0, 0x3839, 0x8ef3, 0xef9e, 0x0, 0x0);
        gbc.writeMem(0x81cc, { 0x9c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xee64, gbc.sp());
        EXPECT(0x81cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x81cc));
        // 9C 019B
        gbc.setState(0x717a, 0x870c, 0xe20, 0x54ec, 0xf161, 0x3262, 0x1, 0x1);
        gbc.writeMem(0x717a, { 0x9c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x870c, gbc.sp());
        EXPECT(0x717b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 019C
        gbc.setState(0x8c9f, 0xeac9, 0xda0, 0x27f6, 0xbade, 0xb297, 0x0, 0x0);
        gbc.writeMem(0x8c9f, { 0x9c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xeac9, gbc.sp());
        EXPECT(0x8ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8c9f));
        // 9C 019D
        gbc.setState(0xe417, 0x8f75, 0x27d0, 0xdf88, 0x9d9a, 0x8a5e, 0x0, 0x0);
        gbc.writeMem(0xe417, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8f75, gbc.sp());
        EXPECT(0xe418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe417));
        // 9C 019E
        gbc.setState(0x3d99, 0x2ca6, 0xe070, 0x1b6e, 0xd593, 0xd85e, 0x1, 0x0);
        gbc.writeMem(0x3d99, { 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2ca6, gbc.sp());
        EXPECT(0x3d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 019F
        gbc.setState(0xae37, 0x4745, 0x1da0, 0xa8b9, 0x72b0, 0x6148, 0x0, 0x1);
        gbc.writeMem(0xae37, { 0x9c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4745, gbc.sp());
        EXPECT(0xae38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xae37));
        // 9C 01A0
        gbc.setState(0x94ca, 0x5a98, 0xe990, 0x6d43, 0x994e, 0xb93c, 0x1, 0x0);
        gbc.writeMem(0x94ca, { 0x9c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5a98, gbc.sp());
        EXPECT(0x94cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x94ca));
        // 9C 01A1
        gbc.setState(0xc506, 0x3ff1, 0x9fb0, 0xefb3, 0x8fb6, 0xcb62, 0x0, 0x1);
        gbc.writeMem(0xc506, { 0x9c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3ff1, gbc.sp());
        EXPECT(0xc507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc506));
        // 9C 01A2
        gbc.setState(0x969a, 0xbaad, 0x3bf0, 0xab55, 0x4197, 0x39e2, 0x0, 0x0);
        gbc.writeMem(0x969a, { 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbaad, gbc.sp());
        EXPECT(0x969b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x969a));
        // 9C 01A3
        gbc.setState(0x8f6c, 0xa3dc, 0x510, 0xfbc7, 0x9326, 0xf60e, 0x1, 0x0);
        gbc.writeMem(0x8f6c, { 0x9c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa3dc, gbc.sp());
        EXPECT(0x8f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8f6c));
        // 9C 01A4
        gbc.setState(0xabec, 0xd091, 0x10a0, 0xd4c2, 0xf28a, 0x107f, 0x0, 0x1);
        gbc.writeMem(0xabec, { 0x9c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd091, gbc.sp());
        EXPECT(0xabed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xabec));
        // 9C 01A5
        gbc.setState(0x8a1c, 0x4c6e, 0x19c0, 0xedaf, 0xcc46, 0x8686, 0x0, 0x1);
        gbc.writeMem(0x8a1c, { 0x9c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4c6e, gbc.sp());
        EXPECT(0x8a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8a1c));
        // 9C 01A6
        gbc.setState(0x8649, 0x4e6e, 0x6780, 0x9a8a, 0xafb0, 0x33cc, 0x0, 0x1);
        gbc.writeMem(0x8649, { 0x9c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4e6e, gbc.sp());
        EXPECT(0x864a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8649));
        // 9C 01A7
        gbc.setState(0x2066, 0x51d1, 0x4e20, 0x574d, 0x3980, 0x995e, 0x0, 0x1);
        gbc.writeMem(0x2066, { 0x9c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x51d1, gbc.sp());
        EXPECT(0x2067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01A8
        gbc.setState(0x8d78, 0x88b9, 0x4910, 0x5949, 0x4bd2, 0x5f07, 0x0, 0x0);
        gbc.writeMem(0x8d78, { 0x9c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x88b9, gbc.sp());
        EXPECT(0x8d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8d78));
        // 9C 01AA
        gbc.setState(0xe9ef, 0x8a3d, 0x2370, 0xdb0, 0x3cc3, 0x4760, 0x1, 0x0);
        gbc.writeMem(0xe9ef, { 0x9c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8a3d, gbc.sp());
        EXPECT(0xe9f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe9ef));
        // 9C 01AB
        gbc.setState(0xe4a2, 0x76a9, 0x70e0, 0x11dc, 0xbe9, 0xe696, 0x0, 0x1);
        gbc.writeMem(0xe4a2, { 0x9c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x76a9, gbc.sp());
        EXPECT(0xe4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe4a2));
        // 9C 01AC
        gbc.setState(0xe59, 0x1d94, 0x1db0, 0x7a0f, 0x576, 0x6ee8, 0x0, 0x1);
        gbc.writeMem(0xe59, { 0x9c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1d94, gbc.sp());
        EXPECT(0xe5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01AD
        gbc.setState(0x42ed, 0x77d1, 0x9ea0, 0x9caa, 0xcfe1, 0x3dd9, 0x0, 0x1);
        gbc.writeMem(0x42ed, { 0x9c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x77d1, gbc.sp());
        EXPECT(0x42ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01AE
        gbc.setState(0x5875, 0xc3fd, 0x27f0, 0xe71c, 0x6cb5, 0x65c9, 0x0, 0x1);
        gbc.writeMem(0x5875, { 0x9c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc3fd, gbc.sp());
        EXPECT(0x5876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01AF
        gbc.setState(0xc001, 0xae26, 0xbec0, 0xd577, 0xd093, 0xac09, 0x1, 0x0);
        gbc.writeMem(0xc001, { 0x9c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xae26, gbc.sp());
        EXPECT(0xc002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc001));
        // 9C 01B0
        gbc.setState(0x6f77, 0x176, 0x2090, 0x88ce, 0x1963, 0xb829, 0x0, 0x1);
        gbc.writeMem(0x6f77, { 0x9c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x176, gbc.sp());
        EXPECT(0x6f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01B1
        gbc.setState(0xb2f5, 0x6354, 0xd5f0, 0x4ead, 0x7378, 0x47af, 0x1, 0x0);
        gbc.writeMem(0xb2f5, { 0x9c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6354, gbc.sp());
        EXPECT(0xb2f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb2f5));
        // 9C 01B2
        gbc.setState(0xdafa, 0x79cf, 0xf200, 0x8551, 0x7df6, 0x92a0, 0x1, 0x1);
        gbc.writeMem(0xdafa, { 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x79cf, gbc.sp());
        EXPECT(0xdafb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xdafa));
        // 9C 01B3
        gbc.setState(0x2a5a, 0x81a8, 0x9cf0, 0x62b, 0x4487, 0xbf4e, 0x0, 0x0);
        gbc.writeMem(0x2a5a, { 0x9c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x81a8, gbc.sp());
        EXPECT(0x2a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01B4
        gbc.setState(0x26b5, 0x10a0, 0x83d0, 0xf18e, 0xdff, 0x209a, 0x0, 0x0);
        gbc.writeMem(0x26b5, { 0x9c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x10a0, gbc.sp());
        EXPECT(0x26b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01B5
        gbc.setState(0xa4f1, 0x2c72, 0xd1b0, 0x3e24, 0x7e05, 0xd26b, 0x0, 0x1);
        gbc.writeMem(0xa4f1, { 0x9c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2c72, gbc.sp());
        EXPECT(0xa4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa4f1));
        // 9C 01B6
        gbc.setState(0xb958, 0x693a, 0xdc10, 0x18eb, 0xde94, 0x207, 0x0, 0x0);
        gbc.writeMem(0xb958, { 0x9c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x693a, gbc.sp());
        EXPECT(0xb959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb958));
        // 9C 01B7
        gbc.setState(0x633b, 0x8e3f, 0x99e0, 0x2f34, 0x87a5, 0x4c93, 0x0, 0x1);
        gbc.writeMem(0x633b, { 0x9c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8e3f, gbc.sp());
        EXPECT(0x633c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01B8
        gbc.setState(0x339b, 0x68fc, 0x2490, 0x493a, 0x25cb, 0x5e19, 0x0, 0x0);
        gbc.writeMem(0x339b, { 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x68fc, gbc.sp());
        EXPECT(0x339c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01B9
        gbc.setState(0x4924, 0xb3ca, 0xc7c0, 0x62a1, 0x5c83, 0x5f4e, 0x0, 0x1);
        gbc.writeMem(0x4924, { 0x9c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb3ca, gbc.sp());
        EXPECT(0x4925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01BA
        gbc.setState(0x90d0, 0x6c1e, 0x2ca0, 0xa82c, 0x6b39, 0x6a71, 0x1, 0x0);
        gbc.writeMem(0x90d0, { 0x9c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6c1e, gbc.sp());
        EXPECT(0x90d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x90d0));
        // 9C 01BB
        gbc.setState(0x8a64, 0xabfc, 0x26a0, 0x6a0a, 0x8be8, 0x73c3, 0x0, 0x0);
        gbc.writeMem(0x8a64, { 0x9c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xabfc, gbc.sp());
        EXPECT(0x8a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8a64));
        // 9C 01BC
        gbc.setState(0x2bb, 0xdcb3, 0xd3d0, 0xf889, 0xb58d, 0x8493, 0x1, 0x0);
        gbc.writeMem(0x2bb, { 0x9c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdcb3, gbc.sp());
        EXPECT(0x2bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01BD
        gbc.setState(0xa89a, 0xedb, 0x9e60, 0xb95, 0xefb6, 0x595a, 0x1, 0x1);
        gbc.writeMem(0xa89a, { 0x9c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xedb, gbc.sp());
        EXPECT(0xa89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa89a));
        // 9C 01BF
        gbc.setState(0xa070, 0x9278, 0x2f20, 0x4cb3, 0xce27, 0x99f5, 0x0, 0x1);
        gbc.writeMem(0xa070, { 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9278, gbc.sp());
        EXPECT(0xa071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa070));
        // 9C 01C0
        gbc.setState(0xb0d4, 0xfdf6, 0x9690, 0x9ba, 0x277d, 0x1064, 0x1, 0x1);
        gbc.writeMem(0xb0d4, { 0x9c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfdf6, gbc.sp());
        EXPECT(0xb0d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb0d4));
        // 9C 01C1
        gbc.setState(0x25b, 0xaee, 0xc7a0, 0xffa9, 0x5b0e, 0xd7b4, 0x1, 0x0);
        gbc.writeMem(0x25b, { 0x9c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaee, gbc.sp());
        EXPECT(0x25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01C2
        gbc.setState(0xaa77, 0x37a4, 0x360, 0x7fd0, 0xa71d, 0x91f, 0x1, 0x0);
        gbc.writeMem(0xaa77, { 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x37a4, gbc.sp());
        EXPECT(0xaa78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xaa77));
        // 9C 01C3
        gbc.setState(0x8ac9, 0x2ab9, 0x5080, 0xaae4, 0x881e, 0x50e4, 0x1, 0x0);
        gbc.writeMem(0x8ac9, { 0x9c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2ab9, gbc.sp());
        EXPECT(0x8aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8ac9));
        // 9C 01C4
        gbc.setState(0x5362, 0x93ea, 0x1d60, 0xa1b9, 0x13a5, 0xd317, 0x1, 0x0);
        gbc.writeMem(0x5362, { 0x9c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x93ea, gbc.sp());
        EXPECT(0x5363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01C5
        gbc.setState(0x90e, 0xe3f4, 0x55e0, 0xaa64, 0xdf6d, 0x98c8, 0x1, 0x1);
        gbc.writeMem(0x90e, { 0x9c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe3f4, gbc.sp());
        EXPECT(0x90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01C6
        gbc.setState(0x698f, 0xf281, 0xc6e0, 0xf076, 0xd749, 0x5c23, 0x0, 0x0);
        gbc.writeMem(0x698f, { 0x9c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf281, gbc.sp());
        EXPECT(0x6990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01C7
        gbc.setState(0x7661, 0x9836, 0x6210, 0xbd32, 0x414f, 0x8b5d, 0x0, 0x1);
        gbc.writeMem(0x7661, { 0x9c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9836, gbc.sp());
        EXPECT(0x7662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01C8
        gbc.setState(0x2bb2, 0xf91b, 0x4370, 0x15c4, 0xad3e, 0xccbd, 0x0, 0x0);
        gbc.writeMem(0x2bb2, { 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf91b, gbc.sp());
        EXPECT(0x2bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01C9
        gbc.setState(0x3b35, 0x17c6, 0xdb70, 0x445b, 0x954d, 0x84b9, 0x0, 0x1);
        gbc.writeMem(0x3b35, { 0x9c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x17c6, gbc.sp());
        EXPECT(0x3b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01CA
        gbc.setState(0x51e2, 0x5c75, 0x7b0, 0x9abb, 0x700b, 0x5ba6, 0x0, 0x1);
        gbc.writeMem(0x51e2, { 0x9c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5c75, gbc.sp());
        EXPECT(0x51e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01CB
        gbc.setState(0xeea7, 0x248f, 0x2fb0, 0x121, 0x64fe, 0x2910, 0x0, 0x1);
        gbc.writeMem(0xeea7, { 0x9c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x248f, gbc.sp());
        EXPECT(0xeea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xeea7));
        // 9C 01CC
        gbc.setState(0x6e29, 0x59bc, 0xe2b0, 0x278c, 0x281d, 0xcd62, 0x0, 0x1);
        gbc.writeMem(0x6e29, { 0x9c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x59bc, gbc.sp());
        EXPECT(0x6e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01CD
        gbc.setState(0xb0f2, 0x63ec, 0xb3b0, 0xa60d, 0xc73, 0xb8b5, 0x1, 0x1);
        gbc.writeMem(0xb0f2, { 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x63ec, gbc.sp());
        EXPECT(0xb0f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb0f2));
        // 9C 01CE
        gbc.setState(0x62bf, 0xc574, 0xe700, 0xb72, 0x2199, 0xa1d3, 0x1, 0x0);
        gbc.writeMem(0x62bf, { 0x9c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc574, gbc.sp());
        EXPECT(0x62c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01CF
        gbc.setState(0x6899, 0xf292, 0xe930, 0xc5e, 0x1954, 0xee4f, 0x0, 0x0);
        gbc.writeMem(0x6899, { 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf292, gbc.sp());
        EXPECT(0x689a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01D0
        gbc.setState(0x67b0, 0x93a4, 0xb6b0, 0x9355, 0xe1c2, 0x575f, 0x1, 0x1);
        gbc.writeMem(0x67b0, { 0x9c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x93a4, gbc.sp());
        EXPECT(0x67b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01D1
        gbc.setState(0x89ae, 0xbfd8, 0x75b0, 0xba7d, 0x3ca2, 0xd761, 0x0, 0x0);
        gbc.writeMem(0x89ae, { 0x9c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbfd8, gbc.sp());
        EXPECT(0x89af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x89ae));
        // 9C 01D2
        gbc.setState(0x42f6, 0x240b, 0xb200, 0xe5a5, 0x5480, 0x1ed2, 0x1, 0x0);
        gbc.writeMem(0x42f6, { 0x9c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x240b, gbc.sp());
        EXPECT(0x42f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01D3
        gbc.setState(0xcdbf, 0x69c4, 0xdf10, 0x43fc, 0xc8b0, 0x4df3, 0x0, 0x0);
        gbc.writeMem(0xcdbf, { 0x9c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x69c4, gbc.sp());
        EXPECT(0xcdc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcdbf));
        // 9C 01D4
        gbc.setState(0x7208, 0x372, 0xcda0, 0xd831, 0x985d, 0xbc88, 0x0, 0x1);
        gbc.writeMem(0x7208, { 0x9c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x372, gbc.sp());
        EXPECT(0x7209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01D5
        gbc.setState(0x69bc, 0x27ba, 0x93d0, 0x6772, 0xf426, 0x41c1, 0x0, 0x1);
        gbc.writeMem(0x69bc, { 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x27ba, gbc.sp());
        EXPECT(0x69bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01D6
        gbc.setState(0x4892, 0xbe18, 0xb260, 0x370a, 0x32da, 0xb2a5, 0x1, 0x0);
        gbc.writeMem(0x4892, { 0x9c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbe18, gbc.sp());
        EXPECT(0x4893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01D8
        gbc.setState(0x3d38, 0x6bd0, 0x9dc0, 0xabec, 0x3d2b, 0x8750, 0x1, 0x0);
        gbc.writeMem(0x3d38, { 0x9c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6bd0, gbc.sp());
        EXPECT(0x3d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01D9
        gbc.setState(0x2406, 0xecaa, 0xb8a0, 0xf008, 0x2b1d, 0x44ba, 0x1, 0x1);
        gbc.writeMem(0x2406, { 0x9c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xecaa, gbc.sp());
        EXPECT(0x2407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01DA
        gbc.setState(0x6208, 0xf238, 0x6480, 0x4f9b, 0xaaed, 0x7e41, 0x0, 0x0);
        gbc.writeMem(0x6208, { 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf238, gbc.sp());
        EXPECT(0x6209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01DB
        gbc.setState(0x23c4, 0x5aa0, 0x8f70, 0x1b08, 0x7541, 0x1833, 0x1, 0x1);
        gbc.writeMem(0x23c4, { 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5aa0, gbc.sp());
        EXPECT(0x23c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01DC
        gbc.setState(0x7018, 0xddb9, 0x42d0, 0xe489, 0x5df6, 0xd579, 0x0, 0x1);
        gbc.writeMem(0x7018, { 0x9c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xddb9, gbc.sp());
        EXPECT(0x7019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01DD
        gbc.setState(0xc278, 0xf290, 0xa280, 0x3c33, 0x8df5, 0x9fff, 0x0, 0x0);
        gbc.writeMem(0xc278, { 0x9c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf290, gbc.sp());
        EXPECT(0xc279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc278));
        // 9C 01DE
        gbc.setState(0xde17, 0xbc06, 0x33c0, 0xc4e6, 0x3ecf, 0x9374, 0x0, 0x0);
        gbc.writeMem(0xde17, { 0x9c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbc06, gbc.sp());
        EXPECT(0xde18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xde17));
        // 9C 01DF
        gbc.setState(0xd73a, 0x423, 0x5c30, 0xe168, 0x1233, 0x57c7, 0x0, 0x1);
        gbc.writeMem(0xd73a, { 0x9c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x423, gbc.sp());
        EXPECT(0xd73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd73a));
        // 9C 01E0
        gbc.setState(0x94a1, 0x6677, 0x40d0, 0xb82c, 0x4c8a, 0xc8de, 0x0, 0x1);
        gbc.writeMem(0x94a1, { 0x9c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6677, gbc.sp());
        EXPECT(0x94a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x94a1));
        // 9C 01E1
        gbc.setState(0x13cf, 0x1ffe, 0x7b30, 0x8839, 0x1ce8, 0x7d08, 0x0, 0x0);
        gbc.writeMem(0x13cf, { 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1ffe, gbc.sp());
        EXPECT(0x13d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01E2
        gbc.setState(0x8140, 0x57c1, 0x9390, 0xc508, 0xe6fe, 0x811a, 0x0, 0x0);
        gbc.writeMem(0x8140, { 0x9c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x57c1, gbc.sp());
        EXPECT(0x8141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8140));
        // 9C 01E3
        gbc.setState(0x1585, 0x27c5, 0xdba0, 0x935e, 0xa734, 0xa297, 0x0, 0x1);
        gbc.writeMem(0x1585, { 0x9c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x27c5, gbc.sp());
        EXPECT(0x1586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01E4
        gbc.setState(0x8f4c, 0x1ca9, 0x8970, 0xf67f, 0x7ab2, 0xfb8b, 0x1, 0x1);
        gbc.writeMem(0x8f4c, { 0x9c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1ca9, gbc.sp());
        EXPECT(0x8f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8f4c));
        // 9C 01E5
        gbc.setState(0x5526, 0xc9de, 0x77d0, 0xefd, 0xc867, 0xb14d, 0x0, 0x1);
        gbc.writeMem(0x5526, { 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc9de, gbc.sp());
        EXPECT(0x5527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01E7
        gbc.setState(0x5b, 0xd960, 0x300, 0x2d6d, 0x2e8d, 0x7c31, 0x1, 0x1);
        gbc.writeMem(0x5b, { 0x9c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd960, gbc.sp());
        EXPECT(0x5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01E8
        gbc.setState(0x8126, 0x5599, 0x4900, 0xf7ce, 0x3483, 0xffb4, 0x1, 0x1);
        gbc.writeMem(0x8126, { 0x9c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5599, gbc.sp());
        EXPECT(0x8127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8126));
        // 9C 01E9
        gbc.setState(0x5781, 0x4cf5, 0x2320, 0xb38c, 0x1cce, 0x4a88, 0x1, 0x1);
        gbc.writeMem(0x5781, { 0x9c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4cf5, gbc.sp());
        EXPECT(0x5782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01EA
        gbc.setState(0x8575, 0x43c6, 0xd830, 0xda2d, 0x4fdd, 0xe3ba, 0x0, 0x0);
        gbc.writeMem(0x8575, { 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x43c6, gbc.sp());
        EXPECT(0x8576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8575));
        // 9C 01EB
        gbc.setState(0x5b46, 0xe45e, 0x4660, 0x88ff, 0x3933, 0x5c27, 0x0, 0x0);
        gbc.writeMem(0x5b46, { 0x9c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe45e, gbc.sp());
        EXPECT(0x5b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01EC
        gbc.setState(0xba82, 0xbfd4, 0xef70, 0x3cb7, 0xbb1, 0x4a0, 0x1, 0x1);
        gbc.writeMem(0xba82, { 0x9c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbfd4, gbc.sp());
        EXPECT(0xba83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xba82));
        // 9C 01ED
        gbc.setState(0xcba2, 0x5e1c, 0xfd60, 0x8df4, 0xa8bd, 0x616a, 0x0, 0x0);
        gbc.writeMem(0xcba2, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5e1c, gbc.sp());
        EXPECT(0xcba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcba2));
        // 9C 01EE
        gbc.setState(0x83ee, 0xe60c, 0xeaf0, 0x5623, 0xf975, 0x9806, 0x0, 0x1);
        gbc.writeMem(0x83ee, { 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe60c, gbc.sp());
        EXPECT(0x83ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x83ee));
        // 9C 01EF
        gbc.setState(0xa237, 0x50f4, 0xd8b0, 0xb8b0, 0x69f0, 0xe145, 0x1, 0x0);
        gbc.writeMem(0xa237, { 0x9c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x50f4, gbc.sp());
        EXPECT(0xa238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa237));
        // 9C 01F0
        gbc.setState(0x544e, 0xe686, 0x4160, 0xda97, 0x3077, 0xd35a, 0x1, 0x1);
        gbc.writeMem(0x544e, { 0x9c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe686, gbc.sp());
        EXPECT(0x544f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01F1
        gbc.setState(0x3e40, 0x9065, 0xa160, 0xcfe2, 0x3b30, 0xad70, 0x0, 0x1);
        gbc.writeMem(0x3e40, { 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9065, gbc.sp());
        EXPECT(0x3e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 01F2
        gbc.setState(0x5a12, 0xd218, 0xbb90, 0x2259, 0xc0f2, 0x69e, 0x1, 0x0);
        gbc.writeMem(0x5a12, { 0x9c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd218, gbc.sp());
        EXPECT(0x5a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01F3
        gbc.setState(0x5540, 0x25e0, 0xc560, 0x940d, 0xb2fd, 0x9878, 0x1, 0x1);
        gbc.writeMem(0x5540, { 0x9c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x25e0, gbc.sp());
        EXPECT(0x5541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01F4
        gbc.setState(0xc574, 0x1a33, 0x19a0, 0xa82f, 0xf3ba, 0x860a, 0x1, 0x1);
        gbc.writeMem(0xc574, { 0x9c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1a33, gbc.sp());
        EXPECT(0xc575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc574));
        // 9C 01F5
        gbc.setState(0xb609, 0x20d8, 0x8030, 0x85cf, 0x86c2, 0xa5a0, 0x0, 0x1);
        gbc.writeMem(0xb609, { 0x9c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x20d8, gbc.sp());
        EXPECT(0xb60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb609));
        // 9C 01F6
        gbc.setState(0xbfe1, 0xe2f, 0xfb90, 0xb656, 0x4547, 0xeac0, 0x0, 0x0);
        gbc.writeMem(0xbfe1, { 0x9c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe2f, gbc.sp());
        EXPECT(0xbfe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbfe1));
        // 9C 01F7
        gbc.setState(0xec69, 0xafcf, 0xcdc0, 0x8ac8, 0xf369, 0xa687, 0x0, 0x0);
        gbc.writeMem(0xec69, { 0x9c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xafcf, gbc.sp());
        EXPECT(0xec6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xec69));
        // 9C 01F8
        gbc.setState(0xec01, 0x68dd, 0xf920, 0xf732, 0xb5bf, 0x30bd, 0x1, 0x1);
        gbc.writeMem(0xec01, { 0x9c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x68dd, gbc.sp());
        EXPECT(0xec02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xec01));
        // 9C 01F9
        gbc.setState(0xc9a3, 0x73d2, 0x80a0, 0x2951, 0xa924, 0xbda0, 0x0, 0x1);
        gbc.writeMem(0xc9a3, { 0x9c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x73d2, gbc.sp());
        EXPECT(0xc9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc9a3));
        // 9C 01FA
        gbc.setState(0x332b, 0x2390, 0x3b90, 0x8d84, 0x2931, 0x1f91, 0x1, 0x1);
        gbc.writeMem(0x332b, { 0x9c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2390, gbc.sp());
        EXPECT(0x332c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 01FC
        gbc.setState(0xe486, 0x7f7, 0xa470, 0x5778, 0x1ded, 0xe29d, 0x0, 0x1);
        gbc.writeMem(0xe486, { 0x9c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7f7, gbc.sp());
        EXPECT(0xe487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe486));
        // 9C 01FE
        gbc.setState(0x6265, 0xc92b, 0x4680, 0x52c5, 0x51f3, 0x23f1, 0x0, 0x1);
        gbc.writeMem(0x6265, { 0x9c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc92b, gbc.sp());
        EXPECT(0x6266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0200
        gbc.setState(0xb70, 0x2412, 0x36d0, 0xa07d, 0x2b58, 0xa3dc, 0x0, 0x1);
        gbc.writeMem(0xb70, { 0x9c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2412, gbc.sp());
        EXPECT(0xb71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0201
        gbc.setState(0xa079, 0x9eb2, 0x53e0, 0xce93, 0x94ba, 0xb06b, 0x0, 0x1);
        gbc.writeMem(0xa079, { 0x9c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9eb2, gbc.sp());
        EXPECT(0xa07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa079));
        // 9C 0202
        gbc.setState(0x73c1, 0x100b, 0xd7d0, 0xe4af, 0xa03c, 0x77f, 0x1, 0x0);
        gbc.writeMem(0x73c1, { 0x9c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x100b, gbc.sp());
        EXPECT(0x73c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0203
        gbc.setState(0xafaa, 0x4699, 0xbe70, 0x6a24, 0xf319, 0x76ae, 0x0, 0x0);
        gbc.writeMem(0xafaa, { 0x9c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4699, gbc.sp());
        EXPECT(0xafab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xafaa));
        // 9C 0204
        gbc.setState(0x452a, 0x5a0e, 0xb940, 0x9788, 0xb59, 0xae60, 0x0, 0x1);
        gbc.writeMem(0x452a, { 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5a0e, gbc.sp());
        EXPECT(0x452b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0205
        gbc.setState(0xb4e0, 0xc108, 0xa4b0, 0x1a49, 0x39e8, 0xe5fb, 0x0, 0x0);
        gbc.writeMem(0xb4e0, { 0x9c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc108, gbc.sp());
        EXPECT(0xb4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb4e0));
        // 9C 0206
        gbc.setState(0x8d35, 0x8991, 0xedf0, 0xc713, 0xa6e2, 0x2ede, 0x1, 0x1);
        gbc.writeMem(0x8d35, { 0x9c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8991, gbc.sp());
        EXPECT(0x8d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8d35));
        // 9C 0207
        gbc.setState(0x8926, 0x3568, 0x6040, 0x4e22, 0xc6fb, 0x27b, 0x1, 0x1);
        gbc.writeMem(0x8926, { 0x9c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3568, gbc.sp());
        EXPECT(0x8927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8926));
        // 9C 0208
        gbc.setState(0x4f1f, 0xa7bb, 0x8020, 0x39d4, 0xf7a, 0x3af3, 0x0, 0x0);
        gbc.writeMem(0x4f1f, { 0x9c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa7bb, gbc.sp());
        EXPECT(0x4f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0209
        gbc.setState(0xf7, 0xf120, 0x9b80, 0x21e5, 0xfe0a, 0x353c, 0x0, 0x0);
        gbc.writeMem(0xf7, { 0x9c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf120, gbc.sp());
        EXPECT(0xf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 020A
        gbc.setState(0x3591, 0xbf95, 0xe6e0, 0xc74f, 0x1627, 0x2c9f, 0x0, 0x1);
        gbc.writeMem(0x3591, { 0x9c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbf95, gbc.sp());
        EXPECT(0x3592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 020B
        gbc.setState(0xc9f2, 0x68ee, 0xa220, 0x6716, 0xd7c8, 0x6754, 0x1, 0x1);
        gbc.writeMem(0xc9f2, { 0x9c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x68ee, gbc.sp());
        EXPECT(0xc9f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc9f2));
        // 9C 020C
        gbc.setState(0xe2b7, 0x2d22, 0x7ac0, 0x60d1, 0xb1eb, 0x51d5, 0x0, 0x1);
        gbc.writeMem(0xe2b7, { 0x9c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2d22, gbc.sp());
        EXPECT(0xe2b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe2b7));
        // 9C 020D
        gbc.setState(0x73b, 0x925c, 0xed10, 0x4f19, 0xb981, 0xfa71, 0x0, 0x1);
        gbc.writeMem(0x73b, { 0x9c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x925c, gbc.sp());
        EXPECT(0x73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 020F
        gbc.setState(0x62e9, 0x6efb, 0xec00, 0xdb21, 0x4d06, 0xe002, 0x0, 0x0);
        gbc.writeMem(0x62e9, { 0x9c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6efb, gbc.sp());
        EXPECT(0x62ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0210
        gbc.setState(0x9d3, 0x2457, 0x42b0, 0x9c39, 0x5fba, 0xd564, 0x1, 0x1);
        gbc.writeMem(0x9d3, { 0x9c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2457, gbc.sp());
        EXPECT(0x9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0211
        gbc.setState(0xc47b, 0xafca, 0x3e00, 0xd101, 0x7fee, 0x116, 0x0, 0x0);
        gbc.writeMem(0xc47b, { 0x9c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xafca, gbc.sp());
        EXPECT(0xc47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc47b));
        // 9C 0212
        gbc.setState(0x4824, 0xb94e, 0x2200, 0x7054, 0x95c4, 0xd05, 0x0, 0x0);
        gbc.writeMem(0x4824, { 0x9c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb94e, gbc.sp());
        EXPECT(0x4825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0213
        gbc.setState(0x573c, 0xaa14, 0x55a0, 0xe477, 0x97b2, 0x127, 0x1, 0x1);
        gbc.writeMem(0x573c, { 0x9c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaa14, gbc.sp());
        EXPECT(0x573d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0214
        gbc.setState(0xd097, 0xe55b, 0x4f60, 0xc8b4, 0x4e15, 0xfbf0, 0x0, 0x1);
        gbc.writeMem(0xd097, { 0x9c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe55b, gbc.sp());
        EXPECT(0xd098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd097));
        // 9C 0215
        gbc.setState(0xda43, 0x8dcb, 0x6950, 0xa317, 0xc5dc, 0xd16f, 0x1, 0x1);
        gbc.writeMem(0xda43, { 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8dcb, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xda43));
        // 9C 0216
        gbc.setState(0x9ea6, 0xaa26, 0xdf40, 0x31e9, 0x5480, 0x2fbc, 0x0, 0x0);
        gbc.writeMem(0x9ea6, { 0x9c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0x9ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9ea6));
        // 9C 0217
        gbc.setState(0x2e62, 0xb6ba, 0x5550, 0xb92f, 0x434b, 0x7ab0, 0x0, 0x0);
        gbc.writeMem(0x2e62, { 0x9c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb6ba, gbc.sp());
        EXPECT(0x2e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0218
        gbc.setState(0x60d, 0x29b1, 0x14e0, 0x8568, 0xe853, 0x578a, 0x0, 0x1);
        gbc.writeMem(0x60d, { 0x9c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x29b1, gbc.sp());
        EXPECT(0x60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0219
        gbc.setState(0x9385, 0xe210, 0x3a20, 0x89f8, 0x135d, 0x7818, 0x0, 0x0);
        gbc.writeMem(0x9385, { 0x9c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe210, gbc.sp());
        EXPECT(0x9386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9385));
        // 9C 021A
        gbc.setState(0xa521, 0xc390, 0xdfd0, 0x6b44, 0x3553, 0x2ce, 0x0, 0x1);
        gbc.writeMem(0xa521, { 0x9c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc390, gbc.sp());
        EXPECT(0xa522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa521));
        // 9C 021B
        gbc.setState(0xc268, 0xabe6, 0xcf80, 0x9370, 0x7d9, 0xadb, 0x1, 0x0);
        gbc.writeMem(0xc268, { 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xabe6, gbc.sp());
        EXPECT(0xc269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc268));
        // 9C 021C
        gbc.setState(0x9b73, 0x1ef8, 0x1520, 0xd861, 0xa2ed, 0xb3ce, 0x1, 0x0);
        gbc.writeMem(0x9b73, { 0x9c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1ef8, gbc.sp());
        EXPECT(0x9b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9b73));
        // 9C 021D
        gbc.setState(0x14ea, 0x4b01, 0xd1a0, 0x9, 0x9492, 0x248c, 0x1, 0x0);
        gbc.writeMem(0x14ea, { 0x9c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4b01, gbc.sp());
        EXPECT(0x14eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 021E
        gbc.setState(0x6a08, 0xa84c, 0x9370, 0x9271, 0xa618, 0x9baa, 0x0, 0x0);
        gbc.writeMem(0x6a08, { 0x9c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa84c, gbc.sp());
        EXPECT(0x6a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 021F
        gbc.setState(0x753f, 0xdb30, 0x1290, 0x597c, 0x7752, 0x8ace, 0x1, 0x0);
        gbc.writeMem(0x753f, { 0x9c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdb30, gbc.sp());
        EXPECT(0x7540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0221
        gbc.setState(0x693, 0x22e2, 0xaaf0, 0xe1fd, 0x3386, 0x248a, 0x1, 0x0);
        gbc.writeMem(0x693, { 0x9c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x22e2, gbc.sp());
        EXPECT(0x694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0222
        gbc.setState(0xc46d, 0x3a8, 0x4390, 0xe55, 0x1cc1, 0xf889, 0x1, 0x1);
        gbc.writeMem(0xc46d, { 0x9c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3a8, gbc.sp());
        EXPECT(0xc46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc46d));
        // 9C 0223
        gbc.setState(0xa1d4, 0xd005, 0x2f80, 0xbec5, 0xd6, 0x7d9e, 0x0, 0x0);
        gbc.writeMem(0xa1d4, { 0x9c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd005, gbc.sp());
        EXPECT(0xa1d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa1d4));
        // 9C 0224
        gbc.setState(0xada6, 0x7076, 0x8ed0, 0x82da, 0x9716, 0xbb7e, 0x0, 0x0);
        gbc.writeMem(0xada6, { 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7076, gbc.sp());
        EXPECT(0xada7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xada6));
        // 9C 0225
        gbc.setState(0x1c76, 0x856e, 0xf500, 0x29d8, 0xfc29, 0xccc1, 0x1, 0x1);
        gbc.writeMem(0x1c76, { 0x9c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x856e, gbc.sp());
        EXPECT(0x1c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0226
        gbc.setState(0x5cf7, 0xf01f, 0xad90, 0x334, 0x838d, 0xc29b, 0x0, 0x0);
        gbc.writeMem(0x5cf7, { 0x9c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0x5cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0227
        gbc.setState(0xb8a2, 0x9bb0, 0xb0c0, 0x822a, 0xb0f4, 0x9a1a, 0x0, 0x0);
        gbc.writeMem(0xb8a2, { 0x9c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9bb0, gbc.sp());
        EXPECT(0xb8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb8a2));
        // 9C 0228
        gbc.setState(0x2b72, 0x1635, 0xdab0, 0xf8fc, 0xb52e, 0x4b13, 0x1, 0x0);
        gbc.writeMem(0x2b72, { 0x9c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1635, gbc.sp());
        EXPECT(0x2b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0229
        gbc.setState(0x318c, 0x3206, 0xc5c0, 0xc0a0, 0x6892, 0xf971, 0x1, 0x1);
        gbc.writeMem(0x318c, { 0x9c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3206, gbc.sp());
        EXPECT(0x318d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 022A
        gbc.setState(0x1d86, 0x7571, 0xd2a0, 0x60e5, 0x9113, 0x2fcb, 0x1, 0x1);
        gbc.writeMem(0x1d86, { 0x9c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7571, gbc.sp());
        EXPECT(0x1d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 022B
        gbc.setState(0x8a91, 0xa528, 0xba50, 0xe071, 0xed95, 0xb596, 0x0, 0x1);
        gbc.writeMem(0x8a91, { 0x9c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa528, gbc.sp());
        EXPECT(0x8a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8a91));
        // 9C 022C
        gbc.setState(0x4ea9, 0x5ba7, 0xb0b0, 0xf330, 0xc1d3, 0x53ff, 0x0, 0x1);
        gbc.writeMem(0x4ea9, { 0x9c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5ba7, gbc.sp());
        EXPECT(0x4eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 022D
        gbc.setState(0x76cd, 0xf172, 0x66b0, 0x3994, 0xd8ec, 0x8007, 0x1, 0x0);
        gbc.writeMem(0x76cd, { 0x9c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf172, gbc.sp());
        EXPECT(0x76ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 022E
        gbc.setState(0xb8c7, 0xfe19, 0xb0, 0x53b, 0xcc3e, 0x9ed5, 0x0, 0x0);
        gbc.writeMem(0xb8c7, { 0x9c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfe19, gbc.sp());
        EXPECT(0xb8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb8c7));
        // 9C 022F
        gbc.setState(0xa69d, 0xa9df, 0x3000, 0xbdf9, 0xa51a, 0xb1cb, 0x0, 0x0);
        gbc.writeMem(0xa69d, { 0x9c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa9df, gbc.sp());
        EXPECT(0xa69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa69d));
        // 9C 0230
        gbc.setState(0xc020, 0x2ed6, 0x1e40, 0x3969, 0x77b8, 0x65c8, 0x1, 0x1);
        gbc.writeMem(0xc020, { 0x9c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2ed6, gbc.sp());
        EXPECT(0xc021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc020));
        // 9C 0231
        gbc.setState(0x2d3b, 0xee79, 0x59e0, 0x421, 0xcb87, 0x80ea, 0x0, 0x1);
        gbc.writeMem(0x2d3b, { 0x9c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xee79, gbc.sp());
        EXPECT(0x2d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0232
        gbc.setState(0x3576, 0xd742, 0x86a0, 0x92a4, 0xfaf7, 0x8c08, 0x1, 0x1);
        gbc.writeMem(0x3576, { 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd742, gbc.sp());
        EXPECT(0x3577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0234
        gbc.setState(0x35eb, 0x60b6, 0xd90, 0x7251, 0xc4f4, 0x1a3, 0x1, 0x1);
        gbc.writeMem(0x35eb, { 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x60b6, gbc.sp());
        EXPECT(0x35ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0235
        gbc.setState(0x4741, 0xf0c2, 0xb6d0, 0xa947, 0xb66d, 0x543d, 0x0, 0x1);
        gbc.writeMem(0x4741, { 0x9c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf0c2, gbc.sp());
        EXPECT(0x4742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0236
        gbc.setState(0x49ef, 0xe626, 0xc830, 0x20b6, 0x5ee5, 0xa1a1, 0x1, 0x0);
        gbc.writeMem(0x49ef, { 0x9c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe626, gbc.sp());
        EXPECT(0x49f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0237
        gbc.setState(0x75b2, 0xcb80, 0xa90, 0xc8d9, 0xd36a, 0xfeca, 0x1, 0x1);
        gbc.writeMem(0x75b2, { 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcb80, gbc.sp());
        EXPECT(0x75b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0238
        gbc.setState(0x38a3, 0x4ef3, 0x9c90, 0xdda1, 0xfa78, 0xb001, 0x1, 0x1);
        gbc.writeMem(0x38a3, { 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4ef3, gbc.sp());
        EXPECT(0x38a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0239
        gbc.setState(0x850e, 0xead, 0xc2a0, 0xca64, 0xefa2, 0x9965, 0x1, 0x0);
        gbc.writeMem(0x850e, { 0x9c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xead, gbc.sp());
        EXPECT(0x850f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x850e));
        // 9C 023A
        gbc.setState(0xe84a, 0xf46a, 0x8730, 0xdf9d, 0xbd65, 0x5c6f, 0x1, 0x0);
        gbc.writeMem(0xe84a, { 0x9c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf46a, gbc.sp());
        EXPECT(0xe84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe84a));
        // 9C 023C
        gbc.setState(0xba51, 0xd7b6, 0x8f50, 0x666c, 0x5689, 0xee0b, 0x1, 0x0);
        gbc.writeMem(0xba51, { 0x9c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd7b6, gbc.sp());
        EXPECT(0xba52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xba51));
        // 9C 023D
        gbc.setState(0xc127, 0xc0dc, 0xa230, 0x975e, 0xf91c, 0xcefd, 0x0, 0x1);
        gbc.writeMem(0xc127, { 0x9c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc0dc, gbc.sp());
        EXPECT(0xc128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc127));
        // 9C 023E
        gbc.setState(0x6a58, 0x65f0, 0xaa40, 0x6823, 0xe55e, 0x1f58, 0x0, 0x1);
        gbc.writeMem(0x6a58, { 0x9c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x65f0, gbc.sp());
        EXPECT(0x6a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 023F
        gbc.setState(0x6807, 0xd744, 0x5870, 0x63d4, 0xb59b, 0x28ce, 0x0, 0x0);
        gbc.writeMem(0x6807, { 0x9c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd744, gbc.sp());
        EXPECT(0x6808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0240
        gbc.setState(0x3ae3, 0x7ad1, 0x94a0, 0x6652, 0x1fe, 0x8273, 0x1, 0x1);
        gbc.writeMem(0x3ae3, { 0x9c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7ad1, gbc.sp());
        EXPECT(0x3ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0241
        gbc.setState(0x26d, 0x3861, 0xc2f0, 0x7290, 0xc723, 0xc858, 0x1, 0x0);
        gbc.writeMem(0x26d, { 0x9c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3861, gbc.sp());
        EXPECT(0x26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0243
        gbc.setState(0x8248, 0x6d08, 0xbad0, 0x3a43, 0x6d22, 0xecee, 0x0, 0x1);
        gbc.writeMem(0x8248, { 0x9c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6d08, gbc.sp());
        EXPECT(0x8249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8248));
        // 9C 0244
        gbc.setState(0x110f, 0x17b7, 0xe880, 0xf6bd, 0x9e5d, 0x9211, 0x0, 0x1);
        gbc.writeMem(0x110f, { 0x9c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x17b7, gbc.sp());
        EXPECT(0x1110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0245
        gbc.setState(0xd072, 0xfaa, 0x8ff0, 0x99e5, 0x2e28, 0xfde, 0x1, 0x1);
        gbc.writeMem(0xd072, { 0x9c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfaa, gbc.sp());
        EXPECT(0xd073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd072));
        // 9C 0247
        gbc.setState(0x47e9, 0xf3a7, 0xb600, 0x78d0, 0x21ea, 0xcec0, 0x1, 0x0);
        gbc.writeMem(0x47e9, { 0x9c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf3a7, gbc.sp());
        EXPECT(0x47ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0248
        gbc.setState(0xb795, 0x8e95, 0x6e50, 0x2a8d, 0xa99e, 0x5a20, 0x1, 0x1);
        gbc.writeMem(0xb795, { 0x9c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8e95, gbc.sp());
        EXPECT(0xb796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb795));
        // 9C 0249
        gbc.setState(0x56d8, 0xde07, 0xed40, 0x7ca7, 0xd678, 0xf801, 0x1, 0x1);
        gbc.writeMem(0x56d8, { 0x9c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xde07, gbc.sp());
        EXPECT(0x56d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 024A
        gbc.setState(0x60fa, 0xe075, 0x180, 0x406, 0xb310, 0xc4f2, 0x1, 0x1);
        gbc.writeMem(0x60fa, { 0x9c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe075, gbc.sp());
        EXPECT(0x60fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 024B
        gbc.setState(0xaaf8, 0xe2ad, 0x4bb0, 0x286f, 0xd086, 0x5bb1, 0x1, 0x1);
        gbc.writeMem(0xaaf8, { 0x9c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe2ad, gbc.sp());
        EXPECT(0xaaf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xaaf8));
        // 9C 024D
        gbc.setState(0xdeb8, 0x86ba, 0x14d0, 0xd0e3, 0x4e38, 0x2cd6, 0x0, 0x0);
        gbc.writeMem(0xdeb8, { 0x9c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x86ba, gbc.sp());
        EXPECT(0xdeb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xdeb8));
        // 9C 024E
        gbc.setState(0x8c26, 0xa9d7, 0x1c50, 0xe929, 0xf02b, 0x453f, 0x1, 0x1);
        gbc.writeMem(0x8c26, { 0x9c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa9d7, gbc.sp());
        EXPECT(0x8c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8c26));
        // 9C 024F
        gbc.setState(0xa39, 0x320e, 0xa580, 0x820, 0x3662, 0x80, 0x0, 0x0);
        gbc.writeMem(0xa39, { 0x9c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x320e, gbc.sp());
        EXPECT(0xa3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0250
        gbc.setState(0x874c, 0x5411, 0x9930, 0x81b6, 0x48a9, 0x8b7d, 0x1, 0x1);
        gbc.writeMem(0x874c, { 0x9c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5411, gbc.sp());
        EXPECT(0x874d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x874c));
        // 9C 0251
        gbc.setState(0xd580, 0x9b5f, 0xaa0, 0x3acb, 0xacc9, 0x764d, 0x0, 0x1);
        gbc.writeMem(0xd580, { 0x9c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9b5f, gbc.sp());
        EXPECT(0xd581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd580));
        // 9C 0252
        gbc.setState(0xd914, 0xf7f4, 0x920, 0x6db, 0xa58, 0x3bfa, 0x0, 0x1);
        gbc.writeMem(0xd914, { 0x9c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf7f4, gbc.sp());
        EXPECT(0xd915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd914));
        // 9C 0253
        gbc.setState(0x6b9c, 0x146d, 0x9d40, 0x3bfd, 0x4870, 0x22b0, 0x0, 0x0);
        gbc.writeMem(0x6b9c, { 0x9c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x146d, gbc.sp());
        EXPECT(0x6b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0254
        gbc.setState(0x99ec, 0x1a9f, 0x1ba0, 0x1a05, 0x1294, 0x2b78, 0x0, 0x1);
        gbc.writeMem(0x99ec, { 0x9c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1a9f, gbc.sp());
        EXPECT(0x99ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x99ec));
        // 9C 0255
        gbc.setState(0x44ce, 0xe2df, 0x1f70, 0xd6a1, 0x5efc, 0xd397, 0x1, 0x1);
        gbc.writeMem(0x44ce, { 0x9c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe2df, gbc.sp());
        EXPECT(0x44cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0256
        gbc.setState(0x7b47, 0xb16, 0x2de0, 0x1332, 0xf3d6, 0x64fe, 0x0, 0x0);
        gbc.writeMem(0x7b47, { 0x9c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb16, gbc.sp());
        EXPECT(0x7b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0257
        gbc.setState(0x1fe6, 0x7e3f, 0xe520, 0x87a0, 0xbe4b, 0x6dd1, 0x0, 0x1);
        gbc.writeMem(0x1fe6, { 0x9c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7e3f, gbc.sp());
        EXPECT(0x1fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0258
        gbc.setState(0xd34f, 0xbf3e, 0xeaa0, 0x4a36, 0xab04, 0xb0da, 0x0, 0x0);
        gbc.writeMem(0xd34f, { 0x9c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbf3e, gbc.sp());
        EXPECT(0xd350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd34f));
        // 9C 0259
        gbc.setState(0xbab6, 0x5a73, 0x3d00, 0x21cc, 0x5c08, 0x48c6, 0x1, 0x1);
        gbc.writeMem(0xbab6, { 0x9c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5a73, gbc.sp());
        EXPECT(0xbab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbab6));
        // 9C 025A
        gbc.setState(0xbf66, 0xfc91, 0xe3a0, 0xa87a, 0xd455, 0xf83f, 0x1, 0x0);
        gbc.writeMem(0xbf66, { 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfc91, gbc.sp());
        EXPECT(0xbf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbf66));
        // 9C 025B
        gbc.setState(0xc95b, 0x10ea, 0xec0, 0x8a40, 0x1f38, 0x41cf, 0x1, 0x1);
        gbc.writeMem(0xc95b, { 0x9c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x10ea, gbc.sp());
        EXPECT(0xc95c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc95b));
        // 9C 025C
        gbc.setState(0x4ea8, 0xe0a1, 0x1ac0, 0x2c7c, 0xd3c2, 0xe9f1, 0x0, 0x1);
        gbc.writeMem(0x4ea8, { 0x9c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe0a1, gbc.sp());
        EXPECT(0x4ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 025D
        gbc.setState(0x293d, 0x4f72, 0xf130, 0x35d2, 0xd294, 0xc855, 0x1, 0x0);
        gbc.writeMem(0x293d, { 0x9c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4f72, gbc.sp());
        EXPECT(0x293e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 025E
        gbc.setState(0x2a10, 0x3b53, 0xf490, 0xe24a, 0x4672, 0xd2c7, 0x1, 0x1);
        gbc.writeMem(0x2a10, { 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3b53, gbc.sp());
        EXPECT(0x2a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 025F
        gbc.setState(0x9dec, 0xd55, 0xd6b0, 0xd462, 0x28fd, 0x2000, 0x1, 0x1);
        gbc.writeMem(0x9dec, { 0x9c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd55, gbc.sp());
        EXPECT(0x9ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9dec));
        // 9C 0260
        gbc.setState(0x1e7d, 0x1911, 0x8c0, 0x700b, 0x8815, 0x8063, 0x1, 0x1);
        gbc.writeMem(0x1e7d, { 0x9c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1911, gbc.sp());
        EXPECT(0x1e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0261
        gbc.setState(0x3a67, 0x601c, 0x1b00, 0x1241, 0x731c, 0x7c2d, 0x1, 0x0);
        gbc.writeMem(0x3a67, { 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x601c, gbc.sp());
        EXPECT(0x3a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0262
        gbc.setState(0xc1ba, 0x6af4, 0xd180, 0xab4d, 0x424a, 0x377f, 0x0, 0x0);
        gbc.writeMem(0xc1ba, { 0x9c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6af4, gbc.sp());
        EXPECT(0xc1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc1ba));
        // 9C 0263
        gbc.setState(0xa464, 0x20f, 0x6a70, 0x52e3, 0x338a, 0x9652, 0x1, 0x0);
        gbc.writeMem(0xa464, { 0x9c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x20f, gbc.sp());
        EXPECT(0xa465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa464));
        // 9C 0264
        gbc.setState(0x871a, 0xe0a8, 0x4890, 0x2a65, 0x3d64, 0xde42, 0x1, 0x0);
        gbc.writeMem(0x871a, { 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe0a8, gbc.sp());
        EXPECT(0x871b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x871a));
        // 9C 0265
        gbc.setState(0xccc3, 0x99c7, 0x9a60, 0x6af4, 0x2fae, 0xb36, 0x1, 0x0);
        gbc.writeMem(0xccc3, { 0x9c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x99c7, gbc.sp());
        EXPECT(0xccc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xccc3));
        // 9C 0266
        gbc.setState(0x1899, 0xcd2b, 0x2cb0, 0x3f24, 0x3f8c, 0x3b01, 0x0, 0x0);
        gbc.writeMem(0x1899, { 0x9c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcd2b, gbc.sp());
        EXPECT(0x189a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0267
        gbc.setState(0x3f83, 0x3d9, 0x2b10, 0x4294, 0x7f56, 0x8cd4, 0x0, 0x1);
        gbc.writeMem(0x3f83, { 0x9c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3d9, gbc.sp());
        EXPECT(0x3f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0268
        gbc.setState(0x4a6c, 0x86f8, 0x2db0, 0x7de5, 0x8c5, 0x5c4c, 0x1, 0x0);
        gbc.writeMem(0x4a6c, { 0x9c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x86f8, gbc.sp());
        EXPECT(0x4a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0269
        gbc.setState(0xd46f, 0x5103, 0x4f0, 0x381f, 0x5170, 0xd1e5, 0x1, 0x0);
        gbc.writeMem(0xd46f, { 0x9c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5103, gbc.sp());
        EXPECT(0xd470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd46f));
        // 9C 026A
        gbc.setState(0x3aec, 0x772d, 0x6b50, 0x28a6, 0xdb99, 0x359b, 0x0, 0x0);
        gbc.writeMem(0x3aec, { 0x9c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x772d, gbc.sp());
        EXPECT(0x3aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 026B
        gbc.setState(0xc7e7, 0x9957, 0xb450, 0x6746, 0x5880, 0x698f, 0x0, 0x0);
        gbc.writeMem(0xc7e7, { 0x9c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9957, gbc.sp());
        EXPECT(0xc7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc7e7));
        // 9C 026C
        gbc.setState(0x97d5, 0xb8b5, 0x2670, 0xfaff, 0x4db7, 0x47de, 0x0, 0x0);
        gbc.writeMem(0x97d5, { 0x9c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb8b5, gbc.sp());
        EXPECT(0x97d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x97d5));
        // 9C 026D
        gbc.setState(0x9e21, 0xb9ed, 0xfc20, 0x5e45, 0x9eaf, 0x2465, 0x0, 0x0);
        gbc.writeMem(0x9e21, { 0x9c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb9ed, gbc.sp());
        EXPECT(0x9e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9e21));
        // 9C 026E
        gbc.setState(0x6205, 0x7480, 0xa7f0, 0xdf40, 0x9f5c, 0x2519, 0x1, 0x1);
        gbc.writeMem(0x6205, { 0x9c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7480, gbc.sp());
        EXPECT(0x6206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 026F
        gbc.setState(0xede9, 0xde65, 0x2780, 0x6d00, 0xc4f, 0xba47, 0x0, 0x0);
        gbc.writeMem(0xede9, { 0x9c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xde65, gbc.sp());
        EXPECT(0xedea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xede9));
        // 9C 0270
        gbc.setState(0xc72a, 0xea06, 0xd4a0, 0x9ba, 0xf774, 0x1741, 0x0, 0x1);
        gbc.writeMem(0xc72a, { 0x9c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xea06, gbc.sp());
        EXPECT(0xc72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc72a));
        // 9C 0271
        gbc.setState(0x9171, 0x207c, 0x9f50, 0x8b4a, 0xbf6e, 0xb2ea, 0x0, 0x1);
        gbc.writeMem(0x9171, { 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x207c, gbc.sp());
        EXPECT(0x9172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9171));
        // 9C 0272
        gbc.setState(0xe23e, 0x1497, 0x7030, 0x4010, 0x2013, 0xa4, 0x0, 0x1);
        gbc.writeMem(0xe23e, { 0x9c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1497, gbc.sp());
        EXPECT(0xe23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe23e));
        // 9C 0273
        gbc.setState(0x93cd, 0x7dcf, 0xe620, 0xe999, 0x94f9, 0x3ece, 0x0, 0x0);
        gbc.writeMem(0x93cd, { 0x9c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7dcf, gbc.sp());
        EXPECT(0x93ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x93cd));
        // 9C 0274
        gbc.setState(0x5927, 0xeb36, 0x8550, 0xdd47, 0x389e, 0xface, 0x1, 0x1);
        gbc.writeMem(0x5927, { 0x9c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xeb36, gbc.sp());
        EXPECT(0x5928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0276
        gbc.setState(0x3ed2, 0xf3dd, 0x6e70, 0x558c, 0x93c8, 0xaa61, 0x1, 0x0);
        gbc.writeMem(0x3ed2, { 0x9c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf3dd, gbc.sp());
        EXPECT(0x3ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0277
        gbc.setState(0x5b28, 0x1a6, 0x8fd0, 0xeb5c, 0x5214, 0x7135, 0x1, 0x0);
        gbc.writeMem(0x5b28, { 0x9c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1a6, gbc.sp());
        EXPECT(0x5b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0278
        gbc.setState(0xccc9, 0x35c2, 0xdce0, 0xb0d0, 0xe59a, 0xd81b, 0x1, 0x0);
        gbc.writeMem(0xccc9, { 0x9c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x35c2, gbc.sp());
        EXPECT(0xccca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xccc9));
        // 9C 0279
        gbc.setState(0x48e6, 0xa594, 0xab60, 0x4f36, 0x4750, 0xa570, 0x0, 0x0);
        gbc.writeMem(0x48e6, { 0x9c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa594, gbc.sp());
        EXPECT(0x48e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 027A
        gbc.setState(0x9b34, 0x2373, 0x1110, 0x6049, 0xd8bc, 0x3ef1, 0x1, 0x0);
        gbc.writeMem(0x9b34, { 0x9c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2373, gbc.sp());
        EXPECT(0x9b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9b34));
        // 9C 027B
        gbc.setState(0xd24b, 0x4a15, 0x1710, 0xb35b, 0x1019, 0x7371, 0x1, 0x0);
        gbc.writeMem(0xd24b, { 0x9c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4a15, gbc.sp());
        EXPECT(0xd24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd24b));
        // 9C 027C
        gbc.setState(0xb94f, 0x1b62, 0xa880, 0x9b23, 0x7fbb, 0xff28, 0x1, 0x1);
        gbc.writeMem(0xb94f, { 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1b62, gbc.sp());
        EXPECT(0xb950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb94f));
        // 9C 027D
        gbc.setState(0x6604, 0xc9e9, 0x8f20, 0xc93e, 0xeab4, 0xd552, 0x1, 0x1);
        gbc.writeMem(0x6604, { 0x9c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc9e9, gbc.sp());
        EXPECT(0x6605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 027E
        gbc.setState(0x4b1e, 0x8c52, 0x6960, 0xccf0, 0x13a, 0xda50, 0x0, 0x1);
        gbc.writeMem(0x4b1e, { 0x9c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8c52, gbc.sp());
        EXPECT(0x4b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 027F
        gbc.setState(0xa412, 0xf432, 0x9a20, 0x322, 0x418c, 0x2592, 0x1, 0x1);
        gbc.writeMem(0xa412, { 0x9c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf432, gbc.sp());
        EXPECT(0xa413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa412));
        // 9C 0280
        gbc.setState(0x7449, 0xd82d, 0x8200, 0xe3fb, 0xad90, 0x692, 0x1, 0x1);
        gbc.writeMem(0x7449, { 0x9c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd82d, gbc.sp());
        EXPECT(0x744a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0281
        gbc.setState(0xc2a4, 0x2a42, 0xba10, 0x534b, 0x1b51, 0xa88e, 0x0, 0x1);
        gbc.writeMem(0xc2a4, { 0x9c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2a42, gbc.sp());
        EXPECT(0xc2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc2a4));
        // 9C 0282
        gbc.setState(0x3fc0, 0x126d, 0x57d0, 0x1d5b, 0x63ee, 0x165e, 0x0, 0x0);
        gbc.writeMem(0x3fc0, { 0x9c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x126d, gbc.sp());
        EXPECT(0x3fc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0283
        gbc.setState(0x3dc, 0xacb2, 0xa080, 0x74d2, 0x69ba, 0xfccf, 0x0, 0x0);
        gbc.writeMem(0x3dc, { 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xacb2, gbc.sp());
        EXPECT(0x3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0284
        gbc.setState(0x226b, 0xe6a2, 0xb1c0, 0x7d64, 0x5a5a, 0xe36b, 0x1, 0x1);
        gbc.writeMem(0x226b, { 0x9c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe6a2, gbc.sp());
        EXPECT(0x226c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0286
        gbc.setState(0xe305, 0x7ca1, 0xf040, 0x2aad, 0xdc82, 0x5bff, 0x1, 0x1);
        gbc.writeMem(0xe305, { 0x9c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7ca1, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe305));
        // 9C 0287
        gbc.setState(0xc278, 0x821a, 0x8100, 0x5498, 0x90b0, 0x5e26, 0x1, 0x1);
        gbc.writeMem(0xc278, { 0x9c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x821a, gbc.sp());
        EXPECT(0xc279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc278));
        // 9C 0288
        gbc.setState(0x2697, 0xb4a4, 0xe200, 0x7ac4, 0x3076, 0xb45c, 0x1, 0x0);
        gbc.writeMem(0x2697, { 0x9c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb4a4, gbc.sp());
        EXPECT(0x2698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0289
        gbc.setState(0x4d11, 0x1955, 0x6ef0, 0x9ac6, 0x4dc6, 0x5796, 0x0, 0x0);
        gbc.writeMem(0x4d11, { 0x9c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1955, gbc.sp());
        EXPECT(0x4d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 028A
        gbc.setState(0x83ed, 0x6bbd, 0xc870, 0x889, 0xe75a, 0x1e4a, 0x1, 0x0);
        gbc.writeMem(0x83ed, { 0x9c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6bbd, gbc.sp());
        EXPECT(0x83ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x83ed));
        // 9C 028B
        gbc.setState(0xa676, 0xb7fa, 0x1750, 0x9995, 0xd141, 0xa6dd, 0x1, 0x1);
        gbc.writeMem(0xa676, { 0x9c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb7fa, gbc.sp());
        EXPECT(0xa677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa676));
        // 9C 028C
        gbc.setState(0x6513, 0x5431, 0x5dc0, 0x9f5d, 0x3e35, 0x7871, 0x0, 0x1);
        gbc.writeMem(0x6513, { 0x9c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5431, gbc.sp());
        EXPECT(0x6514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 028D
        gbc.setState(0x9d38, 0xf0b0, 0x34e0, 0x3e91, 0x9330, 0x104, 0x0, 0x1);
        gbc.writeMem(0x9d38, { 0x9c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf0b0, gbc.sp());
        EXPECT(0x9d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9d38));
        // 9C 028E
        gbc.setState(0x2f4, 0x1a3a, 0x2fc0, 0x3a44, 0x223d, 0xbb23, 0x1, 0x1);
        gbc.writeMem(0x2f4, { 0x9c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1a3a, gbc.sp());
        EXPECT(0x2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 028F
        gbc.setState(0x8dc8, 0x9847, 0xa1e0, 0x7d84, 0x2974, 0xa89, 0x0, 0x0);
        gbc.writeMem(0x8dc8, { 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9847, gbc.sp());
        EXPECT(0x8dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8dc8));
        // 9C 0290
        gbc.setState(0xaca1, 0x72a0, 0x7cc0, 0x7d49, 0xf954, 0xf90d, 0x1, 0x1);
        gbc.writeMem(0xaca1, { 0x9c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x72a0, gbc.sp());
        EXPECT(0xaca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xaca1));
        // 9C 0291
        gbc.setState(0x5248, 0xa416, 0x7b60, 0x3ffa, 0xce2c, 0x9cb8, 0x0, 0x0);
        gbc.writeMem(0x5248, { 0x9c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa416, gbc.sp());
        EXPECT(0x5249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0292
        gbc.setState(0x9a18, 0xc99d, 0x30, 0x9f0, 0xa8ec, 0x628d, 0x1, 0x1);
        gbc.writeMem(0x9a18, { 0x9c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc99d, gbc.sp());
        EXPECT(0x9a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9a18));
        // 9C 0293
        gbc.setState(0x3db7, 0x6e9a, 0x1150, 0x2e25, 0x886c, 0x97d, 0x0, 0x0);
        gbc.writeMem(0x3db7, { 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6e9a, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0294
        gbc.setState(0x2f62, 0xc4e8, 0x3ab0, 0x5c24, 0xcff8, 0xc61d, 0x0, 0x0);
        gbc.writeMem(0x2f62, { 0x9c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc4e8, gbc.sp());
        EXPECT(0x2f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0295
        gbc.setState(0xbc99, 0x7947, 0x1a0, 0xdcc, 0x5aef, 0x4699, 0x1, 0x1);
        gbc.writeMem(0xbc99, { 0x9c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7947, gbc.sp());
        EXPECT(0xbc9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbc99));
        // 9C 0296
        gbc.setState(0xed09, 0x5bd0, 0x1fc0, 0x67e3, 0x92b7, 0xf6da, 0x0, 0x1);
        gbc.writeMem(0xed09, { 0x9c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5bd0, gbc.sp());
        EXPECT(0xed0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xed09));
        // 9C 0297
        gbc.setState(0xb300, 0x9756, 0xeae0, 0x6433, 0xd5f6, 0x47ba, 0x1, 0x0);
        gbc.writeMem(0xb300, { 0x9c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9756, gbc.sp());
        EXPECT(0xb301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb300));
        // 9C 0298
        gbc.setState(0xc3b1, 0xec3e, 0x75b0, 0x2a0a, 0xbd8, 0x8c3c, 0x1, 0x0);
        gbc.writeMem(0xc3b1, { 0x9c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xec3e, gbc.sp());
        EXPECT(0xc3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc3b1));
        // 9C 0299
        gbc.setState(0x2859, 0xac78, 0xb2d0, 0x8e27, 0x44a0, 0x461f, 0x1, 0x1);
        gbc.writeMem(0x2859, { 0x9c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xac78, gbc.sp());
        EXPECT(0x285a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 029A
        gbc.setState(0x1c48, 0xf932, 0x5a90, 0x56d5, 0x335e, 0xfbdd, 0x1, 0x0);
        gbc.writeMem(0x1c48, { 0x9c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf932, gbc.sp());
        EXPECT(0x1c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 029C
        gbc.setState(0x2302, 0x4a8e, 0xac50, 0xe32c, 0xef2b, 0xe990, 0x1, 0x1);
        gbc.writeMem(0x2302, { 0x9c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4a8e, gbc.sp());
        EXPECT(0x2303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 029D
        gbc.setState(0xe972, 0x44e1, 0x1b90, 0x6698, 0xd233, 0x6631, 0x1, 0x0);
        gbc.writeMem(0xe972, { 0x9c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x44e1, gbc.sp());
        EXPECT(0xe973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe972));
        // 9C 029E
        gbc.setState(0x8610, 0xc66, 0x1a70, 0x4885, 0x270c, 0xfa8e, 0x1, 0x1);
        gbc.writeMem(0x8610, { 0x9c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc66, gbc.sp());
        EXPECT(0x8611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8610));
        // 9C 029F
        gbc.setState(0xe841, 0x7fef, 0x730, 0xd796, 0xe8ad, 0x6844, 0x0, 0x0);
        gbc.writeMem(0xe841, { 0x9c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7fef, gbc.sp());
        EXPECT(0xe842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe841));
        // 9C 02A0
        gbc.setState(0xe830, 0xb3a7, 0x85c0, 0xc3ec, 0xf577, 0xaffc, 0x0, 0x0);
        gbc.writeMem(0xe830, { 0x9c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb3a7, gbc.sp());
        EXPECT(0xe831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe830));
        // 9C 02A2
        gbc.setState(0xcfc7, 0xbf29, 0x2b40, 0xd5f, 0x2fba, 0xd913, 0x0, 0x1);
        gbc.writeMem(0xcfc7, { 0x9c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbf29, gbc.sp());
        EXPECT(0xcfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcfc7));
        // 9C 02A3
        gbc.setState(0x83be, 0xa858, 0x8c50, 0x3d0, 0xbe57, 0xefb8, 0x1, 0x0);
        gbc.writeMem(0x83be, { 0x9c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa858, gbc.sp());
        EXPECT(0x83bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x83be));
        // 9C 02A4
        gbc.setState(0xa8fd, 0x4e96, 0xd220, 0xc48b, 0xcdb0, 0xecc3, 0x0, 0x1);
        gbc.writeMem(0xa8fd, { 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4e96, gbc.sp());
        EXPECT(0xa8fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa8fd));
        // 9C 02A5
        gbc.setState(0xc74a, 0x5e67, 0x8c60, 0x2d8, 0x6af9, 0x486c, 0x1, 0x1);
        gbc.writeMem(0xc74a, { 0x9c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5e67, gbc.sp());
        EXPECT(0xc74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc74a));
        // 9C 02A6
        gbc.setState(0xc474, 0xc5f1, 0xf460, 0x2ac6, 0x896c, 0x9b75, 0x1, 0x1);
        gbc.writeMem(0xc474, { 0x9c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc5f1, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc474));
        // 9C 02A7
        gbc.setState(0x1307, 0x9825, 0x88d0, 0xda5b, 0xfc7d, 0x3635, 0x0, 0x0);
        gbc.writeMem(0x1307, { 0x9c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9825, gbc.sp());
        EXPECT(0x1308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02A8
        gbc.setState(0xd269, 0x6e4d, 0x48b0, 0x4a79, 0x99e0, 0x8a4d, 0x1, 0x0);
        gbc.writeMem(0xd269, { 0x9c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6e4d, gbc.sp());
        EXPECT(0xd26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd269));
        // 9C 02A9
        gbc.setState(0x681e, 0x545f, 0xf420, 0xb0a5, 0x698c, 0xe888, 0x0, 0x1);
        gbc.writeMem(0x681e, { 0x9c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x545f, gbc.sp());
        EXPECT(0x681f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02AB
        gbc.setState(0x1872, 0x24e1, 0xe880, 0xc5b1, 0x9ecf, 0x9de2, 0x1, 0x0);
        gbc.writeMem(0x1872, { 0x9c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x24e1, gbc.sp());
        EXPECT(0x1873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02AC
        gbc.setState(0x903d, 0xf9dd, 0xe0b0, 0xb4ec, 0xfbb2, 0xae9f, 0x1, 0x1);
        gbc.writeMem(0x903d, { 0x9c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf9dd, gbc.sp());
        EXPECT(0x903e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x903d));
        // 9C 02AD
        gbc.setState(0xe2c, 0x115b, 0xffe0, 0xb5c1, 0xc4ad, 0xccb9, 0x1, 0x0);
        gbc.writeMem(0xe2c, { 0x9c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x115b, gbc.sp());
        EXPECT(0xe2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02AE
        gbc.setState(0xae95, 0xe98c, 0x8390, 0xfa05, 0xfc1a, 0x35e9, 0x0, 0x0);
        gbc.writeMem(0xae95, { 0x9c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe98c, gbc.sp());
        EXPECT(0xae96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xae95));
        // 9C 02AF
        gbc.setState(0xef13, 0xb120, 0x8cb0, 0x418b, 0x9fb1, 0x4425, 0x1, 0x1);
        gbc.writeMem(0xef13, { 0x9c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb120, gbc.sp());
        EXPECT(0xef14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xef13));
        // 9C 02B0
        gbc.setState(0xdaa2, 0xabfc, 0xe720, 0xc3b7, 0xd1f6, 0x1be7, 0x0, 0x1);
        gbc.writeMem(0xdaa2, { 0x9c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xabfc, gbc.sp());
        EXPECT(0xdaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xdaa2));
        // 9C 02B1
        gbc.setState(0x99f9, 0x6d2f, 0x8ec0, 0x17a9, 0xb26b, 0xbf19, 0x1, 0x1);
        gbc.writeMem(0x99f9, { 0x9c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6d2f, gbc.sp());
        EXPECT(0x99fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x99f9));
        // 9C 02B3
        gbc.setState(0xad49, 0x51e8, 0x2170, 0x237b, 0x9c99, 0xfd6, 0x0, 0x0);
        gbc.writeMem(0xad49, { 0x9c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x51e8, gbc.sp());
        EXPECT(0xad4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xad49));
        // 9C 02B4
        gbc.setState(0xea13, 0xe6ca, 0x44f0, 0x4e00, 0xe94a, 0xab8d, 0x0, 0x1);
        gbc.writeMem(0xea13, { 0x9c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe6ca, gbc.sp());
        EXPECT(0xea14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xea13));
        // 9C 02B5
        gbc.setState(0x48b0, 0x1495, 0xdd50, 0xfe6a, 0x161f, 0x91fd, 0x1, 0x0);
        gbc.writeMem(0x48b0, { 0x9c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1495, gbc.sp());
        EXPECT(0x48b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02B6
        gbc.setState(0xdb90, 0x5c11, 0x7ea0, 0x5b1e, 0x2950, 0x71f9, 0x1, 0x0);
        gbc.writeMem(0xdb90, { 0x9c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5c11, gbc.sp());
        EXPECT(0xdb91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xdb90));
        // 9C 02B7
        gbc.setState(0x7669, 0xf4d1, 0xae10, 0x6d15, 0x7636, 0xd6a0, 0x0, 0x1);
        gbc.writeMem(0x7669, { 0x9c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf4d1, gbc.sp());
        EXPECT(0x766a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02B8
        gbc.setState(0x8304, 0xb1a0, 0xf190, 0xcf, 0x7665, 0x1d1b, 0x0, 0x1);
        gbc.writeMem(0x8304, { 0x9c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb1a0, gbc.sp());
        EXPECT(0x8305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8304));
        // 9C 02B9
        gbc.setState(0x194e, 0x2f04, 0xa370, 0x6821, 0xa98b, 0xd296, 0x1, 0x0);
        gbc.writeMem(0x194e, { 0x9c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2f04, gbc.sp());
        EXPECT(0x194f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02BA
        gbc.setState(0x78b8, 0x5799, 0x8160, 0x10cd, 0xeec6, 0x7b3a, 0x1, 0x1);
        gbc.writeMem(0x78b8, { 0x9c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5799, gbc.sp());
        EXPECT(0x78b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02BB
        gbc.setState(0xb96c, 0xed77, 0x880, 0x2ed8, 0xf85b, 0x89c, 0x1, 0x0);
        gbc.writeMem(0xb96c, { 0x9c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xed77, gbc.sp());
        EXPECT(0xb96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb96c));
        // 9C 02BC
        gbc.setState(0x378b, 0xa47a, 0x78a0, 0x12aa, 0xa492, 0xa4f0, 0x1, 0x1);
        gbc.writeMem(0x378b, { 0x9c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0x378c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02BD
        gbc.setState(0x8a18, 0x8d08, 0x9970, 0xe9df, 0x80fb, 0x88af, 0x1, 0x0);
        gbc.writeMem(0x8a18, { 0x9c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8d08, gbc.sp());
        EXPECT(0x8a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8a18));
        // 9C 02BE
        gbc.setState(0xc82d, 0x2f81, 0x31e0, 0xdbb8, 0xa8d5, 0x2d8, 0x0, 0x1);
        gbc.writeMem(0xc82d, { 0x9c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0xc82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc82d));
        // 9C 02BF
        gbc.setState(0xa0c2, 0x3739, 0xc6e0, 0x6b94, 0x37cc, 0x33eb, 0x0, 0x1);
        gbc.writeMem(0xa0c2, { 0x9c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3739, gbc.sp());
        EXPECT(0xa0c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa0c2));
        // 9C 02C0
        gbc.setState(0x1ccd, 0xafc6, 0x14e0, 0xda4f, 0xb3db, 0x72eb, 0x1, 0x0);
        gbc.writeMem(0x1ccd, { 0x9c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xafc6, gbc.sp());
        EXPECT(0x1cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02C1
        gbc.setState(0x48c2, 0x72ba, 0xb7e0, 0xa501, 0x22ff, 0xdc58, 0x0, 0x1);
        gbc.writeMem(0x48c2, { 0x9c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x72ba, gbc.sp());
        EXPECT(0x48c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02C2
        gbc.setState(0x4614, 0x2777, 0xcf20, 0x4749, 0xaa38, 0x2b68, 0x0, 0x1);
        gbc.writeMem(0x4614, { 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2777, gbc.sp());
        EXPECT(0x4615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02C3
        gbc.setState(0x340b, 0x71f1, 0x5ee0, 0x4811, 0xee96, 0x34a7, 0x0, 0x0);
        gbc.writeMem(0x340b, { 0x9c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x71f1, gbc.sp());
        EXPECT(0x340c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02C4
        gbc.setState(0x5dd0, 0x3953, 0xa270, 0xb53f, 0xa20d, 0xc3e6, 0x1, 0x0);
        gbc.writeMem(0x5dd0, { 0x9c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3953, gbc.sp());
        EXPECT(0x5dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02C5
        gbc.setState(0xb2d4, 0xe4fa, 0x67c0, 0xd5b0, 0x29b, 0xc4fe, 0x1, 0x0);
        gbc.writeMem(0xb2d4, { 0x9c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe4fa, gbc.sp());
        EXPECT(0xb2d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb2d4));
        // 9C 02C6
        gbc.setState(0x905f, 0xadb7, 0x8570, 0x2f03, 0xd06e, 0xecb3, 0x1, 0x1);
        gbc.writeMem(0x905f, { 0x9c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xadb7, gbc.sp());
        EXPECT(0x9060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x905f));
        // 9C 02C7
        gbc.setState(0xcbeb, 0x90c0, 0xb1d0, 0xe89d, 0xdfbe, 0xb5a, 0x1, 0x1);
        gbc.writeMem(0xcbeb, { 0x9c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x90c0, gbc.sp());
        EXPECT(0xcbec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xcbeb));
        // 9C 02C8
        gbc.setState(0x3b1, 0xfd0d, 0x2a60, 0xe077, 0x5e5c, 0xf406, 0x0, 0x1);
        gbc.writeMem(0x3b1, { 0x9c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfd0d, gbc.sp());
        EXPECT(0x3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02C9
        gbc.setState(0x316a, 0xda5d, 0xf4a0, 0xd59f, 0x4042, 0x5e58, 0x1, 0x0);
        gbc.writeMem(0x316a, { 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xda5d, gbc.sp());
        EXPECT(0x316b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02CA
        gbc.setState(0x656c, 0xae57, 0xe700, 0x3cf3, 0xe1e1, 0xe497, 0x0, 0x1);
        gbc.writeMem(0x656c, { 0x9c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xae57, gbc.sp());
        EXPECT(0x656d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02CB
        gbc.setState(0x841d, 0x23f4, 0x28f0, 0xf23, 0xced, 0xb73a, 0x0, 0x0);
        gbc.writeMem(0x841d, { 0x9c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x23f4, gbc.sp());
        EXPECT(0x841e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x841d));
        // 9C 02CC
        gbc.setState(0xea30, 0xa8d9, 0xd7f0, 0x1c2b, 0x3d53, 0xfb9d, 0x0, 0x1);
        gbc.writeMem(0xea30, { 0x9c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa8d9, gbc.sp());
        EXPECT(0xea31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xea30));
        // 9C 02CD
        gbc.setState(0xcd6, 0xcd3b, 0xb210, 0x2fc0, 0xd7e6, 0x2043, 0x0, 0x0);
        gbc.writeMem(0xcd6, { 0x9c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcd3b, gbc.sp());
        EXPECT(0xcd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02CE
        gbc.setState(0x929c, 0xaf0b, 0x5250, 0xce11, 0x79ac, 0x2afe, 0x0, 0x1);
        gbc.writeMem(0x929c, { 0x9c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xaf0b, gbc.sp());
        EXPECT(0x929d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x929c));
        // 9C 02CF
        gbc.setState(0xabe5, 0xc50e, 0x9700, 0xbd50, 0x420, 0xac48, 0x0, 0x1);
        gbc.writeMem(0xabe5, { 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc50e, gbc.sp());
        EXPECT(0xabe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xabe5));
        // 9C 02D0
        gbc.setState(0x76e7, 0xe76d, 0xbd60, 0xe5e5, 0x4b1e, 0xede8, 0x0, 0x0);
        gbc.writeMem(0x76e7, { 0x9c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe76d, gbc.sp());
        EXPECT(0x76e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02D1
        gbc.setState(0x9a11, 0x509b, 0x1990, 0xeb6b, 0xd82b, 0xa275, 0x0, 0x1);
        gbc.writeMem(0x9a11, { 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x509b, gbc.sp());
        EXPECT(0x9a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9a11));
        // 9C 02D2
        gbc.setState(0x5af6, 0x4601, 0x8b60, 0x3875, 0x99db, 0xd16a, 0x0, 0x0);
        gbc.writeMem(0x5af6, { 0x9c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4601, gbc.sp());
        EXPECT(0x5af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02D3
        gbc.setState(0xb6ce, 0xfa25, 0x5a50, 0xfddd, 0x8bff, 0x754b, 0x0, 0x1);
        gbc.writeMem(0xb6ce, { 0x9c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfa25, gbc.sp());
        EXPECT(0xb6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb6ce));
        // 9C 02D4
        gbc.setState(0x118d, 0x5dd4, 0x7820, 0x68b4, 0x8c7a, 0x33c1, 0x0, 0x1);
        gbc.writeMem(0x118d, { 0x9c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5dd4, gbc.sp());
        EXPECT(0x118e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02D5
        gbc.setState(0x39c, 0x3ebb, 0xcd90, 0xe4fb, 0x4f34, 0xcf25, 0x1, 0x1);
        gbc.writeMem(0x39c, { 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3ebb, gbc.sp());
        EXPECT(0x39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02D6
        gbc.setState(0xd878, 0xd2f, 0x79c0, 0x9d0e, 0xd1aa, 0x4220, 0x0, 0x0);
        gbc.writeMem(0xd878, { 0x9c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd2f, gbc.sp());
        EXPECT(0xd879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd878));
        // 9C 02D7
        gbc.setState(0x6ae7, 0x61d6, 0x1480, 0x430f, 0x5d14, 0xa311, 0x0, 0x1);
        gbc.writeMem(0x6ae7, { 0x9c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x61d6, gbc.sp());
        EXPECT(0x6ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02D8
        gbc.setState(0x688c, 0x6e5b, 0x53f0, 0x7e81, 0xcd21, 0x7850, 0x0, 0x1);
        gbc.writeMem(0x688c, { 0x9c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6e5b, gbc.sp());
        EXPECT(0x688d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02D9
        gbc.setState(0x7858, 0x5098, 0x27e0, 0x644c, 0x67fe, 0x7f2f, 0x0, 0x1);
        gbc.writeMem(0x7858, { 0x9c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5098, gbc.sp());
        EXPECT(0x7859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02DA
        gbc.setState(0xea0c, 0x30a2, 0xbb60, 0x1660, 0x6759, 0x8917, 0x0, 0x1);
        gbc.writeMem(0xea0c, { 0x9c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x30a2, gbc.sp());
        EXPECT(0xea0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xea0c));
        // 9C 02DB
        gbc.setState(0x27c0, 0x8133, 0x1920, 0xb014, 0x5e98, 0xf0f, 0x1, 0x1);
        gbc.writeMem(0x27c0, { 0x9c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8133, gbc.sp());
        EXPECT(0x27c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02DC
        gbc.setState(0x5916, 0x22e3, 0x6300, 0xed78, 0xfe9e, 0x2389, 0x0, 0x1);
        gbc.writeMem(0x5916, { 0x9c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x22e3, gbc.sp());
        EXPECT(0x5917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02DD
        gbc.setState(0x2b7a, 0x57a3, 0x2520, 0x2d1f, 0xc641, 0xa660, 0x0, 0x0);
        gbc.writeMem(0x2b7a, { 0x9c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x57a3, gbc.sp());
        EXPECT(0x2b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02DE
        gbc.setState(0xca80, 0xacc9, 0x7420, 0x2494, 0xb1af, 0x2888, 0x1, 0x1);
        gbc.writeMem(0xca80, { 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xacc9, gbc.sp());
        EXPECT(0xca81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xca80));
        // 9C 02DF
        gbc.setState(0x73ee, 0xb19d, 0x2a0, 0xece2, 0x6f8f, 0x6ad4, 0x0, 0x0);
        gbc.writeMem(0x73ee, { 0x9c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb19d, gbc.sp());
        EXPECT(0x73ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02E0
        gbc.setState(0x87cc, 0x4304, 0x58f0, 0x19a4, 0xe12f, 0xc439, 0x0, 0x1);
        gbc.writeMem(0x87cc, { 0x9c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4304, gbc.sp());
        EXPECT(0x87cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x87cc));
        // 9C 02E1
        gbc.setState(0xc229, 0xc21d, 0x9420, 0x8117, 0xf466, 0x70ac, 0x0, 0x1);
        gbc.writeMem(0xc229, { 0x9c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc21d, gbc.sp());
        EXPECT(0xc22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc229));
        // 9C 02E2
        gbc.setState(0x36b9, 0xab9a, 0x4f0, 0xdfc0, 0xa63, 0x8daf, 0x0, 0x0);
        gbc.writeMem(0x36b9, { 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xab9a, gbc.sp());
        EXPECT(0x36ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02E3
        gbc.setState(0x2db4, 0x2067, 0x6d30, 0x70b3, 0x7bb1, 0xa1c5, 0x1, 0x0);
        gbc.writeMem(0x2db4, { 0x9c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2067, gbc.sp());
        EXPECT(0x2db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02E4
        gbc.setState(0x2b9c, 0xdbe6, 0xc790, 0x359e, 0xcc64, 0x7f7a, 0x0, 0x0);
        gbc.writeMem(0x2b9c, { 0x9c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdbe6, gbc.sp());
        EXPECT(0x2b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02E5
        gbc.setState(0x4c06, 0x56ff, 0x83a0, 0x8eaa, 0x693a, 0x1639, 0x0, 0x1);
        gbc.writeMem(0x4c06, { 0x9c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x56ff, gbc.sp());
        EXPECT(0x4c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02E6
        gbc.setState(0x9b0e, 0x3fc9, 0x7cc0, 0xa2e9, 0x3f2e, 0x7b4a, 0x1, 0x0);
        gbc.writeMem(0x9b0e, { 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3fc9, gbc.sp());
        EXPECT(0x9b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9b0e));
        // 9C 02E7
        gbc.setState(0x5ed9, 0x9cf4, 0x4520, 0xb4d1, 0xb1d4, 0xb0a3, 0x0, 0x0);
        gbc.writeMem(0x5ed9, { 0x9c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9cf4, gbc.sp());
        EXPECT(0x5eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02E8
        gbc.setState(0x90af, 0x9924, 0xa80, 0x321, 0x654a, 0x1a96, 0x1, 0x1);
        gbc.writeMem(0x90af, { 0x9c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9924, gbc.sp());
        EXPECT(0x90b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x90af));
        // 9C 02E9
        gbc.setState(0x6d62, 0xf21b, 0xb1d0, 0x7854, 0xc55f, 0x8975, 0x1, 0x1);
        gbc.writeMem(0x6d62, { 0x9c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf21b, gbc.sp());
        EXPECT(0x6d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02EA
        gbc.setState(0xad62, 0x9631, 0xe6a0, 0x816e, 0x9d59, 0x94f8, 0x1, 0x1);
        gbc.writeMem(0xad62, { 0x9c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9631, gbc.sp());
        EXPECT(0xad63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xad62));
        // 9C 02EB
        gbc.setState(0x81dc, 0xe47e, 0xd60, 0x4ecc, 0x1371, 0x18cc, 0x1, 0x1);
        gbc.writeMem(0x81dc, { 0x9c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe47e, gbc.sp());
        EXPECT(0x81dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x81dc));
        // 9C 02EC
        gbc.setState(0x65ec, 0x88d2, 0x19c0, 0x3a6c, 0x6668, 0xa312, 0x1, 0x1);
        gbc.writeMem(0x65ec, { 0x9c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x88d2, gbc.sp());
        EXPECT(0x65ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02ED
        gbc.setState(0x727b, 0xa7d8, 0xde00, 0x6158, 0x1e80, 0x1961, 0x1, 0x0);
        gbc.writeMem(0x727b, { 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa7d8, gbc.sp());
        EXPECT(0x727c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02EE
        gbc.setState(0x710, 0x3b0d, 0x64f0, 0x5298, 0xb50c, 0x69a2, 0x1, 0x0);
        gbc.writeMem(0x710, { 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3b0d, gbc.sp());
        EXPECT(0x711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02EF
        gbc.setState(0x27be, 0x1111, 0x13a0, 0x3dda, 0x67a, 0x2089, 0x1, 0x1);
        gbc.writeMem(0x27be, { 0x9c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1111, gbc.sp());
        EXPECT(0x27bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02F1
        gbc.setState(0xdb1c, 0x705c, 0x5f40, 0xffbb, 0x5a8, 0x398, 0x0, 0x1);
        gbc.writeMem(0xdb1c, { 0x9c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x705c, gbc.sp());
        EXPECT(0xdb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xdb1c));
        // 9C 02F2
        gbc.setState(0xe464, 0x1cec, 0x620, 0x1ede, 0x437f, 0xeb8e, 0x0, 0x1);
        gbc.writeMem(0xe464, { 0x9c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1cec, gbc.sp());
        EXPECT(0xe465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe464));
        // 9C 02F3
        gbc.setState(0x2a39, 0x8b50, 0xd3e0, 0xebb5, 0xed3e, 0xfcc4, 0x0, 0x0);
        gbc.writeMem(0x2a39, { 0x9c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8b50, gbc.sp());
        EXPECT(0x2a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02F4
        gbc.setState(0x6302, 0x646b, 0x6a00, 0x76c6, 0xdeea, 0x8d3e, 0x0, 0x1);
        gbc.writeMem(0x6302, { 0x9c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x646b, gbc.sp());
        EXPECT(0x6303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02F6
        gbc.setState(0xb368, 0x27e7, 0xd5b0, 0x7a5, 0x7430, 0x91a6, 0x1, 0x0);
        gbc.writeMem(0xb368, { 0x9c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x27e7, gbc.sp());
        EXPECT(0xb369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb368));
        // 9C 02F7
        gbc.setState(0x2676, 0xd53f, 0x1f0, 0xefda, 0x38cb, 0xdf1a, 0x0, 0x0);
        gbc.writeMem(0x2676, { 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd53f, gbc.sp());
        EXPECT(0x2677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 02F8
        gbc.setState(0x91bf, 0xf0e8, 0x7fb0, 0x5a7b, 0x2e74, 0x3714, 0x1, 0x0);
        gbc.writeMem(0x91bf, { 0x9c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf0e8, gbc.sp());
        EXPECT(0x91c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x91bf));
        // 9C 02F9
        gbc.setState(0x525a, 0x4d9b, 0xc010, 0x7d03, 0xeef6, 0x367a, 0x1, 0x1);
        gbc.writeMem(0x525a, { 0x9c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4d9b, gbc.sp());
        EXPECT(0x525b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02FA
        gbc.setState(0x18ff, 0x740f, 0xb650, 0x9c02, 0x131e, 0x11f4, 0x0, 0x1);
        gbc.writeMem(0x18ff, { 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x740f, gbc.sp());
        EXPECT(0x1900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02FB
        gbc.setState(0x54da, 0x8ce3, 0x4e90, 0x9524, 0xddc8, 0x2c29, 0x0, 0x1);
        gbc.writeMem(0x54da, { 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8ce3, gbc.sp());
        EXPECT(0x54db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 02FC
        gbc.setState(0x8f17, 0xa223, 0x3f00, 0x1ff9, 0x46c4, 0xd5d2, 0x0, 0x1);
        gbc.writeMem(0x8f17, { 0x9c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa223, gbc.sp());
        EXPECT(0x8f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8f17));
        // 9C 02FD
        gbc.setState(0xa444, 0x90b0, 0xfbb0, 0xcd50, 0x1407, 0xebf6, 0x1, 0x1);
        gbc.writeMem(0xa444, { 0x9c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x90b0, gbc.sp());
        EXPECT(0xa445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa444));
        // 9C 02FE
        gbc.setState(0xb401, 0x55bc, 0x7ba0, 0x3c3c, 0xc308, 0x967d, 0x0, 0x1);
        gbc.writeMem(0xb401, { 0x9c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x55bc, gbc.sp());
        EXPECT(0xb402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb401));
        // 9C 02FF
        gbc.setState(0xe8a8, 0xbdfc, 0xac0, 0x2cae, 0x9262, 0x5230, 0x0, 0x1);
        gbc.writeMem(0xe8a8, { 0x9c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbdfc, gbc.sp());
        EXPECT(0xe8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe8a8));
        // 9C 0300
        gbc.setState(0x587b, 0x1df5, 0x6060, 0x268, 0xe864, 0x70a0, 0x0, 0x0);
        gbc.writeMem(0x587b, { 0x9c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1df5, gbc.sp());
        EXPECT(0x587c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0301
        gbc.setState(0xeb23, 0xfe7d, 0x8680, 0xa002, 0x4ee3, 0x9b42, 0x0, 0x0);
        gbc.writeMem(0xeb23, { 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfe7d, gbc.sp());
        EXPECT(0xeb24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xeb23));
        // 9C 0302
        gbc.setState(0xb439, 0x6eea, 0x4c80, 0x652b, 0x51b3, 0x32f4, 0x1, 0x1);
        gbc.writeMem(0xb439, { 0x9c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6eea, gbc.sp());
        EXPECT(0xb43a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb439));
        // 9C 0303
        gbc.setState(0x93c2, 0xe8f, 0x26d0, 0xfe2, 0xfddd, 0x54b8, 0x1, 0x1);
        gbc.writeMem(0x93c2, { 0x9c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe8f, gbc.sp());
        EXPECT(0x93c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x93c2));
        // 9C 0304
        gbc.setState(0xa4cb, 0x6ebb, 0x6360, 0x9fe7, 0xc390, 0x580b, 0x1, 0x0);
        gbc.writeMem(0xa4cb, { 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6ebb, gbc.sp());
        EXPECT(0xa4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa4cb));
        // 9C 0305
        gbc.setState(0x5c15, 0xd73f, 0x8460, 0x5cfa, 0x8737, 0x2e9a, 0x1, 0x0);
        gbc.writeMem(0x5c15, { 0x9c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd73f, gbc.sp());
        EXPECT(0x5c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0307
        gbc.setState(0xe42a, 0x4323, 0x6fd0, 0xb7b6, 0xfe5a, 0x6476, 0x0, 0x1);
        gbc.writeMem(0xe42a, { 0x9c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4323, gbc.sp());
        EXPECT(0xe42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe42a));
        // 9C 0309
        gbc.setState(0x7f8a, 0xdf8a, 0x3f10, 0xeaa3, 0x6064, 0xd878, 0x0, 0x0);
        gbc.writeMem(0x7f8a, { 0x9c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdf8a, gbc.sp());
        EXPECT(0x7f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 030A
        gbc.setState(0xa1eb, 0x7c35, 0x6990, 0x198d, 0xddde, 0xb838, 0x0, 0x1);
        gbc.writeMem(0xa1eb, { 0x9c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7c35, gbc.sp());
        EXPECT(0xa1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa1eb));
        // 9C 030B
        gbc.setState(0x682b, 0xfa5e, 0x6d80, 0xa323, 0x2090, 0xfc90, 0x1, 0x0);
        gbc.writeMem(0x682b, { 0x9c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfa5e, gbc.sp());
        EXPECT(0x682c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 030C
        gbc.setState(0x2bfc, 0x9684, 0xf1f0, 0x23e2, 0x6382, 0xb3b8, 0x1, 0x0);
        gbc.writeMem(0x2bfc, { 0x9c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9684, gbc.sp());
        EXPECT(0x2bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 030D
        gbc.setState(0x58ec, 0x1421, 0xed30, 0x83a6, 0x426b, 0x6dec, 0x1, 0x1);
        gbc.writeMem(0x58ec, { 0x9c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1421, gbc.sp());
        EXPECT(0x58ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 030E
        gbc.setState(0x1161, 0x480, 0x7880, 0x41af, 0x2bc6, 0xbce6, 0x1, 0x0);
        gbc.writeMem(0x1161, { 0x9c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x480, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 030F
        gbc.setState(0x8591, 0x68f7, 0x6f10, 0xe716, 0xb6db, 0x55ac, 0x1, 0x0);
        gbc.writeMem(0x8591, { 0x9c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x68f7, gbc.sp());
        EXPECT(0x8592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8591));
        // 9C 0310
        gbc.setState(0xe75b, 0x9ac6, 0xb6f0, 0x3606, 0x55b5, 0xa6eb, 0x0, 0x0);
        gbc.writeMem(0xe75b, { 0x9c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9ac6, gbc.sp());
        EXPECT(0xe75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe75b));
        // 9C 0311
        gbc.setState(0x57fd, 0x3132, 0xf620, 0xe228, 0x86d1, 0xcbec, 0x0, 0x0);
        gbc.writeMem(0x57fd, { 0x9c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3132, gbc.sp());
        EXPECT(0x57fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0312
        gbc.setState(0xbdab, 0x2138, 0xc0c0, 0xd626, 0xe4f2, 0x9f4d, 0x1, 0x0);
        gbc.writeMem(0xbdab, { 0x9c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2138, gbc.sp());
        EXPECT(0xbdac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbdab));
        // 9C 0313
        gbc.setState(0x6ad, 0x90ce, 0x81a0, 0xa3b2, 0x58d4, 0x4bbc, 0x0, 0x0);
        gbc.writeMem(0x6ad, { 0x9c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x90ce, gbc.sp());
        EXPECT(0x6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0314
        gbc.setState(0x7bf2, 0x8674, 0xe620, 0x319, 0x3282, 0x9f56, 0x0, 0x0);
        gbc.writeMem(0x7bf2, { 0x9c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8674, gbc.sp());
        EXPECT(0x7bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0315
        gbc.setState(0x2ee0, 0xfcb6, 0xf590, 0x41f5, 0xc5e1, 0x84d9, 0x0, 0x1);
        gbc.writeMem(0x2ee0, { 0x9c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfcb6, gbc.sp());
        EXPECT(0x2ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0316
        gbc.setState(0xa425, 0x5bb, 0xf200, 0x9c16, 0xf871, 0xb0f, 0x1, 0x0);
        gbc.writeMem(0xa425, { 0x9c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5bb, gbc.sp());
        EXPECT(0xa426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa425));
        // 9C 0317
        gbc.setState(0xca53, 0x8c51, 0x2cd0, 0xba3c, 0x4ef1, 0xc47b, 0x1, 0x1);
        gbc.writeMem(0xca53, { 0x9c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8c51, gbc.sp());
        EXPECT(0xca54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xca53));
        // 9C 0318
        gbc.setState(0x3224, 0xf99d, 0xcb90, 0x6c99, 0x55c, 0xd6b5, 0x0, 0x0);
        gbc.writeMem(0x3224, { 0x9c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf99d, gbc.sp());
        EXPECT(0x3225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0319
        gbc.setState(0x3926, 0xae35, 0x5f00, 0xe559, 0xe8c0, 0x2cb1, 0x0, 0x0);
        gbc.writeMem(0x3926, { 0x9c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xae35, gbc.sp());
        EXPECT(0x3927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 031A
        gbc.setState(0xa022, 0xc9bf, 0xf840, 0x12c7, 0x8448, 0x4e07, 0x0, 0x1);
        gbc.writeMem(0xa022, { 0x9c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc9bf, gbc.sp());
        EXPECT(0xa023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa022));
        // 9C 031B
        gbc.setState(0x1576, 0xdf74, 0x1000, 0xf619, 0xd32f, 0x9260, 0x0, 0x0);
        gbc.writeMem(0x1576, { 0x9c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdf74, gbc.sp());
        EXPECT(0x1577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 031C
        gbc.setState(0xc646, 0x1881, 0x3da0, 0x6c55, 0xa408, 0xb6f9, 0x1, 0x0);
        gbc.writeMem(0xc646, { 0x9c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1881, gbc.sp());
        EXPECT(0xc647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc646));
        // 9C 031E
        gbc.setState(0xa8ad, 0x7d66, 0x5080, 0x4fef, 0x56d3, 0x161b, 0x0, 0x0);
        gbc.writeMem(0xa8ad, { 0x9c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7d66, gbc.sp());
        EXPECT(0xa8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa8ad));
        // 9C 031F
        gbc.setState(0x485e, 0xc0f9, 0xd030, 0xdabe, 0x4872, 0x295d, 0x0, 0x0);
        gbc.writeMem(0x485e, { 0x9c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc0f9, gbc.sp());
        EXPECT(0x485f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0320
        gbc.setState(0x47a7, 0x3a4e, 0xacc0, 0xae80, 0x4b7a, 0x1ab9, 0x0, 0x1);
        gbc.writeMem(0x47a7, { 0x9c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3a4e, gbc.sp());
        EXPECT(0x47a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0321
        gbc.setState(0x3058, 0x64f4, 0xcd0, 0x5361, 0x2ef1, 0xc25c, 0x1, 0x0);
        gbc.writeMem(0x3058, { 0x9c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x64f4, gbc.sp());
        EXPECT(0x3059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0322
        gbc.setState(0x32fa, 0x8c87, 0xe820, 0x8c15, 0xbc69, 0xca11, 0x1, 0x1);
        gbc.writeMem(0x32fa, { 0x9c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8c87, gbc.sp());
        EXPECT(0x32fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0323
        gbc.setState(0x9017, 0x9850, 0x2360, 0x6ba0, 0x650c, 0xdfdd, 0x1, 0x0);
        gbc.writeMem(0x9017, { 0x9c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9850, gbc.sp());
        EXPECT(0x9018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9017));
        // 9C 0324
        gbc.setState(0xb64, 0x87cd, 0x5810, 0x1f5, 0xc1ca, 0xb9eb, 0x0, 0x1);
        gbc.writeMem(0xb64, { 0x9c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x87cd, gbc.sp());
        EXPECT(0xb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0325
        gbc.setState(0xbd0b, 0xff98, 0x8050, 0x5498, 0xddbe, 0x6581, 0x0, 0x1);
        gbc.writeMem(0xbd0b, { 0x9c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xff98, gbc.sp());
        EXPECT(0xbd0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbd0b));
        // 9C 0326
        gbc.setState(0x9975, 0x570f, 0x65d0, 0x851a, 0x80a9, 0xc0c4, 0x0, 0x0);
        gbc.writeMem(0x9975, { 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x570f, gbc.sp());
        EXPECT(0x9976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9975));
        // 9C 0327
        gbc.setState(0x6d51, 0xffdd, 0x69b0, 0xaadd, 0x1292, 0x3426, 0x0, 0x0);
        gbc.writeMem(0x6d51, { 0x9c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xffdd, gbc.sp());
        EXPECT(0x6d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0328
        gbc.setState(0x3da2, 0x155b, 0xcab0, 0x9f78, 0xb8c, 0xfa2, 0x1, 0x0);
        gbc.writeMem(0x3da2, { 0x9c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x155b, gbc.sp());
        EXPECT(0x3da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0329
        gbc.setState(0xc652, 0x4a25, 0xf710, 0x8c96, 0xc5a6, 0x6d5c, 0x1, 0x0);
        gbc.writeMem(0xc652, { 0x9c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4a25, gbc.sp());
        EXPECT(0xc653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc652));
        // 9C 032A
        gbc.setState(0xeb41, 0xf7bb, 0x9d80, 0x4d49, 0xf3ff, 0x95c4, 0x0, 0x0);
        gbc.writeMem(0xeb41, { 0x9c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf7bb, gbc.sp());
        EXPECT(0xeb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xeb41));
        // 9C 032B
        gbc.setState(0x9e02, 0x9a3d, 0xd5e0, 0x42e2, 0xcb2f, 0x9ed9, 0x1, 0x1);
        gbc.writeMem(0x9e02, { 0x9c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9a3d, gbc.sp());
        EXPECT(0x9e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9e02));
        // 9C 032C
        gbc.setState(0x2eaa, 0x4744, 0x4120, 0x10c4, 0x1e32, 0x891b, 0x1, 0x0);
        gbc.writeMem(0x2eaa, { 0x9c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4744, gbc.sp());
        EXPECT(0x2eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 032E
        gbc.setState(0xb0af, 0x382e, 0xee40, 0xcbe5, 0x9a8, 0x7275, 0x1, 0x0);
        gbc.writeMem(0xb0af, { 0x9c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x382e, gbc.sp());
        EXPECT(0xb0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb0af));
        // 9C 032F
        gbc.setState(0xe6ce, 0x7bcf, 0x6f80, 0x502b, 0xdbca, 0x7564, 0x1, 0x1);
        gbc.writeMem(0xe6ce, { 0x9c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7bcf, gbc.sp());
        EXPECT(0xe6cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe6ce));
        // 9C 0330
        gbc.setState(0xca37, 0x12b, 0xc220, 0xb2db, 0x85d6, 0x5adf, 0x1, 0x1);
        gbc.writeMem(0xca37, { 0x9c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x12b, gbc.sp());
        EXPECT(0xca38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xca37));
        // 9C 0331
        gbc.setState(0xb75d, 0x399a, 0x190, 0x9509, 0xa7db, 0x8619, 0x0, 0x0);
        gbc.writeMem(0xb75d, { 0x9c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x399a, gbc.sp());
        EXPECT(0xb75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb75d));
        // 9C 0332
        gbc.setState(0xa87f, 0x9262, 0x8080, 0x8983, 0xaa53, 0xe194, 0x0, 0x1);
        gbc.writeMem(0xa87f, { 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9262, gbc.sp());
        EXPECT(0xa880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa87f));
        // 9C 0333
        gbc.setState(0x5324, 0x3324, 0x4c40, 0x8afe, 0xb46a, 0x5a79, 0x1, 0x1);
        gbc.writeMem(0x5324, { 0x9c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3324, gbc.sp());
        EXPECT(0x5325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0334
        gbc.setState(0x11c0, 0x3b1a, 0x9270, 0x205a, 0x50cf, 0x1a72, 0x0, 0x0);
        gbc.writeMem(0x11c0, { 0x9c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3b1a, gbc.sp());
        EXPECT(0x11c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0335
        gbc.setState(0xd833, 0x281e, 0x86d0, 0x19c, 0xdd96, 0xf730, 0x0, 0x0);
        gbc.writeMem(0xd833, { 0x9c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x281e, gbc.sp());
        EXPECT(0xd834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd833));
        // 9C 0336
        gbc.setState(0x54c0, 0x786b, 0x8370, 0xdadd, 0x65bc, 0x6b25, 0x1, 0x1);
        gbc.writeMem(0x54c0, { 0x9c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x786b, gbc.sp());
        EXPECT(0x54c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0337
        gbc.setState(0xb63f, 0x530c, 0x7030, 0x4443, 0xb1d, 0xc084, 0x0, 0x1);
        gbc.writeMem(0xb63f, { 0x9c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x530c, gbc.sp());
        EXPECT(0xb640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb63f));
        // 9C 0338
        gbc.setState(0x5abb, 0xe504, 0xb500, 0x8193, 0x4ba2, 0x3a50, 0x1, 0x0);
        gbc.writeMem(0x5abb, { 0x9c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe504, gbc.sp());
        EXPECT(0x5abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0339
        gbc.setState(0xc19c, 0xa53f, 0xd430, 0x1d8c, 0xb709, 0xe90c, 0x1, 0x1);
        gbc.writeMem(0xc19c, { 0x9c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa53f, gbc.sp());
        EXPECT(0xc19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc19c));
        // 9C 033B
        gbc.setState(0x3671, 0x87c7, 0x88d0, 0x1228, 0xe245, 0x4e11, 0x0, 0x0);
        gbc.writeMem(0x3671, { 0x9c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x87c7, gbc.sp());
        EXPECT(0x3672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 033C
        gbc.setState(0x210f, 0x43b6, 0xa7e0, 0x82da, 0xb8d1, 0x618, 0x0, 0x0);
        gbc.writeMem(0x210f, { 0x9c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x43b6, gbc.sp());
        EXPECT(0x2110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 033D
        gbc.setState(0x76ea, 0xc75f, 0xfbb0, 0xe123, 0x8324, 0x3d5c, 0x0, 0x1);
        gbc.writeMem(0x76ea, { 0x9c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc75f, gbc.sp());
        EXPECT(0x76eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 033E
        gbc.setState(0x642c, 0xb106, 0x4f80, 0xdcf8, 0xe04d, 0x7135, 0x0, 0x1);
        gbc.writeMem(0x642c, { 0x9c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb106, gbc.sp());
        EXPECT(0x642d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 033F
        gbc.setState(0x30e0, 0x76d, 0xf120, 0xfc3, 0x358c, 0x6f80, 0x1, 0x0);
        gbc.writeMem(0x30e0, { 0x9c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x76d, gbc.sp());
        EXPECT(0x30e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0340
        gbc.setState(0xc1f6, 0x594, 0x5410, 0x64da, 0xb156, 0x965f, 0x1, 0x1);
        gbc.writeMem(0xc1f6, { 0x9c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x594, gbc.sp());
        EXPECT(0xc1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc1f6));
        // 9C 0341
        gbc.setState(0x522, 0x9f38, 0xfc80, 0x53d9, 0xf586, 0x91f8, 0x1, 0x1);
        gbc.writeMem(0x522, { 0x9c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9f38, gbc.sp());
        EXPECT(0x523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0342
        gbc.setState(0x8a86, 0xfc64, 0x7fe0, 0xe05b, 0xe8ac, 0x654, 0x1, 0x1);
        gbc.writeMem(0x8a86, { 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfc64, gbc.sp());
        EXPECT(0x8a87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8a86));
        // 9C 0343
        gbc.setState(0x439c, 0xe7fc, 0x98e0, 0x2a5f, 0x4335, 0x3189, 0x1, 0x0);
        gbc.writeMem(0x439c, { 0x9c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe7fc, gbc.sp());
        EXPECT(0x439d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0344
        gbc.setState(0x490b, 0x9f67, 0x6470, 0x8f81, 0x449b, 0x874, 0x1, 0x1);
        gbc.writeMem(0x490b, { 0x9c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9f67, gbc.sp());
        EXPECT(0x490c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0345
        gbc.setState(0xa5f4, 0xb546, 0x2d30, 0xef0f, 0xa60, 0x2cec, 0x0, 0x1);
        gbc.writeMem(0xa5f4, { 0x9c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb546, gbc.sp());
        EXPECT(0xa5f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa5f4));
        // 9C 0346
        gbc.setState(0x8019, 0xafd4, 0x5380, 0x783f, 0x2b15, 0x42d7, 0x0, 0x1);
        gbc.writeMem(0x8019, { 0x9c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xafd4, gbc.sp());
        EXPECT(0x801a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8019));
        // 9C 0347
        gbc.setState(0x9275, 0xd787, 0x9670, 0xbd15, 0xd5da, 0x4949, 0x1, 0x0);
        gbc.writeMem(0x9275, { 0x9c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd787, gbc.sp());
        EXPECT(0x9276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9275));
        // 9C 0348
        gbc.setState(0x9443, 0xe26, 0xc690, 0xe863, 0x2fbd, 0x4163, 0x0, 0x0);
        gbc.writeMem(0x9443, { 0x9c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe26, gbc.sp());
        EXPECT(0x9444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9443));
        // 9C 0349
        gbc.setState(0xa998, 0xce28, 0x2c40, 0xa75, 0x5960, 0xe5, 0x0, 0x1);
        gbc.writeMem(0xa998, { 0x9c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xce28, gbc.sp());
        EXPECT(0xa999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa998));
        // 9C 034B
        gbc.setState(0x1df3, 0xceb7, 0x2980, 0xb263, 0x9c4d, 0xbb14, 0x1, 0x1);
        gbc.writeMem(0x1df3, { 0x9c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xceb7, gbc.sp());
        EXPECT(0x1df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 034D
        gbc.setState(0x8216, 0xe8fa, 0xacd0, 0x543d, 0xd792, 0x2346, 0x0, 0x0);
        gbc.writeMem(0x8216, { 0x9c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe8fa, gbc.sp());
        EXPECT(0x8217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8216));
        // 9C 034E
        gbc.setState(0xbc6d, 0x9e05, 0x7f30, 0x5888, 0xfcf9, 0x3358, 0x1, 0x1);
        gbc.writeMem(0xbc6d, { 0x9c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9e05, gbc.sp());
        EXPECT(0xbc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbc6d));
        // 9C 034F
        gbc.setState(0x9bb2, 0x3aaa, 0xc220, 0xc2a1, 0x4579, 0xaee6, 0x0, 0x0);
        gbc.writeMem(0x9bb2, { 0x9c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3aaa, gbc.sp());
        EXPECT(0x9bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9bb2));
        // 9C 0350
        gbc.setState(0x8041, 0xea44, 0x3c20, 0x1d20, 0x9b5d, 0x6c8c, 0x1, 0x1);
        gbc.writeMem(0x8041, { 0x9c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xea44, gbc.sp());
        EXPECT(0x8042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8041));
        // 9C 0351
        gbc.setState(0x41e7, 0xef38, 0xa340, 0xa965, 0x31dc, 0x5b59, 0x0, 0x0);
        gbc.writeMem(0x41e7, { 0x9c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xef38, gbc.sp());
        EXPECT(0x41e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0352
        gbc.setState(0x17f0, 0x255, 0x5ef0, 0x5093, 0xb1d1, 0xb255, 0x1, 0x0);
        gbc.writeMem(0x17f0, { 0x9c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x255, gbc.sp());
        EXPECT(0x17f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0353
        gbc.setState(0x1644, 0xae6e, 0x8f0, 0x822b, 0x413d, 0xe086, 0x0, 0x1);
        gbc.writeMem(0x1644, { 0x9c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xae6e, gbc.sp());
        EXPECT(0x1645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0354
        gbc.setState(0x53e8, 0x8fc0, 0x4050, 0x6c4d, 0x44ca, 0xc66f, 0x1, 0x1);
        gbc.writeMem(0x53e8, { 0x9c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8fc0, gbc.sp());
        EXPECT(0x53e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0355
        gbc.setState(0x6e2d, 0x58d9, 0xa140, 0x832d, 0xa507, 0x7c6f, 0x1, 0x0);
        gbc.writeMem(0x6e2d, { 0x9c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x58d9, gbc.sp());
        EXPECT(0x6e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0356
        gbc.setState(0xc3f5, 0x9616, 0xa0b0, 0x93c8, 0x1a63, 0xefa, 0x0, 0x0);
        gbc.writeMem(0xc3f5, { 0x9c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9616, gbc.sp());
        EXPECT(0xc3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc3f5));
        // 9C 0357
        gbc.setState(0x2811, 0xc9f6, 0xa750, 0x2d03, 0xa3f4, 0x1038, 0x1, 0x1);
        gbc.writeMem(0x2811, { 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc9f6, gbc.sp());
        EXPECT(0x2812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0358
        gbc.setState(0x6434, 0xb736, 0xf1e0, 0x70f9, 0x183, 0xdc67, 0x1, 0x1);
        gbc.writeMem(0x6434, { 0x9c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb736, gbc.sp());
        EXPECT(0x6435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0359
        gbc.setState(0xae58, 0x1a78, 0xe0d0, 0x181, 0xfe76, 0x420c, 0x1, 0x1);
        gbc.writeMem(0xae58, { 0x9c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1a78, gbc.sp());
        EXPECT(0xae59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xae58));
        // 9C 035A
        gbc.setState(0x190c, 0x898b, 0x2830, 0x1790, 0xf9ac, 0x536, 0x0, 0x1);
        gbc.writeMem(0x190c, { 0x9c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x898b, gbc.sp());
        EXPECT(0x190d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 035B
        gbc.setState(0x67de, 0x9c21, 0x180, 0x9b9, 0x72ba, 0x5391, 0x0, 0x1);
        gbc.writeMem(0x67de, { 0x9c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9c21, gbc.sp());
        EXPECT(0x67df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 035C
        gbc.setState(0x541d, 0x837d, 0x16d0, 0x6144, 0x190c, 0xe4d8, 0x1, 0x1);
        gbc.writeMem(0x541d, { 0x9c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x837d, gbc.sp());
        EXPECT(0x541e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 035D
        gbc.setState(0xcb6, 0x1021, 0x9b40, 0xeb1, 0x257, 0x62f1, 0x1, 0x1);
        gbc.writeMem(0xcb6, { 0x9c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1021, gbc.sp());
        EXPECT(0xcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 035E
        gbc.setState(0x8a2a, 0x980f, 0x69e0, 0xcff6, 0xa73a, 0xae84, 0x0, 0x1);
        gbc.writeMem(0x8a2a, { 0x9c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x980f, gbc.sp());
        EXPECT(0x8a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8a2a));
        // 9C 0360
        gbc.setState(0xce20, 0x9f00, 0xd050, 0x80aa, 0x2967, 0xe306, 0x1, 0x1);
        gbc.writeMem(0xce20, { 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9f00, gbc.sp());
        EXPECT(0xce21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xce20));
        // 9C 0361
        gbc.setState(0xd754, 0xde87, 0xb4e0, 0x87de, 0x6452, 0x9588, 0x0, 0x0);
        gbc.writeMem(0xd754, { 0x9c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xde87, gbc.sp());
        EXPECT(0xd755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd754));
        // 9C 0362
        gbc.setState(0x10b, 0x1df0, 0xbb50, 0xe57f, 0x4e4a, 0xadbe, 0x1, 0x1);
        gbc.writeMem(0x10b, { 0x9c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1df0, gbc.sp());
        EXPECT(0x10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0364
        gbc.setState(0xc69d, 0x35ce, 0x2640, 0xc392, 0x461d, 0x57ea, 0x0, 0x0);
        gbc.writeMem(0xc69d, { 0x9c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x35ce, gbc.sp());
        EXPECT(0xc69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc69d));
        // 9C 0365
        gbc.setState(0xab85, 0x6c0, 0x5050, 0xb11c, 0xd3f2, 0x637a, 0x0, 0x0);
        gbc.writeMem(0xab85, { 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6c0, gbc.sp());
        EXPECT(0xab86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xab85));
        // 9C 0366
        gbc.setState(0xe9b6, 0xd022, 0xbd90, 0xe156, 0x5e7, 0xd6a7, 0x1, 0x1);
        gbc.writeMem(0xe9b6, { 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd022, gbc.sp());
        EXPECT(0xe9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe9b6));
        // 9C 0367
        gbc.setState(0xbd4c, 0x253f, 0xed40, 0x76d6, 0xbd7c, 0x38bf, 0x1, 0x0);
        gbc.writeMem(0xbd4c, { 0x9c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x253f, gbc.sp());
        EXPECT(0xbd4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbd4c));
        // 9C 0368
        gbc.setState(0x623a, 0x7320, 0x3d60, 0x1d68, 0xa309, 0xee9d, 0x0, 0x0);
        gbc.writeMem(0x623a, { 0x9c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7320, gbc.sp());
        EXPECT(0x623b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0369
        gbc.setState(0x132b, 0x8fe1, 0x5380, 0x8be9, 0xab3b, 0xbcb1, 0x0, 0x0);
        gbc.writeMem(0x132b, { 0x9c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8fe1, gbc.sp());
        EXPECT(0x132c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 036A
        gbc.setState(0x159b, 0x2422, 0x3690, 0xb434, 0x8885, 0xd923, 0x0, 0x0);
        gbc.writeMem(0x159b, { 0x9c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2422, gbc.sp());
        EXPECT(0x159c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 036B
        gbc.setState(0xf21, 0x9bef, 0x4f50, 0x4385, 0x1f4a, 0x891a, 0x0, 0x0);
        gbc.writeMem(0xf21, { 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9bef, gbc.sp());
        EXPECT(0xf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 036C
        gbc.setState(0xc49, 0x6123, 0x2440, 0x1dd6, 0xb2f0, 0x39d9, 0x0, 0x1);
        gbc.writeMem(0xc49, { 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6123, gbc.sp());
        EXPECT(0xc4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 036D
        gbc.setState(0x60c4, 0x6055, 0xdc00, 0x7977, 0x886c, 0x7d96, 0x1, 0x1);
        gbc.writeMem(0x60c4, { 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6055, gbc.sp());
        EXPECT(0x60c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 036E
        gbc.setState(0xa7a2, 0x85d4, 0x9bb0, 0xc664, 0xcaf9, 0xebcd, 0x1, 0x1);
        gbc.writeMem(0xa7a2, { 0x9c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x85d4, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa7a2));
        // 9C 036F
        gbc.setState(0x1d09, 0x11d8, 0xf6b0, 0x4e7d, 0x62bf, 0x5f4a, 0x1, 0x1);
        gbc.writeMem(0x1d09, { 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x11d8, gbc.sp());
        EXPECT(0x1d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0370
        gbc.setState(0xa054, 0xf5b, 0x12d0, 0x8933, 0xadc1, 0xa57e, 0x0, 0x0);
        gbc.writeMem(0xa054, { 0x9c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf5b, gbc.sp());
        EXPECT(0xa055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa054));
        // 9C 0371
        gbc.setState(0x7e40, 0x595c, 0x34e0, 0xf01f, 0x753a, 0x5491, 0x0, 0x1);
        gbc.writeMem(0x7e40, { 0x9c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x595c, gbc.sp());
        EXPECT(0x7e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0372
        gbc.setState(0xb1a5, 0x342a, 0x47e0, 0x8ae4, 0x8a49, 0x8839, 0x0, 0x0);
        gbc.writeMem(0xb1a5, { 0x9c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x342a, gbc.sp());
        EXPECT(0xb1a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb1a5));
        // 9C 0373
        gbc.setState(0x8886, 0x6086, 0x69c0, 0x6816, 0xb0e, 0x628e, 0x1, 0x0);
        gbc.writeMem(0x8886, { 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6086, gbc.sp());
        EXPECT(0x8887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8886));
        // 9C 0374
        gbc.setState(0x898d, 0xd3b, 0xf490, 0x5610, 0x3d78, 0xb7e6, 0x0, 0x1);
        gbc.writeMem(0x898d, { 0x9c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd3b, gbc.sp());
        EXPECT(0x898e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x898d));
        // 9C 0375
        gbc.setState(0xbfd7, 0xf9a4, 0xd0d0, 0xe165, 0x379c, 0x1a53, 0x0, 0x0);
        gbc.writeMem(0xbfd7, { 0x9c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf9a4, gbc.sp());
        EXPECT(0xbfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbfd7));
        // 9C 0376
        gbc.setState(0xc05c, 0xab96, 0x4350, 0x9a19, 0xb0dc, 0x3f90, 0x1, 0x1);
        gbc.writeMem(0xc05c, { 0x9c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xab96, gbc.sp());
        EXPECT(0xc05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc05c));
        // 9C 0377
        gbc.setState(0x348e, 0x102, 0xbff0, 0xdba6, 0x3898, 0xe45e, 0x0, 0x1);
        gbc.writeMem(0x348e, { 0x9c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x102, gbc.sp());
        EXPECT(0x348f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0378
        gbc.setState(0x963b, 0xf822, 0xc330, 0x5928, 0x139f, 0xdb03, 0x1, 0x0);
        gbc.writeMem(0x963b, { 0x9c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf822, gbc.sp());
        EXPECT(0x963c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x963b));
        // 9C 0379
        gbc.setState(0x2d9a, 0x6d84, 0x6680, 0x9987, 0xe6fe, 0x4607, 0x1, 0x0);
        gbc.writeMem(0x2d9a, { 0x9c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6d84, gbc.sp());
        EXPECT(0x2d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 037A
        gbc.setState(0x86e6, 0x2e7b, 0xa5a0, 0xe15f, 0x1d20, 0x4669, 0x0, 0x0);
        gbc.writeMem(0x86e6, { 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2e7b, gbc.sp());
        EXPECT(0x86e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x86e6));
        // 9C 037B
        gbc.setState(0x6efb, 0xd663, 0x1ae0, 0x3adf, 0xe054, 0xb866, 0x1, 0x1);
        gbc.writeMem(0x6efb, { 0x9c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd663, gbc.sp());
        EXPECT(0x6efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 037C
        gbc.setState(0x4195, 0xe529, 0xab10, 0x1012, 0x2c34, 0x6461, 0x0, 0x1);
        gbc.writeMem(0x4195, { 0x9c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe529, gbc.sp());
        EXPECT(0x4196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 037D
        gbc.setState(0xc3e7, 0x9300, 0x2bc0, 0xe35c, 0x52c3, 0xa9d6, 0x0, 0x0);
        gbc.writeMem(0xc3e7, { 0x9c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9300, gbc.sp());
        EXPECT(0xc3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc3e7));
        // 9C 037E
        gbc.setState(0xc8b3, 0xe112, 0x1f60, 0xb98, 0x8726, 0x8400, 0x1, 0x0);
        gbc.writeMem(0xc8b3, { 0x9c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe112, gbc.sp());
        EXPECT(0xc8b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc8b3));
        // 9C 037F
        gbc.setState(0x2f93, 0xd2ef, 0xa920, 0x2ecb, 0xf59a, 0x8449, 0x1, 0x0);
        gbc.writeMem(0x2f93, { 0x9c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd2ef, gbc.sp());
        EXPECT(0x2f94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0380
        gbc.setState(0x8810, 0xb8ee, 0xaf80, 0xd342, 0x89a, 0xd3dd, 0x1, 0x0);
        gbc.writeMem(0x8810, { 0x9c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb8ee, gbc.sp());
        EXPECT(0x8811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8810));
        // 9C 0381
        gbc.setState(0x70e0, 0x8a1d, 0x8f10, 0x50b4, 0xd2f2, 0x2536, 0x1, 0x1);
        gbc.writeMem(0x70e0, { 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8a1d, gbc.sp());
        EXPECT(0x70e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0382
        gbc.setState(0x4cda, 0x1c7f, 0xfe90, 0x5d22, 0xa63e, 0xba6b, 0x0, 0x0);
        gbc.writeMem(0x4cda, { 0x9c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1c7f, gbc.sp());
        EXPECT(0x4cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0383
        gbc.setState(0x30f3, 0xac75, 0xa260, 0x16ec, 0x3087, 0xf207, 0x1, 0x1);
        gbc.writeMem(0x30f3, { 0x9c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xac75, gbc.sp());
        EXPECT(0x30f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0384
        gbc.setState(0x429b, 0x4010, 0xe2f0, 0x5ef4, 0xc6f3, 0x9bd, 0x1, 0x1);
        gbc.writeMem(0x429b, { 0x9c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4010, gbc.sp());
        EXPECT(0x429c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0385
        gbc.setState(0xe029, 0x63cc, 0xb460, 0xfcc0, 0x5dad, 0x5bff, 0x0, 0x0);
        gbc.writeMem(0xe029, { 0x9c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x63cc, gbc.sp());
        EXPECT(0xe02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe029));
        // 9C 0386
        gbc.setState(0xa11d, 0xc84d, 0x4610, 0xbbdd, 0xaa7d, 0x74c3, 0x1, 0x1);
        gbc.writeMem(0xa11d, { 0x9c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc84d, gbc.sp());
        EXPECT(0xa11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa11d));
        // 9C 0387
        gbc.setState(0xe344, 0xc5b5, 0x3a60, 0xcf0d, 0xd431, 0x84cc, 0x0, 0x1);
        gbc.writeMem(0xe344, { 0x9c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc5b5, gbc.sp());
        EXPECT(0xe345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe344));
        // 9C 0388
        gbc.setState(0x2c32, 0xf5e6, 0xfa80, 0x8d4b, 0xcb36, 0xd4e, 0x0, 0x0);
        gbc.writeMem(0x2c32, { 0x9c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf5e6, gbc.sp());
        EXPECT(0x2c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0389
        gbc.setState(0x9f98, 0xe6d3, 0x4830, 0xef0a, 0xf188, 0xd67, 0x1, 0x0);
        gbc.writeMem(0x9f98, { 0x9c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe6d3, gbc.sp());
        EXPECT(0x9f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9f98));
        // 9C 038A
        gbc.setState(0x667c, 0xccec, 0x6230, 0xef4d, 0x8ca5, 0xd5dd, 0x0, 0x1);
        gbc.writeMem(0x667c, { 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xccec, gbc.sp());
        EXPECT(0x667d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 038B
        gbc.setState(0x9a7, 0xb60a, 0x920, 0x34de, 0x3e28, 0x71ea, 0x1, 0x0);
        gbc.writeMem(0x9a7, { 0x9c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb60a, gbc.sp());
        EXPECT(0x9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 038C
        gbc.setState(0xe49d, 0x883, 0x7900, 0xce12, 0xb70a, 0xea3b, 0x1, 0x1);
        gbc.writeMem(0xe49d, { 0x9c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x883, gbc.sp());
        EXPECT(0xe49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe49d));
        // 9C 038D
        gbc.setState(0x43c6, 0xff4c, 0xce00, 0xf3b4, 0xc563, 0x7176, 0x0, 0x1);
        gbc.writeMem(0x43c6, { 0x9c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xff4c, gbc.sp());
        EXPECT(0x43c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 038E
        gbc.setState(0x46e4, 0x28c8, 0xd60, 0x9cd6, 0xe34c, 0x3f44, 0x1, 0x1);
        gbc.writeMem(0x46e4, { 0x9c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x28c8, gbc.sp());
        EXPECT(0x46e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 038F
        gbc.setState(0x2283, 0x2138, 0xdab0, 0xadc5, 0xe90c, 0xa0e6, 0x1, 0x0);
        gbc.writeMem(0x2283, { 0x9c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2138, gbc.sp());
        EXPECT(0x2284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0390
        gbc.setState(0xd9df, 0x5cf0, 0x16c0, 0x6307, 0xa541, 0xbcfb, 0x0, 0x1);
        gbc.writeMem(0xd9df, { 0x9c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5cf0, gbc.sp());
        EXPECT(0xd9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd9df));
        // 9C 0391
        gbc.setState(0x8bc2, 0xed8c, 0x3cc0, 0xea8d, 0xb63, 0x68a3, 0x1, 0x1);
        gbc.writeMem(0x8bc2, { 0x9c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xed8c, gbc.sp());
        EXPECT(0x8bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8bc2));
        // 9C 0392
        gbc.setState(0xc664, 0x2356, 0xc240, 0x87fa, 0x14b5, 0xdc53, 0x1, 0x1);
        gbc.writeMem(0xc664, { 0x9c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2356, gbc.sp());
        EXPECT(0xc665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc664));
        // 9C 0393
        gbc.setState(0x906, 0x696b, 0x2520, 0x6657, 0xbace, 0xf7d3, 0x1, 0x0);
        gbc.writeMem(0x906, { 0x9c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x696b, gbc.sp());
        EXPECT(0x907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0394
        gbc.setState(0x1f0e, 0xd57d, 0xc390, 0x4219, 0x823a, 0x5994, 0x0, 0x1);
        gbc.writeMem(0x1f0e, { 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd57d, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0395
        gbc.setState(0x2dd0, 0xc70, 0x9350, 0xf49d, 0x6c2a, 0xd891, 0x0, 0x0);
        gbc.writeMem(0x2dd0, { 0x9c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc70, gbc.sp());
        EXPECT(0x2dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 0396
        gbc.setState(0x57b8, 0x3b75, 0x7990, 0xdb02, 0xe105, 0x1202, 0x1, 0x1);
        gbc.writeMem(0x57b8, { 0x9c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3b75, gbc.sp());
        EXPECT(0x57b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0397
        gbc.setState(0x5649, 0xd57e, 0xb390, 0x420d, 0x2133, 0x358f, 0x0, 0x1);
        gbc.writeMem(0x5649, { 0x9c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd57e, gbc.sp());
        EXPECT(0x564a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 0398
        gbc.setState(0xc0cd, 0xae74, 0x720, 0x4dc9, 0xe54f, 0xd3e9, 0x0, 0x1);
        gbc.writeMem(0xc0cd, { 0x9c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xae74, gbc.sp());
        EXPECT(0xc0ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc0cd));
        // 9C 0399
        gbc.setState(0x555c, 0x5a89, 0x7950, 0x6d42, 0x943c, 0x8219, 0x1, 0x1);
        gbc.writeMem(0x555c, { 0x9c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5a89, gbc.sp());
        EXPECT(0x555d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 039A
        gbc.setState(0x23c9, 0x532e, 0xbf10, 0xbb10, 0x4d40, 0x42c8, 0x0, 0x0);
        gbc.writeMem(0x23c9, { 0x9c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x532e, gbc.sp());
        EXPECT(0x23ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 039B
        gbc.setState(0x486e, 0xed6a, 0xce40, 0x755a, 0x5462, 0xb70b, 0x0, 0x1);
        gbc.writeMem(0x486e, { 0x9c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xed6a, gbc.sp());
        EXPECT(0x486f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 039C
        gbc.setState(0x8bf3, 0x10f2, 0x12c0, 0xa737, 0xa08b, 0x8456, 0x1, 0x1);
        gbc.writeMem(0x8bf3, { 0x9c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x10f2, gbc.sp());
        EXPECT(0x8bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8bf3));
        // 9C 039D
        gbc.setState(0xb223, 0x5afa, 0x6830, 0xfbc3, 0x4bf6, 0xea31, 0x0, 0x1);
        gbc.writeMem(0xb223, { 0x9c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5afa, gbc.sp());
        EXPECT(0xb224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb223));
        // 9C 039E
        gbc.setState(0x8503, 0x45cc, 0x42c0, 0xbf7e, 0xc8d3, 0x5bce, 0x0, 0x1);
        gbc.writeMem(0x8503, { 0x9c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x45cc, gbc.sp());
        EXPECT(0x8504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8503));
        // 9C 039F
        gbc.setState(0x2e12, 0x2264, 0xa990, 0x802b, 0x4c34, 0x2b31, 0x1, 0x1);
        gbc.writeMem(0x2e12, { 0x9c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2264, gbc.sp());
        EXPECT(0x2e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03A0
        gbc.setState(0x6f0e, 0x5a6e, 0x96d0, 0x5755, 0x7c37, 0x7a8e, 0x0, 0x0);
        gbc.writeMem(0x6f0e, { 0x9c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5a6e, gbc.sp());
        EXPECT(0x6f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03A1
        gbc.setState(0xc41, 0x21c4, 0x5da0, 0x2656, 0x60a1, 0xb93e, 0x0, 0x0);
        gbc.writeMem(0xc41, { 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x21c4, gbc.sp());
        EXPECT(0xc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03A3
        gbc.setState(0xaf80, 0x749, 0x3c00, 0xe42d, 0x8b93, 0x98a5, 0x0, 0x1);
        gbc.writeMem(0xaf80, { 0x9c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x749, gbc.sp());
        EXPECT(0xaf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xaf80));
        // 9C 03A4
        gbc.setState(0x818b, 0xda3e, 0x9c20, 0xa2e4, 0xeb3d, 0x3310, 0x0, 0x1);
        gbc.writeMem(0x818b, { 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xda3e, gbc.sp());
        EXPECT(0x818c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x818b));
        // 9C 03A5
        gbc.setState(0xa436, 0xde47, 0x3d70, 0x27c8, 0x386f, 0x80c4, 0x1, 0x0);
        gbc.writeMem(0xa436, { 0x9c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xde47, gbc.sp());
        EXPECT(0xa437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa436));
        // 9C 03A6
        gbc.setState(0xd454, 0x3f66, 0xbcd0, 0xbe0b, 0x2f51, 0xcfeb, 0x0, 0x1);
        gbc.writeMem(0xd454, { 0x9c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3f66, gbc.sp());
        EXPECT(0xd455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd454));
        // 9C 03A7
        gbc.setState(0xd5c1, 0x38e0, 0xd960, 0x2dff, 0x4ba4, 0x7a7b, 0x0, 0x1);
        gbc.writeMem(0xd5c1, { 0x9c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x38e0, gbc.sp());
        EXPECT(0xd5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd5c1));
        // 9C 03A8
        gbc.setState(0xedde, 0xe664, 0x5740, 0x945d, 0xd3ce, 0x59bf, 0x1, 0x1);
        gbc.writeMem(0xedde, { 0x9c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe664, gbc.sp());
        EXPECT(0xeddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xedde));
        // 9C 03A9
        gbc.setState(0x18ba, 0x650c, 0x73b0, 0x136b, 0xc593, 0x7078, 0x1, 0x1);
        gbc.writeMem(0x18ba, { 0x9c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x650c, gbc.sp());
        EXPECT(0x18bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03AA
        gbc.setState(0x9775, 0xdc82, 0xfdd0, 0x2040, 0x74a2, 0xe5e6, 0x0, 0x0);
        gbc.writeMem(0x9775, { 0x9c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdc82, gbc.sp());
        EXPECT(0x9776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x9775));
        // 9C 03AB
        gbc.setState(0x4397, 0xa7bc, 0x78e0, 0x6e3d, 0x7dac, 0x43e7, 0x1, 0x0);
        gbc.writeMem(0x4397, { 0x9c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa7bc, gbc.sp());
        EXPECT(0x4398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03AD
        gbc.setState(0x7c85, 0x3463, 0x7b70, 0x44cb, 0x7646, 0x93df, 0x0, 0x0);
        gbc.writeMem(0x7c85, { 0x9c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3463, gbc.sp());
        EXPECT(0x7c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03AE
        gbc.setState(0x377b, 0x29d3, 0xbc70, 0xb89d, 0x24c8, 0x672e, 0x0, 0x0);
        gbc.writeMem(0x377b, { 0x9c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x29d3, gbc.sp());
        EXPECT(0x377c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03AF
        gbc.setState(0x8ddf, 0xbf0a, 0x9a70, 0x30f6, 0xb426, 0x86ea, 0x0, 0x0);
        gbc.writeMem(0x8ddf, { 0x9c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbf0a, gbc.sp());
        EXPECT(0x8de0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8ddf));
        // 9C 03B0
        gbc.setState(0x69f, 0x3d92, 0xc230, 0xdfa3, 0xb03d, 0x1a9f, 0x0, 0x0);
        gbc.writeMem(0x69f, { 0x9c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3d92, gbc.sp());
        EXPECT(0x6a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03B1
        gbc.setState(0x3d5b, 0x8f39, 0xc0e0, 0x3ff5, 0xdb7, 0x6a92, 0x0, 0x0);
        gbc.writeMem(0x3d5b, { 0x9c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8f39, gbc.sp());
        EXPECT(0x3d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03B2
        gbc.setState(0x1b85, 0xac3d, 0xdcc0, 0xda09, 0xbb42, 0x6fa2, 0x0, 0x0);
        gbc.writeMem(0x1b85, { 0x9c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xac3d, gbc.sp());
        EXPECT(0x1b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03B4
        gbc.setState(0xa77e, 0xf837, 0xc410, 0x1f34, 0x8efa, 0x37e3, 0x1, 0x1);
        gbc.writeMem(0xa77e, { 0x9c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf837, gbc.sp());
        EXPECT(0xa77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa77e));
        // 9C 03B5
        gbc.setState(0x73c2, 0x9d82, 0x8af0, 0xd078, 0xc9e9, 0xd78, 0x1, 0x0);
        gbc.writeMem(0x73c2, { 0x9c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9d82, gbc.sp());
        EXPECT(0x73c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03B6
        gbc.setState(0x361, 0x25c1, 0xce70, 0xcf3a, 0x13de, 0x2bb, 0x0, 0x0);
        gbc.writeMem(0x361, { 0x9c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x25c1, gbc.sp());
        EXPECT(0x362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03B7
        gbc.setState(0xee9e, 0x456b, 0xb130, 0xb805, 0xed49, 0xaad4, 0x1, 0x0);
        gbc.writeMem(0xee9e, { 0x9c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x456b, gbc.sp());
        EXPECT(0xee9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xee9e));
        // 9C 03B8
        gbc.setState(0xbaed, 0xbda0, 0x5f00, 0x4bcd, 0xc604, 0xb98b, 0x1, 0x0);
        gbc.writeMem(0xbaed, { 0x9c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbda0, gbc.sp());
        EXPECT(0xbaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xbaed));
        // 9C 03B9
        gbc.setState(0x34d1, 0xc7cc, 0x6220, 0x6c7e, 0x7962, 0xca70, 0x1, 0x0);
        gbc.writeMem(0x34d1, { 0x9c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc7cc, gbc.sp());
        EXPECT(0x34d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03BA
        gbc.setState(0x4014, 0x3f29, 0x9fc0, 0xda9e, 0x5eb6, 0xc89d, 0x0, 0x1);
        gbc.writeMem(0x4014, { 0x9c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3f29, gbc.sp());
        EXPECT(0x4015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03BB
        gbc.setState(0x4263, 0xc9fd, 0x42c0, 0xe693, 0xaa21, 0xf4dc, 0x0, 0x1);
        gbc.writeMem(0x4263, { 0x9c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc9fd, gbc.sp());
        EXPECT(0x4264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03BC
        gbc.setState(0x806c, 0x6885, 0xb110, 0xc31c, 0xa622, 0xeb61, 0x1, 0x1);
        gbc.writeMem(0x806c, { 0x9c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6885, gbc.sp());
        EXPECT(0x806d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x806c));
        // 9C 03BD
        gbc.setState(0x3cf2, 0xe57a, 0x2b30, 0xad25, 0x1f61, 0x5d27, 0x1, 0x1);
        gbc.writeMem(0x3cf2, { 0x9c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe57a, gbc.sp());
        EXPECT(0x3cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03BE
        gbc.setState(0xd521, 0x3138, 0xfd60, 0xd98d, 0x3979, 0x5e42, 0x0, 0x0);
        gbc.writeMem(0xd521, { 0x9c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3138, gbc.sp());
        EXPECT(0xd522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd521));
        // 9C 03BF
        gbc.setState(0x7ba0, 0xde51, 0xa10, 0x6fe, 0xc9b4, 0x3bbc, 0x1, 0x0);
        gbc.writeMem(0x7ba0, { 0x9c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xde51, gbc.sp());
        EXPECT(0x7ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03C0
        gbc.setState(0x90a1, 0x28a7, 0x1520, 0xea10, 0x6365, 0x731, 0x1, 0x1);
        gbc.writeMem(0x90a1, { 0x9c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x28a7, gbc.sp());
        EXPECT(0x90a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x90a1));
        // 9C 03C1
        gbc.setState(0x146a, 0x8615, 0xa2c0, 0x14bb, 0x46a4, 0xf0c8, 0x0, 0x1);
        gbc.writeMem(0x146a, { 0x9c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8615, gbc.sp());
        EXPECT(0x146b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03C2
        gbc.setState(0x49d5, 0x6843, 0x9e0, 0x5058, 0x3453, 0xce57, 0x0, 0x0);
        gbc.writeMem(0x49d5, { 0x9c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6843, gbc.sp());
        EXPECT(0x49d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03C4
        gbc.setState(0xcb, 0x4607, 0x7a50, 0xb910, 0x378b, 0x62f, 0x0, 0x1);
        gbc.writeMem(0xcb, { 0x9c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4607, gbc.sp());
        EXPECT(0xcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03C5
        gbc.setState(0x5c13, 0x2266, 0x44c0, 0x7b87, 0x149c, 0x6b1b, 0x1, 0x0);
        gbc.writeMem(0x5c13, { 0x9c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2266, gbc.sp());
        EXPECT(0x5c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03C6
        gbc.setState(0x242c, 0x9f1e, 0x35f0, 0xc280, 0x59, 0x54fb, 0x0, 0x1);
        gbc.writeMem(0x242c, { 0x9c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9f1e, gbc.sp());
        EXPECT(0x242d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03C7
        gbc.setState(0x33b5, 0xc629, 0x6250, 0xb7f3, 0xc4b0, 0xaf47, 0x0, 0x1);
        gbc.writeMem(0x33b5, { 0x9c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc629, gbc.sp());
        EXPECT(0x33b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03C8
        gbc.setState(0xb71a, 0xd70d, 0x7b40, 0xb41, 0x79d4, 0x1b91, 0x1, 0x1);
        gbc.writeMem(0xb71a, { 0x9c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd70d, gbc.sp());
        EXPECT(0xb71b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb71a));
        // 9C 03C9
        gbc.setState(0xd602, 0x9914, 0xcc0, 0x141e, 0x85e1, 0x6592, 0x1, 0x0);
        gbc.writeMem(0xd602, { 0x9c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9914, gbc.sp());
        EXPECT(0xd603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd602));
        // 9C 03CA
        gbc.setState(0xa8bf, 0xb7ce, 0x81d0, 0xce5, 0x24bb, 0xab48, 0x1, 0x1);
        gbc.writeMem(0xa8bf, { 0x9c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb7ce, gbc.sp());
        EXPECT(0xa8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa8bf));
        // 9C 03CB
        gbc.setState(0xdf78, 0xf08, 0x44b0, 0x37a4, 0x342f, 0x2b23, 0x0, 0x1);
        gbc.writeMem(0xdf78, { 0x9c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf08, gbc.sp());
        EXPECT(0xdf79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xdf78));
        // 9C 03CC
        gbc.setState(0xd7e8, 0x64d5, 0xc70, 0x76f5, 0x7d27, 0x81cd, 0x0, 0x1);
        gbc.writeMem(0xd7e8, { 0x9c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x64d5, gbc.sp());
        EXPECT(0xd7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd7e8));
        // 9C 03CD
        gbc.setState(0x2145, 0xa6af, 0xea80, 0x51ee, 0xde07, 0xff80, 0x0, 0x1);
        gbc.writeMem(0x2145, { 0x9c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa6af, gbc.sp());
        EXPECT(0x2146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03CE
        gbc.setState(0x1d7, 0x921e, 0x4f40, 0x17aa, 0xf98c, 0x48d4, 0x0, 0x0);
        gbc.writeMem(0x1d7, { 0x9c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x921e, gbc.sp());
        EXPECT(0x1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03CF
        gbc.setState(0x377f, 0x9667, 0xc780, 0xbff3, 0xeaba, 0xb607, 0x1, 0x0);
        gbc.writeMem(0x377f, { 0x9c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9667, gbc.sp());
        EXPECT(0x3780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03D0
        gbc.setState(0x6b6e, 0x77e7, 0x4560, 0x3908, 0x5271, 0x33c3, 0x0, 0x0);
        gbc.writeMem(0x6b6e, { 0x9c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x77e7, gbc.sp());
        EXPECT(0x6b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03D1
        gbc.setState(0xe32c, 0x9dba, 0x8ea0, 0xfb62, 0xefa6, 0x9d16, 0x0, 0x0);
        gbc.writeMem(0xe32c, { 0x9c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9dba, gbc.sp());
        EXPECT(0xe32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xe32c));
        // 9C 03D2
        gbc.setState(0x84ae, 0x1fbd, 0xeeb0, 0x5d9c, 0xf602, 0x9479, 0x0, 0x0);
        gbc.writeMem(0x84ae, { 0x9c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1fbd, gbc.sp());
        EXPECT(0x84af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x84ae));
        // 9C 03D3
        gbc.setState(0x64a, 0x97a9, 0x20, 0x7eb9, 0x7300, 0x7e44, 0x1, 0x1);
        gbc.writeMem(0x64a, { 0x9c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x97a9, gbc.sp());
        EXPECT(0x64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03D4
        gbc.setState(0x5b71, 0x225b, 0x1960, 0xf018, 0x2c70, 0xf9ca, 0x1, 0x1);
        gbc.writeMem(0x5b71, { 0x9c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x225b, gbc.sp());
        EXPECT(0x5b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03D5
        gbc.setState(0x6329, 0x7062, 0xda90, 0x708a, 0x77db, 0x9cd6, 0x0, 0x1);
        gbc.writeMem(0x6329, { 0x9c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7062, gbc.sp());
        EXPECT(0x632a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03D6
        gbc.setState(0x15cc, 0x6872, 0x95f0, 0xc91e, 0xbf3e, 0x1366, 0x1, 0x1);
        gbc.writeMem(0x15cc, { 0x9c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6872, gbc.sp());
        EXPECT(0x15cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03D7
        gbc.setState(0x6314, 0x741c, 0x6c0, 0x6792, 0x9839, 0xee99, 0x1, 0x1);
        gbc.writeMem(0x6314, { 0x9c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x741c, gbc.sp());
        EXPECT(0x6315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03D8
        gbc.setState(0xd972, 0xca7c, 0x1f0, 0x8b4c, 0xcefa, 0xf1e5, 0x0, 0x1);
        gbc.writeMem(0xd972, { 0x9c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xca7c, gbc.sp());
        EXPECT(0xd973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd972));
        // 9C 03D9
        gbc.setState(0x75e0, 0xa1ee, 0x1270, 0x40ed, 0x1e45, 0x239d, 0x0, 0x1);
        gbc.writeMem(0x75e0, { 0x9c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa1ee, gbc.sp());
        EXPECT(0x75e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03DA
        gbc.setState(0x18c4, 0x4a33, 0x22f0, 0xfc56, 0xb6a1, 0x1c1, 0x0, 0x0);
        gbc.writeMem(0x18c4, { 0x9c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4a33, gbc.sp());
        EXPECT(0x18c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03DB
        gbc.setState(0xd800, 0x2042, 0x9d70, 0x661b, 0xd948, 0xb240, 0x1, 0x1);
        gbc.writeMem(0xd800, { 0x9c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2042, gbc.sp());
        EXPECT(0xd801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd800));
        // 9C 03DC
        gbc.setState(0x286e, 0x1b5a, 0x78e0, 0x5028, 0x9628, 0x87ba, 0x0, 0x0);
        gbc.writeMem(0x286e, { 0x9c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1b5a, gbc.sp());
        EXPECT(0x286f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03DD
        gbc.setState(0xb8b1, 0x5035, 0xf7e0, 0xa71d, 0xf547, 0x9fa9, 0x1, 0x1);
        gbc.writeMem(0xb8b1, { 0x9c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5035, gbc.sp());
        EXPECT(0xb8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb8b1));
        // 9C 03DE
        gbc.setState(0x1cfc, 0xc7d, 0x570, 0x8289, 0xff6d, 0xadcd, 0x1, 0x1);
        gbc.writeMem(0x1cfc, { 0x9c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc7d, gbc.sp());
        EXPECT(0x1cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03DF
        gbc.setState(0x1383, 0xd93d, 0xe4a0, 0xcfb8, 0x1fea, 0x8d35, 0x0, 0x0);
        gbc.writeMem(0x1383, { 0x9c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd93d, gbc.sp());
        EXPECT(0x1384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03E0
        gbc.setState(0x32ea, 0x8b6a, 0xbf20, 0xc1c0, 0x27b4, 0x1366, 0x1, 0x1);
        gbc.writeMem(0x32ea, { 0x9c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8b6a, gbc.sp());
        EXPECT(0x32eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03E1
        gbc.setState(0x1902, 0xee16, 0x1db0, 0xb6d9, 0x6667, 0x4100, 0x0, 0x0);
        gbc.writeMem(0x1902, { 0x9c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xee16, gbc.sp());
        EXPECT(0x1903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03E2
        gbc.setState(0xd9a9, 0x7bc2, 0x1df0, 0xe58a, 0x8b8e, 0x11a1, 0x0, 0x1);
        gbc.writeMem(0xd9a9, { 0x9c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7bc2, gbc.sp());
        EXPECT(0xd9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd9a9));
        // 9C 03E3
        gbc.setState(0xd9f, 0x4b3b, 0xd720, 0xd29f, 0xa971, 0x6ef2, 0x1, 0x1);
        gbc.writeMem(0xd9f, { 0x9c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4b3b, gbc.sp());
        EXPECT(0xda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 9C 03E4
        gbc.setState(0x54f0, 0xd0ad, 0xccd0, 0x21d6, 0xe868, 0xeea0, 0x1, 0x1);
        gbc.writeMem(0x54f0, { 0x9c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd0ad, gbc.sp());
        EXPECT(0x54f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 9C 03E5
        gbc.setState(0x98d1, 0x3d37, 0x65f0, 0xeec1, 0xbef7, 0x570e, 0x0, 0x0);
        gbc.writeMem(0x98d1, { 0x9c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3d37, gbc.sp());
        EXPECT(0x98d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x98d1));
        // 9C 03E6
        gbc.setState(0x5e97, 0xa838, 0xd010, 0xadce, 0x2057, 0xcee4, 0x1, 0x0);
        gbc.writeMem(0x5e97, { 0x9c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa838, gbc.sp());
        EXPECT(0x5e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
