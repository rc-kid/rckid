#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_d7)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_d7) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // D7 0000
        gbc.setState(0x1db0, 0xd515, 0xb050, 0xf314, 0xafbd, 0xc75b, 0x1, 0x0);
        gbc.writeMem(0x1db0, { 0xd7 });
        gbc.writeMem(0xd513, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd513);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd513), 0xb1);
        EXPECT(gbc.readMem(0xd514), 0x1d);
        // D7 0001
        gbc.setState(0xc0ed, 0xe639, 0x76e0, 0x3446, 0xc23b, 0x465e, 0x1, 0x1);
        gbc.writeMem(0xc0ed, { 0xd7 });
        gbc.writeMem(0xe637, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe637);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ed), 0xd7);
        EXPECT(gbc.readMem(0xe637), 0xee);
        EXPECT(gbc.readMem(0xe638), 0xc0);
        // D7 0002
        gbc.setState(0x30bd, 0xc829, 0x9690, 0xcb0a, 0x9b5d, 0xd763, 0x0, 0x1);
        gbc.writeMem(0x30bd, { 0xd7 });
        gbc.writeMem(0xc827, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc827);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc827), 0xbe);
        EXPECT(gbc.readMem(0xc828), 0x30);
        // D7 0003
        gbc.setState(0x751e, 0xb022, 0xfbf0, 0x91ac, 0x2a2c, 0x120b, 0x0, 0x0);
        gbc.writeMem(0x751e, { 0xd7 });
        gbc.writeMem(0xb020, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb020);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb020), 0x1f);
        EXPECT(gbc.readMem(0xb021), 0x75);
        // D7 0004
        gbc.setState(0x92f1, 0xb910, 0x7370, 0x4890, 0x6884, 0x3857, 0x0, 0x1);
        gbc.writeMem(0x92f1, { 0xd7 });
        gbc.writeMem(0xb90e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb90e);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f1), 0xd7);
        EXPECT(gbc.readMem(0xb90e), 0xf2);
        EXPECT(gbc.readMem(0xb90f), 0x92);
        // D7 0006
        gbc.setState(0xa346, 0xcba2, 0xa1e0, 0x1e52, 0x1230, 0x85e, 0x0, 0x0);
        gbc.writeMem(0xa346, { 0xd7 });
        gbc.writeMem(0xcba0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcba0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa346), 0xd7);
        EXPECT(gbc.readMem(0xcba0), 0x47);
        EXPECT(gbc.readMem(0xcba1), 0xa3);
        // D7 0008
        gbc.setState(0x1fc7, 0x91e0, 0x8990, 0xceb9, 0x8f92, 0xb096, 0x0, 0x1);
        gbc.writeMem(0x1fc7, { 0xd7 });
        gbc.writeMem(0x91de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x91de);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91de), 0xc8);
        EXPECT(gbc.readMem(0x91df), 0x1f);
        // D7 0009
        gbc.setState(0xaf22, 0xcf20, 0x97a0, 0xe71b, 0x5bdf, 0x7368, 0x1, 0x0);
        gbc.writeMem(0xaf22, { 0xd7 });
        gbc.writeMem(0xcf1e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xcf1e);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf22), 0xd7);
        EXPECT(gbc.readMem(0xcf1e), 0x23);
        EXPECT(gbc.readMem(0xcf1f), 0xaf);
        // D7 000A
        gbc.setState(0x1c04, 0xc069, 0x83b0, 0x4ba3, 0xfb40, 0x4a44, 0x0, 0x1);
        gbc.writeMem(0x1c04, { 0xd7 });
        gbc.writeMem(0xc067, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc067);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc067), 0x5);
        EXPECT(gbc.readMem(0xc068), 0x1c);
        // D7 000B
        gbc.setState(0x78fd, 0xb9cb, 0x7660, 0xedee, 0x499a, 0xa210, 0x1, 0x0);
        gbc.writeMem(0x78fd, { 0xd7 });
        gbc.writeMem(0xb9c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb9c9);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c9), 0xfe);
        EXPECT(gbc.readMem(0xb9ca), 0x78);
        // D7 000D
        gbc.setState(0x96a0, 0xd7fb, 0x9d30, 0x34f4, 0x5c15, 0x53e8, 0x1, 0x0);
        gbc.writeMem(0x96a0, { 0xd7 });
        gbc.writeMem(0xd7f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd7f9);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a0), 0xd7);
        EXPECT(gbc.readMem(0xd7f9), 0xa1);
        EXPECT(gbc.readMem(0xd7fa), 0x96);
        // D7 0015
        gbc.setState(0xa6de, 0xec53, 0xfdd0, 0xdac1, 0x560a, 0x3ae7, 0x0, 0x1);
        gbc.writeMem(0xa6de, { 0xd7 });
        gbc.writeMem(0xec51, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xec51);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6de), 0xd7);
        EXPECT(gbc.readMem(0xec51), 0xdf);
        EXPECT(gbc.readMem(0xec52), 0xa6);
        // D7 0018
        gbc.setState(0x32bf, 0xa3e4, 0x1200, 0x4e8d, 0x77f1, 0xdfa3, 0x1, 0x1);
        gbc.writeMem(0x32bf, { 0xd7 });
        gbc.writeMem(0xa3e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa3e2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e2), 0xc0);
        EXPECT(gbc.readMem(0xa3e3), 0x32);
        // D7 001B
        gbc.setState(0xbca3, 0xafa3, 0xb880, 0x1a4e, 0x54b4, 0x4001, 0x1, 0x0);
        gbc.writeMem(0xafa1, { 0x0, 0x0 });
        gbc.writeMem(0xbca3, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xafa1);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafa1), 0xa4);
        EXPECT(gbc.readMem(0xafa2), 0xbc);
        EXPECT(gbc.readMem(0xbca3), 0xd7);
        // D7 0021
        gbc.setState(0xa85a, 0xdd91, 0xe3a0, 0xac9d, 0x5bb2, 0xadec, 0x1, 0x0);
        gbc.writeMem(0xa85a, { 0xd7 });
        gbc.writeMem(0xdd8f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdd8f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa85a), 0xd7);
        EXPECT(gbc.readMem(0xdd8f), 0x5b);
        EXPECT(gbc.readMem(0xdd90), 0xa8);
        // D7 0023
        gbc.setState(0xe730, 0xe9bc, 0x74d0, 0x673a, 0xecbd, 0xa226, 0x1, 0x0);
        gbc.writeMem(0xe730, { 0xd7 });
        gbc.writeMem(0xe9ba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe9ba);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe730), 0xd7);
        EXPECT(gbc.readMem(0xe9ba), 0x31);
        EXPECT(gbc.readMem(0xe9bb), 0xe7);
        // D7 0027
        gbc.setState(0x6c17, 0xa6df, 0xa870, 0xb9e0, 0x92f7, 0x4ba2, 0x1, 0x0);
        gbc.writeMem(0x6c17, { 0xd7 });
        gbc.writeMem(0xa6dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa6dd);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6dd), 0x18);
        EXPECT(gbc.readMem(0xa6de), 0x6c);
        // D7 0028
        gbc.setState(0xc8df, 0x9c37, 0x3840, 0x3bdd, 0x369a, 0x11ca, 0x0, 0x0);
        gbc.writeMem(0x9c35, { 0x0, 0x0 });
        gbc.writeMem(0xc8df, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9c35);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c35), 0xe0);
        EXPECT(gbc.readMem(0x9c36), 0xc8);
        EXPECT(gbc.readMem(0xc8df), 0xd7);
        // D7 002A
        gbc.setState(0xa2b9, 0xf55b, 0xe9d0, 0x7fb1, 0xbc6b, 0x36b7, 0x1, 0x0);
        gbc.writeMem(0xa2b9, { 0xd7 });
        gbc.writeMem(0xf559, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf559);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b9), 0xd7);
        EXPECT(gbc.readMem(0xf559), 0xba);
        EXPECT(gbc.readMem(0xf55a), 0xa2);
        // D7 002C
        gbc.setState(0x92a9, 0xf66f, 0xb0b0, 0xb96b, 0xa597, 0xd7b8, 0x1, 0x0);
        gbc.writeMem(0x92a9, { 0xd7 });
        gbc.writeMem(0xf66d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf66d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a9), 0xd7);
        EXPECT(gbc.readMem(0xf66d), 0xaa);
        EXPECT(gbc.readMem(0xf66e), 0x92);
        // D7 002E
        gbc.setState(0x35ba, 0xe5e5, 0xc660, 0x752c, 0xc96f, 0x950f, 0x0, 0x0);
        gbc.writeMem(0x35ba, { 0xd7 });
        gbc.writeMem(0xe5e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe5e3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e3), 0xbb);
        EXPECT(gbc.readMem(0xe5e4), 0x35);
        // D7 0031
        gbc.setState(0x29c3, 0xea39, 0x2d10, 0x61d6, 0x8f3a, 0x82c9, 0x1, 0x0);
        gbc.writeMem(0x29c3, { 0xd7 });
        gbc.writeMem(0xea37, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xea37);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea37), 0xc4);
        EXPECT(gbc.readMem(0xea38), 0x29);
        // D7 0033
        gbc.setState(0x8708, 0xfa07, 0xa880, 0x202f, 0xdc6e, 0x88c8, 0x0, 0x0);
        gbc.writeMem(0x8708, { 0xd7 });
        gbc.writeMem(0xfa05, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfa05);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8708), 0xd7);
        EXPECT(gbc.readMem(0xfa05), 0x9);
        EXPECT(gbc.readMem(0xfa06), 0x87);
        // D7 0034
        gbc.setState(0x588a, 0xc316, 0x4030, 0x6c4b, 0x645a, 0x6ac6, 0x1, 0x1);
        gbc.writeMem(0x588a, { 0xd7 });
        gbc.writeMem(0xc314, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc314);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc314), 0x8b);
        EXPECT(gbc.readMem(0xc315), 0x58);
        // D7 0035
        gbc.setState(0x4435, 0xcbef, 0x69a0, 0x2a1c, 0x59b2, 0x8072, 0x1, 0x0);
        gbc.writeMem(0x4435, { 0xd7 });
        gbc.writeMem(0xcbed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcbed);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbed), 0x36);
        EXPECT(gbc.readMem(0xcbee), 0x44);
        // D7 0038
        gbc.setState(0x998, 0x832e, 0x8b80, 0x5e41, 0x1c82, 0x83a2, 0x1, 0x0);
        gbc.writeMem(0x998, { 0xd7 });
        gbc.writeMem(0x832c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x832c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x832c), 0x99);
        EXPECT(gbc.readMem(0x832d), 0x9);
        // D7 0039
        gbc.setState(0x8be0, 0xbf3c, 0xa260, 0x68b1, 0x57ac, 0x1a8, 0x0, 0x0);
        gbc.writeMem(0x8be0, { 0xd7 });
        gbc.writeMem(0xbf3a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbf3a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be0), 0xd7);
        EXPECT(gbc.readMem(0xbf3a), 0xe1);
        EXPECT(gbc.readMem(0xbf3b), 0x8b);
        // D7 003D
        gbc.setState(0x12f6, 0xcafd, 0x30a0, 0xaccf, 0x8f50, 0x547d, 0x1, 0x1);
        gbc.writeMem(0x12f6, { 0xd7 });
        gbc.writeMem(0xcafb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcafb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcafb), 0xf7);
        EXPECT(gbc.readMem(0xcafc), 0x12);
        // D7 003F
        gbc.setState(0xdfe4, 0x807d, 0xd9c0, 0x6709, 0xc235, 0x87d7, 0x1, 0x1);
        gbc.writeMem(0x807b, { 0x0, 0x0 });
        gbc.writeMem(0xdfe4, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x807b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807b), 0xe5);
        EXPECT(gbc.readMem(0x807c), 0xdf);
        EXPECT(gbc.readMem(0xdfe4), 0xd7);
        // D7 0040
        gbc.setState(0x1e01, 0xda93, 0xfce0, 0x649e, 0x9721, 0xe3cc, 0x1, 0x1);
        gbc.writeMem(0x1e01, { 0xd7 });
        gbc.writeMem(0xda91, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xda91);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda91), 0x2);
        EXPECT(gbc.readMem(0xda92), 0x1e);
        // D7 0041
        gbc.setState(0xdf61, 0xc1a6, 0xbaf0, 0x368c, 0xb445, 0x3277, 0x0, 0x0);
        gbc.writeMem(0xc1a4, { 0x0, 0x0 });
        gbc.writeMem(0xdf61, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc1a4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a4), 0x62);
        EXPECT(gbc.readMem(0xc1a5), 0xdf);
        EXPECT(gbc.readMem(0xdf61), 0xd7);
        // D7 0044
        gbc.setState(0x453e, 0xa595, 0xbf60, 0xff0c, 0x4b31, 0x50c4, 0x0, 0x1);
        gbc.writeMem(0x453e, { 0xd7 });
        gbc.writeMem(0xa593, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa593);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa593), 0x3f);
        EXPECT(gbc.readMem(0xa594), 0x45);
        // D7 0046
        gbc.setState(0x2c61, 0xa16a, 0xa940, 0xd67e, 0x83c4, 0xa2a5, 0x0, 0x0);
        gbc.writeMem(0x2c61, { 0xd7 });
        gbc.writeMem(0xa168, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa168);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa168), 0x62);
        EXPECT(gbc.readMem(0xa169), 0x2c);
        // D7 0047
        gbc.setState(0xde1c, 0xf374, 0x4140, 0xb72a, 0xe3be, 0x3832, 0x1, 0x1);
        gbc.writeMem(0xde1c, { 0xd7 });
        gbc.writeMem(0xf372, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf372);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1c), 0xd7);
        EXPECT(gbc.readMem(0xf372), 0x1d);
        EXPECT(gbc.readMem(0xf373), 0xde);
        // D7 004A
        gbc.setState(0x1153, 0xa562, 0x3280, 0x200a, 0x9904, 0x1a7f, 0x1, 0x0);
        gbc.writeMem(0x1153, { 0xd7 });
        gbc.writeMem(0xa560, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa560);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa560), 0x54);
        EXPECT(gbc.readMem(0xa561), 0x11);
        // D7 004B
        gbc.setState(0xc7ca, 0xd45a, 0x87f0, 0x7006, 0x6d03, 0x237d, 0x0, 0x1);
        gbc.writeMem(0xc7ca, { 0xd7 });
        gbc.writeMem(0xd458, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd458);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ca), 0xd7);
        EXPECT(gbc.readMem(0xd458), 0xcb);
        EXPECT(gbc.readMem(0xd459), 0xc7);
        // D7 004C
        gbc.setState(0x9f95, 0xa3da, 0x7fa0, 0x590b, 0xd39e, 0xc5e8, 0x1, 0x0);
        gbc.writeMem(0x9f95, { 0xd7 });
        gbc.writeMem(0xa3d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa3d8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f95), 0xd7);
        EXPECT(gbc.readMem(0xa3d8), 0x96);
        EXPECT(gbc.readMem(0xa3d9), 0x9f);
        // D7 0050
        gbc.setState(0x1b6, 0xced9, 0x7b20, 0x8b4f, 0xdfea, 0x9f68, 0x0, 0x1);
        gbc.writeMem(0x1b6, { 0xd7 });
        gbc.writeMem(0xced7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xced7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced7), 0xb7);
        EXPECT(gbc.readMem(0xced8), 0x1);
        // D7 0051
        gbc.setState(0x8f53, 0xff88, 0xc4d0, 0xdb08, 0x475c, 0x6ff1, 0x0, 0x0);
        gbc.writeMem(0x8f53, { 0xd7 });
        gbc.writeMem(0xff86, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xff86);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f53), 0xd7);
        EXPECT(gbc.readMem(0xff86), 0x54);
        EXPECT(gbc.readMem(0xff87), 0x8f);
        // D7 0052
        gbc.setState(0x14ff, 0xe5ea, 0xc330, 0x836f, 0x6377, 0xd639, 0x1, 0x1);
        gbc.writeMem(0x14ff, { 0xd7 });
        gbc.writeMem(0xe5e8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe5e8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e8), 0x0);
        EXPECT(gbc.readMem(0xe5e9), 0x15);
        // D7 0053
        gbc.setState(0xad5f, 0xd93a, 0x3330, 0xe8ce, 0x217a, 0xb3bc, 0x0, 0x1);
        gbc.writeMem(0xad5f, { 0xd7 });
        gbc.writeMem(0xd938, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd938);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad5f), 0xd7);
        EXPECT(gbc.readMem(0xd938), 0x60);
        EXPECT(gbc.readMem(0xd939), 0xad);
        // D7 0055
        gbc.setState(0x5385, 0x8882, 0xa7d0, 0x9452, 0x5fc2, 0x20f0, 0x0, 0x1);
        gbc.writeMem(0x5385, { 0xd7 });
        gbc.writeMem(0x8880, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8880);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8880), 0x86);
        EXPECT(gbc.readMem(0x8881), 0x53);
        // D7 0056
        gbc.setState(0x907f, 0xb2d7, 0xf900, 0x364, 0x1f5b, 0x97b4, 0x1, 0x1);
        gbc.writeMem(0x907f, { 0xd7 });
        gbc.writeMem(0xb2d5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb2d5);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x907f), 0xd7);
        EXPECT(gbc.readMem(0xb2d5), 0x80);
        EXPECT(gbc.readMem(0xb2d6), 0x90);
        // D7 0058
        gbc.setState(0x928a, 0x94a2, 0x1780, 0x1991, 0xbb82, 0x7d41, 0x0, 0x1);
        gbc.writeMem(0x928a, { 0xd7 });
        gbc.writeMem(0x94a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x94a0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x928a), 0xd7);
        EXPECT(gbc.readMem(0x94a0), 0x8b);
        EXPECT(gbc.readMem(0x94a1), 0x92);
        // D7 0059
        gbc.setState(0x7c96, 0xc200, 0xbd40, 0xf990, 0x8906, 0x613d, 0x0, 0x0);
        gbc.writeMem(0x7c96, { 0xd7 });
        gbc.writeMem(0xc1fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc1fe);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fe), 0x97);
        EXPECT(gbc.readMem(0xc1ff), 0x7c);
        // D7 005A
        gbc.setState(0x4679, 0x8421, 0xc410, 0xda1a, 0x10af, 0xb2d, 0x0, 0x1);
        gbc.writeMem(0x4679, { 0xd7 });
        gbc.writeMem(0x841f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x841f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841f), 0x7a);
        EXPECT(gbc.readMem(0x8420), 0x46);
        // D7 005B
        gbc.setState(0xbaeb, 0xe471, 0x9e0, 0xafdf, 0x5b15, 0xd87c, 0x0, 0x0);
        gbc.writeMem(0xbaeb, { 0xd7 });
        gbc.writeMem(0xe46f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe46f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaeb), 0xd7);
        EXPECT(gbc.readMem(0xe46f), 0xec);
        EXPECT(gbc.readMem(0xe470), 0xba);
        // D7 005C
        gbc.setState(0x3bf3, 0xb523, 0xe140, 0x6fd4, 0x436f, 0x3b01, 0x0, 0x1);
        gbc.writeMem(0x3bf3, { 0xd7 });
        gbc.writeMem(0xb521, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb521);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb521), 0xf4);
        EXPECT(gbc.readMem(0xb522), 0x3b);
        // D7 005F
        gbc.setState(0xe560, 0xab6b, 0x630, 0x8c94, 0x8491, 0x80e6, 0x0, 0x1);
        gbc.writeMem(0xab69, { 0x0, 0x0 });
        gbc.writeMem(0xe560, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xab69);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab69), 0x61);
        EXPECT(gbc.readMem(0xab6a), 0xe5);
        EXPECT(gbc.readMem(0xe560), 0xd7);
        // D7 0062
        gbc.setState(0x3453, 0xba55, 0xe020, 0x34f, 0x1ad8, 0xb2ab, 0x0, 0x0);
        gbc.writeMem(0x3453, { 0xd7 });
        gbc.writeMem(0xba53, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xba53);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba53), 0x54);
        EXPECT(gbc.readMem(0xba54), 0x34);
        // D7 0063
        gbc.setState(0xc95a, 0xfadd, 0xab10, 0xfab6, 0x319a, 0x9706, 0x1, 0x1);
        gbc.writeMem(0xc95a, { 0xd7 });
        gbc.writeMem(0xfadb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfadb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc95a), 0xd7);
        EXPECT(gbc.readMem(0xfadb), 0x5b);
        EXPECT(gbc.readMem(0xfadc), 0xc9);
        // D7 0069
        gbc.setState(0x2d43, 0xe5ae, 0x9c90, 0x8e36, 0x239c, 0x4adf, 0x1, 0x1);
        gbc.writeMem(0x2d43, { 0xd7 });
        gbc.writeMem(0xe5ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe5ac);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ac), 0x44);
        EXPECT(gbc.readMem(0xe5ad), 0x2d);
        // D7 006B
        gbc.setState(0xe1f5, 0xaded, 0x1e70, 0x2b1a, 0x799c, 0x7932, 0x1, 0x0);
        gbc.writeMem(0xadeb, { 0x0, 0x0 });
        gbc.writeMem(0xe1f5, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xadeb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadeb), 0xf6);
        EXPECT(gbc.readMem(0xadec), 0xe1);
        EXPECT(gbc.readMem(0xe1f5), 0xd7);
        // D7 006E
        gbc.setState(0xea8f, 0xd202, 0xfae0, 0x9070, 0xca2f, 0x34bd, 0x1, 0x1);
        gbc.writeMem(0xd200, { 0x0, 0x0 });
        gbc.writeMem(0xea8f, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd200);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd200), 0x90);
        EXPECT(gbc.readMem(0xd201), 0xea);
        EXPECT(gbc.readMem(0xea8f), 0xd7);
        // D7 0070
        gbc.setState(0xe6b2, 0x88ca, 0x6c40, 0xbd0a, 0xcbab, 0xdcbc, 0x1, 0x0);
        gbc.writeMem(0x88c8, { 0x0, 0x0 });
        gbc.writeMem(0xe6b2, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x88c8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c8), 0xb3);
        EXPECT(gbc.readMem(0x88c9), 0xe6);
        EXPECT(gbc.readMem(0xe6b2), 0xd7);
        // D7 0071
        gbc.setState(0x7777, 0xadc8, 0x9230, 0xbbc9, 0x24d0, 0x78ee, 0x0, 0x1);
        gbc.writeMem(0x7777, { 0xd7 });
        gbc.writeMem(0xadc6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xadc6);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadc6), 0x78);
        EXPECT(gbc.readMem(0xadc7), 0x77);
        // D7 0072
        gbc.setState(0x22a9, 0xf87d, 0x1a00, 0xd188, 0xcb75, 0x812f, 0x0, 0x0);
        gbc.writeMem(0x22a9, { 0xd7 });
        gbc.writeMem(0xf87b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf87b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf87b), 0xaa);
        EXPECT(gbc.readMem(0xf87c), 0x22);
        // D7 0073
        gbc.setState(0xba19, 0xb761, 0xc380, 0xfa8a, 0x6f0d, 0x3e58, 0x1, 0x1);
        gbc.writeMem(0xb75f, { 0x0, 0x0 });
        gbc.writeMem(0xba19, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb75f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75f), 0x1a);
        EXPECT(gbc.readMem(0xb760), 0xba);
        EXPECT(gbc.readMem(0xba19), 0xd7);
        // D7 0075
        gbc.setState(0xdb89, 0xb517, 0xdfe0, 0x8cb8, 0xae99, 0xe93b, 0x0, 0x1);
        gbc.writeMem(0xb515, { 0x0, 0x0 });
        gbc.writeMem(0xdb89, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb515);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb515), 0x8a);
        EXPECT(gbc.readMem(0xb516), 0xdb);
        EXPECT(gbc.readMem(0xdb89), 0xd7);
        // D7 007B
        gbc.setState(0x20b7, 0x833b, 0x4850, 0x9e2d, 0x83f3, 0x32e0, 0x0, 0x0);
        gbc.writeMem(0x20b7, { 0xd7 });
        gbc.writeMem(0x8339, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8339);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8339), 0xb8);
        EXPECT(gbc.readMem(0x833a), 0x20);
        // D7 007F
        gbc.setState(0xc102, 0xb877, 0xed50, 0x404b, 0x6880, 0x17de, 0x0, 0x1);
        gbc.writeMem(0xb875, { 0x0, 0x0 });
        gbc.writeMem(0xc102, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb875);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb875), 0x3);
        EXPECT(gbc.readMem(0xb876), 0xc1);
        EXPECT(gbc.readMem(0xc102), 0xd7);
        // D7 0083
        gbc.setState(0x88d5, 0x99e6, 0xcb50, 0x2858, 0x8c81, 0x8cf8, 0x0, 0x1);
        gbc.writeMem(0x88d5, { 0xd7 });
        gbc.writeMem(0x99e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x99e4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d5), 0xd7);
        EXPECT(gbc.readMem(0x99e4), 0xd6);
        EXPECT(gbc.readMem(0x99e5), 0x88);
        // D7 0084
        gbc.setState(0x824b, 0x84b5, 0x1f20, 0xa970, 0x8054, 0xc2b8, 0x0, 0x1);
        gbc.writeMem(0x824b, { 0xd7 });
        gbc.writeMem(0x84b3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x84b3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x824b), 0xd7);
        EXPECT(gbc.readMem(0x84b3), 0x4c);
        EXPECT(gbc.readMem(0x84b4), 0x82);
        // D7 0086
        gbc.setState(0x5b6c, 0xe4e3, 0xca50, 0xec20, 0x8349, 0x2ae5, 0x0, 0x1);
        gbc.writeMem(0x5b6c, { 0xd7 });
        gbc.writeMem(0xe4e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe4e1);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4e1), 0x6d);
        EXPECT(gbc.readMem(0xe4e2), 0x5b);
        // D7 0087
        gbc.setState(0x3531, 0xcd19, 0x2400, 0x6ba3, 0x9ef4, 0xf1f3, 0x1, 0x0);
        gbc.writeMem(0x3531, { 0xd7 });
        gbc.writeMem(0xcd17, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcd17);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd17), 0x32);
        EXPECT(gbc.readMem(0xcd18), 0x35);
        // D7 0088
        gbc.setState(0xcdcf, 0xd473, 0xcda0, 0x9066, 0x400f, 0xac59, 0x1, 0x0);
        gbc.writeMem(0xcdcf, { 0xd7 });
        gbc.writeMem(0xd471, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd471);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdcf), 0xd7);
        EXPECT(gbc.readMem(0xd471), 0xd0);
        EXPECT(gbc.readMem(0xd472), 0xcd);
        // D7 008B
        gbc.setState(0x11e3, 0xcf3c, 0xb7a0, 0xbf0f, 0x955a, 0x9e29, 0x0, 0x1);
        gbc.writeMem(0x11e3, { 0xd7 });
        gbc.writeMem(0xcf3a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcf3a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf3a), 0xe4);
        EXPECT(gbc.readMem(0xcf3b), 0x11);
        // D7 008C
        gbc.setState(0x97d9, 0xdb5b, 0x34d0, 0x154a, 0x2c5, 0xa93d, 0x1, 0x0);
        gbc.writeMem(0x97d9, { 0xd7 });
        gbc.writeMem(0xdb59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdb59);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d9), 0xd7);
        EXPECT(gbc.readMem(0xdb59), 0xda);
        EXPECT(gbc.readMem(0xdb5a), 0x97);
        // D7 008E
        gbc.setState(0x7629, 0x8ab4, 0x8090, 0xdc91, 0xf1c5, 0x7c5a, 0x0, 0x1);
        gbc.writeMem(0x7629, { 0xd7 });
        gbc.writeMem(0x8ab2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8ab2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ab2), 0x2a);
        EXPECT(gbc.readMem(0x8ab3), 0x76);
        // D7 008F
        gbc.setState(0xa1ca, 0xf5f7, 0x970, 0x6777, 0xb7b8, 0x428a, 0x0, 0x1);
        gbc.writeMem(0xa1ca, { 0xd7 });
        gbc.writeMem(0xf5f5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf5f5);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ca), 0xd7);
        EXPECT(gbc.readMem(0xf5f5), 0xcb);
        EXPECT(gbc.readMem(0xf5f6), 0xa1);
        // D7 0092
        gbc.setState(0xe2d0, 0x89ed, 0xe150, 0x7400, 0x88c5, 0x5e4e, 0x0, 0x1);
        gbc.writeMem(0x89eb, { 0x0, 0x0 });
        gbc.writeMem(0xe2d0, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x89eb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89eb), 0xd1);
        EXPECT(gbc.readMem(0x89ec), 0xe2);
        EXPECT(gbc.readMem(0xe2d0), 0xd7);
        // D7 0096
        gbc.setState(0xb1df, 0xd2c8, 0xc8d0, 0xf7c0, 0x8d54, 0x4df5, 0x1, 0x0);
        gbc.writeMem(0xb1df, { 0xd7 });
        gbc.writeMem(0xd2c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd2c6);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1df), 0xd7);
        EXPECT(gbc.readMem(0xd2c6), 0xe0);
        EXPECT(gbc.readMem(0xd2c7), 0xb1);
        // D7 009C
        gbc.setState(0x8c2b, 0xa93d, 0x8300, 0x58e, 0x8fe5, 0xc622, 0x1, 0x1);
        gbc.writeMem(0x8c2b, { 0xd7 });
        gbc.writeMem(0xa93b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa93b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2b), 0xd7);
        EXPECT(gbc.readMem(0xa93b), 0x2c);
        EXPECT(gbc.readMem(0xa93c), 0x8c);
        // D7 009D
        gbc.setState(0xdcbc, 0xafdf, 0x68b0, 0x980, 0x56ec, 0xa3f7, 0x0, 0x1);
        gbc.writeMem(0xafdd, { 0x0, 0x0 });
        gbc.writeMem(0xdcbc, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xafdd);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafdd), 0xbd);
        EXPECT(gbc.readMem(0xafde), 0xdc);
        EXPECT(gbc.readMem(0xdcbc), 0xd7);
        // D7 00A0
        gbc.setState(0x593b, 0xb22e, 0xcd60, 0x8eab, 0x56be, 0xf94d, 0x1, 0x0);
        gbc.writeMem(0x593b, { 0xd7 });
        gbc.writeMem(0xb22c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb22c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb22c), 0x3c);
        EXPECT(gbc.readMem(0xb22d), 0x59);
        // D7 00A3
        gbc.setState(0x4872, 0x8e6c, 0x1380, 0x2374, 0x8c0b, 0xb6fa, 0x0, 0x1);
        gbc.writeMem(0x4872, { 0xd7 });
        gbc.writeMem(0x8e6a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8e6a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e6a), 0x73);
        EXPECT(gbc.readMem(0x8e6b), 0x48);
        // D7 00A4
        gbc.setState(0xa69c, 0x8d35, 0x6cb0, 0xf951, 0xcc42, 0xde0e, 0x1, 0x0);
        gbc.writeMem(0x8d33, { 0x0, 0x0 });
        gbc.writeMem(0xa69c, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8d33);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d33), 0x9d);
        EXPECT(gbc.readMem(0x8d34), 0xa6);
        EXPECT(gbc.readMem(0xa69c), 0xd7);
        // D7 00A6
        gbc.setState(0xe627, 0xb20e, 0xa6b0, 0x9c27, 0xff5e, 0x5bf2, 0x0, 0x0);
        gbc.writeMem(0xb20c, { 0x0, 0x0 });
        gbc.writeMem(0xe627, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb20c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb20c), 0x28);
        EXPECT(gbc.readMem(0xb20d), 0xe6);
        EXPECT(gbc.readMem(0xe627), 0xd7);
        // D7 00A9
        gbc.setState(0xbb97, 0x88da, 0x1600, 0xcbf2, 0x4f74, 0xb1d2, 0x0, 0x0);
        gbc.writeMem(0x88d8, { 0x0, 0x0 });
        gbc.writeMem(0xbb97, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x88d8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d8), 0x98);
        EXPECT(gbc.readMem(0x88d9), 0xbb);
        EXPECT(gbc.readMem(0xbb97), 0xd7);
        // D7 00AD
        gbc.setState(0xe1e8, 0xd395, 0x2970, 0xe7b7, 0xabb6, 0xec70, 0x0, 0x0);
        gbc.writeMem(0xd393, { 0x0, 0x0 });
        gbc.writeMem(0xe1e8, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd393);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd393), 0xe9);
        EXPECT(gbc.readMem(0xd394), 0xe1);
        EXPECT(gbc.readMem(0xe1e8), 0xd7);
        // D7 00AF
        gbc.setState(0x2c85, 0xf1b2, 0x75e0, 0x9d2a, 0x4a9, 0x537, 0x0, 0x0);
        gbc.writeMem(0x2c85, { 0xd7 });
        gbc.writeMem(0xf1b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf1b0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf1b0), 0x86);
        EXPECT(gbc.readMem(0xf1b1), 0x2c);
        // D7 00B0
        gbc.setState(0x5325, 0xd16d, 0xade0, 0xf44a, 0x6d59, 0x72b6, 0x0, 0x1);
        gbc.writeMem(0x5325, { 0xd7 });
        gbc.writeMem(0xd16b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd16b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd16b), 0x26);
        EXPECT(gbc.readMem(0xd16c), 0x53);
        // D7 00B1
        gbc.setState(0x41f5, 0xe9fa, 0x6800, 0x55cf, 0xdd6f, 0x7a34, 0x0, 0x1);
        gbc.writeMem(0x41f5, { 0xd7 });
        gbc.writeMem(0xe9f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe9f8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9f8), 0xf6);
        EXPECT(gbc.readMem(0xe9f9), 0x41);
        // D7 00B4
        gbc.setState(0x316e, 0x980f, 0x2a30, 0xbba6, 0xbe68, 0xb1be, 0x1, 0x0);
        gbc.writeMem(0x316e, { 0xd7 });
        gbc.writeMem(0x980d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x980d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x980d), 0x6f);
        EXPECT(gbc.readMem(0x980e), 0x31);
        // D7 00BA
        gbc.setState(0x6a44, 0xf454, 0x20, 0xdb49, 0xa550, 0x2b0d, 0x0, 0x1);
        gbc.writeMem(0x6a44, { 0xd7 });
        gbc.writeMem(0xf452, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf452);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf452), 0x45);
        EXPECT(gbc.readMem(0xf453), 0x6a);
        // D7 00BC
        gbc.setState(0x7ceb, 0x9464, 0x3750, 0x55cb, 0x76c2, 0x8757, 0x1, 0x1);
        gbc.writeMem(0x7ceb, { 0xd7 });
        gbc.writeMem(0x9462, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9462);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9462), 0xec);
        EXPECT(gbc.readMem(0x9463), 0x7c);
        // D7 00BD
        gbc.setState(0x9ce2, 0x8ebd, 0x70a0, 0xc477, 0x9191, 0x75da, 0x0, 0x0);
        gbc.writeMem(0x8ebb, { 0x0, 0x0 });
        gbc.writeMem(0x9ce2, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8ebb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebb), 0xe3);
        EXPECT(gbc.readMem(0x8ebc), 0x9c);
        EXPECT(gbc.readMem(0x9ce2), 0xd7);
        // D7 00BE
        gbc.setState(0x12e3, 0xa94a, 0x9a00, 0x60d3, 0x303d, 0xc073, 0x0, 0x0);
        gbc.writeMem(0x12e3, { 0xd7 });
        gbc.writeMem(0xa948, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa948);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa948), 0xe4);
        EXPECT(gbc.readMem(0xa949), 0x12);
        // D7 00C1
        gbc.setState(0xe1d8, 0xc354, 0x4820, 0xe5a8, 0xcd92, 0xc967, 0x1, 0x1);
        gbc.writeMem(0xc352, { 0x0, 0x0 });
        gbc.writeMem(0xe1d8, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc352);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc352), 0xd9);
        EXPECT(gbc.readMem(0xc353), 0xe1);
        EXPECT(gbc.readMem(0xe1d8), 0xd7);
        // D7 00C2
        gbc.setState(0x1d7a, 0xe5b2, 0x7e50, 0x9b30, 0x19a4, 0x1561, 0x0, 0x1);
        gbc.writeMem(0x1d7a, { 0xd7 });
        gbc.writeMem(0xe5b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe5b0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5b0), 0x7b);
        EXPECT(gbc.readMem(0xe5b1), 0x1d);
        // D7 00CC
        gbc.setState(0x672f, 0xa149, 0x5cc0, 0x549b, 0xd8b3, 0x61b, 0x1, 0x0);
        gbc.writeMem(0x672f, { 0xd7 });
        gbc.writeMem(0xa147, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa147);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa147), 0x30);
        EXPECT(gbc.readMem(0xa148), 0x67);
        // D7 00CD
        gbc.setState(0xa5ad, 0xb785, 0xe10, 0xa692, 0x1b7e, 0xfc, 0x0, 0x0);
        gbc.writeMem(0xa5ad, { 0xd7 });
        gbc.writeMem(0xb783, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb783);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ad), 0xd7);
        EXPECT(gbc.readMem(0xb783), 0xae);
        EXPECT(gbc.readMem(0xb784), 0xa5);
        // D7 00CF
        gbc.setState(0x9152, 0xa257, 0xaec0, 0x9e47, 0x51a6, 0x7dff, 0x1, 0x0);
        gbc.writeMem(0x9152, { 0xd7 });
        gbc.writeMem(0xa255, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa255);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9152), 0xd7);
        EXPECT(gbc.readMem(0xa255), 0x53);
        EXPECT(gbc.readMem(0xa256), 0x91);
        // D7 00D1
        gbc.setState(0xca92, 0xad91, 0x6d00, 0xea87, 0xb2f2, 0xd518, 0x1, 0x1);
        gbc.writeMem(0xad8f, { 0x0, 0x0 });
        gbc.writeMem(0xca92, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xad8f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad8f), 0x93);
        EXPECT(gbc.readMem(0xad90), 0xca);
        EXPECT(gbc.readMem(0xca92), 0xd7);
        // D7 00D7
        gbc.setState(0xdaf, 0xd7e1, 0xf3f0, 0x966b, 0x4200, 0xf0b1, 0x0, 0x1);
        gbc.writeMem(0xdaf, { 0xd7 });
        gbc.writeMem(0xd7df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd7df);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7df), 0xb0);
        EXPECT(gbc.readMem(0xd7e0), 0xd);
        // D7 00D8
        gbc.setState(0xed34, 0xae9d, 0x17b0, 0x956d, 0xd633, 0x5a74, 0x1, 0x1);
        gbc.writeMem(0xae9b, { 0x0, 0x0 });
        gbc.writeMem(0xed34, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xae9b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae9b), 0x35);
        EXPECT(gbc.readMem(0xae9c), 0xed);
        EXPECT(gbc.readMem(0xed34), 0xd7);
        // D7 00D9
        gbc.setState(0x30cc, 0x8012, 0x8a40, 0xc4e9, 0x141a, 0x4ca7, 0x1, 0x1);
        gbc.writeMem(0x30cc, { 0xd7 });
        gbc.writeMem(0x8010, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8010);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8010), 0xcd);
        EXPECT(gbc.readMem(0x8011), 0x30);
        // D7 00DA
        gbc.setState(0x9233, 0xcdc9, 0x1e10, 0x549a, 0xe3f2, 0x5654, 0x1, 0x0);
        gbc.writeMem(0x9233, { 0xd7 });
        gbc.writeMem(0xcdc7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xcdc7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9233), 0xd7);
        EXPECT(gbc.readMem(0xcdc7), 0x34);
        EXPECT(gbc.readMem(0xcdc8), 0x92);
        // D7 00DC
        gbc.setState(0x9ed6, 0xe48c, 0x8810, 0x9d44, 0x3e30, 0xa694, 0x0, 0x1);
        gbc.writeMem(0x9ed6, { 0xd7 });
        gbc.writeMem(0xe48a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe48a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ed6), 0xd7);
        EXPECT(gbc.readMem(0xe48a), 0xd7);
        EXPECT(gbc.readMem(0xe48b), 0x9e);
        // D7 00DF
        gbc.setState(0xe33e, 0xdb0c, 0xad50, 0x1a6a, 0x1260, 0x9181, 0x1, 0x1);
        gbc.writeMem(0xdb0a, { 0x0, 0x0 });
        gbc.writeMem(0xe33e, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdb0a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb0a), 0x3f);
        EXPECT(gbc.readMem(0xdb0b), 0xe3);
        EXPECT(gbc.readMem(0xe33e), 0xd7);
        // D7 00E3
        gbc.setState(0x6caf, 0xcf72, 0xc420, 0xc2e8, 0x45e1, 0xe93, 0x0, 0x0);
        gbc.writeMem(0x6caf, { 0xd7 });
        gbc.writeMem(0xcf70, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcf70);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf70), 0xb0);
        EXPECT(gbc.readMem(0xcf71), 0x6c);
        // D7 00E5
        gbc.setState(0x9287, 0xad4b, 0xcdb0, 0x124f, 0x89bc, 0x7383, 0x0, 0x0);
        gbc.writeMem(0x9287, { 0xd7 });
        gbc.writeMem(0xad49, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xad49);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9287), 0xd7);
        EXPECT(gbc.readMem(0xad49), 0x88);
        EXPECT(gbc.readMem(0xad4a), 0x92);
        // D7 00E6
        gbc.setState(0x6724, 0xa5ae, 0xa200, 0x61e2, 0xcba5, 0xd160, 0x0, 0x1);
        gbc.writeMem(0x6724, { 0xd7 });
        gbc.writeMem(0xa5ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa5ac);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ac), 0x25);
        EXPECT(gbc.readMem(0xa5ad), 0x67);
        // D7 00E7
        gbc.setState(0x2cc7, 0xdf09, 0x7610, 0xb482, 0x1ba6, 0xb191, 0x1, 0x1);
        gbc.writeMem(0x2cc7, { 0xd7 });
        gbc.writeMem(0xdf07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xdf07);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf07), 0xc8);
        EXPECT(gbc.readMem(0xdf08), 0x2c);
        // D7 00E8
        gbc.setState(0x4c79, 0x9ccd, 0x97b0, 0x549a, 0x8e91, 0xcaa5, 0x0, 0x0);
        gbc.writeMem(0x4c79, { 0xd7 });
        gbc.writeMem(0x9ccb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9ccb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ccb), 0x7a);
        EXPECT(gbc.readMem(0x9ccc), 0x4c);
        // D7 00E9
        gbc.setState(0xd174, 0xbaf6, 0x61c0, 0xd8e3, 0x6290, 0x369f, 0x1, 0x1);
        gbc.writeMem(0xbaf4, { 0x0, 0x0 });
        gbc.writeMem(0xd174, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbaf4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf4), 0x75);
        EXPECT(gbc.readMem(0xbaf5), 0xd1);
        EXPECT(gbc.readMem(0xd174), 0xd7);
        // D7 00EB
        gbc.setState(0x3a04, 0xc23d, 0x45e0, 0x20d0, 0x4505, 0x2897, 0x1, 0x0);
        gbc.writeMem(0x3a04, { 0xd7 });
        gbc.writeMem(0xc23b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc23b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc23b), 0x5);
        EXPECT(gbc.readMem(0xc23c), 0x3a);
        // D7 00EE
        gbc.setState(0xc837, 0x873b, 0x6480, 0xee46, 0x4dcc, 0xd5d6, 0x0, 0x1);
        gbc.writeMem(0x8739, { 0x0, 0x0 });
        gbc.writeMem(0xc837, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8739);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8739), 0x38);
        EXPECT(gbc.readMem(0x873a), 0xc8);
        EXPECT(gbc.readMem(0xc837), 0xd7);
        // D7 00F6
        gbc.setState(0xc502, 0x8408, 0x70c0, 0xdef0, 0x5192, 0x8d43, 0x0, 0x0);
        gbc.writeMem(0x8406, { 0x0, 0x0 });
        gbc.writeMem(0xc502, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8406);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8406), 0x3);
        EXPECT(gbc.readMem(0x8407), 0xc5);
        EXPECT(gbc.readMem(0xc502), 0xd7);
        // D7 00F7
        gbc.setState(0xa91, 0xd047, 0x8dd0, 0x1bcf, 0x5ad3, 0xe14b, 0x0, 0x1);
        gbc.writeMem(0xa91, { 0xd7 });
        gbc.writeMem(0xd045, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd045);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd045), 0x92);
        EXPECT(gbc.readMem(0xd046), 0xa);
        // D7 00F8
        gbc.setState(0x1266, 0x87b0, 0x4e90, 0x3e8b, 0x9ead, 0x804a, 0x0, 0x1);
        gbc.writeMem(0x1266, { 0xd7 });
        gbc.writeMem(0x87ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x87ae);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ae), 0x67);
        EXPECT(gbc.readMem(0x87af), 0x12);
        // D7 00F9
        gbc.setState(0x9fa, 0xea0b, 0xe8f0, 0xa3fc, 0x8d1, 0x6f42, 0x0, 0x1);
        gbc.writeMem(0x9fa, { 0xd7 });
        gbc.writeMem(0xea09, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xea09);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea09), 0xfb);
        EXPECT(gbc.readMem(0xea0a), 0x9);
        // D7 00FC
        gbc.setState(0x13f8, 0xca0c, 0xe390, 0xe91b, 0xe8c7, 0x7e53, 0x1, 0x1);
        gbc.writeMem(0x13f8, { 0xd7 });
        gbc.writeMem(0xca0a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xca0a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca0a), 0xf9);
        EXPECT(gbc.readMem(0xca0b), 0x13);
        // D7 00FE
        gbc.setState(0xdece, 0xd88e, 0xf760, 0x9b2c, 0x76b0, 0x2084, 0x0, 0x0);
        gbc.writeMem(0xd88c, { 0x0, 0x0 });
        gbc.writeMem(0xdece, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd88c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88c), 0xcf);
        EXPECT(gbc.readMem(0xd88d), 0xde);
        EXPECT(gbc.readMem(0xdece), 0xd7);
        // D7 00FF
        gbc.setState(0x3e51, 0xc42b, 0xe610, 0x58b9, 0x7bb0, 0xa123, 0x0, 0x0);
        gbc.writeMem(0x3e51, { 0xd7 });
        gbc.writeMem(0xc429, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc429);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc429), 0x52);
        EXPECT(gbc.readMem(0xc42a), 0x3e);
        // D7 0100
        gbc.setState(0x14cb, 0xe9c7, 0xee0, 0x51d5, 0x954, 0x6b36, 0x0, 0x0);
        gbc.writeMem(0x14cb, { 0xd7 });
        gbc.writeMem(0xe9c5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe9c5);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c5), 0xcc);
        EXPECT(gbc.readMem(0xe9c6), 0x14);
        // D7 0101
        gbc.setState(0xec40, 0x98c6, 0xdc40, 0xac33, 0xbc20, 0x37d8, 0x1, 0x0);
        gbc.writeMem(0x98c4, { 0x0, 0x0 });
        gbc.writeMem(0xec40, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x98c4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c4), 0x41);
        EXPECT(gbc.readMem(0x98c5), 0xec);
        EXPECT(gbc.readMem(0xec40), 0xd7);
        // D7 0102
        gbc.setState(0x14a0, 0xced5, 0x51d0, 0x4db5, 0xf889, 0xae23, 0x1, 0x1);
        gbc.writeMem(0x14a0, { 0xd7 });
        gbc.writeMem(0xced3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xced3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced3), 0xa1);
        EXPECT(gbc.readMem(0xced4), 0x14);
        // D7 0103
        gbc.setState(0x6ac0, 0xad81, 0x5ba0, 0x7e46, 0xf50f, 0xc86b, 0x1, 0x0);
        gbc.writeMem(0x6ac0, { 0xd7 });
        gbc.writeMem(0xad7f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xad7f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad7f), 0xc1);
        EXPECT(gbc.readMem(0xad80), 0x6a);
        // D7 010A
        gbc.setState(0xc486, 0xa514, 0x7990, 0x4099, 0xa374, 0x72cb, 0x1, 0x1);
        gbc.writeMem(0xa512, { 0x0, 0x0 });
        gbc.writeMem(0xc486, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa512);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa512), 0x87);
        EXPECT(gbc.readMem(0xa513), 0xc4);
        EXPECT(gbc.readMem(0xc486), 0xd7);
        // D7 010B
        gbc.setState(0x4612, 0xec87, 0x8ae0, 0x9b8a, 0xfcbd, 0x4f96, 0x0, 0x1);
        gbc.writeMem(0x4612, { 0xd7 });
        gbc.writeMem(0xec85, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xec85);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec85), 0x13);
        EXPECT(gbc.readMem(0xec86), 0x46);
        // D7 010D
        gbc.setState(0x62c4, 0xefdc, 0x8330, 0x16d2, 0xb260, 0x4954, 0x0, 0x1);
        gbc.writeMem(0x62c4, { 0xd7 });
        gbc.writeMem(0xefda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xefda);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefda), 0xc5);
        EXPECT(gbc.readMem(0xefdb), 0x62);
        // D7 010E
        gbc.setState(0x9d48, 0x978a, 0x6ce0, 0x88ca, 0x2834, 0xecb3, 0x0, 0x0);
        gbc.writeMem(0x9788, { 0x0, 0x0 });
        gbc.writeMem(0x9d48, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9788);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9788), 0x49);
        EXPECT(gbc.readMem(0x9789), 0x9d);
        EXPECT(gbc.readMem(0x9d48), 0xd7);
        // D7 0111
        gbc.setState(0xc39e, 0x8951, 0x5260, 0xd618, 0x4d03, 0x745a, 0x0, 0x0);
        gbc.writeMem(0x894f, { 0x0, 0x0 });
        gbc.writeMem(0xc39e, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x894f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x894f), 0x9f);
        EXPECT(gbc.readMem(0x8950), 0xc3);
        EXPECT(gbc.readMem(0xc39e), 0xd7);
        // D7 0112
        gbc.setState(0xbd7e, 0xbc1e, 0x4e90, 0xbbb0, 0x4892, 0xf51, 0x1, 0x0);
        gbc.writeMem(0xbc1c, { 0x0, 0x0 });
        gbc.writeMem(0xbd7e, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xbc1c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc1c), 0x7f);
        EXPECT(gbc.readMem(0xbc1d), 0xbd);
        EXPECT(gbc.readMem(0xbd7e), 0xd7);
        // D7 0115
        gbc.setState(0xb9d2, 0xa211, 0x3e10, 0x6f33, 0x2d63, 0x5077, 0x0, 0x0);
        gbc.writeMem(0xa20f, { 0x0, 0x0 });
        gbc.writeMem(0xb9d2, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa20f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa20f), 0xd3);
        EXPECT(gbc.readMem(0xa210), 0xb9);
        EXPECT(gbc.readMem(0xb9d2), 0xd7);
        // D7 0118
        gbc.setState(0x3de7, 0x93e5, 0xfd0, 0xb2fc, 0x4ad1, 0x8b20, 0x1, 0x0);
        gbc.writeMem(0x3de7, { 0xd7 });
        gbc.writeMem(0x93e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x93e3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e3), 0xe8);
        EXPECT(gbc.readMem(0x93e4), 0x3d);
        // D7 0119
        gbc.setState(0xe126, 0xec66, 0xed10, 0xde17, 0x5690, 0x4db9, 0x1, 0x0);
        gbc.writeMem(0xe126, { 0xd7 });
        gbc.writeMem(0xec64, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xec64);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe126), 0xd7);
        EXPECT(gbc.readMem(0xec64), 0x27);
        EXPECT(gbc.readMem(0xec65), 0xe1);
        // D7 011E
        gbc.setState(0x97b2, 0xd996, 0x77a0, 0x78b2, 0x1792, 0x3100, 0x1, 0x1);
        gbc.writeMem(0x97b2, { 0xd7 });
        gbc.writeMem(0xd994, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd994);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b2), 0xd7);
        EXPECT(gbc.readMem(0xd994), 0xb3);
        EXPECT(gbc.readMem(0xd995), 0x97);
        // D7 011F
        gbc.setState(0x2314, 0x9730, 0xa660, 0xc889, 0xb1f0, 0xf08b, 0x0, 0x0);
        gbc.writeMem(0x2314, { 0xd7 });
        gbc.writeMem(0x972e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x972e);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x972e), 0x15);
        EXPECT(gbc.readMem(0x972f), 0x23);
        // D7 0121
        gbc.setState(0x1ed2, 0xa638, 0x7d20, 0xc454, 0x5898, 0x507a, 0x1, 0x1);
        gbc.writeMem(0x1ed2, { 0xd7 });
        gbc.writeMem(0xa636, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa636);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa636), 0xd3);
        EXPECT(gbc.readMem(0xa637), 0x1e);
        // D7 0122
        gbc.setState(0x5855, 0xc4aa, 0x6010, 0x2aca, 0xe35e, 0x3d02, 0x0, 0x0);
        gbc.writeMem(0x5855, { 0xd7 });
        gbc.writeMem(0xc4a8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc4a8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4a8), 0x56);
        EXPECT(gbc.readMem(0xc4a9), 0x58);
        // D7 0123
        gbc.setState(0x5a52, 0x9320, 0xd560, 0x9efb, 0xdd80, 0xbe8e, 0x0, 0x0);
        gbc.writeMem(0x5a52, { 0xd7 });
        gbc.writeMem(0x931e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x931e);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x931e), 0x53);
        EXPECT(gbc.readMem(0x931f), 0x5a);
        // D7 0124
        gbc.setState(0x21c2, 0xea7d, 0xb890, 0xb66a, 0xd821, 0xb7e3, 0x0, 0x1);
        gbc.writeMem(0x21c2, { 0xd7 });
        gbc.writeMem(0xea7b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xea7b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea7b), 0xc3);
        EXPECT(gbc.readMem(0xea7c), 0x21);
        // D7 0127
        gbc.setState(0x404f, 0xc3de, 0xc030, 0x36e2, 0x94e7, 0xe387, 0x0, 0x0);
        gbc.writeMem(0x404f, { 0xd7 });
        gbc.writeMem(0xc3dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc3dc);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3dc), 0x50);
        EXPECT(gbc.readMem(0xc3dd), 0x40);
        // D7 0128
        gbc.setState(0xd6f4, 0xab7c, 0x6340, 0xe4fd, 0xa64c, 0x669c, 0x1, 0x0);
        gbc.writeMem(0xab7a, { 0x0, 0x0 });
        gbc.writeMem(0xd6f4, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xab7a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab7a), 0xf5);
        EXPECT(gbc.readMem(0xab7b), 0xd6);
        EXPECT(gbc.readMem(0xd6f4), 0xd7);
        // D7 012D
        gbc.setState(0x4b07, 0x95ff, 0xd630, 0x5e39, 0x258c, 0xc9a2, 0x1, 0x0);
        gbc.writeMem(0x4b07, { 0xd7 });
        gbc.writeMem(0x95fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x95fd);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95fd), 0x8);
        EXPECT(gbc.readMem(0x95fe), 0x4b);
        // D7 012F
        gbc.setState(0xe709, 0xaebc, 0xe5f0, 0xe9ae, 0xb4e1, 0x71e2, 0x0, 0x0);
        gbc.writeMem(0xaeba, { 0x0, 0x0 });
        gbc.writeMem(0xe709, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xaeba);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeba), 0xa);
        EXPECT(gbc.readMem(0xaebb), 0xe7);
        EXPECT(gbc.readMem(0xe709), 0xd7);
        // D7 0130
        gbc.setState(0x5695, 0xb68e, 0x28d0, 0x29e6, 0x3448, 0xc066, 0x0, 0x0);
        gbc.writeMem(0x5695, { 0xd7 });
        gbc.writeMem(0xb68c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb68c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb68c), 0x96);
        EXPECT(gbc.readMem(0xb68d), 0x56);
        // D7 0132
        gbc.setState(0xcf18, 0x93e5, 0xba80, 0x82ba, 0xbaa, 0x2969, 0x0, 0x1);
        gbc.writeMem(0x93e3, { 0x0, 0x0 });
        gbc.writeMem(0xcf18, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x93e3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e3), 0x19);
        EXPECT(gbc.readMem(0x93e4), 0xcf);
        EXPECT(gbc.readMem(0xcf18), 0xd7);
        // D7 0133
        gbc.setState(0x43ca, 0xec5b, 0x9400, 0x6070, 0x44e6, 0xe76e, 0x1, 0x1);
        gbc.writeMem(0x43ca, { 0xd7 });
        gbc.writeMem(0xec59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xec59);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec59), 0xcb);
        EXPECT(gbc.readMem(0xec5a), 0x43);
        // D7 0134
        gbc.setState(0x8863, 0xcc31, 0x5240, 0xef2f, 0x8d9c, 0x7b70, 0x0, 0x1);
        gbc.writeMem(0x8863, { 0xd7 });
        gbc.writeMem(0xcc2f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xcc2f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8863), 0xd7);
        EXPECT(gbc.readMem(0xcc2f), 0x64);
        EXPECT(gbc.readMem(0xcc30), 0x88);
        // D7 0136
        gbc.setState(0xb9a4, 0xcfad, 0xf100, 0xdd7d, 0x293, 0x8385, 0x0, 0x0);
        gbc.writeMem(0xb9a4, { 0xd7 });
        gbc.writeMem(0xcfab, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcfab);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9a4), 0xd7);
        EXPECT(gbc.readMem(0xcfab), 0xa5);
        EXPECT(gbc.readMem(0xcfac), 0xb9);
        // D7 0137
        gbc.setState(0x3921, 0x954f, 0xce40, 0xc6c0, 0x5707, 0x5b1, 0x1, 0x0);
        gbc.writeMem(0x3921, { 0xd7 });
        gbc.writeMem(0x954d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x954d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x954d), 0x22);
        EXPECT(gbc.readMem(0x954e), 0x39);
        // D7 0139
        gbc.setState(0x445c, 0xfe3d, 0x1770, 0x8024, 0x2ca6, 0x14b4, 0x0, 0x1);
        gbc.writeMem(0x445c, { 0xd7 });
        gbc.writeMem(0xfe3b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfe3b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe3b), 0x5d);
        EXPECT(gbc.readMem(0xfe3c), 0x44);
        // D7 013A
        gbc.setState(0x76d0, 0x926e, 0xb6a0, 0x330f, 0x2cc, 0xa396, 0x0, 0x1);
        gbc.writeMem(0x76d0, { 0xd7 });
        gbc.writeMem(0x926c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x926c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926c), 0xd1);
        EXPECT(gbc.readMem(0x926d), 0x76);
        // D7 013B
        gbc.setState(0x3ae6, 0xd1a1, 0x9c70, 0x8c53, 0xdffc, 0xb071, 0x1, 0x1);
        gbc.writeMem(0x3ae6, { 0xd7 });
        gbc.writeMem(0xd19f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd19f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd19f), 0xe7);
        EXPECT(gbc.readMem(0xd1a0), 0x3a);
        // D7 013F
        gbc.setState(0xc4a9, 0xe8dc, 0x4420, 0xfcc6, 0x5b8, 0x6981, 0x1, 0x0);
        gbc.writeMem(0xc4a9, { 0xd7 });
        gbc.writeMem(0xe8da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe8da);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a9), 0xd7);
        EXPECT(gbc.readMem(0xe8da), 0xaa);
        EXPECT(gbc.readMem(0xe8db), 0xc4);
        // D7 0140
        gbc.setState(0x3ba8, 0x938f, 0x2f40, 0xb083, 0xb641, 0xdeb2, 0x1, 0x0);
        gbc.writeMem(0x3ba8, { 0xd7 });
        gbc.writeMem(0x938d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x938d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938d), 0xa9);
        EXPECT(gbc.readMem(0x938e), 0x3b);
        // D7 0141
        gbc.setState(0x7701, 0x9d1d, 0xece0, 0xd4d8, 0xe93e, 0x7f3c, 0x1, 0x0);
        gbc.writeMem(0x7701, { 0xd7 });
        gbc.writeMem(0x9d1b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9d1b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d1b), 0x2);
        EXPECT(gbc.readMem(0x9d1c), 0x77);
        // D7 0144
        gbc.setState(0x50a, 0x8847, 0x6b90, 0xccad, 0xe5e5, 0xdef7, 0x1, 0x1);
        gbc.writeMem(0x50a, { 0xd7 });
        gbc.writeMem(0x8845, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8845);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8845), 0xb);
        EXPECT(gbc.readMem(0x8846), 0x5);
        // D7 0147
        gbc.setState(0xe121, 0x903f, 0x5dd0, 0x847a, 0xcbaa, 0xa8db, 0x1, 0x0);
        gbc.writeMem(0x903d, { 0x0, 0x0 });
        gbc.writeMem(0xe121, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x903d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x903d), 0x22);
        EXPECT(gbc.readMem(0x903e), 0xe1);
        EXPECT(gbc.readMem(0xe121), 0xd7);
        // D7 0149
        gbc.setState(0xad1f, 0xd347, 0x54c0, 0x8d52, 0xa61b, 0x7b72, 0x1, 0x0);
        gbc.writeMem(0xad1f, { 0xd7 });
        gbc.writeMem(0xd345, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd345);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad1f), 0xd7);
        EXPECT(gbc.readMem(0xd345), 0x20);
        EXPECT(gbc.readMem(0xd346), 0xad);
        // D7 014C
        gbc.setState(0xb20a, 0xd98c, 0x11c0, 0x353e, 0xc58b, 0x94c9, 0x1, 0x0);
        gbc.writeMem(0xb20a, { 0xd7 });
        gbc.writeMem(0xd98a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd98a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20a), 0xd7);
        EXPECT(gbc.readMem(0xd98a), 0xb);
        EXPECT(gbc.readMem(0xd98b), 0xb2);
        // D7 014D
        gbc.setState(0x113d, 0xa6b2, 0xf210, 0xeda3, 0x9cec, 0xdba3, 0x0, 0x0);
        gbc.writeMem(0x113d, { 0xd7 });
        gbc.writeMem(0xa6b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa6b0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b0), 0x3e);
        EXPECT(gbc.readMem(0xa6b1), 0x11);
        // D7 014F
        gbc.setState(0xb18b, 0xadaa, 0x8580, 0xa48c, 0x8823, 0x122e, 0x0, 0x0);
        gbc.writeMem(0xada8, { 0x0, 0x0 });
        gbc.writeMem(0xb18b, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xada8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xada8), 0x8c);
        EXPECT(gbc.readMem(0xada9), 0xb1);
        EXPECT(gbc.readMem(0xb18b), 0xd7);
        // D7 0150
        gbc.setState(0x68e3, 0xc455, 0x17b0, 0xa5fb, 0xe164, 0x3be8, 0x0, 0x1);
        gbc.writeMem(0x68e3, { 0xd7 });
        gbc.writeMem(0xc453, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc453);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc453), 0xe4);
        EXPECT(gbc.readMem(0xc454), 0x68);
        // D7 0153
        gbc.setState(0x572f, 0x9f63, 0x1dc0, 0x6ec5, 0x8367, 0x12da, 0x0, 0x1);
        gbc.writeMem(0x572f, { 0xd7 });
        gbc.writeMem(0x9f61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9f61);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f61), 0x30);
        EXPECT(gbc.readMem(0x9f62), 0x57);
        // D7 015A
        gbc.setState(0x5581, 0xdc5a, 0xd2c0, 0x5320, 0x5a46, 0x1ec5, 0x1, 0x1);
        gbc.writeMem(0x5581, { 0xd7 });
        gbc.writeMem(0xdc58, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xdc58);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc58), 0x82);
        EXPECT(gbc.readMem(0xdc59), 0x55);
        // D7 015B
        gbc.setState(0x151c, 0xad68, 0x6f0, 0xe4bd, 0xd49b, 0x9c8a, 0x0, 0x0);
        gbc.writeMem(0x151c, { 0xd7 });
        gbc.writeMem(0xad66, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xad66);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad66), 0x1d);
        EXPECT(gbc.readMem(0xad67), 0x15);
        // D7 015F
        gbc.setState(0x4884, 0x8fc5, 0x9b80, 0xf6ab, 0x1566, 0xf0c2, 0x1, 0x0);
        gbc.writeMem(0x4884, { 0xd7 });
        gbc.writeMem(0x8fc3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8fc3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc3), 0x85);
        EXPECT(gbc.readMem(0x8fc4), 0x48);
        // D7 0161
        gbc.setState(0x83c2, 0xdef1, 0x15f0, 0xb8e0, 0x7c4f, 0x5107, 0x1, 0x0);
        gbc.writeMem(0x83c2, { 0xd7 });
        gbc.writeMem(0xdeef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdeef);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c2), 0xd7);
        EXPECT(gbc.readMem(0xdeef), 0xc3);
        EXPECT(gbc.readMem(0xdef0), 0x83);
        // D7 0166
        gbc.setState(0x52fa, 0xa49e, 0x9fb0, 0x32fa, 0xd604, 0x9f3c, 0x1, 0x0);
        gbc.writeMem(0x52fa, { 0xd7 });
        gbc.writeMem(0xa49c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa49c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49c), 0xfb);
        EXPECT(gbc.readMem(0xa49d), 0x52);
        // D7 0168
        gbc.setState(0xc8f6, 0x9924, 0xd230, 0xb06d, 0xea93, 0xb5ef, 0x0, 0x1);
        gbc.writeMem(0x9922, { 0x0, 0x0 });
        gbc.writeMem(0xc8f6, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9922);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9922), 0xf7);
        EXPECT(gbc.readMem(0x9923), 0xc8);
        EXPECT(gbc.readMem(0xc8f6), 0xd7);
        // D7 016C
        gbc.setState(0x10a7, 0xd8f3, 0xd680, 0xd924, 0x83da, 0x4162, 0x0, 0x1);
        gbc.writeMem(0x10a7, { 0xd7 });
        gbc.writeMem(0xd8f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd8f1);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8f1), 0xa8);
        EXPECT(gbc.readMem(0xd8f2), 0x10);
        // D7 016D
        gbc.setState(0x3a13, 0x8035, 0xf4d0, 0xd32e, 0x9685, 0x231a, 0x1, 0x0);
        gbc.writeMem(0x3a13, { 0xd7 });
        gbc.writeMem(0x8033, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8033);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8033), 0x14);
        EXPECT(gbc.readMem(0x8034), 0x3a);
        // D7 016F
        gbc.setState(0xa876, 0xa88c, 0xc2e0, 0x4601, 0x9e9b, 0xc40c, 0x1, 0x0);
        gbc.writeMem(0xa876, { 0xd7 });
        gbc.writeMem(0xa88a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa88a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa876), 0xd7);
        EXPECT(gbc.readMem(0xa88a), 0x77);
        EXPECT(gbc.readMem(0xa88b), 0xa8);
        // D7 0171
        gbc.setState(0x943c, 0xc2a7, 0xfcd0, 0x11cd, 0xf0ee, 0x45a1, 0x0, 0x0);
        gbc.writeMem(0x943c, { 0xd7 });
        gbc.writeMem(0xc2a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc2a5);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x943c), 0xd7);
        EXPECT(gbc.readMem(0xc2a5), 0x3d);
        EXPECT(gbc.readMem(0xc2a6), 0x94);
        // D7 0172
        gbc.setState(0x86b7, 0xb758, 0xe900, 0xb2a8, 0x528e, 0xe6cb, 0x0, 0x0);
        gbc.writeMem(0x86b7, { 0xd7 });
        gbc.writeMem(0xb756, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb756);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b7), 0xd7);
        EXPECT(gbc.readMem(0xb756), 0xb8);
        EXPECT(gbc.readMem(0xb757), 0x86);
        // D7 0175
        gbc.setState(0x4f2e, 0xc97f, 0x5220, 0x7a9c, 0x450c, 0xf4e8, 0x1, 0x0);
        gbc.writeMem(0x4f2e, { 0xd7 });
        gbc.writeMem(0xc97d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc97d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97d), 0x2f);
        EXPECT(gbc.readMem(0xc97e), 0x4f);
        // D7 0176
        gbc.setState(0x6f39, 0xf9b4, 0x25a0, 0x7701, 0xef93, 0xf06d, 0x1, 0x1);
        gbc.writeMem(0x6f39, { 0xd7 });
        gbc.writeMem(0xf9b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf9b2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf9b2), 0x3a);
        EXPECT(gbc.readMem(0xf9b3), 0x6f);
        // D7 0178
        gbc.setState(0x174e, 0x8962, 0xdc70, 0x270e, 0x6ec0, 0x1293, 0x0, 0x0);
        gbc.writeMem(0x174e, { 0xd7 });
        gbc.writeMem(0x8960, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8960);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8960), 0x4f);
        EXPECT(gbc.readMem(0x8961), 0x17);
        // D7 017B
        gbc.setState(0x36ee, 0xb21e, 0xa830, 0x853b, 0x48aa, 0xeb0e, 0x1, 0x0);
        gbc.writeMem(0x36ee, { 0xd7 });
        gbc.writeMem(0xb21c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb21c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb21c), 0xef);
        EXPECT(gbc.readMem(0xb21d), 0x36);
        // D7 0182
        gbc.setState(0x666c, 0xd75c, 0x7550, 0xc72e, 0x81a, 0xd5c1, 0x1, 0x1);
        gbc.writeMem(0x666c, { 0xd7 });
        gbc.writeMem(0xd75a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd75a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75a), 0x6d);
        EXPECT(gbc.readMem(0xd75b), 0x66);
        // D7 0185
        gbc.setState(0x6ab9, 0xc563, 0x9270, 0x1857, 0x51d7, 0xf1ba, 0x0, 0x1);
        gbc.writeMem(0x6ab9, { 0xd7 });
        gbc.writeMem(0xc561, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc561);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc561), 0xba);
        EXPECT(gbc.readMem(0xc562), 0x6a);
        // D7 0187
        gbc.setState(0xec7, 0xb06e, 0xe5c0, 0x347c, 0x959e, 0x67d8, 0x1, 0x1);
        gbc.writeMem(0xec7, { 0xd7 });
        gbc.writeMem(0xb06c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb06c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb06c), 0xc8);
        EXPECT(gbc.readMem(0xb06d), 0xe);
        // D7 0189
        gbc.setState(0x3271, 0xad8e, 0xf9f0, 0xf505, 0x82d9, 0x7e9e, 0x1, 0x1);
        gbc.writeMem(0x3271, { 0xd7 });
        gbc.writeMem(0xad8c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xad8c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad8c), 0x72);
        EXPECT(gbc.readMem(0xad8d), 0x32);
        // D7 018C
        gbc.setState(0x6a56, 0xa991, 0x3aa0, 0x339, 0x270a, 0x478f, 0x0, 0x0);
        gbc.writeMem(0x6a56, { 0xd7 });
        gbc.writeMem(0xa98f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa98f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa98f), 0x57);
        EXPECT(gbc.readMem(0xa990), 0x6a);
        // D7 018D
        gbc.setState(0x5c73, 0xd279, 0x4c40, 0xcca4, 0x5c71, 0xda14, 0x0, 0x0);
        gbc.writeMem(0x5c73, { 0xd7 });
        gbc.writeMem(0xd277, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd277);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd277), 0x74);
        EXPECT(gbc.readMem(0xd278), 0x5c);
        // D7 018F
        gbc.setState(0xafed, 0xcba9, 0x5040, 0x915f, 0xd625, 0x896e, 0x0, 0x0);
        gbc.writeMem(0xafed, { 0xd7 });
        gbc.writeMem(0xcba7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcba7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafed), 0xd7);
        EXPECT(gbc.readMem(0xcba7), 0xee);
        EXPECT(gbc.readMem(0xcba8), 0xaf);
        // D7 0190
        gbc.setState(0x116, 0xa1d5, 0xb030, 0x9680, 0x3ab7, 0xbe82, 0x0, 0x1);
        gbc.writeMem(0x116, { 0xd7 });
        gbc.writeMem(0xa1d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa1d3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d3), 0x17);
        EXPECT(gbc.readMem(0xa1d4), 0x1);
        // D7 0191
        gbc.setState(0xe85, 0xdc8c, 0x3230, 0xb2a5, 0x4b15, 0xb3d2, 0x0, 0x0);
        gbc.writeMem(0xe85, { 0xd7 });
        gbc.writeMem(0xdc8a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xdc8a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc8a), 0x86);
        EXPECT(gbc.readMem(0xdc8b), 0xe);
        // D7 0194
        gbc.setState(0x5e65, 0xfcdc, 0x2b70, 0x70f8, 0xf726, 0x5ef9, 0x0, 0x1);
        gbc.writeMem(0x5e65, { 0xd7 });
        gbc.writeMem(0xfcda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xfcda);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfcda), 0x66);
        EXPECT(gbc.readMem(0xfcdb), 0x5e);
        // D7 0195
        gbc.setState(0x4cde, 0xcd2b, 0x18d0, 0x1d64, 0xda73, 0xe1fb, 0x0, 0x0);
        gbc.writeMem(0x4cde, { 0xd7 });
        gbc.writeMem(0xcd29, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xcd29);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd29), 0xdf);
        EXPECT(gbc.readMem(0xcd2a), 0x4c);
        // D7 0196
        gbc.setState(0xa1c9, 0xdf3c, 0xb330, 0xde46, 0xbf90, 0x55ac, 0x0, 0x0);
        gbc.writeMem(0xa1c9, { 0xd7 });
        gbc.writeMem(0xdf3a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xdf3a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1c9), 0xd7);
        EXPECT(gbc.readMem(0xdf3a), 0xca);
        EXPECT(gbc.readMem(0xdf3b), 0xa1);
        // D7 0197
        gbc.setState(0xcf5b, 0x85a8, 0xa030, 0x1b1e, 0x3963, 0xabfe, 0x0, 0x1);
        gbc.writeMem(0x85a6, { 0x0, 0x0 });
        gbc.writeMem(0xcf5b, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x85a6);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85a6), 0x5c);
        EXPECT(gbc.readMem(0x85a7), 0xcf);
        EXPECT(gbc.readMem(0xcf5b), 0xd7);
        // D7 0198
        gbc.setState(0xc8ab, 0x815e, 0xeae0, 0x4b3e, 0x66d0, 0x3f0e, 0x1, 0x1);
        gbc.writeMem(0x815c, { 0x0, 0x0 });
        gbc.writeMem(0xc8ab, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x815c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x815c), 0xac);
        EXPECT(gbc.readMem(0x815d), 0xc8);
        EXPECT(gbc.readMem(0xc8ab), 0xd7);
        // D7 0199
        gbc.setState(0x54f2, 0xf572, 0xb380, 0x810f, 0x82ef, 0xb23d, 0x0, 0x0);
        gbc.writeMem(0x54f2, { 0xd7 });
        gbc.writeMem(0xf570, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf570);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf570), 0xf3);
        EXPECT(gbc.readMem(0xf571), 0x54);
        // D7 019A
        gbc.setState(0xca99, 0xe625, 0x35d0, 0x99c2, 0xe2ec, 0x766, 0x1, 0x0);
        gbc.writeMem(0xca99, { 0xd7 });
        gbc.writeMem(0xe623, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe623);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca99), 0xd7);
        EXPECT(gbc.readMem(0xe623), 0x9a);
        EXPECT(gbc.readMem(0xe624), 0xca);
        // D7 019C
        gbc.setState(0x16c0, 0xebf9, 0x6740, 0xbb3f, 0x131e, 0xe58e, 0x0, 0x1);
        gbc.writeMem(0x16c0, { 0xd7 });
        gbc.writeMem(0xebf7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xebf7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf7), 0xc1);
        EXPECT(gbc.readMem(0xebf8), 0x16);
        // D7 019D
        gbc.setState(0xe62f, 0xea96, 0xaf10, 0x91a0, 0x100a, 0xe11c, 0x1, 0x0);
        gbc.writeMem(0xe62f, { 0xd7 });
        gbc.writeMem(0xea94, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xea94);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62f), 0xd7);
        EXPECT(gbc.readMem(0xea94), 0x30);
        EXPECT(gbc.readMem(0xea95), 0xe6);
        // D7 01A0
        gbc.setState(0xabf3, 0xb520, 0xa790, 0x53e8, 0x9dfa, 0x8ea, 0x0, 0x0);
        gbc.writeMem(0xabf3, { 0xd7 });
        gbc.writeMem(0xb51e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb51e);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabf3), 0xd7);
        EXPECT(gbc.readMem(0xb51e), 0xf4);
        EXPECT(gbc.readMem(0xb51f), 0xab);
        // D7 01A1
        gbc.setState(0x1753, 0xf8c6, 0x59b0, 0xb111, 0x8751, 0xa79b, 0x1, 0x0);
        gbc.writeMem(0x1753, { 0xd7 });
        gbc.writeMem(0xf8c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf8c4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf8c4), 0x54);
        EXPECT(gbc.readMem(0xf8c5), 0x17);
        // D7 01A2
        gbc.setState(0x6183, 0xc229, 0xadc0, 0x693b, 0xb147, 0xc996, 0x0, 0x1);
        gbc.writeMem(0x6183, { 0xd7 });
        gbc.writeMem(0xc227, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc227);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc227), 0x84);
        EXPECT(gbc.readMem(0xc228), 0x61);
        // D7 01A5
        gbc.setState(0x2bba, 0x98e9, 0x3270, 0x32b2, 0xf361, 0xe350, 0x0, 0x0);
        gbc.writeMem(0x2bba, { 0xd7 });
        gbc.writeMem(0x98e7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x98e7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e7), 0xbb);
        EXPECT(gbc.readMem(0x98e8), 0x2b);
        // D7 01A8
        gbc.setState(0x2bda, 0x86c0, 0xd440, 0x56e4, 0xee39, 0x62cb, 0x1, 0x0);
        gbc.writeMem(0x2bda, { 0xd7 });
        gbc.writeMem(0x86be, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x86be);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86be), 0xdb);
        EXPECT(gbc.readMem(0x86bf), 0x2b);
        // D7 01AC
        gbc.setState(0x2451, 0xcb40, 0x810, 0xd696, 0xe9c4, 0x7c1a, 0x0, 0x1);
        gbc.writeMem(0x2451, { 0xd7 });
        gbc.writeMem(0xcb3e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcb3e);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb3e), 0x52);
        EXPECT(gbc.readMem(0xcb3f), 0x24);
        // D7 01AE
        gbc.setState(0x63e6, 0xc372, 0x3630, 0x4a2, 0x4422, 0x1ac4, 0x0, 0x0);
        gbc.writeMem(0x63e6, { 0xd7 });
        gbc.writeMem(0xc370, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc370);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc370), 0xe7);
        EXPECT(gbc.readMem(0xc371), 0x63);
        // D7 01B0
        gbc.setState(0x37, 0xf834, 0xa370, 0x2cd1, 0xe610, 0x7791, 0x1, 0x0);
        gbc.writeMem(0x37, { 0xd7 });
        gbc.writeMem(0xf832, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf832);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf832), 0x38);
        EXPECT(gbc.readMem(0xf833), 0x0);
        // D7 01B2
        gbc.setState(0xdbe1, 0x9c2c, 0x6da0, 0x6344, 0x9a0d, 0xffb7, 0x0, 0x0);
        gbc.writeMem(0x9c2a, { 0x0, 0x0 });
        gbc.writeMem(0xdbe1, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9c2a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c2a), 0xe2);
        EXPECT(gbc.readMem(0x9c2b), 0xdb);
        EXPECT(gbc.readMem(0xdbe1), 0xd7);
        // D7 01B3
        gbc.setState(0x5242, 0xaa6a, 0x6100, 0x97ff, 0x9e47, 0xa37c, 0x0, 0x0);
        gbc.writeMem(0x5242, { 0xd7 });
        gbc.writeMem(0xaa68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xaa68);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa68), 0x43);
        EXPECT(gbc.readMem(0xaa69), 0x52);
        // D7 01B6
        gbc.setState(0xa3e3, 0xeb3c, 0x94e0, 0xb66b, 0xaa0, 0x4451, 0x1, 0x1);
        gbc.writeMem(0xa3e3, { 0xd7 });
        gbc.writeMem(0xeb3a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xeb3a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e3), 0xd7);
        EXPECT(gbc.readMem(0xeb3a), 0xe4);
        EXPECT(gbc.readMem(0xeb3b), 0xa3);
        // D7 01B7
        gbc.setState(0x417, 0xd27f, 0xb680, 0x647d, 0x6ffe, 0x5486, 0x1, 0x0);
        gbc.writeMem(0x417, { 0xd7 });
        gbc.writeMem(0xd27d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd27d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27d), 0x18);
        EXPECT(gbc.readMem(0xd27e), 0x4);
        // D7 01B8
        gbc.setState(0xbe1c, 0xd053, 0x690, 0xf48d, 0x1905, 0x17df, 0x0, 0x1);
        gbc.writeMem(0xbe1c, { 0xd7 });
        gbc.writeMem(0xd051, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd051);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe1c), 0xd7);
        EXPECT(gbc.readMem(0xd051), 0x1d);
        EXPECT(gbc.readMem(0xd052), 0xbe);
        // D7 01BC
        gbc.setState(0x9121, 0xf152, 0x1f50, 0xbfaf, 0xeb6d, 0xfd0a, 0x1, 0x0);
        gbc.writeMem(0x9121, { 0xd7 });
        gbc.writeMem(0xf150, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf150);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9121), 0xd7);
        EXPECT(gbc.readMem(0xf150), 0x22);
        EXPECT(gbc.readMem(0xf151), 0x91);
        // D7 01BF
        gbc.setState(0x5cb4, 0xf5ad, 0x3e60, 0x69f4, 0xc19e, 0x3733, 0x0, 0x1);
        gbc.writeMem(0x5cb4, { 0xd7 });
        gbc.writeMem(0xf5ab, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf5ab);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf5ab), 0xb5);
        EXPECT(gbc.readMem(0xf5ac), 0x5c);
        // D7 01C0
        gbc.setState(0x33be, 0xf7ae, 0x6430, 0xe0e8, 0xcce9, 0x231c, 0x0, 0x0);
        gbc.writeMem(0x33be, { 0xd7 });
        gbc.writeMem(0xf7ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf7ac);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7ac), 0xbf);
        EXPECT(gbc.readMem(0xf7ad), 0x33);
        // D7 01C1
        gbc.setState(0xa2e8, 0xdcda, 0x41e0, 0xa911, 0x1aa7, 0xf15b, 0x0, 0x1);
        gbc.writeMem(0xa2e8, { 0xd7 });
        gbc.writeMem(0xdcd8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xdcd8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e8), 0xd7);
        EXPECT(gbc.readMem(0xdcd8), 0xe9);
        EXPECT(gbc.readMem(0xdcd9), 0xa2);
        // D7 01C2
        gbc.setState(0x8d2a, 0xb34d, 0x7560, 0x9310, 0x23a5, 0xeb73, 0x0, 0x0);
        gbc.writeMem(0x8d2a, { 0xd7 });
        gbc.writeMem(0xb34b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb34b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d2a), 0xd7);
        EXPECT(gbc.readMem(0xb34b), 0x2b);
        EXPECT(gbc.readMem(0xb34c), 0x8d);
        // D7 01C5
        gbc.setState(0x2793, 0xe032, 0x3450, 0x1c2d, 0xfb95, 0x8a27, 0x0, 0x0);
        gbc.writeMem(0x2793, { 0xd7 });
        gbc.writeMem(0xe030, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe030);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe030), 0x94);
        EXPECT(gbc.readMem(0xe031), 0x27);
        // D7 01CC
        gbc.setState(0x6531, 0xd691, 0x9e10, 0x429c, 0x3a41, 0xef17, 0x1, 0x1);
        gbc.writeMem(0x6531, { 0xd7 });
        gbc.writeMem(0xd68f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd68f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd68f), 0x32);
        EXPECT(gbc.readMem(0xd690), 0x65);
        // D7 01D1
        gbc.setState(0x88a2, 0x81ef, 0xf150, 0x529e, 0xb6cf, 0x4c6a, 0x1, 0x0);
        gbc.writeMem(0x81ed, { 0x0, 0x0 });
        gbc.writeMem(0x88a2, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x81ed);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ed), 0xa3);
        EXPECT(gbc.readMem(0x81ee), 0x88);
        EXPECT(gbc.readMem(0x88a2), 0xd7);
        // D7 01D2
        gbc.setState(0xcaf5, 0xcbae, 0xb770, 0x2872, 0x3e73, 0x514d, 0x0, 0x1);
        gbc.writeMem(0xcaf5, { 0xd7 });
        gbc.writeMem(0xcbac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcbac);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf5), 0xd7);
        EXPECT(gbc.readMem(0xcbac), 0xf6);
        EXPECT(gbc.readMem(0xcbad), 0xca);
        // D7 01D3
        gbc.setState(0x9ebc, 0xca1e, 0xfae0, 0xb4d6, 0xc55e, 0xeac9, 0x0, 0x1);
        gbc.writeMem(0x9ebc, { 0xd7 });
        gbc.writeMem(0xca1c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xca1c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ebc), 0xd7);
        EXPECT(gbc.readMem(0xca1c), 0xbd);
        EXPECT(gbc.readMem(0xca1d), 0x9e);
        // D7 01D4
        gbc.setState(0xbacd, 0xd4ed, 0xb580, 0xb83, 0x2098, 0x4cbc, 0x1, 0x0);
        gbc.writeMem(0xbacd, { 0xd7 });
        gbc.writeMem(0xd4eb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd4eb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbacd), 0xd7);
        EXPECT(gbc.readMem(0xd4eb), 0xce);
        EXPECT(gbc.readMem(0xd4ec), 0xba);
        // D7 01D5
        gbc.setState(0x7176, 0x876e, 0x5090, 0x1fec, 0xb1d4, 0x51c0, 0x1, 0x0);
        gbc.writeMem(0x7176, { 0xd7 });
        gbc.writeMem(0x876c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x876c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876c), 0x77);
        EXPECT(gbc.readMem(0x876d), 0x71);
        // D7 01D7
        gbc.setState(0xed7f, 0xe9db, 0x3e20, 0xa441, 0x4104, 0x8088, 0x1, 0x0);
        gbc.writeMem(0xe9d9, { 0x0, 0x0 });
        gbc.writeMem(0xed7f, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe9d9);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9d9), 0x80);
        EXPECT(gbc.readMem(0xe9da), 0xed);
        EXPECT(gbc.readMem(0xed7f), 0xd7);
        // D7 01D8
        gbc.setState(0x62bb, 0x8af7, 0x310, 0x873f, 0x676a, 0x63af, 0x0, 0x0);
        gbc.writeMem(0x62bb, { 0xd7 });
        gbc.writeMem(0x8af5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8af5);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af5), 0xbc);
        EXPECT(gbc.readMem(0x8af6), 0x62);
        // D7 01DB
        gbc.setState(0x1b7b, 0xce1e, 0xc340, 0xa45d, 0xca0d, 0x1c8d, 0x1, 0x1);
        gbc.writeMem(0x1b7b, { 0xd7 });
        gbc.writeMem(0xce1c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xce1c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1c), 0x7c);
        EXPECT(gbc.readMem(0xce1d), 0x1b);
        // D7 01DC
        gbc.setState(0x3bfc, 0xe532, 0x3d60, 0x75d1, 0x97f3, 0xba80, 0x1, 0x0);
        gbc.writeMem(0x3bfc, { 0xd7 });
        gbc.writeMem(0xe530, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe530);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe530), 0xfd);
        EXPECT(gbc.readMem(0xe531), 0x3b);
        // D7 01DF
        gbc.setState(0xc4, 0xa1b2, 0xef0, 0x82e6, 0xd227, 0xc8d5, 0x1, 0x0);
        gbc.writeMem(0xc4, { 0xd7 });
        gbc.writeMem(0xa1b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa1b0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b0), 0xc5);
        EXPECT(gbc.readMem(0xa1b1), 0x0);
        // D7 01E1
        gbc.setState(0xe72c, 0xc3a4, 0x8760, 0x2017, 0x904, 0x1773, 0x1, 0x1);
        gbc.writeMem(0xc3a2, { 0x0, 0x0 });
        gbc.writeMem(0xe72c, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc3a2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a2), 0x2d);
        EXPECT(gbc.readMem(0xc3a3), 0xe7);
        EXPECT(gbc.readMem(0xe72c), 0xd7);
        // D7 01E4
        gbc.setState(0x72b5, 0xa36b, 0x1a10, 0x56b4, 0xe5a7, 0x4584, 0x1, 0x1);
        gbc.writeMem(0x72b5, { 0xd7 });
        gbc.writeMem(0xa369, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa369);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa369), 0xb6);
        EXPECT(gbc.readMem(0xa36a), 0x72);
        // D7 01E6
        gbc.setState(0x52ed, 0x86da, 0xca30, 0xfc6, 0x9cda, 0xf63a, 0x1, 0x0);
        gbc.writeMem(0x52ed, { 0xd7 });
        gbc.writeMem(0x86d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x86d8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d8), 0xee);
        EXPECT(gbc.readMem(0x86d9), 0x52);
        // D7 01E7
        gbc.setState(0x6148, 0xa312, 0xb6b0, 0x9b83, 0x9126, 0xf74f, 0x0, 0x1);
        gbc.writeMem(0x6148, { 0xd7 });
        gbc.writeMem(0xa310, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa310);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa310), 0x49);
        EXPECT(gbc.readMem(0xa311), 0x61);
        // D7 01E8
        gbc.setState(0x8738, 0xdf58, 0x8840, 0x1ba4, 0x9db6, 0x50d3, 0x0, 0x1);
        gbc.writeMem(0x8738, { 0xd7 });
        gbc.writeMem(0xdf56, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdf56);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8738), 0xd7);
        EXPECT(gbc.readMem(0xdf56), 0x39);
        EXPECT(gbc.readMem(0xdf57), 0x87);
        // D7 01EC
        gbc.setState(0x630a, 0xbb88, 0x1010, 0x42ee, 0x220a, 0x6f53, 0x0, 0x0);
        gbc.writeMem(0x630a, { 0xd7 });
        gbc.writeMem(0xbb86, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xbb86);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb86), 0xb);
        EXPECT(gbc.readMem(0xbb87), 0x63);
        // D7 01ED
        gbc.setState(0x9dce, 0xf580, 0xa490, 0x282c, 0xf3, 0x7e6, 0x0, 0x1);
        gbc.writeMem(0x9dce, { 0xd7 });
        gbc.writeMem(0xf57e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf57e);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dce), 0xd7);
        EXPECT(gbc.readMem(0xf57e), 0xcf);
        EXPECT(gbc.readMem(0xf57f), 0x9d);
        // D7 01F2
        gbc.setState(0x3536, 0xf706, 0xb9d0, 0x299f, 0x5ee6, 0xabeb, 0x0, 0x0);
        gbc.writeMem(0x3536, { 0xd7 });
        gbc.writeMem(0xf704, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf704);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf704), 0x37);
        EXPECT(gbc.readMem(0xf705), 0x35);
        // D7 01F6
        gbc.setState(0xed3f, 0x9748, 0x5330, 0x1899, 0xbcf, 0x6f0e, 0x1, 0x0);
        gbc.writeMem(0x9746, { 0x0, 0x0 });
        gbc.writeMem(0xed3f, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9746);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9746), 0x40);
        EXPECT(gbc.readMem(0x9747), 0xed);
        EXPECT(gbc.readMem(0xed3f), 0xd7);
        // D7 01F7
        gbc.setState(0x9d0e, 0xaf2f, 0xef00, 0xd051, 0xfa13, 0x1cea, 0x1, 0x1);
        gbc.writeMem(0x9d0e, { 0xd7 });
        gbc.writeMem(0xaf2d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xaf2d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d0e), 0xd7);
        EXPECT(gbc.readMem(0xaf2d), 0xf);
        EXPECT(gbc.readMem(0xaf2e), 0x9d);
        // D7 01FD
        gbc.setState(0x784e, 0x8dc6, 0x9400, 0xa02a, 0xba43, 0xfc54, 0x0, 0x0);
        gbc.writeMem(0x784e, { 0xd7 });
        gbc.writeMem(0x8dc4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8dc4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc4), 0x4f);
        EXPECT(gbc.readMem(0x8dc5), 0x78);
        // D7 0201
        gbc.setState(0x8d86, 0xba6d, 0xd390, 0x50d8, 0x802, 0xca62, 0x1, 0x0);
        gbc.writeMem(0x8d86, { 0xd7 });
        gbc.writeMem(0xba6b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xba6b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d86), 0xd7);
        EXPECT(gbc.readMem(0xba6b), 0x87);
        EXPECT(gbc.readMem(0xba6c), 0x8d);
        // D7 0202
        gbc.setState(0xa8dc, 0xd347, 0x6750, 0x65fd, 0xa817, 0xadc0, 0x1, 0x1);
        gbc.writeMem(0xa8dc, { 0xd7 });
        gbc.writeMem(0xd345, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd345);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8dc), 0xd7);
        EXPECT(gbc.readMem(0xd345), 0xdd);
        EXPECT(gbc.readMem(0xd346), 0xa8);
        // D7 0204
        gbc.setState(0x24e2, 0x89f9, 0x4bf0, 0x4244, 0xdfc4, 0xea93, 0x1, 0x0);
        gbc.writeMem(0x24e2, { 0xd7 });
        gbc.writeMem(0x89f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x89f7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89f7), 0xe3);
        EXPECT(gbc.readMem(0x89f8), 0x24);
        // D7 0207
        gbc.setState(0x8242, 0x8a69, 0x9290, 0x6b03, 0x24df, 0xa53, 0x1, 0x0);
        gbc.writeMem(0x8242, { 0xd7 });
        gbc.writeMem(0x8a67, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8a67);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8242), 0xd7);
        EXPECT(gbc.readMem(0x8a67), 0x43);
        EXPECT(gbc.readMem(0x8a68), 0x82);
        // D7 0209
        gbc.setState(0x8e34, 0xac93, 0x40a0, 0xb174, 0x8758, 0xecc6, 0x1, 0x0);
        gbc.writeMem(0x8e34, { 0xd7 });
        gbc.writeMem(0xac91, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xac91);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e34), 0xd7);
        EXPECT(gbc.readMem(0xac91), 0x35);
        EXPECT(gbc.readMem(0xac92), 0x8e);
        // D7 020A
        gbc.setState(0x203d, 0xc016, 0xcc40, 0xd2cc, 0x8c4b, 0x2cff, 0x0, 0x1);
        gbc.writeMem(0x203d, { 0xd7 });
        gbc.writeMem(0xc014, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc014);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc014), 0x3e);
        EXPECT(gbc.readMem(0xc015), 0x20);
        // D7 020B
        gbc.setState(0x4033, 0xbede, 0xd460, 0xdb01, 0xdf00, 0x4df2, 0x0, 0x0);
        gbc.writeMem(0x4033, { 0xd7 });
        gbc.writeMem(0xbedc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xbedc);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbedc), 0x34);
        EXPECT(gbc.readMem(0xbedd), 0x40);
        // D7 020C
        gbc.setState(0x58c9, 0xe0f4, 0xc9c0, 0x509a, 0xce98, 0x8e, 0x1, 0x0);
        gbc.writeMem(0x58c9, { 0xd7 });
        gbc.writeMem(0xe0f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe0f2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f2), 0xca);
        EXPECT(gbc.readMem(0xe0f3), 0x58);
        // D7 020F
        gbc.setState(0xd11a, 0xe0f7, 0xbab0, 0xf1b0, 0x5fc8, 0x5fa3, 0x0, 0x0);
        gbc.writeMem(0xd11a, { 0xd7 });
        gbc.writeMem(0xe0f5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe0f5);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11a), 0xd7);
        EXPECT(gbc.readMem(0xe0f5), 0x1b);
        EXPECT(gbc.readMem(0xe0f6), 0xd1);
        // D7 0210
        gbc.setState(0xebec, 0x80ac, 0xfae0, 0x4daf, 0xddb6, 0xcc8, 0x0, 0x1);
        gbc.writeMem(0x80aa, { 0x0, 0x0 });
        gbc.writeMem(0xebec, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x80aa);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80aa), 0xed);
        EXPECT(gbc.readMem(0x80ab), 0xeb);
        EXPECT(gbc.readMem(0xebec), 0xd7);
        // D7 0211
        gbc.setState(0x9312, 0xa029, 0x68f0, 0x6fb1, 0xec66, 0x470d, 0x1, 0x1);
        gbc.writeMem(0x9312, { 0xd7 });
        gbc.writeMem(0xa027, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa027);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9312), 0xd7);
        EXPECT(gbc.readMem(0xa027), 0x13);
        EXPECT(gbc.readMem(0xa028), 0x93);
        // D7 0213
        gbc.setState(0xd23c, 0xafa7, 0xb0d0, 0x329a, 0xa172, 0xc5a5, 0x1, 0x0);
        gbc.writeMem(0xafa5, { 0x0, 0x0 });
        gbc.writeMem(0xd23c, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xafa5);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa5), 0x3d);
        EXPECT(gbc.readMem(0xafa6), 0xd2);
        EXPECT(gbc.readMem(0xd23c), 0xd7);
        // D7 0217
        gbc.setState(0x3210, 0x8783, 0x4df0, 0xba0c, 0x3ae2, 0x3bcd, 0x0, 0x0);
        gbc.writeMem(0x3210, { 0xd7 });
        gbc.writeMem(0x8781, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8781);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8781), 0x11);
        EXPECT(gbc.readMem(0x8782), 0x32);
        // D7 0218
        gbc.setState(0x36d6, 0xe844, 0xe5f0, 0x71b5, 0xbf36, 0xabc6, 0x0, 0x1);
        gbc.writeMem(0x36d6, { 0xd7 });
        gbc.writeMem(0xe842, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe842);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe842), 0xd7);
        EXPECT(gbc.readMem(0xe843), 0x36);
        // D7 0219
        gbc.setState(0xa7a0, 0xeec9, 0x9af0, 0x5aac, 0xe6bf, 0x6526, 0x1, 0x1);
        gbc.writeMem(0xa7a0, { 0xd7 });
        gbc.writeMem(0xeec7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xeec7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a0), 0xd7);
        EXPECT(gbc.readMem(0xeec7), 0xa1);
        EXPECT(gbc.readMem(0xeec8), 0xa7);
        // D7 021B
        gbc.setState(0xb754, 0x88ca, 0xe60, 0x5070, 0x7630, 0x56a7, 0x1, 0x0);
        gbc.writeMem(0x88c8, { 0x0, 0x0 });
        gbc.writeMem(0xb754, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x88c8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88c8), 0x55);
        EXPECT(gbc.readMem(0x88c9), 0xb7);
        EXPECT(gbc.readMem(0xb754), 0xd7);
        // D7 021C
        gbc.setState(0xa870, 0xee2b, 0x5f70, 0xa1c, 0xd3bd, 0xe453, 0x0, 0x0);
        gbc.writeMem(0xa870, { 0xd7 });
        gbc.writeMem(0xee29, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xee29);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa870), 0xd7);
        EXPECT(gbc.readMem(0xee29), 0x71);
        EXPECT(gbc.readMem(0xee2a), 0xa8);
        // D7 021D
        gbc.setState(0x683d, 0x8b4e, 0x4300, 0x8580, 0x5830, 0x7cf5, 0x1, 0x1);
        gbc.writeMem(0x683d, { 0xd7 });
        gbc.writeMem(0x8b4c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8b4c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b4c), 0x3e);
        EXPECT(gbc.readMem(0x8b4d), 0x68);
        // D7 021E
        gbc.setState(0x7654, 0xa02b, 0xd7f0, 0xd2f0, 0x6fa8, 0xd3c3, 0x0, 0x0);
        gbc.writeMem(0x7654, { 0xd7 });
        gbc.writeMem(0xa029, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa029);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa029), 0x55);
        EXPECT(gbc.readMem(0xa02a), 0x76);
        // D7 0220
        gbc.setState(0x6e2a, 0x9dfa, 0xe3f0, 0x592b, 0xb2d8, 0x5cfd, 0x1, 0x1);
        gbc.writeMem(0x6e2a, { 0xd7 });
        gbc.writeMem(0x9df8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9df8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df8), 0x2b);
        EXPECT(gbc.readMem(0x9df9), 0x6e);
        // D7 0225
        gbc.setState(0x1f88, 0xe2c4, 0xce10, 0x4fb6, 0x2d02, 0xe217, 0x0, 0x1);
        gbc.writeMem(0x1f88, { 0xd7 });
        gbc.writeMem(0xe2c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe2c2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c2), 0x89);
        EXPECT(gbc.readMem(0xe2c3), 0x1f);
        // D7 0226
        gbc.setState(0xde98, 0xf26a, 0xf00, 0xcb51, 0xa5db, 0x1ae5, 0x1, 0x0);
        gbc.writeMem(0xde98, { 0xd7 });
        gbc.writeMem(0xf268, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf268);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde98), 0xd7);
        EXPECT(gbc.readMem(0xf268), 0x99);
        EXPECT(gbc.readMem(0xf269), 0xde);
        // D7 0229
        gbc.setState(0xb1a1, 0xd2fd, 0x6710, 0x4508, 0x28ba, 0xda28, 0x0, 0x1);
        gbc.writeMem(0xb1a1, { 0xd7 });
        gbc.writeMem(0xd2fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd2fb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a1), 0xd7);
        EXPECT(gbc.readMem(0xd2fb), 0xa2);
        EXPECT(gbc.readMem(0xd2fc), 0xb1);
        // D7 022B
        gbc.setState(0x35a1, 0xd7c4, 0xa000, 0x9af2, 0x8d84, 0xf2ab, 0x0, 0x1);
        gbc.writeMem(0x35a1, { 0xd7 });
        gbc.writeMem(0xd7c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd7c2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c2), 0xa2);
        EXPECT(gbc.readMem(0xd7c3), 0x35);
        // D7 022D
        gbc.setState(0x32b8, 0x97dc, 0x42b0, 0xd9fe, 0x1a4b, 0x371b, 0x1, 0x0);
        gbc.writeMem(0x32b8, { 0xd7 });
        gbc.writeMem(0x97da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x97da);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97da), 0xb9);
        EXPECT(gbc.readMem(0x97db), 0x32);
        // D7 022E
        gbc.setState(0xddd3, 0x9012, 0x5930, 0x28d7, 0xdce2, 0x3c1d, 0x1, 0x1);
        gbc.writeMem(0x9010, { 0x0, 0x0 });
        gbc.writeMem(0xddd3, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9010);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9010), 0xd4);
        EXPECT(gbc.readMem(0x9011), 0xdd);
        EXPECT(gbc.readMem(0xddd3), 0xd7);
        // D7 0231
        gbc.setState(0x79a8, 0xf34d, 0x2240, 0x87b8, 0x3f2e, 0xd0e5, 0x1, 0x0);
        gbc.writeMem(0x79a8, { 0xd7 });
        gbc.writeMem(0xf34b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf34b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf34b), 0xa9);
        EXPECT(gbc.readMem(0xf34c), 0x79);
        // D7 0232
        gbc.setState(0x1130, 0xb9db, 0x8e50, 0xf869, 0xec63, 0xda67, 0x0, 0x0);
        gbc.writeMem(0x1130, { 0xd7 });
        gbc.writeMem(0xb9d9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb9d9);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d9), 0x31);
        EXPECT(gbc.readMem(0xb9da), 0x11);
        // D7 0234
        gbc.setState(0x65df, 0xe357, 0xd450, 0x1def, 0x968d, 0x46a0, 0x1, 0x0);
        gbc.writeMem(0x65df, { 0xd7 });
        gbc.writeMem(0xe355, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe355);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe355), 0xe0);
        EXPECT(gbc.readMem(0xe356), 0x65);
        // D7 0235
        gbc.setState(0x6260, 0xea94, 0x4610, 0xecd5, 0xd632, 0x3fe2, 0x0, 0x1);
        gbc.writeMem(0x6260, { 0xd7 });
        gbc.writeMem(0xea92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xea92);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea92), 0x61);
        EXPECT(gbc.readMem(0xea93), 0x62);
        // D7 0236
        gbc.setState(0x9174, 0xff18, 0x6260, 0x9eec, 0xfd97, 0x22cf, 0x0, 0x0);
        gbc.writeMem(0x9174, { 0xd7 });
        gbc.writeMem(0xff16, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xff16);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9174), 0xd7);
        EXPECT(gbc.readMem(0xff16), 0x75);
        EXPECT(gbc.readMem(0xff17), 0x91);
        // D7 0239
        gbc.setState(0xaa26, 0x81a3, 0x110, 0x994c, 0xf80b, 0xd7b9, 0x0, 0x0);
        gbc.writeMem(0x81a1, { 0x0, 0x0 });
        gbc.writeMem(0xaa26, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x81a1);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a1), 0x27);
        EXPECT(gbc.readMem(0x81a2), 0xaa);
        EXPECT(gbc.readMem(0xaa26), 0xd7);
        // D7 023A
        gbc.setState(0x89f3, 0xd4c4, 0xf260, 0x21e2, 0x5039, 0x8fd, 0x1, 0x0);
        gbc.writeMem(0x89f3, { 0xd7 });
        gbc.writeMem(0xd4c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd4c2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f3), 0xd7);
        EXPECT(gbc.readMem(0xd4c2), 0xf4);
        EXPECT(gbc.readMem(0xd4c3), 0x89);
        // D7 0240
        gbc.setState(0x28c8, 0xa0e9, 0x6a00, 0x26e3, 0xd73f, 0x9555, 0x0, 0x0);
        gbc.writeMem(0x28c8, { 0xd7 });
        gbc.writeMem(0xa0e7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa0e7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e7), 0xc9);
        EXPECT(gbc.readMem(0xa0e8), 0x28);
        // D7 0241
        gbc.setState(0x99b9, 0x81e0, 0x7200, 0x27c3, 0x6c68, 0x4a61, 0x1, 0x1);
        gbc.writeMem(0x81de, { 0x0, 0x0 });
        gbc.writeMem(0x99b9, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x81de);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81de), 0xba);
        EXPECT(gbc.readMem(0x81df), 0x99);
        EXPECT(gbc.readMem(0x99b9), 0xd7);
        // D7 0242
        gbc.setState(0x8c91, 0xf808, 0x1760, 0x852d, 0xd8bf, 0x5829, 0x0, 0x1);
        gbc.writeMem(0x8c91, { 0xd7 });
        gbc.writeMem(0xf806, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf806);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c91), 0xd7);
        EXPECT(gbc.readMem(0xf806), 0x92);
        EXPECT(gbc.readMem(0xf807), 0x8c);
        // D7 0243
        gbc.setState(0x769d, 0xe3ec, 0x1200, 0xff54, 0x56f1, 0xfc1, 0x1, 0x0);
        gbc.writeMem(0x769d, { 0xd7 });
        gbc.writeMem(0xe3ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe3ea);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ea), 0x9e);
        EXPECT(gbc.readMem(0xe3eb), 0x76);
        // D7 0245
        gbc.setState(0xc57e, 0x89ac, 0x2f10, 0xc7cb, 0x3776, 0x6098, 0x1, 0x1);
        gbc.writeMem(0x89aa, { 0x0, 0x0 });
        gbc.writeMem(0xc57e, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x89aa);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89aa), 0x7f);
        EXPECT(gbc.readMem(0x89ab), 0xc5);
        EXPECT(gbc.readMem(0xc57e), 0xd7);
        // D7 0246
        gbc.setState(0x7431, 0xda5f, 0x8ae0, 0xbced, 0x471c, 0xfd37, 0x0, 0x0);
        gbc.writeMem(0x7431, { 0xd7 });
        gbc.writeMem(0xda5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xda5d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda5d), 0x32);
        EXPECT(gbc.readMem(0xda5e), 0x74);
        // D7 0247
        gbc.setState(0x12f2, 0xa84c, 0xf7e0, 0x5d1e, 0x2be, 0x482, 0x0, 0x1);
        gbc.writeMem(0x12f2, { 0xd7 });
        gbc.writeMem(0xa84a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa84a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa84a), 0xf3);
        EXPECT(gbc.readMem(0xa84b), 0x12);
        // D7 0248
        gbc.setState(0x9ad, 0xeb52, 0x70, 0x6410, 0x1f5b, 0xfff9, 0x0, 0x0);
        gbc.writeMem(0x9ad, { 0xd7 });
        gbc.writeMem(0xeb50, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xeb50);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb50), 0xae);
        EXPECT(gbc.readMem(0xeb51), 0x9);
        // D7 024D
        gbc.setState(0x2dd9, 0x8af4, 0xa950, 0x6f4c, 0xd23c, 0xc154, 0x1, 0x1);
        gbc.writeMem(0x2dd9, { 0xd7 });
        gbc.writeMem(0x8af2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8af2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af2), 0xda);
        EXPECT(gbc.readMem(0x8af3), 0x2d);
        // D7 024E
        gbc.setState(0x8304, 0x8c9c, 0xa0, 0x4258, 0x18d8, 0x5eb9, 0x1, 0x0);
        gbc.writeMem(0x8304, { 0xd7 });
        gbc.writeMem(0x8c9a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8c9a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8304), 0xd7);
        EXPECT(gbc.readMem(0x8c9a), 0x5);
        EXPECT(gbc.readMem(0x8c9b), 0x83);
        // D7 024F
        gbc.setState(0xb6c3, 0xb061, 0x5500, 0xf34f, 0x3310, 0x3dda, 0x1, 0x1);
        gbc.writeMem(0xb05f, { 0x0, 0x0 });
        gbc.writeMem(0xb6c3, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb05f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb05f), 0xc4);
        EXPECT(gbc.readMem(0xb060), 0xb6);
        EXPECT(gbc.readMem(0xb6c3), 0xd7);
        // D7 0250
        gbc.setState(0xa8cf, 0x9775, 0x9670, 0x30a2, 0xf83e, 0xa9f3, 0x1, 0x1);
        gbc.writeMem(0x9773, { 0x0, 0x0 });
        gbc.writeMem(0xa8cf, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9773);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9773), 0xd0);
        EXPECT(gbc.readMem(0x9774), 0xa8);
        EXPECT(gbc.readMem(0xa8cf), 0xd7);
        // D7 0251
        gbc.setState(0x93e0, 0x8b55, 0x60d0, 0x580f, 0x84e1, 0x6d38, 0x0, 0x1);
        gbc.writeMem(0x8b53, { 0x0, 0x0 });
        gbc.writeMem(0x93e0, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8b53);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b53), 0xe1);
        EXPECT(gbc.readMem(0x8b54), 0x93);
        EXPECT(gbc.readMem(0x93e0), 0xd7);
        // D7 0253
        gbc.setState(0x93e, 0xfbe0, 0x32c0, 0xa34f, 0x8a50, 0xcc34, 0x0, 0x1);
        gbc.writeMem(0x93e, { 0xd7 });
        gbc.writeMem(0xfbde, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xfbde);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfbde), 0x3f);
        EXPECT(gbc.readMem(0xfbdf), 0x9);
        // D7 0254
        gbc.setState(0xa89f, 0x9dd6, 0x5f70, 0x5aed, 0xed27, 0x985c, 0x1, 0x0);
        gbc.writeMem(0x9dd4, { 0x0, 0x0 });
        gbc.writeMem(0xa89f, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9dd4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd4), 0xa0);
        EXPECT(gbc.readMem(0x9dd5), 0xa8);
        EXPECT(gbc.readMem(0xa89f), 0xd7);
        // D7 0256
        gbc.setState(0xa37e, 0xa2a5, 0xe2b0, 0x3c36, 0xe960, 0xee8c, 0x0, 0x0);
        gbc.writeMem(0xa2a3, { 0x0, 0x0 });
        gbc.writeMem(0xa37e, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa2a3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a3), 0x7f);
        EXPECT(gbc.readMem(0xa2a4), 0xa3);
        EXPECT(gbc.readMem(0xa37e), 0xd7);
        // D7 0257
        gbc.setState(0x80f8, 0xa4bd, 0x1d50, 0xa65, 0x828b, 0x912e, 0x0, 0x0);
        gbc.writeMem(0x80f8, { 0xd7 });
        gbc.writeMem(0xa4bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa4bb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f8), 0xd7);
        EXPECT(gbc.readMem(0xa4bb), 0xf9);
        EXPECT(gbc.readMem(0xa4bc), 0x80);
        // D7 0258
        gbc.setState(0x4ee5, 0x81c8, 0x5ef0, 0x5ad1, 0x58f2, 0x43f1, 0x1, 0x1);
        gbc.writeMem(0x4ee5, { 0xd7 });
        gbc.writeMem(0x81c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x81c6);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c6), 0xe6);
        EXPECT(gbc.readMem(0x81c7), 0x4e);
        // D7 025E
        gbc.setState(0x202b, 0xf655, 0x5680, 0x59e4, 0x5627, 0xfd27, 0x0, 0x0);
        gbc.writeMem(0x202b, { 0xd7 });
        gbc.writeMem(0xf653, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf653);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf653), 0x2c);
        EXPECT(gbc.readMem(0xf654), 0x20);
        // D7 0262
        gbc.setState(0x7fbb, 0xc8f2, 0x58b0, 0x9684, 0x29ea, 0x9601, 0x0, 0x1);
        gbc.writeMem(0x7fbb, { 0xd7 });
        gbc.writeMem(0xc8f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc8f0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f0), 0xbc);
        EXPECT(gbc.readMem(0xc8f1), 0x7f);
        // D7 0263
        gbc.setState(0x3e67, 0x8d78, 0xfc60, 0x8e1a, 0x12bb, 0x97b6, 0x0, 0x1);
        gbc.writeMem(0x3e67, { 0xd7 });
        gbc.writeMem(0x8d76, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8d76);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d76), 0x68);
        EXPECT(gbc.readMem(0x8d77), 0x3e);
        // D7 0264
        gbc.setState(0x693e, 0xb283, 0xd3b0, 0x9c4e, 0x3af4, 0x6c9f, 0x1, 0x0);
        gbc.writeMem(0x693e, { 0xd7 });
        gbc.writeMem(0xb281, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb281);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb281), 0x3f);
        EXPECT(gbc.readMem(0xb282), 0x69);
        // D7 0265
        gbc.setState(0x5059, 0xa789, 0x3050, 0x5afe, 0xe88b, 0x1b38, 0x1, 0x1);
        gbc.writeMem(0x5059, { 0xd7 });
        gbc.writeMem(0xa787, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa787);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa787), 0x5a);
        EXPECT(gbc.readMem(0xa788), 0x50);
        // D7 0267
        gbc.setState(0xa3e9, 0x8d99, 0xa4e0, 0x55ae, 0x6559, 0x34ca, 0x1, 0x0);
        gbc.writeMem(0x8d97, { 0x0, 0x0 });
        gbc.writeMem(0xa3e9, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8d97);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d97), 0xea);
        EXPECT(gbc.readMem(0x8d98), 0xa3);
        EXPECT(gbc.readMem(0xa3e9), 0xd7);
        // D7 0268
        gbc.setState(0x420a, 0x88f3, 0x11b0, 0xd017, 0x43c9, 0x1f0c, 0x1, 0x1);
        gbc.writeMem(0x420a, { 0xd7 });
        gbc.writeMem(0x88f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x88f1);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f1), 0xb);
        EXPECT(gbc.readMem(0x88f2), 0x42);
        // D7 026B
        gbc.setState(0xdd67, 0xb0ac, 0x3330, 0x1ae6, 0x41eb, 0x1d48, 0x0, 0x0);
        gbc.writeMem(0xb0aa, { 0x0, 0x0 });
        gbc.writeMem(0xdd67, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb0aa);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0aa), 0x68);
        EXPECT(gbc.readMem(0xb0ab), 0xdd);
        EXPECT(gbc.readMem(0xdd67), 0xd7);
        // D7 026D
        gbc.setState(0xa43f, 0x8c87, 0x780, 0x43b, 0xea68, 0xb769, 0x0, 0x0);
        gbc.writeMem(0x8c85, { 0x0, 0x0 });
        gbc.writeMem(0xa43f, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8c85);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c85), 0x40);
        EXPECT(gbc.readMem(0x8c86), 0xa4);
        EXPECT(gbc.readMem(0xa43f), 0xd7);
        // D7 026E
        gbc.setState(0x98be, 0xa6d5, 0xa8a0, 0x2512, 0xa8b9, 0xfa47, 0x0, 0x1);
        gbc.writeMem(0x98be, { 0xd7 });
        gbc.writeMem(0xa6d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa6d3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98be), 0xd7);
        EXPECT(gbc.readMem(0xa6d3), 0xbf);
        EXPECT(gbc.readMem(0xa6d4), 0x98);
        // D7 026F
        gbc.setState(0xa3d3, 0xbf11, 0x3050, 0xc633, 0x2f41, 0x9ceb, 0x1, 0x0);
        gbc.writeMem(0xa3d3, { 0xd7 });
        gbc.writeMem(0xbf0f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbf0f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3d3), 0xd7);
        EXPECT(gbc.readMem(0xbf0f), 0xd4);
        EXPECT(gbc.readMem(0xbf10), 0xa3);
        // D7 0274
        gbc.setState(0xa077, 0xaa74, 0xbab0, 0x26de, 0xec57, 0xd2fa, 0x0, 0x0);
        gbc.writeMem(0xa077, { 0xd7 });
        gbc.writeMem(0xaa72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xaa72);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa077), 0xd7);
        EXPECT(gbc.readMem(0xaa72), 0x78);
        EXPECT(gbc.readMem(0xaa73), 0xa0);
        // D7 0276
        gbc.setState(0x46cf, 0xc183, 0xf0f0, 0xe25a, 0x2a22, 0x3c54, 0x0, 0x0);
        gbc.writeMem(0x46cf, { 0xd7 });
        gbc.writeMem(0xc181, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc181);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc181), 0xd0);
        EXPECT(gbc.readMem(0xc182), 0x46);
        // D7 027B
        gbc.setState(0x3e87, 0xe498, 0x3780, 0xe4f5, 0xdac2, 0x4ea1, 0x0, 0x1);
        gbc.writeMem(0x3e87, { 0xd7 });
        gbc.writeMem(0xe496, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe496);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe496), 0x88);
        EXPECT(gbc.readMem(0xe497), 0x3e);
        // D7 027F
        gbc.setState(0x2178, 0x9b7f, 0xa580, 0x8a7e, 0x776c, 0x2c1, 0x1, 0x0);
        gbc.writeMem(0x2178, { 0xd7 });
        gbc.writeMem(0x9b7d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9b7d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b7d), 0x79);
        EXPECT(gbc.readMem(0x9b7e), 0x21);
        // D7 0281
        gbc.setState(0x54a2, 0x8af2, 0x1150, 0x6bb7, 0x7b5b, 0xa771, 0x0, 0x1);
        gbc.writeMem(0x54a2, { 0xd7 });
        gbc.writeMem(0x8af0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8af0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af0), 0xa3);
        EXPECT(gbc.readMem(0x8af1), 0x54);
        // D7 0282
        gbc.setState(0xdc31, 0xb24f, 0x88f0, 0x1f51, 0x7e2f, 0xaa5e, 0x1, 0x1);
        gbc.writeMem(0xb24d, { 0x0, 0x0 });
        gbc.writeMem(0xdc31, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb24d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb24d), 0x32);
        EXPECT(gbc.readMem(0xb24e), 0xdc);
        EXPECT(gbc.readMem(0xdc31), 0xd7);
        // D7 0284
        gbc.setState(0x8c24, 0xe7a4, 0x4aa0, 0xb8b7, 0xe7b0, 0xee82, 0x1, 0x1);
        gbc.writeMem(0x8c24, { 0xd7 });
        gbc.writeMem(0xe7a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe7a2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c24), 0xd7);
        EXPECT(gbc.readMem(0xe7a2), 0x25);
        EXPECT(gbc.readMem(0xe7a3), 0x8c);
        // D7 0288
        gbc.setState(0xb2f0, 0xed96, 0xa2d0, 0x3d2e, 0xbc53, 0x7ab0, 0x1, 0x1);
        gbc.writeMem(0xb2f0, { 0xd7 });
        gbc.writeMem(0xed94, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xed94);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f0), 0xd7);
        EXPECT(gbc.readMem(0xed94), 0xf1);
        EXPECT(gbc.readMem(0xed95), 0xb2);
        // D7 0289
        gbc.setState(0x11cd, 0xc9f5, 0x5430, 0xcf59, 0xb3d4, 0xace0, 0x1, 0x1);
        gbc.writeMem(0x11cd, { 0xd7 });
        gbc.writeMem(0xc9f3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc9f3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f3), 0xce);
        EXPECT(gbc.readMem(0xc9f4), 0x11);
        // D7 028B
        gbc.setState(0x3369, 0xa47c, 0xb330, 0x2d4d, 0x41f1, 0x739d, 0x0, 0x0);
        gbc.writeMem(0x3369, { 0xd7 });
        gbc.writeMem(0xa47a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa47a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa47a), 0x6a);
        EXPECT(gbc.readMem(0xa47b), 0x33);
        // D7 028C
        gbc.setState(0x3da6, 0x9a23, 0xe850, 0x742, 0x87a3, 0xaba7, 0x1, 0x0);
        gbc.writeMem(0x3da6, { 0xd7 });
        gbc.writeMem(0x9a21, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9a21);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a21), 0xa7);
        EXPECT(gbc.readMem(0x9a22), 0x3d);
        // D7 028D
        gbc.setState(0xe720, 0xa2b8, 0x4e0, 0xda25, 0x3ad2, 0x2f85, 0x0, 0x0);
        gbc.writeMem(0xa2b6, { 0x0, 0x0 });
        gbc.writeMem(0xe720, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa2b6);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b6), 0x21);
        EXPECT(gbc.readMem(0xa2b7), 0xe7);
        EXPECT(gbc.readMem(0xe720), 0xd7);
        // D7 0291
        gbc.setState(0x7683, 0x96d1, 0x8740, 0x55e3, 0x5947, 0xe77b, 0x0, 0x1);
        gbc.writeMem(0x7683, { 0xd7 });
        gbc.writeMem(0x96cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x96cf);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96cf), 0x84);
        EXPECT(gbc.readMem(0x96d0), 0x76);
        // D7 0293
        gbc.setState(0x88e, 0xe0cb, 0x7f80, 0xcf48, 0x8aee, 0xc5a6, 0x1, 0x0);
        gbc.writeMem(0x88e, { 0xd7 });
        gbc.writeMem(0xe0c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe0c9);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c9), 0x8f);
        EXPECT(gbc.readMem(0xe0ca), 0x8);
        // D7 0294
        gbc.setState(0x17d6, 0xe656, 0x33a0, 0x4c12, 0xc0a2, 0xdd9a, 0x1, 0x1);
        gbc.writeMem(0x17d6, { 0xd7 });
        gbc.writeMem(0xe654, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe654);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe654), 0xd7);
        EXPECT(gbc.readMem(0xe655), 0x17);
        // D7 0295
        gbc.setState(0x60b5, 0xe4e4, 0x6550, 0x8b7c, 0x3cc5, 0x91ff, 0x0, 0x1);
        gbc.writeMem(0x60b5, { 0xd7 });
        gbc.writeMem(0xe4e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe4e2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4e2), 0xb6);
        EXPECT(gbc.readMem(0xe4e3), 0x60);
        // D7 0296
        gbc.setState(0xb98c, 0x846d, 0xecf0, 0x2b27, 0xc095, 0x5d0a, 0x1, 0x1);
        gbc.writeMem(0x846b, { 0x0, 0x0 });
        gbc.writeMem(0xb98c, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x846b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x846b), 0x8d);
        EXPECT(gbc.readMem(0x846c), 0xb9);
        EXPECT(gbc.readMem(0xb98c), 0xd7);
        // D7 0297
        gbc.setState(0xc14e, 0xfd8f, 0x65a0, 0x8169, 0x2f9e, 0xc2fe, 0x0, 0x0);
        gbc.writeMem(0xc14e, { 0xd7 });
        gbc.writeMem(0xfd8d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xfd8d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc14e), 0xd7);
        EXPECT(gbc.readMem(0xfd8d), 0x4f);
        EXPECT(gbc.readMem(0xfd8e), 0xc1);
        // D7 0298
        gbc.setState(0x1ded, 0xcb36, 0x6e10, 0x9eb0, 0x1bb1, 0x5b71, 0x0, 0x1);
        gbc.writeMem(0x1ded, { 0xd7 });
        gbc.writeMem(0xcb34, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xcb34);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb34), 0xee);
        EXPECT(gbc.readMem(0xcb35), 0x1d);
        // D7 0299
        gbc.setState(0xa420, 0xb8ee, 0xd0b0, 0x4e69, 0xfd14, 0xaa5d, 0x0, 0x1);
        gbc.writeMem(0xa420, { 0xd7 });
        gbc.writeMem(0xb8ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb8ec);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa420), 0xd7);
        EXPECT(gbc.readMem(0xb8ec), 0x21);
        EXPECT(gbc.readMem(0xb8ed), 0xa4);
        // D7 029B
        gbc.setState(0x5766, 0xe4c8, 0x6ae0, 0x715, 0x5cd6, 0xd7b, 0x0, 0x0);
        gbc.writeMem(0x5766, { 0xd7 });
        gbc.writeMem(0xe4c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe4c6);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c6), 0x67);
        EXPECT(gbc.readMem(0xe4c7), 0x57);
        // D7 029D
        gbc.setState(0x491e, 0xfb6d, 0xb860, 0xbbc3, 0xff39, 0xd862, 0x0, 0x0);
        gbc.writeMem(0x491e, { 0xd7 });
        gbc.writeMem(0xfb6b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfb6b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb6b), 0x1f);
        EXPECT(gbc.readMem(0xfb6c), 0x49);
        // D7 029F
        gbc.setState(0xccca, 0xf5e5, 0x7a10, 0xcf82, 0x226e, 0x8925, 0x0, 0x0);
        gbc.writeMem(0xccca, { 0xd7 });
        gbc.writeMem(0xf5e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xf5e3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccca), 0xd7);
        EXPECT(gbc.readMem(0xf5e3), 0xcb);
        EXPECT(gbc.readMem(0xf5e4), 0xcc);
        // D7 02A0
        gbc.setState(0x77e6, 0xff97, 0xdac0, 0x22c2, 0xef24, 0xd5eb, 0x0, 0x0);
        gbc.writeMem(0x77e6, { 0xd7 });
        gbc.writeMem(0xff95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xff95);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff95), 0xe7);
        EXPECT(gbc.readMem(0xff96), 0x77);
        // D7 02A4
        gbc.setState(0xd6c4, 0xe044, 0x7d90, 0x9b90, 0xc6e1, 0x449c, 0x1, 0x1);
        gbc.writeMem(0xd6c4, { 0xd7 });
        gbc.writeMem(0xe042, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe042);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c4), 0xd7);
        EXPECT(gbc.readMem(0xe042), 0xc5);
        EXPECT(gbc.readMem(0xe043), 0xd6);
        // D7 02A9
        gbc.setState(0x11af, 0xecfc, 0x7b0, 0xebeb, 0xd614, 0x6d6e, 0x0, 0x0);
        gbc.writeMem(0x11af, { 0xd7 });
        gbc.writeMem(0xecfa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xecfa);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecfa), 0xb0);
        EXPECT(gbc.readMem(0xecfb), 0x11);
        // D7 02AA
        gbc.setState(0x7229, 0xee32, 0x0, 0x6a10, 0x6acf, 0x1797, 0x0, 0x0);
        gbc.writeMem(0x7229, { 0xd7 });
        gbc.writeMem(0xee30, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xee30);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee30), 0x2a);
        EXPECT(gbc.readMem(0xee31), 0x72);
        // D7 02AD
        gbc.setState(0x81be, 0xdce1, 0xb550, 0xe797, 0x97b6, 0x3c45, 0x0, 0x1);
        gbc.writeMem(0x81be, { 0xd7 });
        gbc.writeMem(0xdcdf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdcdf);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81be), 0xd7);
        EXPECT(gbc.readMem(0xdcdf), 0xbf);
        EXPECT(gbc.readMem(0xdce0), 0x81);
        // D7 02AE
        gbc.setState(0x32fa, 0x85ba, 0xad80, 0xa94, 0xe94a, 0xf72c, 0x1, 0x0);
        gbc.writeMem(0x32fa, { 0xd7 });
        gbc.writeMem(0x85b8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x85b8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b8), 0xfb);
        EXPECT(gbc.readMem(0x85b9), 0x32);
        // D7 02B0
        gbc.setState(0x2d57, 0x8ca6, 0x9270, 0x2cc7, 0xe535, 0x5d11, 0x1, 0x0);
        gbc.writeMem(0x2d57, { 0xd7 });
        gbc.writeMem(0x8ca4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8ca4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca4), 0x58);
        EXPECT(gbc.readMem(0x8ca5), 0x2d);
        // D7 02B1
        gbc.setState(0x2289, 0xcfc9, 0x7db0, 0x3aae, 0xebcf, 0x8e4, 0x0, 0x0);
        gbc.writeMem(0x2289, { 0xd7 });
        gbc.writeMem(0xcfc7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xcfc7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfc7), 0x8a);
        EXPECT(gbc.readMem(0xcfc8), 0x22);
        // D7 02B3
        gbc.setState(0xa407, 0xe4aa, 0x3370, 0x9384, 0x6734, 0x5e5d, 0x1, 0x0);
        gbc.writeMem(0xa407, { 0xd7 });
        gbc.writeMem(0xe4a8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe4a8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa407), 0xd7);
        EXPECT(gbc.readMem(0xe4a8), 0x8);
        EXPECT(gbc.readMem(0xe4a9), 0xa4);
        // D7 02B7
        gbc.setState(0x567a, 0xb6fa, 0xc6e0, 0xe74e, 0x2c24, 0x39a4, 0x1, 0x1);
        gbc.writeMem(0x567a, { 0xd7 });
        gbc.writeMem(0xb6f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb6f8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f8), 0x7b);
        EXPECT(gbc.readMem(0xb6f9), 0x56);
        // D7 02BB
        gbc.setState(0xca68, 0xfec7, 0x38e0, 0xf81b, 0x834b, 0xb2cd, 0x1, 0x0);
        gbc.writeMem(0xca68, { 0xd7 });
        gbc.writeMem(0xfec5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfec5);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca68), 0xd7);
        EXPECT(gbc.readMem(0xfec5), 0x69);
        EXPECT(gbc.readMem(0xfec6), 0xca);
        // D7 02BC
        gbc.setState(0x5104, 0xc78c, 0xcd40, 0x68b4, 0x87e1, 0x821e, 0x0, 0x1);
        gbc.writeMem(0x5104, { 0xd7 });
        gbc.writeMem(0xc78a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc78a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78a), 0x5);
        EXPECT(gbc.readMem(0xc78b), 0x51);
        // D7 02BD
        gbc.setState(0xa6c5, 0xc34c, 0x8f90, 0x5bcc, 0xd04, 0xb5d3, 0x1, 0x1);
        gbc.writeMem(0xa6c5, { 0xd7 });
        gbc.writeMem(0xc34a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc34a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c5), 0xd7);
        EXPECT(gbc.readMem(0xc34a), 0xc6);
        EXPECT(gbc.readMem(0xc34b), 0xa6);
        // D7 02BF
        gbc.setState(0xdc55, 0xcc35, 0xece0, 0x783a, 0xd684, 0x394d, 0x1, 0x1);
        gbc.writeMem(0xcc33, { 0x0, 0x0 });
        gbc.writeMem(0xdc55, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcc33);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc33), 0x56);
        EXPECT(gbc.readMem(0xcc34), 0xdc);
        EXPECT(gbc.readMem(0xdc55), 0xd7);
        // D7 02C0
        gbc.setState(0xbec2, 0xa145, 0xb810, 0x6006, 0xe915, 0x61db, 0x1, 0x0);
        gbc.writeMem(0xa143, { 0x0, 0x0 });
        gbc.writeMem(0xbec2, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa143);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa143), 0xc3);
        EXPECT(gbc.readMem(0xa144), 0xbe);
        EXPECT(gbc.readMem(0xbec2), 0xd7);
        // D7 02C1
        gbc.setState(0x24a, 0xa2b4, 0x7900, 0xbf6a, 0xd13b, 0x6060, 0x0, 0x1);
        gbc.writeMem(0x24a, { 0xd7 });
        gbc.writeMem(0xa2b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa2b2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b2), 0x4b);
        EXPECT(gbc.readMem(0xa2b3), 0x2);
        // D7 02C3
        gbc.setState(0x1e38, 0xce3b, 0x1f10, 0x89fc, 0xdaf1, 0xfcd5, 0x0, 0x1);
        gbc.writeMem(0x1e38, { 0xd7 });
        gbc.writeMem(0xce39, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xce39);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce39), 0x39);
        EXPECT(gbc.readMem(0xce3a), 0x1e);
        // D7 02C6
        gbc.setState(0x8923, 0xbeb6, 0x5ff0, 0xc44c, 0xbe93, 0xf587, 0x1, 0x1);
        gbc.writeMem(0x8923, { 0xd7 });
        gbc.writeMem(0xbeb4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbeb4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8923), 0xd7);
        EXPECT(gbc.readMem(0xbeb4), 0x24);
        EXPECT(gbc.readMem(0xbeb5), 0x89);
        // D7 02C7
        gbc.setState(0x978b, 0xff57, 0x29a0, 0xc695, 0x5f7e, 0xa11e, 0x0, 0x1);
        gbc.writeMem(0x978b, { 0xd7 });
        gbc.writeMem(0xff55, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xff55);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978b), 0xd7);
        EXPECT(gbc.readMem(0xff55), 0x8c);
        EXPECT(gbc.readMem(0xff56), 0x97);
        // D7 02C8
        gbc.setState(0xe161, 0xb641, 0x6110, 0x2c33, 0x4c5c, 0x2926, 0x0, 0x1);
        gbc.writeMem(0xb63f, { 0x0, 0x0 });
        gbc.writeMem(0xe161, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb63f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb63f), 0x62);
        EXPECT(gbc.readMem(0xb640), 0xe1);
        EXPECT(gbc.readMem(0xe161), 0xd7);
        // D7 02C9
        gbc.setState(0x5dec, 0x95d8, 0x52c0, 0xd7c8, 0x204c, 0x51a2, 0x1, 0x0);
        gbc.writeMem(0x5dec, { 0xd7 });
        gbc.writeMem(0x95d6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x95d6);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d6), 0xed);
        EXPECT(gbc.readMem(0x95d7), 0x5d);
        // D7 02CB
        gbc.setState(0x4d7d, 0x90fa, 0x7c90, 0x23f5, 0x1cc2, 0xd5af, 0x1, 0x1);
        gbc.writeMem(0x4d7d, { 0xd7 });
        gbc.writeMem(0x90f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x90f8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f8), 0x7e);
        EXPECT(gbc.readMem(0x90f9), 0x4d);
        // D7 02CD
        gbc.setState(0x4d9, 0xb7b6, 0x49e0, 0x963f, 0x1d81, 0xb7ad, 0x0, 0x0);
        gbc.writeMem(0x4d9, { 0xd7 });
        gbc.writeMem(0xb7b4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb7b4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b4), 0xda);
        EXPECT(gbc.readMem(0xb7b5), 0x4);
        // D7 02D2
        gbc.setState(0x9e9a, 0xb495, 0x5ff0, 0xda4f, 0x4477, 0x8781, 0x1, 0x1);
        gbc.writeMem(0x9e9a, { 0xd7 });
        gbc.writeMem(0xb493, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb493);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9a), 0xd7);
        EXPECT(gbc.readMem(0xb493), 0x9b);
        EXPECT(gbc.readMem(0xb494), 0x9e);
        // D7 02D3
        gbc.setState(0x5b6d, 0xa5e4, 0xa630, 0x33ca, 0xd8a7, 0x69b7, 0x1, 0x1);
        gbc.writeMem(0x5b6d, { 0xd7 });
        gbc.writeMem(0xa5e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa5e2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e2), 0x6e);
        EXPECT(gbc.readMem(0xa5e3), 0x5b);
        // D7 02D7
        gbc.setState(0xbb3d, 0xa4cd, 0x5370, 0x7d39, 0x13a5, 0x77e8, 0x1, 0x1);
        gbc.writeMem(0xa4cb, { 0x0, 0x0 });
        gbc.writeMem(0xbb3d, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa4cb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4cb), 0x3e);
        EXPECT(gbc.readMem(0xa4cc), 0xbb);
        EXPECT(gbc.readMem(0xbb3d), 0xd7);
        // D7 02D8
        gbc.setState(0xd2c7, 0xae8b, 0xdf20, 0x3336, 0x7c53, 0x4518, 0x1, 0x0);
        gbc.writeMem(0xae89, { 0x0, 0x0 });
        gbc.writeMem(0xd2c7, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xae89);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae89), 0xc8);
        EXPECT(gbc.readMem(0xae8a), 0xd2);
        EXPECT(gbc.readMem(0xd2c7), 0xd7);
        // D7 02D9
        gbc.setState(0x62c2, 0xd5a9, 0xe2a0, 0xe9e5, 0xdc32, 0xe90e, 0x0, 0x1);
        gbc.writeMem(0x62c2, { 0xd7 });
        gbc.writeMem(0xd5a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd5a7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5a7), 0xc3);
        EXPECT(gbc.readMem(0xd5a8), 0x62);
        // D7 02DA
        gbc.setState(0xefc6, 0xb53c, 0x1200, 0xcbcd, 0x73be, 0x99bb, 0x0, 0x0);
        gbc.writeMem(0xb53a, { 0x0, 0x0 });
        gbc.writeMem(0xefc6, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb53a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb53a), 0xc7);
        EXPECT(gbc.readMem(0xb53b), 0xef);
        EXPECT(gbc.readMem(0xefc6), 0xd7);
        // D7 02DD
        gbc.setState(0xd97b, 0xdfbc, 0xa780, 0x8029, 0x2500, 0x2589, 0x1, 0x0);
        gbc.writeMem(0xd97b, { 0xd7 });
        gbc.writeMem(0xdfba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdfba);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97b), 0xd7);
        EXPECT(gbc.readMem(0xdfba), 0x7c);
        EXPECT(gbc.readMem(0xdfbb), 0xd9);
        // D7 02DF
        gbc.setState(0x778, 0xe9eb, 0xbc0, 0xeb63, 0xd3d, 0x137, 0x1, 0x1);
        gbc.writeMem(0x778, { 0xd7 });
        gbc.writeMem(0xe9e9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe9e9);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9e9), 0x79);
        EXPECT(gbc.readMem(0xe9ea), 0x7);
        // D7 02E2
        gbc.setState(0x2887, 0x8594, 0x2590, 0x56ac, 0x4a7f, 0xc8e1, 0x1, 0x1);
        gbc.writeMem(0x2887, { 0xd7 });
        gbc.writeMem(0x8592, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8592);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8592), 0x88);
        EXPECT(gbc.readMem(0x8593), 0x28);
        // D7 02E4
        gbc.setState(0xa585, 0xd9ed, 0x48f0, 0xd4ff, 0x9b60, 0x27d5, 0x1, 0x1);
        gbc.writeMem(0xa585, { 0xd7 });
        gbc.writeMem(0xd9eb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd9eb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa585), 0xd7);
        EXPECT(gbc.readMem(0xd9eb), 0x86);
        EXPECT(gbc.readMem(0xd9ec), 0xa5);
        // D7 02E5
        gbc.setState(0x817d, 0xe654, 0x9e70, 0x8168, 0x4b38, 0x3927, 0x1, 0x1);
        gbc.writeMem(0x817d, { 0xd7 });
        gbc.writeMem(0xe652, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe652);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x817d), 0xd7);
        EXPECT(gbc.readMem(0xe652), 0x7e);
        EXPECT(gbc.readMem(0xe653), 0x81);
        // D7 02E8
        gbc.setState(0x947a, 0xc137, 0x1f80, 0x2828, 0x6208, 0x919, 0x0, 0x0);
        gbc.writeMem(0x947a, { 0xd7 });
        gbc.writeMem(0xc135, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc135);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947a), 0xd7);
        EXPECT(gbc.readMem(0xc135), 0x7b);
        EXPECT(gbc.readMem(0xc136), 0x94);
        // D7 02EC
        gbc.setState(0x3ad6, 0xf491, 0x4a70, 0xe7ae, 0xdebb, 0xe812, 0x0, 0x0);
        gbc.writeMem(0x3ad6, { 0xd7 });
        gbc.writeMem(0xf48f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf48f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf48f), 0xd7);
        EXPECT(gbc.readMem(0xf490), 0x3a);
        // D7 02ED
        gbc.setState(0x6d47, 0x809e, 0x19d0, 0x1fb2, 0x29a6, 0xb433, 0x0, 0x0);
        gbc.writeMem(0x6d47, { 0xd7 });
        gbc.writeMem(0x809c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x809c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x809c), 0x48);
        EXPECT(gbc.readMem(0x809d), 0x6d);
        // D7 02F0
        gbc.setState(0xc2f9, 0xd124, 0x13d0, 0xe197, 0x63fe, 0x7281, 0x1, 0x0);
        gbc.writeMem(0xc2f9, { 0xd7 });
        gbc.writeMem(0xd122, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd122);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2f9), 0xd7);
        EXPECT(gbc.readMem(0xd122), 0xfa);
        EXPECT(gbc.readMem(0xd123), 0xc2);
        // D7 02F2
        gbc.setState(0xa6ae, 0xfce7, 0xf900, 0xa629, 0x41aa, 0x17e6, 0x1, 0x1);
        gbc.writeMem(0xa6ae, { 0xd7 });
        gbc.writeMem(0xfce5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfce5);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ae), 0xd7);
        EXPECT(gbc.readMem(0xfce5), 0xaf);
        EXPECT(gbc.readMem(0xfce6), 0xa6);
        // D7 02F3
        gbc.setState(0xf5a, 0xaf20, 0x910, 0xb13a, 0xd854, 0xc028, 0x1, 0x0);
        gbc.writeMem(0xf5a, { 0xd7 });
        gbc.writeMem(0xaf1e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xaf1e);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1e), 0x5b);
        EXPECT(gbc.readMem(0xaf1f), 0xf);
        // D7 02F4
        gbc.setState(0x9f38, 0xa0c1, 0x8230, 0x9a8c, 0x30a2, 0x460a, 0x1, 0x0);
        gbc.writeMem(0x9f38, { 0xd7 });
        gbc.writeMem(0xa0bf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa0bf);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f38), 0xd7);
        EXPECT(gbc.readMem(0xa0bf), 0x39);
        EXPECT(gbc.readMem(0xa0c0), 0x9f);
        // D7 02F7
        gbc.setState(0xb577, 0xe05c, 0x26e0, 0xdda, 0xe40, 0x72c7, 0x1, 0x0);
        gbc.writeMem(0xb577, { 0xd7 });
        gbc.writeMem(0xe05a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe05a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb577), 0xd7);
        EXPECT(gbc.readMem(0xe05a), 0x78);
        EXPECT(gbc.readMem(0xe05b), 0xb5);
        // D7 02F9
        gbc.setState(0xca49, 0xb749, 0xa720, 0x3071, 0xc654, 0xac60, 0x0, 0x1);
        gbc.writeMem(0xb747, { 0x0, 0x0 });
        gbc.writeMem(0xca49, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb747);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb747), 0x4a);
        EXPECT(gbc.readMem(0xb748), 0xca);
        EXPECT(gbc.readMem(0xca49), 0xd7);
        // D7 02FA
        gbc.setState(0xcf89, 0xaa7e, 0xf910, 0xaaa9, 0xa8fa, 0x5fc4, 0x1, 0x0);
        gbc.writeMem(0xaa7c, { 0x0, 0x0 });
        gbc.writeMem(0xcf89, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xaa7c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa7c), 0x8a);
        EXPECT(gbc.readMem(0xaa7d), 0xcf);
        EXPECT(gbc.readMem(0xcf89), 0xd7);
        // D7 02FC
        gbc.setState(0x97df, 0xa794, 0x9930, 0x87ab, 0x5853, 0x456b, 0x0, 0x1);
        gbc.writeMem(0x97df, { 0xd7 });
        gbc.writeMem(0xa792, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa792);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97df), 0xd7);
        EXPECT(gbc.readMem(0xa792), 0xe0);
        EXPECT(gbc.readMem(0xa793), 0x97);
        // D7 02FF
        gbc.setState(0xa412, 0xc25c, 0xa010, 0x30f6, 0x1ed5, 0xdfd4, 0x1, 0x1);
        gbc.writeMem(0xa412, { 0xd7 });
        gbc.writeMem(0xc25a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc25a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa412), 0xd7);
        EXPECT(gbc.readMem(0xc25a), 0x13);
        EXPECT(gbc.readMem(0xc25b), 0xa4);
        // D7 0304
        gbc.setState(0x3e9d, 0xba44, 0x2280, 0x3d64, 0xc745, 0x69ac, 0x1, 0x1);
        gbc.writeMem(0x3e9d, { 0xd7 });
        gbc.writeMem(0xba42, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xba42);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba42), 0x9e);
        EXPECT(gbc.readMem(0xba43), 0x3e);
        // D7 0308
        gbc.setState(0x3334, 0xa779, 0x8e50, 0xb6cb, 0xdf74, 0xe13f, 0x0, 0x1);
        gbc.writeMem(0x3334, { 0xd7 });
        gbc.writeMem(0xa777, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa777);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa777), 0x35);
        EXPECT(gbc.readMem(0xa778), 0x33);
        // D7 030A
        gbc.setState(0x2b01, 0x9558, 0xe0a0, 0x9dce, 0x6d81, 0x16d0, 0x0, 0x1);
        gbc.writeMem(0x2b01, { 0xd7 });
        gbc.writeMem(0x9556, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9556);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9556), 0x2);
        EXPECT(gbc.readMem(0x9557), 0x2b);
        // D7 030D
        gbc.setState(0x9a5d, 0xfb3f, 0x1b70, 0xbec6, 0x125, 0xf880, 0x1, 0x1);
        gbc.writeMem(0x9a5d, { 0xd7 });
        gbc.writeMem(0xfb3d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xfb3d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a5d), 0xd7);
        EXPECT(gbc.readMem(0xfb3d), 0x5e);
        EXPECT(gbc.readMem(0xfb3e), 0x9a);
        // D7 030E
        gbc.setState(0x7860, 0x8799, 0xd2f0, 0x9dfa, 0xf987, 0x491d, 0x1, 0x1);
        gbc.writeMem(0x7860, { 0xd7 });
        gbc.writeMem(0x8797, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8797);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8797), 0x61);
        EXPECT(gbc.readMem(0x8798), 0x78);
        // D7 0310
        gbc.setState(0xa0da, 0xb8f2, 0xc770, 0xf8b4, 0x9b3c, 0x7adf, 0x1, 0x1);
        gbc.writeMem(0xa0da, { 0xd7 });
        gbc.writeMem(0xb8f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xb8f0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0da), 0xd7);
        EXPECT(gbc.readMem(0xb8f0), 0xdb);
        EXPECT(gbc.readMem(0xb8f1), 0xa0);
        // D7 0313
        gbc.setState(0xa616, 0xc1c0, 0xb200, 0x8d1b, 0x328b, 0xeb30, 0x1, 0x0);
        gbc.writeMem(0xa616, { 0xd7 });
        gbc.writeMem(0xc1be, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc1be);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa616), 0xd7);
        EXPECT(gbc.readMem(0xc1be), 0x17);
        EXPECT(gbc.readMem(0xc1bf), 0xa6);
        // D7 0315
        gbc.setState(0xde15, 0xb7b3, 0xca20, 0x5fc, 0xa8c2, 0x6875, 0x0, 0x1);
        gbc.writeMem(0xb7b1, { 0x0, 0x0 });
        gbc.writeMem(0xde15, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb7b1);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b1), 0x16);
        EXPECT(gbc.readMem(0xb7b2), 0xde);
        EXPECT(gbc.readMem(0xde15), 0xd7);
        // D7 0318
        gbc.setState(0xd64b, 0xf709, 0x2a70, 0x35e5, 0x1977, 0xeaa2, 0x1, 0x1);
        gbc.writeMem(0xd64b, { 0xd7 });
        gbc.writeMem(0xf707, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf707);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd64b), 0xd7);
        EXPECT(gbc.readMem(0xf707), 0x4c);
        EXPECT(gbc.readMem(0xf708), 0xd6);
        // D7 0319
        gbc.setState(0x85e0, 0x9498, 0xffb0, 0x9820, 0x5183, 0xca12, 0x0, 0x1);
        gbc.writeMem(0x85e0, { 0xd7 });
        gbc.writeMem(0x9496, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9496);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85e0), 0xd7);
        EXPECT(gbc.readMem(0x9496), 0xe1);
        EXPECT(gbc.readMem(0x9497), 0x85);
        // D7 031C
        gbc.setState(0x6fb6, 0xb539, 0x8360, 0xf2e4, 0x95ef, 0xfa93, 0x1, 0x0);
        gbc.writeMem(0x6fb6, { 0xd7 });
        gbc.writeMem(0xb537, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb537);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb537), 0xb7);
        EXPECT(gbc.readMem(0xb538), 0x6f);
        // D7 031E
        gbc.setState(0xec97, 0xb4f0, 0x7920, 0xac79, 0x1753, 0xb3f8, 0x0, 0x0);
        gbc.writeMem(0xb4ee, { 0x0, 0x0 });
        gbc.writeMem(0xec97, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb4ee);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ee), 0x98);
        EXPECT(gbc.readMem(0xb4ef), 0xec);
        EXPECT(gbc.readMem(0xec97), 0xd7);
        // D7 031F
        gbc.setState(0x628, 0xd098, 0x85b0, 0x352e, 0xed63, 0x169c, 0x1, 0x0);
        gbc.writeMem(0x628, { 0xd7 });
        gbc.writeMem(0xd096, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd096);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd096), 0x29);
        EXPECT(gbc.readMem(0xd097), 0x6);
        // D7 0321
        gbc.setState(0x1217, 0x85c5, 0xefc0, 0x3307, 0xa0d7, 0xf185, 0x1, 0x0);
        gbc.writeMem(0x1217, { 0xd7 });
        gbc.writeMem(0x85c3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x85c3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c3), 0x18);
        EXPECT(gbc.readMem(0x85c4), 0x12);
        // D7 0326
        gbc.setState(0x2a7, 0xd09d, 0x6e0, 0xd871, 0x8e7f, 0x51ad, 0x1, 0x0);
        gbc.writeMem(0x2a7, { 0xd7 });
        gbc.writeMem(0xd09b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd09b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd09b), 0xa8);
        EXPECT(gbc.readMem(0xd09c), 0x2);
        // D7 0327
        gbc.setState(0x63a8, 0xe3ac, 0x5640, 0xf9aa, 0x3adc, 0xbe7b, 0x1, 0x1);
        gbc.writeMem(0x63a8, { 0xd7 });
        gbc.writeMem(0xe3aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe3aa);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3aa), 0xa9);
        EXPECT(gbc.readMem(0xe3ab), 0x63);
        // D7 0328
        gbc.setState(0xd389, 0x9d73, 0x32a0, 0x4a35, 0xdc17, 0x3951, 0x1, 0x0);
        gbc.writeMem(0x9d71, { 0x0, 0x0 });
        gbc.writeMem(0xd389, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9d71);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d71), 0x8a);
        EXPECT(gbc.readMem(0x9d72), 0xd3);
        EXPECT(gbc.readMem(0xd389), 0xd7);
        // D7 0329
        gbc.setState(0x69f1, 0xef4f, 0x5580, 0x9fa1, 0x7e15, 0x5633, 0x1, 0x1);
        gbc.writeMem(0x69f1, { 0xd7 });
        gbc.writeMem(0xef4d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xef4d);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4d), 0xf2);
        EXPECT(gbc.readMem(0xef4e), 0x69);
        // D7 032A
        gbc.setState(0xd41a, 0xb255, 0xfcf0, 0x8888, 0xc762, 0xe842, 0x0, 0x0);
        gbc.writeMem(0xb253, { 0x0, 0x0 });
        gbc.writeMem(0xd41a, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb253);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb253), 0x1b);
        EXPECT(gbc.readMem(0xb254), 0xd4);
        EXPECT(gbc.readMem(0xd41a), 0xd7);
        // D7 032E
        gbc.setState(0xedaf, 0x8da5, 0x3e10, 0x1fb0, 0x8e42, 0x74b7, 0x0, 0x1);
        gbc.writeMem(0x8da3, { 0x0, 0x0 });
        gbc.writeMem(0xedaf, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8da3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da3), 0xb0);
        EXPECT(gbc.readMem(0x8da4), 0xed);
        EXPECT(gbc.readMem(0xedaf), 0xd7);
        // D7 0331
        gbc.setState(0xd3d, 0xd09b, 0xfd30, 0xd31c, 0xfaca, 0xc780, 0x0, 0x0);
        gbc.writeMem(0xd3d, { 0xd7 });
        gbc.writeMem(0xd099, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd099);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd099), 0x3e);
        EXPECT(gbc.readMem(0xd09a), 0xd);
        // D7 0332
        gbc.setState(0x5b48, 0xf655, 0xb90, 0x7786, 0x9ec5, 0x5530, 0x1, 0x1);
        gbc.writeMem(0x5b48, { 0xd7 });
        gbc.writeMem(0xf653, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf653);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf653), 0x49);
        EXPECT(gbc.readMem(0xf654), 0x5b);
        // D7 0334
        gbc.setState(0xc41c, 0x9483, 0xa400, 0xf610, 0x3210, 0x34f9, 0x0, 0x0);
        gbc.writeMem(0x9481, { 0x0, 0x0 });
        gbc.writeMem(0xc41c, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9481);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9481), 0x1d);
        EXPECT(gbc.readMem(0x9482), 0xc4);
        EXPECT(gbc.readMem(0xc41c), 0xd7);
        // D7 0337
        gbc.setState(0x2998, 0xe607, 0xbcc0, 0xf316, 0x421d, 0x7cb5, 0x1, 0x0);
        gbc.writeMem(0x2998, { 0xd7 });
        gbc.writeMem(0xe605, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xe605);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe605), 0x99);
        EXPECT(gbc.readMem(0xe606), 0x29);
        // D7 033A
        gbc.setState(0xc999, 0xb631, 0x41c0, 0xd4f2, 0x44ab, 0x34e4, 0x1, 0x1);
        gbc.writeMem(0xb62f, { 0x0, 0x0 });
        gbc.writeMem(0xc999, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb62f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb62f), 0x9a);
        EXPECT(gbc.readMem(0xb630), 0xc9);
        EXPECT(gbc.readMem(0xc999), 0xd7);
        // D7 033B
        gbc.setState(0xb947, 0xb93c, 0x3310, 0x9612, 0xd13, 0x1c4b, 0x0, 0x0);
        gbc.writeMem(0xb93a, { 0x0, 0x0 });
        gbc.writeMem(0xb947, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb93a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93a), 0x48);
        EXPECT(gbc.readMem(0xb93b), 0xb9);
        EXPECT(gbc.readMem(0xb947), 0xd7);
        // D7 033C
        gbc.setState(0x45a7, 0xb1e7, 0xfb60, 0x7485, 0x79cd, 0x643f, 0x0, 0x1);
        gbc.writeMem(0x45a7, { 0xd7 });
        gbc.writeMem(0xb1e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb1e5);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1e5), 0xa8);
        EXPECT(gbc.readMem(0xb1e6), 0x45);
        // D7 033E
        gbc.setState(0xc820, 0xb106, 0x5170, 0x7e11, 0xafb3, 0x6c2f, 0x0, 0x1);
        gbc.writeMem(0xb104, { 0x0, 0x0 });
        gbc.writeMem(0xc820, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb104);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb104), 0x21);
        EXPECT(gbc.readMem(0xb105), 0xc8);
        EXPECT(gbc.readMem(0xc820), 0xd7);
        // D7 033F
        gbc.setState(0x9a66, 0xe718, 0xf210, 0xa35b, 0xf17c, 0x59ea, 0x1, 0x1);
        gbc.writeMem(0x9a66, { 0xd7 });
        gbc.writeMem(0xe716, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe716);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a66), 0xd7);
        EXPECT(gbc.readMem(0xe716), 0x67);
        EXPECT(gbc.readMem(0xe717), 0x9a);
        // D7 0341
        gbc.setState(0x6f54, 0x9dc7, 0xcf30, 0xdb7b, 0x516e, 0xae63, 0x1, 0x1);
        gbc.writeMem(0x6f54, { 0xd7 });
        gbc.writeMem(0x9dc5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9dc5);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc5), 0x55);
        EXPECT(gbc.readMem(0x9dc6), 0x6f);
        // D7 0342
        gbc.setState(0xe555, 0xe8f5, 0x5170, 0x66f3, 0x8031, 0x616d, 0x0, 0x0);
        gbc.writeMem(0xe555, { 0xd7 });
        gbc.writeMem(0xe8f3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe8f3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe555), 0xd7);
        EXPECT(gbc.readMem(0xe8f3), 0x56);
        EXPECT(gbc.readMem(0xe8f4), 0xe5);
        // D7 0344
        gbc.setState(0x32ae, 0xb9d3, 0x8fd0, 0x4dad, 0xe768, 0x7db, 0x0, 0x1);
        gbc.writeMem(0x32ae, { 0xd7 });
        gbc.writeMem(0xb9d1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb9d1);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d1), 0xaf);
        EXPECT(gbc.readMem(0xb9d2), 0x32);
        // D7 0347
        gbc.setState(0xe770, 0xa15b, 0xb110, 0x9c09, 0x10aa, 0xa012, 0x0, 0x1);
        gbc.writeMem(0xa159, { 0x0, 0x0 });
        gbc.writeMem(0xe770, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa159);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa159), 0x71);
        EXPECT(gbc.readMem(0xa15a), 0xe7);
        EXPECT(gbc.readMem(0xe770), 0xd7);
        // D7 0348
        gbc.setState(0x6fab, 0xd9d4, 0xa220, 0xd197, 0x5f8e, 0x8bdb, 0x0, 0x1);
        gbc.writeMem(0x6fab, { 0xd7 });
        gbc.writeMem(0xd9d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd9d2);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d2), 0xac);
        EXPECT(gbc.readMem(0xd9d3), 0x6f);
        // D7 034A
        gbc.setState(0x9c7f, 0xec93, 0xbde0, 0x1c8d, 0x5a08, 0x60d9, 0x1, 0x0);
        gbc.writeMem(0x9c7f, { 0xd7 });
        gbc.writeMem(0xec91, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xec91);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c7f), 0xd7);
        EXPECT(gbc.readMem(0xec91), 0x80);
        EXPECT(gbc.readMem(0xec92), 0x9c);
        // D7 034C
        gbc.setState(0xa893, 0xcdbf, 0x6350, 0xb263, 0x7b05, 0x3185, 0x0, 0x0);
        gbc.writeMem(0xa893, { 0xd7 });
        gbc.writeMem(0xcdbd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcdbd);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa893), 0xd7);
        EXPECT(gbc.readMem(0xcdbd), 0x94);
        EXPECT(gbc.readMem(0xcdbe), 0xa8);
        // D7 0351
        gbc.setState(0x8968, 0xc943, 0x5a40, 0x8be5, 0xb1e, 0x47f3, 0x0, 0x0);
        gbc.writeMem(0x8968, { 0xd7 });
        gbc.writeMem(0xc941, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc941);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8968), 0xd7);
        EXPECT(gbc.readMem(0xc941), 0x69);
        EXPECT(gbc.readMem(0xc942), 0x89);
        // D7 0352
        gbc.setState(0x1f38, 0xb94c, 0x63d0, 0x4d88, 0xd307, 0x97b1, 0x1, 0x1);
        gbc.writeMem(0x1f38, { 0xd7 });
        gbc.writeMem(0xb94a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb94a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb94a), 0x39);
        EXPECT(gbc.readMem(0xb94b), 0x1f);
        // D7 0356
        gbc.setState(0xe316, 0xc4ed, 0x40, 0x77d8, 0x8905, 0x1dfa, 0x1, 0x0);
        gbc.writeMem(0xc4eb, { 0x0, 0x0 });
        gbc.writeMem(0xe316, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc4eb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4eb), 0x17);
        EXPECT(gbc.readMem(0xc4ec), 0xe3);
        EXPECT(gbc.readMem(0xe316), 0xd7);
        // D7 0358
        gbc.setState(0xc343, 0xb96d, 0xcc0, 0x8fc6, 0x615b, 0x78b4, 0x1, 0x0);
        gbc.writeMem(0xb96b, { 0x0, 0x0 });
        gbc.writeMem(0xc343, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb96b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb96b), 0x44);
        EXPECT(gbc.readMem(0xb96c), 0xc3);
        EXPECT(gbc.readMem(0xc343), 0xd7);
        // D7 0359
        gbc.setState(0x9303, 0xe03c, 0xec30, 0x57a9, 0x9c6f, 0xaebf, 0x1, 0x0);
        gbc.writeMem(0x9303, { 0xd7 });
        gbc.writeMem(0xe03a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe03a);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9303), 0xd7);
        EXPECT(gbc.readMem(0xe03a), 0x4);
        EXPECT(gbc.readMem(0xe03b), 0x93);
        // D7 035B
        gbc.setState(0xbb15, 0x8805, 0xb8c0, 0xca91, 0xedb, 0xe297, 0x0, 0x0);
        gbc.writeMem(0x8803, { 0x0, 0x0 });
        gbc.writeMem(0xbb15, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8803);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8803), 0x16);
        EXPECT(gbc.readMem(0x8804), 0xbb);
        EXPECT(gbc.readMem(0xbb15), 0xd7);
        // D7 0362
        gbc.setState(0x7a48, 0xccda, 0x3210, 0x1e9e, 0xf36d, 0x4b14, 0x1, 0x0);
        gbc.writeMem(0x7a48, { 0xd7 });
        gbc.writeMem(0xccd8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xccd8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd8), 0x49);
        EXPECT(gbc.readMem(0xccd9), 0x7a);
        // D7 0363
        gbc.setState(0xa9ef, 0xb075, 0x1bf0, 0x2a93, 0x3144, 0xc57b, 0x0, 0x0);
        gbc.writeMem(0xa9ef, { 0xd7 });
        gbc.writeMem(0xb073, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb073);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ef), 0xd7);
        EXPECT(gbc.readMem(0xb073), 0xf0);
        EXPECT(gbc.readMem(0xb074), 0xa9);
        // D7 0369
        gbc.setState(0x10fe, 0x8fcb, 0x8660, 0xb3e8, 0x249b, 0x33f, 0x0, 0x0);
        gbc.writeMem(0x10fe, { 0xd7 });
        gbc.writeMem(0x8fc9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8fc9);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc9), 0xff);
        EXPECT(gbc.readMem(0x8fca), 0x10);
        // D7 036C
        gbc.setState(0xa0c, 0xebb3, 0x2bc0, 0xe264, 0x7c67, 0xf058, 0x1, 0x0);
        gbc.writeMem(0xa0c, { 0xd7 });
        gbc.writeMem(0xebb1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xebb1);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebb1), 0xd);
        EXPECT(gbc.readMem(0xebb2), 0xa);
        // D7 036E
        gbc.setState(0x10dd, 0xb8f2, 0x2200, 0xfb1d, 0xa6b0, 0x5ca0, 0x1, 0x0);
        gbc.writeMem(0x10dd, { 0xd7 });
        gbc.writeMem(0xb8f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb8f0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f0), 0xde);
        EXPECT(gbc.readMem(0xb8f1), 0x10);
        // D7 036F
        gbc.setState(0x5105, 0xdc05, 0x6ba0, 0xb13f, 0x35b7, 0x1ad2, 0x0, 0x0);
        gbc.writeMem(0x5105, { 0xd7 });
        gbc.writeMem(0xdc03, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xdc03);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc03), 0x6);
        EXPECT(gbc.readMem(0xdc04), 0x51);
        // D7 0375
        gbc.setState(0x4658, 0xaba3, 0x1e50, 0x51e, 0xdb37, 0xbe3f, 0x1, 0x1);
        gbc.writeMem(0x4658, { 0xd7 });
        gbc.writeMem(0xaba1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xaba1);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba1), 0x59);
        EXPECT(gbc.readMem(0xaba2), 0x46);
        // D7 037A
        gbc.setState(0xad6f, 0xf5f8, 0xfd70, 0x2fc, 0x8511, 0x1e7d, 0x0, 0x1);
        gbc.writeMem(0xad6f, { 0xd7 });
        gbc.writeMem(0xf5f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf5f6);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6f), 0xd7);
        EXPECT(gbc.readMem(0xf5f6), 0x70);
        EXPECT(gbc.readMem(0xf5f7), 0xad);
        // D7 037D
        gbc.setState(0x5763, 0xffc5, 0x5e30, 0xe858, 0x6ec6, 0x3671, 0x1, 0x0);
        gbc.writeMem(0x5763, { 0xd7 });
        gbc.writeMem(0xffc3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xffc3);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffc3), 0x64);
        EXPECT(gbc.readMem(0xffc4), 0x57);
        // D7 037E
        gbc.setState(0x5f46, 0xbe46, 0x6ff0, 0x373a, 0x22aa, 0x2be9, 0x0, 0x0);
        gbc.writeMem(0x5f46, { 0xd7 });
        gbc.writeMem(0xbe44, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbe44);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe44), 0x47);
        EXPECT(gbc.readMem(0xbe45), 0x5f);
        // D7 0381
        gbc.setState(0x8afe, 0xd652, 0x27d0, 0x94ed, 0x226e, 0xd53e, 0x0, 0x0);
        gbc.writeMem(0x8afe, { 0xd7 });
        gbc.writeMem(0xd650, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd650);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8afe), 0xd7);
        EXPECT(gbc.readMem(0xd650), 0xff);
        EXPECT(gbc.readMem(0xd651), 0x8a);
        // D7 0382
        gbc.setState(0x5535, 0xa5e1, 0x3df0, 0x344f, 0x8be6, 0x9bd7, 0x1, 0x1);
        gbc.writeMem(0x5535, { 0xd7 });
        gbc.writeMem(0xa5df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa5df);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5df), 0x36);
        EXPECT(gbc.readMem(0xa5e0), 0x55);
        // D7 0383
        gbc.setState(0x7647, 0x9ed2, 0xd930, 0x7525, 0x4ecc, 0x471b, 0x1, 0x0);
        gbc.writeMem(0x7647, { 0xd7 });
        gbc.writeMem(0x9ed0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9ed0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ed0), 0x48);
        EXPECT(gbc.readMem(0x9ed1), 0x76);
        // D7 0386
        gbc.setState(0xeec5, 0xec38, 0xba0, 0xfd2c, 0x2977, 0xd88f, 0x1, 0x1);
        gbc.writeMem(0xec36, { 0x0, 0x0 });
        gbc.writeMem(0xeec5, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xec36);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec36), 0xc6);
        EXPECT(gbc.readMem(0xec37), 0xee);
        EXPECT(gbc.readMem(0xeec5), 0xd7);
        // D7 0387
        gbc.setState(0x2601, 0xf103, 0x1850, 0x90fc, 0xaab5, 0xec79, 0x0, 0x1);
        gbc.writeMem(0x2601, { 0xd7 });
        gbc.writeMem(0xf101, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf101);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf101), 0x2);
        EXPECT(gbc.readMem(0xf102), 0x26);
        // D7 038B
        gbc.setState(0x1ee7, 0x95ae, 0xf1d0, 0x6abc, 0xf733, 0x2c2b, 0x1, 0x0);
        gbc.writeMem(0x1ee7, { 0xd7 });
        gbc.writeMem(0x95ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x95ac);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ac), 0xe8);
        EXPECT(gbc.readMem(0x95ad), 0x1e);
        // D7 038D
        gbc.setState(0x2e90, 0xddde, 0xedb0, 0xc78c, 0x86ef, 0x592, 0x0, 0x1);
        gbc.writeMem(0x2e90, { 0xd7 });
        gbc.writeMem(0xdddc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xdddc);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdddc), 0x91);
        EXPECT(gbc.readMem(0xdddd), 0x2e);
        // D7 038E
        gbc.setState(0xb718, 0x904d, 0x9dd0, 0x4919, 0x4f02, 0x54, 0x0, 0x1);
        gbc.writeMem(0x904b, { 0x0, 0x0 });
        gbc.writeMem(0xb718, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x904b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x904b), 0x19);
        EXPECT(gbc.readMem(0x904c), 0xb7);
        EXPECT(gbc.readMem(0xb718), 0xd7);
        // D7 0391
        gbc.setState(0xa579, 0x9dee, 0x6390, 0x29d7, 0x5ab5, 0xee52, 0x0, 0x0);
        gbc.writeMem(0x9dec, { 0x0, 0x0 });
        gbc.writeMem(0xa579, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9dec);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dec), 0x7a);
        EXPECT(gbc.readMem(0x9ded), 0xa5);
        EXPECT(gbc.readMem(0xa579), 0xd7);
        // D7 0392
        gbc.setState(0x5254, 0xb6ed, 0xaec0, 0xfec5, 0xc426, 0x3f44, 0x1, 0x0);
        gbc.writeMem(0x5254, { 0xd7 });
        gbc.writeMem(0xb6eb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb6eb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6eb), 0x55);
        EXPECT(gbc.readMem(0xb6ec), 0x52);
        // D7 0396
        gbc.setState(0x8750, 0x83fd, 0x5260, 0xa7c2, 0x16af, 0x1d3b, 0x1, 0x0);
        gbc.writeMem(0x83fb, { 0x0, 0x0 });
        gbc.writeMem(0x8750, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x83fb);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83fb), 0x51);
        EXPECT(gbc.readMem(0x83fc), 0x87);
        EXPECT(gbc.readMem(0x8750), 0xd7);
        // D7 039A
        gbc.setState(0x7c85, 0xedfe, 0x8e80, 0x37d, 0xd0c2, 0x3ad8, 0x1, 0x1);
        gbc.writeMem(0x7c85, { 0xd7 });
        gbc.writeMem(0xedfc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xedfc);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedfc), 0x86);
        EXPECT(gbc.readMem(0xedfd), 0x7c);
        // D7 039B
        gbc.setState(0xc2c1, 0xabc2, 0xb150, 0x9483, 0x70ed, 0x37be, 0x0, 0x0);
        gbc.writeMem(0xabc0, { 0x0, 0x0 });
        gbc.writeMem(0xc2c1, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xabc0);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc0), 0xc2);
        EXPECT(gbc.readMem(0xabc1), 0xc2);
        EXPECT(gbc.readMem(0xc2c1), 0xd7);
        // D7 039C
        gbc.setState(0xd30b, 0xfddf, 0x4b70, 0xe5e0, 0x89e6, 0x5a86, 0x0, 0x0);
        gbc.writeMem(0xd30b, { 0xd7 });
        gbc.writeMem(0xfddd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xfddd);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd30b), 0xd7);
        EXPECT(gbc.readMem(0xfddd), 0xc);
        EXPECT(gbc.readMem(0xfdde), 0xd3);
        // D7 039D
        gbc.setState(0xb148, 0x8784, 0x6ac0, 0x5145, 0x604c, 0x35c4, 0x1, 0x0);
        gbc.writeMem(0x8782, { 0x0, 0x0 });
        gbc.writeMem(0xb148, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8782);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8782), 0x49);
        EXPECT(gbc.readMem(0x8783), 0xb1);
        EXPECT(gbc.readMem(0xb148), 0xd7);
        // D7 039E
        gbc.setState(0xe039, 0x98ab, 0xd1b0, 0x1bcf, 0x54bf, 0x24d9, 0x1, 0x0);
        gbc.writeMem(0x98a9, { 0x0, 0x0 });
        gbc.writeMem(0xe039, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x98a9);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98a9), 0x3a);
        EXPECT(gbc.readMem(0x98aa), 0xe0);
        EXPECT(gbc.readMem(0xe039), 0xd7);
        // D7 03A0
        gbc.setState(0xc5ab, 0xa2c6, 0x2840, 0xb3af, 0x4de5, 0xf0ef, 0x1, 0x0);
        gbc.writeMem(0xa2c4, { 0x0, 0x0 });
        gbc.writeMem(0xc5ab, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa2c4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c4), 0xac);
        EXPECT(gbc.readMem(0xa2c5), 0xc5);
        EXPECT(gbc.readMem(0xc5ab), 0xd7);
        // D7 03A1
        gbc.setState(0x6b66, 0x9dc6, 0x5770, 0x82a1, 0x4f4a, 0x202e, 0x1, 0x1);
        gbc.writeMem(0x6b66, { 0xd7 });
        gbc.writeMem(0x9dc4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9dc4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc4), 0x67);
        EXPECT(gbc.readMem(0x9dc5), 0x6b);
        // D7 03A3
        gbc.setState(0xa737, 0xbf39, 0xb0c0, 0xa259, 0x42bb, 0x327b, 0x0, 0x1);
        gbc.writeMem(0xa737, { 0xd7 });
        gbc.writeMem(0xbf37, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbf37);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa737), 0xd7);
        EXPECT(gbc.readMem(0xbf37), 0x38);
        EXPECT(gbc.readMem(0xbf38), 0xa7);
        // D7 03A5
        gbc.setState(0x3441, 0xcde3, 0xafa0, 0xcd52, 0x1c36, 0x2cf1, 0x1, 0x1);
        gbc.writeMem(0x3441, { 0xd7 });
        gbc.writeMem(0xcde1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcde1);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcde1), 0x42);
        EXPECT(gbc.readMem(0xcde2), 0x34);
        // D7 03A6
        gbc.setState(0xcc37, 0xa1c1, 0xbcf0, 0xddd7, 0x8511, 0xe8db, 0x1, 0x1);
        gbc.writeMem(0xa1bf, { 0x0, 0x0 });
        gbc.writeMem(0xcc37, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa1bf);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1bf), 0x38);
        EXPECT(gbc.readMem(0xa1c0), 0xcc);
        EXPECT(gbc.readMem(0xcc37), 0xd7);
        // D7 03AA
        gbc.setState(0x6f20, 0xe94e, 0x3c70, 0x6dd7, 0xfb2, 0xa23f, 0x0, 0x0);
        gbc.writeMem(0x6f20, { 0xd7 });
        gbc.writeMem(0xe94c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe94c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe94c), 0x21);
        EXPECT(gbc.readMem(0xe94d), 0x6f);
        // D7 03AB
        gbc.setState(0x13ae, 0x882d, 0xe5e0, 0x6592, 0xd68, 0xa294, 0x1, 0x0);
        gbc.writeMem(0x13ae, { 0xd7 });
        gbc.writeMem(0x882b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x882b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882b), 0xaf);
        EXPECT(gbc.readMem(0x882c), 0x13);
        // D7 03AE
        gbc.setState(0x20e3, 0xfe02, 0x5a80, 0xd3e5, 0xdfba, 0x974a, 0x0, 0x0);
        gbc.writeMem(0x20e3, { 0xd7 });
        gbc.writeMem(0xfe00, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfe00);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe00), 0xe4);
        EXPECT(gbc.readMem(0xfe01), 0x20);
        // D7 03B0
        gbc.setState(0x41aa, 0x974a, 0x4740, 0x278c, 0x4d97, 0xc311, 0x0, 0x0);
        gbc.writeMem(0x41aa, { 0xd7 });
        gbc.writeMem(0x9748, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9748);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9748), 0xab);
        EXPECT(gbc.readMem(0x9749), 0x41);
        // D7 03B2
        gbc.setState(0x91ca, 0x90bf, 0xed70, 0xf221, 0xa9aa, 0x8d6f, 0x0, 0x0);
        gbc.writeMem(0x90bd, { 0x0, 0x0 });
        gbc.writeMem(0x91ca, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x90bd);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90bd), 0xcb);
        EXPECT(gbc.readMem(0x90be), 0x91);
        EXPECT(gbc.readMem(0x91ca), 0xd7);
        // D7 03B5
        gbc.setState(0x9b72, 0xfe99, 0xc0, 0x3e64, 0xc2cf, 0x967e, 0x0, 0x0);
        gbc.writeMem(0x9b72, { 0xd7 });
        gbc.writeMem(0xfe97, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfe97);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b72), 0xd7);
        EXPECT(gbc.readMem(0xfe97), 0x73);
        EXPECT(gbc.readMem(0xfe98), 0x9b);
        // D7 03BA
        gbc.setState(0x9a89, 0xffa9, 0xd780, 0x6105, 0x9eff, 0xb676, 0x1, 0x0);
        gbc.writeMem(0x9a89, { 0xd7 });
        gbc.writeMem(0xffa7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xffa7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a89), 0xd7);
        EXPECT(gbc.readMem(0xffa7), 0x8a);
        EXPECT(gbc.readMem(0xffa8), 0x9a);
        // D7 03BC
        gbc.setState(0x7602, 0xcba3, 0x1f90, 0xf3e2, 0x1559, 0x7ee9, 0x0, 0x0);
        gbc.writeMem(0x7602, { 0xd7 });
        gbc.writeMem(0xcba1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcba1);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba1), 0x3);
        EXPECT(gbc.readMem(0xcba2), 0x76);
        // D7 03BD
        gbc.setState(0xa252, 0xccc8, 0xb8b0, 0x2d49, 0x927c, 0x1d77, 0x0, 0x1);
        gbc.writeMem(0xa252, { 0xd7 });
        gbc.writeMem(0xccc6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xccc6);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa252), 0xd7);
        EXPECT(gbc.readMem(0xccc6), 0x53);
        EXPECT(gbc.readMem(0xccc7), 0xa2);
        // D7 03BE
        gbc.setState(0x20a, 0xb56a, 0x5860, 0x8052, 0x1570, 0x7acc, 0x0, 0x1);
        gbc.writeMem(0x20a, { 0xd7 });
        gbc.writeMem(0xb568, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb568);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb568), 0xb);
        EXPECT(gbc.readMem(0xb569), 0x2);
        // D7 03BF
        gbc.setState(0x8785, 0x8368, 0xe070, 0xb1a, 0xc1ea, 0x75, 0x0, 0x1);
        gbc.writeMem(0x8366, { 0x0, 0x0 });
        gbc.writeMem(0x8785, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8366);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8366), 0x86);
        EXPECT(gbc.readMem(0x8367), 0x87);
        EXPECT(gbc.readMem(0x8785), 0xd7);
        // D7 03C2
        gbc.setState(0x26e7, 0xf21b, 0xa690, 0x9a06, 0x271c, 0xf0f8, 0x1, 0x1);
        gbc.writeMem(0x26e7, { 0xd7 });
        gbc.writeMem(0xf219, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf219);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf219), 0xe8);
        EXPECT(gbc.readMem(0xf21a), 0x26);
        // D7 03C5
        gbc.setState(0xc4c5, 0xa392, 0xf370, 0xd65d, 0x8df8, 0xfed0, 0x0, 0x1);
        gbc.writeMem(0xa390, { 0x0, 0x0 });
        gbc.writeMem(0xc4c5, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa390);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa390), 0xc6);
        EXPECT(gbc.readMem(0xa391), 0xc4);
        EXPECT(gbc.readMem(0xc4c5), 0xd7);
        // D7 03C6
        gbc.setState(0x8fe8, 0x9cff, 0x2900, 0x297f, 0xb78a, 0xfa2e, 0x1, 0x0);
        gbc.writeMem(0x8fe8, { 0xd7 });
        gbc.writeMem(0x9cfd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9cfd);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe8), 0xd7);
        EXPECT(gbc.readMem(0x9cfd), 0xe9);
        EXPECT(gbc.readMem(0x9cfe), 0x8f);
        // D7 03C8
        gbc.setState(0x53e6, 0xded6, 0x32d0, 0x5ed5, 0x3496, 0x8144, 0x1, 0x1);
        gbc.writeMem(0x53e6, { 0xd7 });
        gbc.writeMem(0xded4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xded4);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded4), 0xe7);
        EXPECT(gbc.readMem(0xded5), 0x53);
        // D7 03C9
        gbc.setState(0xe255, 0xf45e, 0x6a50, 0x1868, 0x8be7, 0x23bb, 0x1, 0x0);
        gbc.writeMem(0xe255, { 0xd7 });
        gbc.writeMem(0xf45c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf45c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe255), 0xd7);
        EXPECT(gbc.readMem(0xf45c), 0x56);
        EXPECT(gbc.readMem(0xf45d), 0xe2);
        // D7 03CA
        gbc.setState(0x6788, 0xc685, 0x75f0, 0x4ce5, 0xe7c, 0x96a6, 0x0, 0x0);
        gbc.writeMem(0x6788, { 0xd7 });
        gbc.writeMem(0xc683, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc683);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc683), 0x89);
        EXPECT(gbc.readMem(0xc684), 0x67);
        // D7 03CB
        gbc.setState(0x5feb, 0x8a68, 0x51f0, 0x159e, 0x4ac9, 0x338, 0x1, 0x1);
        gbc.writeMem(0x5feb, { 0xd7 });
        gbc.writeMem(0x8a66, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8a66);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a66), 0xec);
        EXPECT(gbc.readMem(0x8a67), 0x5f);
        // D7 03CD
        gbc.setState(0xa949, 0x8022, 0x9390, 0x70e, 0x7525, 0xace7, 0x1, 0x1);
        gbc.writeMem(0x8020, { 0x0, 0x0 });
        gbc.writeMem(0xa949, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8020);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8020), 0x4a);
        EXPECT(gbc.readMem(0x8021), 0xa9);
        EXPECT(gbc.readMem(0xa949), 0xd7);
        // D7 03D3
        gbc.setState(0x880e, 0xda2d, 0xa580, 0xab58, 0x2c58, 0x5d22, 0x1, 0x1);
        gbc.writeMem(0x880e, { 0xd7 });
        gbc.writeMem(0xda2b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xda2b);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880e), 0xd7);
        EXPECT(gbc.readMem(0xda2b), 0xf);
        EXPECT(gbc.readMem(0xda2c), 0x88);
        // D7 03D5
        gbc.setState(0xed72, 0xd120, 0xdc0, 0xe3d9, 0x76d8, 0x91b2, 0x1, 0x1);
        gbc.writeMem(0xd11e, { 0x0, 0x0 });
        gbc.writeMem(0xed72, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd11e);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd11e), 0x73);
        EXPECT(gbc.readMem(0xd11f), 0xed);
        EXPECT(gbc.readMem(0xed72), 0xd7);
        // D7 03D6
        gbc.setState(0xa784, 0xbda1, 0xaa60, 0xf5b, 0x29d1, 0x2621, 0x0, 0x1);
        gbc.writeMem(0xa784, { 0xd7 });
        gbc.writeMem(0xbd9f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbd9f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa784), 0xd7);
        EXPECT(gbc.readMem(0xbd9f), 0x85);
        EXPECT(gbc.readMem(0xbda0), 0xa7);
        // D7 03DF
        gbc.setState(0xe88f, 0xf5d9, 0xb5c0, 0x9ffe, 0x804f, 0x40e, 0x1, 0x0);
        gbc.writeMem(0xe88f, { 0xd7 });
        gbc.writeMem(0xf5d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf5d7);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe88f), 0xd7);
        EXPECT(gbc.readMem(0xf5d7), 0x90);
        EXPECT(gbc.readMem(0xf5d8), 0xe8);
        // D7 03E0
        gbc.setState(0x4071, 0xd7ea, 0xb540, 0x564b, 0xaf79, 0x83e2, 0x0, 0x1);
        gbc.writeMem(0x4071, { 0xd7 });
        gbc.writeMem(0xd7e8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd7e8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e8), 0x72);
        EXPECT(gbc.readMem(0xd7e9), 0x40);
        // D7 03E3
        gbc.setState(0x2799, 0x978e, 0x9d80, 0x7c66, 0xfe11, 0x58ad, 0x0, 0x0);
        gbc.writeMem(0x2799, { 0xd7 });
        gbc.writeMem(0x978c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x978c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978c), 0x9a);
        EXPECT(gbc.readMem(0x978d), 0x27);
        // D7 03E4
        gbc.setState(0x68eb, 0xb0da, 0x2370, 0x4fae, 0xbe21, 0x93ab, 0x1, 0x1);
        gbc.writeMem(0x68eb, { 0xd7 });
        gbc.writeMem(0xb0d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb0d8);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d8), 0xec);
        EXPECT(gbc.readMem(0xb0d9), 0x68);
        // D7 03E6
        gbc.setState(0x665b, 0xa881, 0x7170, 0xcce, 0x6829, 0x79, 0x0, 0x0);
        gbc.writeMem(0x665b, { 0xd7 });
        gbc.writeMem(0xa87f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa87f);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa87f), 0x5c);
        EXPECT(gbc.readMem(0xa880), 0x66);
    }
}
#endif
