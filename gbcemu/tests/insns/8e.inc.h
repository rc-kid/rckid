    TEST(gbcemu, opcode_8e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 8E 0000
        gbc.setState(0x27e7, 0x9c5a, 0xc30, 0x59fa, 0x8, 0xc09e, 0x0, 0x1);
        gbc.writeMem(0x27e7, { 0x8e });
        gbc.writeMem(0xc09e, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9c5a);
        EXPECT(gbc.pc(), 0x27e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc09e), 0xf6);
        // 8E 0002
        gbc.setState(0x1b2f, 0xa565, 0x3070, 0x8e2e, 0x24b9, 0x9ea4, 0x0, 0x0);
        gbc.writeMem(0x1b2f, { 0x8e });
        gbc.writeMem(0x9ea4, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa565);
        EXPECT(gbc.pc(), 0x1b30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ea4), 0xb5);
        // 8E 0003
        gbc.setState(0x7f31, 0x3a, 0x9a70, 0x4827, 0xb260, 0xd81b, 0x1, 0x0);
        gbc.writeMem(0x7f31, { 0x8e });
        gbc.writeMem(0xd81b, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3a);
        EXPECT(gbc.pc(), 0x7f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd81b), 0x1);
        // 8E 0004
        gbc.setState(0x1bf2, 0x16a9, 0x53e0, 0x5954, 0x23c0, 0x36e8, 0x1, 0x0);
        gbc.writeMem(0x1bf2, { 0x8e });
        gbc.writeMem(0x36e8, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x16a9);
        EXPECT(gbc.pc(), 0x1bf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0005
        gbc.setState(0xa670, 0x9df2, 0x9c60, 0xf7c7, 0xfbdb, 0x54ac, 0x1, 0x1);
        gbc.writeMem(0x54ac, { 0xbc });
        gbc.writeMem(0xa670, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9df2);
        EXPECT(gbc.pc(), 0xa671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa670), 0x8e);
        // 8E 0006
        gbc.setState(0xcbf6, 0x90bd, 0x7de0, 0x54c1, 0xce18, 0xb6d2, 0x0, 0x1);
        gbc.writeMem(0xb6d2, { 0x36 });
        gbc.writeMem(0xcbf6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x90bd);
        EXPECT(gbc.pc(), 0xcbf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d2), 0x36);
        EXPECT(gbc.readMem(0xcbf6), 0x8e);
        // 8E 0007
        gbc.setState(0x819b, 0xef4d, 0xdda0, 0x9766, 0xa887, 0x3384, 0x0, 0x1);
        gbc.writeMem(0x3384, { 0x23 });
        gbc.writeMem(0x819b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xef4d);
        EXPECT(gbc.pc(), 0x819c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x819b), 0x8e);
        // 8E 0008
        gbc.setState(0x4749, 0xcbf1, 0x5710, 0x310d, 0x8907, 0x2acd, 0x0, 0x1);
        gbc.writeMem(0x2acd, { 0x20 });
        gbc.writeMem(0x4749, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xcbf1);
        EXPECT(gbc.pc(), 0x474a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0009
        gbc.setState(0x318a, 0xbce2, 0x2d60, 0xdb1b, 0xe10, 0x5533, 0x0, 0x1);
        gbc.writeMem(0x318a, { 0x8e });
        gbc.writeMem(0x5533, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbce2);
        EXPECT(gbc.pc(), 0x318b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 000A
        gbc.setState(0x9c98, 0x207e, 0xc820, 0x1cdc, 0xfa14, 0xe4db, 0x0, 0x1);
        gbc.writeMem(0x9c98, { 0x8e });
        gbc.writeMem(0xe4db, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x207e);
        EXPECT(gbc.pc(), 0x9c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c98), 0x8e);
        EXPECT(gbc.readMem(0xe4db), 0xaa);
        // 8E 000B
        gbc.setState(0x9b6a, 0xff5b, 0xf530, 0x291d, 0x331e, 0xb1cc, 0x1, 0x1);
        gbc.writeMem(0x9b6a, { 0x8e });
        gbc.writeMem(0xb1cc, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xff5b);
        EXPECT(gbc.pc(), 0x9b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6a), 0x8e);
        EXPECT(gbc.readMem(0xb1cc), 0xb1);
        // 8E 000C
        gbc.setState(0xc733, 0x1aa6, 0x6310, 0x3ce6, 0xb3f, 0x7eba, 0x1, 0x0);
        gbc.writeMem(0x7eba, { 0xde });
        gbc.writeMem(0xc733, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1aa6);
        EXPECT(gbc.pc(), 0xc734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc733), 0x8e);
        // 8E 000D
        gbc.setState(0x22e7, 0x7453, 0xd90, 0x20f7, 0x93ee, 0xb52f, 0x1, 0x0);
        gbc.writeMem(0x22e7, { 0x8e });
        gbc.writeMem(0xb52f, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7453);
        EXPECT(gbc.pc(), 0x22e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb52f), 0x77);
        // 8E 000E
        gbc.setState(0xa3d6, 0x4631, 0x430, 0x41d3, 0x28ca, 0x4395, 0x1, 0x1);
        gbc.writeMem(0x4395, { 0xb1 });
        gbc.writeMem(0xa3d6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4631);
        EXPECT(gbc.pc(), 0xa3d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d6), 0x8e);
        // 8E 000F
        gbc.setState(0xc1f, 0x7d66, 0x6210, 0xa368, 0xc07f, 0x50de, 0x1, 0x0);
        gbc.writeMem(0xc1f, { 0x8e });
        gbc.writeMem(0x50de, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7d66);
        EXPECT(gbc.pc(), 0xc20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0010
        gbc.setState(0x7f57, 0x9438, 0x2c10, 0x236, 0xdf42, 0xfcca, 0x0, 0x0);
        gbc.writeMem(0x7f57, { 0x8e });
        gbc.writeMem(0xfcca, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9438);
        EXPECT(gbc.pc(), 0x7f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfcca), 0xa9);
        // 8E 0011
        gbc.setState(0xa874, 0xff19, 0x8580, 0x7e9a, 0xa6cc, 0x4651, 0x0, 0x0);
        gbc.writeMem(0x4651, { 0x76 });
        gbc.writeMem(0xa874, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xff19);
        EXPECT(gbc.pc(), 0xa875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa874), 0x8e);
        // 8E 0012
        gbc.setState(0x9ca, 0x70fb, 0xeac0, 0xff69, 0x46a4, 0x2797, 0x0, 0x0);
        gbc.writeMem(0x9ca, { 0x8e });
        gbc.writeMem(0x2797, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x70fb);
        EXPECT(gbc.pc(), 0x9cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0013
        gbc.setState(0x1c4e, 0xa553, 0x1f70, 0x1881, 0xb3bb, 0xdc5c, 0x1, 0x0);
        gbc.writeMem(0x1c4e, { 0x8e });
        gbc.writeMem(0xdc5c, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa553);
        EXPECT(gbc.pc(), 0x1c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc5c), 0x46);
        // 8E 0014
        gbc.setState(0xe7a3, 0xdbb0, 0xe4f0, 0x6041, 0x4936, 0x64ad, 0x0, 0x0);
        gbc.writeMem(0x64ad, { 0x1 });
        gbc.writeMem(0xe7a3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xdbb0);
        EXPECT(gbc.pc(), 0xe7a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a3), 0x8e);
        // 8E 0015
        gbc.setState(0xb5ba, 0x2015, 0xba90, 0xfae6, 0x6612, 0x24ba, 0x0, 0x1);
        gbc.writeMem(0x24ba, { 0x4a });
        gbc.writeMem(0xb5ba, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2015);
        EXPECT(gbc.pc(), 0xb5bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ba), 0x8e);
        // 8E 0016
        gbc.setState(0x7353, 0xc8d2, 0xe4f0, 0x8951, 0x70fc, 0x66b8, 0x0, 0x0);
        gbc.writeMem(0x66b8, { 0xa0 });
        gbc.writeMem(0x7353, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc8d2);
        EXPECT(gbc.pc(), 0x7354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0017
        gbc.setState(0xdf42, 0xddc6, 0xe10, 0xf379, 0xd8ac, 0x5222, 0x1, 0x0);
        gbc.writeMem(0x5222, { 0x2c });
        gbc.writeMem(0xdf42, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xddc6);
        EXPECT(gbc.pc(), 0xdf43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf42), 0x8e);
        // 8E 0018
        gbc.setState(0xb676, 0xedb4, 0x34e0, 0xd56b, 0xbd3e, 0x851d, 0x1, 0x0);
        gbc.writeMem(0x851d, { 0xf6 });
        gbc.writeMem(0xb676, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xedb4);
        EXPECT(gbc.pc(), 0xb677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x851d), 0xf6);
        EXPECT(gbc.readMem(0xb676), 0x8e);
        // 8E 001A
        gbc.setState(0xe5a9, 0xa29c, 0xd790, 0x6c0a, 0xe972, 0xc128, 0x0, 0x1);
        gbc.writeMem(0xc128, { 0xa0 });
        gbc.writeMem(0xe5a9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa29c);
        EXPECT(gbc.pc(), 0xe5aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc128), 0xa0);
        EXPECT(gbc.readMem(0xe5a9), 0x8e);
        // 8E 001B
        gbc.setState(0x1e47, 0x6eb3, 0x77e0, 0x5312, 0x136d, 0x3730, 0x0, 0x1);
        gbc.writeMem(0x1e47, { 0x8e });
        gbc.writeMem(0x3730, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6eb3);
        EXPECT(gbc.pc(), 0x1e48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 001C
        gbc.setState(0x5550, 0x5170, 0x2c90, 0x882b, 0x2bb1, 0x4620, 0x0, 0x1);
        gbc.writeMem(0x4620, { 0xcd });
        gbc.writeMem(0x5550, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5170);
        EXPECT(gbc.pc(), 0x5551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 001D
        gbc.setState(0x8619, 0x1f44, 0x2bc0, 0xee16, 0x9dd3, 0x97d9, 0x0, 0x0);
        gbc.writeMem(0x8619, { 0x8e });
        gbc.writeMem(0x97d9, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1f44);
        EXPECT(gbc.pc(), 0x861a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8619), 0x8e);
        EXPECT(gbc.readMem(0x97d9), 0x9d);
        // 8E 001E
        gbc.setState(0x3020, 0x8316, 0x8860, 0xd36, 0xad0b, 0x22bb, 0x1, 0x0);
        gbc.writeMem(0x22bb, { 0x28 });
        gbc.writeMem(0x3020, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8316);
        EXPECT(gbc.pc(), 0x3021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 001F
        gbc.setState(0x146b, 0xa225, 0x2000, 0x120d, 0xcee9, 0xca6, 0x1, 0x0);
        gbc.writeMem(0xca6, { 0x68 });
        gbc.writeMem(0x146b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa225);
        EXPECT(gbc.pc(), 0x146c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0020
        gbc.setState(0x38c5, 0xf249, 0x3950, 0x831f, 0x7762, 0xf726, 0x0, 0x1);
        gbc.writeMem(0x38c5, { 0x8e });
        gbc.writeMem(0xf726, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf249);
        EXPECT(gbc.pc(), 0x38c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf726), 0x78);
        // 8E 0021
        gbc.setState(0xc20e, 0x38fd, 0xd830, 0xcc91, 0xbe10, 0x270a, 0x0, 0x1);
        gbc.writeMem(0x270a, { 0xb8 });
        gbc.writeMem(0xc20e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x38fd);
        EXPECT(gbc.pc(), 0xc20f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc20e), 0x8e);
        // 8E 0022
        gbc.setState(0x839e, 0xd8f2, 0x3190, 0x4480, 0x7644, 0xc4df, 0x1, 0x0);
        gbc.writeMem(0x839e, { 0x8e });
        gbc.writeMem(0xc4df, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd8f2);
        EXPECT(gbc.pc(), 0x839f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x839e), 0x8e);
        EXPECT(gbc.readMem(0xc4df), 0x78);
        // 8E 0023
        gbc.setState(0x8c99, 0x3dc1, 0xf0a0, 0x5fb0, 0xd80f, 0x142d, 0x0, 0x0);
        gbc.writeMem(0x142d, { 0xd5 });
        gbc.writeMem(0x8c99, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3dc1);
        EXPECT(gbc.pc(), 0x8c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c99), 0x8e);
        // 8E 0024
        gbc.setState(0xdae9, 0x5b21, 0xfc90, 0xc219, 0x2641, 0x1355, 0x0, 0x1);
        gbc.writeMem(0x1355, { 0x6d });
        gbc.writeMem(0xdae9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5b21);
        EXPECT(gbc.pc(), 0xdaea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae9), 0x8e);
        // 8E 0025
        gbc.setState(0xdc50, 0x58a9, 0x360, 0x5ceb, 0xa1d7, 0x725f, 0x0, 0x0);
        gbc.writeMem(0x725f, { 0x9e });
        gbc.writeMem(0xdc50, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x58a9);
        EXPECT(gbc.pc(), 0xdc51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc50), 0x8e);
        // 8E 0026
        gbc.setState(0xcacb, 0x5505, 0xe350, 0x4ce, 0x4b94, 0xb005, 0x0, 0x0);
        gbc.writeMem(0xb005, { 0x67 });
        gbc.writeMem(0xcacb, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5505);
        EXPECT(gbc.pc(), 0xcacc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb005), 0x67);
        EXPECT(gbc.readMem(0xcacb), 0x8e);
        // 8E 0027
        gbc.setState(0x4bfe, 0x3450, 0x5f10, 0x9008, 0x2ab3, 0xf667, 0x1, 0x1);
        gbc.writeMem(0x4bfe, { 0x8e });
        gbc.writeMem(0xf667, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3450);
        EXPECT(gbc.pc(), 0x4bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf667), 0x20);
        // 8E 0028
        gbc.setState(0x7365, 0x48f9, 0xabc0, 0x5e9d, 0xa7d1, 0x4cb3, 0x1, 0x1);
        gbc.writeMem(0x4cb3, { 0xfb });
        gbc.writeMem(0x7365, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x48f9);
        EXPECT(gbc.pc(), 0x7366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0029
        gbc.setState(0x596c, 0xebb5, 0xbc60, 0x96b4, 0xd029, 0x6f69, 0x0, 0x1);
        gbc.writeMem(0x596c, { 0x8e });
        gbc.writeMem(0x6f69, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xebb5);
        EXPECT(gbc.pc(), 0x596d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 002A
        gbc.setState(0x5e08, 0x547d, 0x3510, 0x78e1, 0x85ce, 0xd3f1, 0x1, 0x0);
        gbc.writeMem(0x5e08, { 0x8e });
        gbc.writeMem(0xd3f1, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x547d);
        EXPECT(gbc.pc(), 0x5e09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3f1), 0x66);
        // 8E 002B
        gbc.setState(0xabe2, 0x2d49, 0xcf80, 0xeac0, 0xfb54, 0xf7e9, 0x1, 0x1);
        gbc.writeMem(0xabe2, { 0x8e });
        gbc.writeMem(0xf7e9, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2d49);
        EXPECT(gbc.pc(), 0xabe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabe2), 0x8e);
        EXPECT(gbc.readMem(0xf7e9), 0x5c);
        // 8E 002C
        gbc.setState(0x876c, 0x76ef, 0x3ff0, 0x87cf, 0xdb7c, 0xbd82, 0x1, 0x0);
        gbc.writeMem(0x876c, { 0x8e });
        gbc.writeMem(0xbd82, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x76ef);
        EXPECT(gbc.pc(), 0x876d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876c), 0x8e);
        EXPECT(gbc.readMem(0xbd82), 0x3b);
        // 8E 002D
        gbc.setState(0x4da7, 0x2230, 0xb390, 0x365f, 0x139e, 0xc165, 0x0, 0x0);
        gbc.writeMem(0x4da7, { 0x8e });
        gbc.writeMem(0xc165, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2230);
        EXPECT(gbc.pc(), 0x4da8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc165), 0x69);
        // 8E 002E
        gbc.setState(0x9e82, 0xdfb8, 0xd6c0, 0x6b94, 0xc7b6, 0xc7f3, 0x1, 0x0);
        gbc.writeMem(0x9e82, { 0x8e });
        gbc.writeMem(0xc7f3, { 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xdfb8);
        EXPECT(gbc.pc(), 0x9e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e82), 0x8e);
        EXPECT(gbc.readMem(0xc7f3), 0xfc);
        // 8E 002F
        gbc.setState(0xffa, 0x583d, 0xf0f0, 0x7887, 0xa807, 0x838b, 0x0, 0x1);
        gbc.writeMem(0xffa, { 0x8e });
        gbc.writeMem(0x838b, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x583d);
        EXPECT(gbc.pc(), 0xffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838b), 0xf0);
        // 8E 0030
        gbc.setState(0x4dda, 0x97a7, 0xdae0, 0xb673, 0x217d, 0xee8, 0x1, 0x0);
        gbc.writeMem(0xee8, { 0x1f });
        gbc.writeMem(0x4dda, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x97a7);
        EXPECT(gbc.pc(), 0x4ddb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0032
        gbc.setState(0xcad0, 0xfeaa, 0x1b40, 0xba44, 0x71e, 0xe80a, 0x0, 0x0);
        gbc.writeMem(0xcad0, { 0x8e });
        gbc.writeMem(0xe80a, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xfeaa);
        EXPECT(gbc.pc(), 0xcad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcad0), 0x8e);
        EXPECT(gbc.readMem(0xe80a), 0xc7);
        // 8E 0033
        gbc.setState(0x4ae3, 0x4a62, 0x6f30, 0x4c12, 0xb4b2, 0xd320, 0x1, 0x1);
        gbc.writeMem(0x4ae3, { 0x8e });
        gbc.writeMem(0xd320, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4a62);
        EXPECT(gbc.pc(), 0x4ae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd320), 0xa);
        // 8E 0034
        gbc.setState(0xbb4a, 0xd76, 0x4b20, 0xca12, 0xc894, 0x36e9, 0x1, 0x1);
        gbc.writeMem(0x36e9, { 0xf9 });
        gbc.writeMem(0xbb4a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd76);
        EXPECT(gbc.pc(), 0xbb4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb4a), 0x8e);
        // 8E 0035
        gbc.setState(0x76d4, 0x7555, 0x39a0, 0x751d, 0xf4c9, 0x889, 0x1, 0x1);
        gbc.writeMem(0x889, { 0x36 });
        gbc.writeMem(0x76d4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7555);
        EXPECT(gbc.pc(), 0x76d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0036
        gbc.setState(0x22f1, 0xa3f8, 0x5e70, 0x63d8, 0xad4, 0xa830, 0x0, 0x1);
        gbc.writeMem(0x22f1, { 0x8e });
        gbc.writeMem(0xa830, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa3f8);
        EXPECT(gbc.pc(), 0x22f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa830), 0xa7);
        // 8E 0037
        gbc.setState(0x1fe3, 0x54f7, 0x2d90, 0x603a, 0x2d81, 0xf15b, 0x0, 0x1);
        gbc.writeMem(0x1fe3, { 0x8e });
        gbc.writeMem(0xf15b, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x54f7);
        EXPECT(gbc.pc(), 0x1fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf15b), 0xb7);
        // 8E 0039
        gbc.setState(0x156e, 0x6c6c, 0x2600, 0xbe8f, 0x161, 0x38d3, 0x0, 0x1);
        gbc.writeMem(0x156e, { 0x8e });
        gbc.writeMem(0x38d3, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6c6c);
        EXPECT(gbc.pc(), 0x156f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 003A
        gbc.setState(0xd2d8, 0xaf56, 0x40, 0xd024, 0x99b0, 0xb5c0, 0x1, 0x1);
        gbc.writeMem(0xb5c0, { 0x94 });
        gbc.writeMem(0xd2d8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xaf56);
        EXPECT(gbc.pc(), 0xd2d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c0), 0x94);
        EXPECT(gbc.readMem(0xd2d8), 0x8e);
        // 8E 003B
        gbc.setState(0x6b96, 0xa692, 0xab90, 0x8def, 0x4191, 0x703f, 0x1, 0x1);
        gbc.writeMem(0x6b96, { 0x8e });
        gbc.writeMem(0x703f, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa692);
        EXPECT(gbc.pc(), 0x6b97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 003C
        gbc.setState(0x62bf, 0x541f, 0x2af0, 0x657, 0x17ce, 0x1bf8, 0x1, 0x0);
        gbc.writeMem(0x1bf8, { 0x47 });
        gbc.writeMem(0x62bf, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x541f);
        EXPECT(gbc.pc(), 0x62c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 003D
        gbc.setState(0xca06, 0xc454, 0x22c0, 0x2993, 0x3ad8, 0x9f01, 0x1, 0x1);
        gbc.writeMem(0x9f01, { 0xb2 });
        gbc.writeMem(0xca06, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc454);
        EXPECT(gbc.pc(), 0xca07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f01), 0xb2);
        EXPECT(gbc.readMem(0xca06), 0x8e);
        // 8E 003E
        gbc.setState(0xa219, 0x16e2, 0xcc30, 0xe282, 0xd540, 0xca88, 0x1, 0x1);
        gbc.writeMem(0xa219, { 0x8e });
        gbc.writeMem(0xca88, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x16e2);
        EXPECT(gbc.pc(), 0xa21a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa219), 0x8e);
        EXPECT(gbc.readMem(0xca88), 0xb7);
        // 8E 003F
        gbc.setState(0x2d86, 0x37c1, 0x7580, 0x4926, 0xe305, 0xe1fc, 0x1, 0x1);
        gbc.writeMem(0x2d86, { 0x8e });
        gbc.writeMem(0xe1fc, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x37c1);
        EXPECT(gbc.pc(), 0x2d87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1fc), 0x75);
        // 8E 0040
        gbc.setState(0x4af, 0x96b1, 0xa0f0, 0x6163, 0x9a87, 0x12cc, 0x1, 0x0);
        gbc.writeMem(0x4af, { 0x8e });
        gbc.writeMem(0x12cc, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x96b1);
        EXPECT(gbc.pc(), 0x4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0041
        gbc.setState(0xdc1e, 0x3580, 0x2500, 0xd22f, 0x725d, 0x45c1, 0x1, 0x1);
        gbc.writeMem(0x45c1, { 0xf2 });
        gbc.writeMem(0xdc1e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3580);
        EXPECT(gbc.pc(), 0xdc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc1e), 0x8e);
        // 8E 0042
        gbc.setState(0xd670, 0xda4, 0xf480, 0x5fd, 0xf8c6, 0x6eab, 0x1, 0x0);
        gbc.writeMem(0x6eab, { 0xa9 });
        gbc.writeMem(0xd670, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xda4);
        EXPECT(gbc.pc(), 0xd671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd670), 0x8e);
        // 8E 0043
        gbc.setState(0x44a5, 0x4cdb, 0x41e0, 0x94b4, 0x93b8, 0xd88c, 0x1, 0x1);
        gbc.writeMem(0x44a5, { 0x8e });
        gbc.writeMem(0xd88c, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4cdb);
        EXPECT(gbc.pc(), 0x44a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88c), 0x8f);
        // 8E 0044
        gbc.setState(0xe79a, 0x1880, 0xee70, 0x32df, 0xef10, 0x293a, 0x0, 0x1);
        gbc.writeMem(0x293a, { 0xcf });
        gbc.writeMem(0xe79a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1880);
        EXPECT(gbc.pc(), 0xe79b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe79a), 0x8e);
        // 8E 0045
        gbc.setState(0x84c9, 0x5c52, 0xd490, 0xec0e, 0xf8ea, 0x7117, 0x0, 0x1);
        gbc.writeMem(0x7117, { 0x56 });
        gbc.writeMem(0x84c9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5c52);
        EXPECT(gbc.pc(), 0x84ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c9), 0x8e);
        // 8E 0046
        gbc.setState(0xdee, 0x4766, 0x6f10, 0xb8a, 0x1f8b, 0x8727, 0x1, 0x1);
        gbc.writeMem(0xdee, { 0x8e });
        gbc.writeMem(0x8727, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4766);
        EXPECT(gbc.pc(), 0xdef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8727), 0x11);
        // 8E 0047
        gbc.setState(0x9980, 0x6d47, 0xb010, 0xd15d, 0x8c9d, 0x96ce, 0x1, 0x1);
        gbc.writeMem(0x96ce, { 0x27 });
        gbc.writeMem(0x9980, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6d47);
        EXPECT(gbc.pc(), 0x9981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ce), 0x27);
        EXPECT(gbc.readMem(0x9980), 0x8e);
        // 8E 0048
        gbc.setState(0x7d40, 0xfe73, 0x8220, 0xbdec, 0x1dbf, 0x4198, 0x1, 0x0);
        gbc.writeMem(0x4198, { 0xcf });
        gbc.writeMem(0x7d40, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfe73);
        EXPECT(gbc.pc(), 0x7d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 004A
        gbc.setState(0xd109, 0xfe8b, 0xd4f0, 0xb12, 0x379d, 0x3e8f, 0x1, 0x0);
        gbc.writeMem(0x3e8f, { 0x65 });
        gbc.writeMem(0xd109, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfe8b);
        EXPECT(gbc.pc(), 0xd10a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd109), 0x8e);
        // 8E 004B
        gbc.setState(0x2e9, 0xe6d2, 0x7de0, 0x1198, 0xa45f, 0x5555, 0x0, 0x1);
        gbc.writeMem(0x2e9, { 0x8e });
        gbc.writeMem(0x5555, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe6d2);
        EXPECT(gbc.pc(), 0x2ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 004C
        gbc.setState(0x669d, 0x4201, 0xa780, 0x3777, 0xec80, 0x476c, 0x1, 0x1);
        gbc.writeMem(0x476c, { 0x82 });
        gbc.writeMem(0x669d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4201);
        EXPECT(gbc.pc(), 0x669e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 004D
        gbc.setState(0x519, 0x7212, 0x9a80, 0x9261, 0x1998, 0xdd08, 0x0, 0x1);
        gbc.writeMem(0x519, { 0x8e });
        gbc.writeMem(0xdd08, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7212);
        EXPECT(gbc.pc(), 0x51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd08), 0x18);
        // 8E 004E
        gbc.setState(0xebc0, 0xa6e5, 0xdc60, 0xeab8, 0x76e1, 0x4c73, 0x1, 0x0);
        gbc.writeMem(0x4c73, { 0xbc });
        gbc.writeMem(0xebc0, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa6e5);
        EXPECT(gbc.pc(), 0xebc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc0), 0x8e);
        // 8E 004F
        gbc.setState(0x17ea, 0xa957, 0xa610, 0x221a, 0xa813, 0x1e41, 0x1, 0x0);
        gbc.writeMem(0x17ea, { 0x8e });
        gbc.writeMem(0x1e41, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa957);
        EXPECT(gbc.pc(), 0x17eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0050
        gbc.setState(0x9d58, 0x6487, 0x74a0, 0x22ad, 0x1633, 0x1720, 0x1, 0x1);
        gbc.writeMem(0x1720, { 0x68 });
        gbc.writeMem(0x9d58, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6487);
        EXPECT(gbc.pc(), 0x9d59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d58), 0x8e);
        // 8E 0051
        gbc.setState(0x1ef4, 0x4b33, 0x1180, 0x831, 0xf882, 0x34c0, 0x0, 0x1);
        gbc.writeMem(0x1ef4, { 0x8e });
        gbc.writeMem(0x34c0, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4b33);
        EXPECT(gbc.pc(), 0x1ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0052
        gbc.setState(0xede3, 0x8678, 0xc270, 0x675d, 0xac1c, 0x98a8, 0x0, 0x0);
        gbc.writeMem(0x98a8, { 0x3c });
        gbc.writeMem(0xede3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8678);
        EXPECT(gbc.pc(), 0xede4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a8), 0x3c);
        EXPECT(gbc.readMem(0xede3), 0x8e);
        // 8E 0053
        gbc.setState(0x34b5, 0xd5ef, 0xc540, 0xbfe7, 0x6f41, 0x86ae, 0x0, 0x1);
        gbc.writeMem(0x34b5, { 0x8e });
        gbc.writeMem(0x86ae, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd5ef);
        EXPECT(gbc.pc(), 0x34b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ae), 0x76);
        // 8E 0054
        gbc.setState(0x51b3, 0x13c1, 0x9f80, 0x2476, 0xaaed, 0x7c51, 0x0, 0x1);
        gbc.writeMem(0x51b3, { 0x8e });
        gbc.writeMem(0x7c51, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x13c1);
        EXPECT(gbc.pc(), 0x51b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0055
        gbc.setState(0xe74f, 0x714d, 0x9920, 0x2e0d, 0xc12a, 0x6380, 0x1, 0x0);
        gbc.writeMem(0x6380, { 0xb8 });
        gbc.writeMem(0xe74f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x714d);
        EXPECT(gbc.pc(), 0xe750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe74f), 0x8e);
        // 8E 0056
        gbc.setState(0xa479, 0x718d, 0x1250, 0x8ec, 0x2bc4, 0x8b54, 0x1, 0x0);
        gbc.writeMem(0x8b54, { 0xcb });
        gbc.writeMem(0xa479, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x718d);
        EXPECT(gbc.pc(), 0xa47a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b54), 0xcb);
        EXPECT(gbc.readMem(0xa479), 0x8e);
        // 8E 0057
        gbc.setState(0xe876, 0xc708, 0xb2b0, 0x7dc4, 0x8fb6, 0x3b3b, 0x1, 0x1);
        gbc.writeMem(0x3b3b, { 0x2 });
        gbc.writeMem(0xe876, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc708);
        EXPECT(gbc.pc(), 0xe877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe876), 0x8e);
        // 8E 0059
        gbc.setState(0x9366, 0x24eb, 0x970, 0xaeed, 0x86d7, 0xd631, 0x1, 0x0);
        gbc.writeMem(0x9366, { 0x8e });
        gbc.writeMem(0xd631, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x24eb);
        EXPECT(gbc.pc(), 0x9367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9366), 0x8e);
        EXPECT(gbc.readMem(0xd631), 0x5d);
        // 8E 005A
        gbc.setState(0x7579, 0x6804, 0xec0, 0xfc23, 0x2e08, 0x32ad, 0x1, 0x0);
        gbc.writeMem(0x32ad, { 0x7 });
        gbc.writeMem(0x7579, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6804);
        EXPECT(gbc.pc(), 0x757a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 005B
        gbc.setState(0x131c, 0xd6f7, 0xff80, 0x51b6, 0xd553, 0x15, 0x1, 0x1);
        gbc.writeMem(0x15, { 0x33 });
        gbc.writeMem(0x131c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd6f7);
        EXPECT(gbc.pc(), 0x131d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 005C
        gbc.setState(0x5cb4, 0x2c93, 0xfee0, 0xd395, 0xefce, 0x9254, 0x0, 0x1);
        gbc.writeMem(0x5cb4, { 0x8e });
        gbc.writeMem(0x9254, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2c93);
        EXPECT(gbc.pc(), 0x5cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9254), 0xb8);
        // 8E 005D
        gbc.setState(0xd1be, 0x2790, 0x7740, 0x393e, 0x7756, 0x6322, 0x1, 0x0);
        gbc.writeMem(0x6322, { 0x54 });
        gbc.writeMem(0xd1be, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2790);
        EXPECT(gbc.pc(), 0xd1bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1be), 0x8e);
        // 8E 005E
        gbc.setState(0x2d69, 0x16f2, 0xc2e0, 0x761f, 0x928d, 0x58ab, 0x1, 0x0);
        gbc.writeMem(0x2d69, { 0x8e });
        gbc.writeMem(0x58ab, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x16f2);
        EXPECT(gbc.pc(), 0x2d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 005F
        gbc.setState(0x2497, 0x7b5, 0xa810, 0x5fbe, 0x6917, 0x2b9a, 0x0, 0x1);
        gbc.writeMem(0x2497, { 0x8e });
        gbc.writeMem(0x2b9a, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7b5);
        EXPECT(gbc.pc(), 0x2498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0060
        gbc.setState(0x88f, 0xfdc8, 0x53c0, 0x7138, 0x1d4f, 0xa0e4, 0x1, 0x0);
        gbc.writeMem(0x88f, { 0x8e });
        gbc.writeMem(0xa0e4, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xfdc8);
        EXPECT(gbc.pc(), 0x890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e4), 0x13);
        // 8E 0061
        gbc.setState(0x4f10, 0xa143, 0xf2a0, 0x181c, 0xa400, 0x78fe, 0x0, 0x0);
        gbc.writeMem(0x4f10, { 0x8e });
        gbc.writeMem(0x78fe, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa143);
        EXPECT(gbc.pc(), 0x4f11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0062
        gbc.setState(0x87c0, 0xe7f, 0x41c0, 0xa00f, 0xe047, 0x885e, 0x0, 0x1);
        gbc.writeMem(0x87c0, { 0x8e });
        gbc.writeMem(0x885e, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe7f);
        EXPECT(gbc.pc(), 0x87c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c0), 0x8e);
        EXPECT(gbc.readMem(0x885e), 0x9);
        // 8E 0063
        gbc.setState(0xb9ed, 0xb298, 0xf8c0, 0x678c, 0xa10c, 0x64c9, 0x0, 0x0);
        gbc.writeMem(0x64c9, { 0xad });
        gbc.writeMem(0xb9ed, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb298);
        EXPECT(gbc.pc(), 0xb9ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ed), 0x8e);
        // 8E 0064
        gbc.setState(0x85c8, 0xc849, 0xf300, 0xed63, 0xcdd6, 0x7d2c, 0x0, 0x0);
        gbc.writeMem(0x7d2c, { 0x44 });
        gbc.writeMem(0x85c8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc849);
        EXPECT(gbc.pc(), 0x85c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c8), 0x8e);
        // 8E 0065
        gbc.setState(0x3a9f, 0xd774, 0x58d0, 0xab11, 0xd22f, 0x220f, 0x1, 0x0);
        gbc.writeMem(0x220f, { 0x29 });
        gbc.writeMem(0x3a9f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd774);
        EXPECT(gbc.pc(), 0x3aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0066
        gbc.setState(0x4b04, 0xf0c1, 0xfef0, 0xd204, 0x89a, 0x6b85, 0x1, 0x0);
        gbc.writeMem(0x4b04, { 0x8e });
        gbc.writeMem(0x6b85, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf0c1);
        EXPECT(gbc.pc(), 0x4b05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0067
        gbc.setState(0x2570, 0x22a9, 0xf410, 0xbecb, 0x3acf, 0x371a, 0x0, 0x1);
        gbc.writeMem(0x2570, { 0x8e });
        gbc.writeMem(0x371a, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x22a9);
        EXPECT(gbc.pc(), 0x2571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0068
        gbc.setState(0xd8df, 0xb38d, 0x6c70, 0x3e69, 0x9772, 0x4844, 0x0, 0x1);
        gbc.writeMem(0x4844, { 0x4 });
        gbc.writeMem(0xd8df, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb38d);
        EXPECT(gbc.pc(), 0xd8e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8df), 0x8e);
        // 8E 0069
        gbc.setState(0x8b9d, 0x41d4, 0x5ca0, 0xd98a, 0xd47d, 0x46ca, 0x0, 0x1);
        gbc.writeMem(0x46ca, { 0x15 });
        gbc.writeMem(0x8b9d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x41d4);
        EXPECT(gbc.pc(), 0x8b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9d), 0x8e);
        // 8E 006A
        gbc.setState(0x1ac5, 0xba6a, 0xa9e0, 0xda4f, 0x2380, 0xb96d, 0x1, 0x1);
        gbc.writeMem(0x1ac5, { 0x8e });
        gbc.writeMem(0xb96d, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xba6a);
        EXPECT(gbc.pc(), 0x1ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb96d), 0x8a);
        // 8E 006B
        gbc.setState(0xe169, 0xa1ae, 0xa1e0, 0xc468, 0xb5a3, 0xb0b2, 0x1, 0x1);
        gbc.writeMem(0xb0b2, { 0xb2 });
        gbc.writeMem(0xe169, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa1ae);
        EXPECT(gbc.pc(), 0xe16a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b2), 0xb2);
        EXPECT(gbc.readMem(0xe169), 0x8e);
        // 8E 006C
        gbc.setState(0x77c8, 0xd0a2, 0xf0d0, 0x6191, 0x6da1, 0x15f4, 0x0, 0x0);
        gbc.writeMem(0x15f4, { 0x4 });
        gbc.writeMem(0x77c8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd0a2);
        EXPECT(gbc.pc(), 0x77c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 006D
        gbc.setState(0x9e, 0x9f37, 0x8980, 0x3e83, 0x8c9, 0x208f, 0x1, 0x0);
        gbc.writeMem(0x9e, { 0x8e });
        gbc.writeMem(0x208f, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9f37);
        EXPECT(gbc.pc(), 0x9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 006E
        gbc.setState(0x3a48, 0xfd2a, 0xbd40, 0xca7a, 0xf68, 0x73dd, 0x0, 0x0);
        gbc.writeMem(0x3a48, { 0x8e });
        gbc.writeMem(0x73dd, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfd2a);
        EXPECT(gbc.pc(), 0x3a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 006F
        gbc.setState(0x5303, 0x569e, 0xc630, 0x725d, 0x2bb0, 0x9607, 0x0, 0x1);
        gbc.writeMem(0x5303, { 0x8e });
        gbc.writeMem(0x9607, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x569e);
        EXPECT(gbc.pc(), 0x5304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9607), 0x2a);
        // 8E 0070
        gbc.setState(0x7bcf, 0xe5f2, 0xd10, 0x198e, 0xd638, 0xd978, 0x0, 0x0);
        gbc.writeMem(0x7bcf, { 0x8e });
        gbc.writeMem(0xd978, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe5f2);
        EXPECT(gbc.pc(), 0x7bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd978), 0x56);
        // 8E 0071
        gbc.setState(0x2333, 0x2535, 0xcac0, 0xefa4, 0x4c8a, 0x85aa, 0x0, 0x0);
        gbc.writeMem(0x2333, { 0x8e });
        gbc.writeMem(0x85aa, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2535);
        EXPECT(gbc.pc(), 0x2334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85aa), 0x92);
        // 8E 0072
        gbc.setState(0xcaf7, 0x899d, 0x6930, 0x8b9d, 0xfaa4, 0xa908, 0x1, 0x0);
        gbc.writeMem(0xa908, { 0xb6 });
        gbc.writeMem(0xcaf7, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x899d);
        EXPECT(gbc.pc(), 0xcaf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa908), 0xb6);
        EXPECT(gbc.readMem(0xcaf7), 0x8e);
        // 8E 0073
        gbc.setState(0x75, 0x2d66, 0x30c0, 0x9dbf, 0xc7e7, 0x5a18, 0x0, 0x0);
        gbc.writeMem(0x75, { 0x8e });
        gbc.writeMem(0x5a18, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2d66);
        EXPECT(gbc.pc(), 0x76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0074
        gbc.setState(0x2b45, 0xd8a1, 0x2f20, 0x2b6c, 0xa4d9, 0xe248, 0x0, 0x0);
        gbc.writeMem(0x2b45, { 0x8e });
        gbc.writeMem(0xe248, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd8a1);
        EXPECT(gbc.pc(), 0x2b46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe248), 0x7b);
        // 8E 0076
        gbc.setState(0x21cc, 0x759a, 0x3f50, 0x14a5, 0xdcaa, 0x46d6, 0x0, 0x1);
        gbc.writeMem(0x21cc, { 0x8e });
        gbc.writeMem(0x46d6, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x759a);
        EXPECT(gbc.pc(), 0x21cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0077
        gbc.setState(0x50e5, 0x2a4f, 0x17b0, 0x80b5, 0xbedb, 0xc8cd, 0x1, 0x0);
        gbc.writeMem(0x50e5, { 0x8e });
        gbc.writeMem(0xc8cd, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2a4f);
        EXPECT(gbc.pc(), 0x50e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8cd), 0x64);
        // 8E 0078
        gbc.setState(0xd886, 0x2c4b, 0x2af0, 0x37c0, 0x403, 0x27e2, 0x1, 0x0);
        gbc.writeMem(0x27e2, { 0x5e });
        gbc.writeMem(0xd886, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2c4b);
        EXPECT(gbc.pc(), 0xd887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd886), 0x8e);
        // 8E 0079
        gbc.setState(0x36a7, 0x2e90, 0xba0, 0xfbd2, 0x51b7, 0x67c8, 0x0, 0x1);
        gbc.writeMem(0x36a7, { 0x8e });
        gbc.writeMem(0x67c8, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2e90);
        EXPECT(gbc.pc(), 0x36a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 007A
        gbc.setState(0x9217, 0x200e, 0xaa90, 0x1cb0, 0x9c81, 0xda99, 0x0, 0x0);
        gbc.writeMem(0x9217, { 0x8e });
        gbc.writeMem(0xda99, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x200e);
        EXPECT(gbc.pc(), 0x9218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9217), 0x8e);
        EXPECT(gbc.readMem(0xda99), 0x0);
        // 8E 007B
        gbc.setState(0x4483, 0xeba6, 0x9b80, 0x3060, 0x148, 0xbca8, 0x0, 0x1);
        gbc.writeMem(0x4483, { 0x8e });
        gbc.writeMem(0xbca8, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xeba6);
        EXPECT(gbc.pc(), 0x4484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbca8), 0xdf);
        // 8E 007C
        gbc.setState(0x47c9, 0x5a51, 0x1470, 0x7bac, 0xbdbe, 0xb72a, 0x0, 0x1);
        gbc.writeMem(0x47c9, { 0x8e });
        gbc.writeMem(0xb72a, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5a51);
        EXPECT(gbc.pc(), 0x47ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb72a), 0x4a);
        // 8E 007D
        gbc.setState(0x2626, 0xdc2, 0x6090, 0x930c, 0x8240, 0xae31, 0x1, 0x0);
        gbc.writeMem(0x2626, { 0x8e });
        gbc.writeMem(0xae31, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdc2);
        EXPECT(gbc.pc(), 0x2627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae31), 0xd0);
        // 8E 007E
        gbc.setState(0x2175, 0x6158, 0x6070, 0x49ed, 0xb43c, 0x1e1d, 0x0, 0x1);
        gbc.writeMem(0x1e1d, { 0x4d });
        gbc.writeMem(0x2175, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6158);
        EXPECT(gbc.pc(), 0x2176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 007F
        gbc.setState(0xa8ce, 0xecd4, 0xcc10, 0xcead, 0x7370, 0x369b, 0x1, 0x0);
        gbc.writeMem(0x369b, { 0xcd });
        gbc.writeMem(0xa8ce, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xecd4);
        EXPECT(gbc.pc(), 0xa8cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ce), 0x8e);
        // 8E 0080
        gbc.setState(0x2230, 0xf458, 0x3900, 0x11b8, 0x7060, 0x66f0, 0x0, 0x1);
        gbc.writeMem(0x2230, { 0x8e });
        gbc.writeMem(0x66f0, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf458);
        EXPECT(gbc.pc(), 0x2231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0081
        gbc.setState(0x22d8, 0xe598, 0x65d0, 0xc4c6, 0xf9c3, 0x4fe7, 0x1, 0x0);
        gbc.writeMem(0x22d8, { 0x8e });
        gbc.writeMem(0x4fe7, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe598);
        EXPECT(gbc.pc(), 0x22d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0082
        gbc.setState(0xc43, 0xe926, 0xecd0, 0x18cd, 0x769e, 0x9180, 0x1, 0x1);
        gbc.writeMem(0xc43, { 0x8e });
        gbc.writeMem(0x9180, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe926);
        EXPECT(gbc.pc(), 0xc44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9180), 0x72);
        // 8E 0083
        gbc.setState(0x42f1, 0xb47, 0xc8d0, 0xe286, 0x46c6, 0x8d87, 0x0, 0x0);
        gbc.writeMem(0x42f1, { 0x8e });
        gbc.writeMem(0x8d87, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb47);
        EXPECT(gbc.pc(), 0x42f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d87), 0xdc);
        // 8E 0085
        gbc.setState(0x4507, 0x9519, 0xff90, 0x163a, 0xa67b, 0x548, 0x0, 0x0);
        gbc.writeMem(0x548, { 0x43 });
        gbc.writeMem(0x4507, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9519);
        EXPECT(gbc.pc(), 0x4508);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0086
        gbc.setState(0xd8, 0xd154, 0x7440, 0xb0c6, 0xfc3, 0xd798, 0x1, 0x0);
        gbc.writeMem(0xd8, { 0x8e });
        gbc.writeMem(0xd798, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd154);
        EXPECT(gbc.pc(), 0xd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd798), 0x6a);
        // 8E 0087
        gbc.setState(0x27bf, 0xa7c1, 0x5350, 0xb893, 0x9988, 0x6b9d, 0x0, 0x0);
        gbc.writeMem(0x27bf, { 0x8e });
        gbc.writeMem(0x6b9d, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa7c1);
        EXPECT(gbc.pc(), 0x27c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0088
        gbc.setState(0x9fef, 0x672f, 0x88b0, 0x4b98, 0x8d1f, 0x2d72, 0x1, 0x1);
        gbc.writeMem(0x2d72, { 0xc3 });
        gbc.writeMem(0x9fef, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x672f);
        EXPECT(gbc.pc(), 0x9ff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fef), 0x8e);
        // 8E 0089
        gbc.setState(0x4fdd, 0x2bee, 0x7060, 0x4389, 0x8b78, 0x213c, 0x1, 0x0);
        gbc.writeMem(0x213c, { 0xbc });
        gbc.writeMem(0x4fdd, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2bee);
        EXPECT(gbc.pc(), 0x4fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 008A
        gbc.setState(0xe327, 0xa07, 0xabe0, 0x580f, 0x60fc, 0x7a2e, 0x0, 0x1);
        gbc.writeMem(0x7a2e, { 0x2f });
        gbc.writeMem(0xe327, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa07);
        EXPECT(gbc.pc(), 0xe328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe327), 0x8e);
        // 8E 008B
        gbc.setState(0x7d1e, 0x8a23, 0x2500, 0xa02b, 0xebdf, 0x7a5c, 0x1, 0x1);
        gbc.writeMem(0x7a5c, { 0x64 });
        gbc.writeMem(0x7d1e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8a23);
        EXPECT(gbc.pc(), 0x7d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 008C
        gbc.setState(0x7673, 0xf20e, 0xcd40, 0x63fa, 0xb11f, 0x632d, 0x0, 0x0);
        gbc.writeMem(0x632d, { 0xfc });
        gbc.writeMem(0x7673, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf20e);
        EXPECT(gbc.pc(), 0x7674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 008D
        gbc.setState(0x42, 0x5287, 0xbd90, 0x95bf, 0x3cdd, 0xe182, 0x0, 0x0);
        gbc.writeMem(0x42, { 0x8e });
        gbc.writeMem(0xe182, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5287);
        EXPECT(gbc.pc(), 0x43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe182), 0x55);
        // 8E 008E
        gbc.setState(0x3cf7, 0x382d, 0x2700, 0x1a19, 0xf259, 0x4c72, 0x1, 0x0);
        gbc.writeMem(0x3cf7, { 0x8e });
        gbc.writeMem(0x4c72, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x382d);
        EXPECT(gbc.pc(), 0x3cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 008F
        gbc.setState(0x5ab4, 0x936b, 0x3920, 0x7a8d, 0x43a5, 0xfe0c, 0x0, 0x0);
        gbc.writeMem(0x5ab4, { 0x8e });
        gbc.writeMem(0xfe0c, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x936b);
        EXPECT(gbc.pc(), 0x5ab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe0c), 0x65);
        // 8E 0090
        gbc.setState(0xdbde, 0x8461, 0xe120, 0x6be4, 0xbc47, 0x6772, 0x0, 0x1);
        gbc.writeMem(0x6772, { 0xa });
        gbc.writeMem(0xdbde, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8461);
        EXPECT(gbc.pc(), 0xdbdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbde), 0x8e);
        // 8E 0091
        gbc.setState(0x985e, 0xb7e3, 0x1730, 0x3cfe, 0xc576, 0x8a98, 0x1, 0x1);
        gbc.writeMem(0x8a98, { 0x91 });
        gbc.writeMem(0x985e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb7e3);
        EXPECT(gbc.pc(), 0x985f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a98), 0x91);
        EXPECT(gbc.readMem(0x985e), 0x8e);
        // 8E 0092
        gbc.setState(0x37c8, 0xb12b, 0x5460, 0x36ef, 0xf21, 0x3e00, 0x1, 0x1);
        gbc.writeMem(0x37c8, { 0x8e });
        gbc.writeMem(0x3e00, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb12b);
        EXPECT(gbc.pc(), 0x37c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0093
        gbc.setState(0x2bce, 0x2dce, 0xf920, 0x8f15, 0x6810, 0x10d, 0x0, 0x1);
        gbc.writeMem(0x10d, { 0x6c });
        gbc.writeMem(0x2bce, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2dce);
        EXPECT(gbc.pc(), 0x2bcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0094
        gbc.setState(0xcb92, 0x53d, 0x1170, 0xed6d, 0x605b, 0x4746, 0x1, 0x0);
        gbc.writeMem(0x4746, { 0x50 });
        gbc.writeMem(0xcb92, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x53d);
        EXPECT(gbc.pc(), 0xcb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb92), 0x8e);
        // 8E 0095
        gbc.setState(0xaa8a, 0xc74a, 0x4ee0, 0x9b80, 0xa9f2, 0x37df, 0x0, 0x0);
        gbc.writeMem(0x37df, { 0x0 });
        gbc.writeMem(0xaa8a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc74a);
        EXPECT(gbc.pc(), 0xaa8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa8a), 0x8e);
        // 8E 0096
        gbc.setState(0x4e69, 0x1143, 0xbf0, 0xbbe7, 0x5025, 0x8726, 0x0, 0x1);
        gbc.writeMem(0x4e69, { 0x8e });
        gbc.writeMem(0x8726, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1143);
        EXPECT(gbc.pc(), 0x4e6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8726), 0x99);
        // 8E 0097
        gbc.setState(0x20da, 0xc8b, 0xc140, 0x54d6, 0x5b4e, 0xc6af, 0x1, 0x0);
        gbc.writeMem(0x20da, { 0x8e });
        gbc.writeMem(0xc6af, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc8b);
        EXPECT(gbc.pc(), 0x20db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6af), 0x1f);
        // 8E 0098
        gbc.setState(0x49d9, 0x6d3b, 0xb2a0, 0x459d, 0x829d, 0x7752, 0x0, 0x0);
        gbc.writeMem(0x49d9, { 0x8e });
        gbc.writeMem(0x7752, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6d3b);
        EXPECT(gbc.pc(), 0x49da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0099
        gbc.setState(0xc83f, 0x5d52, 0xd20, 0x145b, 0x7a88, 0xd396, 0x1, 0x0);
        gbc.writeMem(0xc83f, { 0x8e });
        gbc.writeMem(0xd396, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5d52);
        EXPECT(gbc.pc(), 0xc840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc83f), 0x8e);
        EXPECT(gbc.readMem(0xd396), 0x84);
        // 8E 009A
        gbc.setState(0x6919, 0xc853, 0x2110, 0x3a0c, 0xd4d8, 0x6daa, 0x0, 0x1);
        gbc.writeMem(0x6919, { 0x8e });
        gbc.writeMem(0x6daa, { 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc853);
        EXPECT(gbc.pc(), 0x691a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 009B
        gbc.setState(0xe283, 0x7660, 0xe630, 0xf026, 0xeae5, 0x7dc0, 0x1, 0x1);
        gbc.writeMem(0x7dc0, { 0x23 });
        gbc.writeMem(0xe283, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x7660);
        EXPECT(gbc.pc(), 0xe284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe283), 0x8e);
        // 8E 009C
        gbc.setState(0x41d3, 0x8c65, 0xe330, 0x5447, 0xf155, 0x243, 0x0, 0x1);
        gbc.writeMem(0x243, { 0x3a });
        gbc.writeMem(0x41d3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8c65);
        EXPECT(gbc.pc(), 0x41d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 009D
        gbc.setState(0x6b5b, 0xb895, 0xd280, 0x8361, 0x67c5, 0x9108, 0x1, 0x1);
        gbc.writeMem(0x6b5b, { 0x8e });
        gbc.writeMem(0x9108, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb895);
        EXPECT(gbc.pc(), 0x6b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9108), 0xd7);
        // 8E 009E
        gbc.setState(0xe9a6, 0xf639, 0xdba0, 0xc8c6, 0x9afa, 0xaeb2, 0x0, 0x1);
        gbc.writeMem(0xaeb2, { 0x8 });
        gbc.writeMem(0xe9a6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf639);
        EXPECT(gbc.pc(), 0xe9a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb2), 0x8);
        EXPECT(gbc.readMem(0xe9a6), 0x8e);
        // 8E 009F
        gbc.setState(0x4788, 0x3ea, 0x9ae0, 0xe61b, 0xd944, 0xf93c, 0x0, 0x0);
        gbc.writeMem(0x4788, { 0x8e });
        gbc.writeMem(0xf93c, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3ea);
        EXPECT(gbc.pc(), 0x4789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf93c), 0x4a);
        // 8E 00A0
        gbc.setState(0x9a7a, 0x7fea, 0xbc20, 0xada7, 0xa1da, 0x30ba, 0x0, 0x0);
        gbc.writeMem(0x30ba, { 0xe6 });
        gbc.writeMem(0x9a7a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7fea);
        EXPECT(gbc.pc(), 0x9a7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a7a), 0x8e);
        // 8E 00A1
        gbc.setState(0x369c, 0xe8ef, 0x2850, 0xc033, 0xa87a, 0xd1d, 0x0, 0x0);
        gbc.writeMem(0xd1d, { 0xf2 });
        gbc.writeMem(0x369c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe8ef);
        EXPECT(gbc.pc(), 0x369d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 00A2
        gbc.setState(0xac26, 0x4b0b, 0xf8f0, 0x1b12, 0x13c7, 0x573, 0x1, 0x0);
        gbc.writeMem(0x573, { 0x5d });
        gbc.writeMem(0xac26, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4b0b);
        EXPECT(gbc.pc(), 0xac27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac26), 0x8e);
        // 8E 00A3
        gbc.setState(0xd788, 0x8400, 0x2820, 0xa405, 0x4f13, 0x171c, 0x0, 0x1);
        gbc.writeMem(0x171c, { 0xcf });
        gbc.writeMem(0xd788, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8400);
        EXPECT(gbc.pc(), 0xd789);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd788), 0x8e);
        // 8E 00A4
        gbc.setState(0xa63b, 0xabd3, 0x6120, 0x1626, 0x4c56, 0x32f4, 0x1, 0x0);
        gbc.writeMem(0x32f4, { 0xc4 });
        gbc.writeMem(0xa63b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xabd3);
        EXPECT(gbc.pc(), 0xa63c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63b), 0x8e);
        // 8E 00A5
        gbc.setState(0x5628, 0x4baf, 0x5650, 0x6db7, 0xf716, 0x14a, 0x1, 0x0);
        gbc.writeMem(0x14a, { 0x7e });
        gbc.writeMem(0x5628, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4baf);
        EXPECT(gbc.pc(), 0x5629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 00A6
        gbc.setState(0x9616, 0xe842, 0x1b0, 0xebd7, 0x7cb2, 0xfe7f, 0x1, 0x0);
        gbc.writeMem(0x9616, { 0x8e });
        gbc.writeMem(0xfe7f, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe842);
        EXPECT(gbc.pc(), 0x9617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9616), 0x8e);
        EXPECT(gbc.readMem(0xfe7f), 0x34);
        // 8E 00A7
        gbc.setState(0x5f03, 0x59e4, 0x33b0, 0xf973, 0x8940, 0x66ff, 0x1, 0x0);
        gbc.writeMem(0x5f03, { 0x8e });
        gbc.writeMem(0x66ff, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x59e4);
        EXPECT(gbc.pc(), 0x5f04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 00A8
        gbc.setState(0x7488, 0x5f03, 0x1f40, 0x3b6e, 0xd6c6, 0x6b4d, 0x1, 0x1);
        gbc.writeMem(0x6b4d, { 0xb9 });
        gbc.writeMem(0x7488, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5f03);
        EXPECT(gbc.pc(), 0x7489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 00A9
        gbc.setState(0xdfe2, 0xc603, 0x59f0, 0xa359, 0x12c9, 0xc4c7, 0x0, 0x0);
        gbc.writeMem(0xc4c7, { 0xea });
        gbc.writeMem(0xdfe2, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc603);
        EXPECT(gbc.pc(), 0xdfe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c7), 0xea);
        EXPECT(gbc.readMem(0xdfe2), 0x8e);
        // 8E 00AA
        gbc.setState(0xb2e6, 0xe8b3, 0xae00, 0xee87, 0xeea8, 0x5f10, 0x0, 0x0);
        gbc.writeMem(0x5f10, { 0x3c });
        gbc.writeMem(0xb2e6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe8b3);
        EXPECT(gbc.pc(), 0xb2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e6), 0x8e);
        // 8E 00AB
        gbc.setState(0x8699, 0xf0ae, 0x8110, 0xb812, 0x6154, 0xebd2, 0x1, 0x1);
        gbc.writeMem(0x8699, { 0x8e });
        gbc.writeMem(0xebd2, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf0ae);
        EXPECT(gbc.pc(), 0x869a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8699), 0x8e);
        EXPECT(gbc.readMem(0xebd2), 0x5b);
        // 8E 00AC
        gbc.setState(0x8fce, 0x3cdc, 0xa580, 0x78a6, 0xe0fb, 0xacd0, 0x1, 0x1);
        gbc.writeMem(0x8fce, { 0x8e });
        gbc.writeMem(0xacd0, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3cdc);
        EXPECT(gbc.pc(), 0x8fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fce), 0x8e);
        EXPECT(gbc.readMem(0xacd0), 0x88);
        // 8E 00AD
        gbc.setState(0xe14, 0xbb38, 0xe190, 0xf48f, 0x54db, 0x7303, 0x1, 0x0);
        gbc.writeMem(0xe14, { 0x8e });
        gbc.writeMem(0x7303, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbb38);
        EXPECT(gbc.pc(), 0xe15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 00AE
        gbc.setState(0xac5a, 0x47a2, 0x2100, 0x487b, 0x1cd6, 0x3680, 0x1, 0x1);
        gbc.writeMem(0x3680, { 0x42 });
        gbc.writeMem(0xac5a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x47a2);
        EXPECT(gbc.pc(), 0xac5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac5a), 0x8e);
        // 8E 00AF
        gbc.setState(0x2d87, 0xab58, 0xf9a0, 0x220, 0x15f7, 0xe285, 0x1, 0x0);
        gbc.writeMem(0x2d87, { 0x8e });
        gbc.writeMem(0xe285, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xab58);
        EXPECT(gbc.pc(), 0x2d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe285), 0x8b);
        // 8E 00B0
        gbc.setState(0x3cbd, 0x6e38, 0x51e0, 0x7760, 0x3cdb, 0x37fd, 0x1, 0x1);
        gbc.writeMem(0x37fd, { 0x20 });
        gbc.writeMem(0x3cbd, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6e38);
        EXPECT(gbc.pc(), 0x3cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 00B1
        gbc.setState(0x3d3b, 0x31a8, 0xf4c0, 0x81ab, 0x24dc, 0xc8d3, 0x0, 0x1);
        gbc.writeMem(0x3d3b, { 0x8e });
        gbc.writeMem(0xc8d3, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x31a8);
        EXPECT(gbc.pc(), 0x3d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d3), 0x54);
        // 8E 00B2
        gbc.setState(0x6425, 0x8121, 0x65d0, 0x15a1, 0xf429, 0x9310, 0x0, 0x0);
        gbc.writeMem(0x6425, { 0x8e });
        gbc.writeMem(0x9310, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8121);
        EXPECT(gbc.pc(), 0x6426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9310), 0x75);
        // 8E 00B3
        gbc.setState(0xb4a8, 0xb961, 0x6200, 0x82e7, 0xcd80, 0x7229, 0x0, 0x1);
        gbc.writeMem(0x7229, { 0x8 });
        gbc.writeMem(0xb4a8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb961);
        EXPECT(gbc.pc(), 0xb4a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4a8), 0x8e);
        // 8E 00B4
        gbc.setState(0xb4b, 0x407b, 0x6bf0, 0x2245, 0xff97, 0x4f42, 0x0, 0x0);
        gbc.writeMem(0xb4b, { 0x8e });
        gbc.writeMem(0x4f42, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x407b);
        EXPECT(gbc.pc(), 0xb4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 00B5
        gbc.setState(0x52f0, 0x394e, 0x6940, 0x551a, 0xd2c9, 0x766b, 0x0, 0x0);
        gbc.writeMem(0x52f0, { 0x8e });
        gbc.writeMem(0x766b, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x394e);
        EXPECT(gbc.pc(), 0x52f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 00B6
        gbc.setState(0xa665, 0x6e96, 0x8d80, 0xf726, 0x4e8a, 0xcb73, 0x1, 0x1);
        gbc.writeMem(0xa665, { 0x8e });
        gbc.writeMem(0xcb73, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6e96);
        EXPECT(gbc.pc(), 0xa666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa665), 0x8e);
        EXPECT(gbc.readMem(0xcb73), 0x77);
        // 8E 00B7
        gbc.setState(0x311e, 0xd05f, 0x88c0, 0x5b1, 0x1e45, 0xb736, 0x1, 0x0);
        gbc.writeMem(0x311e, { 0x8e });
        gbc.writeMem(0xb736, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd05f);
        EXPECT(gbc.pc(), 0x311f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb736), 0x95);
        // 8E 00B8
        gbc.setState(0xeec7, 0xe475, 0xd1e0, 0xd193, 0x1652, 0xfbaf, 0x1, 0x0);
        gbc.writeMem(0xeec7, { 0x8e });
        gbc.writeMem(0xfbaf, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xe475);
        EXPECT(gbc.pc(), 0xeec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec7), 0x8e);
        EXPECT(gbc.readMem(0xfbaf), 0x44);
        // 8E 00B9
        gbc.setState(0x47d4, 0x32c9, 0x20, 0x9a7c, 0xbb8c, 0x140, 0x1, 0x0);
        gbc.writeMem(0x140, { 0x17 });
        gbc.writeMem(0x47d4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x32c9);
        EXPECT(gbc.pc(), 0x47d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 00BA
        gbc.setState(0xcd95, 0x6fd8, 0x1d00, 0xf068, 0xee36, 0xd086, 0x1, 0x1);
        gbc.writeMem(0xcd95, { 0x8e });
        gbc.writeMem(0xd086, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6fd8);
        EXPECT(gbc.pc(), 0xcd96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd95), 0x8e);
        EXPECT(gbc.readMem(0xd086), 0x4d);
        // 8E 00BB
        gbc.setState(0xc986, 0xac3b, 0x2640, 0xfccd, 0xcb78, 0x1450, 0x0, 0x1);
        gbc.writeMem(0x1450, { 0xe2 });
        gbc.writeMem(0xc986, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xac3b);
        EXPECT(gbc.pc(), 0xc987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc986), 0x8e);
        // 8E 00BC
        gbc.setState(0x445b, 0x440a, 0xe570, 0x35d, 0x699c, 0x8d24, 0x0, 0x1);
        gbc.writeMem(0x445b, { 0x8e });
        gbc.writeMem(0x8d24, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x440a);
        EXPECT(gbc.pc(), 0x445c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d24), 0xdd);
        // 8E 00BD
        gbc.setState(0x9403, 0x8725, 0xcd90, 0x8800, 0x55b5, 0xe333, 0x1, 0x0);
        gbc.writeMem(0x9403, { 0x8e });
        gbc.writeMem(0xe333, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8725);
        EXPECT(gbc.pc(), 0x9404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9403), 0x8e);
        EXPECT(gbc.readMem(0xe333), 0xc7);
        // 8E 00BE
        gbc.setState(0x7aaf, 0x2830, 0xbae0, 0x2370, 0x8125, 0x8ca4, 0x1, 0x1);
        gbc.writeMem(0x7aaf, { 0x8e });
        gbc.writeMem(0x8ca4, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2830);
        EXPECT(gbc.pc(), 0x7ab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca4), 0x32);
        // 8E 00BF
        gbc.setState(0x2917, 0x62d0, 0xbf20, 0x92f3, 0xb1a, 0x2972, 0x1, 0x0);
        gbc.writeMem(0x2917, { 0x8e });
        gbc.writeMem(0x2972, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x62d0);
        EXPECT(gbc.pc(), 0x2918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 00C0
        gbc.setState(0x543d, 0xfaeb, 0x3390, 0x942f, 0xb44, 0xc1a6, 0x0, 0x1);
        gbc.writeMem(0x543d, { 0x8e });
        gbc.writeMem(0xc1a6, { 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfaeb);
        EXPECT(gbc.pc(), 0x543e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a6), 0xd4);
        // 8E 00C1
        gbc.setState(0x56a1, 0x4a2, 0x4f10, 0xdd1b, 0x2e29, 0x22c7, 0x1, 0x0);
        gbc.writeMem(0x22c7, { 0x55 });
        gbc.writeMem(0x56a1, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4a2);
        EXPECT(gbc.pc(), 0x56a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 00C2
        gbc.setState(0xc82b, 0xb401, 0xbaf0, 0x380e, 0xacdc, 0x8eb1, 0x1, 0x1);
        gbc.writeMem(0x8eb1, { 0x4e });
        gbc.writeMem(0xc82b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb401);
        EXPECT(gbc.pc(), 0xc82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb1), 0x4e);
        EXPECT(gbc.readMem(0xc82b), 0x8e);
        // 8E 00C3
        gbc.setState(0x11ee, 0x6886, 0x75d0, 0x7fda, 0x3149, 0x738b, 0x0, 0x1);
        gbc.writeMem(0x11ee, { 0x8e });
        gbc.writeMem(0x738b, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6886);
        EXPECT(gbc.pc(), 0x11ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 00C4
        gbc.setState(0x37f7, 0x5c74, 0x85c0, 0xbbc, 0xdbab, 0xe917, 0x0, 0x1);
        gbc.writeMem(0x37f7, { 0x8e });
        gbc.writeMem(0xe917, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5c74);
        EXPECT(gbc.pc(), 0x37f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe917), 0x53);
        // 8E 00C5
        gbc.setState(0xb75b, 0x8c49, 0x1320, 0xeeb1, 0x1628, 0xbd2e, 0x0, 0x0);
        gbc.writeMem(0xb75b, { 0x8e });
        gbc.writeMem(0xbd2e, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8c49);
        EXPECT(gbc.pc(), 0xb75c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75b), 0x8e);
        EXPECT(gbc.readMem(0xbd2e), 0x7a);
        // 8E 00C6
        gbc.setState(0x9d2a, 0x6209, 0x1660, 0x2aa5, 0xbd50, 0x6256, 0x0, 0x1);
        gbc.writeMem(0x6256, { 0xd2 });
        gbc.writeMem(0x9d2a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6209);
        EXPECT(gbc.pc(), 0x9d2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d2a), 0x8e);
        // 8E 00C7
        gbc.setState(0xd821, 0x1d2, 0xaa60, 0xa78, 0x67d5, 0xf2ca, 0x1, 0x1);
        gbc.writeMem(0xd821, { 0x8e });
        gbc.writeMem(0xf2ca, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1d2);
        EXPECT(gbc.pc(), 0xd822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd821), 0x8e);
        EXPECT(gbc.readMem(0xf2ca), 0x7);
        // 8E 00C8
        gbc.setState(0x108b, 0x5a39, 0x18d0, 0x801e, 0xdf61, 0x885c, 0x1, 0x1);
        gbc.writeMem(0x108b, { 0x8e });
        gbc.writeMem(0x885c, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5a39);
        EXPECT(gbc.pc(), 0x108c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x885c), 0x6);
        // 8E 00C9
        gbc.setState(0xb5be, 0x2475, 0xc570, 0x1776, 0xfda7, 0xdfcc, 0x0, 0x1);
        gbc.writeMem(0xb5be, { 0x8e });
        gbc.writeMem(0xdfcc, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2475);
        EXPECT(gbc.pc(), 0xb5bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5be), 0x8e);
        EXPECT(gbc.readMem(0xdfcc), 0xc6);
        // 8E 00CA
        gbc.setState(0xb089, 0x6aaa, 0x17b0, 0x639, 0x7445, 0x11ee, 0x1, 0x1);
        gbc.writeMem(0x11ee, { 0x2a });
        gbc.writeMem(0xb089, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6aaa);
        EXPECT(gbc.pc(), 0xb08a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb089), 0x8e);
        // 8E 00CB
        gbc.setState(0xa806, 0xcd6f, 0xf610, 0xb26f, 0xb480, 0xf5d2, 0x0, 0x0);
        gbc.writeMem(0xa806, { 0x8e });
        gbc.writeMem(0xf5d2, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcd6f);
        EXPECT(gbc.pc(), 0xa807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa806), 0x8e);
        EXPECT(gbc.readMem(0xf5d2), 0x3f);
        // 8E 00CC
        gbc.setState(0xbfa5, 0x4201, 0xc180, 0x719a, 0x3a5a, 0x8674, 0x0, 0x0);
        gbc.writeMem(0x8674, { 0x15 });
        gbc.writeMem(0xbfa5, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4201);
        EXPECT(gbc.pc(), 0xbfa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8674), 0x15);
        EXPECT(gbc.readMem(0xbfa5), 0x8e);
        // 8E 00CD
        gbc.setState(0x76bc, 0xf099, 0x4870, 0x9aaf, 0x345c, 0x3d9a, 0x1, 0x1);
        gbc.writeMem(0x3d9a, { 0xe1 });
        gbc.writeMem(0x76bc, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf099);
        EXPECT(gbc.pc(), 0x76bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 00CE
        gbc.setState(0xd166, 0xb8a6, 0x2d10, 0x8ce6, 0xd01f, 0x86b5, 0x1, 0x1);
        gbc.writeMem(0x86b5, { 0x46 });
        gbc.writeMem(0xd166, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb8a6);
        EXPECT(gbc.pc(), 0xd167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b5), 0x46);
        EXPECT(gbc.readMem(0xd166), 0x8e);
        // 8E 00CF
        gbc.setState(0x3c75, 0x4672, 0x4450, 0x53e1, 0xd09b, 0x1ee6, 0x0, 0x1);
        gbc.writeMem(0x1ee6, { 0x3d });
        gbc.writeMem(0x3c75, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4672);
        EXPECT(gbc.pc(), 0x3c76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 00D0
        gbc.setState(0xe68f, 0xa626, 0xac30, 0x10b6, 0xa98f, 0x7756, 0x1, 0x1);
        gbc.writeMem(0x7756, { 0xa3 });
        gbc.writeMem(0xe68f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa626);
        EXPECT(gbc.pc(), 0xe690);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68f), 0x8e);
        // 8E 00D1
        gbc.setState(0xa95, 0x881, 0x7650, 0x90, 0xea10, 0x7777, 0x1, 0x1);
        gbc.writeMem(0xa95, { 0x8e });
        gbc.writeMem(0x7777, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x881);
        EXPECT(gbc.pc(), 0xa96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 00D2
        gbc.setState(0x83db, 0x43ff, 0xefe0, 0xb7a8, 0xce0a, 0xe76f, 0x1, 0x1);
        gbc.writeMem(0x83db, { 0x8e });
        gbc.writeMem(0xe76f, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x43ff);
        EXPECT(gbc.pc(), 0x83dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83db), 0x8e);
        EXPECT(gbc.readMem(0xe76f), 0x7a);
        // 8E 00D3
        gbc.setState(0xea48, 0x193d, 0x2610, 0xf501, 0x63c3, 0xeba8, 0x1, 0x1);
        gbc.writeMem(0xea48, { 0x8e });
        gbc.writeMem(0xeba8, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x193d);
        EXPECT(gbc.pc(), 0xea49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea48), 0x8e);
        EXPECT(gbc.readMem(0xeba8), 0x45);
        // 8E 00D4
        gbc.setState(0x34b, 0xfd81, 0xc80, 0x53b4, 0x5b23, 0x6838, 0x0, 0x0);
        gbc.writeMem(0x34b, { 0x8e });
        gbc.writeMem(0x6838, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xfd81);
        EXPECT(gbc.pc(), 0x34c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 00D5
        gbc.setState(0xe60, 0x76c8, 0x6e0, 0x2694, 0x5652, 0x6ec1, 0x1, 0x1);
        gbc.writeMem(0xe60, { 0x8e });
        gbc.writeMem(0x6ec1, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x76c8);
        EXPECT(gbc.pc(), 0xe61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 00D6
        gbc.setState(0xb1ca, 0xdba2, 0x7bb0, 0x4c2a, 0xd327, 0x39d3, 0x0, 0x1);
        gbc.writeMem(0x39d3, { 0x6f });
        gbc.writeMem(0xb1ca, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdba2);
        EXPECT(gbc.pc(), 0xb1cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ca), 0x8e);
        // 8E 00D7
        gbc.setState(0x61bf, 0x3621, 0x9910, 0xe927, 0xb9ca, 0xca39, 0x1, 0x0);
        gbc.writeMem(0x61bf, { 0x8e });
        gbc.writeMem(0xca39, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3621);
        EXPECT(gbc.pc(), 0x61c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca39), 0x6);
        // 8E 00D8
        gbc.setState(0x5e8b, 0x7b01, 0x17d0, 0x7638, 0x9e8a, 0xe2de, 0x0, 0x0);
        gbc.writeMem(0x5e8b, { 0x8e });
        gbc.writeMem(0xe2de, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7b01);
        EXPECT(gbc.pc(), 0x5e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2de), 0xc6);
        // 8E 00D9
        gbc.setState(0xa851, 0x2286, 0xba60, 0xfc3, 0xb2ec, 0x65d3, 0x1, 0x1);
        gbc.writeMem(0x65d3, { 0xc });
        gbc.writeMem(0xa851, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2286);
        EXPECT(gbc.pc(), 0xa852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa851), 0x8e);
        // 8E 00DA
        gbc.setState(0xc71c, 0x9a0c, 0x29e0, 0xfa0d, 0x6273, 0x9a94, 0x0, 0x0);
        gbc.writeMem(0x9a94, { 0xb0 });
        gbc.writeMem(0xc71c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9a0c);
        EXPECT(gbc.pc(), 0xc71d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a94), 0xb0);
        EXPECT(gbc.readMem(0xc71c), 0x8e);
        // 8E 00DB
        gbc.setState(0x939a, 0x47c9, 0xa010, 0xe9e5, 0x7c9e, 0xafec, 0x0, 0x1);
        gbc.writeMem(0x939a, { 0x8e });
        gbc.writeMem(0xafec, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x47c9);
        EXPECT(gbc.pc(), 0x939b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x939a), 0x8e);
        EXPECT(gbc.readMem(0xafec), 0xc8);
        // 8E 00DC
        gbc.setState(0x92cb, 0xc072, 0x4bb0, 0x84d8, 0xee29, 0xcb4b, 0x1, 0x0);
        gbc.writeMem(0x92cb, { 0x8e });
        gbc.writeMem(0xcb4b, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc072);
        EXPECT(gbc.pc(), 0x92cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92cb), 0x8e);
        EXPECT(gbc.readMem(0xcb4b), 0x9a);
        // 8E 00DD
        gbc.setState(0x7e14, 0x29ba, 0x50e0, 0xaf07, 0xf1a0, 0xb11f, 0x0, 0x0);
        gbc.writeMem(0x7e14, { 0x8e });
        gbc.writeMem(0xb11f, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x29ba);
        EXPECT(gbc.pc(), 0x7e15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb11f), 0xf);
        // 8E 00DF
        gbc.setState(0xee80, 0xfa5d, 0xe980, 0x4906, 0x50c, 0x4d50, 0x0, 0x1);
        gbc.writeMem(0x4d50, { 0x42 });
        gbc.writeMem(0xee80, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xfa5d);
        EXPECT(gbc.pc(), 0xee81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee80), 0x8e);
        // 8E 00E1
        gbc.setState(0x5582, 0x79dd, 0xf640, 0xaf31, 0x46fe, 0xadda, 0x1, 0x0);
        gbc.writeMem(0x5582, { 0x8e });
        gbc.writeMem(0xadda, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x79dd);
        EXPECT(gbc.pc(), 0x5583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadda), 0x73);
        // 8E 00E2
        gbc.setState(0x30d5, 0xb4a0, 0xa110, 0x9839, 0xbed4, 0xe1a6, 0x1, 0x0);
        gbc.writeMem(0x30d5, { 0x8e });
        gbc.writeMem(0xe1a6, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb4a0);
        EXPECT(gbc.pc(), 0x30d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a6), 0x1a);
        // 8E 00E3
        gbc.setState(0x5136, 0xe2b6, 0x5ba0, 0x8f42, 0xa0aa, 0xa547, 0x1, 0x1);
        gbc.writeMem(0x5136, { 0x8e });
        gbc.writeMem(0xa547, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe2b6);
        EXPECT(gbc.pc(), 0x5137);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa547), 0xcc);
        // 8E 00E4
        gbc.setState(0xcc52, 0xa922, 0xdef0, 0xcc69, 0x6e98, 0xa275, 0x1, 0x1);
        gbc.writeMem(0xa275, { 0xf9 });
        gbc.writeMem(0xcc52, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa922);
        EXPECT(gbc.pc(), 0xcc53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa275), 0xf9);
        EXPECT(gbc.readMem(0xcc52), 0x8e);
        // 8E 00E5
        gbc.setState(0xeff7, 0xc895, 0x4620, 0x2ccb, 0xd303, 0x79ff, 0x1, 0x1);
        gbc.writeMem(0x79ff, { 0x17 });
        gbc.writeMem(0xeff7, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc895);
        EXPECT(gbc.pc(), 0xeff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff7), 0x8e);
        // 8E 00E6
        gbc.setState(0x7e29, 0x8f42, 0xb870, 0xfe6c, 0x5a27, 0xd04e, 0x1, 0x0);
        gbc.writeMem(0x7e29, { 0x8e });
        gbc.writeMem(0xd04e, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8f42);
        EXPECT(gbc.pc(), 0x7e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd04e), 0xce);
        // 8E 00E7
        gbc.setState(0x16e, 0xecf9, 0x7790, 0x139, 0x15c5, 0xec, 0x1, 0x1);
        gbc.writeMem(0xec, { 0x97 });
        gbc.writeMem(0x16e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xecf9);
        EXPECT(gbc.pc(), 0x16f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 00E8
        gbc.setState(0x9aa7, 0xc232, 0xeb00, 0xeb51, 0x121c, 0x4466, 0x0, 0x0);
        gbc.writeMem(0x4466, { 0xd3 });
        gbc.writeMem(0x9aa7, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc232);
        EXPECT(gbc.pc(), 0x9aa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aa7), 0x8e);
        // 8E 00E9
        gbc.setState(0xb80d, 0x568b, 0x93b0, 0xdf0c, 0x43d8, 0x2fd5, 0x0, 0x1);
        gbc.writeMem(0x2fd5, { 0x1d });
        gbc.writeMem(0xb80d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x568b);
        EXPECT(gbc.pc(), 0xb80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb80d), 0x8e);
        // 8E 00EA
        gbc.setState(0x467, 0x70fb, 0x2470, 0xcccf, 0xd1eb, 0xccc6, 0x1, 0x0);
        gbc.writeMem(0x467, { 0x8e });
        gbc.writeMem(0xccc6, { 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x70fb);
        EXPECT(gbc.pc(), 0x468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc6), 0xc0);
        // 8E 00EB
        gbc.setState(0x2434, 0x8f56, 0xdb40, 0x7278, 0x84d3, 0x6eca, 0x1, 0x1);
        gbc.writeMem(0x2434, { 0x8e });
        gbc.writeMem(0x6eca, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8f56);
        EXPECT(gbc.pc(), 0x2435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 00EC
        gbc.setState(0x2ca9, 0x14b5, 0x5cc0, 0xdef4, 0x7aac, 0xe22a, 0x1, 0x1);
        gbc.writeMem(0x2ca9, { 0x8e });
        gbc.writeMem(0xe22a, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x14b5);
        EXPECT(gbc.pc(), 0x2caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe22a), 0x97);
        // 8E 00ED
        gbc.setState(0xc515, 0xa248, 0xa3c0, 0xc7a7, 0x817d, 0xd05e, 0x1, 0x1);
        gbc.writeMem(0xc515, { 0x8e });
        gbc.writeMem(0xd05e, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa248);
        EXPECT(gbc.pc(), 0xc516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc515), 0x8e);
        EXPECT(gbc.readMem(0xd05e), 0xea);
        // 8E 00EE
        gbc.setState(0xcdf, 0xc0e0, 0x3780, 0x9595, 0x5b08, 0x1de3, 0x0, 0x1);
        gbc.writeMem(0xcdf, { 0x8e });
        gbc.writeMem(0x1de3, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc0e0);
        EXPECT(gbc.pc(), 0xce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 00EF
        gbc.setState(0x95fc, 0x26ee, 0x1260, 0x37b6, 0x83b3, 0x1f82, 0x0, 0x1);
        gbc.writeMem(0x1f82, { 0xcb });
        gbc.writeMem(0x95fc, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x26ee);
        EXPECT(gbc.pc(), 0x95fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95fc), 0x8e);
        // 8E 00F0
        gbc.setState(0x82dc, 0xaf69, 0x5690, 0x990, 0x454, 0xd920, 0x1, 0x1);
        gbc.writeMem(0x82dc, { 0x8e });
        gbc.writeMem(0xd920, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xaf69);
        EXPECT(gbc.pc(), 0x82dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82dc), 0x8e);
        EXPECT(gbc.readMem(0xd920), 0x1d);
        // 8E 00F1
        gbc.setState(0x28a6, 0x2a41, 0xe8c0, 0x8b7b, 0x49d9, 0xb9f0, 0x1, 0x1);
        gbc.writeMem(0x28a6, { 0x8e });
        gbc.writeMem(0xb9f0, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2a41);
        EXPECT(gbc.pc(), 0x28a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f0), 0x77);
        // 8E 00F2
        gbc.setState(0x12a3, 0xde44, 0x21b0, 0x70fa, 0x2603, 0x295, 0x0, 0x0);
        gbc.writeMem(0x295, { 0x1 });
        gbc.writeMem(0x12a3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xde44);
        EXPECT(gbc.pc(), 0x12a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 00F3
        gbc.setState(0x685f, 0x2a30, 0x4920, 0x6f90, 0xa75f, 0xc674, 0x0, 0x1);
        gbc.writeMem(0x685f, { 0x8e });
        gbc.writeMem(0xc674, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2a30);
        EXPECT(gbc.pc(), 0x6860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc674), 0xe5);
        // 8E 00F4
        gbc.setState(0xa1bb, 0x7528, 0x90a0, 0xd5ce, 0xb98c, 0xf9d5, 0x0, 0x1);
        gbc.writeMem(0xa1bb, { 0x8e });
        gbc.writeMem(0xf9d5, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7528);
        EXPECT(gbc.pc(), 0xa1bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1bb), 0x8e);
        EXPECT(gbc.readMem(0xf9d5), 0x94);
        // 8E 00F5
        gbc.setState(0xd6d6, 0x2a96, 0x17f0, 0x7e7, 0x818e, 0xb34f, 0x1, 0x0);
        gbc.writeMem(0xb34f, { 0x3c });
        gbc.writeMem(0xd6d6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2a96);
        EXPECT(gbc.pc(), 0xd6d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb34f), 0x3c);
        EXPECT(gbc.readMem(0xd6d6), 0x8e);
        // 8E 00F6
        gbc.setState(0x4043, 0x453e, 0x1c70, 0x303f, 0xb6c6, 0xfe24, 0x0, 0x1);
        gbc.writeMem(0x4043, { 0x8e });
        gbc.writeMem(0xfe24, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x453e);
        EXPECT(gbc.pc(), 0x4044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe24), 0x7b);
        // 8E 00F7
        gbc.setState(0xe8f5, 0x9693, 0x24e0, 0xcea8, 0x2fc1, 0xbc59, 0x1, 0x0);
        gbc.writeMem(0xbc59, { 0x8c });
        gbc.writeMem(0xe8f5, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9693);
        EXPECT(gbc.pc(), 0xe8f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc59), 0x8c);
        EXPECT(gbc.readMem(0xe8f5), 0x8e);
        // 8E 00F8
        gbc.setState(0xd77c, 0x385f, 0x110, 0xe01c, 0xce24, 0x19a7, 0x1, 0x1);
        gbc.writeMem(0x19a7, { 0xf7 });
        gbc.writeMem(0xd77c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x385f);
        EXPECT(gbc.pc(), 0xd77d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77c), 0x8e);
        // 8E 00F9
        gbc.setState(0x12eb, 0x15ab, 0xeba0, 0x2863, 0xabfa, 0x2ec5, 0x1, 0x1);
        gbc.writeMem(0x12eb, { 0x8e });
        gbc.writeMem(0x2ec5, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x15ab);
        EXPECT(gbc.pc(), 0x12ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 00FA
        gbc.setState(0x956f, 0x7bc8, 0x7a00, 0x49cb, 0x3505, 0x9790, 0x1, 0x1);
        gbc.writeMem(0x956f, { 0x8e });
        gbc.writeMem(0x9790, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7bc8);
        EXPECT(gbc.pc(), 0x9570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x956f), 0x8e);
        EXPECT(gbc.readMem(0x9790), 0x29);
        // 8E 00FB
        gbc.setState(0x18ac, 0x9fd1, 0xac40, 0xc9c9, 0x87a1, 0x4e85, 0x0, 0x1);
        gbc.writeMem(0x18ac, { 0x8e });
        gbc.writeMem(0x4e85, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9fd1);
        EXPECT(gbc.pc(), 0x18ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 00FC
        gbc.setState(0xb620, 0x3169, 0x1690, 0x97b0, 0x79c2, 0xaee0, 0x1, 0x0);
        gbc.writeMem(0xaee0, { 0xd8 });
        gbc.writeMem(0xb620, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3169);
        EXPECT(gbc.pc(), 0xb621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee0), 0xd8);
        EXPECT(gbc.readMem(0xb620), 0x8e);
        // 8E 00FD
        gbc.setState(0x9077, 0x2779, 0x3920, 0x1280, 0xf4b2, 0xc5e1, 0x0, 0x1);
        gbc.writeMem(0x9077, { 0x8e });
        gbc.writeMem(0xc5e1, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2779);
        EXPECT(gbc.pc(), 0x9078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9077), 0x8e);
        EXPECT(gbc.readMem(0xc5e1), 0x87);
        // 8E 00FE
        gbc.setState(0xc75c, 0xd6a7, 0x2c40, 0xa42c, 0x650d, 0x3dbb, 0x1, 0x1);
        gbc.writeMem(0x3dbb, { 0x2e });
        gbc.writeMem(0xc75c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd6a7);
        EXPECT(gbc.pc(), 0xc75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc75c), 0x8e);
        // 8E 00FF
        gbc.setState(0x1457, 0xd086, 0x6dd0, 0x938c, 0x6e60, 0xc6d2, 0x1, 0x0);
        gbc.writeMem(0x1457, { 0x8e });
        gbc.writeMem(0xc6d2, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd086);
        EXPECT(gbc.pc(), 0x1458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6d2), 0xca);
        // 8E 0100
        gbc.setState(0xcca0, 0xf10, 0x6c30, 0x283f, 0x9923, 0xe3aa, 0x1, 0x1);
        gbc.writeMem(0xcca0, { 0x8e });
        gbc.writeMem(0xe3aa, { 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf10);
        EXPECT(gbc.pc(), 0xcca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcca0), 0x8e);
        EXPECT(gbc.readMem(0xe3aa), 0x38);
        // 8E 0103
        gbc.setState(0xcdfd, 0x4436, 0xb320, 0xd719, 0x496b, 0x967f, 0x1, 0x1);
        gbc.writeMem(0x967f, { 0x27 });
        gbc.writeMem(0xcdfd, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4436);
        EXPECT(gbc.pc(), 0xcdfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x967f), 0x27);
        EXPECT(gbc.readMem(0xcdfd), 0x8e);
        // 8E 0104
        gbc.setState(0x51b3, 0xd447, 0xb4d0, 0xa354, 0x6f4e, 0xd11, 0x0, 0x1);
        gbc.writeMem(0xd11, { 0x21 });
        gbc.writeMem(0x51b3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd447);
        EXPECT(gbc.pc(), 0x51b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0105
        gbc.setState(0xcd65, 0xaec0, 0x6e10, 0xc80a, 0x484f, 0x470a, 0x0, 0x1);
        gbc.writeMem(0x470a, { 0xcd });
        gbc.writeMem(0xcd65, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xaec0);
        EXPECT(gbc.pc(), 0xcd66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd65), 0x8e);
        // 8E 0106
        gbc.setState(0x22c, 0x7480, 0xc200, 0x2bde, 0x9ba1, 0x2a30, 0x1, 0x0);
        gbc.writeMem(0x22c, { 0x8e });
        gbc.writeMem(0x2a30, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7480);
        EXPECT(gbc.pc(), 0x22d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0107
        gbc.setState(0xac5, 0x54ae, 0xfc0, 0x8046, 0x4cbb, 0x6908, 0x0, 0x0);
        gbc.writeMem(0xac5, { 0x8e });
        gbc.writeMem(0x6908, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x54ae);
        EXPECT(gbc.pc(), 0xac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0108
        gbc.setState(0xb19b, 0x938c, 0x1970, 0x691d, 0xd177, 0x930d, 0x1, 0x0);
        gbc.writeMem(0x930d, { 0x5e });
        gbc.writeMem(0xb19b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x938c);
        EXPECT(gbc.pc(), 0xb19c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x930d), 0x5e);
        EXPECT(gbc.readMem(0xb19b), 0x8e);
        // 8E 0109
        gbc.setState(0x297b, 0x8d8e, 0x2cd0, 0xf84, 0xefad, 0xb08e, 0x1, 0x0);
        gbc.writeMem(0x297b, { 0x8e });
        gbc.writeMem(0xb08e, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8d8e);
        EXPECT(gbc.pc(), 0x297c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08e), 0xb5);
        // 8E 010A
        gbc.setState(0x2039, 0x52fe, 0x2600, 0xb62f, 0x842e, 0x386d, 0x0, 0x1);
        gbc.writeMem(0x2039, { 0x8e });
        gbc.writeMem(0x386d, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x52fe);
        EXPECT(gbc.pc(), 0x203a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 010B
        gbc.setState(0xd024, 0xcaf7, 0x1820, 0x1e45, 0xd2dd, 0x98f5, 0x0, 0x0);
        gbc.writeMem(0x98f5, { 0x5c });
        gbc.writeMem(0xd024, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcaf7);
        EXPECT(gbc.pc(), 0xd025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f5), 0x5c);
        EXPECT(gbc.readMem(0xd024), 0x8e);
        // 8E 010C
        gbc.setState(0x8de1, 0xc83b, 0x2b0, 0x71ad, 0x3904, 0xd02, 0x0, 0x0);
        gbc.writeMem(0xd02, { 0x43 });
        gbc.writeMem(0x8de1, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc83b);
        EXPECT(gbc.pc(), 0x8de2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8de1), 0x8e);
        // 8E 010D
        gbc.setState(0x11a3, 0x47ba, 0xb100, 0x325b, 0x6360, 0x592f, 0x1, 0x1);
        gbc.writeMem(0x11a3, { 0x8e });
        gbc.writeMem(0x592f, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x47ba);
        EXPECT(gbc.pc(), 0x11a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 010E
        gbc.setState(0x7117, 0x63b0, 0xe100, 0xe302, 0xf92b, 0xd58b, 0x0, 0x1);
        gbc.writeMem(0x7117, { 0x8e });
        gbc.writeMem(0xd58b, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x63b0);
        EXPECT(gbc.pc(), 0x7118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd58b), 0x88);
        // 8E 010F
        gbc.setState(0x9b54, 0x18bd, 0x9750, 0xd3bf, 0xca17, 0x7aac, 0x1, 0x0);
        gbc.writeMem(0x7aac, { 0x8e });
        gbc.writeMem(0x9b54, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x18bd);
        EXPECT(gbc.pc(), 0x9b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b54), 0x8e);
        // 8E 0110
        gbc.setState(0xebf0, 0x1ded, 0xbee0, 0x443, 0xce5e, 0xfdad, 0x1, 0x0);
        gbc.writeMem(0xebf0, { 0x8e });
        gbc.writeMem(0xfdad, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1ded);
        EXPECT(gbc.pc(), 0xebf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf0), 0x8e);
        EXPECT(gbc.readMem(0xfdad), 0x4b);
        // 8E 0112
        gbc.setState(0xc329, 0xfd29, 0x880, 0x8419, 0xbf01, 0xb029, 0x0, 0x0);
        gbc.writeMem(0xb029, { 0x73 });
        gbc.writeMem(0xc329, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xfd29);
        EXPECT(gbc.pc(), 0xc32a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb029), 0x73);
        EXPECT(gbc.readMem(0xc329), 0x8e);
        // 8E 0113
        gbc.setState(0xe31a, 0x43c, 0xc470, 0x284a, 0xd25e, 0x1531, 0x0, 0x0);
        gbc.writeMem(0x1531, { 0x7e });
        gbc.writeMem(0xe31a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x43c);
        EXPECT(gbc.pc(), 0xe31b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe31a), 0x8e);
        // 8E 0114
        gbc.setState(0xd558, 0x9b00, 0xe320, 0x2958, 0x44d, 0xd293, 0x1, 0x1);
        gbc.writeMem(0xd293, { 0xab });
        gbc.writeMem(0xd558, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9b00);
        EXPECT(gbc.pc(), 0xd559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd293), 0xab);
        EXPECT(gbc.readMem(0xd558), 0x8e);
        // 8E 0115
        gbc.setState(0x5f8c, 0xe57a, 0xf260, 0xc813, 0x89f6, 0x68bd, 0x0, 0x0);
        gbc.writeMem(0x5f8c, { 0x8e });
        gbc.writeMem(0x68bd, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xe57a);
        EXPECT(gbc.pc(), 0x5f8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0116
        gbc.setState(0xa5b9, 0xb9b, 0x26d0, 0x3649, 0x6ad2, 0xf87d, 0x0, 0x1);
        gbc.writeMem(0xa5b9, { 0x8e });
        gbc.writeMem(0xf87d, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb9b);
        EXPECT(gbc.pc(), 0xa5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5b9), 0x8e);
        EXPECT(gbc.readMem(0xf87d), 0xa4);
        // 8E 0117
        gbc.setState(0x3146, 0x214d, 0x5700, 0x2cf3, 0x3e7b, 0x8973, 0x0, 0x0);
        gbc.writeMem(0x3146, { 0x8e });
        gbc.writeMem(0x8973, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x214d);
        EXPECT(gbc.pc(), 0x3147);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8973), 0xba);
        // 8E 0119
        gbc.setState(0x5c6c, 0x7a04, 0x9590, 0xedd9, 0x37c5, 0x3390, 0x0, 0x0);
        gbc.writeMem(0x3390, { 0x8d });
        gbc.writeMem(0x5c6c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7a04);
        EXPECT(gbc.pc(), 0x5c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 011A
        gbc.setState(0x76ec, 0x48a1, 0xf5e0, 0xcca0, 0xf8cd, 0x709e, 0x0, 0x0);
        gbc.writeMem(0x709e, { 0x8 });
        gbc.writeMem(0x76ec, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x48a1);
        EXPECT(gbc.pc(), 0x76ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 011B
        gbc.setState(0x3ad8, 0x9b56, 0x93b0, 0xf8a6, 0xd80d, 0x1b87, 0x1, 0x1);
        gbc.writeMem(0x1b87, { 0x90 });
        gbc.writeMem(0x3ad8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9b56);
        EXPECT(gbc.pc(), 0x3ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 011C
        gbc.setState(0x27b3, 0x5c7f, 0x6e60, 0x7035, 0x866e, 0xb642, 0x0, 0x1);
        gbc.writeMem(0x27b3, { 0x8e });
        gbc.writeMem(0xb642, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5c7f);
        EXPECT(gbc.pc(), 0x27b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb642), 0x26);
        // 8E 011D
        gbc.setState(0x7fa6, 0x81e6, 0x50e0, 0x76b3, 0xf3b3, 0xaf1a, 0x1, 0x1);
        gbc.writeMem(0x7fa6, { 0x8e });
        gbc.writeMem(0xaf1a, { 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x81e6);
        EXPECT(gbc.pc(), 0x7fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf1a), 0x65);
        // 8E 011F
        gbc.setState(0xe0a, 0x3210, 0xaff0, 0xc024, 0x8cab, 0x3a1f, 0x1, 0x0);
        gbc.writeMem(0xe0a, { 0x8e });
        gbc.writeMem(0x3a1f, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3210);
        EXPECT(gbc.pc(), 0xe0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0120
        gbc.setState(0xeca9, 0x7620, 0x6010, 0xd671, 0xe89e, 0x98e0, 0x0, 0x1);
        gbc.writeMem(0x98e0, { 0xd0 });
        gbc.writeMem(0xeca9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7620);
        EXPECT(gbc.pc(), 0xecaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e0), 0xd0);
        EXPECT(gbc.readMem(0xeca9), 0x8e);
        // 8E 0121
        gbc.setState(0xb21f, 0xe6d, 0xd310, 0x7923, 0xf391, 0x596c, 0x0, 0x0);
        gbc.writeMem(0x596c, { 0x82 });
        gbc.writeMem(0xb21f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe6d);
        EXPECT(gbc.pc(), 0xb220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb21f), 0x8e);
        // 8E 0122
        gbc.setState(0x4251, 0x255f, 0x8c0, 0x21ac, 0x59e9, 0x326d, 0x0, 0x1);
        gbc.writeMem(0x326d, { 0x6f });
        gbc.writeMem(0x4251, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x255f);
        EXPECT(gbc.pc(), 0x4252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0123
        gbc.setState(0xddce, 0x6462, 0x2f20, 0xc4ab, 0xefe4, 0x9250, 0x0, 0x1);
        gbc.writeMem(0x9250, { 0x4a });
        gbc.writeMem(0xddce, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6462);
        EXPECT(gbc.pc(), 0xddcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9250), 0x4a);
        EXPECT(gbc.readMem(0xddce), 0x8e);
        // 8E 0124
        gbc.setState(0x44a6, 0xe30b, 0x3f40, 0xc801, 0x4fbf, 0x1fc4, 0x0, 0x0);
        gbc.writeMem(0x1fc4, { 0x35 });
        gbc.writeMem(0x44a6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe30b);
        EXPECT(gbc.pc(), 0x44a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0125
        gbc.setState(0x14d0, 0x2c03, 0xd6c0, 0xdcf, 0x51c3, 0xcdc1, 0x1, 0x0);
        gbc.writeMem(0x14d0, { 0x8e });
        gbc.writeMem(0xcdc1, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2c03);
        EXPECT(gbc.pc(), 0x14d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdc1), 0x89);
        // 8E 0126
        gbc.setState(0x95aa, 0x1e74, 0x5680, 0xd083, 0xc714, 0xb59c, 0x1, 0x0);
        gbc.writeMem(0x95aa, { 0x8e });
        gbc.writeMem(0xb59c, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1e74);
        EXPECT(gbc.pc(), 0x95ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95aa), 0x8e);
        EXPECT(gbc.readMem(0xb59c), 0x28);
        // 8E 0127
        gbc.setState(0x1b35, 0x6b5a, 0xf7e0, 0xc4c, 0x9256, 0xc0d3, 0x1, 0x0);
        gbc.writeMem(0x1b35, { 0x8e });
        gbc.writeMem(0xc0d3, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6b5a);
        EXPECT(gbc.pc(), 0x1b36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0d3), 0x31);
        // 8E 0128
        gbc.setState(0xdde, 0x3836, 0x5360, 0x6b9b, 0xc270, 0x4700, 0x0, 0x1);
        gbc.writeMem(0xdde, { 0x8e });
        gbc.writeMem(0x4700, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3836);
        EXPECT(gbc.pc(), 0xddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0129
        gbc.setState(0x847d, 0x35e9, 0x410, 0xe531, 0xa996, 0xd225, 0x1, 0x0);
        gbc.writeMem(0x847d, { 0x8e });
        gbc.writeMem(0xd225, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x35e9);
        EXPECT(gbc.pc(), 0x847e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847d), 0x8e);
        EXPECT(gbc.readMem(0xd225), 0x83);
        // 8E 012A
        gbc.setState(0xdbb6, 0xf50b, 0x390, 0x4f93, 0xeda2, 0xff96, 0x1, 0x0);
        gbc.writeMem(0xdbb6, { 0x8e });
        gbc.writeMem(0xff96, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf50b);
        EXPECT(gbc.pc(), 0xdbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbb6), 0x8e);
        EXPECT(gbc.readMem(0xff96), 0x72);
        // 8E 012B
        gbc.setState(0x3, 0xb61f, 0xf950, 0x8f60, 0x4986, 0x9f0, 0x0, 0x1);
        gbc.writeMem(0x3, { 0x8e });
        gbc.writeMem(0x9f0, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb61f);
        EXPECT(gbc.pc(), 0x4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 012C
        gbc.setState(0xa912, 0x7c36, 0x510, 0xae19, 0x85d3, 0xe714, 0x0, 0x0);
        gbc.writeMem(0xa912, { 0x8e });
        gbc.writeMem(0xe714, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7c36);
        EXPECT(gbc.pc(), 0xa913);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa912), 0x8e);
        EXPECT(gbc.readMem(0xe714), 0xa9);
        // 8E 012D
        gbc.setState(0xc1e4, 0x90f2, 0xecc0, 0xdf4d, 0xc8e, 0xe475, 0x1, 0x1);
        gbc.writeMem(0xc1e4, { 0x8e });
        gbc.writeMem(0xe475, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x90f2);
        EXPECT(gbc.pc(), 0xc1e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e4), 0x8e);
        EXPECT(gbc.readMem(0xe475), 0x11);
        // 8E 012E
        gbc.setState(0x6a31, 0xbcbe, 0x1680, 0x7487, 0xe062, 0xb0c3, 0x0, 0x1);
        gbc.writeMem(0x6a31, { 0x8e });
        gbc.writeMem(0xb0c3, { 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbcbe);
        EXPECT(gbc.pc(), 0x6a32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c3), 0x71);
        // 8E 012F
        gbc.setState(0x266e, 0x921d, 0x3aa0, 0x617d, 0xa595, 0xa7f7, 0x0, 0x0);
        gbc.writeMem(0x266e, { 0x8e });
        gbc.writeMem(0xa7f7, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x921d);
        EXPECT(gbc.pc(), 0x266f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f7), 0x4d);
        // 8E 0131
        gbc.setState(0xb19e, 0x660, 0x7c60, 0x70b2, 0x9abb, 0x6979, 0x0, 0x1);
        gbc.writeMem(0x6979, { 0xaf });
        gbc.writeMem(0xb19e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x660);
        EXPECT(gbc.pc(), 0xb19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb19e), 0x8e);
        // 8E 0132
        gbc.setState(0x60ad, 0xa472, 0xbb90, 0x5ca9, 0x5efe, 0xeda2, 0x0, 0x0);
        gbc.writeMem(0x60ad, { 0x8e });
        gbc.writeMem(0xeda2, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa472);
        EXPECT(gbc.pc(), 0x60ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda2), 0xdd);
        // 8E 0133
        gbc.setState(0x7472, 0x99b1, 0x5fc0, 0x5ee1, 0x4dd, 0x92e6, 0x0, 0x1);
        gbc.writeMem(0x7472, { 0x8e });
        gbc.writeMem(0x92e6, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x99b1);
        EXPECT(gbc.pc(), 0x7473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e6), 0xab);
        // 8E 0134
        gbc.setState(0x114, 0x7acf, 0xbc60, 0xdffe, 0x105c, 0x4974, 0x1, 0x1);
        gbc.writeMem(0x114, { 0x8e });
        gbc.writeMem(0x4974, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7acf);
        EXPECT(gbc.pc(), 0x115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0135
        gbc.setState(0xdba9, 0x81a6, 0xe0c0, 0xbdd0, 0x85ca, 0xd91a, 0x1, 0x1);
        gbc.writeMem(0xd91a, { 0xa4 });
        gbc.writeMem(0xdba9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x81a6);
        EXPECT(gbc.pc(), 0xdbaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd91a), 0xa4);
        EXPECT(gbc.readMem(0xdba9), 0x8e);
        // 8E 0136
        gbc.setState(0x7c73, 0x6d41, 0x68c0, 0xbddc, 0x829e, 0x1ba1, 0x1, 0x0);
        gbc.writeMem(0x1ba1, { 0xf });
        gbc.writeMem(0x7c73, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6d41);
        EXPECT(gbc.pc(), 0x7c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0137
        gbc.setState(0xade8, 0x67dd, 0xb820, 0x6e48, 0x141c, 0xa9d3, 0x1, 0x0);
        gbc.writeMem(0xa9d3, { 0xcf });
        gbc.writeMem(0xade8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x67dd);
        EXPECT(gbc.pc(), 0xade9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d3), 0xcf);
        EXPECT(gbc.readMem(0xade8), 0x8e);
        // 8E 0138
        gbc.setState(0xc9d3, 0xa99, 0xe600, 0xd76f, 0x1432, 0x1e19, 0x0, 0x1);
        gbc.writeMem(0x1e19, { 0xef });
        gbc.writeMem(0xc9d3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xa99);
        EXPECT(gbc.pc(), 0xc9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9d3), 0x8e);
        // 8E 0139
        gbc.setState(0x3101, 0x2c71, 0xd030, 0xf749, 0xc16e, 0x49f6, 0x1, 0x0);
        gbc.writeMem(0x3101, { 0x8e });
        gbc.writeMem(0x49f6, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2c71);
        EXPECT(gbc.pc(), 0x3102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 013A
        gbc.setState(0x8ec9, 0x7a63, 0x2ec0, 0x1286, 0xa7df, 0xddae, 0x0, 0x0);
        gbc.writeMem(0x8ec9, { 0x8e });
        gbc.writeMem(0xddae, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7a63);
        EXPECT(gbc.pc(), 0x8eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec9), 0x8e);
        EXPECT(gbc.readMem(0xddae), 0x89);
        // 8E 013B
        gbc.setState(0xa101, 0x16c8, 0x6760, 0xdb19, 0xa0d5, 0x4562, 0x1, 0x0);
        gbc.writeMem(0x4562, { 0x78 });
        gbc.writeMem(0xa101, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x16c8);
        EXPECT(gbc.pc(), 0xa102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa101), 0x8e);
        // 8E 013C
        gbc.setState(0x4885, 0xd06, 0x8d40, 0x7c60, 0xef5b, 0x4e40, 0x1, 0x1);
        gbc.writeMem(0x4885, { 0x8e });
        gbc.writeMem(0x4e40, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd06);
        EXPECT(gbc.pc(), 0x4886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 013D
        gbc.setState(0xc654, 0x1c67, 0x1000, 0x868e, 0x2c74, 0xfb21, 0x0, 0x1);
        gbc.writeMem(0xc654, { 0x8e });
        gbc.writeMem(0xfb21, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1c67);
        EXPECT(gbc.pc(), 0xc655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc654), 0x8e);
        EXPECT(gbc.readMem(0xfb21), 0x1e);
        // 8E 013E
        gbc.setState(0x7162, 0x5f6d, 0xf470, 0xc1a2, 0xcdf3, 0x7d7b, 0x0, 0x1);
        gbc.writeMem(0x7162, { 0x8e });
        gbc.writeMem(0x7d7b, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5f6d);
        EXPECT(gbc.pc(), 0x7163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 013F
        gbc.setState(0x80f3, 0xedf3, 0x2b50, 0x91a7, 0x58bf, 0x66c2, 0x1, 0x1);
        gbc.writeMem(0x66c2, { 0x71 });
        gbc.writeMem(0x80f3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xedf3);
        EXPECT(gbc.pc(), 0x80f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f3), 0x8e);
        // 8E 0141
        gbc.setState(0xbe48, 0x83dd, 0x74f0, 0x78c9, 0x861d, 0x8a1e, 0x1, 0x1);
        gbc.writeMem(0x8a1e, { 0xe });
        gbc.writeMem(0xbe48, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x83dd);
        EXPECT(gbc.pc(), 0xbe49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a1e), 0xe);
        EXPECT(gbc.readMem(0xbe48), 0x8e);
        // 8E 0142
        gbc.setState(0x4184, 0xd627, 0xff10, 0xa792, 0x6d02, 0x623a, 0x0, 0x0);
        gbc.writeMem(0x4184, { 0x8e });
        gbc.writeMem(0x623a, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd627);
        EXPECT(gbc.pc(), 0x4185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0143
        gbc.setState(0xdc8, 0x15df, 0x170, 0x60e3, 0x51e0, 0xcc8c, 0x1, 0x0);
        gbc.writeMem(0xdc8, { 0x8e });
        gbc.writeMem(0xcc8c, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x15df);
        EXPECT(gbc.pc(), 0xdc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc8c), 0xcd);
        // 8E 0144
        gbc.setState(0xbc76, 0x4bb1, 0x8c10, 0x6abe, 0xd7b8, 0x9323, 0x0, 0x1);
        gbc.writeMem(0x9323, { 0xa5 });
        gbc.writeMem(0xbc76, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4bb1);
        EXPECT(gbc.pc(), 0xbc77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9323), 0xa5);
        EXPECT(gbc.readMem(0xbc76), 0x8e);
        // 8E 0146
        gbc.setState(0xe32d, 0x597a, 0xd510, 0x527e, 0x2f58, 0xe9c6, 0x0, 0x0);
        gbc.writeMem(0xe32d, { 0x8e });
        gbc.writeMem(0xe9c6, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x597a);
        EXPECT(gbc.pc(), 0xe32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe32d), 0x8e);
        EXPECT(gbc.readMem(0xe9c6), 0x42);
        // 8E 0147
        gbc.setState(0xc5ee, 0x3279, 0x670, 0x822d, 0x2f0a, 0xae25, 0x1, 0x1);
        gbc.writeMem(0xae25, { 0x71 });
        gbc.writeMem(0xc5ee, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3279);
        EXPECT(gbc.pc(), 0xc5ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae25), 0x71);
        EXPECT(gbc.readMem(0xc5ee), 0x8e);
        // 8E 0148
        gbc.setState(0x88ff, 0x6680, 0x3ae0, 0x7590, 0x6874, 0x783e, 0x1, 0x0);
        gbc.writeMem(0x783e, { 0x5c });
        gbc.writeMem(0x88ff, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6680);
        EXPECT(gbc.pc(), 0x8900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ff), 0x8e);
        // 8E 0149
        gbc.setState(0xa7bb, 0xf4f4, 0xdd40, 0x9fc1, 0x5f0c, 0x4149, 0x1, 0x0);
        gbc.writeMem(0x4149, { 0x45 });
        gbc.writeMem(0xa7bb, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf4f4);
        EXPECT(gbc.pc(), 0xa7bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7bb), 0x8e);
        // 8E 014A
        gbc.setState(0xae8d, 0x4715, 0x4780, 0xbbe6, 0xec5c, 0x31d3, 0x1, 0x0);
        gbc.writeMem(0x31d3, { 0x99 });
        gbc.writeMem(0xae8d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4715);
        EXPECT(gbc.pc(), 0xae8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae8d), 0x8e);
        // 8E 014B
        gbc.setState(0x17b0, 0x7f6c, 0x5360, 0x9c95, 0xd7e1, 0x9807, 0x1, 0x0);
        gbc.writeMem(0x17b0, { 0x8e });
        gbc.writeMem(0x9807, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7f6c);
        EXPECT(gbc.pc(), 0x17b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9807), 0xc1);
        // 8E 014C
        gbc.setState(0x58b4, 0x1eb3, 0x63c0, 0xb298, 0x2389, 0xa460, 0x1, 0x1);
        gbc.writeMem(0x58b4, { 0x8e });
        gbc.writeMem(0xa460, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1eb3);
        EXPECT(gbc.pc(), 0x58b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa460), 0xb1);
        // 8E 014D
        gbc.setState(0xd89f, 0xb5d8, 0xca90, 0xd784, 0x8a80, 0x309f, 0x0, 0x0);
        gbc.writeMem(0x309f, { 0xbc });
        gbc.writeMem(0xd89f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb5d8);
        EXPECT(gbc.pc(), 0xd8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89f), 0x8e);
        // 8E 014E
        gbc.setState(0x6134, 0xdf71, 0x4b30, 0x33c, 0x9078, 0xa2ea, 0x1, 0x0);
        gbc.writeMem(0x6134, { 0x8e });
        gbc.writeMem(0xa2ea, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xdf71);
        EXPECT(gbc.pc(), 0x6135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ea), 0x37);
        // 8E 014F
        gbc.setState(0x193, 0x9c5f, 0x89e0, 0xe101, 0xacd4, 0x79be, 0x0, 0x0);
        gbc.writeMem(0x193, { 0x8e });
        gbc.writeMem(0x79be, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9c5f);
        EXPECT(gbc.pc(), 0x194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0150
        gbc.setState(0xfd4, 0xec3, 0xd200, 0xbca, 0x163a, 0x5d06, 0x1, 0x0);
        gbc.writeMem(0xfd4, { 0x8e });
        gbc.writeMem(0x5d06, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xec3);
        EXPECT(gbc.pc(), 0xfd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0151
        gbc.setState(0x6a38, 0x1f07, 0xb830, 0xfd78, 0x4cb8, 0x51eb, 0x0, 0x1);
        gbc.writeMem(0x51eb, { 0xa4 });
        gbc.writeMem(0x6a38, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1f07);
        EXPECT(gbc.pc(), 0x6a39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0152
        gbc.setState(0x2b38, 0x1ed0, 0x3350, 0x4dd4, 0x35df, 0xa5f5, 0x0, 0x0);
        gbc.writeMem(0x2b38, { 0x8e });
        gbc.writeMem(0xa5f5, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1ed0);
        EXPECT(gbc.pc(), 0x2b39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f5), 0xbe);
        // 8E 0153
        gbc.setState(0xd0e8, 0xc071, 0x4d0, 0xb60e, 0xdef6, 0x8043, 0x0, 0x0);
        gbc.writeMem(0x8043, { 0xb8 });
        gbc.writeMem(0xd0e8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc071);
        EXPECT(gbc.pc(), 0xd0e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8043), 0xb8);
        EXPECT(gbc.readMem(0xd0e8), 0x8e);
        // 8E 0155
        gbc.setState(0x4f99, 0x2f7a, 0x8ce0, 0x6272, 0xa293, 0x3de2, 0x0, 0x1);
        gbc.writeMem(0x3de2, { 0x38 });
        gbc.writeMem(0x4f99, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2f7a);
        EXPECT(gbc.pc(), 0x4f9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0157
        gbc.setState(0xa7ed, 0x915a, 0xc450, 0xf243, 0x6b30, 0xd4c0, 0x0, 0x0);
        gbc.writeMem(0xa7ed, { 0x8e });
        gbc.writeMem(0xd4c0, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x915a);
        EXPECT(gbc.pc(), 0xa7ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ed), 0x8e);
        EXPECT(gbc.readMem(0xd4c0), 0xca);
        // 8E 0158
        gbc.setState(0xd9a5, 0x1875, 0x9f80, 0xc1d8, 0x84c8, 0xbf18, 0x0, 0x1);
        gbc.writeMem(0xbf18, { 0x56 });
        gbc.writeMem(0xd9a5, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1875);
        EXPECT(gbc.pc(), 0xd9a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf18), 0x56);
        EXPECT(gbc.readMem(0xd9a5), 0x8e);
        // 8E 0159
        gbc.setState(0xc02, 0x1e0a, 0xf4b0, 0x34b4, 0x5f13, 0x92c, 0x0, 0x1);
        gbc.writeMem(0x92c, { 0x16 });
        gbc.writeMem(0xc02, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1e0a);
        EXPECT(gbc.pc(), 0xc03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 015A
        gbc.setState(0xb45b, 0x6f38, 0x84a0, 0x288a, 0x362e, 0xd883, 0x1, 0x0);
        gbc.writeMem(0xb45b, { 0x8e });
        gbc.writeMem(0xd883, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6f38);
        EXPECT(gbc.pc(), 0xb45c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45b), 0x8e);
        EXPECT(gbc.readMem(0xd883), 0xa3);
        // 8E 015B
        gbc.setState(0x7a0, 0xe788, 0xd770, 0x7c1f, 0xe293, 0xfe7b, 0x1, 0x0);
        gbc.writeMem(0x7a0, { 0x8e });
        gbc.writeMem(0xfe7b, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe788);
        EXPECT(gbc.pc(), 0x7a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe7b), 0x89);
        // 8E 015C
        gbc.setState(0xc06, 0x598e, 0x10b0, 0xea71, 0x482a, 0xe363, 0x0, 0x0);
        gbc.writeMem(0xc06, { 0x8e });
        gbc.writeMem(0xe363, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x598e);
        EXPECT(gbc.pc(), 0xc07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe363), 0xc8);
        // 8E 015D
        gbc.setState(0x1515, 0x8294, 0x87b0, 0x9856, 0xa5b8, 0xe066, 0x1, 0x0);
        gbc.writeMem(0x1515, { 0x8e });
        gbc.writeMem(0xe066, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8294);
        EXPECT(gbc.pc(), 0x1516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe066), 0x4b);
        // 8E 015E
        gbc.setState(0x7331, 0x8a21, 0x6f90, 0x2d72, 0x8bd3, 0xec46, 0x1, 0x0);
        gbc.writeMem(0x7331, { 0x8e });
        gbc.writeMem(0xec46, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8a21);
        EXPECT(gbc.pc(), 0x7332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec46), 0xbe);
        // 8E 015F
        gbc.setState(0x681d, 0xe06d, 0xf10, 0xf15a, 0xff6d, 0xbd8, 0x1, 0x1);
        gbc.writeMem(0xbd8, { 0xbf });
        gbc.writeMem(0x681d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe06d);
        EXPECT(gbc.pc(), 0x681e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0160
        gbc.setState(0x434b, 0xbb96, 0x750, 0xf47a, 0xcce7, 0x3ad2, 0x0, 0x1);
        gbc.writeMem(0x3ad2, { 0xf });
        gbc.writeMem(0x434b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbb96);
        EXPECT(gbc.pc(), 0x434c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0162
        gbc.setState(0x5183, 0x42a6, 0xa3f0, 0x57f2, 0x678, 0x7c1a, 0x1, 0x0);
        gbc.writeMem(0x5183, { 0x8e });
        gbc.writeMem(0x7c1a, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x42a6);
        EXPECT(gbc.pc(), 0x5184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0163
        gbc.setState(0x42ae, 0xd518, 0xd0b0, 0x936, 0x7093, 0xe172, 0x1, 0x1);
        gbc.writeMem(0x42ae, { 0x8e });
        gbc.writeMem(0xe172, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd518);
        EXPECT(gbc.pc(), 0x42af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe172), 0x93);
        // 8E 0164
        gbc.setState(0x2d8e, 0x7250, 0x3c00, 0x4417, 0x7066, 0x6b0b, 0x1, 0x1);
        gbc.writeMem(0x2d8e, { 0x8e });
        gbc.writeMem(0x6b0b, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7250);
        EXPECT(gbc.pc(), 0x2d8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0165
        gbc.setState(0xa65b, 0x177f, 0x7130, 0xb8ef, 0xb8ae, 0x89e6, 0x1, 0x1);
        gbc.writeMem(0x89e6, { 0x8 });
        gbc.writeMem(0xa65b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x177f);
        EXPECT(gbc.pc(), 0xa65c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e6), 0x8);
        EXPECT(gbc.readMem(0xa65b), 0x8e);
        // 8E 0166
        gbc.setState(0x6c2f, 0xaf51, 0x3500, 0xa094, 0xd863, 0xd962, 0x1, 0x0);
        gbc.writeMem(0x6c2f, { 0x8e });
        gbc.writeMem(0xd962, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xaf51);
        EXPECT(gbc.pc(), 0x6c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd962), 0x6a);
        // 8E 0167
        gbc.setState(0x9295, 0x6aa4, 0x8fb0, 0xbbd5, 0x5881, 0x2930, 0x0, 0x1);
        gbc.writeMem(0x2930, { 0x40 });
        gbc.writeMem(0x9295, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6aa4);
        EXPECT(gbc.pc(), 0x9296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9295), 0x8e);
        // 8E 0168
        gbc.setState(0x257e, 0x50e3, 0xf120, 0x5b51, 0x4c56, 0x32b5, 0x0, 0x1);
        gbc.writeMem(0x257e, { 0x8e });
        gbc.writeMem(0x32b5, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x50e3);
        EXPECT(gbc.pc(), 0x257f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0169
        gbc.setState(0x73e9, 0x8319, 0x2a00, 0xb9a8, 0xe01f, 0x887c, 0x1, 0x0);
        gbc.writeMem(0x73e9, { 0x8e });
        gbc.writeMem(0x887c, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8319);
        EXPECT(gbc.pc(), 0x73ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887c), 0xbb);
        // 8E 016A
        gbc.setState(0x11f4, 0xcc31, 0x8250, 0xd281, 0x48c7, 0x912f, 0x0, 0x0);
        gbc.writeMem(0x11f4, { 0x8e });
        gbc.writeMem(0x912f, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xcc31);
        EXPECT(gbc.pc(), 0x11f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912f), 0xd0);
        // 8E 016B
        gbc.setState(0xef56, 0x7114, 0x83f0, 0x34bb, 0xcf33, 0x5423, 0x0, 0x0);
        gbc.writeMem(0x5423, { 0x5e });
        gbc.writeMem(0xef56, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7114);
        EXPECT(gbc.pc(), 0xef57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef56), 0x8e);
        // 8E 016C
        gbc.setState(0x41c1, 0x1c15, 0x9f80, 0xcac7, 0x3ac2, 0x7e33, 0x1, 0x1);
        gbc.writeMem(0x41c1, { 0x8e });
        gbc.writeMem(0x7e33, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1c15);
        EXPECT(gbc.pc(), 0x41c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 016D
        gbc.setState(0x4838, 0xc42c, 0x980, 0xdc24, 0xb4c0, 0x1a7d, 0x1, 0x1);
        gbc.writeMem(0x1a7d, { 0x47 });
        gbc.writeMem(0x4838, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc42c);
        EXPECT(gbc.pc(), 0x4839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 016E
        gbc.setState(0x199b, 0xd2c4, 0x5510, 0x6246, 0x454, 0x3a50, 0x1, 0x1);
        gbc.writeMem(0x199b, { 0x8e });
        gbc.writeMem(0x3a50, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd2c4);
        EXPECT(gbc.pc(), 0x199c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 016F
        gbc.setState(0xf4a, 0x98ca, 0xc8b0, 0xfb86, 0x44a2, 0x2776, 0x1, 0x1);
        gbc.writeMem(0xf4a, { 0x8e });
        gbc.writeMem(0x2776, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x98ca);
        EXPECT(gbc.pc(), 0xf4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0170
        gbc.setState(0xb0f0, 0xbb25, 0x81b0, 0x1a46, 0xf116, 0xe766, 0x1, 0x1);
        gbc.writeMem(0xb0f0, { 0x8e });
        gbc.writeMem(0xe766, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbb25);
        EXPECT(gbc.pc(), 0xb0f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0f0), 0x8e);
        EXPECT(gbc.readMem(0xe766), 0xf);
        // 8E 0171
        gbc.setState(0xb216, 0x965c, 0x3040, 0x9d9c, 0x5cb1, 0x87ed, 0x1, 0x1);
        gbc.writeMem(0x87ed, { 0x8f });
        gbc.writeMem(0xb216, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x965c);
        EXPECT(gbc.pc(), 0xb217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ed), 0x8f);
        EXPECT(gbc.readMem(0xb216), 0x8e);
        // 8E 0172
        gbc.setState(0xe915, 0x7198, 0x5bc0, 0xae28, 0x71c3, 0xbbbe, 0x1, 0x1);
        gbc.writeMem(0xbbbe, { 0x8f });
        gbc.writeMem(0xe915, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7198);
        EXPECT(gbc.pc(), 0xe916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbbe), 0x8f);
        EXPECT(gbc.readMem(0xe915), 0x8e);
        // 8E 0173
        gbc.setState(0xac54, 0xe592, 0x75e0, 0x91ff, 0x7e5f, 0x1434, 0x0, 0x1);
        gbc.writeMem(0x1434, { 0xc8 });
        gbc.writeMem(0xac54, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe592);
        EXPECT(gbc.pc(), 0xac55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac54), 0x8e);
        // 8E 0174
        gbc.setState(0x29d0, 0x5ed7, 0x1540, 0xab7a, 0xf41f, 0x3e55, 0x0, 0x0);
        gbc.writeMem(0x29d0, { 0x8e });
        gbc.writeMem(0x3e55, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5ed7);
        EXPECT(gbc.pc(), 0x29d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0175
        gbc.setState(0x422b, 0x7829, 0xa680, 0xa8df, 0x8233, 0x65da, 0x0, 0x1);
        gbc.writeMem(0x422b, { 0x8e });
        gbc.writeMem(0x65da, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7829);
        EXPECT(gbc.pc(), 0x422c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0176
        gbc.setState(0x75f8, 0xa118, 0x8eb0, 0x64d6, 0x9064, 0x9bcb, 0x0, 0x1);
        gbc.writeMem(0x75f8, { 0x8e });
        gbc.writeMem(0x9bcb, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa118);
        EXPECT(gbc.pc(), 0x75f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bcb), 0x74);
        // 8E 0177
        gbc.setState(0xe93, 0xc76a, 0xc690, 0x13a4, 0xa138, 0xc3b, 0x1, 0x0);
        gbc.writeMem(0xc3b, { 0xb3 });
        gbc.writeMem(0xe93, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc76a);
        EXPECT(gbc.pc(), 0xe94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0178
        gbc.setState(0xdb70, 0x3cf7, 0xc9f0, 0xdfcb, 0xc4ab, 0x278e, 0x1, 0x0);
        gbc.writeMem(0x278e, { 0x71 });
        gbc.writeMem(0xdb70, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3cf7);
        EXPECT(gbc.pc(), 0xdb71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb70), 0x8e);
        // 8E 017A
        gbc.setState(0x4cef, 0x3465, 0xfc00, 0x4553, 0xe103, 0x9a3b, 0x1, 0x0);
        gbc.writeMem(0x4cef, { 0x8e });
        gbc.writeMem(0x9a3b, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3465);
        EXPECT(gbc.pc(), 0x4cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a3b), 0x2a);
        // 8E 017B
        gbc.setState(0x4b87, 0x38f5, 0x5800, 0x347d, 0x44dd, 0xaf43, 0x1, 0x0);
        gbc.writeMem(0x4b87, { 0x8e });
        gbc.writeMem(0xaf43, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x38f5);
        EXPECT(gbc.pc(), 0x4b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf43), 0xb);
        // 8E 017C
        gbc.setState(0x1d52, 0x4644, 0x53d0, 0xd2b0, 0xbb48, 0x1ad6, 0x0, 0x1);
        gbc.writeMem(0x1ad6, { 0xa0 });
        gbc.writeMem(0x1d52, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4644);
        EXPECT(gbc.pc(), 0x1d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 017D
        gbc.setState(0x2373, 0xa099, 0xdf90, 0xf905, 0x6076, 0x2bb5, 0x1, 0x0);
        gbc.writeMem(0x2373, { 0x8e });
        gbc.writeMem(0x2bb5, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa099);
        EXPECT(gbc.pc(), 0x2374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 017E
        gbc.setState(0xa08d, 0xe52b, 0x1f10, 0x9a05, 0xe09a, 0x2a1a, 0x0, 0x0);
        gbc.writeMem(0x2a1a, { 0x46 });
        gbc.writeMem(0xa08d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe52b);
        EXPECT(gbc.pc(), 0xa08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08d), 0x8e);
        // 8E 017F
        gbc.setState(0x1fb2, 0x8cba, 0x7b0, 0x2b41, 0x4600, 0x9cf0, 0x1, 0x1);
        gbc.writeMem(0x1fb2, { 0x8e });
        gbc.writeMem(0x9cf0, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8cba);
        EXPECT(gbc.pc(), 0x1fb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf0), 0x94);
        // 8E 0180
        gbc.setState(0xcd03, 0x3832, 0xe010, 0x9668, 0x7bef, 0xe072, 0x0, 0x1);
        gbc.writeMem(0xcd03, { 0x8e });
        gbc.writeMem(0xe072, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3832);
        EXPECT(gbc.pc(), 0xcd04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd03), 0x8e);
        EXPECT(gbc.readMem(0xe072), 0x99);
        // 8E 0181
        gbc.setState(0x24e7, 0x452f, 0x7370, 0x5de0, 0x373c, 0xc43a, 0x0, 0x1);
        gbc.writeMem(0x24e7, { 0x8e });
        gbc.writeMem(0xc43a, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x452f);
        EXPECT(gbc.pc(), 0x24e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc43a), 0x75);
        // 8E 0182
        gbc.setState(0x84b1, 0x25d7, 0xf560, 0xf9e6, 0x39f1, 0x91d0, 0x0, 0x0);
        gbc.writeMem(0x84b1, { 0x8e });
        gbc.writeMem(0x91d0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x25d7);
        EXPECT(gbc.pc(), 0x84b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b1), 0x8e);
        EXPECT(gbc.readMem(0x91d0), 0x78);
        // 8E 0183
        gbc.setState(0x779b, 0xd38e, 0x5ed0, 0xb48e, 0x273d, 0x365f, 0x0, 0x1);
        gbc.writeMem(0x365f, { 0x44 });
        gbc.writeMem(0x779b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd38e);
        EXPECT(gbc.pc(), 0x779c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0184
        gbc.setState(0x323, 0x580c, 0xff30, 0xe5c5, 0xdb35, 0x77d, 0x1, 0x0);
        gbc.writeMem(0x323, { 0x8e });
        gbc.writeMem(0x77d, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x580c);
        EXPECT(gbc.pc(), 0x324);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0185
        gbc.setState(0xa6de, 0xbd91, 0x22c0, 0x9069, 0xf172, 0xd406, 0x1, 0x1);
        gbc.writeMem(0xa6de, { 0x8e });
        gbc.writeMem(0xd406, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xbd91);
        EXPECT(gbc.pc(), 0xa6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6de), 0x8e);
        EXPECT(gbc.readMem(0xd406), 0x20);
        // 8E 0186
        gbc.setState(0x20b9, 0x174e, 0xc230, 0x3396, 0xad33, 0x1c02, 0x1, 0x0);
        gbc.writeMem(0x1c02, { 0xbc });
        gbc.writeMem(0x20b9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x174e);
        EXPECT(gbc.pc(), 0x20ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0187
        gbc.setState(0xc2fd, 0x973b, 0xbf10, 0xb400, 0xf194, 0x5960, 0x1, 0x1);
        gbc.writeMem(0x5960, { 0x27 });
        gbc.writeMem(0xc2fd, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x973b);
        EXPECT(gbc.pc(), 0xc2fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2fd), 0x8e);
        // 8E 0189
        gbc.setState(0xa360, 0x3e04, 0x74e0, 0x5035, 0xe848, 0xe407, 0x0, 0x0);
        gbc.writeMem(0xa360, { 0x8e });
        gbc.writeMem(0xe407, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3e04);
        EXPECT(gbc.pc(), 0xa361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa360), 0x8e);
        EXPECT(gbc.readMem(0xe407), 0x9a);
        // 8E 018A
        gbc.setState(0xc4af, 0xefcc, 0x1850, 0xfce8, 0xab6a, 0x9598, 0x0, 0x1);
        gbc.writeMem(0x9598, { 0xe3 });
        gbc.writeMem(0xc4af, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xefcc);
        EXPECT(gbc.pc(), 0xc4b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9598), 0xe3);
        EXPECT(gbc.readMem(0xc4af), 0x8e);
        // 8E 018B
        gbc.setState(0x14bb, 0x3fac, 0x3820, 0x5052, 0x6b6d, 0xa133, 0x0, 0x0);
        gbc.writeMem(0x14bb, { 0x8e });
        gbc.writeMem(0xa133, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3fac);
        EXPECT(gbc.pc(), 0x14bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa133), 0xa2);
        // 8E 018C
        gbc.setState(0x61d9, 0x13b1, 0x4000, 0xf99f, 0x9013, 0x35a4, 0x1, 0x0);
        gbc.writeMem(0x35a4, { 0xd6 });
        gbc.writeMem(0x61d9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x13b1);
        EXPECT(gbc.pc(), 0x61da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 018D
        gbc.setState(0x2a4d, 0x137b, 0xbd30, 0xf419, 0x40cd, 0x8b47, 0x0, 0x1);
        gbc.writeMem(0x2a4d, { 0x8e });
        gbc.writeMem(0x8b47, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x137b);
        EXPECT(gbc.pc(), 0x2a4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b47), 0x3);
        // 8E 018E
        gbc.setState(0xbfdf, 0x3478, 0x86c0, 0x486a, 0xeb74, 0x5ef7, 0x1, 0x1);
        gbc.writeMem(0x5ef7, { 0xdb });
        gbc.writeMem(0xbfdf, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3478);
        EXPECT(gbc.pc(), 0xbfe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfdf), 0x8e);
        // 8E 018F
        gbc.setState(0x7a3, 0x4ad1, 0x79e0, 0x29e7, 0x4be8, 0x2429, 0x0, 0x1);
        gbc.writeMem(0x7a3, { 0x8e });
        gbc.writeMem(0x2429, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4ad1);
        EXPECT(gbc.pc(), 0x7a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0190
        gbc.setState(0x5a5b, 0x1322, 0x5610, 0xe9c4, 0xafb0, 0x34e2, 0x1, 0x0);
        gbc.writeMem(0x34e2, { 0x13 });
        gbc.writeMem(0x5a5b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1322);
        EXPECT(gbc.pc(), 0x5a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0191
        gbc.setState(0xe8e6, 0xc206, 0x3950, 0xb543, 0xf2e2, 0x4370, 0x1, 0x0);
        gbc.writeMem(0x4370, { 0x7b });
        gbc.writeMem(0xe8e6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc206);
        EXPECT(gbc.pc(), 0xe8e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e6), 0x8e);
        // 8E 0192
        gbc.setState(0x87db, 0x2d4a, 0xac20, 0xc58b, 0xce15, 0x8f88, 0x1, 0x1);
        gbc.writeMem(0x87db, { 0x8e });
        gbc.writeMem(0x8f88, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2d4a);
        EXPECT(gbc.pc(), 0x87dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87db), 0x8e);
        EXPECT(gbc.readMem(0x8f88), 0x97);
        // 8E 0193
        gbc.setState(0xe1bc, 0x8cfb, 0x6390, 0x8051, 0x5085, 0x3297, 0x0, 0x0);
        gbc.writeMem(0x3297, { 0xc9 });
        gbc.writeMem(0xe1bc, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8cfb);
        EXPECT(gbc.pc(), 0xe1bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1bc), 0x8e);
        // 8E 0194
        gbc.setState(0x4906, 0x9c1d, 0xa040, 0xaf45, 0x80f5, 0x7bc1, 0x1, 0x0);
        gbc.writeMem(0x4906, { 0x8e });
        gbc.writeMem(0x7bc1, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9c1d);
        EXPECT(gbc.pc(), 0x4907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0195
        gbc.setState(0xe37d, 0xed2a, 0x2090, 0xde21, 0xdf60, 0x1a74, 0x0, 0x0);
        gbc.writeMem(0x1a74, { 0xe4 });
        gbc.writeMem(0xe37d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xed2a);
        EXPECT(gbc.pc(), 0xe37e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe37d), 0x8e);
        // 8E 0196
        gbc.setState(0x9ef7, 0x55e0, 0xf170, 0x2685, 0x6557, 0x2f7b, 0x1, 0x1);
        gbc.writeMem(0x2f7b, { 0xb1 });
        gbc.writeMem(0x9ef7, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x55e0);
        EXPECT(gbc.pc(), 0x9ef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef7), 0x8e);
        // 8E 0197
        gbc.setState(0x735, 0x4ae8, 0x4b80, 0xc642, 0xffbb, 0x2d4a, 0x1, 0x0);
        gbc.writeMem(0x735, { 0x8e });
        gbc.writeMem(0x2d4a, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4ae8);
        EXPECT(gbc.pc(), 0x736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0198
        gbc.setState(0x4291, 0x8995, 0x4cb0, 0xc609, 0xbde5, 0xde93, 0x1, 0x1);
        gbc.writeMem(0x4291, { 0x8e });
        gbc.writeMem(0xde93, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8995);
        EXPECT(gbc.pc(), 0x4292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde93), 0x3d);
        // 8E 0199
        gbc.setState(0x981e, 0x46a0, 0xaf10, 0x5412, 0xc3f5, 0x16c, 0x0, 0x0);
        gbc.writeMem(0x16c, { 0xde });
        gbc.writeMem(0x981e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x46a0);
        EXPECT(gbc.pc(), 0x981f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x981e), 0x8e);
        // 8E 019A
        gbc.setState(0xa5f2, 0x4cab, 0x1bd0, 0xfc1a, 0x7385, 0xdfb6, 0x0, 0x1);
        gbc.writeMem(0xa5f2, { 0x8e });
        gbc.writeMem(0xdfb6, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4cab);
        EXPECT(gbc.pc(), 0xa5f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f2), 0x8e);
        EXPECT(gbc.readMem(0xdfb6), 0x8a);
        // 8E 019B
        gbc.setState(0xc0b4, 0x2b09, 0xb7f0, 0x8cc3, 0xb6ee, 0x9596, 0x1, 0x0);
        gbc.writeMem(0x9596, { 0x38 });
        gbc.writeMem(0xc0b4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2b09);
        EXPECT(gbc.pc(), 0xc0b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9596), 0x38);
        EXPECT(gbc.readMem(0xc0b4), 0x8e);
        // 8E 019C
        gbc.setState(0x6f48, 0xc814, 0x330, 0x6204, 0x16ea, 0x5a33, 0x1, 0x1);
        gbc.writeMem(0x5a33, { 0xce });
        gbc.writeMem(0x6f48, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc814);
        EXPECT(gbc.pc(), 0x6f49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 019D
        gbc.setState(0x7a8f, 0x535, 0xfcd0, 0xd1b3, 0x3d19, 0xda08, 0x1, 0x1);
        gbc.writeMem(0x7a8f, { 0x8e });
        gbc.writeMem(0xda08, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x535);
        EXPECT(gbc.pc(), 0x7a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda08), 0xcb);
        // 8E 019E
        gbc.setState(0xbd14, 0x8639, 0xa2d0, 0xada1, 0xc3d1, 0x248a, 0x1, 0x0);
        gbc.writeMem(0x248a, { 0xa1 });
        gbc.writeMem(0xbd14, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8639);
        EXPECT(gbc.pc(), 0xbd15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd14), 0x8e);
        // 8E 019F
        gbc.setState(0x8c4d, 0x262a, 0x41f0, 0x40b, 0xe3d0, 0xfbe6, 0x1, 0x1);
        gbc.writeMem(0x8c4d, { 0x8e });
        gbc.writeMem(0xfbe6, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x262a);
        EXPECT(gbc.pc(), 0x8c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4d), 0x8e);
        EXPECT(gbc.readMem(0xfbe6), 0xd1);
        // 8E 01A1
        gbc.setState(0x7694, 0x54e, 0x16e0, 0x1e4c, 0xa382, 0xaecb, 0x1, 0x1);
        gbc.writeMem(0x7694, { 0x8e });
        gbc.writeMem(0xaecb, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x54e);
        EXPECT(gbc.pc(), 0x7695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaecb), 0xa4);
        // 8E 01A2
        gbc.setState(0x8b2d, 0x2268, 0xd7d0, 0x4cb6, 0xe2b2, 0xe5ed, 0x0, 0x1);
        gbc.writeMem(0x8b2d, { 0x8e });
        gbc.writeMem(0xe5ed, { 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2268);
        EXPECT(gbc.pc(), 0x8b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b2d), 0x8e);
        EXPECT(gbc.readMem(0xe5ed), 0xe5);
        // 8E 01A3
        gbc.setState(0xe6ac, 0xa208, 0x3ab0, 0x2e7c, 0xf353, 0xbf48, 0x1, 0x1);
        gbc.writeMem(0xbf48, { 0x6 });
        gbc.writeMem(0xe6ac, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa208);
        EXPECT(gbc.pc(), 0xe6ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf48), 0x6);
        EXPECT(gbc.readMem(0xe6ac), 0x8e);
        // 8E 01A4
        gbc.setState(0x5363, 0x4b93, 0x1d40, 0x916b, 0xe407, 0xfb48, 0x1, 0x1);
        gbc.writeMem(0x5363, { 0x8e });
        gbc.writeMem(0xfb48, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4b93);
        EXPECT(gbc.pc(), 0x5364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb48), 0x17);
        // 8E 01A5
        gbc.setState(0x9fce, 0xf7cb, 0x7b60, 0x9c2b, 0x1859, 0x38e0, 0x1, 0x1);
        gbc.writeMem(0x38e0, { 0x4f });
        gbc.writeMem(0x9fce, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf7cb);
        EXPECT(gbc.pc(), 0x9fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fce), 0x8e);
        // 8E 01A6
        gbc.setState(0xb614, 0x22b9, 0x9f80, 0x3b74, 0xcec3, 0x198c, 0x0, 0x0);
        gbc.writeMem(0x198c, { 0x83 });
        gbc.writeMem(0xb614, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x22b9);
        EXPECT(gbc.pc(), 0xb615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb614), 0x8e);
        // 8E 01A7
        gbc.setState(0xc833, 0x169f, 0xc7d0, 0xdeba, 0x336, 0xbcea, 0x1, 0x1);
        gbc.writeMem(0xbcea, { 0xab });
        gbc.writeMem(0xc833, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x169f);
        EXPECT(gbc.pc(), 0xc834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcea), 0xab);
        EXPECT(gbc.readMem(0xc833), 0x8e);
        // 8E 01A8
        gbc.setState(0x622, 0x8ec, 0x2b60, 0xa1e0, 0x2b7c, 0x70f1, 0x1, 0x1);
        gbc.writeMem(0x622, { 0x8e });
        gbc.writeMem(0x70f1, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8ec);
        EXPECT(gbc.pc(), 0x623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 01A9
        gbc.setState(0x6f4d, 0x91fd, 0x2b0, 0x8467, 0x91e2, 0xf43e, 0x0, 0x1);
        gbc.writeMem(0x6f4d, { 0x8e });
        gbc.writeMem(0xf43e, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x91fd);
        EXPECT(gbc.pc(), 0x6f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf43e), 0x86);
        // 8E 01AA
        gbc.setState(0xb4e3, 0x3451, 0x57c0, 0xc2e, 0x3c07, 0x3b3f, 0x0, 0x0);
        gbc.writeMem(0x3b3f, { 0x58 });
        gbc.writeMem(0xb4e3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3451);
        EXPECT(gbc.pc(), 0xb4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e3), 0x8e);
        // 8E 01AB
        gbc.setState(0xcb27, 0xc026, 0xc500, 0xab7e, 0xc588, 0x88f3, 0x0, 0x1);
        gbc.writeMem(0x88f3, { 0x6d });
        gbc.writeMem(0xcb27, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc026);
        EXPECT(gbc.pc(), 0xcb28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f3), 0x6d);
        EXPECT(gbc.readMem(0xcb27), 0x8e);
        // 8E 01AC
        gbc.setState(0x605f, 0x4a00, 0xf380, 0x78b0, 0x6488, 0x9d22, 0x0, 0x1);
        gbc.writeMem(0x605f, { 0x8e });
        gbc.writeMem(0x9d22, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4a00);
        EXPECT(gbc.pc(), 0x6060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d22), 0xa4);
        // 8E 01AD
        gbc.setState(0x55b3, 0xd06c, 0xd230, 0x6c73, 0xc276, 0x30dc, 0x0, 0x1);
        gbc.writeMem(0x30dc, { 0x47 });
        gbc.writeMem(0x55b3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd06c);
        EXPECT(gbc.pc(), 0x55b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 01AE
        gbc.setState(0xd1b8, 0x53f9, 0x3f00, 0xda61, 0xbbdd, 0x53b1, 0x1, 0x0);
        gbc.writeMem(0x53b1, { 0x9 });
        gbc.writeMem(0xd1b8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x53f9);
        EXPECT(gbc.pc(), 0xd1b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b8), 0x8e);
        // 8E 01AF
        gbc.setState(0x3191, 0xc4a4, 0xb340, 0xf621, 0x87b1, 0xb106, 0x1, 0x1);
        gbc.writeMem(0x3191, { 0x8e });
        gbc.writeMem(0xb106, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc4a4);
        EXPECT(gbc.pc(), 0x3192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb106), 0xc4);
        // 8E 01B0
        gbc.setState(0x7551, 0xb492, 0x8c60, 0x5dd4, 0x5a9f, 0xf80, 0x0, 0x0);
        gbc.writeMem(0xf80, { 0x8a });
        gbc.writeMem(0x7551, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb492);
        EXPECT(gbc.pc(), 0x7552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 01B1
        gbc.setState(0xb9f7, 0x22ed, 0xa730, 0xf044, 0xfb8, 0xf41b, 0x0, 0x0);
        gbc.writeMem(0xb9f7, { 0x8e });
        gbc.writeMem(0xf41b, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x22ed);
        EXPECT(gbc.pc(), 0xb9f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f7), 0x8e);
        EXPECT(gbc.readMem(0xf41b), 0xd5);
        // 8E 01B2
        gbc.setState(0x169, 0x83ca, 0x3a80, 0xf350, 0x7a2a, 0x789f, 0x0, 0x0);
        gbc.writeMem(0x169, { 0x8e });
        gbc.writeMem(0x789f, { 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x83ca);
        EXPECT(gbc.pc(), 0x16a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 01B3
        gbc.setState(0x4cef, 0x828e, 0xc4b0, 0x9e44, 0xbc77, 0x51f0, 0x0, 0x0);
        gbc.writeMem(0x4cef, { 0x8e });
        gbc.writeMem(0x51f0, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x828e);
        EXPECT(gbc.pc(), 0x4cf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 01B5
        gbc.setState(0x5152, 0x54b3, 0xaf70, 0xf825, 0xc5d8, 0xe18b, 0x0, 0x1);
        gbc.writeMem(0x5152, { 0x8e });
        gbc.writeMem(0xe18b, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x54b3);
        EXPECT(gbc.pc(), 0x5153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe18b), 0xd);
        // 8E 01B6
        gbc.setState(0x934d, 0x1aa7, 0xef80, 0xde8e, 0x5b53, 0x9014, 0x0, 0x0);
        gbc.writeMem(0x9014, { 0x26 });
        gbc.writeMem(0x934d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1aa7);
        EXPECT(gbc.pc(), 0x934e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9014), 0x26);
        EXPECT(gbc.readMem(0x934d), 0x8e);
        // 8E 01B8
        gbc.setState(0x651, 0x1624, 0x4e00, 0x269f, 0xc841, 0xa728, 0x1, 0x0);
        gbc.writeMem(0x651, { 0x8e });
        gbc.writeMem(0xa728, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1624);
        EXPECT(gbc.pc(), 0x652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa728), 0x5d);
        // 8E 01B9
        gbc.setState(0xebc8, 0x6b47, 0x1bf0, 0xabd5, 0x4245, 0x8eb0, 0x0, 0x1);
        gbc.writeMem(0x8eb0, { 0x12 });
        gbc.writeMem(0xebc8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6b47);
        EXPECT(gbc.pc(), 0xebc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb0), 0x12);
        EXPECT(gbc.readMem(0xebc8), 0x8e);
        // 8E 01BA
        gbc.setState(0x4775, 0xee0d, 0x82e0, 0xf363, 0x5fd7, 0xeca3, 0x1, 0x0);
        gbc.writeMem(0x4775, { 0x8e });
        gbc.writeMem(0xeca3, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xee0d);
        EXPECT(gbc.pc(), 0x4776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca3), 0x98);
        // 8E 01BC
        gbc.setState(0xcc6e, 0x53b4, 0x890, 0xcb6b, 0xbc8a, 0xca0c, 0x1, 0x1);
        gbc.writeMem(0xca0c, { 0xda });
        gbc.writeMem(0xcc6e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x53b4);
        EXPECT(gbc.pc(), 0xcc6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca0c), 0xda);
        EXPECT(gbc.readMem(0xcc6e), 0x8e);
        // 8E 01BD
        gbc.setState(0xafde, 0x5163, 0x9650, 0x6c98, 0x87fa, 0xb307, 0x0, 0x1);
        gbc.writeMem(0xafde, { 0x8e });
        gbc.writeMem(0xb307, { 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5163);
        EXPECT(gbc.pc(), 0xafdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafde), 0x8e);
        EXPECT(gbc.readMem(0xb307), 0xe8);
        // 8E 01BE
        gbc.setState(0xbc4c, 0xa065, 0x7850, 0x3a5e, 0xde7d, 0xf64c, 0x1, 0x0);
        gbc.writeMem(0xbc4c, { 0x8e });
        gbc.writeMem(0xf64c, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa065);
        EXPECT(gbc.pc(), 0xbc4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc4c), 0x8e);
        EXPECT(gbc.readMem(0xf64c), 0xce);
        // 8E 01BF
        gbc.setState(0x35ca, 0x4a92, 0x2250, 0xceaf, 0xeb04, 0x2776, 0x0, 0x1);
        gbc.writeMem(0x2776, { 0x67 });
        gbc.writeMem(0x35ca, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4a92);
        EXPECT(gbc.pc(), 0x35cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 01C0
        gbc.setState(0xb9b5, 0x24d4, 0x5310, 0x3cfb, 0xabdd, 0x763, 0x1, 0x1);
        gbc.writeMem(0x763, { 0xb4 });
        gbc.writeMem(0xb9b5, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x24d4);
        EXPECT(gbc.pc(), 0xb9b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b5), 0x8e);
        // 8E 01C1
        gbc.setState(0x6e3a, 0x63cb, 0xcc30, 0x6573, 0xaffe, 0x4cd5, 0x0, 0x0);
        gbc.writeMem(0x4cd5, { 0x81 });
        gbc.writeMem(0x6e3a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x63cb);
        EXPECT(gbc.pc(), 0x6e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 01C2
        gbc.setState(0x3b05, 0xee45, 0x2290, 0xc9b2, 0x4fea, 0x41d3, 0x1, 0x1);
        gbc.writeMem(0x3b05, { 0x8e });
        gbc.writeMem(0x41d3, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xee45);
        EXPECT(gbc.pc(), 0x3b06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 01C3
        gbc.setState(0x7d79, 0x329, 0x6ba0, 0x88a3, 0xd26c, 0xadab, 0x1, 0x0);
        gbc.writeMem(0x7d79, { 0x8e });
        gbc.writeMem(0xadab, { 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x329);
        EXPECT(gbc.pc(), 0x7d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadab), 0x4);
        // 8E 01C4
        gbc.setState(0x4bb2, 0xd0a4, 0x38a0, 0x2813, 0x835c, 0xea6a, 0x1, 0x1);
        gbc.writeMem(0x4bb2, { 0x8e });
        gbc.writeMem(0xea6a, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd0a4);
        EXPECT(gbc.pc(), 0x4bb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea6a), 0xfa);
        // 8E 01C5
        gbc.setState(0xb8ae, 0x532e, 0x7c60, 0x262d, 0x8969, 0x9f1, 0x0, 0x0);
        gbc.writeMem(0x9f1, { 0x43 });
        gbc.writeMem(0xb8ae, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x532e);
        EXPECT(gbc.pc(), 0xb8af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ae), 0x8e);
        // 8E 01C6
        gbc.setState(0x144e, 0xd0ba, 0x6510, 0xf066, 0xef42, 0x80f3, 0x0, 0x1);
        gbc.writeMem(0x144e, { 0x8e });
        gbc.writeMem(0x80f3, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd0ba);
        EXPECT(gbc.pc(), 0x144f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f3), 0x88);
        // 8E 01C7
        gbc.setState(0x37bb, 0x39c4, 0x2540, 0x6545, 0x8254, 0xff20, 0x1, 0x0);
        gbc.writeMem(0x37bb, { 0x8e });
        gbc.writeMem(0xff20, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x39c4);
        EXPECT(gbc.pc(), 0x37bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff20), 0xec);
        // 8E 01C8
        gbc.setState(0x7bd4, 0xfb5a, 0xcd50, 0x1308, 0x67a9, 0x6a6a, 0x1, 0x0);
        gbc.writeMem(0x6a6a, { 0xa0 });
        gbc.writeMem(0x7bd4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfb5a);
        EXPECT(gbc.pc(), 0x7bd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 01C9
        gbc.setState(0x5c66, 0xb71, 0xb320, 0x89c5, 0x4ff3, 0xd57f, 0x0, 0x0);
        gbc.writeMem(0x5c66, { 0x8e });
        gbc.writeMem(0xd57f, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb71);
        EXPECT(gbc.pc(), 0x5c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd57f), 0x36);
        // 8E 01CA
        gbc.setState(0xbbfa, 0x2a2f, 0xb050, 0xd692, 0x5348, 0xc1ea, 0x1, 0x0);
        gbc.writeMem(0xbbfa, { 0x8e });
        gbc.writeMem(0xc1ea, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2a2f);
        EXPECT(gbc.pc(), 0xbbfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbfa), 0x8e);
        EXPECT(gbc.readMem(0xc1ea), 0x57);
        // 8E 01CB
        gbc.setState(0x9576, 0xadf3, 0xc330, 0xe379, 0xe02c, 0xb60e, 0x0, 0x0);
        gbc.writeMem(0x9576, { 0x8e });
        gbc.writeMem(0xb60e, { 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xadf3);
        EXPECT(gbc.pc(), 0x9577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9576), 0x8e);
        EXPECT(gbc.readMem(0xb60e), 0xac);
        // 8E 01CC
        gbc.setState(0x9e9e, 0xe1f0, 0x92e0, 0xb51a, 0xebf6, 0x9b52, 0x0, 0x0);
        gbc.writeMem(0x9b52, { 0xa1 });
        gbc.writeMem(0x9e9e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe1f0);
        EXPECT(gbc.pc(), 0x9e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b52), 0xa1);
        EXPECT(gbc.readMem(0x9e9e), 0x8e);
        // 8E 01CD
        gbc.setState(0xb957, 0xb9f0, 0x1c0, 0x3b3b, 0x7b57, 0x470f, 0x0, 0x0);
        gbc.writeMem(0x470f, { 0x61 });
        gbc.writeMem(0xb957, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb9f0);
        EXPECT(gbc.pc(), 0xb958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb957), 0x8e);
        // 8E 01CE
        gbc.setState(0x557a, 0x1075, 0xd880, 0xdc9b, 0xc37c, 0x46a9, 0x0, 0x0);
        gbc.writeMem(0x46a9, { 0x6f });
        gbc.writeMem(0x557a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1075);
        EXPECT(gbc.pc(), 0x557b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 01CF
        gbc.setState(0x255c, 0x2325, 0xb430, 0xbea7, 0x290, 0xa8dc, 0x1, 0x0);
        gbc.writeMem(0x255c, { 0x8e });
        gbc.writeMem(0xa8dc, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2325);
        EXPECT(gbc.pc(), 0x255d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8dc), 0x5c);
        // 8E 01D0
        gbc.setState(0x862f, 0xaf50, 0x8850, 0xa6e3, 0x6508, 0x2000, 0x0, 0x0);
        gbc.writeMem(0x2000, { 0xb1 });
        gbc.writeMem(0x862f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xaf50);
        EXPECT(gbc.pc(), 0x8630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x862f), 0x8e);
        // 8E 01D1
        gbc.setState(0xbf85, 0x7777, 0x9a20, 0xd4c9, 0x8bee, 0x914c, 0x0, 0x0);
        gbc.writeMem(0x914c, { 0x3 });
        gbc.writeMem(0xbf85, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7777);
        EXPECT(gbc.pc(), 0xbf86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x914c), 0x3);
        EXPECT(gbc.readMem(0xbf85), 0x8e);
        // 8E 01D2
        gbc.setState(0x24c5, 0x73bb, 0x6d50, 0x4aaa, 0x574f, 0x2164, 0x1, 0x0);
        gbc.writeMem(0x2164, { 0x50 });
        gbc.writeMem(0x24c5, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x73bb);
        EXPECT(gbc.pc(), 0x24c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 01D3
        gbc.setState(0x54e0, 0x19f8, 0xd390, 0x2c69, 0xba3, 0xf1a0, 0x0, 0x0);
        gbc.writeMem(0x54e0, { 0x8e });
        gbc.writeMem(0xf1a0, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x19f8);
        EXPECT(gbc.pc(), 0x54e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf1a0), 0x33);
        // 8E 01D4
        gbc.setState(0x76ef, 0x756, 0xfbc0, 0x3426, 0x2c4b, 0x114d, 0x0, 0x0);
        gbc.writeMem(0x114d, { 0x49 });
        gbc.writeMem(0x76ef, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x756);
        EXPECT(gbc.pc(), 0x76f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 01D5
        gbc.setState(0xb404, 0xbf73, 0x6a60, 0x1fb1, 0xde41, 0xabc7, 0x1, 0x0);
        gbc.writeMem(0xabc7, { 0xc8 });
        gbc.writeMem(0xb404, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbf73);
        EXPECT(gbc.pc(), 0xb405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc7), 0xc8);
        EXPECT(gbc.readMem(0xb404), 0x8e);
        // 8E 01D6
        gbc.setState(0x16dd, 0x8a7c, 0x6780, 0x824c, 0xe7ef, 0x5ccd, 0x1, 0x0);
        gbc.writeMem(0x16dd, { 0x8e });
        gbc.writeMem(0x5ccd, { 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8a7c);
        EXPECT(gbc.pc(), 0x16de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 01D7
        gbc.setState(0x8183, 0x2648, 0x19b0, 0x7498, 0x7f17, 0x43e2, 0x0, 0x1);
        gbc.writeMem(0x43e2, { 0x27 });
        gbc.writeMem(0x8183, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2648);
        EXPECT(gbc.pc(), 0x8184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8183), 0x8e);
        // 8E 01D8
        gbc.setState(0xa01, 0xa2c, 0x7780, 0xae34, 0x44a5, 0x108d, 0x1, 0x0);
        gbc.writeMem(0xa01, { 0x8e });
        gbc.writeMem(0x108d, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa2c);
        EXPECT(gbc.pc(), 0xa02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 01D9
        gbc.setState(0x2ad3, 0x134d, 0xd080, 0x87f9, 0x2ccf, 0x1a58, 0x0, 0x0);
        gbc.writeMem(0x1a58, { 0xaa });
        gbc.writeMem(0x2ad3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x134d);
        EXPECT(gbc.pc(), 0x2ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 01DA
        gbc.setState(0x9031, 0x5b8d, 0x4220, 0xfa5e, 0xda5c, 0xff65, 0x0, 0x1);
        gbc.writeMem(0x9031, { 0x8e });
        gbc.writeMem(0xff65, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5b8d);
        EXPECT(gbc.pc(), 0x9032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9031), 0x8e);
        EXPECT(gbc.readMem(0xff65), 0xae);
        // 8E 01DB
        gbc.setState(0xeb16, 0x7c83, 0xd4d0, 0x9935, 0x3a26, 0x672b, 0x0, 0x1);
        gbc.writeMem(0x672b, { 0xb0 });
        gbc.writeMem(0xeb16, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7c83);
        EXPECT(gbc.pc(), 0xeb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb16), 0x8e);
        // 8E 01DC
        gbc.setState(0xc635, 0x88c6, 0x39e0, 0x9bc2, 0x8c15, 0x9e15, 0x1, 0x0);
        gbc.writeMem(0x9e15, { 0x60 });
        gbc.writeMem(0xc635, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x88c6);
        EXPECT(gbc.pc(), 0xc636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e15), 0x60);
        EXPECT(gbc.readMem(0xc635), 0x8e);
        // 8E 01DD
        gbc.setState(0xde2a, 0x33a6, 0xcb30, 0x6040, 0x90f5, 0x4912, 0x0, 0x0);
        gbc.writeMem(0x4912, { 0xad });
        gbc.writeMem(0xde2a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x33a6);
        EXPECT(gbc.pc(), 0xde2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde2a), 0x8e);
        // 8E 01DE
        gbc.setState(0x4336, 0x3171, 0xc630, 0x7046, 0x66e2, 0x18ef, 0x1, 0x0);
        gbc.writeMem(0x18ef, { 0x59 });
        gbc.writeMem(0x4336, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3171);
        EXPECT(gbc.pc(), 0x4337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 01E0
        gbc.setState(0x9134, 0x9aa7, 0xd2e0, 0xf08e, 0xd3a4, 0x4b6, 0x0, 0x0);
        gbc.writeMem(0x4b6, { 0xc8 });
        gbc.writeMem(0x9134, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9aa7);
        EXPECT(gbc.pc(), 0x9135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9134), 0x8e);
        // 8E 01E1
        gbc.setState(0xdc8e, 0x58b6, 0xbd30, 0xff74, 0x17b6, 0x1fd8, 0x0, 0x0);
        gbc.writeMem(0x1fd8, { 0xf5 });
        gbc.writeMem(0xdc8e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x58b6);
        EXPECT(gbc.pc(), 0xdc8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc8e), 0x8e);
        // 8E 01E2
        gbc.setState(0x5a33, 0x87ae, 0x45f0, 0xa344, 0xd87a, 0x589f, 0x0, 0x1);
        gbc.writeMem(0x589f, { 0x7b });
        gbc.writeMem(0x5a33, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x87ae);
        EXPECT(gbc.pc(), 0x5a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 01E3
        gbc.setState(0xb1a6, 0x263f, 0xfd60, 0xecff, 0xdd61, 0xe7f2, 0x0, 0x1);
        gbc.writeMem(0xb1a6, { 0x8e });
        gbc.writeMem(0xe7f2, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x263f);
        EXPECT(gbc.pc(), 0xb1a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a6), 0x8e);
        EXPECT(gbc.readMem(0xe7f2), 0xaf);
        // 8E 01E4
        gbc.setState(0x7d4a, 0x1f48, 0x38c0, 0x30ff, 0x3539, 0xdfd2, 0x0, 0x1);
        gbc.writeMem(0x7d4a, { 0x8e });
        gbc.writeMem(0xdfd2, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1f48);
        EXPECT(gbc.pc(), 0x7d4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfd2), 0x3);
        // 8E 01E5
        gbc.setState(0x3ec2, 0x4949, 0x9d0, 0xa1e0, 0x140b, 0xc33c, 0x1, 0x1);
        gbc.writeMem(0x3ec2, { 0x8e });
        gbc.writeMem(0xc33c, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4949);
        EXPECT(gbc.pc(), 0x3ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc33c), 0xf2);
        // 8E 01E6
        gbc.setState(0x93f8, 0xbe47, 0x6670, 0xc0d9, 0xda54, 0x22e4, 0x1, 0x0);
        gbc.writeMem(0x22e4, { 0xa7 });
        gbc.writeMem(0x93f8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbe47);
        EXPECT(gbc.pc(), 0x93f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f8), 0x8e);
        // 8E 01E7
        gbc.setState(0x933f, 0x72d4, 0x6fa0, 0x7194, 0xa914, 0xcdbd, 0x0, 0x1);
        gbc.writeMem(0x933f, { 0x8e });
        gbc.writeMem(0xcdbd, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x72d4);
        EXPECT(gbc.pc(), 0x9340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x933f), 0x8e);
        EXPECT(gbc.readMem(0xcdbd), 0xaf);
        // 8E 01E8
        gbc.setState(0xd09a, 0x84ce, 0x6820, 0xfaef, 0xe168, 0x57d8, 0x1, 0x0);
        gbc.writeMem(0x57d8, { 0xa1 });
        gbc.writeMem(0xd09a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x84ce);
        EXPECT(gbc.pc(), 0xd09b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd09a), 0x8e);
        // 8E 01E9
        gbc.setState(0xebe9, 0xd0d4, 0x8e90, 0xb440, 0x2900, 0xecdd, 0x1, 0x0);
        gbc.writeMem(0xebe9, { 0x8e });
        gbc.writeMem(0xecdd, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd0d4);
        EXPECT(gbc.pc(), 0xebea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebe9), 0x8e);
        EXPECT(gbc.readMem(0xecdd), 0x32);
        // 8E 01EA
        gbc.setState(0x4e1c, 0xed73, 0xe650, 0x7aec, 0x50ce, 0x982a, 0x0, 0x0);
        gbc.writeMem(0x4e1c, { 0x8e });
        gbc.writeMem(0x982a, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xed73);
        EXPECT(gbc.pc(), 0x4e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x982a), 0x20);
        // 8E 01EB
        gbc.setState(0x1a0b, 0x2268, 0xbb00, 0x6ce8, 0x610f, 0xe63f, 0x0, 0x0);
        gbc.writeMem(0x1a0b, { 0x8e });
        gbc.writeMem(0xe63f, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2268);
        EXPECT(gbc.pc(), 0x1a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe63f), 0x6e);
        // 8E 01EC
        gbc.setState(0xb62e, 0xed2b, 0x34b0, 0xa799, 0x51, 0x9f8c, 0x1, 0x1);
        gbc.writeMem(0x9f8c, { 0x6d });
        gbc.writeMem(0xb62e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xed2b);
        EXPECT(gbc.pc(), 0xb62f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f8c), 0x6d);
        EXPECT(gbc.readMem(0xb62e), 0x8e);
        // 8E 01ED
        gbc.setState(0x49ec, 0x8622, 0xadb0, 0x8587, 0x806, 0x3305, 0x1, 0x0);
        gbc.writeMem(0x3305, { 0xd0 });
        gbc.writeMem(0x49ec, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8622);
        EXPECT(gbc.pc(), 0x49ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 01EE
        gbc.setState(0x16a4, 0x73da, 0x9e60, 0xfb5b, 0x2a5f, 0x37a4, 0x1, 0x0);
        gbc.writeMem(0x16a4, { 0x8e });
        gbc.writeMem(0x37a4, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x73da);
        EXPECT(gbc.pc(), 0x16a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 01EF
        gbc.setState(0xb55e, 0x40c5, 0xe130, 0xea6e, 0x826f, 0xfbe8, 0x0, 0x0);
        gbc.writeMem(0xb55e, { 0x8e });
        gbc.writeMem(0xfbe8, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x40c5);
        EXPECT(gbc.pc(), 0xb55f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb55e), 0x8e);
        EXPECT(gbc.readMem(0xfbe8), 0x37);
        // 8E 01F0
        gbc.setState(0x53b8, 0x814b, 0x4860, 0x399, 0x3ebe, 0x460e, 0x0, 0x1);
        gbc.writeMem(0x460e, { 0x3a });
        gbc.writeMem(0x53b8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x814b);
        EXPECT(gbc.pc(), 0x53b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 01F1
        gbc.setState(0x29e1, 0x963f, 0x19f0, 0x78b9, 0xecd7, 0xc140, 0x0, 0x0);
        gbc.writeMem(0x29e1, { 0x8e });
        gbc.writeMem(0xc140, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x963f);
        EXPECT(gbc.pc(), 0x29e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc140), 0xf0);
        // 8E 01F2
        gbc.setState(0x4e6, 0xbfe4, 0x7000, 0xb3bd, 0x7029, 0xa514, 0x0, 0x1);
        gbc.writeMem(0x4e6, { 0x8e });
        gbc.writeMem(0xa514, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xbfe4);
        EXPECT(gbc.pc(), 0x4e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa514), 0xdf);
        // 8E 01F3
        gbc.setState(0x4391, 0x284f, 0xfd40, 0x639, 0x1ca6, 0xbd18, 0x1, 0x0);
        gbc.writeMem(0x4391, { 0x8e });
        gbc.writeMem(0xbd18, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x284f);
        EXPECT(gbc.pc(), 0x4392);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd18), 0xbf);
        // 8E 01F4
        gbc.setState(0x52da, 0x94f9, 0xa10, 0x1b7b, 0x5d1b, 0xc48b, 0x0, 0x0);
        gbc.writeMem(0x52da, { 0x8e });
        gbc.writeMem(0xc48b, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x94f9);
        EXPECT(gbc.pc(), 0x52db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48b), 0x25);
        // 8E 01F5
        gbc.setState(0xde4, 0xf5b1, 0xe70, 0xe792, 0xd772, 0xfe6c, 0x0, 0x0);
        gbc.writeMem(0xde4, { 0x8e });
        gbc.writeMem(0xfe6c, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf5b1);
        EXPECT(gbc.pc(), 0xde5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe6c), 0x60);
        // 8E 01F6
        gbc.setState(0x4ac0, 0xde20, 0x7810, 0xc592, 0xe5a8, 0x52e8, 0x0, 0x1);
        gbc.writeMem(0x4ac0, { 0x8e });
        gbc.writeMem(0x52e8, { 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xde20);
        EXPECT(gbc.pc(), 0x4ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 01F7
        gbc.setState(0x5953, 0x80c1, 0xb810, 0x1c0d, 0x4ae8, 0xf552, 0x0, 0x0);
        gbc.writeMem(0x5953, { 0x8e });
        gbc.writeMem(0xf552, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x80c1);
        EXPECT(gbc.pc(), 0x5954);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf552), 0x40);
        // 8E 01F9
        gbc.setState(0x7cfb, 0xc62c, 0xa50, 0x235d, 0x9ba5, 0x94aa, 0x0, 0x0);
        gbc.writeMem(0x7cfb, { 0x8e });
        gbc.writeMem(0x94aa, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc62c);
        EXPECT(gbc.pc(), 0x7cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94aa), 0x6f);
        // 8E 01FA
        gbc.setState(0xc6b3, 0xdf19, 0x5740, 0x31c8, 0xf6db, 0xe8ee, 0x0, 0x0);
        gbc.writeMem(0xc6b3, { 0x8e });
        gbc.writeMem(0xe8ee, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdf19);
        EXPECT(gbc.pc(), 0xc6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b3), 0x8e);
        EXPECT(gbc.readMem(0xe8ee), 0xe9);
        // 8E 01FB
        gbc.setState(0x1349, 0x98c, 0x5ee0, 0x137d, 0x37a9, 0xf344, 0x1, 0x0);
        gbc.writeMem(0x1349, { 0x8e });
        gbc.writeMem(0xf344, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x98c);
        EXPECT(gbc.pc(), 0x134a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf344), 0xce);
        // 8E 01FD
        gbc.setState(0x9c76, 0xd489, 0xef60, 0xa9bf, 0x7286, 0x3454, 0x0, 0x1);
        gbc.writeMem(0x3454, { 0xa5 });
        gbc.writeMem(0x9c76, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd489);
        EXPECT(gbc.pc(), 0x9c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c76), 0x8e);
        // 8E 01FE
        gbc.setState(0x154d, 0xc4e8, 0x47a0, 0x7916, 0xa244, 0x6d63, 0x1, 0x1);
        gbc.writeMem(0x154d, { 0x8e });
        gbc.writeMem(0x6d63, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc4e8);
        EXPECT(gbc.pc(), 0x154e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 01FF
        gbc.setState(0x92c9, 0xd2c2, 0x10, 0x6b31, 0xfb0f, 0xfd77, 0x0, 0x0);
        gbc.writeMem(0x92c9, { 0x8e });
        gbc.writeMem(0xfd77, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd2c2);
        EXPECT(gbc.pc(), 0x92ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c9), 0x8e);
        EXPECT(gbc.readMem(0xfd77), 0x40);
        // 8E 0200
        gbc.setState(0x843e, 0xb6dc, 0x1bd0, 0x3452, 0xd98b, 0xc592, 0x0, 0x0);
        gbc.writeMem(0x843e, { 0x8e });
        gbc.writeMem(0xc592, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb6dc);
        EXPECT(gbc.pc(), 0x843f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x843e), 0x8e);
        EXPECT(gbc.readMem(0xc592), 0x7c);
        // 8E 0201
        gbc.setState(0xb86e, 0x571a, 0xc940, 0x1693, 0x2072, 0xec94, 0x0, 0x1);
        gbc.writeMem(0xb86e, { 0x8e });
        gbc.writeMem(0xec94, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x571a);
        EXPECT(gbc.pc(), 0xb86f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb86e), 0x8e);
        EXPECT(gbc.readMem(0xec94), 0x84);
        // 8E 0202
        gbc.setState(0x7cae, 0x2589, 0xff10, 0xe2df, 0xc762, 0x31a4, 0x0, 0x0);
        gbc.writeMem(0x31a4, { 0xce });
        gbc.writeMem(0x7cae, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2589);
        EXPECT(gbc.pc(), 0x7caf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0203
        gbc.setState(0x715d, 0x520f, 0x440, 0xbb85, 0x4fe5, 0x7594, 0x0, 0x0);
        gbc.writeMem(0x715d, { 0x8e });
        gbc.writeMem(0x7594, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x520f);
        EXPECT(gbc.pc(), 0x715e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0204
        gbc.setState(0xe5e9, 0x7df7, 0xb850, 0xac66, 0x29b5, 0xbbc5, 0x0, 0x1);
        gbc.writeMem(0xbbc5, { 0x34 });
        gbc.writeMem(0xe5e9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7df7);
        EXPECT(gbc.pc(), 0xe5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc5), 0x34);
        EXPECT(gbc.readMem(0xe5e9), 0x8e);
        // 8E 0205
        gbc.setState(0x609a, 0x715b, 0x2820, 0x154d, 0xd4c7, 0x21c9, 0x0, 0x1);
        gbc.writeMem(0x21c9, { 0x37 });
        gbc.writeMem(0x609a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x715b);
        EXPECT(gbc.pc(), 0x609b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0206
        gbc.setState(0x1a64, 0x30a4, 0x2990, 0x5a50, 0xdea6, 0x7d2e, 0x1, 0x0);
        gbc.writeMem(0x1a64, { 0x8e });
        gbc.writeMem(0x7d2e, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x30a4);
        EXPECT(gbc.pc(), 0x1a65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0207
        gbc.setState(0xda00, 0xa9d8, 0x5190, 0x85a0, 0x470e, 0xf2ab, 0x1, 0x1);
        gbc.writeMem(0xda00, { 0x8e });
        gbc.writeMem(0xf2ab, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa9d8);
        EXPECT(gbc.pc(), 0xda01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda00), 0x8e);
        EXPECT(gbc.readMem(0xf2ab), 0x9);
        // 8E 0208
        gbc.setState(0xce80, 0xf0b8, 0x13e0, 0x6552, 0x2184, 0xd8cc, 0x0, 0x1);
        gbc.writeMem(0xce80, { 0x8e });
        gbc.writeMem(0xd8cc, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf0b8);
        EXPECT(gbc.pc(), 0xce81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce80), 0x8e);
        EXPECT(gbc.readMem(0xd8cc), 0xae);
        // 8E 0209
        gbc.setState(0x2e93, 0x644a, 0x7810, 0x85cb, 0xb774, 0x52a8, 0x0, 0x0);
        gbc.writeMem(0x2e93, { 0x8e });
        gbc.writeMem(0x52a8, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x644a);
        EXPECT(gbc.pc(), 0x2e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 020A
        gbc.setState(0x7d26, 0x47e6, 0x9f50, 0x8760, 0x2c2a, 0xbd80, 0x0, 0x1);
        gbc.writeMem(0x7d26, { 0x8e });
        gbc.writeMem(0xbd80, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x47e6);
        EXPECT(gbc.pc(), 0x7d27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd80), 0xb9);
        // 8E 020C
        gbc.setState(0x3c0c, 0x7f46, 0xd0b0, 0x277d, 0x671b, 0x6777, 0x1, 0x0);
        gbc.writeMem(0x3c0c, { 0x8e });
        gbc.writeMem(0x6777, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7f46);
        EXPECT(gbc.pc(), 0x3c0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 020E
        gbc.setState(0xb04b, 0xd4c0, 0x2460, 0x217, 0x8890, 0x2324, 0x0, 0x1);
        gbc.writeMem(0x2324, { 0x75 });
        gbc.writeMem(0xb04b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd4c0);
        EXPECT(gbc.pc(), 0xb04c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb04b), 0x8e);
        // 8E 020F
        gbc.setState(0xf50, 0xcdf5, 0x9560, 0xdd15, 0xe556, 0x1e33, 0x0, 0x1);
        gbc.writeMem(0xf50, { 0x8e });
        gbc.writeMem(0x1e33, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcdf5);
        EXPECT(gbc.pc(), 0xf51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0210
        gbc.setState(0xe75d, 0xb8d5, 0x860, 0x817b, 0x4420, 0xe8f8, 0x1, 0x0);
        gbc.writeMem(0xe75d, { 0x8e });
        gbc.writeMem(0xe8f8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb8d5);
        EXPECT(gbc.pc(), 0xe75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75d), 0x8e);
        EXPECT(gbc.readMem(0xe8f8), 0x0);
        // 8E 0211
        gbc.setState(0x64de, 0xbe39, 0xdea0, 0x5fcb, 0x3604, 0xe645, 0x1, 0x0);
        gbc.writeMem(0x64de, { 0x8e });
        gbc.writeMem(0xe645, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbe39);
        EXPECT(gbc.pc(), 0x64df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe645), 0xa0);
        // 8E 0212
        gbc.setState(0x9dd4, 0x7aee, 0xffa0, 0x90df, 0x91c3, 0x36a9, 0x1, 0x0);
        gbc.writeMem(0x36a9, { 0xdb });
        gbc.writeMem(0x9dd4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7aee);
        EXPECT(gbc.pc(), 0x9dd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd4), 0x8e);
        // 8E 0213
        gbc.setState(0x6ac9, 0xfce7, 0x7c80, 0x9d02, 0x86d9, 0x3f27, 0x1, 0x0);
        gbc.writeMem(0x3f27, { 0x69 });
        gbc.writeMem(0x6ac9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfce7);
        EXPECT(gbc.pc(), 0x6aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0214
        gbc.setState(0xda4a, 0x32f4, 0x8620, 0x7ef5, 0x92e2, 0x6aee, 0x0, 0x0);
        gbc.writeMem(0x6aee, { 0xd1 });
        gbc.writeMem(0xda4a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x32f4);
        EXPECT(gbc.pc(), 0xda4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda4a), 0x8e);
        // 8E 0215
        gbc.setState(0xb2d9, 0x4617, 0x29e0, 0x192f, 0xa701, 0x4b33, 0x0, 0x1);
        gbc.writeMem(0x4b33, { 0xc });
        gbc.writeMem(0xb2d9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4617);
        EXPECT(gbc.pc(), 0xb2da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2d9), 0x8e);
        // 8E 0216
        gbc.setState(0x1f48, 0x4e0a, 0xcfc0, 0xcd6b, 0x3ec7, 0x5563, 0x1, 0x0);
        gbc.writeMem(0x1f48, { 0x8e });
        gbc.writeMem(0x5563, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4e0a);
        EXPECT(gbc.pc(), 0x1f49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0217
        gbc.setState(0x2d36, 0x937f, 0x2050, 0xd31c, 0xc19c, 0x7c09, 0x1, 0x1);
        gbc.writeMem(0x2d36, { 0x8e });
        gbc.writeMem(0x7c09, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x937f);
        EXPECT(gbc.pc(), 0x2d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0218
        gbc.setState(0x2f71, 0xac01, 0x5940, 0xcc9e, 0x8374, 0xc22, 0x1, 0x1);
        gbc.writeMem(0xc22, { 0x8e });
        gbc.writeMem(0x2f71, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xac01);
        EXPECT(gbc.pc(), 0x2f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0219
        gbc.setState(0xcf54, 0x8ce6, 0xefc0, 0x172c, 0x2c62, 0xabca, 0x1, 0x0);
        gbc.writeMem(0xabca, { 0x93 });
        gbc.writeMem(0xcf54, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8ce6);
        EXPECT(gbc.pc(), 0xcf55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabca), 0x93);
        EXPECT(gbc.readMem(0xcf54), 0x8e);
        // 8E 021A
        gbc.setState(0x6555, 0x3707, 0x54e0, 0xc446, 0x4009, 0x1d3f, 0x0, 0x1);
        gbc.writeMem(0x1d3f, { 0xb3 });
        gbc.writeMem(0x6555, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3707);
        EXPECT(gbc.pc(), 0x6556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 021B
        gbc.setState(0x5668, 0x9fcb, 0x7690, 0x90c8, 0x5d3e, 0xcaaf, 0x1, 0x1);
        gbc.writeMem(0x5668, { 0x8e });
        gbc.writeMem(0xcaaf, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9fcb);
        EXPECT(gbc.pc(), 0x5669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaaf), 0x3);
        // 8E 021C
        gbc.setState(0x9d9c, 0xf6f5, 0xe4a0, 0xd9ad, 0xa871, 0x37e4, 0x0, 0x0);
        gbc.writeMem(0x37e4, { 0x72 });
        gbc.writeMem(0x9d9c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf6f5);
        EXPECT(gbc.pc(), 0x9d9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d9c), 0x8e);
        // 8E 021D
        gbc.setState(0x39e4, 0x281c, 0xcd70, 0x60be, 0xb0ad, 0x23b1, 0x1, 0x1);
        gbc.writeMem(0x23b1, { 0x35 });
        gbc.writeMem(0x39e4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x281c);
        EXPECT(gbc.pc(), 0x39e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 021E
        gbc.setState(0xe1db, 0x3f84, 0x3ec0, 0xff56, 0xba0b, 0x60ad, 0x0, 0x0);
        gbc.writeMem(0x60ad, { 0x82 });
        gbc.writeMem(0xe1db, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3f84);
        EXPECT(gbc.pc(), 0xe1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1db), 0x8e);
        // 8E 021F
        gbc.setState(0x3c3a, 0xac4, 0xdfa0, 0x7bbf, 0x45b8, 0x782e, 0x1, 0x0);
        gbc.writeMem(0x3c3a, { 0x8e });
        gbc.writeMem(0x782e, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xac4);
        EXPECT(gbc.pc(), 0x3c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0220
        gbc.setState(0x1836, 0x6a66, 0x5530, 0xf825, 0xc26e, 0x93f0, 0x0, 0x1);
        gbc.writeMem(0x1836, { 0x8e });
        gbc.writeMem(0x93f0, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6a66);
        EXPECT(gbc.pc(), 0x1837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f0), 0x45);
        // 8E 0221
        gbc.setState(0x505f, 0xc759, 0x42f0, 0xb2ba, 0xd24e, 0x9a7c, 0x1, 0x1);
        gbc.writeMem(0x505f, { 0x8e });
        gbc.writeMem(0x9a7c, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc759);
        EXPECT(gbc.pc(), 0x5060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a7c), 0x92);
        // 8E 0222
        gbc.setState(0x66ed, 0x3786, 0xd2c0, 0x431f, 0x1d01, 0x938b, 0x0, 0x0);
        gbc.writeMem(0x66ed, { 0x8e });
        gbc.writeMem(0x938b, { 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3786);
        EXPECT(gbc.pc(), 0x66ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x938b), 0xe0);
        // 8E 0223
        gbc.setState(0x1ab7, 0x1ca7, 0xf940, 0x4186, 0xfc47, 0xdbda, 0x1, 0x0);
        gbc.writeMem(0x1ab7, { 0x8e });
        gbc.writeMem(0xdbda, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1ca7);
        EXPECT(gbc.pc(), 0x1ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbda), 0x8b);
        // 8E 0224
        gbc.setState(0x794c, 0x78b4, 0xd2e0, 0xed73, 0xeec, 0xc014, 0x0, 0x1);
        gbc.writeMem(0x794c, { 0x8e });
        gbc.writeMem(0xc014, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x78b4);
        EXPECT(gbc.pc(), 0x794d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc014), 0xa0);
        // 8E 0225
        gbc.setState(0x6ddf, 0xa504, 0xcc80, 0x456c, 0x35b4, 0xcdd6, 0x1, 0x0);
        gbc.writeMem(0x6ddf, { 0x8e });
        gbc.writeMem(0xcdd6, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa504);
        EXPECT(gbc.pc(), 0x6de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd6), 0x2f);
        // 8E 0226
        gbc.setState(0x4ecc, 0x7ad5, 0xb410, 0x624c, 0x228d, 0xcaf9, 0x0, 0x0);
        gbc.writeMem(0x4ecc, { 0x8e });
        gbc.writeMem(0xcaf9, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7ad5);
        EXPECT(gbc.pc(), 0x4ecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf9), 0xbf);
        // 8E 0227
        gbc.setState(0x7424, 0xc1cc, 0xbf30, 0x7a75, 0xa20f, 0x6604, 0x0, 0x1);
        gbc.writeMem(0x6604, { 0x84 });
        gbc.writeMem(0x7424, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc1cc);
        EXPECT(gbc.pc(), 0x7425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0228
        gbc.setState(0xa868, 0x20d0, 0x6110, 0xd57, 0x94ae, 0x5e5b, 0x0, 0x0);
        gbc.writeMem(0x5e5b, { 0x13 });
        gbc.writeMem(0xa868, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x20d0);
        EXPECT(gbc.pc(), 0xa869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa868), 0x8e);
        // 8E 0229
        gbc.setState(0xc763, 0x9e8f, 0x39e0, 0xbf84, 0xcc72, 0xff28, 0x1, 0x1);
        gbc.writeMem(0xc763, { 0x8e });
        gbc.writeMem(0xff28, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9e8f);
        EXPECT(gbc.pc(), 0xc764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc763), 0x8e);
        EXPECT(gbc.readMem(0xff28), 0x95);
        // 8E 022A
        gbc.setState(0x5caa, 0x6024, 0x7c80, 0x52fc, 0xfe00, 0xfe9, 0x1, 0x0);
        gbc.writeMem(0xfe9, { 0x3 });
        gbc.writeMem(0x5caa, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6024);
        EXPECT(gbc.pc(), 0x5cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 022B
        gbc.setState(0x3d8a, 0x1573, 0x70d0, 0x5a60, 0x17eb, 0xb8d5, 0x0, 0x0);
        gbc.writeMem(0x3d8a, { 0x8e });
        gbc.writeMem(0xb8d5, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1573);
        EXPECT(gbc.pc(), 0x3d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d5), 0xa7);
        // 8E 022C
        gbc.setState(0x493b, 0x9e09, 0x4c70, 0x877e, 0x8b2, 0x779b, 0x1, 0x0);
        gbc.writeMem(0x493b, { 0x8e });
        gbc.writeMem(0x779b, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9e09);
        EXPECT(gbc.pc(), 0x493c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 022D
        gbc.setState(0xb420, 0xf056, 0xd3d0, 0x222a, 0x1bf7, 0xa714, 0x1, 0x1);
        gbc.writeMem(0xa714, { 0xa2 });
        gbc.writeMem(0xb420, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf056);
        EXPECT(gbc.pc(), 0xb421);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa714), 0xa2);
        EXPECT(gbc.readMem(0xb420), 0x8e);
        // 8E 022E
        gbc.setState(0x6768, 0x3b56, 0x4e00, 0x72d1, 0x9e43, 0x76ec, 0x0, 0x0);
        gbc.writeMem(0x6768, { 0x8e });
        gbc.writeMem(0x76ec, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3b56);
        EXPECT(gbc.pc(), 0x6769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 022F
        gbc.setState(0x82e1, 0xa2ac, 0x7c10, 0xb74a, 0x1d69, 0x165a, 0x1, 0x1);
        gbc.writeMem(0x165a, { 0xf3 });
        gbc.writeMem(0x82e1, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa2ac);
        EXPECT(gbc.pc(), 0x82e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e1), 0x8e);
        // 8E 0230
        gbc.setState(0x21ff, 0x7092, 0x42f0, 0x9f11, 0xcd19, 0x7317, 0x0, 0x0);
        gbc.writeMem(0x21ff, { 0x8e });
        gbc.writeMem(0x7317, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7092);
        EXPECT(gbc.pc(), 0x2200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0231
        gbc.setState(0x75ea, 0x230e, 0x8df0, 0x299, 0xc308, 0x5d83, 0x1, 0x0);
        gbc.writeMem(0x5d83, { 0xd });
        gbc.writeMem(0x75ea, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x230e);
        EXPECT(gbc.pc(), 0x75eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0232
        gbc.setState(0x7dd7, 0x3dbe, 0x8f80, 0x53da, 0xc7a8, 0x8ed, 0x0, 0x0);
        gbc.writeMem(0x8ed, { 0x1a });
        gbc.writeMem(0x7dd7, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3dbe);
        EXPECT(gbc.pc(), 0x7dd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0233
        gbc.setState(0x9520, 0xe234, 0x6fc0, 0x13cd, 0xbfeb, 0x1a06, 0x1, 0x1);
        gbc.writeMem(0x1a06, { 0x3f });
        gbc.writeMem(0x9520, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe234);
        EXPECT(gbc.pc(), 0x9521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9520), 0x8e);
        // 8E 0234
        gbc.setState(0xdd2c, 0xb6cd, 0xff50, 0x9bfb, 0xa9e5, 0x8261, 0x0, 0x1);
        gbc.writeMem(0x8261, { 0xad });
        gbc.writeMem(0xdd2c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb6cd);
        EXPECT(gbc.pc(), 0xdd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8261), 0xad);
        EXPECT(gbc.readMem(0xdd2c), 0x8e);
        // 8E 0235
        gbc.setState(0x852a, 0x4e13, 0xd880, 0xc9b, 0xce05, 0xd179, 0x0, 0x1);
        gbc.writeMem(0x852a, { 0x8e });
        gbc.writeMem(0xd179, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4e13);
        EXPECT(gbc.pc(), 0x852b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x852a), 0x8e);
        EXPECT(gbc.readMem(0xd179), 0x3b);
        // 8E 0236
        gbc.setState(0x94ca, 0x270f, 0x7bd0, 0x32ec, 0xc48a, 0x1ca0, 0x0, 0x0);
        gbc.writeMem(0x1ca0, { 0x75 });
        gbc.writeMem(0x94ca, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x270f);
        EXPECT(gbc.pc(), 0x94cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ca), 0x8e);
        // 8E 0237
        gbc.setState(0x8997, 0x7ee2, 0x1dd0, 0x433a, 0x3c37, 0xf99e, 0x0, 0x0);
        gbc.writeMem(0x8997, { 0x8e });
        gbc.writeMem(0xf99e, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7ee2);
        EXPECT(gbc.pc(), 0x8998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8997), 0x8e);
        EXPECT(gbc.readMem(0xf99e), 0x5b);
        // 8E 0238
        gbc.setState(0xbd63, 0x9fd8, 0x3d60, 0x11ff, 0x8e2b, 0x873a, 0x0, 0x1);
        gbc.writeMem(0x873a, { 0xd0 });
        gbc.writeMem(0xbd63, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9fd8);
        EXPECT(gbc.pc(), 0xbd64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x873a), 0xd0);
        EXPECT(gbc.readMem(0xbd63), 0x8e);
        // 8E 0239
        gbc.setState(0xaec8, 0x76c8, 0xa190, 0xd9dd, 0xaa25, 0x49c4, 0x1, 0x1);
        gbc.writeMem(0x49c4, { 0x28 });
        gbc.writeMem(0xaec8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x76c8);
        EXPECT(gbc.pc(), 0xaec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec8), 0x8e);
        // 8E 023A
        gbc.setState(0xb2e7, 0x6645, 0xc710, 0x2d97, 0xa3dc, 0x57b0, 0x0, 0x0);
        gbc.writeMem(0x57b0, { 0x1b });
        gbc.writeMem(0xb2e7, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6645);
        EXPECT(gbc.pc(), 0xb2e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2e7), 0x8e);
        // 8E 023B
        gbc.setState(0x957b, 0xce2, 0x8e0, 0xeb4f, 0xb04a, 0xaa8a, 0x1, 0x1);
        gbc.writeMem(0x957b, { 0x8e });
        gbc.writeMem(0xaa8a, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xce2);
        EXPECT(gbc.pc(), 0x957c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x957b), 0x8e);
        EXPECT(gbc.readMem(0xaa8a), 0x72);
        // 8E 023C
        gbc.setState(0xedc8, 0x3397, 0x21b0, 0x7233, 0x293c, 0x79ea, 0x1, 0x0);
        gbc.writeMem(0x79ea, { 0xd7 });
        gbc.writeMem(0xedc8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3397);
        EXPECT(gbc.pc(), 0xedc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc8), 0x8e);
        // 8E 023D
        gbc.setState(0xda1, 0xfede, 0x1f60, 0x6ce1, 0x806e, 0x688f, 0x1, 0x0);
        gbc.writeMem(0xda1, { 0x8e });
        gbc.writeMem(0x688f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfede);
        EXPECT(gbc.pc(), 0xda2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 023E
        gbc.setState(0x123e, 0xb986, 0xdf40, 0xe96, 0xd178, 0x475e, 0x1, 0x1);
        gbc.writeMem(0x123e, { 0x8e });
        gbc.writeMem(0x475e, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb986);
        EXPECT(gbc.pc(), 0x123f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 023F
        gbc.setState(0x9ac4, 0x537c, 0x6b30, 0x713c, 0x851a, 0x5150, 0x0, 0x0);
        gbc.writeMem(0x5150, { 0x3c });
        gbc.writeMem(0x9ac4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x537c);
        EXPECT(gbc.pc(), 0x9ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac4), 0x8e);
        // 8E 0240
        gbc.setState(0x2321, 0xa805, 0x6e50, 0xa924, 0xf329, 0xea80, 0x1, 0x0);
        gbc.writeMem(0x2321, { 0x8e });
        gbc.writeMem(0xea80, { 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa805);
        EXPECT(gbc.pc(), 0x2322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea80), 0x5f);
        // 8E 0241
        gbc.setState(0x4301, 0x580c, 0x7340, 0x1635, 0xa01d, 0x41b2, 0x0, 0x0);
        gbc.writeMem(0x41b2, { 0x9b });
        gbc.writeMem(0x4301, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x580c);
        EXPECT(gbc.pc(), 0x4302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0242
        gbc.setState(0xc9d0, 0x3c38, 0xec20, 0xc926, 0xf799, 0x3566, 0x0, 0x1);
        gbc.writeMem(0x3566, { 0x6 });
        gbc.writeMem(0xc9d0, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3c38);
        EXPECT(gbc.pc(), 0xc9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d0), 0x8e);
        // 8E 0243
        gbc.setState(0x177a, 0x7be7, 0xe120, 0xd620, 0xb342, 0x252, 0x1, 0x1);
        gbc.writeMem(0x252, { 0x6e });
        gbc.writeMem(0x177a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7be7);
        EXPECT(gbc.pc(), 0x177b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0245
        gbc.setState(0xa49e, 0xa337, 0xb30, 0x49e, 0x2346, 0x46ca, 0x1, 0x0);
        gbc.writeMem(0x46ca, { 0x15 });
        gbc.writeMem(0xa49e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa337);
        EXPECT(gbc.pc(), 0xa49f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49e), 0x8e);
        // 8E 0246
        gbc.setState(0x680c, 0xe18e, 0x5430, 0xff6e, 0x5726, 0x3418, 0x1, 0x1);
        gbc.writeMem(0x3418, { 0xcd });
        gbc.writeMem(0x680c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe18e);
        EXPECT(gbc.pc(), 0x680d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0247
        gbc.setState(0xa666, 0xfaa7, 0x76e0, 0xacd5, 0x604f, 0x3b67, 0x0, 0x1);
        gbc.writeMem(0x3b67, { 0x5b });
        gbc.writeMem(0xa666, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfaa7);
        EXPECT(gbc.pc(), 0xa667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa666), 0x8e);
        // 8E 0248
        gbc.setState(0x20cd, 0x89b, 0x4b10, 0xc182, 0x4eee, 0xc8ae, 0x1, 0x1);
        gbc.writeMem(0x20cd, { 0x8e });
        gbc.writeMem(0xc8ae, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x89b);
        EXPECT(gbc.pc(), 0x20ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ae), 0x33);
        // 8E 0249
        gbc.setState(0xe240, 0xb789, 0x9520, 0xa5ec, 0x7494, 0x368b, 0x0, 0x1);
        gbc.writeMem(0x368b, { 0xd5 });
        gbc.writeMem(0xe240, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb789);
        EXPECT(gbc.pc(), 0xe241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe240), 0x8e);
        // 8E 024A
        gbc.setState(0x41ba, 0x9a60, 0x88b0, 0xc872, 0xf85, 0x7f78, 0x1, 0x0);
        gbc.writeMem(0x41ba, { 0x8e });
        gbc.writeMem(0x7f78, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x9a60);
        EXPECT(gbc.pc(), 0x41bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 024B
        gbc.setState(0xebb, 0xbd57, 0xb7e0, 0x50cb, 0x7317, 0x1ae7, 0x0, 0x0);
        gbc.writeMem(0xebb, { 0x8e });
        gbc.writeMem(0x1ae7, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbd57);
        EXPECT(gbc.pc(), 0xebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 024D
        gbc.setState(0x7451, 0x76b0, 0xbfc0, 0x5087, 0xd17f, 0xe56f, 0x1, 0x1);
        gbc.writeMem(0x7451, { 0x8e });
        gbc.writeMem(0xe56f, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x76b0);
        EXPECT(gbc.pc(), 0x7452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe56f), 0x1f);
        // 8E 024E
        gbc.setState(0x498, 0x96d7, 0x12b0, 0x56cd, 0x5649, 0x5350, 0x0, 0x1);
        gbc.writeMem(0x498, { 0x8e });
        gbc.writeMem(0x5350, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x96d7);
        EXPECT(gbc.pc(), 0x499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 024F
        gbc.setState(0x35de, 0x10ff, 0xdc0, 0xd667, 0xc05, 0xa09d, 0x1, 0x0);
        gbc.writeMem(0x35de, { 0x8e });
        gbc.writeMem(0xa09d, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x10ff);
        EXPECT(gbc.pc(), 0x35df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa09d), 0xf);
        // 8E 0250
        gbc.setState(0x4f5e, 0x106f, 0xb7c0, 0x4a8a, 0x56b3, 0xc164, 0x1, 0x1);
        gbc.writeMem(0x4f5e, { 0x8e });
        gbc.writeMem(0xc164, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x106f);
        EXPECT(gbc.pc(), 0x4f5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc164), 0x6);
        // 8E 0251
        gbc.setState(0x9a81, 0xb49f, 0x6ec0, 0x58c5, 0xf27f, 0xc2b2, 0x0, 0x1);
        gbc.writeMem(0x9a81, { 0x8e });
        gbc.writeMem(0xc2b2, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb49f);
        EXPECT(gbc.pc(), 0x9a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a81), 0x8e);
        EXPECT(gbc.readMem(0xc2b2), 0x45);
        // 8E 0252
        gbc.setState(0x976d, 0xc2e7, 0xfa20, 0x2d6b, 0x6d6, 0x9e94, 0x1, 0x1);
        gbc.writeMem(0x976d, { 0x8e });
        gbc.writeMem(0x9e94, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc2e7);
        EXPECT(gbc.pc(), 0x976e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x976d), 0x8e);
        EXPECT(gbc.readMem(0x9e94), 0xdb);
        // 8E 0253
        gbc.setState(0x1e, 0x4b4b, 0xc6a0, 0x503a, 0x75f4, 0xaab6, 0x1, 0x0);
        gbc.writeMem(0x1e, { 0x8e });
        gbc.writeMem(0xaab6, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4b4b);
        EXPECT(gbc.pc(), 0x1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab6), 0x56);
        // 8E 0254
        gbc.setState(0x6a2b, 0x4f03, 0x7680, 0x7edf, 0x5840, 0xf72, 0x0, 0x0);
        gbc.writeMem(0xf72, { 0x5c });
        gbc.writeMem(0x6a2b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4f03);
        EXPECT(gbc.pc(), 0x6a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0255
        gbc.setState(0xa636, 0x1a9d, 0xdc30, 0x9ece, 0xe019, 0x3040, 0x0, 0x0);
        gbc.writeMem(0x3040, { 0xda });
        gbc.writeMem(0xa636, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1a9d);
        EXPECT(gbc.pc(), 0xa637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa636), 0x8e);
        // 8E 0256
        gbc.setState(0x3dd, 0x3f90, 0xd640, 0x158c, 0xbfd3, 0x19f5, 0x0, 0x1);
        gbc.writeMem(0x3dd, { 0x8e });
        gbc.writeMem(0x19f5, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3f90);
        EXPECT(gbc.pc(), 0x3de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0257
        gbc.setState(0xa64d, 0xa0a4, 0x6b00, 0xbb23, 0xe629, 0x3b81, 0x0, 0x0);
        gbc.writeMem(0x3b81, { 0x42 });
        gbc.writeMem(0xa64d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa0a4);
        EXPECT(gbc.pc(), 0xa64e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa64d), 0x8e);
        // 8E 0258
        gbc.setState(0xea0a, 0xf2ba, 0x2b60, 0x5236, 0x7728, 0xe53a, 0x0, 0x0);
        gbc.writeMem(0xe53a, { 0x25 });
        gbc.writeMem(0xea0a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf2ba);
        EXPECT(gbc.pc(), 0xea0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe53a), 0x25);
        EXPECT(gbc.readMem(0xea0a), 0x8e);
        // 8E 0259
        gbc.setState(0x713e, 0x21ff, 0xb400, 0xd3a, 0x8b09, 0x3e78, 0x0, 0x1);
        gbc.writeMem(0x3e78, { 0x4b });
        gbc.writeMem(0x713e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x21ff);
        EXPECT(gbc.pc(), 0x713f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 025A
        gbc.setState(0x1c0a, 0x38bf, 0x4d10, 0xbdd5, 0xaafd, 0x8c85, 0x1, 0x0);
        gbc.writeMem(0x1c0a, { 0x8e });
        gbc.writeMem(0x8c85, { 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x38bf);
        EXPECT(gbc.pc(), 0x1c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c85), 0xf9);
        // 8E 025D
        gbc.setState(0x998b, 0x9d91, 0xa480, 0x8c34, 0x6036, 0x94db, 0x0, 0x1);
        gbc.writeMem(0x94db, { 0x83 });
        gbc.writeMem(0x998b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9d91);
        EXPECT(gbc.pc(), 0x998c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94db), 0x83);
        EXPECT(gbc.readMem(0x998b), 0x8e);
        // 8E 025E
        gbc.setState(0x73f8, 0xee6e, 0xdf10, 0xcb4d, 0x8c36, 0xf8ea, 0x0, 0x1);
        gbc.writeMem(0x73f8, { 0x8e });
        gbc.writeMem(0xf8ea, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xee6e);
        EXPECT(gbc.pc(), 0x73f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8ea), 0xa);
        // 8E 025F
        gbc.setState(0xc121, 0x1ee4, 0xca00, 0x6544, 0x303d, 0x379c, 0x1, 0x1);
        gbc.writeMem(0x379c, { 0xa9 });
        gbc.writeMem(0xc121, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1ee4);
        EXPECT(gbc.pc(), 0xc122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc121), 0x8e);
        // 8E 0260
        gbc.setState(0x3b30, 0x6b38, 0xb9c0, 0x6703, 0xf819, 0x9f70, 0x1, 0x1);
        gbc.writeMem(0x3b30, { 0x8e });
        gbc.writeMem(0x9f70, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6b38);
        EXPECT(gbc.pc(), 0x3b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f70), 0x5a);
        // 8E 0261
        gbc.setState(0x6b, 0x6674, 0xd2e0, 0xaa48, 0xba8d, 0xb6ab, 0x0, 0x1);
        gbc.writeMem(0x6b, { 0x8e });
        gbc.writeMem(0xb6ab, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6674);
        EXPECT(gbc.pc(), 0x6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ab), 0x25);
        // 8E 0262
        gbc.setState(0xce6d, 0x83c5, 0xf980, 0x81e4, 0x85f, 0x9211, 0x1, 0x1);
        gbc.writeMem(0x9211, { 0x6f });
        gbc.writeMem(0xce6d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x83c5);
        EXPECT(gbc.pc(), 0xce6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9211), 0x6f);
        EXPECT(gbc.readMem(0xce6d), 0x8e);
        // 8E 0263
        gbc.setState(0xcb7a, 0x198e, 0x7bf0, 0x71e9, 0xf4d6, 0xb6f8, 0x1, 0x0);
        gbc.writeMem(0xb6f8, { 0x8a });
        gbc.writeMem(0xcb7a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x198e);
        EXPECT(gbc.pc(), 0xcb7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f8), 0x8a);
        EXPECT(gbc.readMem(0xcb7a), 0x8e);
        // 8E 0264
        gbc.setState(0x4061, 0x11b5, 0x83a0, 0x92f1, 0xb245, 0xeae9, 0x1, 0x1);
        gbc.writeMem(0x4061, { 0x8e });
        gbc.writeMem(0xeae9, { 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x11b5);
        EXPECT(gbc.pc(), 0x4062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae9), 0xae);
        // 8E 0265
        gbc.setState(0x2120, 0xf5a5, 0x69f0, 0x2569, 0x5e2c, 0x4434, 0x1, 0x0);
        gbc.writeMem(0x2120, { 0x8e });
        gbc.writeMem(0x4434, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf5a5);
        EXPECT(gbc.pc(), 0x2121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0266
        gbc.setState(0x5cb, 0x188e, 0x67a0, 0x7e41, 0xbf5a, 0x1086, 0x0, 0x0);
        gbc.writeMem(0x5cb, { 0x8e });
        gbc.writeMem(0x1086, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x188e);
        EXPECT(gbc.pc(), 0x5cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0267
        gbc.setState(0xd751, 0x5794, 0x2100, 0xd144, 0xf268, 0x5557, 0x1, 0x0);
        gbc.writeMem(0x5557, { 0x79 });
        gbc.writeMem(0xd751, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5794);
        EXPECT(gbc.pc(), 0xd752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd751), 0x8e);
        // 8E 0268
        gbc.setState(0x4552, 0xc5b1, 0xa000, 0x2152, 0x9c97, 0xb9a8, 0x0, 0x0);
        gbc.writeMem(0x4552, { 0x8e });
        gbc.writeMem(0xb9a8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc5b1);
        EXPECT(gbc.pc(), 0x4553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a8), 0x8e);
        // 8E 0269
        gbc.setState(0xc50b, 0x116c, 0x5e60, 0x8777, 0x4c69, 0xd574, 0x1, 0x0);
        gbc.writeMem(0xc50b, { 0x8e });
        gbc.writeMem(0xd574, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x116c);
        EXPECT(gbc.pc(), 0xc50c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50b), 0x8e);
        EXPECT(gbc.readMem(0xd574), 0xe4);
        // 8E 026A
        gbc.setState(0xd8bb, 0xc81d, 0x3820, 0xed64, 0x210d, 0xf2d7, 0x1, 0x1);
        gbc.writeMem(0xd8bb, { 0x8e });
        gbc.writeMem(0xf2d7, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc81d);
        EXPECT(gbc.pc(), 0xd8bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8bb), 0x8e);
        EXPECT(gbc.readMem(0xf2d7), 0x75);
        // 8E 026B
        gbc.setState(0x7882, 0x66e6, 0x3e50, 0xfc7f, 0x1cb6, 0x947d, 0x1, 0x1);
        gbc.writeMem(0x7882, { 0x8e });
        gbc.writeMem(0x947d, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x66e6);
        EXPECT(gbc.pc(), 0x7883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947d), 0x64);
        // 8E 026C
        gbc.setState(0x95ea, 0x9863, 0xab20, 0xe399, 0x7b9, 0x8164, 0x0, 0x1);
        gbc.writeMem(0x8164, { 0x42 });
        gbc.writeMem(0x95ea, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9863);
        EXPECT(gbc.pc(), 0x95eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8164), 0x42);
        EXPECT(gbc.readMem(0x95ea), 0x8e);
        // 8E 026D
        gbc.setState(0xedc2, 0x463f, 0xbf20, 0xa94f, 0x2455, 0x9840, 0x0, 0x1);
        gbc.writeMem(0x9840, { 0x52 });
        gbc.writeMem(0xedc2, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x463f);
        EXPECT(gbc.pc(), 0xedc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9840), 0x52);
        EXPECT(gbc.readMem(0xedc2), 0x8e);
        // 8E 026E
        gbc.setState(0xe24, 0x180c, 0x8b90, 0xccc2, 0x7e40, 0x9a03, 0x0, 0x0);
        gbc.writeMem(0xe24, { 0x8e });
        gbc.writeMem(0x9a03, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x180c);
        EXPECT(gbc.pc(), 0xe25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a03), 0x7f);
        // 8E 026F
        gbc.setState(0x2e6b, 0x68a, 0xd20, 0xb890, 0x2e98, 0x3ca2, 0x0, 0x1);
        gbc.writeMem(0x2e6b, { 0x8e });
        gbc.writeMem(0x3ca2, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x68a);
        EXPECT(gbc.pc(), 0x2e6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0270
        gbc.setState(0x2492, 0xe42f, 0xd200, 0xb75c, 0x58bb, 0x34b8, 0x0, 0x0);
        gbc.writeMem(0x2492, { 0x8e });
        gbc.writeMem(0x34b8, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe42f);
        EXPECT(gbc.pc(), 0x2493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0271
        gbc.setState(0x81fc, 0x67b4, 0x6560, 0x6ebb, 0x50e, 0x9de7, 0x0, 0x1);
        gbc.writeMem(0x81fc, { 0x8e });
        gbc.writeMem(0x9de7, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x67b4);
        EXPECT(gbc.pc(), 0x81fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81fc), 0x8e);
        EXPECT(gbc.readMem(0x9de7), 0x41);
        // 8E 0272
        gbc.setState(0x7d36, 0x7629, 0x8c20, 0x3742, 0x1ee9, 0xea90, 0x0, 0x1);
        gbc.writeMem(0x7d36, { 0x8e });
        gbc.writeMem(0xea90, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7629);
        EXPECT(gbc.pc(), 0x7d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea90), 0x53);
        // 8E 0273
        gbc.setState(0x84e, 0xa967, 0x6410, 0x2efe, 0x2c86, 0xa58b, 0x0, 0x0);
        gbc.writeMem(0x84e, { 0x8e });
        gbc.writeMem(0xa58b, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa967);
        EXPECT(gbc.pc(), 0x84f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa58b), 0xf);
        // 8E 0275
        gbc.setState(0x9eed, 0x88c3, 0x86c0, 0x9ec3, 0x90b9, 0x6463, 0x0, 0x1);
        gbc.writeMem(0x6463, { 0xf0 });
        gbc.writeMem(0x9eed, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x88c3);
        EXPECT(gbc.pc(), 0x9eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eed), 0x8e);
        // 8E 0276
        gbc.setState(0x10f4, 0x794, 0xa4d0, 0x5c5, 0x8795, 0x1ff6, 0x0, 0x0);
        gbc.writeMem(0x10f4, { 0x8e });
        gbc.writeMem(0x1ff6, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x794);
        EXPECT(gbc.pc(), 0x10f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0277
        gbc.setState(0x60ca, 0x52ba, 0x48a0, 0xd1be, 0x9612, 0xb99d, 0x0, 0x0);
        gbc.writeMem(0x60ca, { 0x8e });
        gbc.writeMem(0xb99d, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x52ba);
        EXPECT(gbc.pc(), 0x60cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb99d), 0xc2);
        // 8E 0278
        gbc.setState(0x2ce4, 0x9fa8, 0x3550, 0xa333, 0x22cc, 0x1af3, 0x0, 0x1);
        gbc.writeMem(0x1af3, { 0x1f });
        gbc.writeMem(0x2ce4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9fa8);
        EXPECT(gbc.pc(), 0x2ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0279
        gbc.setState(0x8653, 0xa672, 0x49f0, 0x69b, 0x3af1, 0x4c7, 0x1, 0x0);
        gbc.writeMem(0x4c7, { 0xf0 });
        gbc.writeMem(0x8653, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa672);
        EXPECT(gbc.pc(), 0x8654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8653), 0x8e);
        // 8E 027A
        gbc.setState(0x7c4b, 0x1d7b, 0xde20, 0x3f5a, 0x5390, 0x48ce, 0x0, 0x0);
        gbc.writeMem(0x48ce, { 0xd6 });
        gbc.writeMem(0x7c4b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x1d7b);
        EXPECT(gbc.pc(), 0x7c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 027B
        gbc.setState(0x8bf0, 0x5b41, 0x15b0, 0x1a7a, 0x3123, 0x55a2, 0x1, 0x0);
        gbc.writeMem(0x55a2, { 0x27 });
        gbc.writeMem(0x8bf0, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5b41);
        EXPECT(gbc.pc(), 0x8bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bf0), 0x8e);
        // 8E 027C
        gbc.setState(0xa515, 0x4d55, 0xf140, 0x3457, 0xd1c5, 0xdf21, 0x0, 0x1);
        gbc.writeMem(0xa515, { 0x8e });
        gbc.writeMem(0xdf21, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4d55);
        EXPECT(gbc.pc(), 0xa516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa515), 0x8e);
        EXPECT(gbc.readMem(0xdf21), 0x5e);
        // 8E 027D
        gbc.setState(0xe8fb, 0x6716, 0xaf60, 0xdd2d, 0x9695, 0xfe91, 0x1, 0x0);
        gbc.writeMem(0xe8fb, { 0x8e });
        gbc.writeMem(0xfe91, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6716);
        EXPECT(gbc.pc(), 0xe8fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fb), 0x8e);
        EXPECT(gbc.readMem(0xfe91), 0x10);
        // 8E 027E
        gbc.setState(0x5bb1, 0x63b4, 0x3060, 0xd3ac, 0x31d0, 0x8adf, 0x1, 0x1);
        gbc.writeMem(0x5bb1, { 0x8e });
        gbc.writeMem(0x8adf, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x63b4);
        EXPECT(gbc.pc(), 0x5bb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8adf), 0x89);
        // 8E 027F
        gbc.setState(0xbb8f, 0xedb4, 0x6f00, 0x8ac7, 0x8247, 0x9500, 0x0, 0x1);
        gbc.writeMem(0x9500, { 0xea });
        gbc.writeMem(0xbb8f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xedb4);
        EXPECT(gbc.pc(), 0xbb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9500), 0xea);
        EXPECT(gbc.readMem(0xbb8f), 0x8e);
        // 8E 0280
        gbc.setState(0x4dea, 0x6534, 0x7410, 0x48fb, 0x4533, 0x9035, 0x1, 0x1);
        gbc.writeMem(0x4dea, { 0x8e });
        gbc.writeMem(0x9035, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6534);
        EXPECT(gbc.pc(), 0x4deb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9035), 0xa0);
        // 8E 0281
        gbc.setState(0x2bf, 0x6177, 0xfbc0, 0xfacc, 0xfed3, 0xe26c, 0x0, 0x0);
        gbc.writeMem(0x2bf, { 0x8e });
        gbc.writeMem(0xe26c, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6177);
        EXPECT(gbc.pc(), 0x2c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26c), 0x2);
        // 8E 0282
        gbc.setState(0xd923, 0xd1ac, 0x2630, 0xc21e, 0xe4e4, 0x64d5, 0x1, 0x0);
        gbc.writeMem(0x64d5, { 0xa0 });
        gbc.writeMem(0xd923, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd1ac);
        EXPECT(gbc.pc(), 0xd924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd923), 0x8e);
        // 8E 0283
        gbc.setState(0x2e6b, 0xd860, 0xc790, 0xc18e, 0x1ecb, 0xd6b6, 0x0, 0x1);
        gbc.writeMem(0x2e6b, { 0x8e });
        gbc.writeMem(0xd6b6, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd860);
        EXPECT(gbc.pc(), 0x2e6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6b6), 0xc3);
        // 8E 0284
        gbc.setState(0x40c9, 0xe46c, 0x99b0, 0x52eb, 0x2ae3, 0xded4, 0x0, 0x1);
        gbc.writeMem(0x40c9, { 0x8e });
        gbc.writeMem(0xded4, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe46c);
        EXPECT(gbc.pc(), 0x40ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xded4), 0x44);
        // 8E 0285
        gbc.setState(0xd7de, 0xaafe, 0x2310, 0xab56, 0xbf08, 0x435d, 0x0, 0x0);
        gbc.writeMem(0x435d, { 0xa2 });
        gbc.writeMem(0xd7de, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xaafe);
        EXPECT(gbc.pc(), 0xd7df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7de), 0x8e);
        // 8E 0286
        gbc.setState(0x3ea9, 0x272f, 0x9f10, 0x94a5, 0xd26b, 0xbb44, 0x0, 0x1);
        gbc.writeMem(0x3ea9, { 0x8e });
        gbc.writeMem(0xbb44, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x272f);
        EXPECT(gbc.pc(), 0x3eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb44), 0x6f);
        // 8E 0287
        gbc.setState(0x6253, 0x9bd8, 0x8930, 0x5b34, 0xf006, 0x9bf3, 0x0, 0x0);
        gbc.writeMem(0x6253, { 0x8e });
        gbc.writeMem(0x9bf3, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9bd8);
        EXPECT(gbc.pc(), 0x6254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf3), 0x30);
        // 8E 0288
        gbc.setState(0xe3c, 0x9ca, 0x1e80, 0xb743, 0x95cd, 0xcca4, 0x0, 0x1);
        gbc.writeMem(0xe3c, { 0x8e });
        gbc.writeMem(0xcca4, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9ca);
        EXPECT(gbc.pc(), 0xe3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcca4), 0xb3);
        // 8E 0289
        gbc.setState(0x82d2, 0xc5ec, 0x13c0, 0x8d72, 0xec07, 0x22ba, 0x1, 0x1);
        gbc.writeMem(0x22ba, { 0x91 });
        gbc.writeMem(0x82d2, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc5ec);
        EXPECT(gbc.pc(), 0x82d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d2), 0x8e);
        // 8E 028A
        gbc.setState(0x18f2, 0x72ef, 0x9150, 0xdcab, 0xd2b8, 0x4810, 0x1, 0x1);
        gbc.writeMem(0x18f2, { 0x8e });
        gbc.writeMem(0x4810, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x72ef);
        EXPECT(gbc.pc(), 0x18f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 028B
        gbc.setState(0xafb9, 0x3aa3, 0xa290, 0x8d36, 0x524e, 0xc43b, 0x1, 0x1);
        gbc.writeMem(0xafb9, { 0x8e });
        gbc.writeMem(0xc43b, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3aa3);
        EXPECT(gbc.pc(), 0xafba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb9), 0x8e);
        EXPECT(gbc.readMem(0xc43b), 0xa3);
        // 8E 028C
        gbc.setState(0x7d02, 0x9bf5, 0x91d0, 0x2477, 0x4260, 0x844f, 0x0, 0x1);
        gbc.writeMem(0x7d02, { 0x8e });
        gbc.writeMem(0x844f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9bf5);
        EXPECT(gbc.pc(), 0x7d03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x844f), 0x90);
        // 8E 028D
        gbc.setState(0x68de, 0x3a72, 0x2550, 0x8b13, 0x781f, 0xf94, 0x1, 0x1);
        gbc.writeMem(0xf94, { 0x46 });
        gbc.writeMem(0x68de, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3a72);
        EXPECT(gbc.pc(), 0x68df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 028E
        gbc.setState(0x7815, 0xabb6, 0x1410, 0x1df0, 0x58f6, 0x28b6, 0x1, 0x0);
        gbc.writeMem(0x28b6, { 0xb7 });
        gbc.writeMem(0x7815, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xabb6);
        EXPECT(gbc.pc(), 0x7816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 028F
        gbc.setState(0xb4b5, 0x65a2, 0x26b0, 0xe45f, 0x8c89, 0xa504, 0x1, 0x0);
        gbc.writeMem(0xa504, { 0xda });
        gbc.writeMem(0xb4b5, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x65a2);
        EXPECT(gbc.pc(), 0xb4b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa504), 0xda);
        EXPECT(gbc.readMem(0xb4b5), 0x8e);
        // 8E 0290
        gbc.setState(0x904e, 0x114b, 0xce00, 0xda2a, 0x8fa6, 0x176, 0x0, 0x1);
        gbc.writeMem(0x176, { 0x44 });
        gbc.writeMem(0x904e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x114b);
        EXPECT(gbc.pc(), 0x904f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x904e), 0x8e);
        // 8E 0291
        gbc.setState(0x7306, 0xbb56, 0x5d40, 0x3932, 0x7c57, 0x2f4, 0x1, 0x1);
        gbc.writeMem(0x2f4, { 0xdb });
        gbc.writeMem(0x7306, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbb56);
        EXPECT(gbc.pc(), 0x7307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0292
        gbc.setState(0x329a, 0xb41c, 0xa070, 0xb1f1, 0xe8e7, 0xabbc, 0x1, 0x0);
        gbc.writeMem(0x329a, { 0x8e });
        gbc.writeMem(0xabbc, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb41c);
        EXPECT(gbc.pc(), 0x329b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabbc), 0xce);
        // 8E 0293
        gbc.setState(0xdb2b, 0x8318, 0x6fa0, 0xd102, 0xb0ed, 0x1020, 0x0, 0x1);
        gbc.writeMem(0x1020, { 0xff });
        gbc.writeMem(0xdb2b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8318);
        EXPECT(gbc.pc(), 0xdb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb2b), 0x8e);
        // 8E 0294
        gbc.setState(0xa102, 0xf886, 0x79f0, 0x9808, 0x9ad5, 0xf0ff, 0x1, 0x1);
        gbc.writeMem(0xa102, { 0x8e });
        gbc.writeMem(0xf0ff, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf886);
        EXPECT(gbc.pc(), 0xa103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa102), 0x8e);
        EXPECT(gbc.readMem(0xf0ff), 0x62);
        // 8E 0295
        gbc.setState(0x6178, 0x3ae8, 0xbb70, 0xad88, 0x4f74, 0xa945, 0x0, 0x0);
        gbc.writeMem(0x6178, { 0x8e });
        gbc.writeMem(0xa945, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3ae8);
        EXPECT(gbc.pc(), 0x6179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa945), 0xb4);
        // 8E 0296
        gbc.setState(0x6361, 0x54f3, 0xbc80, 0xa357, 0x763b, 0xa819, 0x0, 0x0);
        gbc.writeMem(0x6361, { 0x8e });
        gbc.writeMem(0xa819, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x54f3);
        EXPECT(gbc.pc(), 0x6362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa819), 0xa1);
        // 8E 0297
        gbc.setState(0xbb6c, 0xfebf, 0x1840, 0x63c1, 0xa144, 0xdf20, 0x1, 0x0);
        gbc.writeMem(0xbb6c, { 0x8e });
        gbc.writeMem(0xdf20, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfebf);
        EXPECT(gbc.pc(), 0xbb6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb6c), 0x8e);
        EXPECT(gbc.readMem(0xdf20), 0xc7);
        // 8E 0298
        gbc.setState(0xdad7, 0x4cfc, 0x3500, 0xd18c, 0xb660, 0xea55, 0x0, 0x1);
        gbc.writeMem(0xdad7, { 0x8e });
        gbc.writeMem(0xea55, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4cfc);
        EXPECT(gbc.pc(), 0xdad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad7), 0x8e);
        EXPECT(gbc.readMem(0xea55), 0x1a);
        // 8E 0299
        gbc.setState(0x7073, 0xb1bc, 0xe910, 0x804, 0xc4e3, 0x7969, 0x1, 0x0);
        gbc.writeMem(0x7073, { 0x8e });
        gbc.writeMem(0x7969, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb1bc);
        EXPECT(gbc.pc(), 0x7074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 029A
        gbc.setState(0xe29c, 0xe07b, 0x28f0, 0xffb7, 0xc8e, 0xafec, 0x0, 0x0);
        gbc.writeMem(0xafec, { 0xc8 });
        gbc.writeMem(0xe29c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe07b);
        EXPECT(gbc.pc(), 0xe29d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafec), 0xc8);
        EXPECT(gbc.readMem(0xe29c), 0x8e);
        // 8E 029B
        gbc.setState(0xe853, 0x8904, 0x7770, 0x5ffc, 0x6f7e, 0x2037, 0x1, 0x0);
        gbc.writeMem(0x2037, { 0x1d });
        gbc.writeMem(0xe853, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8904);
        EXPECT(gbc.pc(), 0xe854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe853), 0x8e);
        // 8E 029C
        gbc.setState(0x2841, 0xb343, 0x19b0, 0xcd16, 0x67d5, 0x75a4, 0x1, 0x0);
        gbc.writeMem(0x2841, { 0x8e });
        gbc.writeMem(0x75a4, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb343);
        EXPECT(gbc.pc(), 0x2842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 029D
        gbc.setState(0xa554, 0x7bd9, 0xcf30, 0x17ae, 0x78f3, 0x4f79, 0x1, 0x1);
        gbc.writeMem(0x4f79, { 0x55 });
        gbc.writeMem(0xa554, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7bd9);
        EXPECT(gbc.pc(), 0xa555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa554), 0x8e);
        // 8E 029E
        gbc.setState(0x2b8a, 0xae3f, 0xe200, 0xa4, 0x3c92, 0xe400, 0x0, 0x0);
        gbc.writeMem(0x2b8a, { 0x8e });
        gbc.writeMem(0xe400, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xae3f);
        EXPECT(gbc.pc(), 0x2b8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe400), 0x5d);
        // 8E 029F
        gbc.setState(0x7153, 0xf628, 0xeea0, 0x9da4, 0xa571, 0xa92a, 0x1, 0x0);
        gbc.writeMem(0x7153, { 0x8e });
        gbc.writeMem(0xa92a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf628);
        EXPECT(gbc.pc(), 0x7154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa92a), 0xb8);
        // 8E 02A0
        gbc.setState(0xea21, 0x5c9b, 0x5a90, 0x7c0f, 0xfce8, 0x1e98, 0x0, 0x0);
        gbc.writeMem(0x1e98, { 0x1f });
        gbc.writeMem(0xea21, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5c9b);
        EXPECT(gbc.pc(), 0xea22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea21), 0x8e);
        // 8E 02A1
        gbc.setState(0xd866, 0xd2ea, 0xc9c0, 0xf174, 0xaf55, 0x6273, 0x0, 0x0);
        gbc.writeMem(0x6273, { 0x76 });
        gbc.writeMem(0xd866, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd2ea);
        EXPECT(gbc.pc(), 0xd867);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd866), 0x8e);
        // 8E 02A2
        gbc.setState(0x9fce, 0xbd5d, 0x7e10, 0xc30, 0x227b, 0xfe23, 0x1, 0x0);
        gbc.writeMem(0x9fce, { 0x8e });
        gbc.writeMem(0xfe23, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbd5d);
        EXPECT(gbc.pc(), 0x9fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fce), 0x8e);
        EXPECT(gbc.readMem(0xfe23), 0x9f);
        // 8E 02A3
        gbc.setState(0x721b, 0x580a, 0x5010, 0x6a2b, 0x9403, 0xd124, 0x0, 0x1);
        gbc.writeMem(0x721b, { 0x8e });
        gbc.writeMem(0xd124, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x580a);
        EXPECT(gbc.pc(), 0x721c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd124), 0x46);
        // 8E 02A4
        gbc.setState(0x90b9, 0xd79f, 0x2d0, 0x636c, 0xa39, 0xab40, 0x0, 0x0);
        gbc.writeMem(0x90b9, { 0x8e });
        gbc.writeMem(0xab40, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd79f);
        EXPECT(gbc.pc(), 0x90ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90b9), 0x8e);
        EXPECT(gbc.readMem(0xab40), 0x35);
        // 8E 02A6
        gbc.setState(0x9eba, 0xbb30, 0xca0, 0xb35, 0x6808, 0x791b, 0x0, 0x1);
        gbc.writeMem(0x791b, { 0x3e });
        gbc.writeMem(0x9eba, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbb30);
        EXPECT(gbc.pc(), 0x9ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eba), 0x8e);
        // 8E 02A8
        gbc.setState(0xa61c, 0x11cc, 0xdcb0, 0x7525, 0x9d03, 0xcec, 0x0, 0x0);
        gbc.writeMem(0xcec, { 0x6 });
        gbc.writeMem(0xa61c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x11cc);
        EXPECT(gbc.pc(), 0xa61d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa61c), 0x8e);
        // 8E 02A9
        gbc.setState(0xa982, 0x9de2, 0x4ad0, 0xe3f6, 0xc586, 0x12b1, 0x0, 0x0);
        gbc.writeMem(0x12b1, { 0x8d });
        gbc.writeMem(0xa982, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9de2);
        EXPECT(gbc.pc(), 0xa983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa982), 0x8e);
        // 8E 02AA
        gbc.setState(0x9336, 0x65fc, 0xcc60, 0x6506, 0xc458, 0xb14e, 0x1, 0x0);
        gbc.writeMem(0x9336, { 0x8e });
        gbc.writeMem(0xb14e, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x65fc);
        EXPECT(gbc.pc(), 0x9337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9336), 0x8e);
        EXPECT(gbc.readMem(0xb14e), 0x84);
        // 8E 02AC
        gbc.setState(0xc8d8, 0xbd53, 0xf060, 0xeead, 0x8f4a, 0x9de4, 0x0, 0x1);
        gbc.writeMem(0x9de4, { 0xc });
        gbc.writeMem(0xc8d8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbd53);
        EXPECT(gbc.pc(), 0xc8d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9de4), 0xc);
        EXPECT(gbc.readMem(0xc8d8), 0x8e);
        // 8E 02AD
        gbc.setState(0x16b4, 0xe1c2, 0xedb0, 0x62cb, 0x3b2b, 0x50d4, 0x0, 0x1);
        gbc.writeMem(0x16b4, { 0x8e });
        gbc.writeMem(0x50d4, { 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe1c2);
        EXPECT(gbc.pc(), 0x16b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 02AE
        gbc.setState(0x443d, 0x4c78, 0x7160, 0x85b3, 0xe3a, 0x95e8, 0x0, 0x0);
        gbc.writeMem(0x443d, { 0x8e });
        gbc.writeMem(0x95e8, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4c78);
        EXPECT(gbc.pc(), 0x443e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e8), 0xe9);
        // 8E 02AF
        gbc.setState(0xa6aa, 0x5694, 0x5c60, 0xf7f9, 0x9119, 0xc3c1, 0x0, 0x0);
        gbc.writeMem(0xa6aa, { 0x8e });
        gbc.writeMem(0xc3c1, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5694);
        EXPECT(gbc.pc(), 0xa6ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6aa), 0x8e);
        EXPECT(gbc.readMem(0xc3c1), 0xa2);
        // 8E 02B0
        gbc.setState(0xd4fa, 0x1f37, 0xc810, 0x36a4, 0xa23c, 0x5d57, 0x0, 0x0);
        gbc.writeMem(0x5d57, { 0xe2 });
        gbc.writeMem(0xd4fa, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1f37);
        EXPECT(gbc.pc(), 0xd4fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4fa), 0x8e);
        // 8E 02B1
        gbc.setState(0x43cd, 0xb5d6, 0x8200, 0x1254, 0x3d3d, 0x6560, 0x0, 0x0);
        gbc.writeMem(0x43cd, { 0x8e });
        gbc.writeMem(0x6560, { 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb5d6);
        EXPECT(gbc.pc(), 0x43ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 02B2
        gbc.setState(0x285e, 0x4567, 0x970, 0x3280, 0xb33d, 0x3521, 0x0, 0x0);
        gbc.writeMem(0x285e, { 0x8e });
        gbc.writeMem(0x3521, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4567);
        EXPECT(gbc.pc(), 0x285f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 02B3
        gbc.setState(0xb938, 0x2753, 0xe670, 0x7b4d, 0xfcda, 0x590e, 0x0, 0x1);
        gbc.writeMem(0x590e, { 0x66 });
        gbc.writeMem(0xb938, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2753);
        EXPECT(gbc.pc(), 0xb939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb938), 0x8e);
        // 8E 02B4
        gbc.setState(0x6d60, 0xe9ea, 0xf1d0, 0xc2be, 0xfa58, 0x3bb7, 0x0, 0x1);
        gbc.writeMem(0x3bb7, { 0xd7 });
        gbc.writeMem(0x6d60, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe9ea);
        EXPECT(gbc.pc(), 0x6d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 02B5
        gbc.setState(0xec5d, 0x2011, 0xc740, 0x12d2, 0xa0b, 0xbb1, 0x1, 0x0);
        gbc.writeMem(0xbb1, { 0x1a });
        gbc.writeMem(0xec5d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2011);
        EXPECT(gbc.pc(), 0xec5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec5d), 0x8e);
        // 8E 02B6
        gbc.setState(0x8f2a, 0x7784, 0x2020, 0xec5f, 0x8a3b, 0x9b9d, 0x1, 0x1);
        gbc.writeMem(0x8f2a, { 0x8e });
        gbc.writeMem(0x9b9d, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7784);
        EXPECT(gbc.pc(), 0x8f2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f2a), 0x8e);
        EXPECT(gbc.readMem(0x9b9d), 0xe6);
        // 8E 02B7
        gbc.setState(0x37fd, 0x5f3f, 0xfb70, 0x3468, 0x970b, 0x4454, 0x0, 0x1);
        gbc.writeMem(0x37fd, { 0x8e });
        gbc.writeMem(0x4454, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5f3f);
        EXPECT(gbc.pc(), 0x37fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 02B8
        gbc.setState(0x10bb, 0xa7d2, 0x3e40, 0x744c, 0x8645, 0xf224, 0x0, 0x1);
        gbc.writeMem(0x10bb, { 0x8e });
        gbc.writeMem(0xf224, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa7d2);
        EXPECT(gbc.pc(), 0x10bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf224), 0x2);
        // 8E 02B9
        gbc.setState(0xa149, 0x3839, 0x77e0, 0x7e7d, 0xa33e, 0x981d, 0x0, 0x1);
        gbc.writeMem(0x981d, { 0xc3 });
        gbc.writeMem(0xa149, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3839);
        EXPECT(gbc.pc(), 0xa14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x981d), 0xc3);
        EXPECT(gbc.readMem(0xa149), 0x8e);
        // 8E 02BA
        gbc.setState(0x4088, 0xf737, 0xb6e0, 0xc7ee, 0x6382, 0xf54e, 0x1, 0x1);
        gbc.writeMem(0x4088, { 0x8e });
        gbc.writeMem(0xf54e, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf737);
        EXPECT(gbc.pc(), 0x4089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf54e), 0xad);
        // 8E 02BB
        gbc.setState(0x1f57, 0xb100, 0xed30, 0x765e, 0xa328, 0x144f, 0x1, 0x0);
        gbc.writeMem(0x144f, { 0xd });
        gbc.writeMem(0x1f57, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb100);
        EXPECT(gbc.pc(), 0x1f58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 02BC
        gbc.setState(0x2cc6, 0x620b, 0x44f0, 0x4d01, 0xa10e, 0x6615, 0x1, 0x1);
        gbc.writeMem(0x2cc6, { 0x8e });
        gbc.writeMem(0x6615, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x620b);
        EXPECT(gbc.pc(), 0x2cc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 02BD
        gbc.setState(0x1cfd, 0x5e21, 0x69c0, 0x559d, 0xc727, 0xc17f, 0x0, 0x0);
        gbc.writeMem(0x1cfd, { 0x8e });
        gbc.writeMem(0xc17f, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5e21);
        EXPECT(gbc.pc(), 0x1cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc17f), 0x85);
        // 8E 02BE
        gbc.setState(0x30c9, 0x6e6b, 0x5930, 0xf5b8, 0x244e, 0xbafe, 0x0, 0x1);
        gbc.writeMem(0x30c9, { 0x8e });
        gbc.writeMem(0xbafe, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6e6b);
        EXPECT(gbc.pc(), 0x30ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbafe), 0xa);
        // 8E 02C0
        gbc.setState(0x691f, 0xdd57, 0xc3b0, 0x34d2, 0xbe15, 0x7ec6, 0x0, 0x0);
        gbc.writeMem(0x691f, { 0x8e });
        gbc.writeMem(0x7ec6, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xdd57);
        EXPECT(gbc.pc(), 0x6920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 02C1
        gbc.setState(0xd6b, 0x5f74, 0x6060, 0x199d, 0x6d27, 0xdd38, 0x1, 0x1);
        gbc.writeMem(0xd6b, { 0x8e });
        gbc.writeMem(0xdd38, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5f74);
        EXPECT(gbc.pc(), 0xd6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd38), 0xd);
        // 8E 02C2
        gbc.setState(0x1cc5, 0x2e2e, 0x2860, 0x9bc5, 0xa9e4, 0x71f1, 0x1, 0x1);
        gbc.writeMem(0x1cc5, { 0x8e });
        gbc.writeMem(0x71f1, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2e2e);
        EXPECT(gbc.pc(), 0x1cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 02C3
        gbc.setState(0xd21f, 0xca35, 0x73c0, 0x162c, 0x494e, 0x10c0, 0x0, 0x0);
        gbc.writeMem(0x10c0, { 0xb9 });
        gbc.writeMem(0xd21f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xca35);
        EXPECT(gbc.pc(), 0xd220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21f), 0x8e);
        // 8E 02C4
        gbc.setState(0x7deb, 0xed98, 0x61a0, 0xb896, 0x7302, 0xae0c, 0x0, 0x0);
        gbc.writeMem(0x7deb, { 0x8e });
        gbc.writeMem(0xae0c, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xed98);
        EXPECT(gbc.pc(), 0x7dec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae0c), 0x11);
        // 8E 02C5
        gbc.setState(0xc97a, 0xb751, 0xa650, 0x5fcd, 0xdede, 0x68cb, 0x1, 0x0);
        gbc.writeMem(0x68cb, { 0x46 });
        gbc.writeMem(0xc97a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb751);
        EXPECT(gbc.pc(), 0xc97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97a), 0x8e);
        // 8E 02C6
        gbc.setState(0x1300, 0xceba, 0xea70, 0x8d0f, 0xc321, 0xcce3, 0x0, 0x1);
        gbc.writeMem(0x1300, { 0x8e });
        gbc.writeMem(0xcce3, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xceba);
        EXPECT(gbc.pc(), 0x1301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcce3), 0x23);
        // 8E 02C7
        gbc.setState(0x8823, 0x41af, 0x9e40, 0xe628, 0xd648, 0x56e, 0x1, 0x1);
        gbc.writeMem(0x56e, { 0x23 });
        gbc.writeMem(0x8823, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x41af);
        EXPECT(gbc.pc(), 0x8824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8823), 0x8e);
        // 8E 02C8
        gbc.setState(0xd745, 0xef4a, 0x2460, 0xb223, 0xa3c3, 0xdd68, 0x0, 0x1);
        gbc.writeMem(0xd745, { 0x8e });
        gbc.writeMem(0xdd68, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xef4a);
        EXPECT(gbc.pc(), 0xd746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd745), 0x8e);
        EXPECT(gbc.readMem(0xdd68), 0x74);
        // 8E 02C9
        gbc.setState(0x13b6, 0xd8b9, 0x4620, 0xc9f8, 0xfa2, 0xe59c, 0x1, 0x1);
        gbc.writeMem(0x13b6, { 0x8e });
        gbc.writeMem(0xe59c, { 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd8b9);
        EXPECT(gbc.pc(), 0x13b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59c), 0x6d);
        // 8E 02CA
        gbc.setState(0x946e, 0xc587, 0x6630, 0x6750, 0xf61a, 0x298a, 0x1, 0x0);
        gbc.writeMem(0x298a, { 0x5c });
        gbc.writeMem(0x946e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc587);
        EXPECT(gbc.pc(), 0x946f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x946e), 0x8e);
        // 8E 02CB
        gbc.setState(0x2011, 0x759d, 0x6e80, 0x85da, 0x9339, 0x161, 0x1, 0x0);
        gbc.writeMem(0x161, { 0xe0 });
        gbc.writeMem(0x2011, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x759d);
        EXPECT(gbc.pc(), 0x2012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 02CC
        gbc.setState(0x1896, 0x64ed, 0x7f50, 0x6709, 0xd70a, 0xaee3, 0x1, 0x0);
        gbc.writeMem(0x1896, { 0x8e });
        gbc.writeMem(0xaee3, { 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x64ed);
        EXPECT(gbc.pc(), 0x1897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee3), 0x64);
        // 8E 02CD
        gbc.setState(0xa5b9, 0xafdc, 0xcae0, 0x5e36, 0xf308, 0xa366, 0x1, 0x0);
        gbc.writeMem(0xa366, { 0x42 });
        gbc.writeMem(0xa5b9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xafdc);
        EXPECT(gbc.pc(), 0xa5ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa366), 0x42);
        EXPECT(gbc.readMem(0xa5b9), 0x8e);
        // 8E 02CE
        gbc.setState(0x6b51, 0x371e, 0xc690, 0xb61b, 0x6567, 0x5e9d, 0x1, 0x1);
        gbc.writeMem(0x5e9d, { 0xac });
        gbc.writeMem(0x6b51, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x371e);
        EXPECT(gbc.pc(), 0x6b52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 02CF
        gbc.setState(0x2d2e, 0xf5ed, 0x4a30, 0xea0f, 0x3c2a, 0x7b44, 0x1, 0x0);
        gbc.writeMem(0x2d2e, { 0x8e });
        gbc.writeMem(0x7b44, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf5ed);
        EXPECT(gbc.pc(), 0x2d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 02D0
        gbc.setState(0xd165, 0xf25d, 0xa660, 0x41d2, 0x3494, 0x67b6, 0x1, 0x1);
        gbc.writeMem(0x67b6, { 0xba });
        gbc.writeMem(0xd165, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf25d);
        EXPECT(gbc.pc(), 0xd166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd165), 0x8e);
        // 8E 02D1
        gbc.setState(0x34b8, 0x759a, 0x70e0, 0x2ab, 0xb216, 0x174, 0x0, 0x0);
        gbc.writeMem(0x174, { 0x4a });
        gbc.writeMem(0x34b8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x759a);
        EXPECT(gbc.pc(), 0x34b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 02D2
        gbc.setState(0xb6c2, 0x9d09, 0x65b0, 0x18eb, 0x6fae, 0x4b26, 0x0, 0x0);
        gbc.writeMem(0x4b26, { 0xbf });
        gbc.writeMem(0xb6c2, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9d09);
        EXPECT(gbc.pc(), 0xb6c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6c2), 0x8e);
        // 8E 02D3
        gbc.setState(0x3ede, 0xb194, 0x6340, 0x5be1, 0x1881, 0xcb3c, 0x0, 0x1);
        gbc.writeMem(0x3ede, { 0x8e });
        gbc.writeMem(0xcb3c, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb194);
        EXPECT(gbc.pc(), 0x3edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3c), 0x88);
        // 8E 02D4
        gbc.setState(0x5d55, 0x79e8, 0x9450, 0x47a5, 0x7f9, 0x851, 0x1, 0x0);
        gbc.writeMem(0x851, { 0xbd });
        gbc.writeMem(0x5d55, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x79e8);
        EXPECT(gbc.pc(), 0x5d56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 02D5
        gbc.setState(0x4fb6, 0x8e2, 0x5f20, 0xd242, 0xea87, 0x221e, 0x0, 0x0);
        gbc.writeMem(0x221e, { 0xf7 });
        gbc.writeMem(0x4fb6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8e2);
        EXPECT(gbc.pc(), 0x4fb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 02D6
        gbc.setState(0x4ff9, 0xa0fa, 0x9080, 0xce41, 0x414, 0x3642, 0x1, 0x1);
        gbc.writeMem(0x3642, { 0x90 });
        gbc.writeMem(0x4ff9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa0fa);
        EXPECT(gbc.pc(), 0x4ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 02D7
        gbc.setState(0xc8f4, 0xf9ca, 0xc0c0, 0x1c8d, 0xec00, 0x8223, 0x1, 0x1);
        gbc.writeMem(0x8223, { 0x30 });
        gbc.writeMem(0xc8f4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf9ca);
        EXPECT(gbc.pc(), 0xc8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8223), 0x30);
        EXPECT(gbc.readMem(0xc8f4), 0x8e);
        // 8E 02D8
        gbc.setState(0xa1d, 0xb95b, 0x5c40, 0x80ac, 0xa8b5, 0xedf5, 0x1, 0x0);
        gbc.writeMem(0xa1d, { 0x8e });
        gbc.writeMem(0xedf5, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xb95b);
        EXPECT(gbc.pc(), 0xa1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf5), 0x11);
        // 8E 02D9
        gbc.setState(0x2765, 0x65b2, 0x7e20, 0xeaa7, 0xcce3, 0x1b7c, 0x0, 0x1);
        gbc.writeMem(0x1b7c, { 0x3a });
        gbc.writeMem(0x2765, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x65b2);
        EXPECT(gbc.pc(), 0x2766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 02DA
        gbc.setState(0xe202, 0x9005, 0x61a0, 0xce8e, 0x7742, 0x8286, 0x1, 0x0);
        gbc.writeMem(0x8286, { 0x78 });
        gbc.writeMem(0xe202, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9005);
        EXPECT(gbc.pc(), 0xe203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8286), 0x78);
        EXPECT(gbc.readMem(0xe202), 0x8e);
        // 8E 02DB
        gbc.setState(0xd8d3, 0xe4de, 0xa630, 0x54a7, 0xd09e, 0x180b, 0x0, 0x0);
        gbc.writeMem(0x180b, { 0xe3 });
        gbc.writeMem(0xd8d3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe4de);
        EXPECT(gbc.pc(), 0xd8d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d3), 0x8e);
        // 8E 02DC
        gbc.setState(0x4e6c, 0x713c, 0x1520, 0xabed, 0xd0fe, 0x6f9d, 0x1, 0x0);
        gbc.writeMem(0x4e6c, { 0x8e });
        gbc.writeMem(0x6f9d, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x713c);
        EXPECT(gbc.pc(), 0x4e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 02DD
        gbc.setState(0x4a58, 0x8536, 0xf460, 0xaa38, 0x47f, 0xaf25, 0x1, 0x1);
        gbc.writeMem(0x4a58, { 0x8e });
        gbc.writeMem(0xaf25, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8536);
        EXPECT(gbc.pc(), 0x4a59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf25), 0x28);
        // 8E 02DE
        gbc.setState(0x3900, 0x6c6f, 0x56d0, 0x3797, 0x8416, 0x99d2, 0x1, 0x1);
        gbc.writeMem(0x3900, { 0x8e });
        gbc.writeMem(0x99d2, { 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6c6f);
        EXPECT(gbc.pc(), 0x3901);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d2), 0x77);
        // 8E 02DF
        gbc.setState(0x965e, 0xeb8e, 0x83c0, 0x4c0f, 0x4497, 0x89e1, 0x0, 0x1);
        gbc.writeMem(0x89e1, { 0xd3 });
        gbc.writeMem(0x965e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xeb8e);
        EXPECT(gbc.pc(), 0x965f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89e1), 0xd3);
        EXPECT(gbc.readMem(0x965e), 0x8e);
        // 8E 02E0
        gbc.setState(0xeeae, 0xf4e8, 0x640, 0xc67e, 0x2c75, 0x6533, 0x0, 0x1);
        gbc.writeMem(0x6533, { 0xb9 });
        gbc.writeMem(0xeeae, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf4e8);
        EXPECT(gbc.pc(), 0xeeaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeae), 0x8e);
        // 8E 02E1
        gbc.setState(0x8462, 0xc0c9, 0x1900, 0x4c6d, 0xce94, 0x6bdc, 0x1, 0x1);
        gbc.writeMem(0x6bdc, { 0xdb });
        gbc.writeMem(0x8462, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc0c9);
        EXPECT(gbc.pc(), 0x8463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8462), 0x8e);
        // 8E 02E3
        gbc.setState(0x4698, 0xb66d, 0xc730, 0x8ff0, 0x6400, 0x5e3a, 0x1, 0x1);
        gbc.writeMem(0x4698, { 0x8e });
        gbc.writeMem(0x5e3a, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb66d);
        EXPECT(gbc.pc(), 0x4699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 02E4
        gbc.setState(0xcce1, 0x6ec0, 0x380, 0x1a7, 0xa8cb, 0xc114, 0x0, 0x0);
        gbc.writeMem(0xc114, { 0xf9 });
        gbc.writeMem(0xcce1, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6ec0);
        EXPECT(gbc.pc(), 0xcce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc114), 0xf9);
        EXPECT(gbc.readMem(0xcce1), 0x8e);
        // 8E 02E5
        gbc.setState(0x8b72, 0x436d, 0xb780, 0x36a0, 0x48b7, 0xd431, 0x0, 0x1);
        gbc.writeMem(0x8b72, { 0x8e });
        gbc.writeMem(0xd431, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x436d);
        EXPECT(gbc.pc(), 0x8b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b72), 0x8e);
        EXPECT(gbc.readMem(0xd431), 0x86);
        // 8E 02E6
        gbc.setState(0x422a, 0x1e29, 0x4160, 0xbd28, 0x6431, 0xdd73, 0x0, 0x1);
        gbc.writeMem(0x422a, { 0x8e });
        gbc.writeMem(0xdd73, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1e29);
        EXPECT(gbc.pc(), 0x422b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd73), 0x49);
        // 8E 02E7
        gbc.setState(0x3368, 0x3171, 0xbb00, 0xb0d, 0xdcbc, 0x8e19, 0x1, 0x0);
        gbc.writeMem(0x3368, { 0x8e });
        gbc.writeMem(0x8e19, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3171);
        EXPECT(gbc.pc(), 0x3369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e19), 0xfd);
        // 8E 02E8
        gbc.setState(0x4456, 0xa5ae, 0xd980, 0x7710, 0x669a, 0xdae8, 0x1, 0x1);
        gbc.writeMem(0x4456, { 0x8e });
        gbc.writeMem(0xdae8, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa5ae);
        EXPECT(gbc.pc(), 0x4457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae8), 0x60);
        // 8E 02E9
        gbc.setState(0xb68c, 0xb56f, 0xaad0, 0x1b95, 0xf61a, 0x117f, 0x0, 0x0);
        gbc.writeMem(0x117f, { 0xd3 });
        gbc.writeMem(0xb68c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb56f);
        EXPECT(gbc.pc(), 0xb68d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb68c), 0x8e);
        // 8E 02EA
        gbc.setState(0x6295, 0x671e, 0xe1b0, 0x9e38, 0x9b0b, 0x46ab, 0x0, 0x1);
        gbc.writeMem(0x46ab, { 0xba });
        gbc.writeMem(0x6295, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x671e);
        EXPECT(gbc.pc(), 0x6296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 02EB
        gbc.setState(0x71e5, 0x6b11, 0xe6b0, 0xf345, 0x94e1, 0x5852, 0x0, 0x0);
        gbc.writeMem(0x5852, { 0x24 });
        gbc.writeMem(0x71e5, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6b11);
        EXPECT(gbc.pc(), 0x71e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 02EC
        gbc.setState(0x941f, 0x33d5, 0xa150, 0xe0a3, 0xbd00, 0xc6e6, 0x1, 0x1);
        gbc.writeMem(0x941f, { 0x8e });
        gbc.writeMem(0xc6e6, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x33d5);
        EXPECT(gbc.pc(), 0x9420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x941f), 0x8e);
        EXPECT(gbc.readMem(0xc6e6), 0x5a);
        // 8E 02EE
        gbc.setState(0xcea9, 0x724b, 0x6eb0, 0xd46f, 0xa298, 0xb11, 0x1, 0x1);
        gbc.writeMem(0xb11, { 0x3e });
        gbc.writeMem(0xcea9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x724b);
        EXPECT(gbc.pc(), 0xceaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea9), 0x8e);
        // 8E 02EF
        gbc.setState(0xb717, 0x3314, 0x7830, 0xbe3, 0x5530, 0x2427, 0x0, 0x1);
        gbc.writeMem(0x2427, { 0xf1 });
        gbc.writeMem(0xb717, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3314);
        EXPECT(gbc.pc(), 0xb718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb717), 0x8e);
        // 8E 02F0
        gbc.setState(0x2bac, 0x2c77, 0x2d00, 0xbb80, 0x93d, 0x1dc8, 0x0, 0x0);
        gbc.writeMem(0x1dc8, { 0x73 });
        gbc.writeMem(0x2bac, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2c77);
        EXPECT(gbc.pc(), 0x2bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 02F1
        gbc.setState(0xb71f, 0x99d3, 0x7a00, 0xd9fa, 0xc7de, 0xc8, 0x0, 0x1);
        gbc.writeMem(0xc8, { 0x2 });
        gbc.writeMem(0xb71f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x99d3);
        EXPECT(gbc.pc(), 0xb720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb71f), 0x8e);
        // 8E 02F2
        gbc.setState(0x9508, 0xec16, 0xea50, 0x4982, 0x6e30, 0xdd48, 0x0, 0x1);
        gbc.writeMem(0x9508, { 0x8e });
        gbc.writeMem(0xdd48, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xec16);
        EXPECT(gbc.pc(), 0x9509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9508), 0x8e);
        EXPECT(gbc.readMem(0xdd48), 0x9c);
        // 8E 02F3
        gbc.setState(0x482e, 0x33d6, 0x5c20, 0x793f, 0x9430, 0xc202, 0x1, 0x0);
        gbc.writeMem(0x482e, { 0x8e });
        gbc.writeMem(0xc202, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x33d6);
        EXPECT(gbc.pc(), 0x482f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc202), 0xb8);
        // 8E 02F5
        gbc.setState(0xdf35, 0xf38a, 0x2c40, 0x19da, 0xa161, 0x6777, 0x1, 0x1);
        gbc.writeMem(0x6777, { 0xc2 });
        gbc.writeMem(0xdf35, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf38a);
        EXPECT(gbc.pc(), 0xdf36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf35), 0x8e);
        // 8E 02F6
        gbc.setState(0xaccf, 0xb748, 0xb210, 0x3b21, 0x4afc, 0xc94c, 0x1, 0x0);
        gbc.writeMem(0xaccf, { 0x8e });
        gbc.writeMem(0xc94c, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb748);
        EXPECT(gbc.pc(), 0xacd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaccf), 0x8e);
        EXPECT(gbc.readMem(0xc94c), 0x92);
        // 8E 02F7
        gbc.setState(0x84e0, 0x72f7, 0x8bb0, 0xf0f1, 0xd773, 0xde7e, 0x1, 0x0);
        gbc.writeMem(0x84e0, { 0x8e });
        gbc.writeMem(0xde7e, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x72f7);
        EXPECT(gbc.pc(), 0x84e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e0), 0x8e);
        EXPECT(gbc.readMem(0xde7e), 0x75);
        // 8E 02F8
        gbc.setState(0x2ebe, 0xa0f, 0xec50, 0x7626, 0x2c14, 0x969a, 0x0, 0x0);
        gbc.writeMem(0x2ebe, { 0x8e });
        gbc.writeMem(0x969a, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa0f);
        EXPECT(gbc.pc(), 0x2ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x969a), 0x48);
        // 8E 02F9
        gbc.setState(0x8875, 0x5740, 0x4cf0, 0xb3d0, 0xc08e, 0xa20c, 0x0, 0x1);
        gbc.writeMem(0x8875, { 0x8e });
        gbc.writeMem(0xa20c, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5740);
        EXPECT(gbc.pc(), 0x8876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8875), 0x8e);
        EXPECT(gbc.readMem(0xa20c), 0xda);
        // 8E 02FA
        gbc.setState(0x1ccc, 0xd44e, 0x2250, 0x83b1, 0xb793, 0xad16, 0x1, 0x1);
        gbc.writeMem(0x1ccc, { 0x8e });
        gbc.writeMem(0xad16, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd44e);
        EXPECT(gbc.pc(), 0x1ccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad16), 0x3f);
        // 8E 02FB
        gbc.setState(0x729, 0xe7dd, 0x5260, 0xa09e, 0x842a, 0xd47f, 0x1, 0x0);
        gbc.writeMem(0x729, { 0x8e });
        gbc.writeMem(0xd47f, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe7dd);
        EXPECT(gbc.pc(), 0x72a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd47f), 0xa2);
        // 8E 02FC
        gbc.setState(0xec33, 0xc716, 0xd010, 0x3d4d, 0xa0ec, 0x6230, 0x1, 0x0);
        gbc.writeMem(0x6230, { 0xc8 });
        gbc.writeMem(0xec33, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc716);
        EXPECT(gbc.pc(), 0xec34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec33), 0x8e);
        // 8E 02FD
        gbc.setState(0x1c35, 0x679d, 0xa870, 0x5e13, 0xfca5, 0x7547, 0x0, 0x1);
        gbc.writeMem(0x1c35, { 0x8e });
        gbc.writeMem(0x7547, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x679d);
        EXPECT(gbc.pc(), 0x1c36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 02FE
        gbc.setState(0xdb09, 0xa016, 0x7cd0, 0x4fdb, 0x936a, 0x9fe6, 0x0, 0x1);
        gbc.writeMem(0x9fe6, { 0x74 });
        gbc.writeMem(0xdb09, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa016);
        EXPECT(gbc.pc(), 0xdb0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe6), 0x74);
        EXPECT(gbc.readMem(0xdb09), 0x8e);
        // 8E 02FF
        gbc.setState(0x65ee, 0xe0ae, 0xee60, 0xbe91, 0x3b12, 0x8c64, 0x0, 0x1);
        gbc.writeMem(0x65ee, { 0x8e });
        gbc.writeMem(0x8c64, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe0ae);
        EXPECT(gbc.pc(), 0x65ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c64), 0x5d);
        // 8E 0300
        gbc.setState(0x8385, 0x35be, 0x3ac0, 0x68aa, 0x5ca2, 0x4a6a, 0x0, 0x0);
        gbc.writeMem(0x4a6a, { 0xb1 });
        gbc.writeMem(0x8385, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x35be);
        EXPECT(gbc.pc(), 0x8386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8385), 0x8e);
        // 8E 0301
        gbc.setState(0xd260, 0xbae9, 0xbaf0, 0x8d8a, 0xd5bc, 0xa33a, 0x0, 0x1);
        gbc.writeMem(0xa33a, { 0x8b });
        gbc.writeMem(0xd260, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xbae9);
        EXPECT(gbc.pc(), 0xd261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa33a), 0x8b);
        EXPECT(gbc.readMem(0xd260), 0x8e);
        // 8E 0302
        gbc.setState(0x519, 0x2af9, 0x2640, 0x66ff, 0x68cc, 0x69c, 0x0, 0x0);
        gbc.writeMem(0x519, { 0x8e });
        gbc.writeMem(0x69c, { 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2af9);
        EXPECT(gbc.pc(), 0x51a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0303
        gbc.setState(0x6983, 0x5011, 0x9410, 0x8db8, 0xadf9, 0x5669, 0x0, 0x1);
        gbc.writeMem(0x5669, { 0x86 });
        gbc.writeMem(0x6983, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5011);
        EXPECT(gbc.pc(), 0x6984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0304
        gbc.setState(0xd403, 0xe0a, 0xda90, 0x6c77, 0x759, 0x301e, 0x1, 0x1);
        gbc.writeMem(0x301e, { 0x5 });
        gbc.writeMem(0xd403, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe0a);
        EXPECT(gbc.pc(), 0xd404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd403), 0x8e);
        // 8E 0305
        gbc.setState(0x4821, 0x399f, 0x46a0, 0x68bf, 0x93a8, 0xc0eb, 0x1, 0x0);
        gbc.writeMem(0x4821, { 0x8e });
        gbc.writeMem(0xc0eb, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x399f);
        EXPECT(gbc.pc(), 0x4822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0eb), 0xf8);
        // 8E 0307
        gbc.setState(0xd6bc, 0x45c7, 0x1710, 0x55d1, 0x1115, 0xc4ab, 0x0, 0x0);
        gbc.writeMem(0xc4ab, { 0x6d });
        gbc.writeMem(0xd6bc, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x45c7);
        EXPECT(gbc.pc(), 0xd6bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ab), 0x6d);
        EXPECT(gbc.readMem(0xd6bc), 0x8e);
        // 8E 0308
        gbc.setState(0x7dc2, 0x260, 0x1ab0, 0x8d0f, 0x5fc7, 0xe0f5, 0x0, 0x1);
        gbc.writeMem(0x7dc2, { 0x8e });
        gbc.writeMem(0xe0f5, { 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x260);
        EXPECT(gbc.pc(), 0x7dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0f5), 0xff);
        // 8E 0309
        gbc.setState(0xbb90, 0x8483, 0x2c80, 0xc1e3, 0xdfd2, 0xfbbf, 0x0, 0x1);
        gbc.writeMem(0xbb90, { 0x8e });
        gbc.writeMem(0xfbbf, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8483);
        EXPECT(gbc.pc(), 0xbb91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb90), 0x8e);
        EXPECT(gbc.readMem(0xfbbf), 0x6b);
        // 8E 030A
        gbc.setState(0x7eb9, 0x6253, 0x7eb0, 0x5dc2, 0xef24, 0xc1e3, 0x1, 0x1);
        gbc.writeMem(0x7eb9, { 0x8e });
        gbc.writeMem(0xc1e3, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6253);
        EXPECT(gbc.pc(), 0x7eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e3), 0x89);
        // 8E 030B
        gbc.setState(0x52d5, 0xd290, 0x6010, 0xcaed, 0x27c9, 0x52ac, 0x0, 0x1);
        gbc.writeMem(0x52ac, { 0x47 });
        gbc.writeMem(0x52d5, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd290);
        EXPECT(gbc.pc(), 0x52d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 030C
        gbc.setState(0x99ab, 0x4a82, 0x2000, 0xb209, 0x83ba, 0xc312, 0x0, 0x1);
        gbc.writeMem(0x99ab, { 0x8e });
        gbc.writeMem(0xc312, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4a82);
        EXPECT(gbc.pc(), 0x99ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ab), 0x8e);
        EXPECT(gbc.readMem(0xc312), 0x35);
        // 8E 030D
        gbc.setState(0x28dd, 0x1c04, 0xa30, 0x562d, 0x56a3, 0x247c, 0x1, 0x0);
        gbc.writeMem(0x247c, { 0x7d });
        gbc.writeMem(0x28dd, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1c04);
        EXPECT(gbc.pc(), 0x28de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 030E
        gbc.setState(0x454e, 0x4edd, 0x4070, 0xc362, 0xa0f5, 0x9039, 0x1, 0x0);
        gbc.writeMem(0x454e, { 0x8e });
        gbc.writeMem(0x9039, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4edd);
        EXPECT(gbc.pc(), 0x454f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9039), 0xb4);
        // 8E 030F
        gbc.setState(0x3ea7, 0x79d9, 0x28f0, 0x47b7, 0xb38c, 0xfa39, 0x1, 0x1);
        gbc.writeMem(0x3ea7, { 0x8e });
        gbc.writeMem(0xfa39, { 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x79d9);
        EXPECT(gbc.pc(), 0x3ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa39), 0xd0);
        // 8E 0310
        gbc.setState(0x8d63, 0x34f, 0xd780, 0x9b29, 0xc1be, 0x2265, 0x0, 0x0);
        gbc.writeMem(0x2265, { 0x2d });
        gbc.writeMem(0x8d63, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x34f);
        EXPECT(gbc.pc(), 0x8d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d63), 0x8e);
        // 8E 0311
        gbc.setState(0x2431, 0xb074, 0xcde0, 0xa6d6, 0xbc4a, 0xbc7e, 0x0, 0x1);
        gbc.writeMem(0x2431, { 0x8e });
        gbc.writeMem(0xbc7e, { 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb074);
        EXPECT(gbc.pc(), 0x2432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7e), 0x32);
        // 8E 0312
        gbc.setState(0xe2f0, 0x459b, 0x3870, 0xd3a5, 0x1c52, 0x66e9, 0x1, 0x1);
        gbc.writeMem(0x66e9, { 0x68 });
        gbc.writeMem(0xe2f0, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x459b);
        EXPECT(gbc.pc(), 0xe2f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f0), 0x8e);
        // 8E 0313
        gbc.setState(0xd2e4, 0x7208, 0xe030, 0x43c6, 0x4aa, 0x50c, 0x1, 0x0);
        gbc.writeMem(0x50c, { 0xd0 });
        gbc.writeMem(0xd2e4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7208);
        EXPECT(gbc.pc(), 0xd2e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2e4), 0x8e);
        // 8E 0314
        gbc.setState(0x5cf3, 0x619b, 0x8450, 0x7033, 0x72ee, 0x3b0d, 0x1, 0x0);
        gbc.writeMem(0x3b0d, { 0xbc });
        gbc.writeMem(0x5cf3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x619b);
        EXPECT(gbc.pc(), 0x5cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0315
        gbc.setState(0x6dfe, 0xc20d, 0xacd0, 0x251b, 0xcd53, 0x9536, 0x1, 0x1);
        gbc.writeMem(0x6dfe, { 0x8e });
        gbc.writeMem(0x9536, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc20d);
        EXPECT(gbc.pc(), 0x6dff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9536), 0x8c);
        // 8E 0317
        gbc.setState(0x4434, 0x5a61, 0xdca0, 0xa331, 0x4c81, 0x9ab5, 0x1, 0x0);
        gbc.writeMem(0x4434, { 0x8e });
        gbc.writeMem(0x9ab5, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5a61);
        EXPECT(gbc.pc(), 0x4435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab5), 0x22);
        // 8E 0318
        gbc.setState(0x9b76, 0xbe2c, 0x8770, 0xcc80, 0xcf06, 0x502a, 0x0, 0x0);
        gbc.writeMem(0x502a, { 0x96 });
        gbc.writeMem(0x9b76, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbe2c);
        EXPECT(gbc.pc(), 0x9b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b76), 0x8e);
        // 8E 0319
        gbc.setState(0x46b, 0xee84, 0x2b40, 0x8bfe, 0xcb16, 0x826a, 0x0, 0x0);
        gbc.writeMem(0x46b, { 0x8e });
        gbc.writeMem(0x826a, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xee84);
        EXPECT(gbc.pc(), 0x46c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826a), 0x8b);
        // 8E 031B
        gbc.setState(0x8fcc, 0xf680, 0xad50, 0xd319, 0x951e, 0xa7fa, 0x0, 0x1);
        gbc.writeMem(0x8fcc, { 0x8e });
        gbc.writeMem(0xa7fa, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf680);
        EXPECT(gbc.pc(), 0x8fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fcc), 0x8e);
        EXPECT(gbc.readMem(0xa7fa), 0x63);
        // 8E 031C
        gbc.setState(0xc368, 0x168b, 0xc400, 0x4885, 0xb704, 0x930e, 0x1, 0x0);
        gbc.writeMem(0x930e, { 0xf6 });
        gbc.writeMem(0xc368, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x168b);
        EXPECT(gbc.pc(), 0xc369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930e), 0xf6);
        EXPECT(gbc.readMem(0xc368), 0x8e);
        // 8E 031D
        gbc.setState(0x3a1b, 0xd3a4, 0x550, 0xb7cc, 0xbfac, 0xb513, 0x0, 0x1);
        gbc.writeMem(0x3a1b, { 0x8e });
        gbc.writeMem(0xb513, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd3a4);
        EXPECT(gbc.pc(), 0x3a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb513), 0x34);
        // 8E 031E
        gbc.setState(0x8b31, 0xbe5c, 0xfd90, 0xc5de, 0x18e0, 0x7aad, 0x1, 0x1);
        gbc.writeMem(0x7aad, { 0xd1 });
        gbc.writeMem(0x8b31, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbe5c);
        EXPECT(gbc.pc(), 0x8b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b31), 0x8e);
        // 8E 031F
        gbc.setState(0x196d, 0xca38, 0x2850, 0xb01, 0x4534, 0xff83, 0x0, 0x0);
        gbc.writeMem(0x196d, { 0x8e });
        gbc.writeMem(0xff83, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xca38);
        EXPECT(gbc.pc(), 0x196e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff83), 0x52);
        // 8E 0320
        gbc.setState(0x6c3c, 0x7656, 0x52c0, 0x91f6, 0x22ce, 0x28b6, 0x0, 0x1);
        gbc.writeMem(0x28b6, { 0xb7 });
        gbc.writeMem(0x6c3c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7656);
        EXPECT(gbc.pc(), 0x6c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0321
        gbc.setState(0x8ae4, 0xc2a9, 0x89b0, 0xe36d, 0xfc2a, 0xc0d1, 0x0, 0x0);
        gbc.writeMem(0x8ae4, { 0x8e });
        gbc.writeMem(0xc0d1, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc2a9);
        EXPECT(gbc.pc(), 0x8ae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ae4), 0x8e);
        EXPECT(gbc.readMem(0xc0d1), 0xdd);
        // 8E 0322
        gbc.setState(0x7675, 0xb0c1, 0x5a70, 0xebc6, 0x1f17, 0x9729, 0x1, 0x1);
        gbc.writeMem(0x7675, { 0x8e });
        gbc.writeMem(0x9729, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb0c1);
        EXPECT(gbc.pc(), 0x7676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9729), 0xc1);
        // 8E 0323
        gbc.setState(0x7d06, 0x778a, 0x5e10, 0x8c38, 0x8f6e, 0x262f, 0x1, 0x0);
        gbc.writeMem(0x262f, { 0xf1 });
        gbc.writeMem(0x7d06, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x778a);
        EXPECT(gbc.pc(), 0x7d07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0324
        gbc.setState(0x3648, 0x61bc, 0x9650, 0x3fea, 0x7402, 0x3017, 0x0, 0x1);
        gbc.writeMem(0x3017, { 0x14 });
        gbc.writeMem(0x3648, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x61bc);
        EXPECT(gbc.pc(), 0x3649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0325
        gbc.setState(0x1749, 0xfe8f, 0xd20, 0x8121, 0x5ce6, 0xf39b, 0x1, 0x0);
        gbc.writeMem(0x1749, { 0x8e });
        gbc.writeMem(0xf39b, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfe8f);
        EXPECT(gbc.pc(), 0x174a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf39b), 0x63);
        // 8E 0326
        gbc.setState(0x77d5, 0xdae3, 0xbc70, 0xdadb, 0x566a, 0x955, 0x1, 0x0);
        gbc.writeMem(0x955, { 0x47 });
        gbc.writeMem(0x77d5, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xdae3);
        EXPECT(gbc.pc(), 0x77d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0327
        gbc.setState(0x10e6, 0x31dc, 0xefe0, 0x8101, 0x5f7c, 0xd93, 0x1, 0x1);
        gbc.writeMem(0xd93, { 0x12 });
        gbc.writeMem(0x10e6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x31dc);
        EXPECT(gbc.pc(), 0x10e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0328
        gbc.setState(0x8a9, 0x5b12, 0x8540, 0xd322, 0x7bc1, 0x284a, 0x1, 0x1);
        gbc.writeMem(0x8a9, { 0x8e });
        gbc.writeMem(0x284a, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5b12);
        EXPECT(gbc.pc(), 0x8aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0329
        gbc.setState(0xbd23, 0x9b75, 0xfde0, 0x7f2c, 0x2f5f, 0xb130, 0x0, 0x1);
        gbc.writeMem(0xb130, { 0xeb });
        gbc.writeMem(0xbd23, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9b75);
        EXPECT(gbc.pc(), 0xbd24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb130), 0xeb);
        EXPECT(gbc.readMem(0xbd23), 0x8e);
        // 8E 032A
        gbc.setState(0x9cc5, 0x6d97, 0x6990, 0x22eb, 0x773b, 0xb4d9, 0x0, 0x0);
        gbc.writeMem(0x9cc5, { 0x8e });
        gbc.writeMem(0xb4d9, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6d97);
        EXPECT(gbc.pc(), 0x9cc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc5), 0x8e);
        EXPECT(gbc.readMem(0xb4d9), 0x7a);
        // 8E 032B
        gbc.setState(0xa7f, 0x54ed, 0x4a50, 0x8118, 0x6c22, 0xeb90, 0x1, 0x0);
        gbc.writeMem(0xa7f, { 0x8e });
        gbc.writeMem(0xeb90, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x54ed);
        EXPECT(gbc.pc(), 0xa80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb90), 0x3a);
        // 8E 032D
        gbc.setState(0x4f6b, 0x9b1f, 0x78f0, 0x971c, 0xce42, 0xe0c2, 0x0, 0x0);
        gbc.writeMem(0x4f6b, { 0x8e });
        gbc.writeMem(0xe0c2, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9b1f);
        EXPECT(gbc.pc(), 0x4f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c2), 0xea);
        // 8E 032F
        gbc.setState(0x7603, 0x286f, 0x82d0, 0x839d, 0x5755, 0x2dc0, 0x0, 0x0);
        gbc.writeMem(0x2dc0, { 0x3f });
        gbc.writeMem(0x7603, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x286f);
        EXPECT(gbc.pc(), 0x7604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0330
        gbc.setState(0x3b47, 0xd309, 0x69c0, 0xb471, 0x9722, 0x6cc6, 0x0, 0x0);
        gbc.writeMem(0x3b47, { 0x8e });
        gbc.writeMem(0x6cc6, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd309);
        EXPECT(gbc.pc(), 0x3b48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0331
        gbc.setState(0x23e9, 0x109a, 0x1860, 0x5265, 0x400a, 0x4226, 0x1, 0x1);
        gbc.writeMem(0x23e9, { 0x8e });
        gbc.writeMem(0x4226, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x109a);
        EXPECT(gbc.pc(), 0x23ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0332
        gbc.setState(0xb97a, 0xa89e, 0x4fd0, 0xad8c, 0x2099, 0x7e86, 0x1, 0x1);
        gbc.writeMem(0x7e86, { 0x52 });
        gbc.writeMem(0xb97a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa89e);
        EXPECT(gbc.pc(), 0xb97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb97a), 0x8e);
        // 8E 0333
        gbc.setState(0x499d, 0xd48c, 0xbc10, 0xd47c, 0x7c06, 0xfbe4, 0x1, 0x0);
        gbc.writeMem(0x499d, { 0x8e });
        gbc.writeMem(0xfbe4, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd48c);
        EXPECT(gbc.pc(), 0x499e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfbe4), 0xd6);
        // 8E 0334
        gbc.setState(0xc176, 0x86b6, 0x21c0, 0x6921, 0xa5b2, 0x5acd, 0x0, 0x0);
        gbc.writeMem(0x5acd, { 0x1 });
        gbc.writeMem(0xc176, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x86b6);
        EXPECT(gbc.pc(), 0xc177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc176), 0x8e);
        // 8E 0336
        gbc.setState(0xa5aa, 0x7cba, 0xfdf0, 0x7734, 0xc104, 0x841c, 0x1, 0x1);
        gbc.writeMem(0x841c, { 0xa2 });
        gbc.writeMem(0xa5aa, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7cba);
        EXPECT(gbc.pc(), 0xa5ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841c), 0xa2);
        EXPECT(gbc.readMem(0xa5aa), 0x8e);
        // 8E 0337
        gbc.setState(0x3c01, 0x83bc, 0xa1e0, 0xce63, 0x9703, 0x7cfc, 0x0, 0x1);
        gbc.writeMem(0x3c01, { 0x8e });
        gbc.writeMem(0x7cfc, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x83bc);
        EXPECT(gbc.pc(), 0x3c02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0338
        gbc.setState(0x481, 0xe36a, 0x4da0, 0xa86d, 0x7521, 0xcf44, 0x1, 0x0);
        gbc.writeMem(0x481, { 0x8e });
        gbc.writeMem(0xcf44, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe36a);
        EXPECT(gbc.pc(), 0x482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf44), 0x58);
        // 8E 0339
        gbc.setState(0x887, 0x2127, 0xb580, 0x613d, 0x2757, 0xac4f, 0x1, 0x0);
        gbc.writeMem(0x887, { 0x8e });
        gbc.writeMem(0xac4f, { 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2127);
        EXPECT(gbc.pc(), 0x888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac4f), 0x90);
        // 8E 033A
        gbc.setState(0x7c6c, 0xd6e0, 0xcb40, 0xccd7, 0x14a, 0xda55, 0x0, 0x0);
        gbc.writeMem(0x7c6c, { 0x8e });
        gbc.writeMem(0xda55, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd6e0);
        EXPECT(gbc.pc(), 0x7c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda55), 0x9c);
        // 8E 033B
        gbc.setState(0x4390, 0x4c9d, 0xaf60, 0x5954, 0xfb00, 0x7bca, 0x0, 0x1);
        gbc.writeMem(0x4390, { 0x8e });
        gbc.writeMem(0x7bca, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4c9d);
        EXPECT(gbc.pc(), 0x4391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 033C
        gbc.setState(0xcfe6, 0xdbfe, 0xd8a0, 0xe92b, 0xe414, 0x195d, 0x1, 0x0);
        gbc.writeMem(0x195d, { 0x54 });
        gbc.writeMem(0xcfe6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xdbfe);
        EXPECT(gbc.pc(), 0xcfe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe6), 0x8e);
        // 8E 033D
        gbc.setState(0x9920, 0xa47e, 0x2b0, 0xe404, 0x9df9, 0xce49, 0x1, 0x0);
        gbc.writeMem(0x9920, { 0x8e });
        gbc.writeMem(0xce49, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa47e);
        EXPECT(gbc.pc(), 0x9921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9920), 0x8e);
        EXPECT(gbc.readMem(0xce49), 0x99);
        // 8E 033E
        gbc.setState(0x1a3a, 0x216b, 0xe220, 0x4dec, 0xaca5, 0xf177, 0x0, 0x0);
        gbc.writeMem(0x1a3a, { 0x8e });
        gbc.writeMem(0xf177, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x216b);
        EXPECT(gbc.pc(), 0x1a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf177), 0x2d);
        // 8E 033F
        gbc.setState(0xd981, 0x6093, 0xe210, 0xb056, 0xa098, 0x8323, 0x0, 0x1);
        gbc.writeMem(0x8323, { 0x8f });
        gbc.writeMem(0xd981, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6093);
        EXPECT(gbc.pc(), 0xd982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8323), 0x8f);
        EXPECT(gbc.readMem(0xd981), 0x8e);
        // 8E 0340
        gbc.setState(0x478b, 0x858f, 0x32c0, 0x3543, 0xfcee, 0x35cc, 0x1, 0x0);
        gbc.writeMem(0x35cc, { 0xd4 });
        gbc.writeMem(0x478b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x858f);
        EXPECT(gbc.pc(), 0x478c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0341
        gbc.setState(0x3f78, 0xf962, 0x5740, 0xca75, 0xed15, 0xe5e5, 0x1, 0x0);
        gbc.writeMem(0x3f78, { 0x8e });
        gbc.writeMem(0xe5e5, { 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf962);
        EXPECT(gbc.pc(), 0x3f79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5e5), 0xee);
        // 8E 0342
        gbc.setState(0xd509, 0x9d7b, 0xb660, 0x4556, 0x2eb0, 0x79e0, 0x1, 0x1);
        gbc.writeMem(0x79e0, { 0xe3 });
        gbc.writeMem(0xd509, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9d7b);
        EXPECT(gbc.pc(), 0xd50a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd509), 0x8e);
        // 8E 0343
        gbc.setState(0x1ce3, 0x2830, 0xbea0, 0x6698, 0x3efe, 0xa4d2, 0x0, 0x1);
        gbc.writeMem(0x1ce3, { 0x8e });
        gbc.writeMem(0xa4d2, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2830);
        EXPECT(gbc.pc(), 0x1ce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d2), 0xea);
        // 8E 0344
        gbc.setState(0xbc1d, 0x85b3, 0x6130, 0xabd0, 0xf8e3, 0x3bac, 0x0, 0x0);
        gbc.writeMem(0x3bac, { 0x7d });
        gbc.writeMem(0xbc1d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x85b3);
        EXPECT(gbc.pc(), 0xbc1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc1d), 0x8e);
        // 8E 0345
        gbc.setState(0x756b, 0xeb7, 0x130, 0xf738, 0xdb9d, 0x4da0, 0x1, 0x0);
        gbc.writeMem(0x4da0, { 0x99 });
        gbc.writeMem(0x756b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xeb7);
        EXPECT(gbc.pc(), 0x756c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0346
        gbc.setState(0x96d3, 0x3786, 0x1150, 0xe7a6, 0x63, 0x829, 0x1, 0x1);
        gbc.writeMem(0x829, { 0xff });
        gbc.writeMem(0x96d3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3786);
        EXPECT(gbc.pc(), 0x96d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d3), 0x8e);
        // 8E 0347
        gbc.setState(0x1d8c, 0x32d4, 0xb780, 0x20d7, 0x1e, 0xc477, 0x1, 0x1);
        gbc.writeMem(0x1d8c, { 0x8e });
        gbc.writeMem(0xc477, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x32d4);
        EXPECT(gbc.pc(), 0x1d8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc477), 0xec);
        // 8E 0348
        gbc.setState(0x122d, 0x2b46, 0xc670, 0x6b93, 0xc106, 0x4fac, 0x1, 0x0);
        gbc.writeMem(0x122d, { 0x8e });
        gbc.writeMem(0x4fac, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2b46);
        EXPECT(gbc.pc(), 0x122e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 034A
        gbc.setState(0xce00, 0x8d7c, 0x2e20, 0x69cf, 0x1c80, 0xb8a7, 0x0, 0x0);
        gbc.writeMem(0xb8a7, { 0x7b });
        gbc.writeMem(0xce00, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8d7c);
        EXPECT(gbc.pc(), 0xce01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8a7), 0x7b);
        EXPECT(gbc.readMem(0xce00), 0x8e);
        // 8E 034B
        gbc.setState(0x6094, 0xab60, 0x9e20, 0x695, 0xdbea, 0x2b8, 0x0, 0x1);
        gbc.writeMem(0x2b8, { 0x91 });
        gbc.writeMem(0x6094, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xab60);
        EXPECT(gbc.pc(), 0x6095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 034C
        gbc.setState(0xef5a, 0xce8, 0x6bd0, 0xdf5d, 0x79ca, 0x4bdc, 0x1, 0x1);
        gbc.writeMem(0x4bdc, { 0xf2 });
        gbc.writeMem(0xef5a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xce8);
        EXPECT(gbc.pc(), 0xef5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef5a), 0x8e);
        // 8E 034D
        gbc.setState(0x5067, 0x32e5, 0x1d60, 0x7705, 0x588e, 0xd41, 0x1, 0x0);
        gbc.writeMem(0xd41, { 0xdc });
        gbc.writeMem(0x5067, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x32e5);
        EXPECT(gbc.pc(), 0x5068);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 034E
        gbc.setState(0xad2, 0x1db5, 0x4bf0, 0xd5cd, 0x9ff6, 0xc3a9, 0x1, 0x1);
        gbc.writeMem(0xad2, { 0x8e });
        gbc.writeMem(0xc3a9, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1db5);
        EXPECT(gbc.pc(), 0xad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3a9), 0x12);
        // 8E 034F
        gbc.setState(0xd8f8, 0x5fc1, 0xfa20, 0xdedf, 0xb7d6, 0xeb, 0x0, 0x1);
        gbc.writeMem(0xeb, { 0x58 });
        gbc.writeMem(0xd8f8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5fc1);
        EXPECT(gbc.pc(), 0xd8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f8), 0x8e);
        // 8E 0350
        gbc.setState(0xb520, 0x228b, 0x1ad0, 0xd5f4, 0x1c7b, 0x3269, 0x1, 0x1);
        gbc.writeMem(0x3269, { 0x8e });
        gbc.writeMem(0xb520, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x228b);
        EXPECT(gbc.pc(), 0xb521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb520), 0x8e);
        // 8E 0351
        gbc.setState(0x38c7, 0x66b1, 0x5560, 0xf6d1, 0x52c5, 0xb430, 0x0, 0x0);
        gbc.writeMem(0x38c7, { 0x8e });
        gbc.writeMem(0xb430, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x66b1);
        EXPECT(gbc.pc(), 0x38c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb430), 0x9);
        // 8E 0352
        gbc.setState(0xbfdd, 0xf7, 0x74a0, 0xf5e3, 0x78d0, 0x29bb, 0x1, 0x0);
        gbc.writeMem(0x29bb, { 0x59 });
        gbc.writeMem(0xbfdd, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf7);
        EXPECT(gbc.pc(), 0xbfde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfdd), 0x8e);
        // 8E 0353
        gbc.setState(0xae09, 0xe5cc, 0x1b00, 0x9a6c, 0xa175, 0xc730, 0x0, 0x1);
        gbc.writeMem(0xae09, { 0x8e });
        gbc.writeMem(0xc730, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe5cc);
        EXPECT(gbc.pc(), 0xae0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae09), 0x8e);
        EXPECT(gbc.readMem(0xc730), 0x30);
        // 8E 0354
        gbc.setState(0xde86, 0x96f4, 0xad10, 0x6a32, 0x3d71, 0xfcde, 0x0, 0x1);
        gbc.writeMem(0xde86, { 0x8e });
        gbc.writeMem(0xfcde, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x96f4);
        EXPECT(gbc.pc(), 0xde87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde86), 0x8e);
        EXPECT(gbc.readMem(0xfcde), 0xf7);
        // 8E 0355
        gbc.setState(0x36ee, 0xbf12, 0xedd0, 0x3da8, 0x23c9, 0xb9ce, 0x0, 0x1);
        gbc.writeMem(0x36ee, { 0x8e });
        gbc.writeMem(0xb9ce, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbf12);
        EXPECT(gbc.pc(), 0x36ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ce), 0xc3);
        // 8E 0356
        gbc.setState(0xdc85, 0x1e55, 0x7c30, 0x264, 0xb04, 0xab4, 0x0, 0x0);
        gbc.writeMem(0xab4, { 0x5c });
        gbc.writeMem(0xdc85, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1e55);
        EXPECT(gbc.pc(), 0xdc86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc85), 0x8e);
        // 8E 0357
        gbc.setState(0x6508, 0xcc9f, 0x9cb0, 0xf34, 0x2f5c, 0x559, 0x1, 0x0);
        gbc.writeMem(0x559, { 0xc2 });
        gbc.writeMem(0x6508, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcc9f);
        EXPECT(gbc.pc(), 0x6509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0358
        gbc.setState(0xccda, 0xc863, 0xe020, 0xf740, 0x8feb, 0x6d21, 0x1, 0x0);
        gbc.writeMem(0x6d21, { 0xfd });
        gbc.writeMem(0xccda, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc863);
        EXPECT(gbc.pc(), 0xccdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccda), 0x8e);
        // 8E 035A
        gbc.setState(0x6b89, 0xfb13, 0x4d30, 0x47d7, 0xa0c6, 0x158f, 0x1, 0x1);
        gbc.writeMem(0x158f, { 0x6b });
        gbc.writeMem(0x6b89, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfb13);
        EXPECT(gbc.pc(), 0x6b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 035B
        gbc.setState(0xaa61, 0x1781, 0x3330, 0x33be, 0x18aa, 0xf464, 0x0, 0x1);
        gbc.writeMem(0xaa61, { 0x8e });
        gbc.writeMem(0xf464, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1781);
        EXPECT(gbc.pc(), 0xaa62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa61), 0x8e);
        EXPECT(gbc.readMem(0xf464), 0xa9);
        // 8E 035C
        gbc.setState(0xaadf, 0xf9b2, 0x13d0, 0x1f92, 0x889e, 0x53d4, 0x1, 0x1);
        gbc.writeMem(0x53d4, { 0x14 });
        gbc.writeMem(0xaadf, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf9b2);
        EXPECT(gbc.pc(), 0xaae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaadf), 0x8e);
        // 8E 035D
        gbc.setState(0x2bc8, 0x4b52, 0x9970, 0xa112, 0xe630, 0x87e8, 0x1, 0x1);
        gbc.writeMem(0x2bc8, { 0x8e });
        gbc.writeMem(0x87e8, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4b52);
        EXPECT(gbc.pc(), 0x2bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e8), 0xc4);
        // 8E 035E
        gbc.setState(0x15, 0xc32c, 0xe180, 0xe37e, 0x878e, 0x857, 0x1, 0x0);
        gbc.writeMem(0x15, { 0x8e });
        gbc.writeMem(0x857, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc32c);
        EXPECT(gbc.pc(), 0x16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 035F
        gbc.setState(0x8ac3, 0x3f20, 0x6d40, 0x195f, 0x4ef3, 0x3ea0, 0x1, 0x1);
        gbc.writeMem(0x3ea0, { 0xc6 });
        gbc.writeMem(0x8ac3, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3f20);
        EXPECT(gbc.pc(), 0x8ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac3), 0x8e);
        // 8E 0360
        gbc.setState(0x5037, 0xaf21, 0xd340, 0xf982, 0xce5d, 0x8a10, 0x1, 0x1);
        gbc.writeMem(0x5037, { 0x8e });
        gbc.writeMem(0x8a10, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xaf21);
        EXPECT(gbc.pc(), 0x5038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a10), 0x75);
        // 8E 0361
        gbc.setState(0x2856, 0x5e02, 0x7c50, 0x4533, 0x3b33, 0xd5fa, 0x0, 0x1);
        gbc.writeMem(0x2856, { 0x8e });
        gbc.writeMem(0xd5fa, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5e02);
        EXPECT(gbc.pc(), 0x2857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5fa), 0x30);
        // 8E 0362
        gbc.setState(0xc6ce, 0x6afd, 0x7c80, 0xdca3, 0x9f73, 0xe5b4, 0x1, 0x0);
        gbc.writeMem(0xc6ce, { 0x8e });
        gbc.writeMem(0xe5b4, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6afd);
        EXPECT(gbc.pc(), 0xc6cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ce), 0x8e);
        EXPECT(gbc.readMem(0xe5b4), 0x1c);
        // 8E 0363
        gbc.setState(0x6f3f, 0x6137, 0x3700, 0x3c04, 0x1d24, 0x1e78, 0x0, 0x1);
        gbc.writeMem(0x1e78, { 0xd9 });
        gbc.writeMem(0x6f3f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6137);
        EXPECT(gbc.pc(), 0x6f40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0364
        gbc.setState(0xbac7, 0x85cf, 0x8f00, 0x7c1f, 0x1933, 0xa3ab, 0x1, 0x1);
        gbc.writeMem(0xa3ab, { 0x7 });
        gbc.writeMem(0xbac7, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x85cf);
        EXPECT(gbc.pc(), 0xbac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ab), 0x7);
        EXPECT(gbc.readMem(0xbac7), 0x8e);
        // 8E 0365
        gbc.setState(0x95d1, 0x229e, 0x1500, 0x9ab8, 0x3014, 0xadd7, 0x1, 0x1);
        gbc.writeMem(0x95d1, { 0x8e });
        gbc.writeMem(0xadd7, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x229e);
        EXPECT(gbc.pc(), 0x95d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d1), 0x8e);
        EXPECT(gbc.readMem(0xadd7), 0x19);
        // 8E 0366
        gbc.setState(0x1197, 0xc21c, 0xa2b0, 0xf4f, 0xa546, 0xe3a, 0x0, 0x0);
        gbc.writeMem(0xe3a, { 0x6a });
        gbc.writeMem(0x1197, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc21c);
        EXPECT(gbc.pc(), 0x1198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0367
        gbc.setState(0xa0d4, 0x15c6, 0x1b80, 0xaa1, 0xf0b0, 0x43f7, 0x0, 0x0);
        gbc.writeMem(0x43f7, { 0xab });
        gbc.writeMem(0xa0d4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x15c6);
        EXPECT(gbc.pc(), 0xa0d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0d4), 0x8e);
        // 8E 0368
        gbc.setState(0x6595, 0x9a29, 0x62e0, 0xe29f, 0x1c92, 0x60ce, 0x1, 0x1);
        gbc.writeMem(0x60ce, { 0x90 });
        gbc.writeMem(0x6595, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9a29);
        EXPECT(gbc.pc(), 0x6596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0369
        gbc.setState(0xaf44, 0xfc21, 0x9540, 0x4fc3, 0xfb3a, 0xb86b, 0x0, 0x1);
        gbc.writeMem(0xaf44, { 0x8e });
        gbc.writeMem(0xb86b, { 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfc21);
        EXPECT(gbc.pc(), 0xaf45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf44), 0x8e);
        EXPECT(gbc.readMem(0xb86b), 0x7e);
        // 8E 036A
        gbc.setState(0x34fc, 0x20fa, 0xe380, 0x8f27, 0x77d1, 0x7fa, 0x0, 0x0);
        gbc.writeMem(0x7fa, { 0xac });
        gbc.writeMem(0x34fc, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x20fa);
        EXPECT(gbc.pc(), 0x34fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 036B
        gbc.setState(0xdc68, 0xff72, 0x8b00, 0x8367, 0x2532, 0xa17d, 0x0, 0x1);
        gbc.writeMem(0xa17d, { 0x62 });
        gbc.writeMem(0xdc68, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xff72);
        EXPECT(gbc.pc(), 0xdc69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17d), 0x62);
        EXPECT(gbc.readMem(0xdc68), 0x8e);
        // 8E 036C
        gbc.setState(0x5cc7, 0xad51, 0x9f90, 0xc790, 0xa5df, 0x2545, 0x1, 0x1);
        gbc.writeMem(0x2545, { 0x4d });
        gbc.writeMem(0x5cc7, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xad51);
        EXPECT(gbc.pc(), 0x5cc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 036D
        gbc.setState(0x3b0, 0xfd92, 0xf150, 0xdf37, 0x1805, 0xb72f, 0x0, 0x1);
        gbc.writeMem(0x3b0, { 0x8e });
        gbc.writeMem(0xb72f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfd92);
        EXPECT(gbc.pc(), 0x3b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb72f), 0xba);
        // 8E 036E
        gbc.setState(0x56b9, 0xda6d, 0x10e0, 0xf34c, 0x833, 0x2c55, 0x0, 0x0);
        gbc.writeMem(0x2c55, { 0xf7 });
        gbc.writeMem(0x56b9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xda6d);
        EXPECT(gbc.pc(), 0x56ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 036F
        gbc.setState(0xdb19, 0x162, 0xfb50, 0x7d1, 0x48a, 0x74fc, 0x0, 0x1);
        gbc.writeMem(0x74fc, { 0x91 });
        gbc.writeMem(0xdb19, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x162);
        EXPECT(gbc.pc(), 0xdb1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb19), 0x8e);
        // 8E 0370
        gbc.setState(0xbede, 0xcdbc, 0x33f0, 0x5bc, 0xf60e, 0xd620, 0x1, 0x1);
        gbc.writeMem(0xbede, { 0x8e });
        gbc.writeMem(0xd620, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcdbc);
        EXPECT(gbc.pc(), 0xbedf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbede), 0x8e);
        EXPECT(gbc.readMem(0xd620), 0x21);
        // 8E 0372
        gbc.setState(0x6b17, 0x2de9, 0x6d80, 0xb6db, 0xfb3b, 0x5e2, 0x1, 0x0);
        gbc.writeMem(0x5e2, { 0xe1 });
        gbc.writeMem(0x6b17, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2de9);
        EXPECT(gbc.pc(), 0x6b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0373
        gbc.setState(0x6e9f, 0x71c4, 0x1370, 0xbcbd, 0xc442, 0x6654, 0x1, 0x1);
        gbc.writeMem(0x6654, { 0x73 });
        gbc.writeMem(0x6e9f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x71c4);
        EXPECT(gbc.pc(), 0x6ea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0374
        gbc.setState(0xb501, 0xaf4b, 0xc2c0, 0x3d9b, 0x4ef4, 0x4ecc, 0x1, 0x0);
        gbc.writeMem(0x4ecc, { 0x61 });
        gbc.writeMem(0xb501, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xaf4b);
        EXPECT(gbc.pc(), 0xb502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb501), 0x8e);
        // 8E 0375
        gbc.setState(0x964b, 0x788, 0x1030, 0x5fa6, 0xc15a, 0x85a1, 0x1, 0x0);
        gbc.writeMem(0x85a1, { 0x3f });
        gbc.writeMem(0x964b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x788);
        EXPECT(gbc.pc(), 0x964c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a1), 0x3f);
        EXPECT(gbc.readMem(0x964b), 0x8e);
        // 8E 0376
        gbc.setState(0x92f0, 0x76ee, 0xcfc0, 0x743f, 0xf747, 0xb328, 0x0, 0x0);
        gbc.writeMem(0x92f0, { 0x8e });
        gbc.writeMem(0xb328, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x76ee);
        EXPECT(gbc.pc(), 0x92f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f0), 0x8e);
        EXPECT(gbc.readMem(0xb328), 0x3d);
        // 8E 0377
        gbc.setState(0x67a1, 0xd7e8, 0x8300, 0x4531, 0x8bf0, 0x9b73, 0x0, 0x0);
        gbc.writeMem(0x67a1, { 0x8e });
        gbc.writeMem(0x9b73, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd7e8);
        EXPECT(gbc.pc(), 0x67a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b73), 0x16);
        // 8E 0379
        gbc.setState(0xda60, 0xdcfb, 0x37f0, 0x1949, 0xa4ed, 0x66ed, 0x1, 0x1);
        gbc.writeMem(0x66ed, { 0xb1 });
        gbc.writeMem(0xda60, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xdcfb);
        EXPECT(gbc.pc(), 0xda61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda60), 0x8e);
        // 8E 037A
        gbc.setState(0x1102, 0xd079, 0x7490, 0x3b66, 0x7d08, 0x2ca3, 0x1, 0x0);
        gbc.writeMem(0x1102, { 0x8e });
        gbc.writeMem(0x2ca3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd079);
        EXPECT(gbc.pc(), 0x1103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 037B
        gbc.setState(0xe724, 0x208b, 0x1c20, 0x8ef1, 0x4eb, 0xbc6d, 0x1, 0x1);
        gbc.writeMem(0xbc6d, { 0xdd });
        gbc.writeMem(0xe724, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x208b);
        EXPECT(gbc.pc(), 0xe725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc6d), 0xdd);
        EXPECT(gbc.readMem(0xe724), 0x8e);
        // 8E 037C
        gbc.setState(0x2195, 0x1fc2, 0xc940, 0xfa20, 0x2cca, 0xda6e, 0x1, 0x1);
        gbc.writeMem(0x2195, { 0x8e });
        gbc.writeMem(0xda6e, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1fc2);
        EXPECT(gbc.pc(), 0x2196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda6e), 0x7);
        // 8E 037D
        gbc.setState(0x29f0, 0x24bf, 0xd930, 0x71f6, 0xe98a, 0xe2f7, 0x1, 0x0);
        gbc.writeMem(0x29f0, { 0x8e });
        gbc.writeMem(0xe2f7, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x24bf);
        EXPECT(gbc.pc(), 0x29f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2f7), 0xfa);
        // 8E 037E
        gbc.setState(0x545b, 0x202, 0x63b0, 0x78bb, 0xced6, 0xa5e0, 0x0, 0x1);
        gbc.writeMem(0x545b, { 0x8e });
        gbc.writeMem(0xa5e0, { 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x202);
        EXPECT(gbc.pc(), 0x545c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e0), 0x14);
        // 8E 037F
        gbc.setState(0x38fa, 0x52f3, 0x3460, 0x924a, 0xcc57, 0x5ec3, 0x0, 0x0);
        gbc.writeMem(0x38fa, { 0x8e });
        gbc.writeMem(0x5ec3, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x52f3);
        EXPECT(gbc.pc(), 0x38fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0380
        gbc.setState(0x9d6c, 0xea1f, 0x7aa0, 0x4, 0x759c, 0xd366, 0x1, 0x0);
        gbc.writeMem(0x9d6c, { 0x8e });
        gbc.writeMem(0xd366, { 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xea1f);
        EXPECT(gbc.pc(), 0x9d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d6c), 0x8e);
        EXPECT(gbc.readMem(0xd366), 0xa8);
        // 8E 0381
        gbc.setState(0xe8cd, 0x386f, 0x5780, 0x987f, 0x9278, 0x1605, 0x0, 0x0);
        gbc.writeMem(0x1605, { 0xf8 });
        gbc.writeMem(0xe8cd, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x386f);
        EXPECT(gbc.pc(), 0xe8ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8cd), 0x8e);
        // 8E 0382
        gbc.setState(0x783f, 0xa714, 0xc040, 0xe3a4, 0xd21f, 0x2c50, 0x0, 0x0);
        gbc.writeMem(0x2c50, { 0x49 });
        gbc.writeMem(0x783f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa714);
        EXPECT(gbc.pc(), 0x7840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0383
        gbc.setState(0x4742, 0xfb8b, 0x95f0, 0x3fa8, 0xdeba, 0x387d, 0x1, 0x0);
        gbc.writeMem(0x387d, { 0x96 });
        gbc.writeMem(0x4742, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfb8b);
        EXPECT(gbc.pc(), 0x4743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 0384
        gbc.setState(0xdba6, 0xcaf2, 0xdab0, 0xfa2d, 0x9204, 0x844a, 0x1, 0x1);
        gbc.writeMem(0x844a, { 0xc4 });
        gbc.writeMem(0xdba6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcaf2);
        EXPECT(gbc.pc(), 0xdba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x844a), 0xc4);
        EXPECT(gbc.readMem(0xdba6), 0x8e);
        // 8E 0386
        gbc.setState(0x8e55, 0xdcb4, 0xb950, 0x40de, 0x9951, 0xa642, 0x1, 0x1);
        gbc.writeMem(0x8e55, { 0x8e });
        gbc.writeMem(0xa642, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdcb4);
        EXPECT(gbc.pc(), 0x8e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e55), 0x8e);
        EXPECT(gbc.readMem(0xa642), 0x93);
        // 8E 0387
        gbc.setState(0x27c6, 0x207a, 0x3880, 0x322a, 0x3733, 0x52e6, 0x0, 0x0);
        gbc.writeMem(0x27c6, { 0x8e });
        gbc.writeMem(0x52e6, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x207a);
        EXPECT(gbc.pc(), 0x27c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 0388
        gbc.setState(0x67ad, 0x580c, 0xeb60, 0x192e, 0xb579, 0xb510, 0x0, 0x0);
        gbc.writeMem(0x67ad, { 0x8e });
        gbc.writeMem(0xb510, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x580c);
        EXPECT(gbc.pc(), 0x67ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb510), 0xa4);
        // 8E 0389
        gbc.setState(0x33ef, 0x751b, 0xf4a0, 0x56, 0xbdbe, 0x9f1e, 0x1, 0x0);
        gbc.writeMem(0x33ef, { 0x8e });
        gbc.writeMem(0x9f1e, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x751b);
        EXPECT(gbc.pc(), 0x33f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f1e), 0xbb);
        // 8E 038A
        gbc.setState(0x5ee0, 0x4843, 0x3980, 0x798f, 0x1a4a, 0xa84f, 0x0, 0x0);
        gbc.writeMem(0x5ee0, { 0x8e });
        gbc.writeMem(0xa84f, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4843);
        EXPECT(gbc.pc(), 0x5ee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa84f), 0x22);
        // 8E 038B
        gbc.setState(0x85b1, 0xd88f, 0xb410, 0x62ad, 0x383e, 0x8a9c, 0x0, 0x0);
        gbc.writeMem(0x85b1, { 0x8e });
        gbc.writeMem(0x8a9c, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd88f);
        EXPECT(gbc.pc(), 0x85b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85b1), 0x8e);
        EXPECT(gbc.readMem(0x8a9c), 0x99);
        // 8E 038C
        gbc.setState(0x59df, 0xa435, 0x91b0, 0x9015, 0xa9ff, 0x7213, 0x0, 0x0);
        gbc.writeMem(0x59df, { 0x8e });
        gbc.writeMem(0x7213, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa435);
        EXPECT(gbc.pc(), 0x59e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 038D
        gbc.setState(0x4d65, 0xfa4c, 0x10d0, 0x7ec2, 0x5a7d, 0xede2, 0x0, 0x0);
        gbc.writeMem(0x4d65, { 0x8e });
        gbc.writeMem(0xede2, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfa4c);
        EXPECT(gbc.pc(), 0x4d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede2), 0x33);
        // 8E 038E
        gbc.setState(0x7, 0xef6, 0xcc40, 0x88d6, 0xf775, 0x155d, 0x1, 0x1);
        gbc.writeMem(0x7, { 0x8e });
        gbc.writeMem(0x155d, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xef6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 038F
        gbc.setState(0x945b, 0xef26, 0xed90, 0x74bf, 0xf099, 0xf3a5, 0x0, 0x1);
        gbc.writeMem(0x945b, { 0x8e });
        gbc.writeMem(0xf3a5, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xef26);
        EXPECT(gbc.pc(), 0x945c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x945b), 0x8e);
        EXPECT(gbc.readMem(0xf3a5), 0x11);
        // 8E 0390
        gbc.setState(0xa438, 0x78df, 0x12c0, 0xa610, 0x84f6, 0xb19f, 0x1, 0x0);
        gbc.writeMem(0xa438, { 0x8e });
        gbc.writeMem(0xb19f, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x78df);
        EXPECT(gbc.pc(), 0xa439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa438), 0x8e);
        EXPECT(gbc.readMem(0xb19f), 0xb1);
        // 8E 0391
        gbc.setState(0x2cbf, 0x7926, 0x9ee0, 0x3305, 0xdee1, 0xcfb0, 0x1, 0x1);
        gbc.writeMem(0x2cbf, { 0x8e });
        gbc.writeMem(0xcfb0, { 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7926);
        EXPECT(gbc.pc(), 0x2cc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb0), 0xa9);
        // 8E 0392
        gbc.setState(0x34c0, 0x5a5, 0x1570, 0xcc2b, 0x97f8, 0x45a6, 0x0, 0x0);
        gbc.writeMem(0x34c0, { 0x8e });
        gbc.writeMem(0x45a6, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5a5);
        EXPECT(gbc.pc(), 0x34c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0393
        gbc.setState(0x6762, 0x29fa, 0x5c80, 0x2aaa, 0x768f, 0x1240, 0x0, 0x0);
        gbc.writeMem(0x1240, { 0x18 });
        gbc.writeMem(0x6762, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x29fa);
        EXPECT(gbc.pc(), 0x6763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 0394
        gbc.setState(0xcbaa, 0x4df4, 0x2030, 0xec32, 0xe18e, 0x5d17, 0x1, 0x0);
        gbc.writeMem(0x5d17, { 0x75 });
        gbc.writeMem(0xcbaa, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4df4);
        EXPECT(gbc.pc(), 0xcbab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbaa), 0x8e);
        // 8E 0395
        gbc.setState(0xdc67, 0xfa21, 0x7330, 0x6c2f, 0x6ce, 0xcce, 0x0, 0x1);
        gbc.writeMem(0xcce, { 0x19 });
        gbc.writeMem(0xdc67, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfa21);
        EXPECT(gbc.pc(), 0xdc68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc67), 0x8e);
        // 8E 0396
        gbc.setState(0x3c43, 0x1283, 0x4160, 0xbb34, 0x482f, 0xcda8, 0x1, 0x0);
        gbc.writeMem(0x3c43, { 0x8e });
        gbc.writeMem(0xcda8, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1283);
        EXPECT(gbc.pc(), 0x3c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcda8), 0xe3);
        // 8E 0397
        gbc.setState(0x4d17, 0xcdb3, 0x9710, 0x8aa2, 0x77f7, 0x7dd0, 0x1, 0x1);
        gbc.writeMem(0x4d17, { 0x8e });
        gbc.writeMem(0x7dd0, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcdb3);
        EXPECT(gbc.pc(), 0x4d18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 0398
        gbc.setState(0x28cd, 0x93a2, 0xe5b0, 0x91ce, 0x3d12, 0xaf1e, 0x1, 0x1);
        gbc.writeMem(0x28cd, { 0x8e });
        gbc.writeMem(0xaf1e, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x93a2);
        EXPECT(gbc.pc(), 0x28ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1e), 0xd1);
        // 8E 039A
        gbc.setState(0x94cb, 0x272f, 0x9c10, 0xe3bc, 0xf56d, 0x71ae, 0x0, 0x0);
        gbc.writeMem(0x71ae, { 0xbc });
        gbc.writeMem(0x94cb, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x272f);
        EXPECT(gbc.pc(), 0x94cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94cb), 0x8e);
        // 8E 039B
        gbc.setState(0x7130, 0x5870, 0x1c00, 0x84ba, 0xbb14, 0x8075, 0x0, 0x1);
        gbc.writeMem(0x7130, { 0x8e });
        gbc.writeMem(0x8075, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5870);
        EXPECT(gbc.pc(), 0x7131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8075), 0x49);
        // 8E 039C
        gbc.setState(0xc46c, 0xb9fc, 0x65e0, 0xb9e, 0xc4c4, 0x59a6, 0x1, 0x0);
        gbc.writeMem(0x59a6, { 0xad });
        gbc.writeMem(0xc46c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb9fc);
        EXPECT(gbc.pc(), 0xc46d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc46c), 0x8e);
        // 8E 039D
        gbc.setState(0xa3d0, 0x1aa0, 0xbf30, 0xa59e, 0xd1a3, 0xad13, 0x1, 0x0);
        gbc.writeMem(0xa3d0, { 0x8e });
        gbc.writeMem(0xad13, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1aa0);
        EXPECT(gbc.pc(), 0xa3d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3d0), 0x8e);
        EXPECT(gbc.readMem(0xad13), 0xb6);
        // 8E 039E
        gbc.setState(0x3c59, 0xfe4a, 0x95c0, 0xf6d7, 0xe7ed, 0x7803, 0x0, 0x1);
        gbc.writeMem(0x3c59, { 0x8e });
        gbc.writeMem(0x7803, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfe4a);
        EXPECT(gbc.pc(), 0x3c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 039F
        gbc.setState(0xab4c, 0x803, 0x94c0, 0x880a, 0xeaf6, 0x7bf8, 0x1, 0x1);
        gbc.writeMem(0x7bf8, { 0xac });
        gbc.writeMem(0xab4c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x803);
        EXPECT(gbc.pc(), 0xab4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab4c), 0x8e);
        // 8E 03A0
        gbc.setState(0xdd5d, 0x5fe9, 0x3c0, 0x9aee, 0x849f, 0x26fa, 0x1, 0x0);
        gbc.writeMem(0x26fa, { 0x42 });
        gbc.writeMem(0xdd5d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5fe9);
        EXPECT(gbc.pc(), 0xdd5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd5d), 0x8e);
        // 8E 03A1
        gbc.setState(0xa112, 0x4da, 0x3110, 0xb1e4, 0xf6bd, 0xd0e9, 0x1, 0x1);
        gbc.writeMem(0xa112, { 0x8e });
        gbc.writeMem(0xd0e9, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4da);
        EXPECT(gbc.pc(), 0xa113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa112), 0x8e);
        EXPECT(gbc.readMem(0xd0e9), 0x13);
        // 8E 03A2
        gbc.setState(0x3ffb, 0x63aa, 0x86c0, 0x2b8f, 0x6da6, 0x7ebe, 0x0, 0x1);
        gbc.writeMem(0x3ffb, { 0x8e });
        gbc.writeMem(0x7ebe, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x63aa);
        EXPECT(gbc.pc(), 0x3ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 03A3
        gbc.setState(0xbbc8, 0xc143, 0x2080, 0xb6e8, 0xc768, 0xf698, 0x1, 0x0);
        gbc.writeMem(0xbbc8, { 0x8e });
        gbc.writeMem(0xf698, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc143);
        EXPECT(gbc.pc(), 0xbbc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc8), 0x8e);
        EXPECT(gbc.readMem(0xf698), 0xa0);
        // 8E 03A4
        gbc.setState(0xd63a, 0x6e0d, 0xff40, 0x7cc, 0xe2d8, 0x2939, 0x0, 0x0);
        gbc.writeMem(0x2939, { 0x30 });
        gbc.writeMem(0xd63a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6e0d);
        EXPECT(gbc.pc(), 0xd63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd63a), 0x8e);
        // 8E 03A5
        gbc.setState(0x3653, 0x1fbf, 0x5bc0, 0x8a00, 0xb749, 0xa8e3, 0x0, 0x0);
        gbc.writeMem(0x3653, { 0x8e });
        gbc.writeMem(0xa8e3, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1fbf);
        EXPECT(gbc.pc(), 0x3654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e3), 0x12);
        // 8E 03A6
        gbc.setState(0x5c0, 0xec60, 0x78e0, 0x11dd, 0x6f88, 0x54d4, 0x1, 0x0);
        gbc.writeMem(0x5c0, { 0x8e });
        gbc.writeMem(0x54d4, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xec60);
        EXPECT(gbc.pc(), 0x5c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 03A8
        gbc.setState(0xe5f, 0x41f9, 0xcb20, 0x7d0e, 0x1647, 0x2922, 0x0, 0x1);
        gbc.writeMem(0xe5f, { 0x8e });
        gbc.writeMem(0x2922, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x41f9);
        EXPECT(gbc.pc(), 0xe60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 03A9
        gbc.setState(0x770b, 0xb5a3, 0x7670, 0xa9b, 0xe782, 0xa523, 0x0, 0x0);
        gbc.writeMem(0x770b, { 0x8e });
        gbc.writeMem(0xa523, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb5a3);
        EXPECT(gbc.pc(), 0x770c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa523), 0xda);
        // 8E 03AA
        gbc.setState(0xd803, 0xecdd, 0x1e0, 0x56ca, 0x315e, 0x9a92, 0x1, 0x0);
        gbc.writeMem(0x9a92, { 0x7 });
        gbc.writeMem(0xd803, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xecdd);
        EXPECT(gbc.pc(), 0xd804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a92), 0x7);
        EXPECT(gbc.readMem(0xd803), 0x8e);
        // 8E 03AB
        gbc.setState(0xe669, 0xdb6e, 0xef60, 0x1bec, 0x4215, 0x76f7, 0x0, 0x0);
        gbc.writeMem(0x76f7, { 0x6 });
        gbc.writeMem(0xe669, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xdb6e);
        EXPECT(gbc.pc(), 0xe66a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe669), 0x8e);
        // 8E 03AC
        gbc.setState(0x6e2e, 0x9430, 0x9170, 0x84ef, 0x5c03, 0x2f6c, 0x1, 0x1);
        gbc.writeMem(0x2f6c, { 0xd2 });
        gbc.writeMem(0x6e2e, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9430);
        EXPECT(gbc.pc(), 0x6e2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 03AD
        gbc.setState(0x6f9d, 0x9a9c, 0x45e0, 0x5915, 0x7cd8, 0x7815, 0x1, 0x1);
        gbc.writeMem(0x6f9d, { 0x8e });
        gbc.writeMem(0x7815, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9a9c);
        EXPECT(gbc.pc(), 0x6f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 03AE
        gbc.setState(0x7daf, 0x8bca, 0xb670, 0x878c, 0x33d0, 0x162a, 0x1, 0x0);
        gbc.writeMem(0x162a, { 0xd8 });
        gbc.writeMem(0x7daf, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8bca);
        EXPECT(gbc.pc(), 0x7db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 03AF
        gbc.setState(0x9100, 0x19de, 0x2920, 0x7f0, 0xee9, 0xee35, 0x0, 0x1);
        gbc.writeMem(0x9100, { 0x8e });
        gbc.writeMem(0xee35, { 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x19de);
        EXPECT(gbc.pc(), 0x9101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9100), 0x8e);
        EXPECT(gbc.readMem(0xee35), 0x9a);
        // 8E 03B0
        gbc.setState(0xddeb, 0x70ce, 0x47b0, 0x38b9, 0x3dce, 0xe245, 0x0, 0x0);
        gbc.writeMem(0xddeb, { 0x8e });
        gbc.writeMem(0xe245, { 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x70ce);
        EXPECT(gbc.pc(), 0xddec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddeb), 0x8e);
        EXPECT(gbc.readMem(0xe245), 0x67);
        // 8E 03B1
        gbc.setState(0x7617, 0xa491, 0x21e0, 0x3883, 0x219c, 0xd285, 0x0, 0x0);
        gbc.writeMem(0x7617, { 0x8e });
        gbc.writeMem(0xd285, { 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa491);
        EXPECT(gbc.pc(), 0x7618);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd285), 0x6e);
        // 8E 03B2
        gbc.setState(0x1c0f, 0xb147, 0x7a10, 0xedee, 0x87ea, 0xfc8f, 0x1, 0x1);
        gbc.writeMem(0x1c0f, { 0x8e });
        gbc.writeMem(0xfc8f, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb147);
        EXPECT(gbc.pc(), 0x1c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc8f), 0xfe);
        // 8E 03B3
        gbc.setState(0x6418, 0x654b, 0x18e0, 0x64f8, 0xbeea, 0x5c0b, 0x1, 0x0);
        gbc.writeMem(0x5c0b, { 0x11 });
        gbc.writeMem(0x6418, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x654b);
        EXPECT(gbc.pc(), 0x6419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 03B4
        gbc.setState(0x43ca, 0x3b70, 0xec60, 0x1806, 0xb822, 0x3e6c, 0x0, 0x0);
        gbc.writeMem(0x3e6c, { 0xf6 });
        gbc.writeMem(0x43ca, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3b70);
        EXPECT(gbc.pc(), 0x43cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 03B5
        gbc.setState(0xdd17, 0x26a6, 0x1070, 0x7ccc, 0x6e33, 0x587c, 0x0, 0x1);
        gbc.writeMem(0x587c, { 0x6f });
        gbc.writeMem(0xdd17, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x26a6);
        EXPECT(gbc.pc(), 0xdd18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd17), 0x8e);
        // 8E 03B6
        gbc.setState(0x8fd7, 0x3487, 0xf1e0, 0x6c5f, 0xbcb6, 0xc26a, 0x1, 0x0);
        gbc.writeMem(0x8fd7, { 0x8e });
        gbc.writeMem(0xc26a, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3487);
        EXPECT(gbc.pc(), 0x8fd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd7), 0x8e);
        EXPECT(gbc.readMem(0xc26a), 0xa1);
        // 8E 03B7
        gbc.setState(0x3da5, 0x5edb, 0x7900, 0x38d, 0xb144, 0x7d83, 0x1, 0x0);
        gbc.writeMem(0x3da5, { 0x8e });
        gbc.writeMem(0x7d83, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5edb);
        EXPECT(gbc.pc(), 0x3da6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 03B8
        gbc.setState(0x7cba, 0xb1a2, 0x46f0, 0xa8da, 0xd960, 0x775c, 0x1, 0x0);
        gbc.writeMem(0x775c, { 0x94 });
        gbc.writeMem(0x7cba, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb1a2);
        EXPECT(gbc.pc(), 0x7cbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 03B9
        gbc.setState(0xbd2c, 0xb1cb, 0xedc0, 0x809c, 0xa5d3, 0x5f0a, 0x0, 0x1);
        gbc.writeMem(0x5f0a, { 0x1d });
        gbc.writeMem(0xbd2c, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb1cb);
        EXPECT(gbc.pc(), 0xbd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd2c), 0x8e);
        // 8E 03BA
        gbc.setState(0x6ebe, 0x44b2, 0x12d0, 0x5891, 0xe927, 0x7f62, 0x1, 0x0);
        gbc.writeMem(0x6ebe, { 0x8e });
        gbc.writeMem(0x7f62, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x44b2);
        EXPECT(gbc.pc(), 0x6ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 03BB
        gbc.setState(0xafc, 0x7a39, 0x30d0, 0x69a, 0xed7f, 0x82cf, 0x0, 0x1);
        gbc.writeMem(0xafc, { 0x8e });
        gbc.writeMem(0x82cf, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7a39);
        EXPECT(gbc.pc(), 0xafd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82cf), 0x1f);
        // 8E 03BC
        gbc.setState(0x14e2, 0x3365, 0xc290, 0x57f1, 0xe696, 0x61e2, 0x1, 0x1);
        gbc.writeMem(0x14e2, { 0x8e });
        gbc.writeMem(0x61e2, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3365);
        EXPECT(gbc.pc(), 0x14e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 03BD
        gbc.setState(0x98a7, 0x6439, 0x4470, 0xd53f, 0xdb21, 0x4c5a, 0x0, 0x0);
        gbc.writeMem(0x4c5a, { 0x10 });
        gbc.writeMem(0x98a7, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6439);
        EXPECT(gbc.pc(), 0x98a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a7), 0x8e);
        // 8E 03BE
        gbc.setState(0x237b, 0xdd9c, 0xf7e0, 0x9607, 0xf8e6, 0x53df, 0x0, 0x1);
        gbc.writeMem(0x237b, { 0x8e });
        gbc.writeMem(0x53df, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xdd9c);
        EXPECT(gbc.pc(), 0x237c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 03BF
        gbc.setState(0xb455, 0x27c7, 0x8780, 0xa375, 0x799b, 0x6218, 0x0, 0x0);
        gbc.writeMem(0x6218, { 0x15 });
        gbc.writeMem(0xb455, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x27c7);
        EXPECT(gbc.pc(), 0xb456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb455), 0x8e);
        // 8E 03C0
        gbc.setState(0x21a, 0x2f87, 0x38e0, 0x8eac, 0x12e2, 0x6232, 0x1, 0x0);
        gbc.writeMem(0x21a, { 0x8e });
        gbc.writeMem(0x6232, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2f87);
        EXPECT(gbc.pc(), 0x21b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 03C1
        gbc.setState(0x727a, 0xfc66, 0x76e0, 0x27b3, 0xfa11, 0x5cd8, 0x1, 0x0);
        gbc.writeMem(0x5cd8, { 0x90 });
        gbc.writeMem(0x727a, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfc66);
        EXPECT(gbc.pc(), 0x727b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 03C2
        gbc.setState(0xdddf, 0x7e28, 0x5d00, 0xc170, 0xb623, 0x9c15, 0x1, 0x0);
        gbc.writeMem(0x9c15, { 0x87 });
        gbc.writeMem(0xdddf, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7e28);
        EXPECT(gbc.pc(), 0xdde0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c15), 0x87);
        EXPECT(gbc.readMem(0xdddf), 0x8e);
        // 8E 03C3
        gbc.setState(0x8e82, 0x7b28, 0x3d80, 0x52fe, 0x2f49, 0x59a1, 0x0, 0x0);
        gbc.writeMem(0x59a1, { 0x9 });
        gbc.writeMem(0x8e82, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7b28);
        EXPECT(gbc.pc(), 0x8e83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e82), 0x8e);
        // 8E 03C4
        gbc.setState(0xa378, 0xc5f3, 0xfd40, 0x653c, 0xbda1, 0x3676, 0x1, 0x0);
        gbc.writeMem(0x3676, { 0x7a });
        gbc.writeMem(0xa378, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc5f3);
        EXPECT(gbc.pc(), 0xa379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa378), 0x8e);
        // 8E 03C5
        gbc.setState(0x9f0d, 0xc9c6, 0x3280, 0xf94d, 0xc691, 0x663f, 0x0, 0x1);
        gbc.writeMem(0x663f, { 0xb4 });
        gbc.writeMem(0x9f0d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc9c6);
        EXPECT(gbc.pc(), 0x9f0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f0d), 0x8e);
        // 8E 03C6
        gbc.setState(0xb01, 0x94c5, 0x4f60, 0xafad, 0x9892, 0xfac6, 0x0, 0x1);
        gbc.writeMem(0xb01, { 0x8e });
        gbc.writeMem(0xfac6, { 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x94c5);
        EXPECT(gbc.pc(), 0xb02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfac6), 0xd9);
        // 8E 03C7
        gbc.setState(0x6f74, 0x2201, 0xf7d0, 0x4860, 0xb103, 0xb69d, 0x0, 0x0);
        gbc.writeMem(0x6f74, { 0x8e });
        gbc.writeMem(0xb69d, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2201);
        EXPECT(gbc.pc(), 0x6f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb69d), 0x26);
        // 8E 03C8
        gbc.setState(0xe0b8, 0x5b2f, 0x16a0, 0x490b, 0x2bde, 0x31df, 0x0, 0x1);
        gbc.writeMem(0x31df, { 0xeb });
        gbc.writeMem(0xe0b8, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5b2f);
        EXPECT(gbc.pc(), 0xe0b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b8), 0x8e);
        // 8E 03C9
        gbc.setState(0x5a24, 0x5924, 0xf890, 0xefc3, 0xf5d, 0x16e3, 0x0, 0x0);
        gbc.writeMem(0x16e3, { 0xc5 });
        gbc.writeMem(0x5a24, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5924);
        EXPECT(gbc.pc(), 0x5a25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 03CA
        gbc.setState(0x999f, 0xff75, 0xc0a0, 0xa929, 0xa0d6, 0xcae8, 0x1, 0x1);
        gbc.writeMem(0x999f, { 0x8e });
        gbc.writeMem(0xcae8, { 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xff75);
        EXPECT(gbc.pc(), 0x99a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x999f), 0x8e);
        EXPECT(gbc.readMem(0xcae8), 0x87);
        // 8E 03CB
        gbc.setState(0xaf5e, 0x570a, 0xcc20, 0xf817, 0xbeba, 0xb4e7, 0x1, 0x0);
        gbc.writeMem(0xaf5e, { 0x8e });
        gbc.writeMem(0xb4e7, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x570a);
        EXPECT(gbc.pc(), 0xaf5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5e), 0x8e);
        EXPECT(gbc.readMem(0xb4e7), 0xfe);
        // 8E 03CC
        gbc.setState(0xf57, 0x2cce, 0xbbb0, 0xd950, 0x40bd, 0x5274, 0x0, 0x1);
        gbc.writeMem(0xf57, { 0x8e });
        gbc.writeMem(0x5274, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2cce);
        EXPECT(gbc.pc(), 0xf58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 03CD
        gbc.setState(0xc504, 0x4a14, 0x3810, 0x33a9, 0x122b, 0x9c46, 0x0, 0x0);
        gbc.writeMem(0x9c46, { 0x46 });
        gbc.writeMem(0xc504, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4a14);
        EXPECT(gbc.pc(), 0xc505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c46), 0x46);
        EXPECT(gbc.readMem(0xc504), 0x8e);
        // 8E 03CE
        gbc.setState(0x1f44, 0x9144, 0x68a0, 0xe078, 0xaf93, 0x6a9d, 0x0, 0x1);
        gbc.writeMem(0x1f44, { 0x8e });
        gbc.writeMem(0x6a9d, { 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9144);
        EXPECT(gbc.pc(), 0x1f45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 03CF
        gbc.setState(0xb3be, 0xfa56, 0xb330, 0x9316, 0x8be, 0x2106, 0x0, 0x1);
        gbc.writeMem(0x2106, { 0x92 });
        gbc.writeMem(0xb3be, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfa56);
        EXPECT(gbc.pc(), 0xb3bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3be), 0x8e);
        // 8E 03D0
        gbc.setState(0x2d64, 0xe67e, 0x9320, 0xa19c, 0x30d4, 0xc0ef, 0x1, 0x1);
        gbc.writeMem(0x2d64, { 0x8e });
        gbc.writeMem(0xc0ef, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe67e);
        EXPECT(gbc.pc(), 0x2d65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ef), 0x4f);
        // 8E 03D1
        gbc.setState(0x9e1d, 0xc04c, 0xc2b0, 0xb7dc, 0xbff1, 0x93cf, 0x0, 0x1);
        gbc.writeMem(0x93cf, { 0x88 });
        gbc.writeMem(0x9e1d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc04c);
        EXPECT(gbc.pc(), 0x9e1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93cf), 0x88);
        EXPECT(gbc.readMem(0x9e1d), 0x8e);
        // 8E 03D2
        gbc.setState(0xb674, 0x5c3d, 0xe690, 0x3761, 0x2d91, 0x53b2, 0x1, 0x0);
        gbc.writeMem(0x53b2, { 0xac });
        gbc.writeMem(0xb674, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5c3d);
        EXPECT(gbc.pc(), 0xb675);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb674), 0x8e);
        // 8E 03D4
        gbc.setState(0xa53d, 0x75ef, 0xce0, 0x2a1c, 0x91b9, 0x2079, 0x1, 0x1);
        gbc.writeMem(0x2079, { 0x6b });
        gbc.writeMem(0xa53d, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x75ef);
        EXPECT(gbc.pc(), 0xa53e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa53d), 0x8e);
        // 8E 03D5
        gbc.setState(0x72c7, 0xd7fe, 0x76d0, 0x6879, 0xa726, 0x61e2, 0x0, 0x1);
        gbc.writeMem(0x61e2, { 0x15 });
        gbc.writeMem(0x72c7, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd7fe);
        EXPECT(gbc.pc(), 0x72c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 03D6
        gbc.setState(0x227e, 0xf727, 0xdfc0, 0xa53a, 0x91aa, 0xa25f, 0x0, 0x0);
        gbc.writeMem(0x227e, { 0x8e });
        gbc.writeMem(0xa25f, { 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf727);
        EXPECT(gbc.pc(), 0x227f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa25f), 0x57);
        // 8E 03D7
        gbc.setState(0x69a1, 0xb85b, 0x6fd0, 0xc7da, 0x2a97, 0x2f2e, 0x0, 0x1);
        gbc.writeMem(0x2f2e, { 0x5b });
        gbc.writeMem(0x69a1, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb85b);
        EXPECT(gbc.pc(), 0x69a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 03D8
        gbc.setState(0x77d7, 0x5db8, 0x4b60, 0xb96b, 0x43ef, 0xd36b, 0x1, 0x0);
        gbc.writeMem(0x77d7, { 0x8e });
        gbc.writeMem(0xd36b, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5db8);
        EXPECT(gbc.pc(), 0x77d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd36b), 0x70);
        // 8E 03D9
        gbc.setState(0x674f, 0x923c, 0xc120, 0x39a9, 0x21ba, 0x62b8, 0x0, 0x0);
        gbc.writeMem(0x62b8, { 0x59 });
        gbc.writeMem(0x674f, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x923c);
        EXPECT(gbc.pc(), 0x6750);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 03DA
        gbc.setState(0x184b, 0xef09, 0x1930, 0x89a2, 0x26c2, 0x605b, 0x0, 0x0);
        gbc.writeMem(0x184b, { 0x8e });
        gbc.writeMem(0x605b, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xef09);
        EXPECT(gbc.pc(), 0x184c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8E 03DB
        gbc.setState(0xef45, 0x16da, 0x4d60, 0x159b, 0x853d, 0x3f7e, 0x0, 0x0);
        gbc.writeMem(0x3f7e, { 0x34 });
        gbc.writeMem(0xef45, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x16da);
        EXPECT(gbc.pc(), 0xef46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef45), 0x8e);
        // 8E 03DC
        gbc.setState(0x76e9, 0xd4f4, 0xf3f0, 0x5a2f, 0xa264, 0x518a, 0x1, 0x1);
        gbc.writeMem(0x518a, { 0x37 });
        gbc.writeMem(0x76e9, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd4f4);
        EXPECT(gbc.pc(), 0x76ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8E 03DD
        gbc.setState(0xeab4, 0x28b0, 0x8f20, 0x18b3, 0x1dc2, 0x2d21, 0x1, 0x1);
        gbc.writeMem(0x2d21, { 0x63 });
        gbc.writeMem(0xeab4, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x28b0);
        EXPECT(gbc.pc(), 0xeab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab4), 0x8e);
        // 8E 03DE
        gbc.setState(0x6147, 0x123f, 0xd660, 0xa971, 0xa439, 0x859c, 0x0, 0x1);
        gbc.writeMem(0x6147, { 0x8e });
        gbc.writeMem(0x859c, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x123f);
        EXPECT(gbc.pc(), 0x6148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x859c), 0x8b);
        // 8E 03DF
        gbc.setState(0x74f6, 0xe3d8, 0x1db0, 0x7cb6, 0x8e1c, 0x6c8c, 0x1, 0x0);
        gbc.writeMem(0x6c8c, { 0x41 });
        gbc.writeMem(0x74f6, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe3d8);
        EXPECT(gbc.pc(), 0x74f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8E 03E0
        gbc.setState(0xe595, 0x5f33, 0x85d0, 0xe33f, 0x5e46, 0x3c09, 0x1, 0x1);
        gbc.writeMem(0x3c09, { 0x8 });
        gbc.writeMem(0xe595, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5f33);
        EXPECT(gbc.pc(), 0xe596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe595), 0x8e);
        // 8E 03E1
        gbc.setState(0x5000, 0xb68c, 0xf230, 0xc89, 0x1b38, 0xe6f7, 0x1, 0x0);
        gbc.writeMem(0x5000, { 0x8e });
        gbc.writeMem(0xe6f7, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb68c);
        EXPECT(gbc.pc(), 0x5001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6f7), 0x9e);
        // 8E 03E2
        gbc.setState(0x2722, 0x53d5, 0x8980, 0x1686, 0x6947, 0x743b, 0x1, 0x0);
        gbc.writeMem(0x2722, { 0x8e });
        gbc.writeMem(0x743b, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x53d5);
        EXPECT(gbc.pc(), 0x2723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8E 03E3
        gbc.setState(0x6e4e, 0x66c2, 0xcef0, 0xc61c, 0x8aba, 0xfefc, 0x1, 0x1);
        gbc.writeMem(0x6e4e, { 0x8e });
        gbc.writeMem(0xfefc, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x66c2);
        EXPECT(gbc.pc(), 0x6e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfefc), 0x73);
        // 8E 03E4
        gbc.setState(0x9d72, 0x36d7, 0x4670, 0x9d23, 0xff97, 0xf6cf, 0x1, 0x1);
        gbc.writeMem(0x9d72, { 0x8e });
        gbc.writeMem(0xf6cf, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x36d7);
        EXPECT(gbc.pc(), 0x9d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d72), 0x8e);
        EXPECT(gbc.readMem(0xf6cf), 0x4f);
        // 8E 03E5
        gbc.setState(0x8978, 0x9b0a, 0x6580, 0x10dc, 0xbd58, 0x4dad, 0x1, 0x0);
        gbc.writeMem(0x4dad, { 0xbc });
        gbc.writeMem(0x8978, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9b0a);
        EXPECT(gbc.pc(), 0x8979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8978), 0x8e);
        // 8E 03E6
        gbc.setState(0xb527, 0x5d2c, 0x6360, 0x398, 0x6255, 0x4b71, 0x1, 0x0);
        gbc.writeMem(0x4b71, { 0x97 });
        gbc.writeMem(0xb527, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5d2c);
        EXPECT(gbc.pc(), 0xb528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb527), 0x8e);
        // 8E 03E7
        gbc.setState(0xb6c2, 0xbda0, 0xb480, 0xe95c, 0x3350, 0xc69a, 0x1, 0x0);
        gbc.writeMem(0xb6c2, { 0x8e });
        gbc.writeMem(0xc69a, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbda0);
        EXPECT(gbc.pc(), 0xb6c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c2), 0x8e);
        EXPECT(gbc.readMem(0xc69a), 0x22);
    }
