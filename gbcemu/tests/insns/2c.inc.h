    TEST(gbcemu, opcode_2c) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 2C 0000
        gbc.setState(0x43d, 0xdfbc, 0xe0f0, 0x2973, 0xc54, 0xb3b9, 0x0, 0x1);
        gbc.writeMem(0x43d, { 0x2c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdfbc, gbc.sp());
        EXPECT(0x43e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0001
        gbc.setState(0xe9c, 0x79ea, 0x40c0, 0xdbe3, 0x9fc2, 0xe438, 0x0, 0x1);
        gbc.writeMem(0xe9c, { 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x79ea, gbc.sp());
        EXPECT(0xe9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0002
        gbc.setState(0x618f, 0x4fac, 0xcc80, 0x9b21, 0xf988, 0xa69e, 0x0, 0x0);
        gbc.writeMem(0x618f, { 0x2c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4fac, gbc.sp());
        EXPECT(0x6190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0003
        gbc.setState(0x6f00, 0xa9da, 0xaa0, 0x94fd, 0x285b, 0x4da9, 0x1, 0x0);
        gbc.writeMem(0x6f00, { 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa9da, gbc.sp());
        EXPECT(0x6f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0004
        gbc.setState(0xa38f, 0x982a, 0x12b0, 0x8b7b, 0x6a51, 0x4f0, 0x0, 0x0);
        gbc.writeMem(0xa38f, { 0x2c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x982a, gbc.sp());
        EXPECT(0xa390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa38f));
        // 2C 0005
        gbc.setState(0x9f8e, 0xa722, 0x7d10, 0x60ec, 0x4eea, 0xb522, 0x0, 0x1);
        gbc.writeMem(0x9f8e, { 0x2c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa722, gbc.sp());
        EXPECT(0x9f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9f8e));
        // 2C 0007
        gbc.setState(0x89ec, 0xa1fa, 0x6c50, 0x4fc4, 0x6732, 0xc698, 0x1, 0x0);
        gbc.writeMem(0x89ec, { 0x2c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa1fa, gbc.sp());
        EXPECT(0x89ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x89ec));
        // 2C 0008
        gbc.setState(0x58d1, 0x45fa, 0xb3a0, 0x8db3, 0x37ad, 0x59e5, 0x1, 0x1);
        gbc.writeMem(0x58d1, { 0x2c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x45fa, gbc.sp());
        EXPECT(0x58d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0009
        gbc.setState(0xc4f5, 0x5648, 0x5380, 0x6f28, 0x35d1, 0xd100, 0x1, 0x0);
        gbc.writeMem(0xc4f5, { 0x2c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5648, gbc.sp());
        EXPECT(0xc4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc4f5));
        // 2C 000A
        gbc.setState(0xed4, 0xc2cb, 0xdc0, 0x84c, 0x50bd, 0x10a8, 0x1, 0x0);
        gbc.writeMem(0xed4, { 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc2cb, gbc.sp());
        EXPECT(0xed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 000B
        gbc.setState(0xe5db, 0xbd4b, 0x4b50, 0xffde, 0x7f3, 0x8e43, 0x0, 0x0);
        gbc.writeMem(0xe5db, { 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbd4b, gbc.sp());
        EXPECT(0xe5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe5db));
        // 2C 000C
        gbc.setState(0xaf59, 0xde43, 0xbfa0, 0xd087, 0x8ecd, 0x8f5a, 0x1, 0x1);
        gbc.writeMem(0xaf59, { 0x2c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xde43, gbc.sp());
        EXPECT(0xaf5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xaf59));
        // 2C 000D
        gbc.setState(0xac55, 0x34ef, 0x4820, 0x504f, 0x6d8, 0xbc8d, 0x0, 0x1);
        gbc.writeMem(0xac55, { 0x2c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x34ef, gbc.sp());
        EXPECT(0xac56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xac55));
        // 2C 000E
        gbc.setState(0xcb00, 0xcabd, 0xd920, 0x91e7, 0x599a, 0xa478, 0x1, 0x1);
        gbc.writeMem(0xcb00, { 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcabd, gbc.sp());
        EXPECT(0xcb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcb00));
        // 2C 000F
        gbc.setState(0x8303, 0xd656, 0x20a0, 0xc1d5, 0xecdb, 0x5596, 0x0, 0x0);
        gbc.writeMem(0x8303, { 0x2c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd656, gbc.sp());
        EXPECT(0x8304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8303));
        // 2C 0010
        gbc.setState(0xb7e6, 0xfbb2, 0xbe50, 0x99b3, 0x388a, 0x795a, 0x0, 0x0);
        gbc.writeMem(0xb7e6, { 0x2c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfbb2, gbc.sp());
        EXPECT(0xb7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb7e6));
        // 2C 0011
        gbc.setState(0x4318, 0x30c8, 0xa400, 0x1d31, 0xfca1, 0x3cad, 0x0, 0x0);
        gbc.writeMem(0x4318, { 0x2c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x30c8, gbc.sp());
        EXPECT(0x4319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0012
        gbc.setState(0x655b, 0xf4af, 0x9840, 0x89aa, 0x4aef, 0x2e72, 0x0, 0x0);
        gbc.writeMem(0x655b, { 0x2c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf4af, gbc.sp());
        EXPECT(0x655c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0013
        gbc.setState(0x2a3d, 0xbc38, 0x9be0, 0x4cc9, 0xc137, 0xfce4, 0x0, 0x0);
        gbc.writeMem(0x2a3d, { 0x2c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbc38, gbc.sp());
        EXPECT(0x2a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0014
        gbc.setState(0x7b8, 0x4e4a, 0xa2c0, 0xc964, 0xbbcb, 0xf34b, 0x0, 0x1);
        gbc.writeMem(0x7b8, { 0x2c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4e4a, gbc.sp());
        EXPECT(0x7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0015
        gbc.setState(0xa6df, 0x1307, 0x2090, 0xa608, 0x4c1c, 0x345b, 0x0, 0x1);
        gbc.writeMem(0xa6df, { 0x2c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1307, gbc.sp());
        EXPECT(0xa6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa6df));
        // 2C 0016
        gbc.setState(0x6f2b, 0xd4af, 0x1080, 0xa279, 0xfa09, 0xa2a9, 0x1, 0x1);
        gbc.writeMem(0x6f2b, { 0x2c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd4af, gbc.sp());
        EXPECT(0x6f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0017
        gbc.setState(0x5d6e, 0x1e84, 0x9d20, 0x109, 0x6295, 0x5eec, 0x0, 0x0);
        gbc.writeMem(0x5d6e, { 0x2c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1e84, gbc.sp());
        EXPECT(0x5d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0018
        gbc.setState(0x22e3, 0xcb81, 0xa900, 0xdfc, 0x401d, 0x6a79, 0x1, 0x1);
        gbc.writeMem(0x22e3, { 0x2c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcb81, gbc.sp());
        EXPECT(0x22e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0019
        gbc.setState(0xea03, 0xb1ff, 0x4330, 0x29e, 0x6697, 0xa4e6, 0x0, 0x1);
        gbc.writeMem(0xea03, { 0x2c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb1ff, gbc.sp());
        EXPECT(0xea04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xea03));
        // 2C 001A
        gbc.setState(0x3b90, 0x1d88, 0xd40, 0x593b, 0xac45, 0xcacd, 0x0, 0x1);
        gbc.writeMem(0x3b90, { 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1d88, gbc.sp());
        EXPECT(0x3b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 001B
        gbc.setState(0x3e9c, 0x4626, 0x6ce0, 0x954f, 0xf813, 0x1e27, 0x0, 0x1);
        gbc.writeMem(0x3e9c, { 0x2c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4626, gbc.sp());
        EXPECT(0x3e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 001C
        gbc.setState(0x1c39, 0x6c9d, 0x5d80, 0x339b, 0xe776, 0x76c1, 0x1, 0x0);
        gbc.writeMem(0x1c39, { 0x2c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6c9d, gbc.sp());
        EXPECT(0x1c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 001D
        gbc.setState(0x28ab, 0x3283, 0xc620, 0x78e2, 0xd915, 0x9d8e, 0x1, 0x0);
        gbc.writeMem(0x28ab, { 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3283, gbc.sp());
        EXPECT(0x28ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 001E
        gbc.setState(0xaf3, 0x73a8, 0xe190, 0x55e0, 0x890a, 0xd3b8, 0x0, 0x1);
        gbc.writeMem(0xaf3, { 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x73a8, gbc.sp());
        EXPECT(0xaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 001F
        gbc.setState(0x245e, 0xf923, 0x7950, 0xe7c7, 0x4907, 0x1e53, 0x1, 0x0);
        gbc.writeMem(0x245e, { 0x2c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf923, gbc.sp());
        EXPECT(0x245f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0020
        gbc.setState(0x4771, 0x244c, 0x350, 0xe1dd, 0xb5b7, 0x4be5, 0x1, 0x0);
        gbc.writeMem(0x4771, { 0x2c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x244c, gbc.sp());
        EXPECT(0x4772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0021
        gbc.setState(0xea78, 0xf1c4, 0xb5d0, 0xcb2c, 0xb66f, 0x96fd, 0x0, 0x0);
        gbc.writeMem(0xea78, { 0x2c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf1c4, gbc.sp());
        EXPECT(0xea79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xea78));
        // 2C 0022
        gbc.setState(0x638c, 0x7031, 0x32b0, 0xc67e, 0xc39a, 0x45ce, 0x0, 0x1);
        gbc.writeMem(0x638c, { 0x2c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7031, gbc.sp());
        EXPECT(0x638d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0023
        gbc.setState(0xa210, 0x302c, 0xc610, 0x7240, 0xb8c4, 0xa653, 0x1, 0x0);
        gbc.writeMem(0xa210, { 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x302c, gbc.sp());
        EXPECT(0xa211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa210));
        // 2C 0024
        gbc.setState(0x1af5, 0xe0a2, 0x9520, 0xbba1, 0xf0f7, 0xfe2, 0x0, 0x1);
        gbc.writeMem(0x1af5, { 0x2c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe0a2, gbc.sp());
        EXPECT(0x1af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0026
        gbc.setState(0x50e8, 0xf5f4, 0xf30, 0xcab4, 0x9938, 0xe722, 0x1, 0x1);
        gbc.writeMem(0x50e8, { 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf5f4, gbc.sp());
        EXPECT(0x50e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0027
        gbc.setState(0x30ec, 0xa3bf, 0x8530, 0xc19f, 0xff6b, 0xdf9b, 0x1, 0x1);
        gbc.writeMem(0x30ec, { 0x2c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa3bf, gbc.sp());
        EXPECT(0x30ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0028
        gbc.setState(0x43be, 0x64f0, 0xcc50, 0xb05e, 0x496f, 0xb6b0, 0x0, 0x1);
        gbc.writeMem(0x43be, { 0x2c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x64f0, gbc.sp());
        EXPECT(0x43bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0029
        gbc.setState(0x27ba, 0x727f, 0x5190, 0x6332, 0xcaa4, 0x91b8, 0x1, 0x1);
        gbc.writeMem(0x27ba, { 0x2c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x727f, gbc.sp());
        EXPECT(0x27bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 002A
        gbc.setState(0x1f2c, 0xaced, 0xa220, 0x4fed, 0x16c2, 0x1733, 0x1, 0x1);
        gbc.writeMem(0x1f2c, { 0x2c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xaced, gbc.sp());
        EXPECT(0x1f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 002B
        gbc.setState(0xe55e, 0xd396, 0x5ad0, 0xf27d, 0xe9a, 0x55b4, 0x0, 0x0);
        gbc.writeMem(0xe55e, { 0x2c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd396, gbc.sp());
        EXPECT(0xe55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe55e));
        // 2C 002C
        gbc.setState(0x7be1, 0x9ab5, 0x1800, 0xb62c, 0xd607, 0xcf2c, 0x1, 0x1);
        gbc.writeMem(0x7be1, { 0x2c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9ab5, gbc.sp());
        EXPECT(0x7be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 002D
        gbc.setState(0x1222, 0xc6ef, 0xc360, 0xe57b, 0x20de, 0x5071, 0x0, 0x1);
        gbc.writeMem(0x1222, { 0x2c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc6ef, gbc.sp());
        EXPECT(0x1223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 002E
        gbc.setState(0x755c, 0x8b8d, 0x10, 0xfabf, 0x909a, 0xbe0b, 0x1, 0x0);
        gbc.writeMem(0x755c, { 0x2c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8b8d, gbc.sp());
        EXPECT(0x755d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 002F
        gbc.setState(0x69dd, 0xee9a, 0xf7a0, 0x3dc3, 0xce19, 0x8e36, 0x0, 0x0);
        gbc.writeMem(0x69dd, { 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xee9a, gbc.sp());
        EXPECT(0x69de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0030
        gbc.setState(0x54d8, 0x928d, 0xca50, 0xb78f, 0xe1cf, 0xad28, 0x0, 0x0);
        gbc.writeMem(0x54d8, { 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x928d, gbc.sp());
        EXPECT(0x54d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0031
        gbc.setState(0xcb7f, 0x484, 0x7480, 0x3fcc, 0x4bdb, 0x543c, 0x1, 0x1);
        gbc.writeMem(0xcb7f, { 0x2c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x484, gbc.sp());
        EXPECT(0xcb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcb7f));
        // 2C 0032
        gbc.setState(0xbbb5, 0x6152, 0x5a90, 0x891e, 0x7ee1, 0x3e68, 0x0, 0x1);
        gbc.writeMem(0xbbb5, { 0x2c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6152, gbc.sp());
        EXPECT(0xbbb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbbb5));
        // 2C 0033
        gbc.setState(0x2509, 0xd17e, 0x2fd0, 0x53f1, 0x6d9e, 0xa6c5, 0x0, 0x1);
        gbc.writeMem(0x2509, { 0x2c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd17e, gbc.sp());
        EXPECT(0x250a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0034
        gbc.setState(0xe984, 0xc3e8, 0xa30, 0x3781, 0x3a8e, 0xe596, 0x0, 0x1);
        gbc.writeMem(0xe984, { 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc3e8, gbc.sp());
        EXPECT(0xe985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe984));
        // 2C 0035
        gbc.setState(0x9829, 0xa892, 0xa9a0, 0xb44f, 0xa7e9, 0x7d23, 0x1, 0x1);
        gbc.writeMem(0x9829, { 0x2c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa892, gbc.sp());
        EXPECT(0x982a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9829));
        // 2C 0037
        gbc.setState(0x4c1b, 0xf798, 0xc910, 0xd9f6, 0x5265, 0xa79c, 0x0, 0x0);
        gbc.writeMem(0x4c1b, { 0x2c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf798, gbc.sp());
        EXPECT(0x4c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0038
        gbc.setState(0x146a, 0x326, 0x1d90, 0x514d, 0x13e2, 0x68b7, 0x0, 0x0);
        gbc.writeMem(0x146a, { 0x2c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x326, gbc.sp());
        EXPECT(0x146b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0039
        gbc.setState(0x7b14, 0x5111, 0x7a80, 0x2d29, 0xdcd5, 0x4475, 0x0, 0x0);
        gbc.writeMem(0x7b14, { 0x2c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5111, gbc.sp());
        EXPECT(0x7b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 003A
        gbc.setState(0xbec6, 0x9b97, 0xb960, 0xf19e, 0xa92c, 0xe3e9, 0x0, 0x1);
        gbc.writeMem(0xbec6, { 0x2c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9b97, gbc.sp());
        EXPECT(0xbec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbec6));
        // 2C 003B
        gbc.setState(0x698b, 0xb321, 0x2b90, 0x339e, 0xe134, 0xe18b, 0x1, 0x0);
        gbc.writeMem(0x698b, { 0x2c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb321, gbc.sp());
        EXPECT(0x698c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 003C
        gbc.setState(0x8a07, 0xecd6, 0xae80, 0x8935, 0xd4a0, 0x8711, 0x0, 0x1);
        gbc.writeMem(0x8a07, { 0x2c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xecd6, gbc.sp());
        EXPECT(0x8a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8a07));
        // 2C 003D
        gbc.setState(0xdd49, 0xd5cc, 0xfb50, 0x9b68, 0x3bd3, 0x7311, 0x1, 0x0);
        gbc.writeMem(0xdd49, { 0x2c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd5cc, gbc.sp());
        EXPECT(0xdd4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdd49));
        // 2C 003E
        gbc.setState(0x6b84, 0x6673, 0x8320, 0x5e3, 0x474d, 0x1795, 0x1, 0x1);
        gbc.writeMem(0x6b84, { 0x2c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6673, gbc.sp());
        EXPECT(0x6b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 003F
        gbc.setState(0x3924, 0x9b9a, 0xc190, 0x2f02, 0xff36, 0xd0e8, 0x1, 0x0);
        gbc.writeMem(0x3924, { 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9b9a, gbc.sp());
        EXPECT(0x3925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0040
        gbc.setState(0xb5c7, 0xa656, 0x8cd0, 0xeeb7, 0xd221, 0x4395, 0x0, 0x0);
        gbc.writeMem(0xb5c7, { 0x2c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa656, gbc.sp());
        EXPECT(0xb5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb5c7));
        // 2C 0041
        gbc.setState(0x1cc8, 0xaac8, 0x4730, 0x34a3, 0xcfe4, 0x9934, 0x0, 0x0);
        gbc.writeMem(0x1cc8, { 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaac8, gbc.sp());
        EXPECT(0x1cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0042
        gbc.setState(0x8575, 0x7bb6, 0xb260, 0x88b3, 0x4ddb, 0x83b3, 0x0, 0x0);
        gbc.writeMem(0x8575, { 0x2c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7bb6, gbc.sp());
        EXPECT(0x8576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8575));
        // 2C 0043
        gbc.setState(0x11ab, 0x3dfe, 0xa810, 0xcf, 0xa59c, 0x34d3, 0x1, 0x1);
        gbc.writeMem(0x11ab, { 0x2c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3dfe, gbc.sp());
        EXPECT(0x11ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0044
        gbc.setState(0x5cde, 0xd437, 0x6ae0, 0xb8c4, 0xb2d2, 0xe4a1, 0x0, 0x0);
        gbc.writeMem(0x5cde, { 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd437, gbc.sp());
        EXPECT(0x5cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0045
        gbc.setState(0x8c90, 0x1849, 0xfd30, 0xd3d8, 0xcd46, 0xfecb, 0x0, 0x1);
        gbc.writeMem(0x8c90, { 0x2c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1849, gbc.sp());
        EXPECT(0x8c91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8c90));
        // 2C 0046
        gbc.setState(0x2551, 0x94ee, 0x65b0, 0xf47f, 0x22b, 0x8ada, 0x1, 0x1);
        gbc.writeMem(0x2551, { 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x94ee, gbc.sp());
        EXPECT(0x2552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0047
        gbc.setState(0x30a2, 0x692c, 0x1b10, 0x4ca8, 0xfe50, 0x8315, 0x0, 0x0);
        gbc.writeMem(0x30a2, { 0x2c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x692c, gbc.sp());
        EXPECT(0x30a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0048
        gbc.setState(0xdb49, 0xc0bb, 0xcdc0, 0xe96a, 0x8fc5, 0xc7ec, 0x1, 0x0);
        gbc.writeMem(0xdb49, { 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc0bb, gbc.sp());
        EXPECT(0xdb4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdb49));
        // 2C 0049
        gbc.setState(0xccfe, 0xde2e, 0xe7b0, 0xd963, 0xed71, 0x441f, 0x1, 0x0);
        gbc.writeMem(0xccfe, { 0x2c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xde2e, gbc.sp());
        EXPECT(0xccff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xccfe));
        // 2C 004A
        gbc.setState(0xda22, 0x421d, 0x6a00, 0xd454, 0x5447, 0xacd3, 0x0, 0x1);
        gbc.writeMem(0xda22, { 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x421d, gbc.sp());
        EXPECT(0xda23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xda22));
        // 2C 004B
        gbc.setState(0x1784, 0x1d3c, 0xd5d0, 0x859a, 0xf79c, 0x4239, 0x1, 0x0);
        gbc.writeMem(0x1784, { 0x2c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1d3c, gbc.sp());
        EXPECT(0x1785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 004C
        gbc.setState(0xba4e, 0x28d4, 0xd1b0, 0x99e5, 0x54a6, 0x6aae, 0x1, 0x1);
        gbc.writeMem(0xba4e, { 0x2c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x28d4, gbc.sp());
        EXPECT(0xba4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xba4e));
        // 2C 004D
        gbc.setState(0xa298, 0x4c06, 0x4b40, 0x6e49, 0x95f5, 0x521e, 0x1, 0x0);
        gbc.writeMem(0xa298, { 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4c06, gbc.sp());
        EXPECT(0xa299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa298));
        // 2C 004E
        gbc.setState(0xab17, 0x55d0, 0x6a00, 0x95cb, 0x9ac3, 0x6818, 0x0, 0x0);
        gbc.writeMem(0xab17, { 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x55d0, gbc.sp());
        EXPECT(0xab18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xab17));
        // 2C 004F
        gbc.setState(0x5129, 0xeafe, 0xe3f0, 0x2396, 0x20cc, 0x9bf6, 0x0, 0x1);
        gbc.writeMem(0x5129, { 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xeafe, gbc.sp());
        EXPECT(0x512a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0050
        gbc.setState(0x962d, 0x4275, 0x6930, 0xfce4, 0x45a8, 0xd839, 0x1, 0x1);
        gbc.writeMem(0x962d, { 0x2c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4275, gbc.sp());
        EXPECT(0x962e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x962d));
        // 2C 0051
        gbc.setState(0xaa69, 0x551c, 0x7180, 0xe9bd, 0x2e74, 0x34e4, 0x0, 0x1);
        gbc.writeMem(0xaa69, { 0x2c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x551c, gbc.sp());
        EXPECT(0xaa6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xaa69));
        // 2C 0052
        gbc.setState(0x28c0, 0xd4eb, 0x1e0, 0x65e7, 0x440f, 0xcbf6, 0x1, 0x1);
        gbc.writeMem(0x28c0, { 0x2c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd4eb, gbc.sp());
        EXPECT(0x28c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0053
        gbc.setState(0x6525, 0x2265, 0xc2d0, 0xc1d8, 0x261a, 0xe80e, 0x0, 0x0);
        gbc.writeMem(0x6525, { 0x2c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2265, gbc.sp());
        EXPECT(0x6526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0054
        gbc.setState(0xdbbb, 0xc981, 0xf220, 0x5c38, 0x74ce, 0x187a, 0x0, 0x0);
        gbc.writeMem(0xdbbb, { 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc981, gbc.sp());
        EXPECT(0xdbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdbbb));
        // 2C 0055
        gbc.setState(0x701c, 0x9c49, 0x43b0, 0x998, 0xdc37, 0xc467, 0x0, 0x1);
        gbc.writeMem(0x701c, { 0x2c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9c49, gbc.sp());
        EXPECT(0x701d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0056
        gbc.setState(0x59ad, 0x7dda, 0xa230, 0x3e39, 0xb370, 0x9b11, 0x1, 0x0);
        gbc.writeMem(0x59ad, { 0x2c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7dda, gbc.sp());
        EXPECT(0x59ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0057
        gbc.setState(0x3bcb, 0x7450, 0x7470, 0x394c, 0x4dd0, 0xc533, 0x1, 0x1);
        gbc.writeMem(0x3bcb, { 0x2c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7450, gbc.sp());
        EXPECT(0x3bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0058
        gbc.setState(0xc21c, 0xedc3, 0x7750, 0x33de, 0x1f79, 0x8360, 0x0, 0x1);
        gbc.writeMem(0xc21c, { 0x2c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xedc3, gbc.sp());
        EXPECT(0xc21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc21c));
        // 2C 0059
        gbc.setState(0x2014, 0xad37, 0x8410, 0xbfff, 0x487, 0x118b, 0x1, 0x1);
        gbc.writeMem(0x2014, { 0x2c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xad37, gbc.sp());
        EXPECT(0x2015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 005A
        gbc.setState(0x4400, 0x303e, 0x2360, 0xb7f9, 0xb2b0, 0xa2dc, 0x1, 0x1);
        gbc.writeMem(0x4400, { 0x2c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x303e, gbc.sp());
        EXPECT(0x4401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 005B
        gbc.setState(0x32f1, 0x1696, 0xfe10, 0xae88, 0xd6f8, 0x6310, 0x1, 0x0);
        gbc.writeMem(0x32f1, { 0x2c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1696, gbc.sp());
        EXPECT(0x32f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 005C
        gbc.setState(0x88ea, 0x812b, 0x9130, 0x7c4f, 0xb33c, 0xdb25, 0x1, 0x1);
        gbc.writeMem(0x88ea, { 0x2c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x812b, gbc.sp());
        EXPECT(0x88eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x88ea));
        // 2C 005D
        gbc.setState(0xe17a, 0x219a, 0xdee0, 0x1677, 0xf811, 0x49cd, 0x0, 0x1);
        gbc.writeMem(0xe17a, { 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x219a, gbc.sp());
        EXPECT(0xe17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe17a));
        // 2C 005E
        gbc.setState(0x8315, 0x368e, 0xeb30, 0xdca, 0x4140, 0x901a, 0x1, 0x0);
        gbc.writeMem(0x8315, { 0x2c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x368e, gbc.sp());
        EXPECT(0x8316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8315));
        // 2C 005F
        gbc.setState(0x58b3, 0x3d4d, 0x4790, 0x4087, 0x452f, 0xa629, 0x0, 0x1);
        gbc.writeMem(0x58b3, { 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3d4d, gbc.sp());
        EXPECT(0x58b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0060
        gbc.setState(0x1a94, 0x4f8d, 0xa300, 0xd23b, 0xd921, 0x7626, 0x1, 0x1);
        gbc.writeMem(0x1a94, { 0x2c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4f8d, gbc.sp());
        EXPECT(0x1a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0061
        gbc.setState(0x436c, 0xcf97, 0x6ef0, 0x1877, 0xb29f, 0x69f2, 0x1, 0x0);
        gbc.writeMem(0x436c, { 0x2c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcf97, gbc.sp());
        EXPECT(0x436d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0063
        gbc.setState(0x6670, 0x9d1b, 0xed50, 0xe362, 0xf5c2, 0x47c0, 0x0, 0x1);
        gbc.writeMem(0x6670, { 0x2c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9d1b, gbc.sp());
        EXPECT(0x6671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0064
        gbc.setState(0x22be, 0xec3b, 0x1870, 0xab30, 0x5ea6, 0x3eda, 0x0, 0x0);
        gbc.writeMem(0x22be, { 0x2c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xec3b, gbc.sp());
        EXPECT(0x22bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0065
        gbc.setState(0x7f5d, 0x96d, 0xf810, 0x3516, 0x5315, 0xf397, 0x1, 0x0);
        gbc.writeMem(0x7f5d, { 0x2c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x96d, gbc.sp());
        EXPECT(0x7f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0067
        gbc.setState(0x6738, 0x56f2, 0x3f30, 0x2c9d, 0x28e5, 0x288c, 0x1, 0x1);
        gbc.writeMem(0x6738, { 0x2c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x56f2, gbc.sp());
        EXPECT(0x6739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0068
        gbc.setState(0xb07f, 0xc702, 0x5990, 0x742d, 0x376e, 0x13ff, 0x0, 0x0);
        gbc.writeMem(0xb07f, { 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc702, gbc.sp());
        EXPECT(0xb080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb07f));
        // 2C 0069
        gbc.setState(0xeca8, 0x15a3, 0xc640, 0xbdcf, 0xd69f, 0x9ffb, 0x0, 0x1);
        gbc.writeMem(0xeca8, { 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x15a3, gbc.sp());
        EXPECT(0xeca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeca8));
        // 2C 006A
        gbc.setState(0x51a7, 0x9c74, 0xd9b0, 0x7dde, 0x1b0d, 0xf341, 0x0, 0x1);
        gbc.writeMem(0x51a7, { 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9c74, gbc.sp());
        EXPECT(0x51a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 006B
        gbc.setState(0x70cc, 0xf0dc, 0xcd50, 0x4fce, 0xbcc8, 0x6d05, 0x1, 0x0);
        gbc.writeMem(0x70cc, { 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf0dc, gbc.sp());
        EXPECT(0x70cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 006C
        gbc.setState(0x4f2d, 0x9ada, 0x4710, 0xead2, 0x85de, 0xa4ec, 0x1, 0x1);
        gbc.writeMem(0x4f2d, { 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9ada, gbc.sp());
        EXPECT(0x4f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 006D
        gbc.setState(0x511e, 0x5f6f, 0x15e0, 0x5010, 0x1f66, 0x91f9, 0x1, 0x1);
        gbc.writeMem(0x511e, { 0x2c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0x511f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 006E
        gbc.setState(0x8bcc, 0x90f0, 0xdb90, 0x59ee, 0x13ac, 0xd495, 0x1, 0x1);
        gbc.writeMem(0x8bcc, { 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x90f0, gbc.sp());
        EXPECT(0x8bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8bcc));
        // 2C 006F
        gbc.setState(0x471b, 0x129, 0xb440, 0xe0c4, 0x48f2, 0xa97d, 0x1, 0x0);
        gbc.writeMem(0x471b, { 0x2c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x129, gbc.sp());
        EXPECT(0x471c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0070
        gbc.setState(0x1991, 0xbb2c, 0x2c60, 0x67e1, 0x8813, 0x9eb3, 0x1, 0x1);
        gbc.writeMem(0x1991, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbb2c, gbc.sp());
        EXPECT(0x1992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0071
        gbc.setState(0x7c2c, 0x60d6, 0xb100, 0x5088, 0xa004, 0xbbac, 0x1, 0x0);
        gbc.writeMem(0x7c2c, { 0x2c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x60d6, gbc.sp());
        EXPECT(0x7c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0072
        gbc.setState(0xd815, 0xb15d, 0x1b80, 0x7cc, 0x2753, 0x8f43, 0x1, 0x1);
        gbc.writeMem(0xd815, { 0x2c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb15d, gbc.sp());
        EXPECT(0xd816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd815));
        // 2C 0073
        gbc.setState(0x325, 0x22b8, 0x4b0, 0xf5d3, 0x2ee5, 0x83e, 0x1, 0x0);
        gbc.writeMem(0x325, { 0x2c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x22b8, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0075
        gbc.setState(0x219b, 0xdaad, 0x600, 0xb470, 0xc69e, 0x418d, 0x1, 0x1);
        gbc.writeMem(0x219b, { 0x2c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdaad, gbc.sp());
        EXPECT(0x219c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0076
        gbc.setState(0x666d, 0x849c, 0x4890, 0xe232, 0xdef0, 0x2c16, 0x0, 0x0);
        gbc.writeMem(0x666d, { 0x2c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x849c, gbc.sp());
        EXPECT(0x666e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0077
        gbc.setState(0x1572, 0xf685, 0x2510, 0x2b33, 0x3aa, 0xa98a, 0x0, 0x0);
        gbc.writeMem(0x1572, { 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf685, gbc.sp());
        EXPECT(0x1573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0078
        gbc.setState(0xbbd5, 0x18a0, 0x380, 0x70f5, 0x3eba, 0x7aaa, 0x1, 0x1);
        gbc.writeMem(0xbbd5, { 0x2c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x18a0, gbc.sp());
        EXPECT(0xbbd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbbd5));
        // 2C 0079
        gbc.setState(0x1af7, 0x4b08, 0x3790, 0xac2d, 0x7602, 0xc6f9, 0x1, 0x1);
        gbc.writeMem(0x1af7, { 0x2c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4b08, gbc.sp());
        EXPECT(0x1af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 007A
        gbc.setState(0x23d4, 0x5a35, 0x1070, 0x40d7, 0x20e8, 0xed50, 0x1, 0x0);
        gbc.writeMem(0x23d4, { 0x2c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5a35, gbc.sp());
        EXPECT(0x23d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 007B
        gbc.setState(0x841d, 0x5f0e, 0xa9c0, 0xab3a, 0xf0a7, 0x2832, 0x1, 0x1);
        gbc.writeMem(0x841d, { 0x2c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5f0e, gbc.sp());
        EXPECT(0x841e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x841d));
        // 2C 007C
        gbc.setState(0x93d8, 0x62f2, 0xda90, 0xb223, 0x44df, 0xf724, 0x1, 0x0);
        gbc.writeMem(0x93d8, { 0x2c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x62f2, gbc.sp());
        EXPECT(0x93d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x93d8));
        // 2C 007D
        gbc.setState(0x3b66, 0x4b95, 0xfca0, 0x88de, 0x4445, 0xf060, 0x1, 0x0);
        gbc.writeMem(0x3b66, { 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4b95, gbc.sp());
        EXPECT(0x3b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 007E
        gbc.setState(0x569, 0x163d, 0x4940, 0xce2e, 0xe9bd, 0xbd8b, 0x1, 0x0);
        gbc.writeMem(0x569, { 0x2c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x163d, gbc.sp());
        EXPECT(0x56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 007F
        gbc.setState(0xb9fd, 0x603a, 0xed50, 0xea1b, 0xed47, 0x36ef, 0x1, 0x0);
        gbc.writeMem(0xb9fd, { 0x2c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x603a, gbc.sp());
        EXPECT(0xb9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb9fd));
        // 2C 0080
        gbc.setState(0x2359, 0x154d, 0x36a0, 0xbb71, 0x94de, 0xc47a, 0x1, 0x1);
        gbc.writeMem(0x2359, { 0x2c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x154d, gbc.sp());
        EXPECT(0x235a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0081
        gbc.setState(0x71e6, 0x91f1, 0xdba0, 0x2243, 0x10e0, 0xe639, 0x0, 0x0);
        gbc.writeMem(0x71e6, { 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x91f1, gbc.sp());
        EXPECT(0x71e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0082
        gbc.setState(0x4320, 0x2fa0, 0xeea0, 0xa655, 0x27e3, 0xd02, 0x0, 0x1);
        gbc.writeMem(0x4320, { 0x2c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2fa0, gbc.sp());
        EXPECT(0x4321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0083
        gbc.setState(0x2de4, 0xfb17, 0xb5b0, 0x91ac, 0xd655, 0x382f, 0x0, 0x0);
        gbc.writeMem(0x2de4, { 0x2c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfb17, gbc.sp());
        EXPECT(0x2de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0084
        gbc.setState(0xbd3, 0x1c60, 0x9610, 0xa655, 0x3d1d, 0x6769, 0x0, 0x0);
        gbc.writeMem(0xbd3, { 0x2c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1c60, gbc.sp());
        EXPECT(0xbd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0085
        gbc.setState(0xeaf9, 0xd9c1, 0x6b00, 0xf2ce, 0x8dd2, 0xe40a, 0x1, 0x0);
        gbc.writeMem(0xeaf9, { 0x2c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd9c1, gbc.sp());
        EXPECT(0xeafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeaf9));
        // 2C 0086
        gbc.setState(0xa000, 0x81a8, 0x66c0, 0x8028, 0xa21b, 0x4711, 0x1, 0x1);
        gbc.writeMem(0xa000, { 0x2c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x81a8, gbc.sp());
        EXPECT(0xa001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa000));
        // 2C 0087
        gbc.setState(0xaaa6, 0xa2f3, 0xc770, 0x4106, 0xdf29, 0x752f, 0x0, 0x1);
        gbc.writeMem(0xaaa6, { 0x2c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa2f3, gbc.sp());
        EXPECT(0xaaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xaaa6));
        // 2C 0088
        gbc.setState(0x2d7b, 0xbdec, 0x8af0, 0x58ff, 0xba02, 0x7314, 0x0, 0x1);
        gbc.writeMem(0x2d7b, { 0x2c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbdec, gbc.sp());
        EXPECT(0x2d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0089
        gbc.setState(0x6072, 0xcda4, 0x1ec0, 0x249d, 0x3c0a, 0x7d8, 0x1, 0x1);
        gbc.writeMem(0x6072, { 0x2c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcda4, gbc.sp());
        EXPECT(0x6073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 008A
        gbc.setState(0x2e94, 0xa1ef, 0x8a90, 0x1d8a, 0xef2, 0xa3d2, 0x1, 0x0);
        gbc.writeMem(0x2e94, { 0x2c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa1ef, gbc.sp());
        EXPECT(0x2e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 008B
        gbc.setState(0xaa5, 0xfa68, 0x30f0, 0xffb7, 0x2ea5, 0xdf48, 0x1, 0x0);
        gbc.writeMem(0xaa5, { 0x2c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfa68, gbc.sp());
        EXPECT(0xaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 008C
        gbc.setState(0x1232, 0x1796, 0xcd50, 0x41fd, 0x681b, 0x3b0a, 0x1, 0x1);
        gbc.writeMem(0x1232, { 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1796, gbc.sp());
        EXPECT(0x1233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 008D
        gbc.setState(0xa33d, 0x7c6, 0xede0, 0x743a, 0x146f, 0x6355, 0x0, 0x0);
        gbc.writeMem(0xa33d, { 0x2c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7c6, gbc.sp());
        EXPECT(0xa33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa33d));
        // 2C 008E
        gbc.setState(0xf7c, 0x77fe, 0x2d20, 0xd7e2, 0x5e84, 0x73eb, 0x0, 0x1);
        gbc.writeMem(0xf7c, { 0x2c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x77fe, gbc.sp());
        EXPECT(0xf7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 008F
        gbc.setState(0x17b3, 0xd497, 0x3c50, 0xf48d, 0x2217, 0x6036, 0x1, 0x1);
        gbc.writeMem(0x17b3, { 0x2c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd497, gbc.sp());
        EXPECT(0x17b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0090
        gbc.setState(0xe857, 0x1db, 0x3120, 0xee8d, 0x56a, 0x78d4, 0x0, 0x0);
        gbc.writeMem(0xe857, { 0x2c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1db, gbc.sp());
        EXPECT(0xe858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe857));
        // 2C 0091
        gbc.setState(0xa068, 0xf526, 0xbbe0, 0x1004, 0x92d9, 0x1210, 0x1, 0x0);
        gbc.writeMem(0xa068, { 0x2c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf526, gbc.sp());
        EXPECT(0xa069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa068));
        // 2C 0092
        gbc.setState(0x1eb, 0xe61b, 0x2510, 0x6fc8, 0x3536, 0x5a71, 0x1, 0x1);
        gbc.writeMem(0x1eb, { 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe61b, gbc.sp());
        EXPECT(0x1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0093
        gbc.setState(0x4ce3, 0x2d0b, 0x5790, 0x6883, 0xdb38, 0x70b7, 0x0, 0x1);
        gbc.writeMem(0x4ce3, { 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2d0b, gbc.sp());
        EXPECT(0x4ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0094
        gbc.setState(0x4bb4, 0x6c33, 0xaa90, 0x5e62, 0x9dc6, 0xbeff, 0x1, 0x0);
        gbc.writeMem(0x4bb4, { 0x2c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6c33, gbc.sp());
        EXPECT(0x4bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0095
        gbc.setState(0x83be, 0xd612, 0xc5a0, 0x2ed8, 0x8be9, 0x8a4d, 0x0, 0x0);
        gbc.writeMem(0x83be, { 0x2c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd612, gbc.sp());
        EXPECT(0x83bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x83be));
        // 2C 0096
        gbc.setState(0x7404, 0xce90, 0xc2b0, 0xf23e, 0xe625, 0x89d8, 0x1, 0x1);
        gbc.writeMem(0x7404, { 0x2c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xce90, gbc.sp());
        EXPECT(0x7405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0098
        gbc.setState(0x7502, 0xf7b3, 0xf550, 0x43c8, 0x77a0, 0x291d, 0x0, 0x1);
        gbc.writeMem(0x7502, { 0x2c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf7b3, gbc.sp());
        EXPECT(0x7503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0099
        gbc.setState(0xa12b, 0x7232, 0xa20, 0x185e, 0x3e14, 0xb36c, 0x1, 0x1);
        gbc.writeMem(0xa12b, { 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7232, gbc.sp());
        EXPECT(0xa12c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa12b));
        // 2C 009A
        gbc.setState(0xd2f2, 0x6bec, 0x4760, 0xd30e, 0xa874, 0xef83, 0x0, 0x0);
        gbc.writeMem(0xd2f2, { 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6bec, gbc.sp());
        EXPECT(0xd2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd2f2));
        // 2C 009B
        gbc.setState(0x7afe, 0x4d0f, 0x190, 0x8bba, 0x833d, 0xea75, 0x1, 0x0);
        gbc.writeMem(0x7afe, { 0x2c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4d0f, gbc.sp());
        EXPECT(0x7aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 009C
        gbc.setState(0x6fc, 0xe843, 0x14c0, 0x9778, 0x13c, 0xe7de, 0x0, 0x0);
        gbc.writeMem(0x6fc, { 0x2c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe843, gbc.sp());
        EXPECT(0x6fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 009E
        gbc.setState(0xa1fc, 0x7bdc, 0x6df0, 0x760b, 0x888f, 0x8e34, 0x1, 0x0);
        gbc.writeMem(0xa1fc, { 0x2c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7bdc, gbc.sp());
        EXPECT(0xa1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa1fc));
        // 2C 009F
        gbc.setState(0xb6f3, 0x5918, 0xb870, 0x4410, 0x5e0f, 0xde48, 0x0, 0x1);
        gbc.writeMem(0xb6f3, { 0x2c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5918, gbc.sp());
        EXPECT(0xb6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb6f3));
        // 2C 00A0
        gbc.setState(0xe67c, 0x1816, 0xd7a0, 0x307, 0xd65b, 0x1dde, 0x1, 0x0);
        gbc.writeMem(0xe67c, { 0x2c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1816, gbc.sp());
        EXPECT(0xe67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe67c));
        // 2C 00A1
        gbc.setState(0xa945, 0x133e, 0x25d0, 0x3684, 0x50d8, 0xc77a, 0x0, 0x0);
        gbc.writeMem(0xa945, { 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x133e, gbc.sp());
        EXPECT(0xa946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa945));
        // 2C 00A2
        gbc.setState(0x28a0, 0xd6e4, 0x3540, 0x3c7b, 0x6858, 0x3234, 0x1, 0x0);
        gbc.writeMem(0x28a0, { 0x2c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd6e4, gbc.sp());
        EXPECT(0x28a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00A3
        gbc.setState(0x5daf, 0x8ce5, 0xb8a0, 0xf627, 0x6605, 0x677e, 0x0, 0x1);
        gbc.writeMem(0x5daf, { 0x2c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8ce5, gbc.sp());
        EXPECT(0x5db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00A4
        gbc.setState(0x66be, 0xfe18, 0xbf60, 0xc608, 0x1d30, 0x2536, 0x1, 0x0);
        gbc.writeMem(0x66be, { 0x2c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfe18, gbc.sp());
        EXPECT(0x66bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00A5
        gbc.setState(0xd52e, 0x8fc0, 0xced0, 0x6a9a, 0x7425, 0x959d, 0x0, 0x0);
        gbc.writeMem(0xd52e, { 0x2c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8fc0, gbc.sp());
        EXPECT(0xd52f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd52e));
        // 2C 00A6
        gbc.setState(0x1971, 0x6d53, 0xcc10, 0x9bf7, 0x6917, 0xdf5b, 0x0, 0x0);
        gbc.writeMem(0x1971, { 0x2c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6d53, gbc.sp());
        EXPECT(0x1972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00A7
        gbc.setState(0x925f, 0x7418, 0x3e50, 0x533f, 0x3cd8, 0xe827, 0x0, 0x0);
        gbc.writeMem(0x925f, { 0x2c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7418, gbc.sp());
        EXPECT(0x9260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x925f));
        // 2C 00A8
        gbc.setState(0x4418, 0xe0ef, 0xe000, 0xe9a7, 0x8497, 0x5da6, 0x1, 0x1);
        gbc.writeMem(0x4418, { 0x2c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe0ef, gbc.sp());
        EXPECT(0x4419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00A9
        gbc.setState(0x21c9, 0xf6e1, 0xafa0, 0x927b, 0x7c52, 0x8116, 0x0, 0x1);
        gbc.writeMem(0x21c9, { 0x2c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf6e1, gbc.sp());
        EXPECT(0x21ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00AA
        gbc.setState(0x90b2, 0x6457, 0xcbf0, 0xe826, 0xe533, 0x8698, 0x1, 0x1);
        gbc.writeMem(0x90b2, { 0x2c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6457, gbc.sp());
        EXPECT(0x90b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x90b2));
        // 2C 00AB
        gbc.setState(0xc9a, 0x4dcf, 0xe7f0, 0x20ff, 0x9624, 0xb975, 0x1, 0x0);
        gbc.writeMem(0xc9a, { 0x2c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4dcf, gbc.sp());
        EXPECT(0xc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00AC
        gbc.setState(0x5f28, 0x7800, 0x3420, 0xa5bc, 0x1876, 0x9200, 0x1, 0x0);
        gbc.writeMem(0x5f28, { 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7800, gbc.sp());
        EXPECT(0x5f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00AE
        gbc.setState(0x7c9e, 0x40b3, 0x2cd0, 0x5e19, 0x7c4e, 0x257a, 0x0, 0x1);
        gbc.writeMem(0x7c9e, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x40b3, gbc.sp());
        EXPECT(0x7c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00AF
        gbc.setState(0x95ec, 0xaf3f, 0x2d60, 0x4d84, 0x3c6b, 0xe668, 0x1, 0x0);
        gbc.writeMem(0x95ec, { 0x2c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xaf3f, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x95ec));
        // 2C 00B0
        gbc.setState(0xcbde, 0xe5d2, 0xf160, 0x1646, 0xda91, 0x607f, 0x1, 0x0);
        gbc.writeMem(0xcbde, { 0x2c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe5d2, gbc.sp());
        EXPECT(0xcbdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcbde));
        // 2C 00B1
        gbc.setState(0x512f, 0xfe54, 0xc000, 0xbed4, 0xd26f, 0xa8ba, 0x1, 0x0);
        gbc.writeMem(0x512f, { 0x2c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfe54, gbc.sp());
        EXPECT(0x5130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00B2
        gbc.setState(0x32c6, 0xc235, 0x1ac0, 0x7272, 0x2ede, 0x5e96, 0x1, 0x0);
        gbc.writeMem(0x32c6, { 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc235, gbc.sp());
        EXPECT(0x32c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00B3
        gbc.setState(0x68ce, 0x92db, 0x8fc0, 0xd13c, 0xb140, 0xd83b, 0x0, 0x1);
        gbc.writeMem(0x68ce, { 0x2c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x92db, gbc.sp());
        EXPECT(0x68cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00B4
        gbc.setState(0xff5, 0x77c2, 0xf2a0, 0x2a24, 0xfab5, 0x109, 0x0, 0x0);
        gbc.writeMem(0xff5, { 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x77c2, gbc.sp());
        EXPECT(0xff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00B5
        gbc.setState(0x8103, 0x9dd, 0xd090, 0xcaf1, 0x65f, 0x905, 0x0, 0x0);
        gbc.writeMem(0x8103, { 0x2c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9dd, gbc.sp());
        EXPECT(0x8104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8103));
        // 2C 00B6
        gbc.setState(0x88d7, 0xf7d9, 0x4770, 0xd1ee, 0xc88a, 0x5acc, 0x0, 0x0);
        gbc.writeMem(0x88d7, { 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf7d9, gbc.sp());
        EXPECT(0x88d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x88d7));
        // 2C 00B7
        gbc.setState(0x2c5a, 0x7ad2, 0xaa30, 0xcc02, 0xda8e, 0xe0c7, 0x0, 0x1);
        gbc.writeMem(0x2c5a, { 0x2c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7ad2, gbc.sp());
        EXPECT(0x2c5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00B8
        gbc.setState(0x72, 0x85b6, 0x8240, 0xc0fd, 0xbab2, 0xc0fa, 0x0, 0x0);
        gbc.writeMem(0x72, { 0x2c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x85b6, gbc.sp());
        EXPECT(0x73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00B9
        gbc.setState(0xc31e, 0x436c, 0x2fc0, 0x5f8c, 0x71, 0xcd76, 0x0, 0x0);
        gbc.writeMem(0xc31e, { 0x2c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x436c, gbc.sp());
        EXPECT(0xc31f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc31e));
        // 2C 00BA
        gbc.setState(0x11a4, 0xe31f, 0x9ae0, 0xcc8f, 0x5b81, 0x6a7f, 0x0, 0x1);
        gbc.writeMem(0x11a4, { 0x2c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe31f, gbc.sp());
        EXPECT(0x11a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00BB
        gbc.setState(0xf16, 0x9679, 0x3db0, 0xf8b7, 0x4e24, 0xc191, 0x1, 0x0);
        gbc.writeMem(0xf16, { 0x2c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9679, gbc.sp());
        EXPECT(0xf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00BC
        gbc.setState(0x9295, 0x7f4b, 0x2930, 0x91dd, 0x2401, 0x32c4, 0x1, 0x1);
        gbc.writeMem(0x9295, { 0x2c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7f4b, gbc.sp());
        EXPECT(0x9296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9295));
        // 2C 00BD
        gbc.setState(0xc83e, 0x3dba, 0xd3b0, 0xaa46, 0xc1d9, 0x8f5a, 0x0, 0x0);
        gbc.writeMem(0xc83e, { 0x2c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3dba, gbc.sp());
        EXPECT(0xc83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc83e));
        // 2C 00BE
        gbc.setState(0x37c1, 0x5e86, 0xcac0, 0x45a4, 0x88a0, 0x1884, 0x1, 0x0);
        gbc.writeMem(0x37c1, { 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5e86, gbc.sp());
        EXPECT(0x37c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00BF
        gbc.setState(0xa3ba, 0xb56e, 0xfe0, 0x6b6, 0x53eb, 0xaf65, 0x1, 0x0);
        gbc.writeMem(0xa3ba, { 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb56e, gbc.sp());
        EXPECT(0xa3bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa3ba));
        // 2C 00C0
        gbc.setState(0x9a0d, 0x1b03, 0xe200, 0x822, 0xc621, 0x527c, 0x1, 0x0);
        gbc.writeMem(0x9a0d, { 0x2c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1b03, gbc.sp());
        EXPECT(0x9a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9a0d));
        // 2C 00C1
        gbc.setState(0x547b, 0x8fef, 0xb420, 0x8e70, 0xc1be, 0xb89a, 0x0, 0x0);
        gbc.writeMem(0x547b, { 0x2c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8fef, gbc.sp());
        EXPECT(0x547c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00C2
        gbc.setState(0xaf81, 0xde23, 0x9560, 0x93b1, 0x512c, 0x397f, 0x1, 0x1);
        gbc.writeMem(0xaf81, { 0x2c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xde23, gbc.sp());
        EXPECT(0xaf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xaf81));
        // 2C 00C3
        gbc.setState(0xead1, 0x99fd, 0xada0, 0xe710, 0x44f0, 0x48ae, 0x0, 0x0);
        gbc.writeMem(0xead1, { 0x2c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x99fd, gbc.sp());
        EXPECT(0xead2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xead1));
        // 2C 00C4
        gbc.setState(0x475b, 0xf13f, 0xa80, 0xa46b, 0x82f0, 0x225d, 0x1, 0x0);
        gbc.writeMem(0x475b, { 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf13f, gbc.sp());
        EXPECT(0x475c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00C5
        gbc.setState(0x3870, 0xb607, 0xe150, 0xcca6, 0xb6ac, 0x4f26, 0x1, 0x1);
        gbc.writeMem(0x3870, { 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb607, gbc.sp());
        EXPECT(0x3871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00C6
        gbc.setState(0x47c8, 0xbfe3, 0x5420, 0x3e1c, 0x6276, 0x1d87, 0x0, 0x1);
        gbc.writeMem(0x47c8, { 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbfe3, gbc.sp());
        EXPECT(0x47c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00C7
        gbc.setState(0xd45, 0x4f1c, 0x7ae0, 0xffb8, 0x90e1, 0x7de0, 0x0, 0x0);
        gbc.writeMem(0xd45, { 0x2c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4f1c, gbc.sp());
        EXPECT(0xd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00C9
        gbc.setState(0xd97f, 0x42fb, 0xfd50, 0x9e07, 0xd93b, 0x5a9, 0x0, 0x0);
        gbc.writeMem(0xd97f, { 0x2c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x42fb, gbc.sp());
        EXPECT(0xd980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd97f));
        // 2C 00CA
        gbc.setState(0xe76, 0x7769, 0x47c0, 0x4929, 0xa7d0, 0xb1f1, 0x1, 0x1);
        gbc.writeMem(0xe76, { 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7769, gbc.sp());
        EXPECT(0xe77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00CC
        gbc.setState(0x794a, 0x51ff, 0x6510, 0x7cca, 0x242d, 0x6cf6, 0x1, 0x1);
        gbc.writeMem(0x794a, { 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x51ff, gbc.sp());
        EXPECT(0x794b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00CE
        gbc.setState(0x4b22, 0x521a, 0x3ad0, 0x7c18, 0x952f, 0x159a, 0x1, 0x0);
        gbc.writeMem(0x4b22, { 0x2c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x521a, gbc.sp());
        EXPECT(0x4b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00CF
        gbc.setState(0xebd6, 0x134a, 0xc30, 0x4c23, 0xfbaf, 0xddd0, 0x1, 0x0);
        gbc.writeMem(0xebd6, { 0x2c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x134a, gbc.sp());
        EXPECT(0xebd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xebd6));
        // 2C 00D1
        gbc.setState(0x22c1, 0xe744, 0x3c80, 0xd9ec, 0xa016, 0x9b21, 0x1, 0x0);
        gbc.writeMem(0x22c1, { 0x2c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe744, gbc.sp());
        EXPECT(0x22c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00D2
        gbc.setState(0xc82e, 0x898, 0xc860, 0x69be, 0x5d9e, 0x8e3f, 0x0, 0x1);
        gbc.writeMem(0xc82e, { 0x2c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x898, gbc.sp());
        EXPECT(0xc82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc82e));
        // 2C 00D3
        gbc.setState(0xcd42, 0x91ae, 0x3ad0, 0x29e0, 0x25d, 0x554, 0x1, 0x0);
        gbc.writeMem(0xcd42, { 0x2c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x91ae, gbc.sp());
        EXPECT(0xcd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcd42));
        // 2C 00D4
        gbc.setState(0x9f2c, 0x4858, 0x6060, 0xbcd8, 0x382, 0x5e6e, 0x0, 0x0);
        gbc.writeMem(0x9f2c, { 0x2c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4858, gbc.sp());
        EXPECT(0x9f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9f2c));
        // 2C 00D5
        gbc.setState(0xc276, 0x68ae, 0xd3b0, 0xa77a, 0x91ad, 0x7922, 0x1, 0x0);
        gbc.writeMem(0xc276, { 0x2c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x68ae, gbc.sp());
        EXPECT(0xc277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc276));
        // 2C 00D6
        gbc.setState(0x9e0d, 0xb235, 0xed30, 0x6472, 0x67d1, 0xe7b3, 0x1, 0x0);
        gbc.writeMem(0x9e0d, { 0x2c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb235, gbc.sp());
        EXPECT(0x9e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9e0d));
        // 2C 00D7
        gbc.setState(0x7e0c, 0xb4, 0x14e0, 0x4fe5, 0x9e9a, 0x4d8f, 0x0, 0x1);
        gbc.writeMem(0x7e0c, { 0x2c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb4, gbc.sp());
        EXPECT(0x7e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00D9
        gbc.setState(0x48b3, 0x62fb, 0x6480, 0x2e45, 0x33b3, 0x82e, 0x0, 0x0);
        gbc.writeMem(0x48b3, { 0x2c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x62fb, gbc.sp());
        EXPECT(0x48b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00DA
        gbc.setState(0x939c, 0x250b, 0x8b30, 0x8147, 0x922e, 0xf184, 0x0, 0x0);
        gbc.writeMem(0x939c, { 0x2c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x250b, gbc.sp());
        EXPECT(0x939d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x939c));
        // 2C 00DB
        gbc.setState(0xca09, 0x87cd, 0x57a0, 0x2e1d, 0xeb62, 0xcc12, 0x0, 0x1);
        gbc.writeMem(0xca09, { 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x87cd, gbc.sp());
        EXPECT(0xca0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xca09));
        // 2C 00DC
        gbc.setState(0xb668, 0xb04, 0x720, 0xea19, 0xa02e, 0xa75c, 0x0, 0x0);
        gbc.writeMem(0xb668, { 0x2c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb04, gbc.sp());
        EXPECT(0xb669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb668));
        // 2C 00DD
        gbc.setState(0xdd78, 0xb820, 0xe270, 0x619c, 0xc748, 0x75cf, 0x1, 0x0);
        gbc.writeMem(0xdd78, { 0x2c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb820, gbc.sp());
        EXPECT(0xdd79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdd78));
        // 2C 00DE
        gbc.setState(0x4550, 0x84ae, 0x1710, 0x306, 0xec94, 0x2376, 0x1, 0x1);
        gbc.writeMem(0x4550, { 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x84ae, gbc.sp());
        EXPECT(0x4551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00DF
        gbc.setState(0x1b0b, 0x234f, 0x900, 0x5d46, 0x963f, 0x8ac9, 0x1, 0x1);
        gbc.writeMem(0x1b0b, { 0x2c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x234f, gbc.sp());
        EXPECT(0x1b0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00E0
        gbc.setState(0xdac2, 0x977a, 0xa790, 0x9702, 0x7933, 0xffe7, 0x0, 0x0);
        gbc.writeMem(0xdac2, { 0x2c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x977a, gbc.sp());
        EXPECT(0xdac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdac2));
        // 2C 00E1
        gbc.setState(0xe1d3, 0xed6b, 0x6820, 0x1887, 0xfb2b, 0x48ee, 0x0, 0x0);
        gbc.writeMem(0xe1d3, { 0x2c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xed6b, gbc.sp());
        EXPECT(0xe1d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe1d3));
        // 2C 00E2
        gbc.setState(0xbb37, 0xbece, 0x5930, 0xd851, 0x5a2c, 0x295b, 0x0, 0x1);
        gbc.writeMem(0xbb37, { 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbece, gbc.sp());
        EXPECT(0xbb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbb37));
        // 2C 00E3
        gbc.setState(0x73ad, 0xeae1, 0x7d40, 0xd917, 0xc0cc, 0xf03e, 0x0, 0x1);
        gbc.writeMem(0x73ad, { 0x2c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xeae1, gbc.sp());
        EXPECT(0x73ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00E4
        gbc.setState(0x8e91, 0x6212, 0xad50, 0xbff4, 0x2e18, 0xa149, 0x0, 0x0);
        gbc.writeMem(0x8e91, { 0x2c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6212, gbc.sp());
        EXPECT(0x8e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8e91));
        // 2C 00E5
        gbc.setState(0xea63, 0x90e3, 0x2bc0, 0xd6cd, 0xa4f8, 0x7162, 0x1, 0x0);
        gbc.writeMem(0xea63, { 0x2c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x90e3, gbc.sp());
        EXPECT(0xea64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xea63));
        // 2C 00E7
        gbc.setState(0x7d5, 0x7dbb, 0x71f0, 0xc2e6, 0xa3a0, 0x8ed, 0x0, 0x1);
        gbc.writeMem(0x7d5, { 0x2c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7dbb, gbc.sp());
        EXPECT(0x7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00E8
        gbc.setState(0xda77, 0x8396, 0xc320, 0x7e27, 0x3b9d, 0x6401, 0x1, 0x1);
        gbc.writeMem(0xda77, { 0x2c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8396, gbc.sp());
        EXPECT(0xda78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xda77));
        // 2C 00E9
        gbc.setState(0xe2ad, 0x7ff2, 0xc4c0, 0x96a6, 0xf44c, 0xa40e, 0x1, 0x1);
        gbc.writeMem(0xe2ad, { 0x2c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7ff2, gbc.sp());
        EXPECT(0xe2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe2ad));
        // 2C 00EA
        gbc.setState(0x3f1c, 0x52a7, 0x54e0, 0xca37, 0x3f46, 0x9290, 0x0, 0x1);
        gbc.writeMem(0x3f1c, { 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x52a7, gbc.sp());
        EXPECT(0x3f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00EB
        gbc.setState(0x1e9d, 0x3a1f, 0x590, 0x1e91, 0x1cd4, 0x902b, 0x0, 0x1);
        gbc.writeMem(0x1e9d, { 0x2c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3a1f, gbc.sp());
        EXPECT(0x1e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00EC
        gbc.setState(0xb4fa, 0x2b8a, 0xd050, 0x75e5, 0x71ad, 0xe900, 0x0, 0x1);
        gbc.writeMem(0xb4fa, { 0x2c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2b8a, gbc.sp());
        EXPECT(0xb4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb4fa));
        // 2C 00EE
        gbc.setState(0x92b5, 0xbb71, 0x58f0, 0x6003, 0x68f1, 0xee59, 0x0, 0x1);
        gbc.writeMem(0x92b5, { 0x2c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbb71, gbc.sp());
        EXPECT(0x92b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x92b5));
        // 2C 00EF
        gbc.setState(0xa82e, 0x981, 0x1d30, 0x99e2, 0x7bca, 0xd338, 0x0, 0x1);
        gbc.writeMem(0xa82e, { 0x2c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x981, gbc.sp());
        EXPECT(0xa82f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa82e));
        // 2C 00F0
        gbc.setState(0xe69e, 0xb48b, 0x1f50, 0xc114, 0x8ab1, 0xdca, 0x0, 0x0);
        gbc.writeMem(0xe69e, { 0x2c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb48b, gbc.sp());
        EXPECT(0xe69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe69e));
        // 2C 00F1
        gbc.setState(0x1d43, 0x2aab, 0x7000, 0x5c6e, 0x25bb, 0x42c1, 0x0, 0x1);
        gbc.writeMem(0x1d43, { 0x2c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2aab, gbc.sp());
        EXPECT(0x1d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00F2
        gbc.setState(0xa6c1, 0x98be, 0x5790, 0xe6fd, 0x22c3, 0x47ce, 0x1, 0x0);
        gbc.writeMem(0xa6c1, { 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x98be, gbc.sp());
        EXPECT(0xa6c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa6c1));
        // 2C 00F3
        gbc.setState(0xcce3, 0xebaa, 0x5ba0, 0xcec7, 0x3004, 0xf856, 0x0, 0x1);
        gbc.writeMem(0xcce3, { 0x2c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xebaa, gbc.sp());
        EXPECT(0xcce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcce3));
        // 2C 00F4
        gbc.setState(0xc8d5, 0x421c, 0x3890, 0x1128, 0xa0ab, 0xea6, 0x0, 0x0);
        gbc.writeMem(0xc8d5, { 0x2c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x421c, gbc.sp());
        EXPECT(0xc8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc8d5));
        // 2C 00F5
        gbc.setState(0x60, 0x1031, 0x3aa0, 0x4a02, 0xd06c, 0x65c8, 0x0, 0x0);
        gbc.writeMem(0x60, { 0x2c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1031, gbc.sp());
        EXPECT(0x61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00F7
        gbc.setState(0xa2d9, 0x1643, 0xbd80, 0xd5ad, 0x62fa, 0x37f2, 0x0, 0x0);
        gbc.writeMem(0xa2d9, { 0x2c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1643, gbc.sp());
        EXPECT(0xa2da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa2d9));
        // 2C 00F9
        gbc.setState(0x7a66, 0xc285, 0xf00, 0xa399, 0x54ec, 0xaf82, 0x0, 0x1);
        gbc.writeMem(0x7a66, { 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc285, gbc.sp());
        EXPECT(0x7a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 00FA
        gbc.setState(0x4985, 0x7e0d, 0x6ed0, 0xcd43, 0xb4c9, 0xd071, 0x1, 0x0);
        gbc.writeMem(0x4985, { 0x2c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7e0d, gbc.sp());
        EXPECT(0x4986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 00FB
        gbc.setState(0xd5c0, 0x7582, 0x4390, 0x9f6d, 0x389e, 0xf6e4, 0x1, 0x0);
        gbc.writeMem(0xd5c0, { 0x2c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7582, gbc.sp());
        EXPECT(0xd5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd5c0));
        // 2C 00FC
        gbc.setState(0xdb2a, 0xf6d9, 0x5590, 0xeb9c, 0x58fa, 0x641e, 0x1, 0x0);
        gbc.writeMem(0xdb2a, { 0x2c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf6d9, gbc.sp());
        EXPECT(0xdb2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdb2a));
        // 2C 00FD
        gbc.setState(0x9e32, 0xf465, 0xa050, 0xa3b6, 0x9323, 0x2d8, 0x1, 0x1);
        gbc.writeMem(0x9e32, { 0x2c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf465, gbc.sp());
        EXPECT(0x9e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9e32));
        // 2C 00FE
        gbc.setState(0xbd57, 0x71bc, 0x1930, 0x61ae, 0x328a, 0xdaaa, 0x1, 0x1);
        gbc.writeMem(0xbd57, { 0x2c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x71bc, gbc.sp());
        EXPECT(0xbd58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbd57));
        // 2C 00FF
        gbc.setState(0xef82, 0xcfe8, 0x6fc0, 0x77aa, 0x1d8f, 0x6646, 0x1, 0x0);
        gbc.writeMem(0xef82, { 0x2c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcfe8, gbc.sp());
        EXPECT(0xef83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xef82));
        // 2C 0100
        gbc.setState(0x3fa6, 0xb776, 0x1da0, 0x1a59, 0x71f9, 0xadc7, 0x1, 0x0);
        gbc.writeMem(0x3fa6, { 0x2c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb776, gbc.sp());
        EXPECT(0x3fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0102
        gbc.setState(0x712e, 0x2452, 0x7a10, 0x7217, 0x9849, 0x98d8, 0x0, 0x0);
        gbc.writeMem(0x712e, { 0x2c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2452, gbc.sp());
        EXPECT(0x712f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0103
        gbc.setState(0x99c8, 0x142e, 0xe4f0, 0x70ab, 0xf66, 0x1238, 0x0, 0x1);
        gbc.writeMem(0x99c8, { 0x2c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x142e, gbc.sp());
        EXPECT(0x99c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x99c8));
        // 2C 0104
        gbc.setState(0x66e, 0x77b, 0x1900, 0x1365, 0xa400, 0x426c, 0x0, 0x1);
        gbc.writeMem(0x66e, { 0x2c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x77b, gbc.sp());
        EXPECT(0x66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0105
        gbc.setState(0x94de, 0xbabc, 0xabd0, 0xb04e, 0xe8a7, 0x712c, 0x1, 0x1);
        gbc.writeMem(0x94de, { 0x2c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbabc, gbc.sp());
        EXPECT(0x94df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x94de));
        // 2C 0106
        gbc.setState(0xdb79, 0x70a6, 0xe3a0, 0x5d76, 0xac4, 0x5106, 0x1, 0x1);
        gbc.writeMem(0xdb79, { 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x70a6, gbc.sp());
        EXPECT(0xdb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdb79));
        // 2C 0107
        gbc.setState(0x88e5, 0x5b66, 0x22b0, 0x8331, 0xf794, 0xab92, 0x1, 0x1);
        gbc.writeMem(0x88e5, { 0x2c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5b66, gbc.sp());
        EXPECT(0x88e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x88e5));
        // 2C 0108
        gbc.setState(0x7784, 0x9f43, 0xfbe0, 0x9e74, 0xaf00, 0xe87e, 0x0, 0x0);
        gbc.writeMem(0x7784, { 0x2c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9f43, gbc.sp());
        EXPECT(0x7785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0109
        gbc.setState(0x213b, 0x61f5, 0x5ff0, 0x1a83, 0x7bf0, 0x5918, 0x0, 0x0);
        gbc.writeMem(0x213b, { 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x61f5, gbc.sp());
        EXPECT(0x213c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 010A
        gbc.setState(0x3110, 0xdc62, 0xdb50, 0x2b23, 0x8f6e, 0x4eb6, 0x0, 0x1);
        gbc.writeMem(0x3110, { 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdc62, gbc.sp());
        EXPECT(0x3111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 010B
        gbc.setState(0xeaaf, 0x49f5, 0xea80, 0x9abd, 0x75af, 0xafdb, 0x1, 0x0);
        gbc.writeMem(0xeaaf, { 0x2c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x49f5, gbc.sp());
        EXPECT(0xeab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeaaf));
        // 2C 010C
        gbc.setState(0xa793, 0x16ae, 0x9ce0, 0x63ee, 0xb564, 0xf314, 0x1, 0x0);
        gbc.writeMem(0xa793, { 0x2c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x16ae, gbc.sp());
        EXPECT(0xa794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa793));
        // 2C 010D
        gbc.setState(0xf99, 0xd42, 0xd500, 0x464, 0x601c, 0x7f60, 0x0, 0x0);
        gbc.writeMem(0xf99, { 0x2c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd42, gbc.sp());
        EXPECT(0xf9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 010E
        gbc.setState(0x69ee, 0xa0fb, 0x5940, 0x22a9, 0xf03d, 0x131e, 0x0, 0x1);
        gbc.writeMem(0x69ee, { 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa0fb, gbc.sp());
        EXPECT(0x69ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 010F
        gbc.setState(0x5d7d, 0x3ce7, 0x8000, 0x66fc, 0x2209, 0x193b, 0x0, 0x1);
        gbc.writeMem(0x5d7d, { 0x2c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3ce7, gbc.sp());
        EXPECT(0x5d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0110
        gbc.setState(0xe420, 0x6ef6, 0xa020, 0x6d5b, 0x128b, 0xd88c, 0x0, 0x1);
        gbc.writeMem(0xe420, { 0x2c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6ef6, gbc.sp());
        EXPECT(0xe421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe420));
        // 2C 0111
        gbc.setState(0x8a1f, 0x9e75, 0xd850, 0x4984, 0x7f0e, 0x36d9, 0x1, 0x1);
        gbc.writeMem(0x8a1f, { 0x2c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9e75, gbc.sp());
        EXPECT(0x8a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8a1f));
        // 2C 0112
        gbc.setState(0x679b, 0x25aa, 0x700, 0x6a52, 0x48c, 0x3392, 0x0, 0x0);
        gbc.writeMem(0x679b, { 0x2c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x25aa, gbc.sp());
        EXPECT(0x679c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0113
        gbc.setState(0xe9f3, 0x7f92, 0x9d60, 0x6132, 0x1ba8, 0x9ba0, 0x0, 0x1);
        gbc.writeMem(0xe9f3, { 0x2c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7f92, gbc.sp());
        EXPECT(0xe9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe9f3));
        // 2C 0114
        gbc.setState(0x57be, 0x58, 0xb920, 0xb310, 0xe75d, 0xfe8e, 0x1, 0x0);
        gbc.writeMem(0x57be, { 0x2c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x58, gbc.sp());
        EXPECT(0x57bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0115
        gbc.setState(0x154, 0x4297, 0x91d0, 0xb604, 0x4c1d, 0x89d8, 0x1, 0x0);
        gbc.writeMem(0x154, { 0x2c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4297, gbc.sp());
        EXPECT(0x155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0116
        gbc.setState(0x1963, 0x46e7, 0xc120, 0x2056, 0x2814, 0x7f16, 0x1, 0x0);
        gbc.writeMem(0x1963, { 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x46e7, gbc.sp());
        EXPECT(0x1964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0117
        gbc.setState(0xe386, 0x891b, 0x9dd0, 0xf35a, 0xad38, 0x43bb, 0x0, 0x0);
        gbc.writeMem(0xe386, { 0x2c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x891b, gbc.sp());
        EXPECT(0xe387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe386));
        // 2C 0118
        gbc.setState(0x71ca, 0x110f, 0x99e0, 0x3c53, 0xca31, 0xc335, 0x1, 0x1);
        gbc.writeMem(0x71ca, { 0x2c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x110f, gbc.sp());
        EXPECT(0x71cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0119
        gbc.setState(0xc6eb, 0x2535, 0xe690, 0xad59, 0xdc8, 0x48fb, 0x0, 0x1);
        gbc.writeMem(0xc6eb, { 0x2c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2535, gbc.sp());
        EXPECT(0xc6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc6eb));
        // 2C 011A
        gbc.setState(0xd767, 0xf2d4, 0xc950, 0x7df1, 0xde30, 0xe337, 0x1, 0x1);
        gbc.writeMem(0xd767, { 0x2c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf2d4, gbc.sp());
        EXPECT(0xd768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd767));
        // 2C 011B
        gbc.setState(0x7ff2, 0x6638, 0x40c0, 0xa27a, 0x54df, 0xe65d, 0x1, 0x1);
        gbc.writeMem(0x7ff2, { 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6638, gbc.sp());
        EXPECT(0x7ff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 011C
        gbc.setState(0x44e4, 0xdd21, 0x3ae0, 0x2abe, 0x90db, 0xfd9, 0x0, 0x1);
        gbc.writeMem(0x44e4, { 0x2c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdd21, gbc.sp());
        EXPECT(0x44e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 011D
        gbc.setState(0x4757, 0x232b, 0x1700, 0x800b, 0xa2f7, 0x20af, 0x0, 0x1);
        gbc.writeMem(0x4757, { 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x232b, gbc.sp());
        EXPECT(0x4758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 011E
        gbc.setState(0x36b0, 0x4298, 0xcfe0, 0xd860, 0x42a8, 0xa659, 0x1, 0x0);
        gbc.writeMem(0x36b0, { 0x2c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4298, gbc.sp());
        EXPECT(0x36b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 011F
        gbc.setState(0xeaa9, 0x14ae, 0x46a0, 0xa6d0, 0xbefa, 0x5d87, 0x1, 0x0);
        gbc.writeMem(0xeaa9, { 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x14ae, gbc.sp());
        EXPECT(0xeaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeaa9));
        // 2C 0120
        gbc.setState(0xb972, 0x51d9, 0x61a0, 0xf5ee, 0x34ef, 0x119d, 0x1, 0x0);
        gbc.writeMem(0xb972, { 0x2c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x51d9, gbc.sp());
        EXPECT(0xb973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb972));
        // 2C 0121
        gbc.setState(0xc3f0, 0x99b3, 0x15d0, 0x56ee, 0x7e24, 0x969c, 0x1, 0x0);
        gbc.writeMem(0xc3f0, { 0x2c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x99b3, gbc.sp());
        EXPECT(0xc3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc3f0));
        // 2C 0122
        gbc.setState(0x9491, 0xd0bb, 0x17f0, 0x37a1, 0xea66, 0xe040, 0x0, 0x0);
        gbc.writeMem(0x9491, { 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd0bb, gbc.sp());
        EXPECT(0x9492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9491));
        // 2C 0124
        gbc.setState(0x7393, 0x2d6b, 0xc770, 0xe2b6, 0x5168, 0x92b0, 0x1, 0x0);
        gbc.writeMem(0x7393, { 0x2c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2d6b, gbc.sp());
        EXPECT(0x7394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0125
        gbc.setState(0x3c6b, 0xc604, 0x5770, 0x3dbc, 0x6ab9, 0xe6bc, 0x0, 0x0);
        gbc.writeMem(0x3c6b, { 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc604, gbc.sp());
        EXPECT(0x3c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0126
        gbc.setState(0x42b, 0xb03e, 0x8c90, 0xa2e6, 0x214c, 0x9085, 0x0, 0x1);
        gbc.writeMem(0x42b, { 0x2c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb03e, gbc.sp());
        EXPECT(0x42c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0127
        gbc.setState(0x5e88, 0xa78, 0xc0d0, 0xa6d, 0x6d, 0x8314, 0x1, 0x0);
        gbc.writeMem(0x5e88, { 0x2c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa78, gbc.sp());
        EXPECT(0x5e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0128
        gbc.setState(0x867d, 0x804b, 0x9050, 0x3c62, 0x465c, 0x95d7, 0x0, 0x0);
        gbc.writeMem(0x867d, { 0x2c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x804b, gbc.sp());
        EXPECT(0x867e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x867d));
        // 2C 0129
        gbc.setState(0x7e2d, 0xdb8f, 0x8fc0, 0x93dd, 0xe942, 0x99f3, 0x1, 0x0);
        gbc.writeMem(0x7e2d, { 0x2c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdb8f, gbc.sp());
        EXPECT(0x7e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 012A
        gbc.setState(0xebd8, 0xca51, 0x5e70, 0xa747, 0x6456, 0x7f9f, 0x1, 0x1);
        gbc.writeMem(0xebd8, { 0x2c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xca51, gbc.sp());
        EXPECT(0xebd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xebd8));
        // 2C 012B
        gbc.setState(0x88bd, 0x2ac, 0x72d0, 0x9c2a, 0xf855, 0x4b30, 0x0, 0x0);
        gbc.writeMem(0x88bd, { 0x2c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2ac, gbc.sp());
        EXPECT(0x88be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x88bd));
        // 2C 012C
        gbc.setState(0x1a17, 0xe73, 0xa0c0, 0xeb64, 0xc924, 0x4293, 0x1, 0x1);
        gbc.writeMem(0x1a17, { 0x2c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe73, gbc.sp());
        EXPECT(0x1a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 012D
        gbc.setState(0x7c23, 0x58fa, 0xdf60, 0xb6ee, 0x7b43, 0xe282, 0x1, 0x0);
        gbc.writeMem(0x7c23, { 0x2c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x58fa, gbc.sp());
        EXPECT(0x7c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 012E
        gbc.setState(0x952c, 0x8029, 0xc070, 0x4897, 0x9421, 0x26d3, 0x1, 0x0);
        gbc.writeMem(0x952c, { 0x2c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8029, gbc.sp());
        EXPECT(0x952d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x952c));
        // 2C 012F
        gbc.setState(0xe60e, 0xc88f, 0xb740, 0x2e87, 0x9c95, 0xc491, 0x1, 0x0);
        gbc.writeMem(0xe60e, { 0x2c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc88f, gbc.sp());
        EXPECT(0xe60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe60e));
        // 2C 0130
        gbc.setState(0x221b, 0xf6dd, 0xb400, 0x866c, 0xdeb8, 0xa210, 0x0, 0x1);
        gbc.writeMem(0x221b, { 0x2c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf6dd, gbc.sp());
        EXPECT(0x221c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0131
        gbc.setState(0x9133, 0x5470, 0x800, 0x8a37, 0x8e68, 0xe070, 0x1, 0x1);
        gbc.writeMem(0x9133, { 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5470, gbc.sp());
        EXPECT(0x9134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9133));
        // 2C 0132
        gbc.setState(0x4e8a, 0xf98b, 0x9760, 0x445, 0xbe2b, 0xf234, 0x0, 0x1);
        gbc.writeMem(0x4e8a, { 0x2c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf98b, gbc.sp());
        EXPECT(0x4e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0133
        gbc.setState(0xadbe, 0xe33b, 0x5960, 0xca1e, 0x77f2, 0xc4fa, 0x1, 0x1);
        gbc.writeMem(0xadbe, { 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe33b, gbc.sp());
        EXPECT(0xadbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xadbe));
        // 2C 0134
        gbc.setState(0x7975, 0x1135, 0x6950, 0x72f9, 0x7a12, 0xcf05, 0x0, 0x1);
        gbc.writeMem(0x7975, { 0x2c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1135, gbc.sp());
        EXPECT(0x7976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0135
        gbc.setState(0xbdb5, 0xbe78, 0x89b0, 0x34e1, 0xe87c, 0xd3a5, 0x0, 0x1);
        gbc.writeMem(0xbdb5, { 0x2c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbe78, gbc.sp());
        EXPECT(0xbdb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbdb5));
        // 2C 0136
        gbc.setState(0x72f6, 0x157c, 0xe970, 0x4bd4, 0x3c43, 0xc6c1, 0x1, 0x0);
        gbc.writeMem(0x72f6, { 0x2c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x157c, gbc.sp());
        EXPECT(0x72f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0137
        gbc.setState(0xe784, 0xb792, 0x1130, 0x48, 0xc122, 0x36e5, 0x1, 0x0);
        gbc.writeMem(0xe784, { 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb792, gbc.sp());
        EXPECT(0xe785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe784));
        // 2C 0138
        gbc.setState(0xa1c5, 0x5cc3, 0xf1d0, 0x42e1, 0x5ed9, 0x866f, 0x1, 0x0);
        gbc.writeMem(0xa1c5, { 0x2c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5cc3, gbc.sp());
        EXPECT(0xa1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa1c5));
        // 2C 0139
        gbc.setState(0x6974, 0x49c6, 0x76f0, 0x4cae, 0x54f1, 0x4ac2, 0x0, 0x0);
        gbc.writeMem(0x6974, { 0x2c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x49c6, gbc.sp());
        EXPECT(0x6975, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 013A
        gbc.setState(0x7177, 0x1c49, 0xc630, 0x871e, 0xc1e0, 0xc3f5, 0x1, 0x0);
        gbc.writeMem(0x7177, { 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1c49, gbc.sp());
        EXPECT(0x7178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 013C
        gbc.setState(0xcf6c, 0x9735, 0x5db0, 0xe9fd, 0x3a1c, 0xd5c8, 0x0, 0x0);
        gbc.writeMem(0xcf6c, { 0x2c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9735, gbc.sp());
        EXPECT(0xcf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcf6c));
        // 2C 013D
        gbc.setState(0x3985, 0x945b, 0xc830, 0x8ae, 0xee1, 0x1d0c, 0x1, 0x0);
        gbc.writeMem(0x3985, { 0x2c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x945b, gbc.sp());
        EXPECT(0x3986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 013E
        gbc.setState(0x2038, 0x67bb, 0xba00, 0xaaaa, 0x25b1, 0xf1f, 0x0, 0x0);
        gbc.writeMem(0x2038, { 0x2c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x67bb, gbc.sp());
        EXPECT(0x2039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 013F
        gbc.setState(0x5a78, 0xef1a, 0x6480, 0x697, 0x106a, 0x2717, 0x1, 0x1);
        gbc.writeMem(0x5a78, { 0x2c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xef1a, gbc.sp());
        EXPECT(0x5a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0140
        gbc.setState(0x3c07, 0x6e7b, 0x46e0, 0x8e60, 0x1154, 0xa3d0, 0x1, 0x0);
        gbc.writeMem(0x3c07, { 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6e7b, gbc.sp());
        EXPECT(0x3c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0141
        gbc.setState(0xafb6, 0x998a, 0x80, 0xd7d7, 0xe75a, 0xa7db, 0x1, 0x0);
        gbc.writeMem(0xafb6, { 0x2c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x998a, gbc.sp());
        EXPECT(0xafb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xafb6));
        // 2C 0142
        gbc.setState(0xd4d8, 0x8a20, 0x4050, 0x5ff6, 0xcfff, 0xfb4b, 0x1, 0x0);
        gbc.writeMem(0xd4d8, { 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8a20, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd4d8));
        // 2C 0143
        gbc.setState(0x7672, 0x9908, 0x7300, 0xda42, 0xf1e0, 0xdf90, 0x1, 0x0);
        gbc.writeMem(0x7672, { 0x2c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9908, gbc.sp());
        EXPECT(0x7673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0144
        gbc.setState(0x5ee9, 0xeee3, 0x3fa0, 0x7726, 0x22ef, 0x2d2e, 0x0, 0x1);
        gbc.writeMem(0x5ee9, { 0x2c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xeee3, gbc.sp());
        EXPECT(0x5eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0145
        gbc.setState(0xd206, 0x9fc5, 0x490, 0xb193, 0x51cb, 0xbac9, 0x0, 0x0);
        gbc.writeMem(0xd206, { 0x2c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9fc5, gbc.sp());
        EXPECT(0xd207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd206));
        // 2C 0146
        gbc.setState(0xa6c4, 0xa1d9, 0xd320, 0x64bb, 0x64b2, 0x8646, 0x1, 0x1);
        gbc.writeMem(0xa6c4, { 0x2c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa1d9, gbc.sp());
        EXPECT(0xa6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa6c4));
        // 2C 0147
        gbc.setState(0xdaa6, 0x1b47, 0xda10, 0xf746, 0x48d5, 0xb4db, 0x0, 0x0);
        gbc.writeMem(0xdaa6, { 0x2c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1b47, gbc.sp());
        EXPECT(0xdaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdaa6));
        // 2C 0148
        gbc.setState(0x2844, 0x1acb, 0x7350, 0x78f3, 0x9a8a, 0xf868, 0x1, 0x1);
        gbc.writeMem(0x2844, { 0x2c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1acb, gbc.sp());
        EXPECT(0x2845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0149
        gbc.setState(0xcd72, 0x3e4c, 0x46f0, 0x7b1b, 0xc385, 0x2015, 0x1, 0x0);
        gbc.writeMem(0xcd72, { 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3e4c, gbc.sp());
        EXPECT(0xcd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcd72));
        // 2C 014A
        gbc.setState(0x8da1, 0x58d5, 0xa530, 0x9757, 0xd89, 0x60bf, 0x0, 0x1);
        gbc.writeMem(0x8da1, { 0x2c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x58d5, gbc.sp());
        EXPECT(0x8da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8da1));
        // 2C 014B
        gbc.setState(0xa80e, 0x8497, 0x9c0, 0x2c01, 0x854a, 0x2d44, 0x1, 0x0);
        gbc.writeMem(0xa80e, { 0x2c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8497, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa80e));
        // 2C 014C
        gbc.setState(0xc137, 0x631b, 0xc550, 0xcb04, 0xbc39, 0x1f96, 0x0, 0x0);
        gbc.writeMem(0xc137, { 0x2c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x631b, gbc.sp());
        EXPECT(0xc138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc137));
        // 2C 014D
        gbc.setState(0x336a, 0xb9ef, 0x4780, 0xf3bf, 0x2b9, 0xd447, 0x1, 0x1);
        gbc.writeMem(0x336a, { 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb9ef, gbc.sp());
        EXPECT(0x336b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 014E
        gbc.setState(0x32a8, 0x3a45, 0x43a0, 0x820e, 0x6b47, 0x6d4b, 0x0, 0x0);
        gbc.writeMem(0x32a8, { 0x2c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3a45, gbc.sp());
        EXPECT(0x32a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 014F
        gbc.setState(0x5c3b, 0x774c, 0xf420, 0xf2d5, 0x1af7, 0xb54e, 0x0, 0x1);
        gbc.writeMem(0x5c3b, { 0x2c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x774c, gbc.sp());
        EXPECT(0x5c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0150
        gbc.setState(0x46e5, 0xc226, 0x5400, 0x6e11, 0x42cd, 0x990b, 0x0, 0x1);
        gbc.writeMem(0x46e5, { 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc226, gbc.sp());
        EXPECT(0x46e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0151
        gbc.setState(0xd276, 0x6c7c, 0x9120, 0xe91d, 0x169, 0xece5, 0x0, 0x0);
        gbc.writeMem(0xd276, { 0x2c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6c7c, gbc.sp());
        EXPECT(0xd277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd276));
        // 2C 0152
        gbc.setState(0xe3b3, 0x720b, 0xb620, 0x7143, 0x84a7, 0x2cfc, 0x0, 0x1);
        gbc.writeMem(0xe3b3, { 0x2c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x720b, gbc.sp());
        EXPECT(0xe3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe3b3));
        // 2C 0154
        gbc.setState(0xe394, 0x98e3, 0xf050, 0x778f, 0xfdf6, 0x6ea2, 0x0, 0x1);
        gbc.writeMem(0xe394, { 0x2c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x98e3, gbc.sp());
        EXPECT(0xe395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe394));
        // 2C 0155
        gbc.setState(0x2729, 0x7a1a, 0xbc10, 0x5558, 0x8827, 0x7109, 0x0, 0x1);
        gbc.writeMem(0x2729, { 0x2c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7a1a, gbc.sp());
        EXPECT(0x272a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0156
        gbc.setState(0xc3fd, 0x328d, 0x8330, 0xf516, 0x4eea, 0xf5ef, 0x1, 0x0);
        gbc.writeMem(0xc3fd, { 0x2c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x328d, gbc.sp());
        EXPECT(0xc3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc3fd));
        // 2C 0157
        gbc.setState(0x71f0, 0x73f0, 0xe550, 0xd0e8, 0xa9ec, 0x2e94, 0x1, 0x1);
        gbc.writeMem(0x71f0, { 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x73f0, gbc.sp());
        EXPECT(0x71f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0158
        gbc.setState(0x30af, 0x1a87, 0x1250, 0x4c34, 0xd281, 0x9fb7, 0x1, 0x0);
        gbc.writeMem(0x30af, { 0x2c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1a87, gbc.sp());
        EXPECT(0x30b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0159
        gbc.setState(0x7e76, 0xb0e3, 0x40a0, 0x3b4c, 0x3d25, 0xab4f, 0x1, 0x1);
        gbc.writeMem(0x7e76, { 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb0e3, gbc.sp());
        EXPECT(0x7e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 015A
        gbc.setState(0x62eb, 0xd9a1, 0xcde0, 0xbebb, 0x9d09, 0xe1bf, 0x0, 0x1);
        gbc.writeMem(0x62eb, { 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd9a1, gbc.sp());
        EXPECT(0x62ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 015B
        gbc.setState(0xd471, 0x8dfd, 0xab80, 0x3e18, 0x43c9, 0xc567, 0x0, 0x0);
        gbc.writeMem(0xd471, { 0x2c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8dfd, gbc.sp());
        EXPECT(0xd472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd471));
        // 2C 015C
        gbc.setState(0xe64f, 0x1baf, 0xcc0, 0x6bec, 0x14c2, 0xb2ce, 0x1, 0x1);
        gbc.writeMem(0xe64f, { 0x2c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1baf, gbc.sp());
        EXPECT(0xe650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe64f));
        // 2C 015D
        gbc.setState(0x29ed, 0x3e51, 0xa1a0, 0xfb6c, 0x689b, 0xa2d6, 0x1, 0x0);
        gbc.writeMem(0x29ed, { 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3e51, gbc.sp());
        EXPECT(0x29ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 015E
        gbc.setState(0x64ea, 0x67f9, 0x8ae0, 0x4e46, 0x239b, 0xbedd, 0x1, 0x0);
        gbc.writeMem(0x64ea, { 0x2c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x67f9, gbc.sp());
        EXPECT(0x64eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 015F
        gbc.setState(0xae55, 0x4065, 0xe270, 0x62fb, 0x9e95, 0xabfb, 0x1, 0x0);
        gbc.writeMem(0xae55, { 0x2c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4065, gbc.sp());
        EXPECT(0xae56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xae55));
        // 2C 0160
        gbc.setState(0x3fb1, 0xc929, 0x5f40, 0x4f35, 0x2c43, 0xf650, 0x0, 0x0);
        gbc.writeMem(0x3fb1, { 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc929, gbc.sp());
        EXPECT(0x3fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0161
        gbc.setState(0x96a3, 0x6853, 0x6e40, 0x4b42, 0x89e5, 0xabc2, 0x1, 0x1);
        gbc.writeMem(0x96a3, { 0x2c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6853, gbc.sp());
        EXPECT(0x96a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x96a3));
        // 2C 0162
        gbc.setState(0xb58, 0x2156, 0xcde0, 0x1216, 0xefea, 0xd812, 0x0, 0x0);
        gbc.writeMem(0xb58, { 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2156, gbc.sp());
        EXPECT(0xb59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0163
        gbc.setState(0xc692, 0x194d, 0x5170, 0x5a62, 0x8f5c, 0x55df, 0x1, 0x1);
        gbc.writeMem(0xc692, { 0x2c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x194d, gbc.sp());
        EXPECT(0xc693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc692));
        // 2C 0164
        gbc.setState(0x3938, 0xed06, 0x5e00, 0x5dde, 0xce07, 0x6fd1, 0x0, 0x1);
        gbc.writeMem(0x3938, { 0x2c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xed06, gbc.sp());
        EXPECT(0x3939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0165
        gbc.setState(0xe92e, 0xe205, 0x11e0, 0xc12e, 0x62b0, 0x31a4, 0x1, 0x0);
        gbc.writeMem(0xe92e, { 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe205, gbc.sp());
        EXPECT(0xe92f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe92e));
        // 2C 0166
        gbc.setState(0x61e2, 0xc48b, 0x2360, 0x8616, 0x3fcd, 0x1df5, 0x0, 0x0);
        gbc.writeMem(0x61e2, { 0x2c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc48b, gbc.sp());
        EXPECT(0x61e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0167
        gbc.setState(0x6d40, 0x80a3, 0xddd0, 0xa728, 0x4581, 0xe5e7, 0x0, 0x0);
        gbc.writeMem(0x6d40, { 0x2c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x80a3, gbc.sp());
        EXPECT(0x6d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0168
        gbc.setState(0x1bb, 0x405a, 0x9a30, 0xca60, 0x7d29, 0xb68b, 0x1, 0x1);
        gbc.writeMem(0x1bb, { 0x2c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x405a, gbc.sp());
        EXPECT(0x1bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0169
        gbc.setState(0xee35, 0x35bd, 0x9b10, 0xe850, 0x4173, 0x5b9f, 0x1, 0x1);
        gbc.writeMem(0xee35, { 0x2c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x35bd, gbc.sp());
        EXPECT(0xee36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xee35));
        // 2C 016B
        gbc.setState(0x6db7, 0xa99b, 0xce30, 0xe87a, 0x4f79, 0x28f7, 0x0, 0x0);
        gbc.writeMem(0x6db7, { 0x2c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa99b, gbc.sp());
        EXPECT(0x6db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 016C
        gbc.setState(0xbb6c, 0xa75b, 0x1980, 0x1745, 0x1bc8, 0xa1c6, 0x1, 0x1);
        gbc.writeMem(0xbb6c, { 0x2c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa75b, gbc.sp());
        EXPECT(0xbb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbb6c));
        // 2C 016D
        gbc.setState(0x4378, 0xa3a5, 0x24d0, 0x8ee7, 0xe5f5, 0xb74b, 0x1, 0x0);
        gbc.writeMem(0x4378, { 0x2c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa3a5, gbc.sp());
        EXPECT(0x4379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 016E
        gbc.setState(0x567b, 0x1f58, 0x7ec0, 0x58bf, 0xf127, 0x1815, 0x1, 0x0);
        gbc.writeMem(0x567b, { 0x2c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1f58, gbc.sp());
        EXPECT(0x567c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 016F
        gbc.setState(0x1f40, 0xb65c, 0xefd0, 0xaa60, 0x115, 0xa2a2, 0x1, 0x1);
        gbc.writeMem(0x1f40, { 0x2c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb65c, gbc.sp());
        EXPECT(0x1f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0170
        gbc.setState(0x1a19, 0x3d9e, 0xd30, 0x6c2c, 0xce82, 0x4bf8, 0x1, 0x1);
        gbc.writeMem(0x1a19, { 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3d9e, gbc.sp());
        EXPECT(0x1a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0171
        gbc.setState(0x7723, 0x1624, 0x7cb0, 0x7c85, 0x21e3, 0x4e01, 0x1, 0x0);
        gbc.writeMem(0x7723, { 0x2c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1624, gbc.sp());
        EXPECT(0x7724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0172
        gbc.setState(0x1328, 0xb4d2, 0xa40, 0x9f1d, 0x7f5b, 0x5f4f, 0x0, 0x0);
        gbc.writeMem(0x1328, { 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb4d2, gbc.sp());
        EXPECT(0x1329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0173
        gbc.setState(0x4bac, 0x7e6a, 0x1760, 0xfde8, 0xadc4, 0x1352, 0x0, 0x0);
        gbc.writeMem(0x4bac, { 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7e6a, gbc.sp());
        EXPECT(0x4bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0174
        gbc.setState(0x46b2, 0xb53a, 0x4960, 0x9829, 0x64a7, 0xecbb, 0x1, 0x1);
        gbc.writeMem(0x46b2, { 0x2c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb53a, gbc.sp());
        EXPECT(0x46b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0175
        gbc.setState(0xc18b, 0xc998, 0xd8e0, 0x3d40, 0x2a9b, 0x5d2c, 0x1, 0x0);
        gbc.writeMem(0xc18b, { 0x2c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc998, gbc.sp());
        EXPECT(0xc18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc18b));
        // 2C 0176
        gbc.setState(0x15e0, 0x4db1, 0x4580, 0x66c6, 0x410e, 0xec81, 0x1, 0x0);
        gbc.writeMem(0x15e0, { 0x2c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4db1, gbc.sp());
        EXPECT(0x15e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0177
        gbc.setState(0x6e48, 0xb101, 0x14a0, 0x5f51, 0xfc93, 0xef74, 0x0, 0x0);
        gbc.writeMem(0x6e48, { 0x2c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb101, gbc.sp());
        EXPECT(0x6e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0178
        gbc.setState(0x6bac, 0xfb8, 0xb0a0, 0xf71c, 0x5187, 0x76a3, 0x0, 0x0);
        gbc.writeMem(0x6bac, { 0x2c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xfb8, gbc.sp());
        EXPECT(0x6bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0179
        gbc.setState(0x8cd3, 0x7133, 0xe500, 0xed19, 0xfbff, 0x7e7b, 0x0, 0x0);
        gbc.writeMem(0x8cd3, { 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7133, gbc.sp());
        EXPECT(0x8cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8cd3));
        // 2C 017A
        gbc.setState(0xc611, 0x3a8b, 0x58b0, 0x1f08, 0x3989, 0x2fb2, 0x1, 0x1);
        gbc.writeMem(0xc611, { 0x2c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3a8b, gbc.sp());
        EXPECT(0xc612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc611));
        // 2C 017B
        gbc.setState(0xc94a, 0xfe3c, 0x5a20, 0x3c90, 0xc794, 0x31eb, 0x1, 0x1);
        gbc.writeMem(0xc94a, { 0x2c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfe3c, gbc.sp());
        EXPECT(0xc94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc94a));
        // 2C 017C
        gbc.setState(0x19db, 0xf337, 0xe850, 0xea9a, 0x11fe, 0x68d6, 0x0, 0x1);
        gbc.writeMem(0x19db, { 0x2c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf337, gbc.sp());
        EXPECT(0x19dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 017D
        gbc.setState(0xc300, 0x34b5, 0xa0c0, 0x6792, 0x37b4, 0x42dc, 0x1, 0x0);
        gbc.writeMem(0xc300, { 0x2c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x34b5, gbc.sp());
        EXPECT(0xc301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc300));
        // 2C 017F
        gbc.setState(0x3c7, 0x2867, 0x5b0, 0xd453, 0x8570, 0x9313, 0x1, 0x1);
        gbc.writeMem(0x3c7, { 0x2c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2867, gbc.sp());
        EXPECT(0x3c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0180
        gbc.setState(0xdefe, 0xf374, 0xa4a0, 0x5bbe, 0xec68, 0xbb58, 0x1, 0x0);
        gbc.writeMem(0xdefe, { 0x2c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf374, gbc.sp());
        EXPECT(0xdeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdefe));
        // 2C 0181
        gbc.setState(0x84dc, 0xbdda, 0x3b60, 0xecc7, 0x3b0d, 0xcf92, 0x0, 0x0);
        gbc.writeMem(0x84dc, { 0x2c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbdda, gbc.sp());
        EXPECT(0x84dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x84dc));
        // 2C 0182
        gbc.setState(0x19b9, 0xc8fe, 0x9f10, 0x653, 0xcacb, 0x1cf1, 0x0, 0x1);
        gbc.writeMem(0x19b9, { 0x2c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc8fe, gbc.sp());
        EXPECT(0x19ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0183
        gbc.setState(0x7e51, 0x92ac, 0x1300, 0x3e50, 0xe27, 0xaeb3, 0x1, 0x0);
        gbc.writeMem(0x7e51, { 0x2c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x92ac, gbc.sp());
        EXPECT(0x7e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0184
        gbc.setState(0xcbd0, 0xa46e, 0xb590, 0x8273, 0x8882, 0x4194, 0x0, 0x1);
        gbc.writeMem(0xcbd0, { 0x2c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa46e, gbc.sp());
        EXPECT(0xcbd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcbd0));
        // 2C 0185
        gbc.setState(0x96f6, 0xddae, 0x6400, 0xc7ae, 0xdb86, 0x6ef8, 0x1, 0x1);
        gbc.writeMem(0x96f6, { 0x2c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xddae, gbc.sp());
        EXPECT(0x96f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x96f6));
        // 2C 0187
        gbc.setState(0x2a60, 0x6aed, 0x4cd0, 0xcd99, 0x376, 0x8522, 0x1, 0x0);
        gbc.writeMem(0x2a60, { 0x2c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6aed, gbc.sp());
        EXPECT(0x2a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0188
        gbc.setState(0x94bf, 0xda6e, 0xf380, 0x9f2a, 0xc71c, 0x5503, 0x1, 0x0);
        gbc.writeMem(0x94bf, { 0x2c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xda6e, gbc.sp());
        EXPECT(0x94c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x94bf));
        // 2C 0189
        gbc.setState(0x3e77, 0xb9f9, 0x1c30, 0xb645, 0xc5e2, 0x3238, 0x0, 0x0);
        gbc.writeMem(0x3e77, { 0x2c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb9f9, gbc.sp());
        EXPECT(0x3e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 018A
        gbc.setState(0x602d, 0xc94c, 0xcac0, 0x1a9d, 0x375, 0x5988, 0x0, 0x0);
        gbc.writeMem(0x602d, { 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc94c, gbc.sp());
        EXPECT(0x602e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 018B
        gbc.setState(0x47cb, 0xad8f, 0x2830, 0x3fd6, 0xa65e, 0xe226, 0x1, 0x0);
        gbc.writeMem(0x47cb, { 0x2c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xad8f, gbc.sp());
        EXPECT(0x47cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 018C
        gbc.setState(0x9b6a, 0xf6d5, 0x9440, 0xacda, 0x9d0d, 0x5eff, 0x0, 0x1);
        gbc.writeMem(0x9b6a, { 0x2c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf6d5, gbc.sp());
        EXPECT(0x9b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9b6a));
        // 2C 018D
        gbc.setState(0xba32, 0x7117, 0x5a90, 0x1d8e, 0xcd83, 0xc910, 0x1, 0x0);
        gbc.writeMem(0xba32, { 0x2c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7117, gbc.sp());
        EXPECT(0xba33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xba32));
        // 2C 018E
        gbc.setState(0x3fae, 0x5629, 0x9bf0, 0x3e58, 0xf783, 0xc1d3, 0x0, 0x1);
        gbc.writeMem(0x3fae, { 0x2c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5629, gbc.sp());
        EXPECT(0x3faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 018F
        gbc.setState(0xa82a, 0x4855, 0x3b40, 0xef1a, 0x2afc, 0xa3cf, 0x1, 0x0);
        gbc.writeMem(0xa82a, { 0x2c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4855, gbc.sp());
        EXPECT(0xa82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa82a));
        // 2C 0190
        gbc.setState(0xcafa, 0x62e2, 0xae30, 0x8046, 0xe938, 0xefe9, 0x0, 0x0);
        gbc.writeMem(0xcafa, { 0x2c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x62e2, gbc.sp());
        EXPECT(0xcafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcafa));
        // 2C 0191
        gbc.setState(0x2118, 0xf2b8, 0xcff0, 0x2593, 0xfaad, 0x24d1, 0x0, 0x0);
        gbc.writeMem(0x2118, { 0x2c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf2b8, gbc.sp());
        EXPECT(0x2119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0192
        gbc.setState(0x5c1e, 0xbf75, 0x9b80, 0xa165, 0xf686, 0x2fc6, 0x1, 0x0);
        gbc.writeMem(0x5c1e, { 0x2c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbf75, gbc.sp());
        EXPECT(0x5c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0193
        gbc.setState(0x1ed0, 0xb20d, 0xde0, 0x7daf, 0x5a5b, 0x64fe, 0x0, 0x1);
        gbc.writeMem(0x1ed0, { 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb20d, gbc.sp());
        EXPECT(0x1ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0194
        gbc.setState(0x5da5, 0x6166, 0x11e0, 0x4761, 0xf977, 0xa7c2, 0x0, 0x0);
        gbc.writeMem(0x5da5, { 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6166, gbc.sp());
        EXPECT(0x5da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0195
        gbc.setState(0x6923, 0x474c, 0x4510, 0x7600, 0x268b, 0x5a41, 0x1, 0x1);
        gbc.writeMem(0x6923, { 0x2c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x474c, gbc.sp());
        EXPECT(0x6924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0196
        gbc.setState(0xcb61, 0xf382, 0x4d80, 0x2d0b, 0x2983, 0xb81a, 0x0, 0x1);
        gbc.writeMem(0xcb61, { 0x2c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf382, gbc.sp());
        EXPECT(0xcb62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcb61));
        // 2C 0197
        gbc.setState(0x2860, 0xd040, 0x7780, 0x3ea4, 0xf276, 0xb778, 0x0, 0x0);
        gbc.writeMem(0x2860, { 0x2c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd040, gbc.sp());
        EXPECT(0x2861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0198
        gbc.setState(0xca2f, 0xab29, 0x8910, 0x6178, 0xc54c, 0x7fe8, 0x1, 0x0);
        gbc.writeMem(0xca2f, { 0x2c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xab29, gbc.sp());
        EXPECT(0xca30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xca2f));
        // 2C 0199
        gbc.setState(0x53bf, 0x428d, 0x6e00, 0x3775, 0xb9a2, 0xdbfb, 0x1, 0x0);
        gbc.writeMem(0x53bf, { 0x2c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x428d, gbc.sp());
        EXPECT(0x53c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 019A
        gbc.setState(0x790e, 0x1526, 0xb80, 0x92f9, 0xae32, 0x4b5f, 0x1, 0x0);
        gbc.writeMem(0x790e, { 0x2c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1526, gbc.sp());
        EXPECT(0x790f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 019B
        gbc.setState(0x32b3, 0x1fe1, 0xe390, 0x8fbd, 0xcdc7, 0x2419, 0x1, 0x0);
        gbc.writeMem(0x32b3, { 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1fe1, gbc.sp());
        EXPECT(0x32b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 019C
        gbc.setState(0x89d2, 0x2635, 0x5940, 0x2af, 0xe0c7, 0x5421, 0x1, 0x1);
        gbc.writeMem(0x89d2, { 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2635, gbc.sp());
        EXPECT(0x89d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x89d2));
        // 2C 019D
        gbc.setState(0x8e76, 0xe7d4, 0x16f0, 0xfbfb, 0x2447, 0xb882, 0x1, 0x1);
        gbc.writeMem(0x8e76, { 0x2c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe7d4, gbc.sp());
        EXPECT(0x8e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8e76));
        // 2C 019E
        gbc.setState(0x6d1f, 0x5871, 0x66a0, 0xe4c1, 0x998c, 0xdadd, 0x1, 0x0);
        gbc.writeMem(0x6d1f, { 0x2c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5871, gbc.sp());
        EXPECT(0x6d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 019F
        gbc.setState(0x5b66, 0xcf62, 0x8ea0, 0xbaba, 0x7d43, 0x31c, 0x0, 0x0);
        gbc.writeMem(0x5b66, { 0x2c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcf62, gbc.sp());
        EXPECT(0x5b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01A0
        gbc.setState(0xc6bb, 0x4a15, 0x25b0, 0xbbbc, 0x5129, 0xd4a3, 0x0, 0x1);
        gbc.writeMem(0xc6bb, { 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4a15, gbc.sp());
        EXPECT(0xc6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc6bb));
        // 2C 01A1
        gbc.setState(0xb865, 0xddef, 0x3be0, 0x4b68, 0xa630, 0x453f, 0x1, 0x1);
        gbc.writeMem(0xb865, { 0x2c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xddef, gbc.sp());
        EXPECT(0xb866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb865));
        // 2C 01A2
        gbc.setState(0xc44d, 0x4143, 0xaec0, 0xbdea, 0xe508, 0x58d, 0x1, 0x0);
        gbc.writeMem(0xc44d, { 0x2c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4143, gbc.sp());
        EXPECT(0xc44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc44d));
        // 2C 01A3
        gbc.setState(0xd491, 0xe109, 0x1290, 0xc3c9, 0x5515, 0x7a53, 0x1, 0x0);
        gbc.writeMem(0xd491, { 0x2c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe109, gbc.sp());
        EXPECT(0xd492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd491));
        // 2C 01A4
        gbc.setState(0xc1fb, 0x7b69, 0xe9c0, 0x92c9, 0xc96d, 0x18fe, 0x1, 0x1);
        gbc.writeMem(0xc1fb, { 0x2c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7b69, gbc.sp());
        EXPECT(0xc1fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc1fb));
        // 2C 01A6
        gbc.setState(0x8921, 0xee6b, 0x3ae0, 0xe39e, 0x798b, 0x228e, 0x0, 0x0);
        gbc.writeMem(0x8921, { 0x2c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xee6b, gbc.sp());
        EXPECT(0x8922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8921));
        // 2C 01A7
        gbc.setState(0x1411, 0x36a0, 0x7500, 0x9ce9, 0x654b, 0xd2ba, 0x0, 0x1);
        gbc.writeMem(0x1411, { 0x2c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x36a0, gbc.sp());
        EXPECT(0x1412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01A8
        gbc.setState(0x1c8d, 0x5c86, 0xea30, 0xb042, 0x37fd, 0x1c7b, 0x0, 0x1);
        gbc.writeMem(0x1c8d, { 0x2c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5c86, gbc.sp());
        EXPECT(0x1c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01A9
        gbc.setState(0x9cfd, 0x2af0, 0xa0a0, 0xb4dd, 0xfde8, 0x369d, 0x1, 0x1);
        gbc.writeMem(0x9cfd, { 0x2c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2af0, gbc.sp());
        EXPECT(0x9cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9cfd));
        // 2C 01AB
        gbc.setState(0xe5ba, 0x9f1a, 0xce90, 0xc07f, 0x34e6, 0x50b5, 0x0, 0x0);
        gbc.writeMem(0xe5ba, { 0x2c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9f1a, gbc.sp());
        EXPECT(0xe5bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe5ba));
        // 2C 01AD
        gbc.setState(0x7414, 0xdc92, 0x4830, 0x6dfb, 0x8108, 0x7599, 0x0, 0x1);
        gbc.writeMem(0x7414, { 0x2c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdc92, gbc.sp());
        EXPECT(0x7415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01AE
        gbc.setState(0xc37, 0x50f0, 0xb810, 0x3f06, 0x89bb, 0x4dff, 0x1, 0x0);
        gbc.writeMem(0xc37, { 0x2c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x50f0, gbc.sp());
        EXPECT(0xc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01AF
        gbc.setState(0x3776, 0x4613, 0x9b00, 0xcf8b, 0xb92b, 0x49f7, 0x1, 0x1);
        gbc.writeMem(0x3776, { 0x2c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4613, gbc.sp());
        EXPECT(0x3777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01B0
        gbc.setState(0x1ed4, 0x617, 0x4720, 0x96d2, 0xd72b, 0x83a4, 0x1, 0x1);
        gbc.writeMem(0x1ed4, { 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x617, gbc.sp());
        EXPECT(0x1ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01B1
        gbc.setState(0x8e7d, 0x9528, 0x3dd0, 0x3e18, 0x78e4, 0x2fe8, 0x1, 0x0);
        gbc.writeMem(0x8e7d, { 0x2c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9528, gbc.sp());
        EXPECT(0x8e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8e7d));
        // 2C 01B2
        gbc.setState(0xcbe0, 0x5f8c, 0x27f0, 0xb8ab, 0x9c38, 0x7235, 0x0, 0x1);
        gbc.writeMem(0xcbe0, { 0x2c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5f8c, gbc.sp());
        EXPECT(0xcbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcbe0));
        // 2C 01B3
        gbc.setState(0x3862, 0x5c08, 0x760, 0xfcff, 0x3d19, 0x1e68, 0x1, 0x0);
        gbc.writeMem(0x3862, { 0x2c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5c08, gbc.sp());
        EXPECT(0x3863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01B4
        gbc.setState(0x1e9d, 0x6cb9, 0x5590, 0x3b98, 0x3c9, 0xb22, 0x1, 0x1);
        gbc.writeMem(0x1e9d, { 0x2c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6cb9, gbc.sp());
        EXPECT(0x1e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01B5
        gbc.setState(0xaa62, 0x6d63, 0xe230, 0x2c5c, 0xe61, 0xd1bf, 0x1, 0x0);
        gbc.writeMem(0xaa62, { 0x2c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6d63, gbc.sp());
        EXPECT(0xaa63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xaa62));
        // 2C 01B6
        gbc.setState(0x1768, 0x4a14, 0xfcb0, 0xb2c9, 0xcfaf, 0xa487, 0x0, 0x1);
        gbc.writeMem(0x1768, { 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4a14, gbc.sp());
        EXPECT(0x1769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01B7
        gbc.setState(0xdd47, 0xc4eb, 0x6c90, 0xafb9, 0xc983, 0xd9e3, 0x1, 0x0);
        gbc.writeMem(0xdd47, { 0x2c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc4eb, gbc.sp());
        EXPECT(0xdd48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdd47));
        // 2C 01B8
        gbc.setState(0xc6d4, 0x94f, 0x38a0, 0xabb2, 0x8f36, 0xf414, 0x1, 0x1);
        gbc.writeMem(0xc6d4, { 0x2c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x94f, gbc.sp());
        EXPECT(0xc6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc6d4));
        // 2C 01B9
        gbc.setState(0xd8d8, 0x15a4, 0x6540, 0xaf03, 0x54d4, 0x6707, 0x0, 0x1);
        gbc.writeMem(0xd8d8, { 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x15a4, gbc.sp());
        EXPECT(0xd8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd8d8));
        // 2C 01BA
        gbc.setState(0x1511, 0xca34, 0xf760, 0xce02, 0xd1c3, 0x230e, 0x0, 0x1);
        gbc.writeMem(0x1511, { 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xca34, gbc.sp());
        EXPECT(0x1512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01BB
        gbc.setState(0x6896, 0xea67, 0xebd0, 0x8b41, 0xc2e1, 0xe97b, 0x1, 0x0);
        gbc.writeMem(0x6896, { 0x2c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xea67, gbc.sp());
        EXPECT(0x6897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01BC
        gbc.setState(0xf5d, 0xb4e7, 0xf0b0, 0xee9f, 0x8696, 0xa3df, 0x0, 0x1);
        gbc.writeMem(0xf5d, { 0x2c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb4e7, gbc.sp());
        EXPECT(0xf5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01BD
        gbc.setState(0x1234, 0xe09d, 0x8700, 0xa939, 0xc4a1, 0xc9e0, 0x0, 0x0);
        gbc.writeMem(0x1234, { 0x2c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe09d, gbc.sp());
        EXPECT(0x1235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01BE
        gbc.setState(0x8868, 0x3408, 0x2d80, 0xd1c6, 0x1503, 0xcd2, 0x1, 0x0);
        gbc.writeMem(0x8868, { 0x2c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3408, gbc.sp());
        EXPECT(0x8869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8868));
        // 2C 01BF
        gbc.setState(0x2e6d, 0xc3f2, 0x840, 0x992a, 0xb7be, 0xdee5, 0x0, 0x1);
        gbc.writeMem(0x2e6d, { 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc3f2, gbc.sp());
        EXPECT(0x2e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01C0
        gbc.setState(0xea4a, 0xa5fc, 0x2bf0, 0x9b18, 0x7a14, 0x33e7, 0x1, 0x0);
        gbc.writeMem(0xea4a, { 0x2c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa5fc, gbc.sp());
        EXPECT(0xea4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xea4a));
        // 2C 01C1
        gbc.setState(0xb8bb, 0xfa57, 0x1770, 0x63ab, 0x4b2e, 0x60de, 0x1, 0x1);
        gbc.writeMem(0xb8bb, { 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfa57, gbc.sp());
        EXPECT(0xb8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb8bb));
        // 2C 01C2
        gbc.setState(0x4852, 0x4dd1, 0xf260, 0x8746, 0xbf2d, 0x66de, 0x0, 0x0);
        gbc.writeMem(0x4852, { 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4dd1, gbc.sp());
        EXPECT(0x4853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01C3
        gbc.setState(0x16b8, 0x6525, 0xedc0, 0xcc26, 0x314a, 0x9627, 0x1, 0x1);
        gbc.writeMem(0x16b8, { 0x2c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6525, gbc.sp());
        EXPECT(0x16b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01C4
        gbc.setState(0x8b1b, 0x69c8, 0x1d40, 0x3984, 0x46f0, 0xffd8, 0x1, 0x0);
        gbc.writeMem(0x8b1b, { 0x2c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x69c8, gbc.sp());
        EXPECT(0x8b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8b1b));
        // 2C 01C5
        gbc.setState(0x1269, 0xa25f, 0x32c0, 0x5e15, 0x66b8, 0xf76a, 0x1, 0x0);
        gbc.writeMem(0x1269, { 0x2c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa25f, gbc.sp());
        EXPECT(0x126a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01C6
        gbc.setState(0x81c3, 0x5d6f, 0x9150, 0x5a60, 0x4c97, 0x2f32, 0x0, 0x0);
        gbc.writeMem(0x81c3, { 0x2c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5d6f, gbc.sp());
        EXPECT(0x81c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x81c3));
        // 2C 01C7
        gbc.setState(0x86eb, 0xf031, 0xbef0, 0xf20e, 0xf924, 0xda4a, 0x1, 0x0);
        gbc.writeMem(0x86eb, { 0x2c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf031, gbc.sp());
        EXPECT(0x86ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x86eb));
        // 2C 01C8
        gbc.setState(0x9c5d, 0x5209, 0x20b0, 0xb7c9, 0xb441, 0xc931, 0x1, 0x1);
        gbc.writeMem(0x9c5d, { 0x2c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5209, gbc.sp());
        EXPECT(0x9c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9c5d));
        // 2C 01C9
        gbc.setState(0x27f2, 0xc3da, 0x8fc0, 0x6417, 0x7ee9, 0x277c, 0x0, 0x1);
        gbc.writeMem(0x27f2, { 0x2c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc3da, gbc.sp());
        EXPECT(0x27f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01CA
        gbc.setState(0x51e4, 0x911e, 0x7280, 0xa709, 0x234c, 0x3968, 0x1, 0x1);
        gbc.writeMem(0x51e4, { 0x2c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x911e, gbc.sp());
        EXPECT(0x51e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01CB
        gbc.setState(0x3034, 0x317b, 0x1320, 0x353b, 0xd14a, 0xcf97, 0x1, 0x0);
        gbc.writeMem(0x3034, { 0x2c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x317b, gbc.sp());
        EXPECT(0x3035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01CC
        gbc.setState(0x73fc, 0x6c4a, 0xcc40, 0x1dc2, 0x2e5c, 0x7747, 0x1, 0x0);
        gbc.writeMem(0x73fc, { 0x2c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6c4a, gbc.sp());
        EXPECT(0x73fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01CD
        gbc.setState(0x1e0b, 0x9fbf, 0x9d30, 0x4002, 0xe8de, 0xa300, 0x1, 0x0);
        gbc.writeMem(0x1e0b, { 0x2c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9fbf, gbc.sp());
        EXPECT(0x1e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01CE
        gbc.setState(0xef7d, 0xd70c, 0xfaf0, 0xdff2, 0x5278, 0xa888, 0x0, 0x0);
        gbc.writeMem(0xef7d, { 0x2c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd70c, gbc.sp());
        EXPECT(0xef7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xef7d));
        // 2C 01CF
        gbc.setState(0xc455, 0xeae7, 0x3730, 0x97d6, 0xffd6, 0xe155, 0x0, 0x0);
        gbc.writeMem(0xc455, { 0x2c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xeae7, gbc.sp());
        EXPECT(0xc456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc455));
        // 2C 01D0
        gbc.setState(0x5db8, 0x6e30, 0x3670, 0xa513, 0x19f, 0x984d, 0x1, 0x1);
        gbc.writeMem(0x5db8, { 0x2c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6e30, gbc.sp());
        EXPECT(0x5db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01D1
        gbc.setState(0xa76b, 0x5f16, 0xf720, 0xd9a9, 0xd94b, 0xc934, 0x0, 0x0);
        gbc.writeMem(0xa76b, { 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5f16, gbc.sp());
        EXPECT(0xa76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa76b));
        // 2C 01D2
        gbc.setState(0xb3ac, 0x7aaf, 0xbba0, 0xe898, 0xfc21, 0xaf18, 0x0, 0x0);
        gbc.writeMem(0xb3ac, { 0x2c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7aaf, gbc.sp());
        EXPECT(0xb3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb3ac));
        // 2C 01D3
        gbc.setState(0x86f8, 0x6b20, 0x9fa0, 0x12dc, 0x88ee, 0x81a8, 0x1, 0x0);
        gbc.writeMem(0x86f8, { 0x2c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6b20, gbc.sp());
        EXPECT(0x86f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x86f8));
        // 2C 01D4
        gbc.setState(0x3a4, 0x8e13, 0x3060, 0xf152, 0x27f1, 0xbedb, 0x0, 0x0);
        gbc.writeMem(0x3a4, { 0x2c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8e13, gbc.sp());
        EXPECT(0x3a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01D5
        gbc.setState(0x94b, 0x51fe, 0xc7b0, 0x27f6, 0xf5de, 0x3947, 0x0, 0x0);
        gbc.writeMem(0x94b, { 0x2c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x51fe, gbc.sp());
        EXPECT(0x94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01D6
        gbc.setState(0x2e6d, 0xa0fc, 0x5bd0, 0x1bff, 0xd593, 0x3fe1, 0x1, 0x1);
        gbc.writeMem(0x2e6d, { 0x2c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa0fc, gbc.sp());
        EXPECT(0x2e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01D7
        gbc.setState(0x1e07, 0xaaf3, 0x4760, 0x383a, 0xc2e, 0x74c8, 0x0, 0x0);
        gbc.writeMem(0x1e07, { 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xaaf3, gbc.sp());
        EXPECT(0x1e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01D8
        gbc.setState(0x31a4, 0x1ddd, 0x8510, 0x17e, 0xa9c0, 0x7899, 0x0, 0x0);
        gbc.writeMem(0x31a4, { 0x2c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1ddd, gbc.sp());
        EXPECT(0x31a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01D9
        gbc.setState(0x5b78, 0xb190, 0xf220, 0x2df4, 0x1034, 0x2b31, 0x1, 0x1);
        gbc.writeMem(0x5b78, { 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb190, gbc.sp());
        EXPECT(0x5b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01DA
        gbc.setState(0x2c0, 0x4387, 0xf60, 0xd094, 0x35a6, 0x51da, 0x1, 0x1);
        gbc.writeMem(0x2c0, { 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4387, gbc.sp());
        EXPECT(0x2c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01DB
        gbc.setState(0xc5c7, 0xca78, 0xe8a0, 0x9a08, 0xc458, 0x1e25, 0x0, 0x1);
        gbc.writeMem(0xc5c7, { 0x2c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xca78, gbc.sp());
        EXPECT(0xc5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc5c7));
        // 2C 01DC
        gbc.setState(0x8008, 0x5dcb, 0x79d0, 0x403a, 0xee8, 0x84a3, 0x1, 0x1);
        gbc.writeMem(0x8008, { 0x2c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5dcb, gbc.sp());
        EXPECT(0x8009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8008));
        // 2C 01DD
        gbc.setState(0xeee8, 0xa6ca, 0x9fe0, 0x9f49, 0x4b24, 0xe925, 0x1, 0x1);
        gbc.writeMem(0xeee8, { 0x2c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa6ca, gbc.sp());
        EXPECT(0xeee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeee8));
        // 2C 01DE
        gbc.setState(0xd5e2, 0xe9b8, 0x6960, 0x1203, 0xb650, 0x4987, 0x0, 0x1);
        gbc.writeMem(0xd5e2, { 0x2c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe9b8, gbc.sp());
        EXPECT(0xd5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd5e2));
        // 2C 01DF
        gbc.setState(0x6144, 0x47ef, 0xfaa0, 0x2f9e, 0x717c, 0xcbb2, 0x1, 0x0);
        gbc.writeMem(0x6144, { 0x2c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x47ef, gbc.sp());
        EXPECT(0x6145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01E0
        gbc.setState(0x1b88, 0x29ce, 0x6680, 0x240a, 0x40bb, 0xb9b4, 0x1, 0x1);
        gbc.writeMem(0x1b88, { 0x2c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x29ce, gbc.sp());
        EXPECT(0x1b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01E1
        gbc.setState(0x1028, 0xed37, 0xdf20, 0x4cd3, 0xf0fd, 0x2e35, 0x1, 0x0);
        gbc.writeMem(0x1028, { 0x2c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xed37, gbc.sp());
        EXPECT(0x1029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01E2
        gbc.setState(0xadec, 0x2b97, 0xeb10, 0x57ec, 0xad2d, 0x1cab, 0x1, 0x0);
        gbc.writeMem(0xadec, { 0x2c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2b97, gbc.sp());
        EXPECT(0xaded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xadec));
        // 2C 01E4
        gbc.setState(0xafca, 0x5d3, 0xd10, 0xf7ad, 0xc8e4, 0x6969, 0x0, 0x0);
        gbc.writeMem(0xafca, { 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5d3, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xafca));
        // 2C 01E6
        gbc.setState(0xb8a0, 0x1a61, 0x28a0, 0xd524, 0x36e9, 0x328a, 0x1, 0x1);
        gbc.writeMem(0xb8a0, { 0x2c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1a61, gbc.sp());
        EXPECT(0xb8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb8a0));
        // 2C 01E7
        gbc.setState(0x3e4e, 0x5d9e, 0x2560, 0xae83, 0x330e, 0xfc79, 0x0, 0x0);
        gbc.writeMem(0x3e4e, { 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5d9e, gbc.sp());
        EXPECT(0x3e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01E8
        gbc.setState(0x60ca, 0x760b, 0x40, 0xd4bc, 0x8371, 0xe70b, 0x1, 0x0);
        gbc.writeMem(0x60ca, { 0x2c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x760b, gbc.sp());
        EXPECT(0x60cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01E9
        gbc.setState(0x2675, 0x3910, 0x4750, 0xd810, 0xa5a, 0xaa4a, 0x0, 0x0);
        gbc.writeMem(0x2675, { 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3910, gbc.sp());
        EXPECT(0x2676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01EA
        gbc.setState(0xd444, 0xf339, 0xfe30, 0x45c7, 0xcc63, 0x8e0e, 0x1, 0x1);
        gbc.writeMem(0xd444, { 0x2c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf339, gbc.sp());
        EXPECT(0xd445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd444));
        // 2C 01EB
        gbc.setState(0x12c3, 0xb53, 0x55e0, 0x5563, 0xcf27, 0xdf52, 0x1, 0x1);
        gbc.writeMem(0x12c3, { 0x2c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb53, gbc.sp());
        EXPECT(0x12c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01EC
        gbc.setState(0xb8a8, 0xc14c, 0xafd0, 0x5246, 0xcc29, 0xc11f, 0x0, 0x0);
        gbc.writeMem(0xb8a8, { 0x2c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc14c, gbc.sp());
        EXPECT(0xb8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb8a8));
        // 2C 01ED
        gbc.setState(0x26db, 0x825d, 0x9b0, 0xa310, 0xc7e7, 0xbcb8, 0x0, 0x1);
        gbc.writeMem(0x26db, { 0x2c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x825d, gbc.sp());
        EXPECT(0x26dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01EE
        gbc.setState(0xeb5d, 0xf32c, 0xb760, 0xd697, 0x5c1, 0xb564, 0x1, 0x0);
        gbc.writeMem(0xeb5d, { 0x2c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf32c, gbc.sp());
        EXPECT(0xeb5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeb5d));
        // 2C 01EF
        gbc.setState(0x6238, 0xde80, 0x9f00, 0x90d3, 0x8319, 0xbdfc, 0x0, 0x0);
        gbc.writeMem(0x6238, { 0x2c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xde80, gbc.sp());
        EXPECT(0x6239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01F0
        gbc.setState(0x1d21, 0xdb92, 0x3bd0, 0x745, 0x3afb, 0xcf22, 0x1, 0x0);
        gbc.writeMem(0x1d21, { 0x2c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdb92, gbc.sp());
        EXPECT(0x1d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01F1
        gbc.setState(0xa4f7, 0xb828, 0xd890, 0xa1bc, 0x1a97, 0xad5e, 0x0, 0x0);
        gbc.writeMem(0xa4f7, { 0x2c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0xa4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa4f7));
        // 2C 01F2
        gbc.setState(0x41d5, 0xf3d8, 0xde50, 0x8e38, 0x46c, 0x64e1, 0x1, 0x0);
        gbc.writeMem(0x41d5, { 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf3d8, gbc.sp());
        EXPECT(0x41d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01F3
        gbc.setState(0x4163, 0x9dff, 0xa10, 0x266a, 0x7b9, 0xf135, 0x0, 0x1);
        gbc.writeMem(0x4163, { 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9dff, gbc.sp());
        EXPECT(0x4164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01F5
        gbc.setState(0xc0d8, 0xdada, 0xfb0, 0x55da, 0x3212, 0x5284, 0x0, 0x1);
        gbc.writeMem(0xc0d8, { 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdada, gbc.sp());
        EXPECT(0xc0d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc0d8));
        // 2C 01F6
        gbc.setState(0x7994, 0x5fd1, 0x92b0, 0xcb34, 0xd6cb, 0xe262, 0x1, 0x1);
        gbc.writeMem(0x7994, { 0x2c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5fd1, gbc.sp());
        EXPECT(0x7995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01F7
        gbc.setState(0x39ed, 0x49ca, 0x8320, 0x3d4a, 0x80c4, 0xb28a, 0x0, 0x0);
        gbc.writeMem(0x39ed, { 0x2c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x49ca, gbc.sp());
        EXPECT(0x39ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01F8
        gbc.setState(0x7845, 0xc63e, 0xc170, 0x2e27, 0x1d6, 0x5258, 0x0, 0x0);
        gbc.writeMem(0x7845, { 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc63e, gbc.sp());
        EXPECT(0x7846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01F9
        gbc.setState(0x52be, 0xab24, 0xb0d0, 0x984e, 0x569c, 0x5291, 0x1, 0x1);
        gbc.writeMem(0x52be, { 0x2c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xab24, gbc.sp());
        EXPECT(0x52bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01FA
        gbc.setState(0xce8d, 0xd2a9, 0xb060, 0x75a2, 0xceaa, 0x48ef, 0x0, 0x1);
        gbc.writeMem(0xce8d, { 0x2c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd2a9, gbc.sp());
        EXPECT(0xce8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xce8d));
        // 2C 01FB
        gbc.setState(0x4364, 0x197e, 0xe590, 0x36c0, 0x5019, 0x3747, 0x0, 0x0);
        gbc.writeMem(0x4364, { 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x197e, gbc.sp());
        EXPECT(0x4365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 01FC
        gbc.setState(0x560, 0x165a, 0x6be0, 0x9ab, 0xecb7, 0x456a, 0x1, 0x0);
        gbc.writeMem(0x560, { 0x2c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x165a, gbc.sp());
        EXPECT(0x561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 01FD
        gbc.setState(0xb1d7, 0x880f, 0x8550, 0xb7a0, 0xdb0e, 0xef61, 0x0, 0x1);
        gbc.writeMem(0xb1d7, { 0x2c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x880f, gbc.sp());
        EXPECT(0xb1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb1d7));
        // 2C 01FE
        gbc.setState(0x8fed, 0xb3f9, 0xc350, 0x88d2, 0xf3c6, 0xb8b2, 0x1, 0x0);
        gbc.writeMem(0x8fed, { 0x2c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb3f9, gbc.sp());
        EXPECT(0x8fee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8fed));
        // 2C 01FF
        gbc.setState(0xebd0, 0xe24b, 0x7660, 0x6602, 0x753b, 0x4feb, 0x1, 0x0);
        gbc.writeMem(0xebd0, { 0x2c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe24b, gbc.sp());
        EXPECT(0xebd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xebd0));
        // 2C 0200
        gbc.setState(0x246f, 0x1ede, 0xcb00, 0x1629, 0x762c, 0xcfb2, 0x0, 0x0);
        gbc.writeMem(0x246f, { 0x2c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1ede, gbc.sp());
        EXPECT(0x2470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0202
        gbc.setState(0xce44, 0x145f, 0x2290, 0xe796, 0xaa50, 0x2c65, 0x0, 0x1);
        gbc.writeMem(0xce44, { 0x2c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x145f, gbc.sp());
        EXPECT(0xce45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xce44));
        // 2C 0203
        gbc.setState(0x9bf9, 0x2b94, 0x8810, 0xf48a, 0xe649, 0x1722, 0x0, 0x0);
        gbc.writeMem(0x9bf9, { 0x2c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2b94, gbc.sp());
        EXPECT(0x9bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9bf9));
        // 2C 0204
        gbc.setState(0x60d, 0x80fb, 0xdee0, 0xd08e, 0x8c26, 0xe2bf, 0x1, 0x1);
        gbc.writeMem(0x60d, { 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x80fb, gbc.sp());
        EXPECT(0x60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0205
        gbc.setState(0xbefd, 0x4b1a, 0xcea0, 0x70b0, 0xde33, 0xede4, 0x1, 0x0);
        gbc.writeMem(0xbefd, { 0x2c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4b1a, gbc.sp());
        EXPECT(0xbefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbefd));
        // 2C 0206
        gbc.setState(0xa097, 0x3de, 0x9a70, 0xc5de, 0x74c5, 0x6e2a, 0x1, 0x0);
        gbc.writeMem(0xa097, { 0x2c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3de, gbc.sp());
        EXPECT(0xa098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa097));
        // 2C 0207
        gbc.setState(0x11b1, 0x9c7e, 0x830, 0x6d8a, 0xd814, 0x91bf, 0x1, 0x0);
        gbc.writeMem(0x11b1, { 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9c7e, gbc.sp());
        EXPECT(0x11b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0208
        gbc.setState(0xc62e, 0x1f30, 0x3a70, 0xb299, 0x7ed9, 0xfdbb, 0x0, 0x1);
        gbc.writeMem(0xc62e, { 0x2c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1f30, gbc.sp());
        EXPECT(0xc62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc62e));
        // 2C 0209
        gbc.setState(0xd6f, 0x24a, 0x6510, 0xb401, 0xaf1b, 0x140d, 0x1, 0x1);
        gbc.writeMem(0xd6f, { 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x24a, gbc.sp());
        EXPECT(0xd70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 020A
        gbc.setState(0xc1cc, 0x35bb, 0xed40, 0xe993, 0xf937, 0x50d9, 0x1, 0x0);
        gbc.writeMem(0xc1cc, { 0x2c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x35bb, gbc.sp());
        EXPECT(0xc1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc1cc));
        // 2C 020B
        gbc.setState(0x71ba, 0xedc0, 0x2db0, 0xc749, 0xbc33, 0xcbe6, 0x1, 0x0);
        gbc.writeMem(0x71ba, { 0x2c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xedc0, gbc.sp());
        EXPECT(0x71bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 020C
        gbc.setState(0xc1d2, 0xca62, 0x37d0, 0xa7a5, 0x679f, 0x6c2e, 0x0, 0x0);
        gbc.writeMem(0xc1d2, { 0x2c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xca62, gbc.sp());
        EXPECT(0xc1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc1d2));
        // 2C 020D
        gbc.setState(0xbb94, 0xab1, 0xfae0, 0xb455, 0x5453, 0xd630, 0x1, 0x0);
        gbc.writeMem(0xbb94, { 0x2c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xab1, gbc.sp());
        EXPECT(0xbb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbb94));
        // 2C 020E
        gbc.setState(0x4c63, 0xf440, 0x8fd0, 0x392c, 0xc616, 0x3212, 0x0, 0x1);
        gbc.writeMem(0x4c63, { 0x2c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf440, gbc.sp());
        EXPECT(0x4c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 020F
        gbc.setState(0xfaa, 0xc7ef, 0xddf0, 0x3ac3, 0x9ef4, 0xd2b3, 0x1, 0x1);
        gbc.writeMem(0xfaa, { 0x2c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc7ef, gbc.sp());
        EXPECT(0xfab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0210
        gbc.setState(0xbe7c, 0xe5b6, 0xbeb0, 0xcc, 0x9ffb, 0x9ab2, 0x1, 0x1);
        gbc.writeMem(0xbe7c, { 0x2c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe5b6, gbc.sp());
        EXPECT(0xbe7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbe7c));
        // 2C 0211
        gbc.setState(0xadc8, 0xf9ff, 0xfb50, 0xaea2, 0x7684, 0x35f, 0x1, 0x0);
        gbc.writeMem(0xadc8, { 0x2c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf9ff, gbc.sp());
        EXPECT(0xadc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xadc8));
        // 2C 0212
        gbc.setState(0x1e17, 0xc73a, 0x96b0, 0xffab, 0x7b5e, 0x37a6, 0x0, 0x0);
        gbc.writeMem(0x1e17, { 0x2c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc73a, gbc.sp());
        EXPECT(0x1e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0213
        gbc.setState(0xce8c, 0xaf12, 0x2260, 0xada, 0x4745, 0x75ed, 0x1, 0x1);
        gbc.writeMem(0xce8c, { 0x2c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaf12, gbc.sp());
        EXPECT(0xce8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xce8c));
        // 2C 0214
        gbc.setState(0xa9b7, 0x84ea, 0x3240, 0x217, 0xba49, 0xa7b1, 0x0, 0x0);
        gbc.writeMem(0xa9b7, { 0x2c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x84ea, gbc.sp());
        EXPECT(0xa9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa9b7));
        // 2C 0215
        gbc.setState(0x4fd6, 0xfd18, 0xdcc0, 0xfd31, 0x4c44, 0x6730, 0x1, 0x1);
        gbc.writeMem(0x4fd6, { 0x2c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfd18, gbc.sp());
        EXPECT(0x4fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0217
        gbc.setState(0x66a1, 0xa871, 0xc4f0, 0xd4be, 0x97b2, 0x2707, 0x0, 0x1);
        gbc.writeMem(0x66a1, { 0x2c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa871, gbc.sp());
        EXPECT(0x66a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0218
        gbc.setState(0x88c4, 0x9c14, 0xd180, 0x79f6, 0xcb10, 0x696c, 0x0, 0x0);
        gbc.writeMem(0x88c4, { 0x2c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9c14, gbc.sp());
        EXPECT(0x88c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x88c4));
        // 2C 0219
        gbc.setState(0x8519, 0xf19a, 0x9420, 0x9139, 0x2470, 0x9206, 0x1, 0x0);
        gbc.writeMem(0x8519, { 0x2c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf19a, gbc.sp());
        EXPECT(0x851a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8519));
        // 2C 021A
        gbc.setState(0x170c, 0x471c, 0x9320, 0xfb01, 0x1880, 0x827f, 0x0, 0x0);
        gbc.writeMem(0x170c, { 0x2c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x471c, gbc.sp());
        EXPECT(0x170d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 021B
        gbc.setState(0xc09d, 0xe557, 0x6480, 0x285, 0xf212, 0x2506, 0x1, 0x1);
        gbc.writeMem(0xc09d, { 0x2c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe557, gbc.sp());
        EXPECT(0xc09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc09d));
        // 2C 021C
        gbc.setState(0x3613, 0x2b94, 0x6e00, 0xa446, 0x894a, 0xe421, 0x1, 0x0);
        gbc.writeMem(0x3613, { 0x2c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2b94, gbc.sp());
        EXPECT(0x3614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 021D
        gbc.setState(0x34d3, 0xe20, 0xe660, 0x185, 0x76b4, 0x3caf, 0x1, 0x1);
        gbc.writeMem(0x34d3, { 0x2c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe20, gbc.sp());
        EXPECT(0x34d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 021E
        gbc.setState(0xa42a, 0x9ed8, 0xf0c0, 0xb60c, 0xcb64, 0xde6b, 0x0, 0x0);
        gbc.writeMem(0xa42a, { 0x2c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9ed8, gbc.sp());
        EXPECT(0xa42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa42a));
        // 2C 021F
        gbc.setState(0x492e, 0x997e, 0x2740, 0xc1ca, 0xfe99, 0x6719, 0x1, 0x0);
        gbc.writeMem(0x492e, { 0x2c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x997e, gbc.sp());
        EXPECT(0x492f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0220
        gbc.setState(0xdabe, 0xdad8, 0x44a0, 0x9ab9, 0xf55f, 0x895, 0x1, 0x1);
        gbc.writeMem(0xdabe, { 0x2c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdad8, gbc.sp());
        EXPECT(0xdabf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdabe));
        // 2C 0221
        gbc.setState(0x9e33, 0xbdfa, 0x4200, 0xbe48, 0x409a, 0x56be, 0x1, 0x0);
        gbc.writeMem(0x9e33, { 0x2c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbdfa, gbc.sp());
        EXPECT(0x9e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9e33));
        // 2C 0222
        gbc.setState(0xa66c, 0x8dc8, 0x3240, 0xfbf4, 0x8dd0, 0x6f43, 0x0, 0x0);
        gbc.writeMem(0xa66c, { 0x2c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8dc8, gbc.sp());
        EXPECT(0xa66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa66c));
        // 2C 0225
        gbc.setState(0x71aa, 0x36f6, 0x5f90, 0xf4c0, 0x49a5, 0xd81, 0x0, 0x0);
        gbc.writeMem(0x71aa, { 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x36f6, gbc.sp());
        EXPECT(0x71ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0226
        gbc.setState(0x8a3d, 0xe666, 0x2250, 0x3673, 0xa44f, 0x5779, 0x1, 0x1);
        gbc.writeMem(0x8a3d, { 0x2c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe666, gbc.sp());
        EXPECT(0x8a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8a3d));
        // 2C 0227
        gbc.setState(0x4854, 0x61cf, 0x4c40, 0xd88f, 0x3753, 0x975f, 0x1, 0x1);
        gbc.writeMem(0x4854, { 0x2c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x61cf, gbc.sp());
        EXPECT(0x4855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0228
        gbc.setState(0x3a0f, 0x753d, 0x46f0, 0xb65a, 0xda66, 0xba5, 0x0, 0x1);
        gbc.writeMem(0x3a0f, { 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x753d, gbc.sp());
        EXPECT(0x3a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0229
        gbc.setState(0x30af, 0x67f6, 0x900, 0xbee7, 0x73b0, 0x74a9, 0x0, 0x1);
        gbc.writeMem(0x30af, { 0x2c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x67f6, gbc.sp());
        EXPECT(0x30b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 022A
        gbc.setState(0x40a5, 0xecab, 0xc290, 0xae5e, 0x6096, 0x7160, 0x0, 0x0);
        gbc.writeMem(0x40a5, { 0x2c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xecab, gbc.sp());
        EXPECT(0x40a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 022B
        gbc.setState(0x705, 0x50ed, 0x5920, 0x5d25, 0x5ba2, 0x988f, 0x1, 0x0);
        gbc.writeMem(0x705, { 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x50ed, gbc.sp());
        EXPECT(0x706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 022C
        gbc.setState(0xde53, 0x92d1, 0xdb60, 0x15f3, 0x5d47, 0xf4a5, 0x0, 0x0);
        gbc.writeMem(0xde53, { 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x92d1, gbc.sp());
        EXPECT(0xde54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xde53));
        // 2C 022D
        gbc.setState(0x2b31, 0x3c94, 0x4a90, 0x40d9, 0x615d, 0xc47c, 0x1, 0x1);
        gbc.writeMem(0x2b31, { 0x2c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3c94, gbc.sp());
        EXPECT(0x2b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 022E
        gbc.setState(0xef71, 0x28e4, 0x64d0, 0x70c2, 0xd51e, 0x7665, 0x0, 0x0);
        gbc.writeMem(0xef71, { 0x2c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x28e4, gbc.sp());
        EXPECT(0xef72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xef71));
        // 2C 022F
        gbc.setState(0x9605, 0xdd23, 0xe8a0, 0xef1e, 0x86fa, 0x80e1, 0x1, 0x0);
        gbc.writeMem(0x9605, { 0x2c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdd23, gbc.sp());
        EXPECT(0x9606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9605));
        // 2C 0230
        gbc.setState(0xddc0, 0xf098, 0xd810, 0xf6b5, 0x868b, 0x2945, 0x1, 0x1);
        gbc.writeMem(0xddc0, { 0x2c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf098, gbc.sp());
        EXPECT(0xddc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xddc0));
        // 2C 0231
        gbc.setState(0x5543, 0x8fa1, 0xe510, 0x14b, 0xe734, 0x9365, 0x1, 0x1);
        gbc.writeMem(0x5543, { 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8fa1, gbc.sp());
        EXPECT(0x5544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0232
        gbc.setState(0xdfcb, 0xb5e5, 0xe2b0, 0xa619, 0xdc8f, 0xdb06, 0x1, 0x0);
        gbc.writeMem(0xdfcb, { 0x2c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb5e5, gbc.sp());
        EXPECT(0xdfcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdfcb));
        // 2C 0233
        gbc.setState(0xa1a, 0x4b35, 0x6800, 0xc911, 0x6f0a, 0xddf1, 0x0, 0x1);
        gbc.writeMem(0xa1a, { 0x2c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4b35, gbc.sp());
        EXPECT(0xa1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0234
        gbc.setState(0xc415, 0x21bc, 0xfc00, 0x2225, 0xaacd, 0x6f7d, 0x1, 0x1);
        gbc.writeMem(0xc415, { 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x21bc, gbc.sp());
        EXPECT(0xc416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc415));
        // 2C 0235
        gbc.setState(0x6cc4, 0x3034, 0x130, 0xafa7, 0x98b7, 0xaafa, 0x0, 0x0);
        gbc.writeMem(0x6cc4, { 0x2c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3034, gbc.sp());
        EXPECT(0x6cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0236
        gbc.setState(0xc42c, 0x8679, 0x1750, 0x4dc7, 0x5247, 0xe834, 0x0, 0x1);
        gbc.writeMem(0xc42c, { 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8679, gbc.sp());
        EXPECT(0xc42d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc42c));
        // 2C 0237
        gbc.setState(0x3fa2, 0xb18b, 0xf740, 0x7feb, 0xcb9d, 0xf894, 0x1, 0x0);
        gbc.writeMem(0x3fa2, { 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb18b, gbc.sp());
        EXPECT(0x3fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0238
        gbc.setState(0x3f05, 0x9005, 0xa900, 0x7a50, 0x6e43, 0x685, 0x1, 0x1);
        gbc.writeMem(0x3f05, { 0x2c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9005, gbc.sp());
        EXPECT(0x3f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0239
        gbc.setState(0x3de6, 0x535f, 0x4820, 0xfaf5, 0xe725, 0xec0c, 0x1, 0x1);
        gbc.writeMem(0x3de6, { 0x2c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x535f, gbc.sp());
        EXPECT(0x3de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 023A
        gbc.setState(0xa772, 0x37ad, 0xbd40, 0xc0a6, 0xbc99, 0x2a08, 0x1, 0x0);
        gbc.writeMem(0xa772, { 0x2c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x37ad, gbc.sp());
        EXPECT(0xa773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa772));
        // 2C 023B
        gbc.setState(0x8bf, 0x9dd6, 0x2630, 0x15bd, 0x727f, 0x9d22, 0x1, 0x0);
        gbc.writeMem(0x8bf, { 0x2c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9dd6, gbc.sp());
        EXPECT(0x8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 023C
        gbc.setState(0xa345, 0xe6ac, 0xeb80, 0x1e3b, 0x9275, 0x25eb, 0x1, 0x0);
        gbc.writeMem(0xa345, { 0x2c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe6ac, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa345));
        // 2C 023E
        gbc.setState(0xcaf3, 0x99bd, 0xf400, 0xac1, 0x932b, 0xd98c, 0x1, 0x0);
        gbc.writeMem(0xcaf3, { 0x2c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x99bd, gbc.sp());
        EXPECT(0xcaf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcaf3));
        // 2C 023F
        gbc.setState(0xc585, 0x81c8, 0xf560, 0xa021, 0xccbf, 0xe802, 0x1, 0x1);
        gbc.writeMem(0xc585, { 0x2c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x81c8, gbc.sp());
        EXPECT(0xc586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc585));
        // 2C 0240
        gbc.setState(0x2d8f, 0xb8d6, 0xe660, 0xdb90, 0x37af, 0x7aa0, 0x1, 0x0);
        gbc.writeMem(0x2d8f, { 0x2c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb8d6, gbc.sp());
        EXPECT(0x2d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0241
        gbc.setState(0x4840, 0xedb5, 0x5970, 0xb6c4, 0xc608, 0x78b7, 0x1, 0x1);
        gbc.writeMem(0x4840, { 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xedb5, gbc.sp());
        EXPECT(0x4841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0242
        gbc.setState(0x7b89, 0xdfc9, 0x7680, 0x280a, 0xadbf, 0xcfaf, 0x1, 0x1);
        gbc.writeMem(0x7b89, { 0x2c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdfc9, gbc.sp());
        EXPECT(0x7b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0243
        gbc.setState(0xc4, 0x82a7, 0x1060, 0xc7ba, 0x6f1, 0x6ff6, 0x0, 0x1);
        gbc.writeMem(0xc4, { 0x2c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x82a7, gbc.sp());
        EXPECT(0xc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0244
        gbc.setState(0x8e, 0x205c, 0x6450, 0xc363, 0x16f0, 0x254c, 0x1, 0x1);
        gbc.writeMem(0x8e, { 0x2c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x205c, gbc.sp());
        EXPECT(0x8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0245
        gbc.setState(0xb5c1, 0xfb74, 0xdb00, 0x43e0, 0xe2f, 0xa17a, 0x0, 0x0);
        gbc.writeMem(0xb5c1, { 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfb74, gbc.sp());
        EXPECT(0xb5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb5c1));
        // 2C 0246
        gbc.setState(0xcfef, 0xa026, 0xb150, 0xb9b2, 0x4611, 0x7d02, 0x0, 0x1);
        gbc.writeMem(0xcfef, { 0x2c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa026, gbc.sp());
        EXPECT(0xcff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcfef));
        // 2C 0247
        gbc.setState(0xe6e5, 0x52d8, 0x36d0, 0x7d2e, 0xef43, 0x28db, 0x1, 0x1);
        gbc.writeMem(0xe6e5, { 0x2c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x52d8, gbc.sp());
        EXPECT(0xe6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe6e5));
        // 2C 0249
        gbc.setState(0xefdd, 0x675d, 0x39f0, 0xcfa1, 0x118, 0xfeb8, 0x1, 0x1);
        gbc.writeMem(0xefdd, { 0x2c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x675d, gbc.sp());
        EXPECT(0xefde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xefdd));
        // 2C 024A
        gbc.setState(0xe5ba, 0xb4b8, 0xa540, 0xe550, 0xde51, 0xe168, 0x1, 0x0);
        gbc.writeMem(0xe5ba, { 0x2c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb4b8, gbc.sp());
        EXPECT(0xe5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe5ba));
        // 2C 024B
        gbc.setState(0x81dd, 0xc7d0, 0x2190, 0x8a80, 0xe9a8, 0xf57a, 0x0, 0x0);
        gbc.writeMem(0x81dd, { 0x2c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc7d0, gbc.sp());
        EXPECT(0x81de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x81dd));
        // 2C 024C
        gbc.setState(0xeae3, 0x29c7, 0xf840, 0xc2bb, 0xd961, 0x17f5, 0x0, 0x1);
        gbc.writeMem(0xeae3, { 0x2c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x29c7, gbc.sp());
        EXPECT(0xeae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeae3));
        // 2C 024D
        gbc.setState(0xdae9, 0x9add, 0x1c00, 0x5c35, 0x8d, 0x67f4, 0x0, 0x1);
        gbc.writeMem(0xdae9, { 0x2c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9add, gbc.sp());
        EXPECT(0xdaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdae9));
        // 2C 024E
        gbc.setState(0xbac1, 0xb71f, 0xc6a0, 0x2248, 0x63e9, 0x278b, 0x1, 0x0);
        gbc.writeMem(0xbac1, { 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb71f, gbc.sp());
        EXPECT(0xbac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbac1));
        // 2C 024F
        gbc.setState(0x2e3d, 0x7106, 0x5f00, 0xfa75, 0x86aa, 0x2f7a, 0x0, 0x0);
        gbc.writeMem(0x2e3d, { 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7106, gbc.sp());
        EXPECT(0x2e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0250
        gbc.setState(0x20b9, 0x894a, 0xbfc0, 0xf90b, 0x995e, 0x95e3, 0x0, 0x1);
        gbc.writeMem(0x20b9, { 0x2c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x894a, gbc.sp());
        EXPECT(0x20ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0251
        gbc.setState(0x2057, 0x9d04, 0xa790, 0x763a, 0x6b76, 0x1cf0, 0x0, 0x1);
        gbc.writeMem(0x2057, { 0x2c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9d04, gbc.sp());
        EXPECT(0x2058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0252
        gbc.setState(0x9bb5, 0x2c2f, 0x53f0, 0x7c1a, 0xc89d, 0x769c, 0x0, 0x1);
        gbc.writeMem(0x9bb5, { 0x2c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2c2f, gbc.sp());
        EXPECT(0x9bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9bb5));
        // 2C 0254
        gbc.setState(0x7381, 0xa253, 0xe6d0, 0xd23c, 0x3c91, 0xbe3c, 0x1, 0x1);
        gbc.writeMem(0x7381, { 0x2c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa253, gbc.sp());
        EXPECT(0x7382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0256
        gbc.setState(0x4706, 0x225a, 0xf710, 0xc91, 0x27ab, 0x7a92, 0x0, 0x0);
        gbc.writeMem(0x4706, { 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x225a, gbc.sp());
        EXPECT(0x4707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0257
        gbc.setState(0x5c2c, 0x8abb, 0xde0, 0x424d, 0xa154, 0xe56f, 0x1, 0x0);
        gbc.writeMem(0x5c2c, { 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8abb, gbc.sp());
        EXPECT(0x5c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0258
        gbc.setState(0x1ee3, 0xca82, 0x58b0, 0x698c, 0xb34e, 0xeab, 0x1, 0x1);
        gbc.writeMem(0x1ee3, { 0x2c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xca82, gbc.sp());
        EXPECT(0x1ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0259
        gbc.setState(0x262, 0x29c1, 0x90c0, 0x9818, 0xb75, 0x55d8, 0x0, 0x0);
        gbc.writeMem(0x262, { 0x2c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x29c1, gbc.sp());
        EXPECT(0x263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 025A
        gbc.setState(0x2fce, 0xa250, 0x1230, 0x8a37, 0x64e1, 0xca15, 0x0, 0x0);
        gbc.writeMem(0x2fce, { 0x2c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa250, gbc.sp());
        EXPECT(0x2fcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 025B
        gbc.setState(0xbccb, 0x98d, 0x77c0, 0xd88b, 0x9793, 0xa7a3, 0x1, 0x0);
        gbc.writeMem(0xbccb, { 0x2c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x98d, gbc.sp());
        EXPECT(0xbccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbccb));
        // 2C 025C
        gbc.setState(0x4e34, 0xffa, 0x53c0, 0xf486, 0x817f, 0x269e, 0x1, 0x1);
        gbc.writeMem(0x4e34, { 0x2c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xffa, gbc.sp());
        EXPECT(0x4e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 025D
        gbc.setState(0x84e8, 0x1301, 0xcfb0, 0xf940, 0x4969, 0xe951, 0x1, 0x1);
        gbc.writeMem(0x84e8, { 0x2c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1301, gbc.sp());
        EXPECT(0x84e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x84e8));
        // 2C 025E
        gbc.setState(0x8278, 0x34ec, 0xd210, 0x128c, 0x5fb0, 0x1dd4, 0x0, 0x0);
        gbc.writeMem(0x8278, { 0x2c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x34ec, gbc.sp());
        EXPECT(0x8279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8278));
        // 2C 025F
        gbc.setState(0xe7fb, 0x382, 0x9890, 0x3d5b, 0x577, 0x723b, 0x1, 0x0);
        gbc.writeMem(0xe7fb, { 0x2c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x382, gbc.sp());
        EXPECT(0xe7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe7fb));
        // 2C 0260
        gbc.setState(0x6157, 0x2a90, 0xc540, 0x19cc, 0xea8c, 0xb54d, 0x0, 0x0);
        gbc.writeMem(0x6157, { 0x2c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2a90, gbc.sp());
        EXPECT(0x6158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0261
        gbc.setState(0xa583, 0x2bf3, 0x78a0, 0x6b0d, 0xbc9, 0x39f9, 0x1, 0x0);
        gbc.writeMem(0xa583, { 0x2c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2bf3, gbc.sp());
        EXPECT(0xa584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa583));
        // 2C 0262
        gbc.setState(0x27bf, 0x3f94, 0xecd0, 0x603d, 0xedbd, 0x2382, 0x1, 0x1);
        gbc.writeMem(0x27bf, { 0x2c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3f94, gbc.sp());
        EXPECT(0x27c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0263
        gbc.setState(0x7b3e, 0xa155, 0xda70, 0x34e9, 0x2fce, 0x7e80, 0x1, 0x0);
        gbc.writeMem(0x7b3e, { 0x2c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa155, gbc.sp());
        EXPECT(0x7b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0264
        gbc.setState(0x1a76, 0x19b4, 0xfb0, 0x5e49, 0x18fb, 0x46e0, 0x1, 0x0);
        gbc.writeMem(0x1a76, { 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x19b4, gbc.sp());
        EXPECT(0x1a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0265
        gbc.setState(0x9dcc, 0xa17d, 0xb410, 0x868a, 0xc2ad, 0x7937, 0x1, 0x1);
        gbc.writeMem(0x9dcc, { 0x2c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa17d, gbc.sp());
        EXPECT(0x9dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9dcc));
        // 2C 0266
        gbc.setState(0x9308, 0x5653, 0xccc0, 0xace2, 0x796c, 0xba99, 0x1, 0x1);
        gbc.writeMem(0x9308, { 0x2c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5653, gbc.sp());
        EXPECT(0x9309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9308));
        // 2C 0267
        gbc.setState(0x5e0f, 0xa190, 0x6360, 0xbb30, 0x157f, 0xceb5, 0x1, 0x1);
        gbc.writeMem(0x5e0f, { 0x2c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa190, gbc.sp());
        EXPECT(0x5e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0268
        gbc.setState(0xb689, 0x7b0e, 0x2820, 0xfc33, 0xdf76, 0xbf81, 0x1, 0x1);
        gbc.writeMem(0xb689, { 0x2c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7b0e, gbc.sp());
        EXPECT(0xb68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb689));
        // 2C 0269
        gbc.setState(0x7453, 0x31f2, 0xd450, 0x1687, 0x1721, 0x34a6, 0x0, 0x1);
        gbc.writeMem(0x7453, { 0x2c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x31f2, gbc.sp());
        EXPECT(0x7454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 026A
        gbc.setState(0x7be3, 0x9150, 0x5b40, 0xe169, 0x5b58, 0x1573, 0x1, 0x0);
        gbc.writeMem(0x7be3, { 0x2c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9150, gbc.sp());
        EXPECT(0x7be4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 026B
        gbc.setState(0x178c, 0xbe4d, 0xd180, 0x75d5, 0xe694, 0xe31d, 0x0, 0x0);
        gbc.writeMem(0x178c, { 0x2c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbe4d, gbc.sp());
        EXPECT(0x178d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 026C
        gbc.setState(0x7505, 0xcaf9, 0xd10, 0xcfd3, 0x8f5c, 0x34ff, 0x1, 0x1);
        gbc.writeMem(0x7505, { 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcaf9, gbc.sp());
        EXPECT(0x7506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 026D
        gbc.setState(0x1a4d, 0xb91a, 0x4a00, 0xe7bd, 0x4280, 0x270f, 0x0, 0x0);
        gbc.writeMem(0x1a4d, { 0x2c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb91a, gbc.sp());
        EXPECT(0x1a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 026E
        gbc.setState(0x9d06, 0x9105, 0xa480, 0x4151, 0xe920, 0x4eea, 0x0, 0x0);
        gbc.writeMem(0x9d06, { 0x2c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9105, gbc.sp());
        EXPECT(0x9d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9d06));
        // 2C 026F
        gbc.setState(0x5ec5, 0x153a, 0xfab0, 0x2c85, 0x939d, 0xe826, 0x1, 0x0);
        gbc.writeMem(0x5ec5, { 0x2c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x153a, gbc.sp());
        EXPECT(0x5ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0270
        gbc.setState(0xce54, 0x894b, 0x86c0, 0x39ef, 0xd823, 0xeeee, 0x1, 0x0);
        gbc.writeMem(0xce54, { 0x2c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x894b, gbc.sp());
        EXPECT(0xce55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xce54));
        // 2C 0271
        gbc.setState(0xe3c5, 0xba38, 0x2780, 0x2ad0, 0xfd48, 0x58fb, 0x1, 0x0);
        gbc.writeMem(0xe3c5, { 0x2c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xba38, gbc.sp());
        EXPECT(0xe3c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe3c5));
        // 2C 0272
        gbc.setState(0x63e8, 0xfff, 0x7370, 0xe4fa, 0xacde, 0xb5e, 0x1, 0x1);
        gbc.writeMem(0x63e8, { 0x2c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfff, gbc.sp());
        EXPECT(0x63e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0273
        gbc.setState(0x8963, 0x57c5, 0xd600, 0xb4c4, 0xa509, 0xfe15, 0x0, 0x1);
        gbc.writeMem(0x8963, { 0x2c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x57c5, gbc.sp());
        EXPECT(0x8964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8963));
        // 2C 0274
        gbc.setState(0x137e, 0xf0ce, 0x1660, 0x90bb, 0x214, 0x689f, 0x1, 0x0);
        gbc.writeMem(0x137e, { 0x2c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf0ce, gbc.sp());
        EXPECT(0x137f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0275
        gbc.setState(0x85e6, 0x5d0b, 0xff40, 0xdd2e, 0xa737, 0xc77c, 0x0, 0x1);
        gbc.writeMem(0x85e6, { 0x2c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5d0b, gbc.sp());
        EXPECT(0x85e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x85e6));
        // 2C 0276
        gbc.setState(0xd473, 0xdcf9, 0x96a0, 0x6b53, 0x401c, 0xbaec, 0x0, 0x1);
        gbc.writeMem(0xd473, { 0x2c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdcf9, gbc.sp());
        EXPECT(0xd474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd473));
        // 2C 0277
        gbc.setState(0x8d35, 0xd9e8, 0x72e0, 0x149c, 0xe806, 0x4792, 0x0, 0x0);
        gbc.writeMem(0x8d35, { 0x2c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd9e8, gbc.sp());
        EXPECT(0x8d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8d35));
        // 2C 0278
        gbc.setState(0x727c, 0x23e, 0x88d0, 0xeb5f, 0xb3fa, 0x135b, 0x0, 0x0);
        gbc.writeMem(0x727c, { 0x2c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x23e, gbc.sp());
        EXPECT(0x727d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0279
        gbc.setState(0x2684, 0x18cc, 0xafc0, 0x1ae9, 0x1671, 0xe857, 0x0, 0x1);
        gbc.writeMem(0x2684, { 0x2c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x18cc, gbc.sp());
        EXPECT(0x2685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 027A
        gbc.setState(0x7290, 0x4397, 0x5e40, 0x78ea, 0xc455, 0x9d9d, 0x1, 0x0);
        gbc.writeMem(0x7290, { 0x2c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4397, gbc.sp());
        EXPECT(0x7291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 027B
        gbc.setState(0xa235, 0x241a, 0x7610, 0x26ef, 0xada8, 0xb69e, 0x0, 0x1);
        gbc.writeMem(0xa235, { 0x2c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x241a, gbc.sp());
        EXPECT(0xa236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa235));
        // 2C 027C
        gbc.setState(0xb4ad, 0xed5e, 0xf380, 0xc6a0, 0xa9d8, 0x2890, 0x1, 0x1);
        gbc.writeMem(0xb4ad, { 0x2c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xed5e, gbc.sp());
        EXPECT(0xb4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb4ad));
        // 2C 027D
        gbc.setState(0x59f9, 0xac00, 0x490, 0x710c, 0x9d50, 0x576d, 0x0, 0x0);
        gbc.writeMem(0x59f9, { 0x2c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xac00, gbc.sp());
        EXPECT(0x59fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 027E
        gbc.setState(0x559c, 0xf3d5, 0xbc00, 0x5cbc, 0x8adf, 0xd0b, 0x1, 0x0);
        gbc.writeMem(0x559c, { 0x2c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf3d5, gbc.sp());
        EXPECT(0x559d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 027F
        gbc.setState(0x6e98, 0x8f75, 0x4d70, 0x5694, 0xc623, 0x39d3, 0x0, 0x1);
        gbc.writeMem(0x6e98, { 0x2c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8f75, gbc.sp());
        EXPECT(0x6e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0280
        gbc.setState(0xc250, 0xc8d7, 0x92e0, 0xe918, 0x60fe, 0xcab0, 0x1, 0x1);
        gbc.writeMem(0xc250, { 0x2c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc8d7, gbc.sp());
        EXPECT(0xc251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc250));
        // 2C 0281
        gbc.setState(0x6098, 0xf876, 0x74b0, 0xf186, 0xfef3, 0x43d, 0x0, 0x1);
        gbc.writeMem(0x6098, { 0x2c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf876, gbc.sp());
        EXPECT(0x6099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0282
        gbc.setState(0xc3ed, 0xbda, 0x63f0, 0x4f62, 0xa55c, 0xa4d3, 0x0, 0x0);
        gbc.writeMem(0xc3ed, { 0x2c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbda, gbc.sp());
        EXPECT(0xc3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc3ed));
        // 2C 0283
        gbc.setState(0x5958, 0x6093, 0xcea0, 0x6b32, 0xb704, 0xe836, 0x0, 0x1);
        gbc.writeMem(0x5958, { 0x2c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6093, gbc.sp());
        EXPECT(0x5959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0284
        gbc.setState(0x2472, 0x3468, 0x1ef0, 0xe38f, 0xc19a, 0xaa8b, 0x0, 0x0);
        gbc.writeMem(0x2472, { 0x2c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3468, gbc.sp());
        EXPECT(0x2473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0285
        gbc.setState(0x5d46, 0x5a64, 0x1f30, 0x3aec, 0x4ba8, 0x9681, 0x1, 0x1);
        gbc.writeMem(0x5d46, { 0x2c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5a64, gbc.sp());
        EXPECT(0x5d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0286
        gbc.setState(0x1ea7, 0x78c6, 0xca60, 0xcb9c, 0xa2af, 0x589d, 0x0, 0x0);
        gbc.writeMem(0x1ea7, { 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x78c6, gbc.sp());
        EXPECT(0x1ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0287
        gbc.setState(0x49ce, 0xb40e, 0xfa60, 0x588d, 0xac40, 0x18fa, 0x1, 0x1);
        gbc.writeMem(0x49ce, { 0x2c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb40e, gbc.sp());
        EXPECT(0x49cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0288
        gbc.setState(0x98c3, 0x5b95, 0x68c0, 0x5363, 0x2a04, 0x6347, 0x1, 0x1);
        gbc.writeMem(0x98c3, { 0x2c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5b95, gbc.sp());
        EXPECT(0x98c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x98c3));
        // 2C 0289
        gbc.setState(0xc420, 0x552, 0x5d40, 0x4c8, 0x87a9, 0x4de5, 0x1, 0x1);
        gbc.writeMem(0xc420, { 0x2c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x552, gbc.sp());
        EXPECT(0xc421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc420));
        // 2C 028A
        gbc.setState(0x37ef, 0x5036, 0x1a30, 0xc339, 0xb954, 0x49ff, 0x0, 0x1);
        gbc.writeMem(0x37ef, { 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5036, gbc.sp());
        EXPECT(0x37f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 028B
        gbc.setState(0x89c1, 0xe643, 0x1830, 0xad07, 0x612a, 0xb3b2, 0x0, 0x1);
        gbc.writeMem(0x89c1, { 0x2c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe643, gbc.sp());
        EXPECT(0x89c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x89c1));
        // 2C 028C
        gbc.setState(0x72a5, 0x2fd6, 0xaaa0, 0xa3c7, 0x1c22, 0x2118, 0x0, 0x1);
        gbc.writeMem(0x72a5, { 0x2c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2fd6, gbc.sp());
        EXPECT(0x72a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 028D
        gbc.setState(0xee4, 0x4a02, 0x9890, 0xb0bb, 0x32c4, 0xb54b, 0x1, 0x0);
        gbc.writeMem(0xee4, { 0x2c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4a02, gbc.sp());
        EXPECT(0xee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 028E
        gbc.setState(0xa9ca, 0x7822, 0xd1a0, 0xc7dd, 0xbd3, 0xb1e9, 0x0, 0x0);
        gbc.writeMem(0xa9ca, { 0x2c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7822, gbc.sp());
        EXPECT(0xa9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa9ca));
        // 2C 028F
        gbc.setState(0xcd72, 0x9af7, 0xb340, 0x5d34, 0x9981, 0xdf57, 0x1, 0x1);
        gbc.writeMem(0xcd72, { 0x2c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9af7, gbc.sp());
        EXPECT(0xcd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcd72));
        // 2C 0290
        gbc.setState(0x3d9, 0x935, 0x6ab0, 0x53ea, 0x2e0a, 0x76c, 0x1, 0x0);
        gbc.writeMem(0x3d9, { 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x935, gbc.sp());
        EXPECT(0x3da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0291
        gbc.setState(0x41d0, 0xfd6f, 0xb630, 0xc35e, 0xd2d3, 0x4668, 0x1, 0x0);
        gbc.writeMem(0x41d0, { 0x2c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfd6f, gbc.sp());
        EXPECT(0x41d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0292
        gbc.setState(0x382a, 0x6f13, 0x29d0, 0x5837, 0x638f, 0xae11, 0x0, 0x1);
        gbc.writeMem(0x382a, { 0x2c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6f13, gbc.sp());
        EXPECT(0x382b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0293
        gbc.setState(0x2f2c, 0x8f5e, 0x1010, 0xc407, 0x8152, 0xf9a4, 0x0, 0x1);
        gbc.writeMem(0x2f2c, { 0x2c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8f5e, gbc.sp());
        EXPECT(0x2f2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0294
        gbc.setState(0xc49e, 0xf82d, 0xd9b0, 0x5932, 0x532, 0xc0fa, 0x1, 0x0);
        gbc.writeMem(0xc49e, { 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf82d, gbc.sp());
        EXPECT(0xc49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc49e));
        // 2C 0295
        gbc.setState(0x6156, 0xa5c, 0x79f0, 0xc254, 0x6391, 0x69d9, 0x0, 0x1);
        gbc.writeMem(0x6156, { 0x2c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa5c, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0296
        gbc.setState(0xeec4, 0xc588, 0xd0d0, 0x496d, 0xa4d1, 0x2682, 0x1, 0x0);
        gbc.writeMem(0xeec4, { 0x2c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc588, gbc.sp());
        EXPECT(0xeec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeec4));
        // 2C 0297
        gbc.setState(0x70fc, 0x3667, 0x60c0, 0x1d75, 0x9769, 0x4a7d, 0x0, 0x0);
        gbc.writeMem(0x70fc, { 0x2c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3667, gbc.sp());
        EXPECT(0x70fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0298
        gbc.setState(0x6f1c, 0xd840, 0xcbb0, 0x8989, 0xbd35, 0x4ff8, 0x1, 0x0);
        gbc.writeMem(0x6f1c, { 0x2c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd840, gbc.sp());
        EXPECT(0x6f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0299
        gbc.setState(0xb76, 0xc464, 0xea20, 0xdc2b, 0xcdf, 0xf741, 0x0, 0x0);
        gbc.writeMem(0xb76, { 0x2c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc464, gbc.sp());
        EXPECT(0xb77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 029A
        gbc.setState(0xef03, 0xebce, 0xa0b0, 0x2a91, 0xa362, 0xe457, 0x1, 0x0);
        gbc.writeMem(0xef03, { 0x2c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xebce, gbc.sp());
        EXPECT(0xef04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xef03));
        // 2C 029B
        gbc.setState(0x7044, 0x28b6, 0x9990, 0xd55f, 0x1f1b, 0x79ae, 0x0, 0x0);
        gbc.writeMem(0x7044, { 0x2c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x28b6, gbc.sp());
        EXPECT(0x7045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 029C
        gbc.setState(0x249a, 0x3098, 0xc410, 0xe95b, 0x3971, 0x19b2, 0x1, 0x1);
        gbc.writeMem(0x249a, { 0x2c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3098, gbc.sp());
        EXPECT(0x249b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 029E
        gbc.setState(0x7b11, 0x5025, 0xab00, 0x424, 0x83a, 0x4bca, 0x1, 0x1);
        gbc.writeMem(0x7b11, { 0x2c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5025, gbc.sp());
        EXPECT(0x7b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 029F
        gbc.setState(0x3059, 0xffc0, 0x5060, 0x9d18, 0x57fe, 0xf005, 0x0, 0x1);
        gbc.writeMem(0x3059, { 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xffc0, gbc.sp());
        EXPECT(0x305a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02A0
        gbc.setState(0x5341, 0x91a3, 0xc240, 0x5f9f, 0xb24e, 0xddb8, 0x0, 0x0);
        gbc.writeMem(0x5341, { 0x2c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x91a3, gbc.sp());
        EXPECT(0x5342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02A1
        gbc.setState(0xe88e, 0x86b7, 0x2440, 0x352d, 0xfb6a, 0x7dbd, 0x1, 0x1);
        gbc.writeMem(0xe88e, { 0x2c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x86b7, gbc.sp());
        EXPECT(0xe88f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe88e));
        // 2C 02A2
        gbc.setState(0xc7d3, 0xabc3, 0x8c90, 0x8704, 0xe12a, 0xb004, 0x0, 0x1);
        gbc.writeMem(0xc7d3, { 0x2c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xabc3, gbc.sp());
        EXPECT(0xc7d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc7d3));
        // 2C 02A3
        gbc.setState(0xc72f, 0x3220, 0x9e30, 0x889, 0xf4d6, 0x1785, 0x1, 0x0);
        gbc.writeMem(0xc72f, { 0x2c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3220, gbc.sp());
        EXPECT(0xc730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc72f));
        // 2C 02A4
        gbc.setState(0xdca5, 0xb40f, 0x4410, 0xc732, 0x3ecc, 0x2fb3, 0x1, 0x0);
        gbc.writeMem(0xdca5, { 0x2c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb40f, gbc.sp());
        EXPECT(0xdca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdca5));
        // 2C 02A5
        gbc.setState(0xb6f, 0xc22d, 0xca90, 0x316a, 0xb9c, 0xf264, 0x0, 0x0);
        gbc.writeMem(0xb6f, { 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc22d, gbc.sp());
        EXPECT(0xb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02A6
        gbc.setState(0x7097, 0x115, 0x2bb0, 0xceae, 0x13f8, 0xaf58, 0x0, 0x0);
        gbc.writeMem(0x7097, { 0x2c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x115, gbc.sp());
        EXPECT(0x7098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02A7
        gbc.setState(0xc63c, 0xad6c, 0xad60, 0xd310, 0x1ff7, 0xea25, 0x1, 0x1);
        gbc.writeMem(0xc63c, { 0x2c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xad6c, gbc.sp());
        EXPECT(0xc63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc63c));
        // 2C 02A8
        gbc.setState(0x62fb, 0x7c70, 0x4ba0, 0x7a19, 0xccac, 0x7e5c, 0x1, 0x1);
        gbc.writeMem(0x62fb, { 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7c70, gbc.sp());
        EXPECT(0x62fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02A9
        gbc.setState(0xdc95, 0x4f86, 0xfe0, 0xa379, 0x2c41, 0xfcf5, 0x1, 0x0);
        gbc.writeMem(0xdc95, { 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4f86, gbc.sp());
        EXPECT(0xdc96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdc95));
        // 2C 02AA
        gbc.setState(0x53ca, 0x2f11, 0x1590, 0x6544, 0x2fc9, 0x4190, 0x1, 0x0);
        gbc.writeMem(0x53ca, { 0x2c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2f11, gbc.sp());
        EXPECT(0x53cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02AB
        gbc.setState(0x1867, 0xa99f, 0xdfb0, 0x7d3f, 0x9f10, 0x247d, 0x1, 0x1);
        gbc.writeMem(0x1867, { 0x2c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa99f, gbc.sp());
        EXPECT(0x1868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02AC
        gbc.setState(0x22d9, 0x2197, 0xcd80, 0x87e0, 0xd7c1, 0xd6fc, 0x0, 0x1);
        gbc.writeMem(0x22d9, { 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2197, gbc.sp());
        EXPECT(0x22da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02AD
        gbc.setState(0xc28a, 0xc430, 0xf40, 0x7e0c, 0xcb83, 0xe6e9, 0x1, 0x0);
        gbc.writeMem(0xc28a, { 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc430, gbc.sp());
        EXPECT(0xc28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc28a));
        // 2C 02AE
        gbc.setState(0x390f, 0x92d1, 0x76d0, 0xd8f8, 0xc4d9, 0x8731, 0x1, 0x0);
        gbc.writeMem(0x390f, { 0x2c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x92d1, gbc.sp());
        EXPECT(0x3910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02AF
        gbc.setState(0xdeeb, 0x17a, 0x9d10, 0xb8a5, 0x6967, 0x4b31, 0x0, 0x0);
        gbc.writeMem(0xdeeb, { 0x2c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x17a, gbc.sp());
        EXPECT(0xdeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdeeb));
        // 2C 02B0
        gbc.setState(0x1e4e, 0x9c97, 0xc9a0, 0xda45, 0x9de9, 0xf38c, 0x0, 0x0);
        gbc.writeMem(0x1e4e, { 0x2c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9c97, gbc.sp());
        EXPECT(0x1e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02B1
        gbc.setState(0xacc4, 0x990, 0x490, 0x6b01, 0xcdfb, 0x8e34, 0x0, 0x1);
        gbc.writeMem(0xacc4, { 0x2c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x990, gbc.sp());
        EXPECT(0xacc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xacc4));
        // 2C 02B2
        gbc.setState(0x9f1c, 0x1881, 0x5240, 0x7f9f, 0x4f47, 0x183e, 0x1, 0x0);
        gbc.writeMem(0x9f1c, { 0x2c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1881, gbc.sp());
        EXPECT(0x9f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9f1c));
        // 2C 02B3
        gbc.setState(0x39dd, 0x78d1, 0x57d0, 0xba05, 0x6106, 0x8f18, 0x0, 0x1);
        gbc.writeMem(0x39dd, { 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x78d1, gbc.sp());
        EXPECT(0x39de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02B4
        gbc.setState(0x32a2, 0x9945, 0x34d0, 0xcdb4, 0xba4e, 0x285, 0x1, 0x0);
        gbc.writeMem(0x32a2, { 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9945, gbc.sp());
        EXPECT(0x32a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02B5
        gbc.setState(0xe7cd, 0x29d9, 0x8010, 0x77ea, 0xe36d, 0xfa3e, 0x0, 0x1);
        gbc.writeMem(0xe7cd, { 0x2c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x29d9, gbc.sp());
        EXPECT(0xe7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe7cd));
        // 2C 02B6
        gbc.setState(0x87d7, 0xd7f1, 0x50a0, 0x4ad9, 0x5152, 0xf4bc, 0x0, 0x0);
        gbc.writeMem(0x87d7, { 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd7f1, gbc.sp());
        EXPECT(0x87d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x87d7));
        // 2C 02B7
        gbc.setState(0x897e, 0x5ef, 0xf7b0, 0xb190, 0x8207, 0x5293, 0x1, 0x0);
        gbc.writeMem(0x897e, { 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5ef, gbc.sp());
        EXPECT(0x897f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x897e));
        // 2C 02B8
        gbc.setState(0x12a8, 0x7aaf, 0x88c0, 0xe7b3, 0x2cc6, 0xc9f2, 0x0, 0x0);
        gbc.writeMem(0x12a8, { 0x2c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7aaf, gbc.sp());
        EXPECT(0x12a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02B9
        gbc.setState(0x4259, 0x65b7, 0x6310, 0xc41e, 0xfe55, 0x69f1, 0x0, 0x1);
        gbc.writeMem(0x4259, { 0x2c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x65b7, gbc.sp());
        EXPECT(0x425a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02BA
        gbc.setState(0x6c7c, 0x8d60, 0xeea0, 0x699c, 0x5feb, 0xd25f, 0x0, 0x1);
        gbc.writeMem(0x6c7c, { 0x2c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8d60, gbc.sp());
        EXPECT(0x6c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02BB
        gbc.setState(0xcbb7, 0x89d2, 0x4b80, 0x30f4, 0xf75a, 0x7a17, 0x1, 0x0);
        gbc.writeMem(0xcbb7, { 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x89d2, gbc.sp());
        EXPECT(0xcbb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcbb7));
        // 2C 02BC
        gbc.setState(0x1de4, 0x1b2e, 0xb880, 0x670d, 0xceba, 0x4794, 0x1, 0x1);
        gbc.writeMem(0x1de4, { 0x2c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1b2e, gbc.sp());
        EXPECT(0x1de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02BD
        gbc.setState(0xc93e, 0x269c, 0xdaa0, 0x6a29, 0xc00, 0xf27a, 0x0, 0x0);
        gbc.writeMem(0xc93e, { 0x2c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x269c, gbc.sp());
        EXPECT(0xc93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc93e));
        // 2C 02BE
        gbc.setState(0xf45, 0x5834, 0x6090, 0x3be9, 0x1d28, 0x1fac, 0x1, 0x0);
        gbc.writeMem(0xf45, { 0x2c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5834, gbc.sp());
        EXPECT(0xf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02BF
        gbc.setState(0xa2ed, 0xc6d6, 0x1160, 0x2a7, 0x8d3b, 0xc392, 0x1, 0x1);
        gbc.writeMem(0xa2ed, { 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc6d6, gbc.sp());
        EXPECT(0xa2ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa2ed));
        // 2C 02C0
        gbc.setState(0x5f6b, 0x93c, 0xefe0, 0xa4f7, 0xf530, 0xdc5b, 0x1, 0x0);
        gbc.writeMem(0x5f6b, { 0x2c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x93c, gbc.sp());
        EXPECT(0x5f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02C1
        gbc.setState(0x1273, 0x3db0, 0xe6d0, 0x5d2, 0xa188, 0x6b8a, 0x1, 0x1);
        gbc.writeMem(0x1273, { 0x2c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3db0, gbc.sp());
        EXPECT(0x1274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02C2
        gbc.setState(0x310e, 0x25fb, 0x1530, 0x1031, 0x19d9, 0x39e4, 0x0, 0x1);
        gbc.writeMem(0x310e, { 0x2c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x25fb, gbc.sp());
        EXPECT(0x310f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02C3
        gbc.setState(0xc044, 0x83b9, 0x20a0, 0x5e14, 0x37c3, 0xf098, 0x1, 0x1);
        gbc.writeMem(0xc044, { 0x2c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x83b9, gbc.sp());
        EXPECT(0xc045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc044));
        // 2C 02C4
        gbc.setState(0x5fb3, 0x2b76, 0xf110, 0x33a6, 0x8aa, 0xf875, 0x0, 0x0);
        gbc.writeMem(0x5fb3, { 0x2c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2b76, gbc.sp());
        EXPECT(0x5fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02C5
        gbc.setState(0x2a6f, 0x8b9a, 0x400, 0x72ad, 0xca44, 0xf195, 0x1, 0x0);
        gbc.writeMem(0x2a6f, { 0x2c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8b9a, gbc.sp());
        EXPECT(0x2a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02C6
        gbc.setState(0x9ff4, 0xedc5, 0x2fe0, 0x34d5, 0xbec1, 0x9dc2, 0x1, 0x0);
        gbc.writeMem(0x9ff4, { 0x2c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xedc5, gbc.sp());
        EXPECT(0x9ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9ff4));
        // 2C 02C7
        gbc.setState(0x2b5f, 0xd840, 0xd900, 0x95d5, 0x6025, 0x6eda, 0x0, 0x1);
        gbc.writeMem(0x2b5f, { 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd840, gbc.sp());
        EXPECT(0x2b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02C8
        gbc.setState(0xb552, 0x8554, 0xae50, 0x9a1c, 0x216f, 0xb46b, 0x1, 0x0);
        gbc.writeMem(0xb552, { 0x2c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8554, gbc.sp());
        EXPECT(0xb553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb552));
        // 2C 02C9
        gbc.setState(0x61b0, 0x5941, 0x8830, 0x11a5, 0x6be3, 0xe08e, 0x0, 0x1);
        gbc.writeMem(0x61b0, { 0x2c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5941, gbc.sp());
        EXPECT(0x61b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02CA
        gbc.setState(0x6dd5, 0xdde3, 0xf010, 0xb039, 0x8f70, 0xf090, 0x0, 0x0);
        gbc.writeMem(0x6dd5, { 0x2c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdde3, gbc.sp());
        EXPECT(0x6dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02CB
        gbc.setState(0x2428, 0x402a, 0xade0, 0x5775, 0xc7f0, 0x4650, 0x1, 0x0);
        gbc.writeMem(0x2428, { 0x2c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x402a, gbc.sp());
        EXPECT(0x2429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02CC
        gbc.setState(0xd04e, 0xa17, 0xdd10, 0x3ef7, 0xaa46, 0x8394, 0x0, 0x1);
        gbc.writeMem(0xd04e, { 0x2c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa17, gbc.sp());
        EXPECT(0xd04f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd04e));
        // 2C 02CD
        gbc.setState(0x7082, 0xbf57, 0x4e30, 0x42fa, 0xe555, 0xaae6, 0x1, 0x0);
        gbc.writeMem(0x7082, { 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbf57, gbc.sp());
        EXPECT(0x7083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02CE
        gbc.setState(0x8fa6, 0x60af, 0x4a00, 0x8b93, 0xe91d, 0x7775, 0x1, 0x1);
        gbc.writeMem(0x8fa6, { 0x2c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x60af, gbc.sp());
        EXPECT(0x8fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8fa6));
        // 2C 02CF
        gbc.setState(0x3ae5, 0x9d18, 0x6000, 0x9b60, 0x6b0f, 0xa69c, 0x1, 0x1);
        gbc.writeMem(0x3ae5, { 0x2c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9d18, gbc.sp());
        EXPECT(0x3ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02D0
        gbc.setState(0x32cd, 0x6dac, 0x4640, 0x41b5, 0x1a8b, 0x608a, 0x0, 0x1);
        gbc.writeMem(0x32cd, { 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6dac, gbc.sp());
        EXPECT(0x32ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02D1
        gbc.setState(0x972c, 0x9e62, 0x8860, 0x690c, 0x874, 0xe8eb, 0x1, 0x0);
        gbc.writeMem(0x972c, { 0x2c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9e62, gbc.sp());
        EXPECT(0x972d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x972c));
        // 2C 02D2
        gbc.setState(0x4f9b, 0x936b, 0x38e0, 0xbc16, 0x7a13, 0x5bef, 0x1, 0x1);
        gbc.writeMem(0x4f9b, { 0x2c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x936b, gbc.sp());
        EXPECT(0x4f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02D4
        gbc.setState(0x1eee, 0x3818, 0xecb0, 0x78e0, 0xd738, 0x1b28, 0x0, 0x0);
        gbc.writeMem(0x1eee, { 0x2c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3818, gbc.sp());
        EXPECT(0x1eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02D5
        gbc.setState(0x6c64, 0xa732, 0xd3c0, 0x253b, 0x9b91, 0xb542, 0x1, 0x0);
        gbc.writeMem(0x6c64, { 0x2c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa732, gbc.sp());
        EXPECT(0x6c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02D6
        gbc.setState(0x41cf, 0xaf20, 0x910, 0x213a, 0xda21, 0x3083, 0x1, 0x1);
        gbc.writeMem(0x41cf, { 0x2c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xaf20, gbc.sp());
        EXPECT(0x41d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02D7
        gbc.setState(0xc7d2, 0x9039, 0xa5a0, 0x13d, 0xfc9d, 0xe7df, 0x0, 0x1);
        gbc.writeMem(0xc7d2, { 0x2c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9039, gbc.sp());
        EXPECT(0xc7d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc7d2));
        // 2C 02D8
        gbc.setState(0xc472, 0x5c75, 0xb900, 0xf2bf, 0xa8fa, 0x51c2, 0x1, 0x0);
        gbc.writeMem(0xc472, { 0x2c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5c75, gbc.sp());
        EXPECT(0xc473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc472));
        // 2C 02D9
        gbc.setState(0x7a6a, 0xafa0, 0x6420, 0xfc93, 0x440f, 0xe75, 0x1, 0x0);
        gbc.writeMem(0x7a6a, { 0x2c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xafa0, gbc.sp());
        EXPECT(0x7a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02DA
        gbc.setState(0x5168, 0xb333, 0x8eb0, 0xb160, 0xee6f, 0xa123, 0x0, 0x1);
        gbc.writeMem(0x5168, { 0x2c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb333, gbc.sp());
        EXPECT(0x5169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02DB
        gbc.setState(0xe532, 0x1d5c, 0xde20, 0xc289, 0xbcb8, 0x4542, 0x1, 0x1);
        gbc.writeMem(0xe532, { 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1d5c, gbc.sp());
        EXPECT(0xe533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe532));
        // 2C 02DC
        gbc.setState(0x7e80, 0x6b5d, 0xb710, 0x3f67, 0x35b, 0x5044, 0x0, 0x1);
        gbc.writeMem(0x7e80, { 0x2c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6b5d, gbc.sp());
        EXPECT(0x7e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02DD
        gbc.setState(0x90a, 0xa704, 0xf210, 0xc1d7, 0xa98d, 0x7565, 0x1, 0x1);
        gbc.writeMem(0x90a, { 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa704, gbc.sp());
        EXPECT(0x90b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02DE
        gbc.setState(0x6041, 0x257, 0xa000, 0xa634, 0x54f9, 0x6a84, 0x0, 0x1);
        gbc.writeMem(0x6041, { 0x2c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x257, gbc.sp());
        EXPECT(0x6042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02DF
        gbc.setState(0xdfea, 0xf546, 0x9b20, 0xeb41, 0x6806, 0xcce0, 0x1, 0x0);
        gbc.writeMem(0xdfea, { 0x2c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf546, gbc.sp());
        EXPECT(0xdfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdfea));
        // 2C 02E0
        gbc.setState(0x2818, 0xc48f, 0x6fc0, 0x3f75, 0x7e0d, 0x43bb, 0x0, 0x1);
        gbc.writeMem(0x2818, { 0x2c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc48f, gbc.sp());
        EXPECT(0x2819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02E1
        gbc.setState(0x2a0b, 0x2d82, 0x4100, 0xf466, 0xda49, 0xc9da, 0x1, 0x0);
        gbc.writeMem(0x2a0b, { 0x2c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2d82, gbc.sp());
        EXPECT(0x2a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02E2
        gbc.setState(0x58ee, 0xf9c, 0x3430, 0xeeaa, 0x90c, 0xcc7c, 0x0, 0x1);
        gbc.writeMem(0x58ee, { 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf9c, gbc.sp());
        EXPECT(0x58ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02E3
        gbc.setState(0x2d7a, 0xba61, 0xbbf0, 0x7c35, 0x6c42, 0x118, 0x0, 0x1);
        gbc.writeMem(0x2d7a, { 0x2c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xba61, gbc.sp());
        EXPECT(0x2d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02E4
        gbc.setState(0x8222, 0x4307, 0xc010, 0x61e7, 0x628, 0x3b9, 0x1, 0x0);
        gbc.writeMem(0x8222, { 0x2c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4307, gbc.sp());
        EXPECT(0x8223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8222));
        // 2C 02E6
        gbc.setState(0xf29, 0xcf8, 0xa930, 0xd9f7, 0xb5ad, 0xd52a, 0x0, 0x1);
        gbc.writeMem(0xf29, { 0x2c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcf8, gbc.sp());
        EXPECT(0xf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02E7
        gbc.setState(0xa432, 0xbeaa, 0xa120, 0xeab3, 0xaf79, 0x9ed1, 0x1, 0x1);
        gbc.writeMem(0xa432, { 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbeaa, gbc.sp());
        EXPECT(0xa433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa432));
        // 2C 02E8
        gbc.setState(0x35ee, 0x6f0e, 0x59e0, 0x9dea, 0x6f, 0xb87, 0x0, 0x0);
        gbc.writeMem(0x35ee, { 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6f0e, gbc.sp());
        EXPECT(0x35ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02E9
        gbc.setState(0x4448, 0x24c0, 0x5f60, 0xd857, 0x31c6, 0xa2e3, 0x0, 0x0);
        gbc.writeMem(0x4448, { 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x24c0, gbc.sp());
        EXPECT(0x4449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02EA
        gbc.setState(0x270f, 0xcf0f, 0x4310, 0x7ec0, 0x87ee, 0xd01a, 0x0, 0x0);
        gbc.writeMem(0x270f, { 0x2c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcf0f, gbc.sp());
        EXPECT(0x2710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02EC
        gbc.setState(0x2845, 0x57ba, 0xe1f0, 0xd0f5, 0x7778, 0x62b7, 0x0, 0x1);
        gbc.writeMem(0x2845, { 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x57ba, gbc.sp());
        EXPECT(0x2846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02ED
        gbc.setState(0x84a9, 0x86a, 0x26a0, 0x3849, 0x2ba4, 0x8c94, 0x0, 0x0);
        gbc.writeMem(0x84a9, { 0x2c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x86a, gbc.sp());
        EXPECT(0x84aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x84a9));
        // 2C 02EE
        gbc.setState(0xc8a4, 0xba9d, 0x3e20, 0x8326, 0x9641, 0xe43, 0x1, 0x1);
        gbc.writeMem(0xc8a4, { 0x2c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xba9d, gbc.sp());
        EXPECT(0xc8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc8a4));
        // 2C 02EF
        gbc.setState(0x477c, 0x1fe1, 0x8f80, 0xa446, 0x4cc5, 0x1649, 0x1, 0x0);
        gbc.writeMem(0x477c, { 0x2c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1fe1, gbc.sp());
        EXPECT(0x477d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02F0
        gbc.setState(0xa343, 0x3a8, 0x7150, 0x968c, 0x53e1, 0x3d43, 0x1, 0x1);
        gbc.writeMem(0xa343, { 0x2c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3a8, gbc.sp());
        EXPECT(0xa344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa343));
        // 2C 02F1
        gbc.setState(0xdde9, 0xd048, 0xc9c0, 0xf170, 0x2e89, 0xfe56, 0x0, 0x0);
        gbc.writeMem(0xdde9, { 0x2c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd048, gbc.sp());
        EXPECT(0xddea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdde9));
        // 2C 02F2
        gbc.setState(0x6d17, 0x791d, 0x4450, 0x65e1, 0x901e, 0x1bf5, 0x1, 0x1);
        gbc.writeMem(0x6d17, { 0x2c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x791d, gbc.sp());
        EXPECT(0x6d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02F3
        gbc.setState(0x7804, 0xbaac, 0xb310, 0xeba2, 0x8da, 0x3187, 0x0, 0x1);
        gbc.writeMem(0x7804, { 0x2c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbaac, gbc.sp());
        EXPECT(0x7805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02F4
        gbc.setState(0x9bc, 0x880c, 0x8d0, 0xfd06, 0xfab1, 0xf106, 0x1, 0x0);
        gbc.writeMem(0x9bc, { 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x880c, gbc.sp());
        EXPECT(0x9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02F5
        gbc.setState(0x74b9, 0xe7ef, 0x2990, 0x7b1b, 0x448, 0x4aca, 0x0, 0x0);
        gbc.writeMem(0x74b9, { 0x2c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe7ef, gbc.sp());
        EXPECT(0x74ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02F6
        gbc.setState(0x1280, 0x6722, 0xc530, 0x7b, 0x1580, 0x69ae, 0x0, 0x0);
        gbc.writeMem(0x1280, { 0x2c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6722, gbc.sp());
        EXPECT(0x1281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02F7
        gbc.setState(0x6986, 0x37fb, 0x7f80, 0x5434, 0x855e, 0xc22f, 0x1, 0x0);
        gbc.writeMem(0x6986, { 0x2c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x37fb, gbc.sp());
        EXPECT(0x6987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02F8
        gbc.setState(0x2fea, 0x40a4, 0xfc90, 0x20e6, 0xfaeb, 0xacc7, 0x1, 0x0);
        gbc.writeMem(0x2fea, { 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x40a4, gbc.sp());
        EXPECT(0x2feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02F9
        gbc.setState(0xa08c, 0x8eea, 0x85f0, 0xe556, 0xffbe, 0x9dc8, 0x0, 0x0);
        gbc.writeMem(0xa08c, { 0x2c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8eea, gbc.sp());
        EXPECT(0xa08d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa08c));
        // 2C 02FA
        gbc.setState(0x9da, 0x1209, 0x2330, 0x70d0, 0x18c5, 0xf24d, 0x0, 0x0);
        gbc.writeMem(0x9da, { 0x2c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1209, gbc.sp());
        EXPECT(0x9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 02FB
        gbc.setState(0x5eba, 0x40d4, 0x65a0, 0xdd04, 0x59c1, 0x30bb, 0x0, 0x0);
        gbc.writeMem(0x5eba, { 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x40d4, gbc.sp());
        EXPECT(0x5ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 02FC
        gbc.setState(0xe44f, 0x3c4c, 0x8390, 0x9906, 0xfc6d, 0xc5ba, 0x0, 0x0);
        gbc.writeMem(0xe44f, { 0x2c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3c4c, gbc.sp());
        EXPECT(0xe450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe44f));
        // 2C 02FD
        gbc.setState(0xb1ba, 0x1546, 0x4940, 0xd21f, 0xaadf, 0x833c, 0x0, 0x1);
        gbc.writeMem(0xb1ba, { 0x2c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1546, gbc.sp());
        EXPECT(0xb1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb1ba));
        // 2C 02FE
        gbc.setState(0xe476, 0x634, 0x7800, 0xd4ce, 0xf781, 0xf420, 0x0, 0x0);
        gbc.writeMem(0xe476, { 0x2c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x634, gbc.sp());
        EXPECT(0xe477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe476));
        // 2C 02FF
        gbc.setState(0xd9dc, 0x3e9a, 0xac60, 0x86fc, 0x949, 0xf843, 0x0, 0x1);
        gbc.writeMem(0xd9dc, { 0x2c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3e9a, gbc.sp());
        EXPECT(0xd9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd9dc));
        // 2C 0300
        gbc.setState(0x3bf1, 0xd854, 0xd20, 0x8f2e, 0x9b9f, 0x98a2, 0x0, 0x0);
        gbc.writeMem(0x3bf1, { 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd854, gbc.sp());
        EXPECT(0x3bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0301
        gbc.setState(0x3992, 0xc7df, 0x5d40, 0x8872, 0x3e7f, 0xc064, 0x0, 0x0);
        gbc.writeMem(0x3992, { 0x2c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc7df, gbc.sp());
        EXPECT(0x3993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0302
        gbc.setState(0xe556, 0x5371, 0x1c70, 0x973, 0x60d6, 0x820e, 0x1, 0x1);
        gbc.writeMem(0xe556, { 0x2c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5371, gbc.sp());
        EXPECT(0xe557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe556));
        // 2C 0303
        gbc.setState(0xfae, 0xf05, 0x81b0, 0x15c9, 0xe9b0, 0xb13f, 0x1, 0x1);
        gbc.writeMem(0xfae, { 0x2c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf05, gbc.sp());
        EXPECT(0xfaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0304
        gbc.setState(0xc615, 0x92d9, 0xb360, 0xe2d9, 0x6b1f, 0x4678, 0x0, 0x1);
        gbc.writeMem(0xc615, { 0x2c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x92d9, gbc.sp());
        EXPECT(0xc616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc615));
        // 2C 0305
        gbc.setState(0x1e54, 0x5867, 0xdec0, 0xd090, 0xa406, 0x4fd6, 0x1, 0x1);
        gbc.writeMem(0x1e54, { 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5867, gbc.sp());
        EXPECT(0x1e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0306
        gbc.setState(0xb47e, 0xa0a, 0xda60, 0x3850, 0xa4ba, 0xada0, 0x0, 0x1);
        gbc.writeMem(0xb47e, { 0x2c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa0a, gbc.sp());
        EXPECT(0xb47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb47e));
        // 2C 0307
        gbc.setState(0x4f2e, 0x6ab0, 0xdae0, 0xd990, 0xa67c, 0x2cf2, 0x0, 0x1);
        gbc.writeMem(0x4f2e, { 0x2c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6ab0, gbc.sp());
        EXPECT(0x4f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0308
        gbc.setState(0xc4fb, 0x606f, 0xbf60, 0xd030, 0x9116, 0x8bbc, 0x0, 0x1);
        gbc.writeMem(0xc4fb, { 0x2c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x606f, gbc.sp());
        EXPECT(0xc4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc4fb));
        // 2C 0309
        gbc.setState(0xb352, 0xdaae, 0xbe20, 0xd7b5, 0xeea5, 0x3016, 0x0, 0x1);
        gbc.writeMem(0xb352, { 0x2c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdaae, gbc.sp());
        EXPECT(0xb353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb352));
        // 2C 030A
        gbc.setState(0x3e31, 0x1685, 0x5a60, 0x1952, 0xbc9a, 0x8cc3, 0x1, 0x1);
        gbc.writeMem(0x3e31, { 0x2c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1685, gbc.sp());
        EXPECT(0x3e32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 030B
        gbc.setState(0x42ce, 0x9361, 0xee90, 0xfe7c, 0x67fc, 0xf9e4, 0x1, 0x1);
        gbc.writeMem(0x42ce, { 0x2c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9361, gbc.sp());
        EXPECT(0x42cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 030C
        gbc.setState(0x853, 0x3fc7, 0xbd80, 0xb2ea, 0x67f6, 0x4044, 0x0, 0x0);
        gbc.writeMem(0x853, { 0x2c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3fc7, gbc.sp());
        EXPECT(0x854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 030D
        gbc.setState(0x141c, 0xad0c, 0x5f10, 0xc0b2, 0xb3c9, 0x89f8, 0x0, 0x1);
        gbc.writeMem(0x141c, { 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xad0c, gbc.sp());
        EXPECT(0x141d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0310
        gbc.setState(0x8f99, 0x70b3, 0xf450, 0x8a39, 0xa108, 0x5bd7, 0x0, 0x1);
        gbc.writeMem(0x8f99, { 0x2c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x70b3, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8f99));
        // 2C 0311
        gbc.setState(0x46a, 0xeef4, 0x5450, 0x4845, 0xc768, 0x8402, 0x1, 0x0);
        gbc.writeMem(0x46a, { 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xeef4, gbc.sp());
        EXPECT(0x46b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0312
        gbc.setState(0x16e4, 0xd50, 0xb760, 0xf61b, 0xe80c, 0x9e37, 0x1, 0x1);
        gbc.writeMem(0x16e4, { 0x2c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd50, gbc.sp());
        EXPECT(0x16e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0313
        gbc.setState(0x309a, 0x77fb, 0x4020, 0xc25b, 0x1e02, 0xfa06, 0x0, 0x1);
        gbc.writeMem(0x309a, { 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x77fb, gbc.sp());
        EXPECT(0x309b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0314
        gbc.setState(0x5bf2, 0x2d6e, 0x2990, 0x35e7, 0x2da5, 0x76ef, 0x0, 0x1);
        gbc.writeMem(0x5bf2, { 0x2c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2d6e, gbc.sp());
        EXPECT(0x5bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0315
        gbc.setState(0xd488, 0xd186, 0xc9e0, 0xc777, 0x1134, 0x9cf6, 0x1, 0x0);
        gbc.writeMem(0xd488, { 0x2c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd186, gbc.sp());
        EXPECT(0xd489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd488));
        // 2C 0316
        gbc.setState(0xbda1, 0xd965, 0xf790, 0xf27c, 0x3723, 0xee32, 0x0, 0x1);
        gbc.writeMem(0xbda1, { 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd965, gbc.sp());
        EXPECT(0xbda2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbda1));
        // 2C 0317
        gbc.setState(0x6233, 0xdf76, 0xee30, 0xd6b6, 0x9514, 0x37a2, 0x1, 0x1);
        gbc.writeMem(0x6233, { 0x2c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdf76, gbc.sp());
        EXPECT(0x6234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0318
        gbc.setState(0x5014, 0x2a7f, 0xa30, 0xa40d, 0x13f3, 0x27a9, 0x1, 0x0);
        gbc.writeMem(0x5014, { 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0x5015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0319
        gbc.setState(0xdb2e, 0x5d51, 0xf7d0, 0x81dc, 0xa80b, 0x5238, 0x1, 0x1);
        gbc.writeMem(0xdb2e, { 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5d51, gbc.sp());
        EXPECT(0xdb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdb2e));
        // 2C 031A
        gbc.setState(0xdfc, 0x70f6, 0x9a10, 0xb7ff, 0xbbc7, 0x4ea3, 0x0, 0x0);
        gbc.writeMem(0xdfc, { 0x2c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x70f6, gbc.sp());
        EXPECT(0xdfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 031B
        gbc.setState(0x1743, 0x9dd5, 0x760, 0x6e7c, 0xdb17, 0x70c3, 0x0, 0x1);
        gbc.writeMem(0x1743, { 0x2c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9dd5, gbc.sp());
        EXPECT(0x1744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 031C
        gbc.setState(0x9364, 0x8e42, 0xfc70, 0x1aa4, 0xf2d3, 0xd321, 0x0, 0x1);
        gbc.writeMem(0x9364, { 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8e42, gbc.sp());
        EXPECT(0x9365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9364));
        // 2C 031D
        gbc.setState(0x3527, 0x7436, 0x1260, 0xca13, 0xf811, 0xdd01, 0x0, 0x0);
        gbc.writeMem(0x3527, { 0x2c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7436, gbc.sp());
        EXPECT(0x3528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 031E
        gbc.setState(0xcc4, 0x8d4f, 0xf420, 0x1de5, 0xc987, 0x74c0, 0x0, 0x0);
        gbc.writeMem(0xcc4, { 0x2c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8d4f, gbc.sp());
        EXPECT(0xcc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 031F
        gbc.setState(0x9099, 0x32c0, 0xd0c0, 0x41c0, 0x26fe, 0x856c, 0x0, 0x0);
        gbc.writeMem(0x9099, { 0x2c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x32c0, gbc.sp());
        EXPECT(0x909a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9099));
        // 2C 0320
        gbc.setState(0x9d70, 0x6f6c, 0x8aa0, 0x5352, 0xcc92, 0x796b, 0x1, 0x0);
        gbc.writeMem(0x9d70, { 0x2c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6f6c, gbc.sp());
        EXPECT(0x9d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9d70));
        // 2C 0321
        gbc.setState(0xcf3b, 0x3dd5, 0xd230, 0xb3f2, 0xb42c, 0x75c3, 0x1, 0x1);
        gbc.writeMem(0xcf3b, { 0x2c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3dd5, gbc.sp());
        EXPECT(0xcf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcf3b));
        // 2C 0322
        gbc.setState(0xd4ca, 0xb7dc, 0xafc0, 0xdbe3, 0x762c, 0xd813, 0x0, 0x1);
        gbc.writeMem(0xd4ca, { 0x2c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb7dc, gbc.sp());
        EXPECT(0xd4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd4ca));
        // 2C 0323
        gbc.setState(0x4239, 0x29e7, 0x2e40, 0x64c, 0x56dd, 0x8b0f, 0x1, 0x0);
        gbc.writeMem(0x4239, { 0x2c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x29e7, gbc.sp());
        EXPECT(0x423a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0324
        gbc.setState(0x6298, 0x66cf, 0x20d0, 0xb12d, 0xf6dc, 0xfa7f, 0x1, 0x1);
        gbc.writeMem(0x6298, { 0x2c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x66cf, gbc.sp());
        EXPECT(0x6299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0325
        gbc.setState(0x941b, 0xbcbc, 0xdd30, 0x3025, 0x9be9, 0xd436, 0x0, 0x0);
        gbc.writeMem(0x941b, { 0x2c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbcbc, gbc.sp());
        EXPECT(0x941c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x941b));
        // 2C 0326
        gbc.setState(0x81bd, 0x9b7d, 0xc2e0, 0x5739, 0xf4ad, 0xc46, 0x1, 0x0);
        gbc.writeMem(0x81bd, { 0x2c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9b7d, gbc.sp());
        EXPECT(0x81be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x81bd));
        // 2C 0327
        gbc.setState(0xb613, 0xc6a6, 0x2490, 0xbbfe, 0x3e6c, 0xd750, 0x1, 0x0);
        gbc.writeMem(0xb613, { 0x2c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc6a6, gbc.sp());
        EXPECT(0xb614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb613));
        // 2C 0328
        gbc.setState(0x62f2, 0x699, 0x8030, 0xc980, 0xed78, 0x1799, 0x1, 0x0);
        gbc.writeMem(0x62f2, { 0x2c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x699, gbc.sp());
        EXPECT(0x62f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0329
        gbc.setState(0xc5c1, 0xac0e, 0xb5e0, 0x263a, 0xb196, 0x7133, 0x0, 0x0);
        gbc.writeMem(0xc5c1, { 0x2c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xac0e, gbc.sp());
        EXPECT(0xc5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc5c1));
        // 2C 032A
        gbc.setState(0xbe0e, 0x5a4c, 0xdd0, 0xb922, 0x4ae8, 0xba2, 0x0, 0x1);
        gbc.writeMem(0xbe0e, { 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5a4c, gbc.sp());
        EXPECT(0xbe0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbe0e));
        // 2C 032B
        gbc.setState(0x60b8, 0xe338, 0x52a0, 0x62e3, 0x8129, 0xdcfd, 0x0, 0x1);
        gbc.writeMem(0x60b8, { 0x2c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe338, gbc.sp());
        EXPECT(0x60b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 032C
        gbc.setState(0x31e0, 0xffa0, 0xbbf0, 0x8651, 0x5b62, 0x4636, 0x0, 0x0);
        gbc.writeMem(0x31e0, { 0x2c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xffa0, gbc.sp());
        EXPECT(0x31e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 032D
        gbc.setState(0x1fb1, 0xa25d, 0x5ab0, 0x7dec, 0xfb4, 0x90ee, 0x0, 0x0);
        gbc.writeMem(0x1fb1, { 0x2c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa25d, gbc.sp());
        EXPECT(0x1fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 032E
        gbc.setState(0xd0b0, 0xabcb, 0x9de0, 0x4741, 0xf2bd, 0x230d, 0x0, 0x0);
        gbc.writeMem(0xd0b0, { 0x2c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xabcb, gbc.sp());
        EXPECT(0xd0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd0b0));
        // 2C 0330
        gbc.setState(0x8dbc, 0xd10c, 0x3440, 0x3773, 0x15ec, 0x90e1, 0x0, 0x1);
        gbc.writeMem(0x8dbc, { 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd10c, gbc.sp());
        EXPECT(0x8dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8dbc));
        // 2C 0331
        gbc.setState(0x6dee, 0x4f12, 0xcd50, 0xfbdc, 0xe78c, 0x8ae, 0x0, 0x0);
        gbc.writeMem(0x6dee, { 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4f12, gbc.sp());
        EXPECT(0x6def, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0333
        gbc.setState(0xc07a, 0xd7b0, 0xf870, 0xd112, 0x2efe, 0x6a48, 0x1, 0x0);
        gbc.writeMem(0xc07a, { 0x2c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd7b0, gbc.sp());
        EXPECT(0xc07b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc07a));
        // 2C 0334
        gbc.setState(0xa31f, 0x5886, 0x2a00, 0xb023, 0x977c, 0xbe16, 0x1, 0x0);
        gbc.writeMem(0xa31f, { 0x2c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5886, gbc.sp());
        EXPECT(0xa320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa31f));
        // 2C 0335
        gbc.setState(0xe8a5, 0xf723, 0x1000, 0x9f91, 0x37b5, 0x4486, 0x0, 0x0);
        gbc.writeMem(0xe8a5, { 0x2c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf723, gbc.sp());
        EXPECT(0xe8a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe8a5));
        // 2C 0336
        gbc.setState(0xcd31, 0x1939, 0x3250, 0x5925, 0xe90, 0x4065, 0x1, 0x0);
        gbc.writeMem(0xcd31, { 0x2c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1939, gbc.sp());
        EXPECT(0xcd32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcd31));
        // 2C 0337
        gbc.setState(0x5a2f, 0x5e94, 0x310, 0x6da0, 0xdc9f, 0xa5fe, 0x0, 0x0);
        gbc.writeMem(0x5a2f, { 0x2c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5e94, gbc.sp());
        EXPECT(0x5a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0338
        gbc.setState(0x9822, 0xfee3, 0xc970, 0x4fdf, 0x3e47, 0xf8ac, 0x0, 0x0);
        gbc.writeMem(0x9822, { 0x2c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfee3, gbc.sp());
        EXPECT(0x9823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9822));
        // 2C 0339
        gbc.setState(0x37be, 0x9fdd, 0x3790, 0x7279, 0x77c5, 0xef31, 0x1, 0x1);
        gbc.writeMem(0x37be, { 0x2c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9fdd, gbc.sp());
        EXPECT(0x37bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 033B
        gbc.setState(0x9e14, 0xca94, 0xc50, 0xcc54, 0x1ce0, 0x42f0, 0x0, 0x0);
        gbc.writeMem(0x9e14, { 0x2c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xca94, gbc.sp());
        EXPECT(0x9e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9e14));
        // 2C 033C
        gbc.setState(0x7f8c, 0x6360, 0xdf30, 0x2d18, 0x1814, 0xcb39, 0x1, 0x1);
        gbc.writeMem(0x7f8c, { 0x2c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6360, gbc.sp());
        EXPECT(0x7f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 033D
        gbc.setState(0xe565, 0xb970, 0x4210, 0xac41, 0x4ab6, 0x6cd, 0x1, 0x0);
        gbc.writeMem(0xe565, { 0x2c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb970, gbc.sp());
        EXPECT(0xe566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe565));
        // 2C 033E
        gbc.setState(0x7635, 0xc9d4, 0xef70, 0x97f4, 0x286f, 0x314, 0x1, 0x1);
        gbc.writeMem(0x7635, { 0x2c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc9d4, gbc.sp());
        EXPECT(0x7636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 033F
        gbc.setState(0x373f, 0x49cb, 0xf280, 0xe849, 0x59a9, 0xbab9, 0x1, 0x1);
        gbc.writeMem(0x373f, { 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x49cb, gbc.sp());
        EXPECT(0x3740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0340
        gbc.setState(0x6d33, 0xcf60, 0xf4b0, 0xaee0, 0x1e36, 0xee40, 0x1, 0x0);
        gbc.writeMem(0x6d33, { 0x2c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcf60, gbc.sp());
        EXPECT(0x6d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0341
        gbc.setState(0x1049, 0xff48, 0xff00, 0x417d, 0x1b50, 0x416c, 0x1, 0x1);
        gbc.writeMem(0x1049, { 0x2c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xff48, gbc.sp());
        EXPECT(0x104a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0343
        gbc.setState(0x124f, 0xe89c, 0x40, 0xb449, 0xf994, 0xaa18, 0x0, 0x1);
        gbc.writeMem(0x124f, { 0x2c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe89c, gbc.sp());
        EXPECT(0x1250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0344
        gbc.setState(0xd049, 0xfa1a, 0x2e00, 0xb8d5, 0xa843, 0xa954, 0x0, 0x0);
        gbc.writeMem(0xd049, { 0x2c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfa1a, gbc.sp());
        EXPECT(0xd04a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd049));
        // 2C 0345
        gbc.setState(0x347d, 0x476b, 0xf260, 0xf98b, 0x9ed5, 0xfd1a, 0x0, 0x1);
        gbc.writeMem(0x347d, { 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x476b, gbc.sp());
        EXPECT(0x347e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0346
        gbc.setState(0xe3af, 0x5dc, 0x5c40, 0xb94f, 0xf5a6, 0xf5d3, 0x1, 0x0);
        gbc.writeMem(0xe3af, { 0x2c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5dc, gbc.sp());
        EXPECT(0xe3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe3af));
        // 2C 0347
        gbc.setState(0x8242, 0x6239, 0x1ae0, 0x5e63, 0x3f58, 0x7c14, 0x0, 0x0);
        gbc.writeMem(0x8242, { 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6239, gbc.sp());
        EXPECT(0x8243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8242));
        // 2C 0348
        gbc.setState(0x2e, 0xbeb8, 0xe6b0, 0x1780, 0xef3f, 0x92f9, 0x1, 0x0);
        gbc.writeMem(0x2e, { 0x2c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbeb8, gbc.sp());
        EXPECT(0x2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0349
        gbc.setState(0xcac1, 0x9f3e, 0x980, 0xfabc, 0xd23c, 0xd2c0, 0x0, 0x0);
        gbc.writeMem(0xcac1, { 0x2c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9f3e, gbc.sp());
        EXPECT(0xcac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xcac1));
        // 2C 034B
        gbc.setState(0xe291, 0xb, 0x9dd0, 0x2cb5, 0x844, 0x7884, 0x1, 0x0);
        gbc.writeMem(0xe291, { 0x2c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb, gbc.sp());
        EXPECT(0xe292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe291));
        // 2C 034C
        gbc.setState(0x309b, 0x597d, 0x44b0, 0xe417, 0xda9b, 0x707, 0x1, 0x0);
        gbc.writeMem(0x309b, { 0x2c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x597d, gbc.sp());
        EXPECT(0x309c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 034E
        gbc.setState(0xe399, 0x5a78, 0x8a0, 0x5d59, 0x33a0, 0x2769, 0x0, 0x0);
        gbc.writeMem(0xe399, { 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5a78, gbc.sp());
        EXPECT(0xe39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe399));
        // 2C 034F
        gbc.setState(0xb504, 0x6b65, 0x58d0, 0x42dd, 0x64c3, 0x95b, 0x1, 0x0);
        gbc.writeMem(0xb504, { 0x2c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6b65, gbc.sp());
        EXPECT(0xb505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb504));
        // 2C 0350
        gbc.setState(0x13b7, 0x1b78, 0x1480, 0xff81, 0x3802, 0x34c1, 0x1, 0x1);
        gbc.writeMem(0x13b7, { 0x2c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1b78, gbc.sp());
        EXPECT(0x13b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0351
        gbc.setState(0x3e, 0xf1e0, 0xffa0, 0xa8b0, 0xc224, 0xebd2, 0x1, 0x0);
        gbc.writeMem(0x3e, { 0x2c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf1e0, gbc.sp());
        EXPECT(0x3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0352
        gbc.setState(0x498c, 0x76d0, 0x3d0, 0xcb9c, 0x4a28, 0x8f3f, 0x0, 0x1);
        gbc.writeMem(0x498c, { 0x2c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x76d0, gbc.sp());
        EXPECT(0x498d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0353
        gbc.setState(0xf2c, 0xe5d5, 0x5470, 0xe1c1, 0x5dc, 0x5acb, 0x0, 0x0);
        gbc.writeMem(0xf2c, { 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe5d5, gbc.sp());
        EXPECT(0xf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0354
        gbc.setState(0xacd1, 0xb69a, 0x69e0, 0x51b4, 0xd4cd, 0x13af, 0x0, 0x0);
        gbc.writeMem(0xacd1, { 0x2c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb69a, gbc.sp());
        EXPECT(0xacd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xacd1));
        // 2C 0355
        gbc.setState(0x6b93, 0xa89b, 0xe7b0, 0xb391, 0xdff7, 0x153b, 0x0, 0x0);
        gbc.writeMem(0x6b93, { 0x2c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa89b, gbc.sp());
        EXPECT(0x6b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0356
        gbc.setState(0x4a25, 0x808c, 0xd6e0, 0xcc6, 0x52e6, 0x614f, 0x1, 0x0);
        gbc.writeMem(0x4a25, { 0x2c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x808c, gbc.sp());
        EXPECT(0x4a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0357
        gbc.setState(0x4b46, 0x94c4, 0xdfa0, 0x29c4, 0x3359, 0x6e16, 0x0, 0x0);
        gbc.writeMem(0x4b46, { 0x2c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x94c4, gbc.sp());
        EXPECT(0x4b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0358
        gbc.setState(0xa483, 0x85e2, 0x1620, 0x4ad2, 0x17b3, 0xa1fc, 0x1, 0x0);
        gbc.writeMem(0xa483, { 0x2c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x85e2, gbc.sp());
        EXPECT(0xa484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa483));
        // 2C 0359
        gbc.setState(0xd758, 0xcaa8, 0x70c0, 0xfcea, 0xb845, 0x91a3, 0x1, 0x0);
        gbc.writeMem(0xd758, { 0x2c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcaa8, gbc.sp());
        EXPECT(0xd759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd758));
        // 2C 035B
        gbc.setState(0x7ef5, 0x14f3, 0x4b10, 0x202b, 0xbd6a, 0x5b5e, 0x0, 0x1);
        gbc.writeMem(0x7ef5, { 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x14f3, gbc.sp());
        EXPECT(0x7ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 035C
        gbc.setState(0x2e5a, 0xe08a, 0x290, 0x6ef2, 0x8e77, 0x56ff, 0x1, 0x0);
        gbc.writeMem(0x2e5a, { 0x2c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe08a, gbc.sp());
        EXPECT(0x2e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 035D
        gbc.setState(0xd396, 0x6346, 0x890, 0xc3e3, 0xca54, 0xab56, 0x1, 0x1);
        gbc.writeMem(0xd396, { 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6346, gbc.sp());
        EXPECT(0xd397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd396));
        // 2C 035E
        gbc.setState(0x1732, 0xb08e, 0xf0d0, 0x6a22, 0x146f, 0xdbd2, 0x1, 0x1);
        gbc.writeMem(0x1732, { 0x2c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb08e, gbc.sp());
        EXPECT(0x1733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0360
        gbc.setState(0xb392, 0x1660, 0xe7f0, 0x7256, 0xbcd8, 0x701f, 0x0, 0x1);
        gbc.writeMem(0xb392, { 0x2c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1660, gbc.sp());
        EXPECT(0xb393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb392));
        // 2C 0361
        gbc.setState(0x341b, 0xa1dd, 0xb130, 0xd566, 0xf731, 0xe572, 0x1, 0x0);
        gbc.writeMem(0x341b, { 0x2c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa1dd, gbc.sp());
        EXPECT(0x341c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0362
        gbc.setState(0x7cf0, 0x8538, 0xc820, 0xac7a, 0x6aa2, 0x8353, 0x0, 0x1);
        gbc.writeMem(0x7cf0, { 0x2c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8538, gbc.sp());
        EXPECT(0x7cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0364
        gbc.setState(0xc11, 0x5f0d, 0xacd0, 0xf656, 0xfedc, 0x2c95, 0x1, 0x1);
        gbc.writeMem(0xc11, { 0x2c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5f0d, gbc.sp());
        EXPECT(0xc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0365
        gbc.setState(0xe02b, 0xd97b, 0xd3a0, 0xf264, 0x96b3, 0xc945, 0x0, 0x1);
        gbc.writeMem(0xe02b, { 0x2c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd97b, gbc.sp());
        EXPECT(0xe02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe02b));
        // 2C 0366
        gbc.setState(0xd8c2, 0xe5e6, 0x73b0, 0xb7f4, 0xd5d2, 0x39eb, 0x0, 0x1);
        gbc.writeMem(0xd8c2, { 0x2c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe5e6, gbc.sp());
        EXPECT(0xd8c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd8c2));
        // 2C 0367
        gbc.setState(0xdf35, 0x1059, 0x5b60, 0xeb61, 0x9a8a, 0x8ad5, 0x0, 0x0);
        gbc.writeMem(0xdf35, { 0x2c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1059, gbc.sp());
        EXPECT(0xdf36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdf35));
        // 2C 0369
        gbc.setState(0x5040, 0x6f8f, 0xd550, 0xfc29, 0xb241, 0xc024, 0x1, 0x0);
        gbc.writeMem(0x5040, { 0x2c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6f8f, gbc.sp());
        EXPECT(0x5041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 036A
        gbc.setState(0x766e, 0x4b50, 0x88d0, 0xd9d9, 0xc916, 0x8023, 0x0, 0x0);
        gbc.writeMem(0x766e, { 0x2c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4b50, gbc.sp());
        EXPECT(0x766f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 036B
        gbc.setState(0xc88f, 0xca8b, 0xd910, 0x4b24, 0xe451, 0xa186, 0x0, 0x1);
        gbc.writeMem(0xc88f, { 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xca8b, gbc.sp());
        EXPECT(0xc890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc88f));
        // 2C 036C
        gbc.setState(0xb5eb, 0x9e2d, 0x2e70, 0x7ae3, 0xbbff, 0x716a, 0x1, 0x1);
        gbc.writeMem(0xb5eb, { 0x2c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9e2d, gbc.sp());
        EXPECT(0xb5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb5eb));
        // 2C 036D
        gbc.setState(0x2496, 0xcd73, 0xe3f0, 0x874a, 0xc690, 0xfff8, 0x0, 0x0);
        gbc.writeMem(0x2496, { 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcd73, gbc.sp());
        EXPECT(0x2497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 036E
        gbc.setState(0x6b99, 0xf7ea, 0xe1a0, 0xb831, 0x953, 0xd30, 0x1, 0x0);
        gbc.writeMem(0x6b99, { 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf7ea, gbc.sp());
        EXPECT(0x6b9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 036F
        gbc.setState(0x45c8, 0xee01, 0x4eb0, 0x3029, 0x1026, 0x4c8f, 0x0, 0x1);
        gbc.writeMem(0x45c8, { 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xee01, gbc.sp());
        EXPECT(0x45c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0370
        gbc.setState(0xa158, 0xe854, 0x6550, 0x67cc, 0x511d, 0xa2a8, 0x0, 0x0);
        gbc.writeMem(0xa158, { 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe854, gbc.sp());
        EXPECT(0xa159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa158));
        // 2C 0371
        gbc.setState(0x7587, 0xaef6, 0xd870, 0x30f6, 0xf389, 0x7615, 0x1, 0x0);
        gbc.writeMem(0x7587, { 0x2c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaef6, gbc.sp());
        EXPECT(0x7588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0372
        gbc.setState(0x276e, 0xd917, 0xd980, 0x8a8a, 0xaafb, 0x773, 0x0, 0x0);
        gbc.writeMem(0x276e, { 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd917, gbc.sp());
        EXPECT(0x276f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0373
        gbc.setState(0x4580, 0x78fa, 0xd790, 0xa913, 0x1474, 0xfb24, 0x0, 0x0);
        gbc.writeMem(0x4580, { 0x2c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x78fa, gbc.sp());
        EXPECT(0x4581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0374
        gbc.setState(0x76aa, 0x89fa, 0x2cb0, 0x4e08, 0x9136, 0x38ec, 0x0, 0x1);
        gbc.writeMem(0x76aa, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x89fa, gbc.sp());
        EXPECT(0x76ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0375
        gbc.setState(0xbd6b, 0xb349, 0x530, 0xc5de, 0xa834, 0xf46d, 0x0, 0x1);
        gbc.writeMem(0xbd6b, { 0x2c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb349, gbc.sp());
        EXPECT(0xbd6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbd6b));
        // 2C 0376
        gbc.setState(0xc15b, 0xf2e8, 0xfcc0, 0xc1e6, 0x94c5, 0xb800, 0x1, 0x1);
        gbc.writeMem(0xc15b, { 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf2e8, gbc.sp());
        EXPECT(0xc15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc15b));
        // 2C 0377
        gbc.setState(0xa7f1, 0x8658, 0xc5d0, 0x5b67, 0xf8d8, 0xa8af, 0x0, 0x0);
        gbc.writeMem(0xa7f1, { 0x2c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8658, gbc.sp());
        EXPECT(0xa7f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa7f1));
        // 2C 0378
        gbc.setState(0xeed4, 0x68cd, 0xb4a0, 0xb649, 0x4be5, 0x5370, 0x1, 0x0);
        gbc.writeMem(0xeed4, { 0x2c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0xeed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeed4));
        // 2C 0379
        gbc.setState(0xeaa2, 0xa114, 0xf650, 0xd509, 0x20ad, 0xc804, 0x1, 0x0);
        gbc.writeMem(0xeaa2, { 0x2c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa114, gbc.sp());
        EXPECT(0xeaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xeaa2));
        // 2C 037A
        gbc.setState(0xd40a, 0x38b1, 0xf920, 0xc38c, 0x87aa, 0x43c6, 0x0, 0x1);
        gbc.writeMem(0xd40a, { 0x2c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x38b1, gbc.sp());
        EXPECT(0xd40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd40a));
        // 2C 037B
        gbc.setState(0x4059, 0xccb6, 0xd0d0, 0x25a5, 0x9408, 0xae93, 0x0, 0x0);
        gbc.writeMem(0x4059, { 0x2c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xccb6, gbc.sp());
        EXPECT(0x405a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 037C
        gbc.setState(0xa708, 0x40ee, 0xcd10, 0xe4db, 0xe369, 0xb62e, 0x0, 0x0);
        gbc.writeMem(0xa708, { 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x40ee, gbc.sp());
        EXPECT(0xa709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa708));
        // 2C 037D
        gbc.setState(0x5614, 0x4515, 0x8170, 0x6f0e, 0x2a76, 0x6b66, 0x1, 0x1);
        gbc.writeMem(0x5614, { 0x2c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4515, gbc.sp());
        EXPECT(0x5615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 037E
        gbc.setState(0xac4e, 0x8968, 0xa650, 0xb9ab, 0x19a9, 0xf1ff, 0x0, 0x0);
        gbc.writeMem(0xac4e, { 0x2c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8968, gbc.sp());
        EXPECT(0xac4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xac4e));
        // 2C 037F
        gbc.setState(0x58bc, 0x49d4, 0x4bd0, 0xc482, 0xe598, 0xfcbe, 0x1, 0x1);
        gbc.writeMem(0x58bc, { 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x49d4, gbc.sp());
        EXPECT(0x58bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0380
        gbc.setState(0xbbed, 0x9d6e, 0xcfd0, 0x95c8, 0x733d, 0x344d, 0x0, 0x1);
        gbc.writeMem(0xbbed, { 0x2c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9d6e, gbc.sp());
        EXPECT(0xbbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbbed));
        // 2C 0381
        gbc.setState(0x3d13, 0xb6cc, 0x780, 0x5130, 0x6212, 0xcdc6, 0x0, 0x0);
        gbc.writeMem(0x3d13, { 0x2c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb6cc, gbc.sp());
        EXPECT(0x3d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0382
        gbc.setState(0x7c24, 0x30fc, 0xcbf0, 0xac2a, 0x62dc, 0x2764, 0x0, 0x1);
        gbc.writeMem(0x7c24, { 0x2c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x30fc, gbc.sp());
        EXPECT(0x7c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0383
        gbc.setState(0x46a6, 0x67eb, 0xf150, 0x7797, 0xa156, 0x46f9, 0x1, 0x1);
        gbc.writeMem(0x46a6, { 0x2c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x67eb, gbc.sp());
        EXPECT(0x46a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0384
        gbc.setState(0xd133, 0xcf95, 0xd70, 0xa9d9, 0x9ed0, 0x9bf4, 0x1, 0x0);
        gbc.writeMem(0xd133, { 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcf95, gbc.sp());
        EXPECT(0xd134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd133));
        // 2C 0385
        gbc.setState(0xa9e5, 0xb737, 0x5330, 0xae25, 0xd2b2, 0x2bf5, 0x1, 0x1);
        gbc.writeMem(0xa9e5, { 0x2c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb737, gbc.sp());
        EXPECT(0xa9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa9e5));
        // 2C 0386
        gbc.setState(0x21da, 0xc7f1, 0xf780, 0x9c29, 0x82b2, 0xedda, 0x1, 0x0);
        gbc.writeMem(0x21da, { 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc7f1, gbc.sp());
        EXPECT(0x21db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0387
        gbc.setState(0x2928, 0x135d, 0xedc0, 0xae13, 0x4a3c, 0xa5b, 0x1, 0x0);
        gbc.writeMem(0x2928, { 0x2c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x135d, gbc.sp());
        EXPECT(0x2929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 0388
        gbc.setState(0xd0f6, 0x9d0b, 0x6000, 0xc88f, 0xf065, 0x494d, 0x1, 0x0);
        gbc.writeMem(0xd0f6, { 0x2c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9d0b, gbc.sp());
        EXPECT(0xd0f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd0f6));
        // 2C 0389
        gbc.setState(0xe7bc, 0xcecb, 0x6b90, 0xd842, 0x9f22, 0x767a, 0x1, 0x1);
        gbc.writeMem(0xe7bc, { 0x2c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcecb, gbc.sp());
        EXPECT(0xe7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe7bc));
        // 2C 038A
        gbc.setState(0x2fa4, 0x939b, 0xec80, 0x8459, 0xc2ca, 0x38cc, 0x1, 0x0);
        gbc.writeMem(0x2fa4, { 0x2c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x939b, gbc.sp());
        EXPECT(0x2fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 038C
        gbc.setState(0x744e, 0xac29, 0x29a0, 0x5b0, 0x7820, 0x776a, 0x1, 0x1);
        gbc.writeMem(0x744e, { 0x2c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xac29, gbc.sp());
        EXPECT(0x744f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 038D
        gbc.setState(0x662b, 0xdfb1, 0xe910, 0xc12c, 0xc430, 0x45ff, 0x0, 0x0);
        gbc.writeMem(0x662b, { 0x2c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdfb1, gbc.sp());
        EXPECT(0x662c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 038E
        gbc.setState(0xed2a, 0xb022, 0xfcd0, 0x718c, 0x66ca, 0xbb98, 0x0, 0x1);
        gbc.writeMem(0xed2a, { 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb022, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xed2a));
        // 2C 0390
        gbc.setState(0x3df0, 0x1ba5, 0x7b30, 0x69a8, 0x9fb1, 0x4828, 0x1, 0x1);
        gbc.writeMem(0x3df0, { 0x2c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1ba5, gbc.sp());
        EXPECT(0x3df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0391
        gbc.setState(0xe4ce, 0x18e1, 0x7c60, 0xd7d, 0xbe5c, 0x4047, 0x1, 0x0);
        gbc.writeMem(0xe4ce, { 0x2c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x18e1, gbc.sp());
        EXPECT(0xe4cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe4ce));
        // 2C 0392
        gbc.setState(0x3dc3, 0xd69f, 0x85b0, 0x4baa, 0x76ab, 0x5021, 0x0, 0x1);
        gbc.writeMem(0x3dc3, { 0x2c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd69f, gbc.sp());
        EXPECT(0x3dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0393
        gbc.setState(0x5e06, 0xc46c, 0x7a70, 0xdb2f, 0xde7f, 0x55e2, 0x1, 0x0);
        gbc.writeMem(0x5e06, { 0x2c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc46c, gbc.sp());
        EXPECT(0x5e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0394
        gbc.setState(0x1a86, 0x30ab, 0x3430, 0x733b, 0x3e2b, 0x3fb5, 0x0, 0x1);
        gbc.writeMem(0x1a86, { 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x30ab, gbc.sp());
        EXPECT(0x1a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0395
        gbc.setState(0x86fd, 0x3132, 0xd730, 0x604a, 0x3fd8, 0xd0c9, 0x0, 0x1);
        gbc.writeMem(0x86fd, { 0x2c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3132, gbc.sp());
        EXPECT(0x86fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x86fd));
        // 2C 0396
        gbc.setState(0xda8e, 0x273b, 0xa1d0, 0x48a3, 0xf20b, 0x7466, 0x1, 0x1);
        gbc.writeMem(0xda8e, { 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x273b, gbc.sp());
        EXPECT(0xda8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xda8e));
        // 2C 0397
        gbc.setState(0x22a6, 0xcfbb, 0x9270, 0x3158, 0x619e, 0xd27a, 0x1, 0x0);
        gbc.writeMem(0x22a6, { 0x2c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcfbb, gbc.sp());
        EXPECT(0x22a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 0398
        gbc.setState(0xb840, 0xee56, 0xe780, 0x980b, 0xd5d0, 0xab84, 0x0, 0x0);
        gbc.writeMem(0xb840, { 0x2c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xee56, gbc.sp());
        EXPECT(0xb841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb840));
        // 2C 0399
        gbc.setState(0x3be4, 0x4846, 0x4820, 0x28eb, 0xd71c, 0xd30a, 0x0, 0x1);
        gbc.writeMem(0x3be4, { 0x2c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4846, gbc.sp());
        EXPECT(0x3be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 039A
        gbc.setState(0x7581, 0x4275, 0xb880, 0xfc0, 0x8399, 0xdb9, 0x1, 0x1);
        gbc.writeMem(0x7581, { 0x2c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4275, gbc.sp());
        EXPECT(0x7582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 039B
        gbc.setState(0x93db, 0x347c, 0xb000, 0xe9af, 0xf1cd, 0xd047, 0x0, 0x0);
        gbc.writeMem(0x93db, { 0x2c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x347c, gbc.sp());
        EXPECT(0x93dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x93db));
        // 2C 039C
        gbc.setState(0xd96e, 0xd139, 0x2540, 0xc089, 0x928b, 0x3126, 0x0, 0x1);
        gbc.writeMem(0xd96e, { 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd139, gbc.sp());
        EXPECT(0xd96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd96e));
        // 2C 039D
        gbc.setState(0x71b6, 0x87a5, 0x6eb0, 0x553a, 0xaecc, 0xdfc5, 0x1, 0x1);
        gbc.writeMem(0x71b6, { 0x2c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x87a5, gbc.sp());
        EXPECT(0x71b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 039E
        gbc.setState(0x5afa, 0xfe15, 0x9460, 0xf55c, 0x36a5, 0x2284, 0x1, 0x1);
        gbc.writeMem(0x5afa, { 0x2c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfe15, gbc.sp());
        EXPECT(0x5afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 039F
        gbc.setState(0x178c, 0xc869, 0xb7e0, 0x1683, 0xa79f, 0x4e60, 0x0, 0x1);
        gbc.writeMem(0x178c, { 0x2c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc869, gbc.sp());
        EXPECT(0x178d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03A0
        gbc.setState(0x4b50, 0x3022, 0x4f80, 0xd1d, 0x282d, 0x3371, 0x0, 0x1);
        gbc.writeMem(0x4b50, { 0x2c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3022, gbc.sp());
        EXPECT(0x4b51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03A1
        gbc.setState(0x8af2, 0xd77a, 0xeb50, 0xebe7, 0xe93a, 0xc932, 0x1, 0x1);
        gbc.writeMem(0x8af2, { 0x2c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd77a, gbc.sp());
        EXPECT(0x8af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8af2));
        // 2C 03A2
        gbc.setState(0x625f, 0x2ff8, 0x3660, 0xe0e8, 0x44ba, 0xa1a3, 0x1, 0x1);
        gbc.writeMem(0x625f, { 0x2c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2ff8, gbc.sp());
        EXPECT(0x6260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03A3
        gbc.setState(0xe7fc, 0x992a, 0xf0c0, 0x5376, 0xf608, 0xf0fe, 0x0, 0x1);
        gbc.writeMem(0xe7fc, { 0x2c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x992a, gbc.sp());
        EXPECT(0xe7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe7fc));
        // 2C 03A4
        gbc.setState(0xe9d4, 0xd2b, 0x7e40, 0x7e9c, 0x1101, 0xd893, 0x1, 0x1);
        gbc.writeMem(0xe9d4, { 0x2c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd2b, gbc.sp());
        EXPECT(0xe9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe9d4));
        // 2C 03A5
        gbc.setState(0xbdc1, 0x764e, 0xc8d0, 0xa972, 0xbf70, 0xc53c, 0x1, 0x1);
        gbc.writeMem(0xbdc1, { 0x2c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0xbdc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbdc1));
        // 2C 03A6
        gbc.setState(0xe975, 0xdee9, 0x2a50, 0xdc87, 0xcb18, 0x92bc, 0x1, 0x1);
        gbc.writeMem(0xe975, { 0x2c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdee9, gbc.sp());
        EXPECT(0xe976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe975));
        // 2C 03A7
        gbc.setState(0x3eff, 0x5fbf, 0x5000, 0x7446, 0x81f6, 0xb43b, 0x0, 0x1);
        gbc.writeMem(0x3eff, { 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5fbf, gbc.sp());
        EXPECT(0x3f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03A8
        gbc.setState(0xb, 0x2338, 0xb6f0, 0x4075, 0xeb01, 0xbf9b, 0x1, 0x0);
        gbc.writeMem(0xb, { 0x2c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2338, gbc.sp());
        EXPECT(0xc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03A9
        gbc.setState(0xc8ba, 0x1472, 0x4b70, 0xfb66, 0xb50b, 0x2fba, 0x0, 0x1);
        gbc.writeMem(0xc8ba, { 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1472, gbc.sp());
        EXPECT(0xc8bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xc8ba));
        // 2C 03AA
        gbc.setState(0xab0b, 0xa477, 0x17d0, 0x4ba5, 0x3f67, 0xbfde, 0x0, 0x0);
        gbc.writeMem(0xab0b, { 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa477, gbc.sp());
        EXPECT(0xab0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xab0b));
        // 2C 03AB
        gbc.setState(0x752a, 0x267c, 0x7dc0, 0x25ed, 0x50d8, 0xb10b, 0x0, 0x0);
        gbc.writeMem(0x752a, { 0x2c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x267c, gbc.sp());
        EXPECT(0x752b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03AC
        gbc.setState(0x63cc, 0x12ec, 0xaa90, 0xcbc7, 0x598, 0xf620, 0x1, 0x0);
        gbc.writeMem(0x63cc, { 0x2c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x12ec, gbc.sp());
        EXPECT(0x63cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03AD
        gbc.setState(0xaa1, 0xf8e2, 0x6a40, 0x2f4f, 0x1a3, 0x1160, 0x1, 0x1);
        gbc.writeMem(0xaa1, { 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf8e2, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03AE
        gbc.setState(0xdded, 0x82da, 0xa870, 0x4b8e, 0x96a0, 0x5bb, 0x1, 0x1);
        gbc.writeMem(0xdded, { 0x2c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x82da, gbc.sp());
        EXPECT(0xddee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdded));
        // 2C 03AF
        gbc.setState(0x8cde, 0xaa66, 0x1740, 0x2719, 0x6d04, 0x6cf3, 0x0, 0x1);
        gbc.writeMem(0x8cde, { 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xaa66, gbc.sp());
        EXPECT(0x8cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8cde));
        // 2C 03B0
        gbc.setState(0x3454, 0x9e8f, 0x1b10, 0x8b8e, 0xf97f, 0x8e0c, 0x0, 0x0);
        gbc.writeMem(0x3454, { 0x2c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9e8f, gbc.sp());
        EXPECT(0x3455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03B2
        gbc.setState(0x49be, 0x4dcb, 0xfe30, 0xd89b, 0x7838, 0x11f6, 0x1, 0x0);
        gbc.writeMem(0x49be, { 0x2c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4dcb, gbc.sp());
        EXPECT(0x49bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03B3
        gbc.setState(0xbefb, 0x5fce, 0xa1e0, 0x975e, 0x5ae1, 0xe2d0, 0x1, 0x0);
        gbc.writeMem(0xbefb, { 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5fce, gbc.sp());
        EXPECT(0xbefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xbefb));
        // 2C 03B4
        gbc.setState(0x3748, 0xfe07, 0x4660, 0xf4aa, 0xe261, 0x5cd7, 0x0, 0x1);
        gbc.writeMem(0x3748, { 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfe07, gbc.sp());
        EXPECT(0x3749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03B5
        gbc.setState(0x153d, 0x180e, 0xcd90, 0x3ad4, 0xe76d, 0x5934, 0x1, 0x1);
        gbc.writeMem(0x153d, { 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x180e, gbc.sp());
        EXPECT(0x153e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03B6
        gbc.setState(0x908f, 0x389e, 0x90c0, 0x8654, 0x37af, 0x6ce1, 0x0, 0x1);
        gbc.writeMem(0x908f, { 0x2c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x389e, gbc.sp());
        EXPECT(0x9090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x908f));
        // 2C 03B7
        gbc.setState(0x65b7, 0x71d7, 0xca10, 0x6170, 0x5f2d, 0x85b9, 0x1, 0x0);
        gbc.writeMem(0x65b7, { 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x71d7, gbc.sp());
        EXPECT(0x65b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03B8
        gbc.setState(0x83cf, 0x6ee5, 0x8260, 0x51e2, 0x93ec, 0x30ea, 0x1, 0x0);
        gbc.writeMem(0x83cf, { 0x2c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6ee5, gbc.sp());
        EXPECT(0x83d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x83cf));
        // 2C 03B9
        gbc.setState(0x2d1, 0x3fb6, 0x1830, 0x81c7, 0x4b99, 0xceda, 0x1, 0x0);
        gbc.writeMem(0x2d1, { 0x2c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3fb6, gbc.sp());
        EXPECT(0x2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03BA
        gbc.setState(0x755a, 0xb828, 0x85c0, 0xf544, 0xc45e, 0x9820, 0x1, 0x1);
        gbc.writeMem(0x755a, { 0x2c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0x755b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03BB
        gbc.setState(0x43ac, 0x4c83, 0x8690, 0x899e, 0x34e7, 0x9217, 0x0, 0x1);
        gbc.writeMem(0x43ac, { 0x2c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4c83, gbc.sp());
        EXPECT(0x43ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03BD
        gbc.setState(0x78e0, 0x9898, 0x1c90, 0x4b8f, 0xf0ad, 0xd22a, 0x1, 0x1);
        gbc.writeMem(0x78e0, { 0x2c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9898, gbc.sp());
        EXPECT(0x78e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03BE
        gbc.setState(0x16c1, 0xaee0, 0x9c90, 0xf766, 0x41d, 0xcfb3, 0x0, 0x1);
        gbc.writeMem(0x16c1, { 0x2c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaee0, gbc.sp());
        EXPECT(0x16c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03BF
        gbc.setState(0x72a9, 0xa351, 0xc70, 0xc926, 0xdcb3, 0x524, 0x0, 0x0);
        gbc.writeMem(0x72a9, { 0x2c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa351, gbc.sp());
        EXPECT(0x72aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03C0
        gbc.setState(0x17c0, 0x3d04, 0x6870, 0x8ea7, 0x7df2, 0x85b3, 0x0, 0x0);
        gbc.writeMem(0x17c0, { 0x2c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3d04, gbc.sp());
        EXPECT(0x17c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03C1
        gbc.setState(0x77eb, 0x65ec, 0x2fa0, 0x7ee5, 0xe3ab, 0x2648, 0x1, 0x1);
        gbc.writeMem(0x77eb, { 0x2c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x65ec, gbc.sp());
        EXPECT(0x77ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03C2
        gbc.setState(0x620e, 0x6053, 0xef60, 0xa779, 0xc284, 0xabd, 0x1, 0x0);
        gbc.writeMem(0x620e, { 0x2c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6053, gbc.sp());
        EXPECT(0x620f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03C3
        gbc.setState(0x8489, 0xd03a, 0xa6e0, 0x2eae, 0xa77b, 0x64cb, 0x0, 0x1);
        gbc.writeMem(0x8489, { 0x2c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd03a, gbc.sp());
        EXPECT(0x848a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8489));
        // 2C 03C4
        gbc.setState(0xb84, 0xbf50, 0x5b60, 0x71cc, 0x4c5e, 0xd8a0, 0x0, 0x1);
        gbc.writeMem(0xb84, { 0x2c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbf50, gbc.sp());
        EXPECT(0xb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03C6
        gbc.setState(0xea22, 0x56d5, 0xa6c0, 0x1442, 0x89d6, 0xe061, 0x0, 0x0);
        gbc.writeMem(0xea22, { 0x2c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x56d5, gbc.sp());
        EXPECT(0xea23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xea22));
        // 2C 03C7
        gbc.setState(0x2690, 0x2ddb, 0x9050, 0xbc44, 0x13c3, 0x54d6, 0x1, 0x1);
        gbc.writeMem(0x2690, { 0x2c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2ddb, gbc.sp());
        EXPECT(0x2691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03C8
        gbc.setState(0x40bb, 0x1975, 0xc1d0, 0x4892, 0x1219, 0xdb55, 0x0, 0x0);
        gbc.writeMem(0x40bb, { 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1975, gbc.sp());
        EXPECT(0x40bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03C9
        gbc.setState(0x5a13, 0x44e2, 0x40f0, 0xcc71, 0xd11a, 0x32e0, 0x0, 0x0);
        gbc.writeMem(0x5a13, { 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x44e2, gbc.sp());
        EXPECT(0x5a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03CA
        gbc.setState(0x75b8, 0xb94a, 0xff70, 0xc8c0, 0xa76a, 0x635f, 0x0, 0x1);
        gbc.writeMem(0x75b8, { 0x2c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb94a, gbc.sp());
        EXPECT(0x75b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03CB
        gbc.setState(0xdc8f, 0xbda0, 0xf100, 0xb3d8, 0xc652, 0xb25a, 0x1, 0x1);
        gbc.writeMem(0xdc8f, { 0x2c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbda0, gbc.sp());
        EXPECT(0xdc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xdc8f));
        // 2C 03CC
        gbc.setState(0x1bce, 0xc977, 0x7b40, 0xa1ae, 0x6835, 0x87f5, 0x1, 0x1);
        gbc.writeMem(0x1bce, { 0x2c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc977, gbc.sp());
        EXPECT(0x1bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03CD
        gbc.setState(0x60db, 0x7242, 0x8d00, 0xe75, 0x9bce, 0x80c8, 0x1, 0x0);
        gbc.writeMem(0x60db, { 0x2c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7242, gbc.sp());
        EXPECT(0x60dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03CE
        gbc.setState(0x8e74, 0x33c4, 0x9020, 0xcf8f, 0xb5c8, 0xc9e5, 0x1, 0x1);
        gbc.writeMem(0x8e74, { 0x2c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x33c4, gbc.sp());
        EXPECT(0x8e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8e74));
        // 2C 03CF
        gbc.setState(0x9640, 0xc3df, 0x4050, 0xebe5, 0xcea7, 0xb248, 0x1, 0x0);
        gbc.writeMem(0x9640, { 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc3df, gbc.sp());
        EXPECT(0x9641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9640));
        // 2C 03D0
        gbc.setState(0xd331, 0x6010, 0x90a0, 0xacd4, 0xac61, 0x9918, 0x1, 0x1);
        gbc.writeMem(0xd331, { 0x2c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6010, gbc.sp());
        EXPECT(0xd332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd331));
        // 2C 03D1
        gbc.setState(0x58f2, 0x4620, 0xfeb0, 0xaa12, 0xd011, 0xab6f, 0x0, 0x0);
        gbc.writeMem(0x58f2, { 0x2c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4620, gbc.sp());
        EXPECT(0x58f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03D3
        gbc.setState(0x45fd, 0x5c14, 0xaed0, 0xe436, 0x4348, 0x6d22, 0x0, 0x0);
        gbc.writeMem(0x45fd, { 0x2c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5c14, gbc.sp());
        EXPECT(0x45fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03D4
        gbc.setState(0x677c, 0x8af6, 0xc6d0, 0x7400, 0xdee8, 0x2ab2, 0x1, 0x0);
        gbc.writeMem(0x677c, { 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8af6, gbc.sp());
        EXPECT(0x677d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03D5
        gbc.setState(0x6119, 0xa3c6, 0x50d0, 0xccb6, 0x14c0, 0x3cbb, 0x0, 0x1);
        gbc.writeMem(0x6119, { 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa3c6, gbc.sp());
        EXPECT(0x611a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03D6
        gbc.setState(0x62e8, 0xd238, 0x30b0, 0xb7a5, 0x1670, 0xa8eb, 0x1, 0x0);
        gbc.writeMem(0x62e8, { 0x2c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd238, gbc.sp());
        EXPECT(0x62e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03D7
        gbc.setState(0x10c4, 0x33ea, 0xbe90, 0x3649, 0x134d, 0x5b1c, 0x0, 0x0);
        gbc.writeMem(0x10c4, { 0x2c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x33ea, gbc.sp());
        EXPECT(0x10c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03D8
        gbc.setState(0x8a7c, 0x459d, 0xe7e0, 0x3bb8, 0xec62, 0xfc8d, 0x1, 0x1);
        gbc.writeMem(0x8a7c, { 0x2c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x459d, gbc.sp());
        EXPECT(0x8a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8a7c));
        // 2C 03D9
        gbc.setState(0x8b0a, 0x9618, 0x660, 0xaaec, 0x7589, 0x450f, 0x0, 0x0);
        gbc.writeMem(0x8b0a, { 0x2c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9618, gbc.sp());
        EXPECT(0x8b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8b0a));
        // 2C 03DA
        gbc.setState(0x4b22, 0xd5ad, 0xcee0, 0xae9f, 0x9c69, 0xb77c, 0x1, 0x1);
        gbc.writeMem(0x4b22, { 0x2c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd5ad, gbc.sp());
        EXPECT(0x4b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03DB
        gbc.setState(0x60e6, 0x28fc, 0x68b0, 0x456a, 0xaa0a, 0x3bf2, 0x0, 0x1);
        gbc.writeMem(0x60e6, { 0x2c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x28fc, gbc.sp());
        EXPECT(0x60e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03DC
        gbc.setState(0x4dd1, 0xf758, 0x3ca0, 0x9e58, 0xdcc0, 0xef47, 0x0, 0x1);
        gbc.writeMem(0x4dd1, { 0x2c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf758, gbc.sp());
        EXPECT(0x4dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03DD
        gbc.setState(0xd960, 0x176b, 0x53f0, 0x2b9c, 0xe3b7, 0x2ae2, 0x0, 0x1);
        gbc.writeMem(0xd960, { 0x2c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x176b, gbc.sp());
        EXPECT(0xd961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd960));
        // 2C 03DE
        gbc.setState(0x1e1f, 0xc7ee, 0xf460, 0xaca6, 0x61e0, 0x5062, 0x1, 0x1);
        gbc.writeMem(0x1e1f, { 0x2c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc7ee, gbc.sp());
        EXPECT(0x1e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03DF
        gbc.setState(0x3e9b, 0xfabe, 0x6c10, 0x2fe7, 0xcdfc, 0xc55f, 0x1, 0x1);
        gbc.writeMem(0x3e9b, { 0x2c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfabe, gbc.sp());
        EXPECT(0x3e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03E0
        gbc.setState(0xe014, 0x9be6, 0x5270, 0xce99, 0x9b92, 0xa712, 0x0, 0x1);
        gbc.writeMem(0xe014, { 0x2c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9be6, gbc.sp());
        EXPECT(0xe015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe014));
        // 2C 03E1
        gbc.setState(0x611a, 0xdd7b, 0xbfd0, 0xf1c0, 0xc7e2, 0xba9e, 0x1, 0x0);
        gbc.writeMem(0x611a, { 0x2c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdd7b, gbc.sp());
        EXPECT(0x611b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03E2
        gbc.setState(0x461c, 0x242f, 0x5a30, 0x2831, 0xa9a4, 0x4c4f, 0x0, 0x1);
        gbc.writeMem(0x461c, { 0x2c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x242f, gbc.sp());
        EXPECT(0x461d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03E3
        gbc.setState(0xec36, 0x2661, 0x9710, 0xe146, 0xd1e1, 0x2e16, 0x1, 0x1);
        gbc.writeMem(0xec36, { 0x2c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2661, gbc.sp());
        EXPECT(0xec37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xec36));
        // 2C 03E4
        gbc.setState(0x5d1e, 0xe17e, 0x3720, 0xb30e, 0x7a33, 0x1ee2, 0x1, 0x0);
        gbc.writeMem(0x5d1e, { 0x2c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe17e, gbc.sp());
        EXPECT(0x5d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 2C 03E5
        gbc.setState(0x53a1, 0x1127, 0xa190, 0x79bf, 0x6397, 0xf9a5, 0x0, 0x1);
        gbc.writeMem(0x53a1, { 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1127, gbc.sp());
        EXPECT(0x53a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 2C 03E6
        gbc.setState(0x9eb9, 0x1bbb, 0x1c0, 0x599e, 0xdeec, 0x26a7, 0x0, 0x0);
        gbc.writeMem(0x9eb9, { 0x2c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1bbb, gbc.sp());
        EXPECT(0x9eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9eb9));
        // 2C 03E7
        gbc.setState(0x461c, 0x8461, 0x5440, 0x8ad5, 0x62ad, 0xde61, 0x0, 0x1);
        gbc.writeMem(0x461c, { 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8461, gbc.sp());
        EXPECT(0x461d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
