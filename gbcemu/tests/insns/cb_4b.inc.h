    TEST(gbcemu, opcode_cb_4b) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 4B 0000
        gbc.setState(0xa7a1, 0x3996, 0x7a30, 0x660a, 0xd336, 0x7533, 0x1, 0x0);
        gbc.writeMem(0xa7a1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3996, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a1));
        EXPECT(0x4b, gbc.readMem(0xa7a2));
        // CB 4B 0001
        gbc.setState(0x19ca, 0x51e4, 0x85a0, 0x776c, 0xf485, 0x2f46, 0x0, 0x0);
        gbc.writeMem(0x19ca, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x51e4, gbc.sp());
        EXPECT(0x19cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0002
        gbc.setState(0x3c40, 0x4344, 0x4980, 0xaaf9, 0xa8a3, 0x5fa2, 0x0, 0x0);
        gbc.writeMem(0x3c40, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4344, gbc.sp());
        EXPECT(0x3c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0003
        gbc.setState(0x9762, 0x5ccc, 0x1400, 0x36db, 0xfa88, 0xa05f, 0x0, 0x1);
        gbc.writeMem(0x9762, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5ccc, gbc.sp());
        EXPECT(0x9764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9762));
        EXPECT(0x4b, gbc.readMem(0x9763));
        // CB 4B 0004
        gbc.setState(0x3b74, 0x5866, 0x7b60, 0x3a81, 0xa9c5, 0x8aad, 0x1, 0x0);
        gbc.writeMem(0x3b74, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5866, gbc.sp());
        EXPECT(0x3b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0005
        gbc.setState(0x43bb, 0xaa80, 0xc840, 0x115e, 0x9804, 0x39fc, 0x1, 0x0);
        gbc.writeMem(0x43bb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xaa80, gbc.sp());
        EXPECT(0x43bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0006
        gbc.setState(0x96e1, 0xb889, 0x9230, 0x37d4, 0x7a4c, 0x20d1, 0x0, 0x0);
        gbc.writeMem(0x96e1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb889, gbc.sp());
        EXPECT(0x96e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e1));
        EXPECT(0x4b, gbc.readMem(0x96e2));
        // CB 4B 0007
        gbc.setState(0x239b, 0x68a5, 0x6070, 0x9c6, 0xcac6, 0x1014, 0x1, 0x0);
        gbc.writeMem(0x239b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x68a5, gbc.sp());
        EXPECT(0x239d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0008
        gbc.setState(0x8f, 0x9e, 0x8550, 0x6bf3, 0x577b, 0xdb78, 0x1, 0x1);
        gbc.writeMem(0x8f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9e, gbc.sp());
        EXPECT(0x91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0009
        gbc.setState(0xf22, 0x1880, 0x5290, 0xa12a, 0x2974, 0x34cc, 0x1, 0x0);
        gbc.writeMem(0xf22, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1880, gbc.sp());
        EXPECT(0xf24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 000A
        gbc.setState(0x1d9e, 0x553e, 0x48c0, 0xaff2, 0x6553, 0x7c01, 0x1, 0x1);
        gbc.writeMem(0x1d9e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x553e, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 000B
        gbc.setState(0x1fcb, 0xfd8f, 0x4a50, 0xaca6, 0x7c49, 0xeeb2, 0x0, 0x1);
        gbc.writeMem(0x1fcb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfd8f, gbc.sp());
        EXPECT(0x1fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 000C
        gbc.setState(0x69ec, 0x4fc4, 0xeeb0, 0xd442, 0x33d2, 0x3eda, 0x1, 0x1);
        gbc.writeMem(0x69ec, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4fc4, gbc.sp());
        EXPECT(0x69ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 000D
        gbc.setState(0xe6c8, 0x85b3, 0xaff0, 0x7afe, 0x2128, 0xa80f, 0x1, 0x0);
        gbc.writeMem(0xe6c8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x85b3, gbc.sp());
        EXPECT(0xe6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c8));
        EXPECT(0x4b, gbc.readMem(0xe6c9));
        // CB 4B 000E
        gbc.setState(0x8258, 0xef87, 0x95a0, 0x57ef, 0xcb4b, 0xc43f, 0x0, 0x1);
        gbc.writeMem(0x8258, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xef87, gbc.sp());
        EXPECT(0x825a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8258));
        EXPECT(0x4b, gbc.readMem(0x8259));
        // CB 4B 000F
        gbc.setState(0x3135, 0x67d5, 0x93e0, 0x562b, 0x635d, 0xe7db, 0x0, 0x0);
        gbc.writeMem(0x3135, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x67d5, gbc.sp());
        EXPECT(0x3137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0010
        gbc.setState(0x8799, 0x3f9d, 0xb360, 0x1ad1, 0xec4c, 0xc389, 0x1, 0x1);
        gbc.writeMem(0x8799, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3f9d, gbc.sp());
        EXPECT(0x879b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8799));
        EXPECT(0x4b, gbc.readMem(0x879a));
        // CB 4B 0011
        gbc.setState(0xd574, 0xe59b, 0x4fc0, 0x8227, 0x74c6, 0x84ec, 0x0, 0x0);
        gbc.writeMem(0xd574, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe59b, gbc.sp());
        EXPECT(0xd576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd574));
        EXPECT(0x4b, gbc.readMem(0xd575));
        // CB 4B 0012
        gbc.setState(0xe925, 0x63e4, 0xecc0, 0x66e0, 0xc7e9, 0x46db, 0x0, 0x1);
        gbc.writeMem(0xe925, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x63e4, gbc.sp());
        EXPECT(0xe927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe925));
        EXPECT(0x4b, gbc.readMem(0xe926));
        // CB 4B 0013
        gbc.setState(0xea3e, 0xeadb, 0x7de0, 0x49a5, 0xfad2, 0x5a59, 0x1, 0x0);
        gbc.writeMem(0xea3e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xeadb, gbc.sp());
        EXPECT(0xea40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea3e));
        EXPECT(0x4b, gbc.readMem(0xea3f));
        // CB 4B 0014
        gbc.setState(0x7a33, 0xae06, 0xe5f0, 0x64c5, 0xe8f9, 0x75db, 0x1, 0x1);
        gbc.writeMem(0x7a33, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xae06, gbc.sp());
        EXPECT(0x7a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0015
        gbc.setState(0x69a4, 0x4410, 0xbe70, 0x567d, 0x59bb, 0x5b22, 0x0, 0x1);
        gbc.writeMem(0x69a4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4410, gbc.sp());
        EXPECT(0x69a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0016
        gbc.setState(0xa569, 0x3e49, 0x4a40, 0xd469, 0x7f82, 0x3d6, 0x1, 0x0);
        gbc.writeMem(0xa569, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3e49, gbc.sp());
        EXPECT(0xa56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa569));
        EXPECT(0x4b, gbc.readMem(0xa56a));
        // CB 4B 0017
        gbc.setState(0x5f84, 0x409d, 0xd670, 0xaa14, 0x8fe1, 0xbce4, 0x1, 0x1);
        gbc.writeMem(0x5f84, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x409d, gbc.sp());
        EXPECT(0x5f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0018
        gbc.setState(0x463a, 0xb670, 0x1cb0, 0xbb10, 0xec0d, 0x1af2, 0x0, 0x1);
        gbc.writeMem(0x463a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb670, gbc.sp());
        EXPECT(0x463c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0019
        gbc.setState(0xe110, 0xf60, 0x9f30, 0x8e52, 0x9fd, 0x433f, 0x1, 0x0);
        gbc.writeMem(0xe110, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf60, gbc.sp());
        EXPECT(0xe112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe110));
        EXPECT(0x4b, gbc.readMem(0xe111));
        // CB 4B 001A
        gbc.setState(0x8009, 0x6b5d, 0x4db0, 0x62a8, 0x1ff2, 0xd1a4, 0x0, 0x1);
        gbc.writeMem(0x8009, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6b5d, gbc.sp());
        EXPECT(0x800b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8009));
        EXPECT(0x4b, gbc.readMem(0x800a));
        // CB 4B 001B
        gbc.setState(0x824f, 0x97b6, 0x6ea0, 0x1e47, 0xcdac, 0x4afb, 0x0, 0x1);
        gbc.writeMem(0x824f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x97b6, gbc.sp());
        EXPECT(0x8251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x824f));
        EXPECT(0x4b, gbc.readMem(0x8250));
        // CB 4B 001C
        gbc.setState(0x56f7, 0xc1dd, 0xd6a0, 0xb603, 0x9ac0, 0x430f, 0x1, 0x0);
        gbc.writeMem(0x56f7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc1dd, gbc.sp());
        EXPECT(0x56f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 001D
        gbc.setState(0x129c, 0xf60, 0xe140, 0x1fce, 0x1b5a, 0xeedc, 0x0, 0x1);
        gbc.writeMem(0x129c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf60, gbc.sp());
        EXPECT(0x129e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 001E
        gbc.setState(0x3af3, 0xe597, 0x7240, 0x8c05, 0xda50, 0xaedb, 0x0, 0x1);
        gbc.writeMem(0x3af3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe597, gbc.sp());
        EXPECT(0x3af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 001F
        gbc.setState(0x9ad4, 0x939, 0x9400, 0xf0c8, 0x41a1, 0xc11e, 0x0, 0x1);
        gbc.writeMem(0x9ad4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x939, gbc.sp());
        EXPECT(0x9ad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad4));
        EXPECT(0x4b, gbc.readMem(0x9ad5));
        // CB 4B 0020
        gbc.setState(0x8856, 0xff13, 0xcf80, 0xd36f, 0xc3f8, 0x4c70, 0x0, 0x0);
        gbc.writeMem(0x8856, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xff13, gbc.sp());
        EXPECT(0x8858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8856));
        EXPECT(0x4b, gbc.readMem(0x8857));
        // CB 4B 0021
        gbc.setState(0x8576, 0x3e2, 0xedc0, 0xfba7, 0xbb6d, 0x5ab4, 0x1, 0x1);
        gbc.writeMem(0x8576, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3e2, gbc.sp());
        EXPECT(0x8578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8576));
        EXPECT(0x4b, gbc.readMem(0x8577));
        // CB 4B 0022
        gbc.setState(0x91fd, 0x872, 0x7ce0, 0x6d60, 0xcb7c, 0x82e6, 0x1, 0x1);
        gbc.writeMem(0x91fd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x872, gbc.sp());
        EXPECT(0x91ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fd));
        EXPECT(0x4b, gbc.readMem(0x91fe));
        // CB 4B 0023
        gbc.setState(0x3f47, 0x29, 0x4480, 0xe1b8, 0x3aa3, 0x7753, 0x0, 0x1);
        gbc.writeMem(0x3f47, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x29, gbc.sp());
        EXPECT(0x3f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0024
        gbc.setState(0xe90b, 0x17d4, 0xf140, 0x64d0, 0xeeb9, 0x5f78, 0x1, 0x1);
        gbc.writeMem(0xe90b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x17d4, gbc.sp());
        EXPECT(0xe90d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90b));
        EXPECT(0x4b, gbc.readMem(0xe90c));
        // CB 4B 0025
        gbc.setState(0x2fa6, 0x470c, 0x8d70, 0x3687, 0x187b, 0xb52e, 0x0, 0x0);
        gbc.writeMem(0x2fa6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x470c, gbc.sp());
        EXPECT(0x2fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0026
        gbc.setState(0x62b8, 0x6e58, 0x78d0, 0xc970, 0xff0a, 0xa72a, 0x0, 0x0);
        gbc.writeMem(0x62b8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6e58, gbc.sp());
        EXPECT(0x62ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0027
        gbc.setState(0x53b7, 0x4506, 0xca80, 0x56b2, 0xf7c1, 0xee45, 0x0, 0x1);
        gbc.writeMem(0x53b7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4506, gbc.sp());
        EXPECT(0x53b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0028
        gbc.setState(0x35f3, 0x9081, 0xd8b0, 0x7ad4, 0x6e5f, 0x872f, 0x0, 0x0);
        gbc.writeMem(0x35f3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9081, gbc.sp());
        EXPECT(0x35f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0029
        gbc.setState(0xe827, 0x8387, 0xd610, 0xbe32, 0x2b21, 0xbda3, 0x1, 0x0);
        gbc.writeMem(0xe827, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8387, gbc.sp());
        EXPECT(0xe829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe827));
        EXPECT(0x4b, gbc.readMem(0xe828));
        // CB 4B 002A
        gbc.setState(0xd6a7, 0xd59, 0xbb70, 0x8ad9, 0x61cd, 0x46ef, 0x0, 0x1);
        gbc.writeMem(0xd6a7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd59, gbc.sp());
        EXPECT(0xd6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a7));
        EXPECT(0x4b, gbc.readMem(0xd6a8));
        // CB 4B 002C
        gbc.setState(0xde7, 0xf772, 0x5970, 0x6f3e, 0x6a00, 0x688c, 0x0, 0x0);
        gbc.writeMem(0xde7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf772, gbc.sp());
        EXPECT(0xde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 002D
        gbc.setState(0x3159, 0x3c25, 0xa800, 0x4383, 0xb1a7, 0xafc3, 0x0, 0x0);
        gbc.writeMem(0x3159, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3c25, gbc.sp());
        EXPECT(0x315b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 002E
        gbc.setState(0x8728, 0xd0a7, 0xf1c0, 0xe7ee, 0x4bfc, 0xd7b8, 0x0, 0x1);
        gbc.writeMem(0x8728, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd0a7, gbc.sp());
        EXPECT(0x872a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8728));
        EXPECT(0x4b, gbc.readMem(0x8729));
        // CB 4B 002F
        gbc.setState(0xe256, 0xaea, 0x5950, 0xe796, 0xfeb5, 0x84f0, 0x1, 0x0);
        gbc.writeMem(0xe256, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xaea, gbc.sp());
        EXPECT(0xe258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe256));
        EXPECT(0x4b, gbc.readMem(0xe257));
        // CB 4B 0030
        gbc.setState(0x7d7d, 0x2272, 0xf060, 0xef61, 0x3e32, 0x9824, 0x0, 0x0);
        gbc.writeMem(0x7d7d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2272, gbc.sp());
        EXPECT(0x7d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0031
        gbc.setState(0x4e1b, 0x134e, 0x120, 0x9188, 0x2ea2, 0xac72, 0x0, 0x0);
        gbc.writeMem(0x4e1b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x134e, gbc.sp());
        EXPECT(0x4e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0032
        gbc.setState(0x5a27, 0xec2f, 0x8940, 0xb0dd, 0x66ec, 0xf3d1, 0x1, 0x1);
        gbc.writeMem(0x5a27, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xec2f, gbc.sp());
        EXPECT(0x5a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0033
        gbc.setState(0x58d0, 0xfe20, 0x67d0, 0x9d56, 0x4e76, 0x53df, 0x0, 0x1);
        gbc.writeMem(0x58d0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfe20, gbc.sp());
        EXPECT(0x58d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0034
        gbc.setState(0xa616, 0xfa88, 0xe660, 0x350b, 0xc9cd, 0x294a, 0x1, 0x1);
        gbc.writeMem(0xa616, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfa88, gbc.sp());
        EXPECT(0xa618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa616));
        EXPECT(0x4b, gbc.readMem(0xa617));
        // CB 4B 0035
        gbc.setState(0x5b22, 0xe689, 0xe90, 0xa911, 0x9fbe, 0x25d1, 0x1, 0x0);
        gbc.writeMem(0x5b22, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe689, gbc.sp());
        EXPECT(0x5b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0036
        gbc.setState(0x5a76, 0xcd7, 0xbea0, 0xd055, 0x8ec1, 0x37b2, 0x0, 0x1);
        gbc.writeMem(0x5a76, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcd7, gbc.sp());
        EXPECT(0x5a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0038
        gbc.setState(0x2516, 0x9f97, 0x99a0, 0x8cd0, 0x47d0, 0xdcef, 0x1, 0x1);
        gbc.writeMem(0x2516, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9f97, gbc.sp());
        EXPECT(0x2518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0039
        gbc.setState(0xae66, 0xe241, 0x6580, 0x4420, 0xa027, 0xdaca, 0x0, 0x0);
        gbc.writeMem(0xae66, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe241, gbc.sp());
        EXPECT(0xae68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae66));
        EXPECT(0x4b, gbc.readMem(0xae67));
        // CB 4B 003A
        gbc.setState(0x191b, 0x92e6, 0x2d80, 0x49c8, 0xa464, 0xa46a, 0x0, 0x0);
        gbc.writeMem(0x191b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x92e6, gbc.sp());
        EXPECT(0x191d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 003B
        gbc.setState(0x3d74, 0x46e9, 0x6240, 0x6776, 0xcdc0, 0x5ad5, 0x1, 0x0);
        gbc.writeMem(0x3d74, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x46e9, gbc.sp());
        EXPECT(0x3d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 003C
        gbc.setState(0x133c, 0x34a3, 0x9550, 0xf5d5, 0xa763, 0xcaed, 0x0, 0x0);
        gbc.writeMem(0x133c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x34a3, gbc.sp());
        EXPECT(0x133e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 003D
        gbc.setState(0xc34b, 0xd99d, 0x4500, 0x9a5, 0x2ce3, 0xf2dc, 0x1, 0x1);
        gbc.writeMem(0xc34b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd99d, gbc.sp());
        EXPECT(0xc34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34b));
        EXPECT(0x4b, gbc.readMem(0xc34c));
        // CB 4B 003E
        gbc.setState(0x409a, 0x4191, 0x7ff0, 0x5fa6, 0x4652, 0x7f58, 0x1, 0x0);
        gbc.writeMem(0x409a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4191, gbc.sp());
        EXPECT(0x409c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 003F
        gbc.setState(0xcd15, 0xba8e, 0xc4f0, 0x7cff, 0x83ef, 0x957e, 0x1, 0x0);
        gbc.writeMem(0xcd15, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xba8e, gbc.sp());
        EXPECT(0xcd17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd15));
        EXPECT(0x4b, gbc.readMem(0xcd16));
        // CB 4B 0040
        gbc.setState(0xbdfa, 0x1e6f, 0x1000, 0x3481, 0x3e7a, 0xd209, 0x1, 0x1);
        gbc.writeMem(0xbdfa, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1e6f, gbc.sp());
        EXPECT(0xbdfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfa));
        EXPECT(0x4b, gbc.readMem(0xbdfb));
        // CB 4B 0041
        gbc.setState(0x42f9, 0x8216, 0x8230, 0x9ea5, 0xcb07, 0x809e, 0x0, 0x1);
        gbc.writeMem(0x42f9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8216, gbc.sp());
        EXPECT(0x42fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0042
        gbc.setState(0x3143, 0xa79a, 0x8210, 0x9cb3, 0xf40c, 0xef40, 0x0, 0x1);
        gbc.writeMem(0x3143, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa79a, gbc.sp());
        EXPECT(0x3145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0043
        gbc.setState(0x1ed6, 0xfbee, 0xd840, 0xb9a1, 0xe9bc, 0xddb4, 0x1, 0x1);
        gbc.writeMem(0x1ed6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfbee, gbc.sp());
        EXPECT(0x1ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0044
        gbc.setState(0x96b8, 0x6d38, 0xad00, 0x999, 0xa5fa, 0x43c9, 0x1, 0x0);
        gbc.writeMem(0x96b8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6d38, gbc.sp());
        EXPECT(0x96ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b8));
        EXPECT(0x4b, gbc.readMem(0x96b9));
        // CB 4B 0045
        gbc.setState(0xa013, 0x3b6f, 0x1530, 0xc786, 0x75d8, 0xb004, 0x0, 0x0);
        gbc.writeMem(0xa013, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3b6f, gbc.sp());
        EXPECT(0xa015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa013));
        EXPECT(0x4b, gbc.readMem(0xa014));
        // CB 4B 0047
        gbc.setState(0x41ce, 0x527f, 0x9950, 0x3540, 0x930d, 0xfac2, 0x0, 0x1);
        gbc.writeMem(0x41ce, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x527f, gbc.sp());
        EXPECT(0x41d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0048
        gbc.setState(0x2ec6, 0xcbd0, 0x3a20, 0x7c22, 0xa108, 0x63ce, 0x1, 0x1);
        gbc.writeMem(0x2ec6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcbd0, gbc.sp());
        EXPECT(0x2ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0049
        gbc.setState(0x1d70, 0xddbd, 0xa590, 0x8aa, 0xabfb, 0xc78a, 0x0, 0x1);
        gbc.writeMem(0x1d70, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xddbd, gbc.sp());
        EXPECT(0x1d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 004A
        gbc.setState(0x961f, 0x1a9a, 0x5700, 0xeee8, 0xd8cd, 0xd0e6, 0x1, 0x0);
        gbc.writeMem(0x961f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1a9a, gbc.sp());
        EXPECT(0x9621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961f));
        EXPECT(0x4b, gbc.readMem(0x9620));
        // CB 4B 004B
        gbc.setState(0x7591, 0xbfbf, 0x2950, 0x3099, 0x9860, 0x5b95, 0x1, 0x1);
        gbc.writeMem(0x7591, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbfbf, gbc.sp());
        EXPECT(0x7593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 004D
        gbc.setState(0x4324, 0xc5c3, 0x7e00, 0xdba6, 0x5d5d, 0x2c40, 0x1, 0x1);
        gbc.writeMem(0x4324, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc5c3, gbc.sp());
        EXPECT(0x4326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0050
        gbc.setState(0xe695, 0x5709, 0xbb80, 0x567f, 0x696c, 0x2f90, 0x0, 0x0);
        gbc.writeMem(0xe695, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5709, gbc.sp());
        EXPECT(0xe697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe695));
        EXPECT(0x4b, gbc.readMem(0xe696));
        // CB 4B 0051
        gbc.setState(0x3500, 0xca11, 0x9b60, 0x1d8c, 0x5ec3, 0x5947, 0x0, 0x0);
        gbc.writeMem(0x3500, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xca11, gbc.sp());
        EXPECT(0x3502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0053
        gbc.setState(0xe192, 0x149b, 0x7220, 0xe37b, 0x2ed3, 0x134c, 0x0, 0x1);
        gbc.writeMem(0xe192, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x149b, gbc.sp());
        EXPECT(0xe194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe192));
        EXPECT(0x4b, gbc.readMem(0xe193));
        // CB 4B 0055
        gbc.setState(0x7348, 0x4fd3, 0xf390, 0xe96d, 0x6501, 0xba6, 0x0, 0x0);
        gbc.writeMem(0x7348, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4fd3, gbc.sp());
        EXPECT(0x734a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0057
        gbc.setState(0xb913, 0x9a4d, 0x4d10, 0xbdc0, 0x6f93, 0x74c2, 0x0, 0x1);
        gbc.writeMem(0xb913, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9a4d, gbc.sp());
        EXPECT(0xb915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb913));
        EXPECT(0x4b, gbc.readMem(0xb914));
        // CB 4B 0058
        gbc.setState(0xcaf3, 0xad72, 0x5480, 0x18ce, 0x630b, 0xe2b3, 0x1, 0x0);
        gbc.writeMem(0xcaf3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xad72, gbc.sp());
        EXPECT(0xcaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf3));
        EXPECT(0x4b, gbc.readMem(0xcaf4));
        // CB 4B 0059
        gbc.setState(0x91c, 0x50ea, 0x9360, 0xb7c6, 0x7144, 0x1469, 0x0, 0x0);
        gbc.writeMem(0x91c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x50ea, gbc.sp());
        EXPECT(0x91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 005A
        gbc.setState(0x5f4, 0x64fc, 0x8230, 0xe0d9, 0x272c, 0x3a79, 0x0, 0x0);
        gbc.writeMem(0x5f4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x64fc, gbc.sp());
        EXPECT(0x5f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 005B
        gbc.setState(0x85c3, 0x5fd1, 0x6f80, 0x7138, 0x22c3, 0xf643, 0x0, 0x0);
        gbc.writeMem(0x85c3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5fd1, gbc.sp());
        EXPECT(0x85c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c3));
        EXPECT(0x4b, gbc.readMem(0x85c4));
        // CB 4B 005C
        gbc.setState(0xc891, 0x1c53, 0x84f0, 0x84e0, 0x9786, 0xc304, 0x0, 0x0);
        gbc.writeMem(0xc891, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1c53, gbc.sp());
        EXPECT(0xc893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc891));
        EXPECT(0x4b, gbc.readMem(0xc892));
        // CB 4B 005D
        gbc.setState(0x4d6d, 0x19a9, 0x4e70, 0x4c8, 0xa7de, 0xb2c1, 0x1, 0x1);
        gbc.writeMem(0x4d6d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x19a9, gbc.sp());
        EXPECT(0x4d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 005E
        gbc.setState(0xdfcf, 0x987e, 0x3a50, 0x9ff3, 0x9697, 0x7331, 0x1, 0x1);
        gbc.writeMem(0xdfcf, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x987e, gbc.sp());
        EXPECT(0xdfd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfcf));
        EXPECT(0x4b, gbc.readMem(0xdfd0));
        // CB 4B 005F
        gbc.setState(0x31fc, 0x3680, 0x5ff0, 0x7379, 0x3b9d, 0xa96, 0x1, 0x1);
        gbc.writeMem(0x31fc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3680, gbc.sp());
        EXPECT(0x31fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0060
        gbc.setState(0xe472, 0x7e9, 0x29b0, 0x9486, 0xe90d, 0x7112, 0x0, 0x0);
        gbc.writeMem(0xe472, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7e9, gbc.sp());
        EXPECT(0xe474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe472));
        EXPECT(0x4b, gbc.readMem(0xe473));
        // CB 4B 0061
        gbc.setState(0x484, 0xcf33, 0x4fc0, 0xdf15, 0x59ba, 0x58ca, 0x0, 0x1);
        gbc.writeMem(0x484, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcf33, gbc.sp());
        EXPECT(0x486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0062
        gbc.setState(0xb04e, 0xfdf3, 0x7d30, 0x9169, 0x7045, 0xcf72, 0x1, 0x1);
        gbc.writeMem(0xb04e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xfdf3, gbc.sp());
        EXPECT(0xb050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04e));
        EXPECT(0x4b, gbc.readMem(0xb04f));
        // CB 4B 0063
        gbc.setState(0x546e, 0xf88e, 0x2c80, 0x3dd, 0x118e, 0x4ac8, 0x1, 0x1);
        gbc.writeMem(0x546e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf88e, gbc.sp());
        EXPECT(0x5470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0064
        gbc.setState(0x34a8, 0xefe1, 0x3b20, 0x539a, 0x72e4, 0x7819, 0x1, 0x1);
        gbc.writeMem(0x34a8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xefe1, gbc.sp());
        EXPECT(0x34aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0065
        gbc.setState(0x9d06, 0x4da, 0x3040, 0x87ec, 0x3669, 0x6650, 0x0, 0x1);
        gbc.writeMem(0x9d06, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4da, gbc.sp());
        EXPECT(0x9d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d06));
        EXPECT(0x4b, gbc.readMem(0x9d07));
        // CB 4B 0066
        gbc.setState(0x52ba, 0xd3e1, 0x7c0, 0xebf0, 0x7d02, 0x4c97, 0x0, 0x1);
        gbc.writeMem(0x52ba, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd3e1, gbc.sp());
        EXPECT(0x52bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0067
        gbc.setState(0x2c04, 0x2a4f, 0x6120, 0xf059, 0x63b3, 0x914e, 0x0, 0x1);
        gbc.writeMem(0x2c04, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2a4f, gbc.sp());
        EXPECT(0x2c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0068
        gbc.setState(0x9363, 0x9204, 0x7260, 0xfb10, 0x77c0, 0x45e1, 0x1, 0x0);
        gbc.writeMem(0x9363, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9204, gbc.sp());
        EXPECT(0x9365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9363));
        EXPECT(0x4b, gbc.readMem(0x9364));
        // CB 4B 0069
        gbc.setState(0x1ecb, 0xdf17, 0xb1f0, 0xd511, 0x24ae, 0xb71b, 0x1, 0x1);
        gbc.writeMem(0x1ecb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdf17, gbc.sp());
        EXPECT(0x1ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 006A
        gbc.setState(0x9b04, 0x66ab, 0x53c0, 0x8631, 0x7ccb, 0x9eb8, 0x1, 0x0);
        gbc.writeMem(0x9b04, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x66ab, gbc.sp());
        EXPECT(0x9b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b04));
        EXPECT(0x4b, gbc.readMem(0x9b05));
        // CB 4B 006B
        gbc.setState(0x382b, 0x9a4a, 0x90c0, 0x9e8b, 0x38d4, 0xdc45, 0x0, 0x0);
        gbc.writeMem(0x382b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9a4a, gbc.sp());
        EXPECT(0x382d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 006C
        gbc.setState(0x2a93, 0xf9f4, 0xa8c0, 0x5134, 0x52ab, 0x4fc4, 0x0, 0x1);
        gbc.writeMem(0x2a93, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf9f4, gbc.sp());
        EXPECT(0x2a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 006D
        gbc.setState(0xaa1f, 0x17f8, 0xa7f0, 0x743d, 0x30fa, 0x7f5b, 0x0, 0x0);
        gbc.writeMem(0xaa1f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x17f8, gbc.sp());
        EXPECT(0xaa21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa1f));
        EXPECT(0x4b, gbc.readMem(0xaa20));
        // CB 4B 006E
        gbc.setState(0xd6ca, 0x28bc, 0x43d0, 0xb3b1, 0x1b29, 0x635a, 0x0, 0x1);
        gbc.writeMem(0xd6ca, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x28bc, gbc.sp());
        EXPECT(0xd6cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ca));
        EXPECT(0x4b, gbc.readMem(0xd6cb));
        // CB 4B 0070
        gbc.setState(0x7688, 0xb041, 0xe0e0, 0x4b7, 0x4263, 0x7327, 0x0, 0x0);
        gbc.writeMem(0x7688, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb041, gbc.sp());
        EXPECT(0x768a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0071
        gbc.setState(0xabb1, 0x1bcc, 0x7b70, 0xc611, 0x48be, 0xc456, 0x1, 0x0);
        gbc.writeMem(0xabb1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1bcc, gbc.sp());
        EXPECT(0xabb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb1));
        EXPECT(0x4b, gbc.readMem(0xabb2));
        // CB 4B 0072
        gbc.setState(0x176b, 0x7fee, 0x1ab0, 0x5cef, 0x1105, 0x157, 0x1, 0x0);
        gbc.writeMem(0x176b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7fee, gbc.sp());
        EXPECT(0x176d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0073
        gbc.setState(0xd9e4, 0x75a8, 0x42e0, 0xc45c, 0x13e7, 0xb94a, 0x0, 0x0);
        gbc.writeMem(0xd9e4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x75a8, gbc.sp());
        EXPECT(0xd9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e4));
        EXPECT(0x4b, gbc.readMem(0xd9e5));
        // CB 4B 0074
        gbc.setState(0x91f3, 0x3c69, 0x9580, 0x996b, 0x5fc7, 0x674, 0x1, 0x0);
        gbc.writeMem(0x91f3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3c69, gbc.sp());
        EXPECT(0x91f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f3));
        EXPECT(0x4b, gbc.readMem(0x91f4));
        // CB 4B 0076
        gbc.setState(0x1f99, 0x70b, 0xfd40, 0x6111, 0xc0d9, 0x68ea, 0x1, 0x0);
        gbc.writeMem(0x1f99, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x70b, gbc.sp());
        EXPECT(0x1f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0077
        gbc.setState(0x87e6, 0x628c, 0xf900, 0x591, 0xf0b1, 0xe55e, 0x1, 0x0);
        gbc.writeMem(0x87e6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x628c, gbc.sp());
        EXPECT(0x87e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e6));
        EXPECT(0x4b, gbc.readMem(0x87e7));
        // CB 4B 0078
        gbc.setState(0x84ec, 0x922, 0x2350, 0x2808, 0xd245, 0x6b4e, 0x0, 0x1);
        gbc.writeMem(0x84ec, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x922, gbc.sp());
        EXPECT(0x84ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ec));
        EXPECT(0x4b, gbc.readMem(0x84ed));
        // CB 4B 0079
        gbc.setState(0x2d90, 0xf278, 0xd990, 0x2766, 0x352f, 0x1057, 0x1, 0x1);
        gbc.writeMem(0x2d90, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf278, gbc.sp());
        EXPECT(0x2d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 007A
        gbc.setState(0x762e, 0x8d8e, 0x6a80, 0xadc0, 0xd0e6, 0xcf7f, 0x0, 0x0);
        gbc.writeMem(0x762e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8d8e, gbc.sp());
        EXPECT(0x7630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 007B
        gbc.setState(0x1925, 0xf6c0, 0x92a0, 0x7e7d, 0x5d9a, 0x616b, 0x1, 0x0);
        gbc.writeMem(0x1925, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf6c0, gbc.sp());
        EXPECT(0x1927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 007C
        gbc.setState(0x12cf, 0x7527, 0xb20, 0xdb1, 0xdeb, 0x79a0, 0x0, 0x0);
        gbc.writeMem(0x12cf, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7527, gbc.sp());
        EXPECT(0x12d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 007D
        gbc.setState(0x1175, 0xce27, 0x6a50, 0x1af9, 0x65e4, 0xb215, 0x0, 0x0);
        gbc.writeMem(0x1175, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xce27, gbc.sp());
        EXPECT(0x1177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 007E
        gbc.setState(0x649b, 0xa6d2, 0x9710, 0x8392, 0x8d88, 0x67f0, 0x1, 0x0);
        gbc.writeMem(0x649b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa6d2, gbc.sp());
        EXPECT(0x649d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0080
        gbc.setState(0x6598, 0x6141, 0x7fd0, 0x9449, 0xe0b4, 0x453e, 0x1, 0x0);
        gbc.writeMem(0x6598, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6141, gbc.sp());
        EXPECT(0x659a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0081
        gbc.setState(0xec6c, 0x92d, 0x7740, 0x8abd, 0xb51d, 0xdae0, 0x0, 0x1);
        gbc.writeMem(0xec6c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x92d, gbc.sp());
        EXPECT(0xec6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6c));
        EXPECT(0x4b, gbc.readMem(0xec6d));
        // CB 4B 0082
        gbc.setState(0x5e3a, 0x3c8d, 0xc270, 0x31b0, 0x8e4e, 0x63f6, 0x0, 0x1);
        gbc.writeMem(0x5e3a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3c8d, gbc.sp());
        EXPECT(0x5e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0083
        gbc.setState(0x1d4c, 0x8bf4, 0xf6b0, 0x2760, 0x919f, 0xc60, 0x1, 0x0);
        gbc.writeMem(0x1d4c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8bf4, gbc.sp());
        EXPECT(0x1d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0084
        gbc.setState(0xb091, 0xa9cc, 0x6720, 0x93ae, 0xb3b2, 0xfa2, 0x0, 0x0);
        gbc.writeMem(0xb091, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa9cc, gbc.sp());
        EXPECT(0xb093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb091));
        EXPECT(0x4b, gbc.readMem(0xb092));
        // CB 4B 0085
        gbc.setState(0x105a, 0x26c, 0x5b20, 0x383a, 0x3c4d, 0x5959, 0x0, 0x1);
        gbc.writeMem(0x105a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x26c, gbc.sp());
        EXPECT(0x105c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0086
        gbc.setState(0xa6a1, 0xecd5, 0x9610, 0x9e8, 0xf22d, 0x4242, 0x1, 0x1);
        gbc.writeMem(0xa6a1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xecd5, gbc.sp());
        EXPECT(0xa6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a1));
        EXPECT(0x4b, gbc.readMem(0xa6a2));
        // CB 4B 0087
        gbc.setState(0x2b66, 0x1dcd, 0x2610, 0x267f, 0xb5fb, 0x36e6, 0x0, 0x0);
        gbc.writeMem(0x2b66, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1dcd, gbc.sp());
        EXPECT(0x2b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0088
        gbc.setState(0x750c, 0xab3, 0xd850, 0x6e8d, 0x5082, 0xc1a7, 0x1, 0x0);
        gbc.writeMem(0x750c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xab3, gbc.sp());
        EXPECT(0x750e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0089
        gbc.setState(0x95b8, 0x8996, 0xaf10, 0xd907, 0x445f, 0x8b93, 0x1, 0x0);
        gbc.writeMem(0x95b8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8996, gbc.sp());
        EXPECT(0x95ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b8));
        EXPECT(0x4b, gbc.readMem(0x95b9));
        // CB 4B 008A
        gbc.setState(0xf0b, 0x8942, 0xce10, 0x6286, 0xdf60, 0x55b3, 0x0, 0x0);
        gbc.writeMem(0xf0b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8942, gbc.sp());
        EXPECT(0xf0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 008B
        gbc.setState(0xa22a, 0xed10, 0xfd90, 0x96f2, 0x1b40, 0xdf39, 0x1, 0x0);
        gbc.writeMem(0xa22a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xed10, gbc.sp());
        EXPECT(0xa22c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa22a));
        EXPECT(0x4b, gbc.readMem(0xa22b));
        // CB 4B 008C
        gbc.setState(0x2438, 0x3314, 0x7b00, 0x5363, 0xee90, 0x7666, 0x0, 0x1);
        gbc.writeMem(0x2438, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3314, gbc.sp());
        EXPECT(0x243a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 008D
        gbc.setState(0xe154, 0xb588, 0x9b30, 0xa236, 0x7316, 0x917f, 0x1, 0x1);
        gbc.writeMem(0xe154, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb588, gbc.sp());
        EXPECT(0xe156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe154));
        EXPECT(0x4b, gbc.readMem(0xe155));
        // CB 4B 008E
        gbc.setState(0xded3, 0xb0f7, 0x83c0, 0xc2f9, 0xc39a, 0x52c9, 0x0, 0x0);
        gbc.writeMem(0xded3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb0f7, gbc.sp());
        EXPECT(0xded5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded3));
        EXPECT(0x4b, gbc.readMem(0xded4));
        // CB 4B 008F
        gbc.setState(0x650c, 0xd4aa, 0x16f0, 0x9e7, 0xebb2, 0x9fa1, 0x1, 0x0);
        gbc.writeMem(0x650c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd4aa, gbc.sp());
        EXPECT(0x650e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0090
        gbc.setState(0xe692, 0xdb34, 0x4a0, 0x5b4c, 0xbced, 0x5e54, 0x1, 0x1);
        gbc.writeMem(0xe692, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdb34, gbc.sp());
        EXPECT(0xe694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe692));
        EXPECT(0x4b, gbc.readMem(0xe693));
        // CB 4B 0091
        gbc.setState(0xdd37, 0x2528, 0xee10, 0x137a, 0x7c, 0x5a84, 0x1, 0x1);
        gbc.writeMem(0xdd37, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2528, gbc.sp());
        EXPECT(0xdd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd37));
        EXPECT(0x4b, gbc.readMem(0xdd38));
        // CB 4B 0092
        gbc.setState(0xee69, 0xa7bd, 0xd880, 0x22c1, 0x805b, 0xd74e, 0x1, 0x0);
        gbc.writeMem(0xee69, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa7bd, gbc.sp());
        EXPECT(0xee6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee69));
        EXPECT(0x4b, gbc.readMem(0xee6a));
        // CB 4B 0093
        gbc.setState(0x3686, 0x4472, 0x2af0, 0x10a1, 0x29f2, 0x983e, 0x1, 0x0);
        gbc.writeMem(0x3686, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4472, gbc.sp());
        EXPECT(0x3688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0094
        gbc.setState(0x95ce, 0xd21, 0x5c30, 0xe35b, 0xe3bc, 0xa279, 0x1, 0x1);
        gbc.writeMem(0x95ce, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd21, gbc.sp());
        EXPECT(0x95d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ce));
        EXPECT(0x4b, gbc.readMem(0x95cf));
        // CB 4B 0095
        gbc.setState(0x4bd5, 0x8cf0, 0x7dd0, 0xa99c, 0xc99a, 0x68e6, 0x0, 0x1);
        gbc.writeMem(0x4bd5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8cf0, gbc.sp());
        EXPECT(0x4bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0096
        gbc.setState(0x8fcc, 0x6286, 0x5b20, 0xd087, 0xed71, 0x6c22, 0x1, 0x1);
        gbc.writeMem(0x8fcc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6286, gbc.sp());
        EXPECT(0x8fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fcc));
        EXPECT(0x4b, gbc.readMem(0x8fcd));
        // CB 4B 0097
        gbc.setState(0x8694, 0x783b, 0xc590, 0x2730, 0xd7fa, 0x62b3, 0x1, 0x0);
        gbc.writeMem(0x8694, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x783b, gbc.sp());
        EXPECT(0x8696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8694));
        EXPECT(0x4b, gbc.readMem(0x8695));
        // CB 4B 0098
        gbc.setState(0x81a8, 0xc011, 0xe9c0, 0xcc0c, 0x65e2, 0xe762, 0x0, 0x1);
        gbc.writeMem(0x81a8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc011, gbc.sp());
        EXPECT(0x81aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a8));
        EXPECT(0x4b, gbc.readMem(0x81a9));
        // CB 4B 0099
        gbc.setState(0xabf6, 0x7b30, 0x6400, 0x42a7, 0x8ae2, 0x2bf4, 0x0, 0x1);
        gbc.writeMem(0xabf6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7b30, gbc.sp());
        EXPECT(0xabf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf6));
        EXPECT(0x4b, gbc.readMem(0xabf7));
        // CB 4B 009A
        gbc.setState(0xed14, 0x1ad4, 0x67b0, 0x5f6d, 0x5abf, 0x981a, 0x0, 0x0);
        gbc.writeMem(0xed14, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1ad4, gbc.sp());
        EXPECT(0xed16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed14));
        EXPECT(0x4b, gbc.readMem(0xed15));
        // CB 4B 009B
        gbc.setState(0xa00, 0xf834, 0xac70, 0x3791, 0x6cd0, 0x6642, 0x1, 0x0);
        gbc.writeMem(0xa00, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf834, gbc.sp());
        EXPECT(0xa02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 009C
        gbc.setState(0xc749, 0x5612, 0xc530, 0x4359, 0xa02c, 0x106f, 0x0, 0x0);
        gbc.writeMem(0xc749, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5612, gbc.sp());
        EXPECT(0xc74b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc749));
        EXPECT(0x4b, gbc.readMem(0xc74a));
        // CB 4B 009D
        gbc.setState(0x8a61, 0x1dfa, 0x3ce0, 0x6ef, 0x1814, 0x334b, 0x1, 0x1);
        gbc.writeMem(0x8a61, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1dfa, gbc.sp());
        EXPECT(0x8a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a61));
        EXPECT(0x4b, gbc.readMem(0x8a62));
        // CB 4B 009E
        gbc.setState(0xba24, 0xa4f8, 0x6c20, 0x8ffd, 0xde0f, 0x83c2, 0x0, 0x1);
        gbc.writeMem(0xba24, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa4f8, gbc.sp());
        EXPECT(0xba26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba24));
        EXPECT(0x4b, gbc.readMem(0xba25));
        // CB 4B 009F
        gbc.setState(0xc64d, 0xf85e, 0x9240, 0x2233, 0x85d3, 0x911f, 0x0, 0x0);
        gbc.writeMem(0xc64d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf85e, gbc.sp());
        EXPECT(0xc64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64d));
        EXPECT(0x4b, gbc.readMem(0xc64e));
        // CB 4B 00A0
        gbc.setState(0x57b7, 0x4ed3, 0xa6d0, 0x6840, 0x64a0, 0xc94c, 0x1, 0x1);
        gbc.writeMem(0x57b7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4ed3, gbc.sp());
        EXPECT(0x57b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00A1
        gbc.setState(0xdfbf, 0x7130, 0xc590, 0x6ee4, 0xaedd, 0x89e2, 0x0, 0x0);
        gbc.writeMem(0xdfbf, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7130, gbc.sp());
        EXPECT(0xdfc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfbf));
        EXPECT(0x4b, gbc.readMem(0xdfc0));
        // CB 4B 00A2
        gbc.setState(0x5900, 0xad03, 0xcde0, 0xb39f, 0x4bb5, 0xea0, 0x0, 0x1);
        gbc.writeMem(0x5900, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xad03, gbc.sp());
        EXPECT(0x5902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00A3
        gbc.setState(0x9826, 0x18b0, 0x4670, 0xeb91, 0x71c5, 0x921, 0x1, 0x1);
        gbc.writeMem(0x9826, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x18b0, gbc.sp());
        EXPECT(0x9828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9826));
        EXPECT(0x4b, gbc.readMem(0x9827));
        // CB 4B 00A4
        gbc.setState(0x92b0, 0x8b33, 0x50c0, 0x2eef, 0x4e7e, 0x11ac, 0x0, 0x1);
        gbc.writeMem(0x92b0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8b33, gbc.sp());
        EXPECT(0x92b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b0));
        EXPECT(0x4b, gbc.readMem(0x92b1));
        // CB 4B 00A5
        gbc.setState(0x97d9, 0x2f83, 0x8a0, 0x316f, 0x6758, 0xc558, 0x0, 0x0);
        gbc.writeMem(0x97d9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2f83, gbc.sp());
        EXPECT(0x97db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d9));
        EXPECT(0x4b, gbc.readMem(0x97da));
        // CB 4B 00A6
        gbc.setState(0x26d2, 0x662c, 0xa340, 0xdead, 0x836f, 0xec1d, 0x0, 0x1);
        gbc.writeMem(0x26d2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x662c, gbc.sp());
        EXPECT(0x26d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00A7
        gbc.setState(0x255a, 0xadc6, 0x7f70, 0x7210, 0xacc0, 0x5312, 0x0, 0x0);
        gbc.writeMem(0x255a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xadc6, gbc.sp());
        EXPECT(0x255c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00A8
        gbc.setState(0xde9, 0x5c92, 0x6e50, 0xa2e0, 0x5467, 0xbb81, 0x0, 0x1);
        gbc.writeMem(0xde9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5c92, gbc.sp());
        EXPECT(0xdeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00A9
        gbc.setState(0xca83, 0x99d7, 0x3ea0, 0x2763, 0xb5a4, 0x5241, 0x0, 0x1);
        gbc.writeMem(0xca83, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x99d7, gbc.sp());
        EXPECT(0xca85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca83));
        EXPECT(0x4b, gbc.readMem(0xca84));
        // CB 4B 00AA
        gbc.setState(0x26fb, 0x88c, 0x54d0, 0xe35b, 0xb59d, 0xe281, 0x1, 0x1);
        gbc.writeMem(0x26fb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x88c, gbc.sp());
        EXPECT(0x26fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00AB
        gbc.setState(0xc3eb, 0x5a4a, 0x8e60, 0x9838, 0x4157, 0xb21f, 0x1, 0x0);
        gbc.writeMem(0xc3eb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5a4a, gbc.sp());
        EXPECT(0xc3ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3eb));
        EXPECT(0x4b, gbc.readMem(0xc3ec));
        // CB 4B 00AC
        gbc.setState(0x3828, 0xb5d, 0xfe0, 0x9cb, 0xb8d7, 0xad56, 0x0, 0x0);
        gbc.writeMem(0x3828, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb5d, gbc.sp());
        EXPECT(0x382a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00AD
        gbc.setState(0x23ec, 0xeac2, 0x9060, 0xe69c, 0x95b1, 0xd15e, 0x1, 0x0);
        gbc.writeMem(0x23ec, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeac2, gbc.sp());
        EXPECT(0x23ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00AE
        gbc.setState(0xc34a, 0x2906, 0x50c0, 0xff7f, 0xb021, 0xea55, 0x0, 0x1);
        gbc.writeMem(0xc34a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2906, gbc.sp());
        EXPECT(0xc34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34a));
        EXPECT(0x4b, gbc.readMem(0xc34b));
        // CB 4B 00AF
        gbc.setState(0x22b4, 0x6d82, 0x4ce0, 0xa189, 0x47d2, 0xdcf9, 0x1, 0x1);
        gbc.writeMem(0x22b4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6d82, gbc.sp());
        EXPECT(0x22b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00B0
        gbc.setState(0x8e99, 0xa2b3, 0xcfa0, 0x9fa2, 0xd2a9, 0x903f, 0x0, 0x1);
        gbc.writeMem(0x8e99, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa2b3, gbc.sp());
        EXPECT(0x8e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e99));
        EXPECT(0x4b, gbc.readMem(0x8e9a));
        // CB 4B 00B1
        gbc.setState(0xda8d, 0x4fd5, 0x2ef0, 0x5334, 0xa7fa, 0xf54, 0x0, 0x1);
        gbc.writeMem(0xda8d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4fd5, gbc.sp());
        EXPECT(0xda8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8d));
        EXPECT(0x4b, gbc.readMem(0xda8e));
        // CB 4B 00B2
        gbc.setState(0x808b, 0xbcd0, 0xcb80, 0xfb3b, 0xc480, 0x10f0, 0x1, 0x1);
        gbc.writeMem(0x808b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbcd0, gbc.sp());
        EXPECT(0x808d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808b));
        EXPECT(0x4b, gbc.readMem(0x808c));
        // CB 4B 00B4
        gbc.setState(0x4390, 0xc9e5, 0xf30, 0xdbc5, 0xa424, 0x9274, 0x0, 0x1);
        gbc.writeMem(0x4390, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc9e5, gbc.sp());
        EXPECT(0x4392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00B5
        gbc.setState(0x936a, 0xca61, 0xa620, 0x2b07, 0x4627, 0xf3ad, 0x0, 0x0);
        gbc.writeMem(0x936a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xca61, gbc.sp());
        EXPECT(0x936c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x936a));
        EXPECT(0x4b, gbc.readMem(0x936b));
        // CB 4B 00B6
        gbc.setState(0x319, 0xcf9, 0xf260, 0x9f52, 0x94bb, 0x524e, 0x0, 0x0);
        gbc.writeMem(0x319, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcf9, gbc.sp());
        EXPECT(0x31b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00B7
        gbc.setState(0x25d6, 0xf6ea, 0x7fb0, 0x2ea4, 0x7540, 0xd9e1, 0x0, 0x1);
        gbc.writeMem(0x25d6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf6ea, gbc.sp());
        EXPECT(0x25d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00B8
        gbc.setState(0x3c78, 0x9271, 0x85c0, 0x56a6, 0xd3bd, 0xc7cb, 0x1, 0x1);
        gbc.writeMem(0x3c78, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9271, gbc.sp());
        EXPECT(0x3c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00B9
        gbc.setState(0xcb2e, 0x80cd, 0x6d90, 0xb82e, 0x5e01, 0x3183, 0x0, 0x0);
        gbc.writeMem(0xcb2e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x80cd, gbc.sp());
        EXPECT(0xcb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2e));
        EXPECT(0x4b, gbc.readMem(0xcb2f));
        // CB 4B 00BA
        gbc.setState(0x701b, 0x548f, 0xab20, 0xfb52, 0x8862, 0xa7b5, 0x1, 0x0);
        gbc.writeMem(0x701b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x548f, gbc.sp());
        EXPECT(0x701d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00BB
        gbc.setState(0x2af9, 0xa135, 0x40, 0x46af, 0x720, 0x72b, 0x1, 0x1);
        gbc.writeMem(0x2af9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa135, gbc.sp());
        EXPECT(0x2afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00BC
        gbc.setState(0x517c, 0x7b12, 0xa610, 0xb80d, 0x2ad8, 0x516f, 0x0, 0x1);
        gbc.writeMem(0x517c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7b12, gbc.sp());
        EXPECT(0x517e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00BE
        gbc.setState(0xb99d, 0xe057, 0xe1b0, 0x5ea7, 0x8edb, 0x1daa, 0x1, 0x1);
        gbc.writeMem(0xb99d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe057, gbc.sp());
        EXPECT(0xb99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99d));
        EXPECT(0x4b, gbc.readMem(0xb99e));
        // CB 4B 00BF
        gbc.setState(0xe5a7, 0x1991, 0x3ec0, 0x180e, 0xba58, 0xa1ba, 0x0, 0x1);
        gbc.writeMem(0xe5a7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1991, gbc.sp());
        EXPECT(0xe5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5a7));
        EXPECT(0x4b, gbc.readMem(0xe5a8));
        // CB 4B 00C0
        gbc.setState(0xa094, 0x61b2, 0x13b0, 0x52a4, 0x76fc, 0x51bf, 0x0, 0x0);
        gbc.writeMem(0xa094, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x61b2, gbc.sp());
        EXPECT(0xa096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa094));
        EXPECT(0x4b, gbc.readMem(0xa095));
        // CB 4B 00C3
        gbc.setState(0x41b6, 0xc399, 0xa7e0, 0xa104, 0xc633, 0x8e46, 0x1, 0x0);
        gbc.writeMem(0x41b6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc399, gbc.sp());
        EXPECT(0x41b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00C4
        gbc.setState(0x47bb, 0xe532, 0x3090, 0xf4bc, 0x9a6c, 0xbd77, 0x1, 0x0);
        gbc.writeMem(0x47bb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe532, gbc.sp());
        EXPECT(0x47bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00C5
        gbc.setState(0x157a, 0x7e2f, 0x12f0, 0xe47a, 0xf27, 0x19a8, 0x1, 0x0);
        gbc.writeMem(0x157a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7e2f, gbc.sp());
        EXPECT(0x157c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00C6
        gbc.setState(0xcb0c, 0x86f1, 0x66d0, 0x9727, 0x9d16, 0x9f63, 0x0, 0x0);
        gbc.writeMem(0xcb0c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x86f1, gbc.sp());
        EXPECT(0xcb0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb0c));
        EXPECT(0x4b, gbc.readMem(0xcb0d));
        // CB 4B 00C7
        gbc.setState(0x132f, 0x5aba, 0xf670, 0xf392, 0x881e, 0xdc5e, 0x1, 0x1);
        gbc.writeMem(0x132f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5aba, gbc.sp());
        EXPECT(0x1331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00C8
        gbc.setState(0x7efe, 0x7b24, 0x7720, 0x5462, 0x17fa, 0xba0a, 0x1, 0x1);
        gbc.writeMem(0x7efe, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7b24, gbc.sp());
        EXPECT(0x7f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00C9
        gbc.setState(0x3e43, 0x5887, 0x1880, 0xf53e, 0x534b, 0x214e, 0x0, 0x1);
        gbc.writeMem(0x3e43, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5887, gbc.sp());
        EXPECT(0x3e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00CA
        gbc.setState(0x25a9, 0x2590, 0xfd60, 0xa223, 0x9ce4, 0xbc84, 0x0, 0x0);
        gbc.writeMem(0x25a9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2590, gbc.sp());
        EXPECT(0x25ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00CB
        gbc.setState(0xacb, 0x4607, 0x70f0, 0x82a7, 0x7500, 0x8e37, 0x0, 0x0);
        gbc.writeMem(0xacb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4607, gbc.sp());
        EXPECT(0xacd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00CC
        gbc.setState(0x2e04, 0xd61a, 0x8d70, 0xe348, 0xf4da, 0x80e2, 0x1, 0x1);
        gbc.writeMem(0x2e04, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd61a, gbc.sp());
        EXPECT(0x2e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00CD
        gbc.setState(0x5a3f, 0xea82, 0xdb90, 0xce4a, 0xcf04, 0xdb3c, 0x0, 0x0);
        gbc.writeMem(0x5a3f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xea82, gbc.sp());
        EXPECT(0x5a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00CE
        gbc.setState(0xaddc, 0xb603, 0x54b0, 0xec4e, 0x9f6e, 0x9b15, 0x1, 0x0);
        gbc.writeMem(0xaddc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb603, gbc.sp());
        EXPECT(0xadde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddc));
        EXPECT(0x4b, gbc.readMem(0xaddd));
        // CB 4B 00CF
        gbc.setState(0x29ec, 0x5725, 0x63c0, 0xa739, 0x287e, 0x5efe, 0x0, 0x1);
        gbc.writeMem(0x29ec, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5725, gbc.sp());
        EXPECT(0x29ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00D1
        gbc.setState(0xcf97, 0x3d7c, 0x2550, 0xb17b, 0xb424, 0x3f05, 0x0, 0x1);
        gbc.writeMem(0xcf97, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3d7c, gbc.sp());
        EXPECT(0xcf99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf97));
        EXPECT(0x4b, gbc.readMem(0xcf98));
        // CB 4B 00D5
        gbc.setState(0x5334, 0xaba6, 0x75b0, 0xb1c3, 0xb676, 0xe511, 0x1, 0x1);
        gbc.writeMem(0x5334, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xaba6, gbc.sp());
        EXPECT(0x5336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00D6
        gbc.setState(0x276c, 0x2007, 0x4220, 0x7b9b, 0xf28c, 0xbfe1, 0x1, 0x1);
        gbc.writeMem(0x276c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2007, gbc.sp());
        EXPECT(0x276e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00D7
        gbc.setState(0xd93e, 0xba92, 0xc2b0, 0xc1f7, 0xac9c, 0x5433, 0x0, 0x0);
        gbc.writeMem(0xd93e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xba92, gbc.sp());
        EXPECT(0xd940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd93e));
        EXPECT(0x4b, gbc.readMem(0xd93f));
        // CB 4B 00D8
        gbc.setState(0x4805, 0x5036, 0xd910, 0xe482, 0x978e, 0x9e74, 0x0, 0x0);
        gbc.writeMem(0x4805, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5036, gbc.sp());
        EXPECT(0x4807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00D9
        gbc.setState(0xc814, 0xdc3f, 0xfe60, 0x140, 0xffa9, 0x7e2b, 0x1, 0x0);
        gbc.writeMem(0xc814, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdc3f, gbc.sp());
        EXPECT(0xc816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc814));
        EXPECT(0x4b, gbc.readMem(0xc815));
        // CB 4B 00DA
        gbc.setState(0x91a8, 0x62b4, 0xed70, 0xfae4, 0xe665, 0xf05e, 0x0, 0x0);
        gbc.writeMem(0x91a8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x62b4, gbc.sp());
        EXPECT(0x91aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a8));
        EXPECT(0x4b, gbc.readMem(0x91a9));
        // CB 4B 00DB
        gbc.setState(0x3202, 0xcc53, 0xdbb0, 0x834b, 0x9d4e, 0xc80d, 0x0, 0x0);
        gbc.writeMem(0x3202, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcc53, gbc.sp());
        EXPECT(0x3204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00DC
        gbc.setState(0x3eb5, 0xf834, 0x5830, 0x7724, 0x5fc5, 0xe6d6, 0x1, 0x0);
        gbc.writeMem(0x3eb5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf834, gbc.sp());
        EXPECT(0x3eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00DD
        gbc.setState(0xa7b, 0x8127, 0x2820, 0x6d0, 0x738a, 0x9b06, 0x1, 0x0);
        gbc.writeMem(0xa7b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8127, gbc.sp());
        EXPECT(0xa7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00DE
        gbc.setState(0x451d, 0x85ec, 0x6ec0, 0x8fe7, 0x9091, 0xa997, 0x0, 0x1);
        gbc.writeMem(0x451d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x85ec, gbc.sp());
        EXPECT(0x451f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00DF
        gbc.setState(0xb6ef, 0xdc77, 0x9670, 0x7f2f, 0xacc2, 0x6f58, 0x1, 0x0);
        gbc.writeMem(0xb6ef, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdc77, gbc.sp());
        EXPECT(0xb6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ef));
        EXPECT(0x4b, gbc.readMem(0xb6f0));
        // CB 4B 00E0
        gbc.setState(0x1bc2, 0x69dd, 0xb60, 0xdcd, 0x2f12, 0xce92, 0x1, 0x0);
        gbc.writeMem(0x1bc2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x69dd, gbc.sp());
        EXPECT(0x1bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00E1
        gbc.setState(0x7285, 0xb042, 0xeab0, 0xe256, 0xdc36, 0x8a4, 0x0, 0x0);
        gbc.writeMem(0x7285, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb042, gbc.sp());
        EXPECT(0x7287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00E2
        gbc.setState(0x3918, 0x2478, 0x2fe0, 0xec62, 0x7d3c, 0x1863, 0x0, 0x1);
        gbc.writeMem(0x3918, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2478, gbc.sp());
        EXPECT(0x391a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00E3
        gbc.setState(0x9522, 0xe79e, 0xcef0, 0x55dd, 0x7c79, 0xde0b, 0x0, 0x0);
        gbc.writeMem(0x9522, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe79e, gbc.sp());
        EXPECT(0x9524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9522));
        EXPECT(0x4b, gbc.readMem(0x9523));
        // CB 4B 00E4
        gbc.setState(0xc06b, 0x9a00, 0xaf10, 0xc6e3, 0xf7ef, 0x7252, 0x0, 0x1);
        gbc.writeMem(0xc06b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9a00, gbc.sp());
        EXPECT(0xc06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc06b));
        EXPECT(0x4b, gbc.readMem(0xc06c));
        // CB 4B 00E5
        gbc.setState(0xc31b, 0x41ed, 0x6eb0, 0x7a0b, 0xf1a6, 0xee90, 0x1, 0x0);
        gbc.writeMem(0xc31b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x41ed, gbc.sp());
        EXPECT(0xc31d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31b));
        EXPECT(0x4b, gbc.readMem(0xc31c));
        // CB 4B 00E6
        gbc.setState(0xacb9, 0x8e4b, 0xcdf0, 0x3d5d, 0xa12, 0x88fb, 0x1, 0x1);
        gbc.writeMem(0xacb9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8e4b, gbc.sp());
        EXPECT(0xacbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb9));
        EXPECT(0x4b, gbc.readMem(0xacba));
        // CB 4B 00E7
        gbc.setState(0x30dc, 0x5e80, 0xf3e0, 0x4dd6, 0x1a34, 0xa41, 0x0, 0x0);
        gbc.writeMem(0x30dc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5e80, gbc.sp());
        EXPECT(0x30de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00E8
        gbc.setState(0x1daf, 0x14e6, 0xd260, 0x7501, 0xabc6, 0x6ead, 0x0, 0x0);
        gbc.writeMem(0x1daf, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x14e6, gbc.sp());
        EXPECT(0x1db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00E9
        gbc.setState(0x9ef0, 0x7c43, 0x7ee0, 0x3cfb, 0xe6ae, 0xcba3, 0x1, 0x1);
        gbc.writeMem(0x9ef0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7c43, gbc.sp());
        EXPECT(0x9ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef0));
        EXPECT(0x4b, gbc.readMem(0x9ef1));
        // CB 4B 00EA
        gbc.setState(0x5332, 0xbf6, 0x6100, 0x1787, 0xa207, 0xb416, 0x0, 0x1);
        gbc.writeMem(0x5332, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbf6, gbc.sp());
        EXPECT(0x5334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00EB
        gbc.setState(0xdf1e, 0x15d0, 0x7c0, 0x204d, 0x74e6, 0xc9ae, 0x0, 0x0);
        gbc.writeMem(0xdf1e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x15d0, gbc.sp());
        EXPECT(0xdf20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf1e));
        EXPECT(0x4b, gbc.readMem(0xdf1f));
        // CB 4B 00ED
        gbc.setState(0x69db, 0xd119, 0x1a40, 0xce3c, 0x482c, 0xf40, 0x0, 0x0);
        gbc.writeMem(0x69db, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd119, gbc.sp());
        EXPECT(0x69dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00EF
        gbc.setState(0x1086, 0x147, 0x7ea0, 0xaa6b, 0x4554, 0x5f14, 0x0, 0x1);
        gbc.writeMem(0x1086, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x147, gbc.sp());
        EXPECT(0x1088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00F0
        gbc.setState(0x99cc, 0x75a2, 0xb160, 0x2acb, 0x2d5a, 0xc0c6, 0x1, 0x1);
        gbc.writeMem(0x99cc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x75a2, gbc.sp());
        EXPECT(0x99ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99cc));
        EXPECT(0x4b, gbc.readMem(0x99cd));
        // CB 4B 00F1
        gbc.setState(0xd61a, 0x64b4, 0xca70, 0x6262, 0x749a, 0x6ad8, 0x1, 0x1);
        gbc.writeMem(0xd61a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x64b4, gbc.sp());
        EXPECT(0xd61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61a));
        EXPECT(0x4b, gbc.readMem(0xd61b));
        // CB 4B 00F2
        gbc.setState(0x592e, 0xb966, 0x5440, 0xdada, 0x4680, 0xc61f, 0x0, 0x0);
        gbc.writeMem(0x592e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb966, gbc.sp());
        EXPECT(0x5930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00F3
        gbc.setState(0x1a07, 0x8a8a, 0xe2e0, 0x1679, 0x8394, 0x51f4, 0x0, 0x0);
        gbc.writeMem(0x1a07, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8a8a, gbc.sp());
        EXPECT(0x1a09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00F4
        gbc.setState(0x1786, 0xd31d, 0xe640, 0x3c85, 0xedb1, 0x780c, 0x0, 0x1);
        gbc.writeMem(0x1786, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd31d, gbc.sp());
        EXPECT(0x1788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00F5
        gbc.setState(0xa0c2, 0x7902, 0x3850, 0x146f, 0x132e, 0x274b, 0x1, 0x1);
        gbc.writeMem(0xa0c2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7902, gbc.sp());
        EXPECT(0xa0c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c2));
        EXPECT(0x4b, gbc.readMem(0xa0c3));
        // CB 4B 00F6
        gbc.setState(0xde9a, 0x97b7, 0x6830, 0x20d8, 0x9547, 0xb795, 0x0, 0x0);
        gbc.writeMem(0xde9a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x97b7, gbc.sp());
        EXPECT(0xde9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9a));
        EXPECT(0x4b, gbc.readMem(0xde9b));
        // CB 4B 00F7
        gbc.setState(0xcad2, 0x7647, 0x3d70, 0x3c2b, 0x97f, 0x372a, 0x1, 0x0);
        gbc.writeMem(0xcad2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7647, gbc.sp());
        EXPECT(0xcad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad2));
        EXPECT(0x4b, gbc.readMem(0xcad3));
        // CB 4B 00F8
        gbc.setState(0x792b, 0xefc7, 0x29f0, 0x2654, 0x32a5, 0xdee1, 0x1, 0x0);
        gbc.writeMem(0x792b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xefc7, gbc.sp());
        EXPECT(0x792d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00F9
        gbc.setState(0xeb5c, 0xfc09, 0x2ae0, 0x64c7, 0x1c58, 0x4f83, 0x1, 0x0);
        gbc.writeMem(0xeb5c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfc09, gbc.sp());
        EXPECT(0xeb5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5c));
        EXPECT(0x4b, gbc.readMem(0xeb5d));
        // CB 4B 00FA
        gbc.setState(0x2dc1, 0x7a73, 0xefa0, 0x7214, 0xb3bc, 0x15af, 0x1, 0x0);
        gbc.writeMem(0x2dc1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7a73, gbc.sp());
        EXPECT(0x2dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 00FB
        gbc.setState(0xea49, 0xc92, 0xad80, 0x3cd3, 0x28a0, 0xcc8d, 0x1, 0x0);
        gbc.writeMem(0xea49, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc92, gbc.sp());
        EXPECT(0xea4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea49));
        EXPECT(0x4b, gbc.readMem(0xea4a));
        // CB 4B 00FC
        gbc.setState(0xa562, 0x2fb6, 0xbf90, 0xe8ab, 0x309f, 0x3c05, 0x0, 0x0);
        gbc.writeMem(0xa562, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2fb6, gbc.sp());
        EXPECT(0xa564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa562));
        EXPECT(0x4b, gbc.readMem(0xa563));
        // CB 4B 00FD
        gbc.setState(0x190c, 0xd203, 0xcd30, 0x861c, 0xb85e, 0x354f, 0x0, 0x0);
        gbc.writeMem(0x190c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd203, gbc.sp());
        EXPECT(0x190e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 00FF
        gbc.setState(0xea45, 0x1f0b, 0x24b0, 0xd136, 0xffd8, 0x6d34, 0x1, 0x0);
        gbc.writeMem(0xea45, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1f0b, gbc.sp());
        EXPECT(0xea47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea45));
        EXPECT(0x4b, gbc.readMem(0xea46));
        // CB 4B 0100
        gbc.setState(0x6735, 0x77ed, 0xcc90, 0x2c64, 0x35b8, 0x78cf, 0x0, 0x1);
        gbc.writeMem(0x6735, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x77ed, gbc.sp());
        EXPECT(0x6737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0101
        gbc.setState(0x973b, 0x8da0, 0x1920, 0x97ce, 0xfc8b, 0x282b, 0x0, 0x0);
        gbc.writeMem(0x973b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8da0, gbc.sp());
        EXPECT(0x973d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973b));
        EXPECT(0x4b, gbc.readMem(0x973c));
        // CB 4B 0102
        gbc.setState(0xc6e8, 0xd18, 0xe580, 0x9c68, 0x5ab6, 0xbf56, 0x1, 0x0);
        gbc.writeMem(0xc6e8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd18, gbc.sp());
        EXPECT(0xc6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e8));
        EXPECT(0x4b, gbc.readMem(0xc6e9));
        // CB 4B 0103
        gbc.setState(0x8da0, 0xd6da, 0x67d0, 0xbb86, 0x8cff, 0xae94, 0x1, 0x0);
        gbc.writeMem(0x8da0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd6da, gbc.sp());
        EXPECT(0x8da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da0));
        EXPECT(0x4b, gbc.readMem(0x8da1));
        // CB 4B 0104
        gbc.setState(0x51dd, 0x84f2, 0x1080, 0xe40b, 0x9cab, 0xe795, 0x1, 0x0);
        gbc.writeMem(0x51dd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x84f2, gbc.sp());
        EXPECT(0x51df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0105
        gbc.setState(0x91eb, 0x207c, 0xa080, 0x71c, 0x6f47, 0x7346, 0x1, 0x0);
        gbc.writeMem(0x91eb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x207c, gbc.sp());
        EXPECT(0x91ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91eb));
        EXPECT(0x4b, gbc.readMem(0x91ec));
        // CB 4B 0106
        gbc.setState(0xcf4a, 0xfac8, 0x6f20, 0x21d8, 0xb649, 0x6fff, 0x1, 0x0);
        gbc.writeMem(0xcf4a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfac8, gbc.sp());
        EXPECT(0xcf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4a));
        EXPECT(0x4b, gbc.readMem(0xcf4b));
        // CB 4B 0107
        gbc.setState(0xb352, 0x9f50, 0x34e0, 0xde4e, 0x68, 0x64d5, 0x0, 0x0);
        gbc.writeMem(0xb352, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9f50, gbc.sp());
        EXPECT(0xb354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb352));
        EXPECT(0x4b, gbc.readMem(0xb353));
        // CB 4B 0108
        gbc.setState(0x129f, 0xe0a0, 0x5270, 0xce76, 0xa659, 0x5fad, 0x1, 0x0);
        gbc.writeMem(0x129f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe0a0, gbc.sp());
        EXPECT(0x12a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0109
        gbc.setState(0x1a9a, 0x6f9e, 0x97f0, 0x28d2, 0xa3bb, 0x9b39, 0x1, 0x0);
        gbc.writeMem(0x1a9a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6f9e, gbc.sp());
        EXPECT(0x1a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 010A
        gbc.setState(0xb962, 0x902e, 0x6aa0, 0x26b1, 0x4ba2, 0x25ef, 0x0, 0x0);
        gbc.writeMem(0xb962, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x902e, gbc.sp());
        EXPECT(0xb964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb962));
        EXPECT(0x4b, gbc.readMem(0xb963));
        // CB 4B 010B
        gbc.setState(0x42c, 0xb937, 0xee30, 0xab87, 0xa0a7, 0x6ddf, 0x1, 0x0);
        gbc.writeMem(0x42c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb937, gbc.sp());
        EXPECT(0x42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 010C
        gbc.setState(0xb23f, 0xf22f, 0xde60, 0xad31, 0xa9c1, 0x15b7, 0x1, 0x1);
        gbc.writeMem(0xb23f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf22f, gbc.sp());
        EXPECT(0xb241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb23f));
        EXPECT(0x4b, gbc.readMem(0xb240));
        // CB 4B 010D
        gbc.setState(0x9a96, 0xe4a8, 0xc930, 0x2a53, 0xb230, 0xaac1, 0x1, 0x1);
        gbc.writeMem(0x9a96, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe4a8, gbc.sp());
        EXPECT(0x9a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a96));
        EXPECT(0x4b, gbc.readMem(0x9a97));
        // CB 4B 010E
        gbc.setState(0x95c3, 0xd777, 0x5240, 0xee30, 0xb7ad, 0x8186, 0x1, 0x1);
        gbc.writeMem(0x95c3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd777, gbc.sp());
        EXPECT(0x95c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c3));
        EXPECT(0x4b, gbc.readMem(0x95c4));
        // CB 4B 010F
        gbc.setState(0x69a3, 0x5859, 0xd5d0, 0x45c1, 0xcfd9, 0xdb37, 0x1, 0x0);
        gbc.writeMem(0x69a3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5859, gbc.sp());
        EXPECT(0x69a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0110
        gbc.setState(0xbdc8, 0x3876, 0x6880, 0x2659, 0x2a9a, 0xede7, 0x0, 0x0);
        gbc.writeMem(0xbdc8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0xbdca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc8));
        EXPECT(0x4b, gbc.readMem(0xbdc9));
        // CB 4B 0111
        gbc.setState(0xc341, 0x8792, 0x6620, 0x646c, 0xebc5, 0xc6c5, 0x0, 0x1);
        gbc.writeMem(0xc341, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8792, gbc.sp());
        EXPECT(0xc343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc341));
        EXPECT(0x4b, gbc.readMem(0xc342));
        // CB 4B 0112
        gbc.setState(0xde1, 0x52f7, 0xd120, 0x16f7, 0xf5d7, 0x7e9c, 0x1, 0x0);
        gbc.writeMem(0xde1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x52f7, gbc.sp());
        EXPECT(0xde3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0113
        gbc.setState(0x4a82, 0xe835, 0x4c80, 0xa4ee, 0x334e, 0xef2c, 0x1, 0x1);
        gbc.writeMem(0x4a82, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe835, gbc.sp());
        EXPECT(0x4a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0114
        gbc.setState(0x68ac, 0x4958, 0x6f20, 0x6e4f, 0xce12, 0xbcc3, 0x0, 0x0);
        gbc.writeMem(0x68ac, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4958, gbc.sp());
        EXPECT(0x68ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0115
        gbc.setState(0x67d, 0x3487, 0x6f60, 0x3a4a, 0x9057, 0xece1, 0x1, 0x0);
        gbc.writeMem(0x67d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3487, gbc.sp());
        EXPECT(0x67f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0116
        gbc.setState(0xbb1c, 0x99a2, 0x9e50, 0x30f9, 0xa18c, 0x23b4, 0x0, 0x0);
        gbc.writeMem(0xbb1c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x99a2, gbc.sp());
        EXPECT(0xbb1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb1c));
        EXPECT(0x4b, gbc.readMem(0xbb1d));
        // CB 4B 0117
        gbc.setState(0xac9, 0x2f5c, 0x6bd0, 0xb074, 0x6eb6, 0xa1a7, 0x0, 0x1);
        gbc.writeMem(0xac9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2f5c, gbc.sp());
        EXPECT(0xacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0118
        gbc.setState(0x512e, 0x6aec, 0xc920, 0x6644, 0xfab6, 0xb001, 0x0, 0x0);
        gbc.writeMem(0x512e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6aec, gbc.sp());
        EXPECT(0x5130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0119
        gbc.setState(0xe1c, 0x1fd6, 0x5230, 0x5559, 0x5b4a, 0x994, 0x0, 0x1);
        gbc.writeMem(0xe1c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1fd6, gbc.sp());
        EXPECT(0xe1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 011A
        gbc.setState(0xae07, 0x393f, 0x4060, 0x355b, 0x8a7b, 0x78c8, 0x0, 0x0);
        gbc.writeMem(0xae07, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x393f, gbc.sp());
        EXPECT(0xae09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae07));
        EXPECT(0x4b, gbc.readMem(0xae08));
        // CB 4B 011B
        gbc.setState(0xb1e, 0xcbdf, 0x3a90, 0xd02, 0xc555, 0x15c8, 0x0, 0x1);
        gbc.writeMem(0xb1e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcbdf, gbc.sp());
        EXPECT(0xb20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 011C
        gbc.setState(0x9b8b, 0x4f52, 0x6470, 0xe668, 0x2574, 0x6069, 0x1, 0x1);
        gbc.writeMem(0x9b8b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4f52, gbc.sp());
        EXPECT(0x9b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8b));
        EXPECT(0x4b, gbc.readMem(0x9b8c));
        // CB 4B 011D
        gbc.setState(0x1a47, 0x39dc, 0x5020, 0x609e, 0x26ed, 0x4418, 0x1, 0x0);
        gbc.writeMem(0x1a47, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x39dc, gbc.sp());
        EXPECT(0x1a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 011E
        gbc.setState(0x1526, 0xb6c1, 0x85d0, 0x3a39, 0xd2da, 0xc4fc, 0x1, 0x1);
        gbc.writeMem(0x1526, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb6c1, gbc.sp());
        EXPECT(0x1528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0121
        gbc.setState(0x73d0, 0xb918, 0x8940, 0xdb2c, 0xc557, 0x1098, 0x0, 0x0);
        gbc.writeMem(0x73d0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb918, gbc.sp());
        EXPECT(0x73d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0122
        gbc.setState(0x3ce0, 0x13cd, 0xffc0, 0x21b0, 0x8af, 0xb597, 0x1, 0x1);
        gbc.writeMem(0x3ce0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x13cd, gbc.sp());
        EXPECT(0x3ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0123
        gbc.setState(0x219c, 0xd60d, 0x1e50, 0xb221, 0x7aaf, 0xf881, 0x1, 0x1);
        gbc.writeMem(0x219c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd60d, gbc.sp());
        EXPECT(0x219e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0124
        gbc.setState(0x3ec2, 0xddb0, 0x4040, 0x6449, 0xab64, 0xecec, 0x0, 0x0);
        gbc.writeMem(0x3ec2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xddb0, gbc.sp());
        EXPECT(0x3ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0125
        gbc.setState(0x4c4b, 0x72e7, 0x16c0, 0x3d5f, 0x2f17, 0x563f, 0x0, 0x1);
        gbc.writeMem(0x4c4b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x72e7, gbc.sp());
        EXPECT(0x4c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0126
        gbc.setState(0xe7e0, 0xfb44, 0x21f0, 0x9e3e, 0x4f00, 0xfddb, 0x0, 0x0);
        gbc.writeMem(0xe7e0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfb44, gbc.sp());
        EXPECT(0xe7e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e0));
        EXPECT(0x4b, gbc.readMem(0xe7e1));
        // CB 4B 0127
        gbc.setState(0x24fc, 0x1931, 0x4830, 0x6e59, 0x5e22, 0xb46, 0x1, 0x1);
        gbc.writeMem(0x24fc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1931, gbc.sp());
        EXPECT(0x24fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0128
        gbc.setState(0x323, 0xf146, 0x36b0, 0x1818, 0x1207, 0x6006, 0x1, 0x1);
        gbc.writeMem(0x323, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf146, gbc.sp());
        EXPECT(0x325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0129
        gbc.setState(0xa0a, 0x9afb, 0xc820, 0xf14a, 0x55f1, 0x652c, 0x0, 0x0);
        gbc.writeMem(0xa0a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9afb, gbc.sp());
        EXPECT(0xa0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 012B
        gbc.setState(0xa53e, 0x3a7b, 0xef10, 0xaf36, 0xfc5c, 0xdfd0, 0x1, 0x0);
        gbc.writeMem(0xa53e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3a7b, gbc.sp());
        EXPECT(0xa540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53e));
        EXPECT(0x4b, gbc.readMem(0xa53f));
        // CB 4B 012C
        gbc.setState(0x54b5, 0xe768, 0x35e0, 0x3f8c, 0x222f, 0x2d20, 0x1, 0x1);
        gbc.writeMem(0x54b5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe768, gbc.sp());
        EXPECT(0x54b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 012D
        gbc.setState(0x7477, 0x579e, 0x8100, 0x312c, 0xc39b, 0x4de8, 0x1, 0x0);
        gbc.writeMem(0x7477, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x579e, gbc.sp());
        EXPECT(0x7479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 012E
        gbc.setState(0x7469, 0x964a, 0x4070, 0x788d, 0x9a3f, 0x167a, 0x0, 0x0);
        gbc.writeMem(0x7469, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x964a, gbc.sp());
        EXPECT(0x746b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 012F
        gbc.setState(0x4190, 0x9eb0, 0xf2b0, 0x6dc6, 0x9d30, 0x15b9, 0x0, 0x0);
        gbc.writeMem(0x4190, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9eb0, gbc.sp());
        EXPECT(0x4192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0130
        gbc.setState(0x687, 0x7f66, 0xb590, 0x9396, 0x8dbc, 0x514d, 0x0, 0x0);
        gbc.writeMem(0x687, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7f66, gbc.sp());
        EXPECT(0x689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0131
        gbc.setState(0xde39, 0xa9a, 0x16c0, 0x8ae0, 0xd2c, 0xd4c0, 0x0, 0x0);
        gbc.writeMem(0xde39, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa9a, gbc.sp());
        EXPECT(0xde3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde39));
        EXPECT(0x4b, gbc.readMem(0xde3a));
        // CB 4B 0132
        gbc.setState(0x4d6e, 0xe4e, 0xdda0, 0x2b0b, 0xc5b9, 0xfd41, 0x1, 0x1);
        gbc.writeMem(0x4d6e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe4e, gbc.sp());
        EXPECT(0x4d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0134
        gbc.setState(0x565c, 0xc3f5, 0x4260, 0xb3bf, 0x1733, 0xd10b, 0x0, 0x0);
        gbc.writeMem(0x565c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc3f5, gbc.sp());
        EXPECT(0x565e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0135
        gbc.setState(0xb09d, 0x963f, 0xd750, 0xad4a, 0xd6f2, 0x89e3, 0x1, 0x0);
        gbc.writeMem(0xb09d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x963f, gbc.sp());
        EXPECT(0xb09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09d));
        EXPECT(0x4b, gbc.readMem(0xb09e));
        // CB 4B 0136
        gbc.setState(0x8998, 0x2768, 0x2c70, 0x110c, 0xd2c3, 0x6ee8, 0x0, 0x0);
        gbc.writeMem(0x8998, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2768, gbc.sp());
        EXPECT(0x899a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8998));
        EXPECT(0x4b, gbc.readMem(0x8999));
        // CB 4B 0137
        gbc.setState(0xcbf8, 0x4c8f, 0x2030, 0xdd8d, 0xd77a, 0xcc8f, 0x0, 0x0);
        gbc.writeMem(0xcbf8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4c8f, gbc.sp());
        EXPECT(0xcbfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf8));
        EXPECT(0x4b, gbc.readMem(0xcbf9));
        // CB 4B 0138
        gbc.setState(0xe961, 0xa3dd, 0xdc20, 0x8f4d, 0xc2d3, 0xa211, 0x1, 0x1);
        gbc.writeMem(0xe961, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa3dd, gbc.sp());
        EXPECT(0xe963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe961));
        EXPECT(0x4b, gbc.readMem(0xe962));
        // CB 4B 0139
        gbc.setState(0x4e32, 0xcd94, 0x1320, 0x77f2, 0xde4a, 0x1537, 0x0, 0x0);
        gbc.writeMem(0x4e32, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcd94, gbc.sp());
        EXPECT(0x4e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 013A
        gbc.setState(0xc15a, 0x1bcc, 0x7b30, 0x950f, 0x4346, 0x7e2d, 0x1, 0x0);
        gbc.writeMem(0xc15a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1bcc, gbc.sp());
        EXPECT(0xc15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15a));
        EXPECT(0x4b, gbc.readMem(0xc15b));
        // CB 4B 013B
        gbc.setState(0x9775, 0xbe04, 0xc010, 0xb718, 0x38ac, 0xf0aa, 0x1, 0x0);
        gbc.writeMem(0x9775, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbe04, gbc.sp());
        EXPECT(0x9777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9775));
        EXPECT(0x4b, gbc.readMem(0x9776));
        // CB 4B 013C
        gbc.setState(0x8b70, 0x2c, 0x8750, 0x7c35, 0x9ce1, 0x8826, 0x0, 0x0);
        gbc.writeMem(0x8b70, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2c, gbc.sp());
        EXPECT(0x8b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b70));
        EXPECT(0x4b, gbc.readMem(0x8b71));
        // CB 4B 013D
        gbc.setState(0xcef9, 0x7e6f, 0x9730, 0x3f1f, 0xbc48, 0xbb6f, 0x1, 0x1);
        gbc.writeMem(0xcef9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7e6f, gbc.sp());
        EXPECT(0xcefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef9));
        EXPECT(0x4b, gbc.readMem(0xcefa));
        // CB 4B 013E
        gbc.setState(0x64d4, 0x68f8, 0x5e0, 0xd310, 0x9cd9, 0xee71, 0x0, 0x0);
        gbc.writeMem(0x64d4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x68f8, gbc.sp());
        EXPECT(0x64d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 013F
        gbc.setState(0x55d1, 0xff70, 0xf620, 0xf77, 0x70c3, 0xc706, 0x0, 0x0);
        gbc.writeMem(0x55d1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xff70, gbc.sp());
        EXPECT(0x55d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0140
        gbc.setState(0x8aab, 0x195d, 0xe600, 0x5971, 0x8bbc, 0xa6e0, 0x0, 0x0);
        gbc.writeMem(0x8aab, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x195d, gbc.sp());
        EXPECT(0x8aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aab));
        EXPECT(0x4b, gbc.readMem(0x8aac));
        // CB 4B 0141
        gbc.setState(0x44ba, 0x3b7b, 0xff80, 0x3d98, 0x9ad9, 0x914c, 0x1, 0x0);
        gbc.writeMem(0x44ba, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3b7b, gbc.sp());
        EXPECT(0x44bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0142
        gbc.setState(0x2c65, 0xbb13, 0x9e40, 0xfed1, 0x67d8, 0x7daa, 0x0, 0x1);
        gbc.writeMem(0x2c65, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbb13, gbc.sp());
        EXPECT(0x2c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0143
        gbc.setState(0x78e4, 0xc83a, 0xa530, 0xd09f, 0x4ace, 0x9cd6, 0x0, 0x1);
        gbc.writeMem(0x78e4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc83a, gbc.sp());
        EXPECT(0x78e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0144
        gbc.setState(0x6b96, 0x3cb5, 0xc000, 0x7884, 0xfb8a, 0xf956, 0x1, 0x0);
        gbc.writeMem(0x6b96, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3cb5, gbc.sp());
        EXPECT(0x6b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0145
        gbc.setState(0x2774, 0xd0d4, 0x32d0, 0xea13, 0x2630, 0x6a79, 0x0, 0x1);
        gbc.writeMem(0x2774, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd0d4, gbc.sp());
        EXPECT(0x2776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0146
        gbc.setState(0x1860, 0x7c8d, 0xdd70, 0x5f32, 0x6c02, 0xd7b7, 0x0, 0x0);
        gbc.writeMem(0x1860, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7c8d, gbc.sp());
        EXPECT(0x1862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0147
        gbc.setState(0x9fd2, 0x2cd3, 0x53b0, 0x2a7e, 0xabcd, 0x9ced, 0x1, 0x0);
        gbc.writeMem(0x9fd2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2cd3, gbc.sp());
        EXPECT(0x9fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd2));
        EXPECT(0x4b, gbc.readMem(0x9fd3));
        // CB 4B 0148
        gbc.setState(0x49e6, 0x7306, 0xa700, 0x1557, 0x6e3, 0x56fd, 0x0, 0x0);
        gbc.writeMem(0x49e6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7306, gbc.sp());
        EXPECT(0x49e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0149
        gbc.setState(0x7a19, 0xbe56, 0x9790, 0x5a64, 0x3386, 0xd47, 0x1, 0x0);
        gbc.writeMem(0x7a19, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbe56, gbc.sp());
        EXPECT(0x7a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 014A
        gbc.setState(0xe78f, 0xf06f, 0xf820, 0x2c78, 0x289f, 0xae02, 0x0, 0x0);
        gbc.writeMem(0xe78f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf06f, gbc.sp());
        EXPECT(0xe791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78f));
        EXPECT(0x4b, gbc.readMem(0xe790));
        // CB 4B 014B
        gbc.setState(0xbd2e, 0xfb46, 0xbf00, 0xa4ec, 0x8ba7, 0x47c9, 0x1, 0x0);
        gbc.writeMem(0xbd2e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfb46, gbc.sp());
        EXPECT(0xbd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2e));
        EXPECT(0x4b, gbc.readMem(0xbd2f));
        // CB 4B 014D
        gbc.setState(0x3907, 0x35da, 0x22a0, 0xab54, 0x4f93, 0x1804, 0x1, 0x1);
        gbc.writeMem(0x3907, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x35da, gbc.sp());
        EXPECT(0x3909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 014E
        gbc.setState(0x538e, 0x9603, 0xe340, 0x12f5, 0xbda7, 0xe070, 0x1, 0x1);
        gbc.writeMem(0x538e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9603, gbc.sp());
        EXPECT(0x5390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 014F
        gbc.setState(0x8b1d, 0x43a4, 0xe9c0, 0xd14, 0xbe3e, 0xc330, 0x0, 0x1);
        gbc.writeMem(0x8b1d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x43a4, gbc.sp());
        EXPECT(0x8b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b1d));
        EXPECT(0x4b, gbc.readMem(0x8b1e));
        // CB 4B 0150
        gbc.setState(0x8fd, 0xe2d, 0xbce0, 0x3ae1, 0x4478, 0xbf99, 0x1, 0x1);
        gbc.writeMem(0x8fd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe2d, gbc.sp());
        EXPECT(0x8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0151
        gbc.setState(0x997a, 0x486f, 0x8aa0, 0x5103, 0xe0f0, 0xdaed, 0x1, 0x1);
        gbc.writeMem(0x997a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0x997c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997a));
        EXPECT(0x4b, gbc.readMem(0x997b));
        // CB 4B 0152
        gbc.setState(0x22d2, 0x7cd1, 0xc670, 0x2b68, 0x51c, 0x9650, 0x0, 0x0);
        gbc.writeMem(0x22d2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7cd1, gbc.sp());
        EXPECT(0x22d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0153
        gbc.setState(0x9880, 0x58eb, 0x5f60, 0xde72, 0x198c, 0xf002, 0x1, 0x1);
        gbc.writeMem(0x9880, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x58eb, gbc.sp());
        EXPECT(0x9882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9880));
        EXPECT(0x4b, gbc.readMem(0x9881));
        // CB 4B 0154
        gbc.setState(0x42e6, 0xb7b9, 0xef50, 0x61c1, 0xc34, 0x8e02, 0x0, 0x1);
        gbc.writeMem(0x42e6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb7b9, gbc.sp());
        EXPECT(0x42e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0155
        gbc.setState(0xd13e, 0xce7a, 0x5d80, 0x51a0, 0x3ae5, 0x1a8b, 0x1, 0x0);
        gbc.writeMem(0xd13e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xce7a, gbc.sp());
        EXPECT(0xd140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd13e));
        EXPECT(0x4b, gbc.readMem(0xd13f));
        // CB 4B 0156
        gbc.setState(0xbd70, 0xb4cc, 0xd20, 0xa2a6, 0x4e2f, 0x88ff, 0x1, 0x0);
        gbc.writeMem(0xbd70, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb4cc, gbc.sp());
        EXPECT(0xbd72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd70));
        EXPECT(0x4b, gbc.readMem(0xbd71));
        // CB 4B 0157
        gbc.setState(0x35f3, 0x598, 0xc000, 0xd77, 0xe993, 0x494b, 0x0, 0x0);
        gbc.writeMem(0x35f3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x598, gbc.sp());
        EXPECT(0x35f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0158
        gbc.setState(0x825c, 0x457b, 0xace0, 0xa50c, 0x897d, 0xd669, 0x0, 0x0);
        gbc.writeMem(0x825c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x457b, gbc.sp());
        EXPECT(0x825e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x825c));
        EXPECT(0x4b, gbc.readMem(0x825d));
        // CB 4B 0159
        gbc.setState(0xb204, 0xf68d, 0x94d0, 0x73a7, 0xec16, 0xed0a, 0x0, 0x1);
        gbc.writeMem(0xb204, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf68d, gbc.sp());
        EXPECT(0xb206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb204));
        EXPECT(0x4b, gbc.readMem(0xb205));
        // CB 4B 015A
        gbc.setState(0xe79, 0x2ed9, 0x8900, 0xab77, 0xb862, 0x8777, 0x1, 0x0);
        gbc.writeMem(0xe79, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2ed9, gbc.sp());
        EXPECT(0xe7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 015B
        gbc.setState(0x8335, 0x34d4, 0x8540, 0x19f5, 0xb2ee, 0xa2f4, 0x1, 0x1);
        gbc.writeMem(0x8335, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x34d4, gbc.sp());
        EXPECT(0x8337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8335));
        EXPECT(0x4b, gbc.readMem(0x8336));
        // CB 4B 015C
        gbc.setState(0x9afc, 0x2d37, 0xb740, 0xbfbb, 0x182d, 0xa88c, 0x0, 0x0);
        gbc.writeMem(0x9afc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2d37, gbc.sp());
        EXPECT(0x9afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9afc));
        EXPECT(0x4b, gbc.readMem(0x9afd));
        // CB 4B 015D
        gbc.setState(0x5213, 0xf797, 0x3f60, 0x1cf4, 0x43fa, 0x49b4, 0x0, 0x1);
        gbc.writeMem(0x5213, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf797, gbc.sp());
        EXPECT(0x5215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 015E
        gbc.setState(0x42e8, 0xfca9, 0xc0, 0x37cf, 0xb117, 0xfb74, 0x1, 0x1);
        gbc.writeMem(0x42e8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfca9, gbc.sp());
        EXPECT(0x42ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 015F
        gbc.setState(0x4de7, 0x6204, 0x460, 0x1082, 0x8426, 0xba09, 0x0, 0x0);
        gbc.writeMem(0x4de7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6204, gbc.sp());
        EXPECT(0x4de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0160
        gbc.setState(0xd497, 0x3812, 0xa000, 0xe3af, 0xd1c4, 0x47e7, 0x1, 0x0);
        gbc.writeMem(0xd497, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3812, gbc.sp());
        EXPECT(0xd499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd497));
        EXPECT(0x4b, gbc.readMem(0xd498));
        // CB 4B 0161
        gbc.setState(0xe57, 0xe9b7, 0x8cb0, 0xec11, 0xb247, 0xd067, 0x1, 0x1);
        gbc.writeMem(0xe57, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe9b7, gbc.sp());
        EXPECT(0xe59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0162
        gbc.setState(0x1a59, 0x7513, 0x6ff0, 0xb0ae, 0xad66, 0xf87a, 0x0, 0x0);
        gbc.writeMem(0x1a59, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7513, gbc.sp());
        EXPECT(0x1a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0163
        gbc.setState(0xb9b8, 0xff1a, 0x5370, 0x8b4, 0xf04, 0xb363, 0x1, 0x1);
        gbc.writeMem(0xb9b8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xff1a, gbc.sp());
        EXPECT(0xb9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b8));
        EXPECT(0x4b, gbc.readMem(0xb9b9));
        // CB 4B 0164
        gbc.setState(0xc66a, 0x68e9, 0x3070, 0xbff4, 0x1afa, 0xabd8, 0x1, 0x1);
        gbc.writeMem(0xc66a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x68e9, gbc.sp());
        EXPECT(0xc66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66a));
        EXPECT(0x4b, gbc.readMem(0xc66b));
        // CB 4B 0165
        gbc.setState(0x2d85, 0xcaa, 0x40c0, 0xb4a4, 0x997f, 0x8999, 0x0, 0x1);
        gbc.writeMem(0x2d85, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcaa, gbc.sp());
        EXPECT(0x2d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0166
        gbc.setState(0x3e8c, 0x7590, 0x6cc0, 0xdae0, 0xd783, 0x3cf0, 0x0, 0x0);
        gbc.writeMem(0x3e8c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7590, gbc.sp());
        EXPECT(0x3e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0167
        gbc.setState(0x3bd0, 0xbe47, 0xddf0, 0xcaf0, 0x7e, 0xe5a1, 0x0, 0x0);
        gbc.writeMem(0x3bd0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbe47, gbc.sp());
        EXPECT(0x3bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0168
        gbc.setState(0x66fd, 0xdf29, 0x99f0, 0x6140, 0x7708, 0xd40a, 0x1, 0x1);
        gbc.writeMem(0x66fd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdf29, gbc.sp());
        EXPECT(0x66ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0169
        gbc.setState(0x306d, 0xc579, 0x5b10, 0x2e1c, 0x96f4, 0x546c, 0x1, 0x1);
        gbc.writeMem(0x306d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc579, gbc.sp());
        EXPECT(0x306f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 016A
        gbc.setState(0xc715, 0xe498, 0x7e30, 0xe47, 0xa47a, 0xdcac, 0x0, 0x1);
        gbc.writeMem(0xc715, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe498, gbc.sp());
        EXPECT(0xc717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc715));
        EXPECT(0x4b, gbc.readMem(0xc716));
        // CB 4B 016B
        gbc.setState(0x3807, 0x7774, 0x31d0, 0xac2c, 0xf985, 0xcbe0, 0x1, 0x1);
        gbc.writeMem(0x3807, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7774, gbc.sp());
        EXPECT(0x3809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 016C
        gbc.setState(0x62e, 0xa06d, 0x1080, 0xb542, 0xc8d8, 0xdc2d, 0x0, 0x1);
        gbc.writeMem(0x62e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa06d, gbc.sp());
        EXPECT(0x630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 016D
        gbc.setState(0xc35e, 0xbc80, 0x6ca0, 0x922c, 0xb1fa, 0x27f2, 0x1, 0x0);
        gbc.writeMem(0xc35e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbc80, gbc.sp());
        EXPECT(0xc360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35e));
        EXPECT(0x4b, gbc.readMem(0xc35f));
        // CB 4B 016E
        gbc.setState(0x5a7, 0xe474, 0x79a0, 0x26b3, 0xc01c, 0x1f43, 0x0, 0x0);
        gbc.writeMem(0x5a7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe474, gbc.sp());
        EXPECT(0x5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 016F
        gbc.setState(0xcce7, 0xd327, 0xaef0, 0xfcdd, 0xea5b, 0x88d3, 0x1, 0x1);
        gbc.writeMem(0xcce7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd327, gbc.sp());
        EXPECT(0xcce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce7));
        EXPECT(0x4b, gbc.readMem(0xcce8));
        // CB 4B 0170
        gbc.setState(0x8b9c, 0xf5df, 0x7970, 0x4f29, 0x5590, 0xc0c0, 0x0, 0x1);
        gbc.writeMem(0x8b9c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf5df, gbc.sp());
        EXPECT(0x8b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9c));
        EXPECT(0x4b, gbc.readMem(0x8b9d));
        // CB 4B 0171
        gbc.setState(0xdae0, 0xe44a, 0x8980, 0x8fa2, 0xbdd, 0xa029, 0x1, 0x0);
        gbc.writeMem(0xdae0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe44a, gbc.sp());
        EXPECT(0xdae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae0));
        EXPECT(0x4b, gbc.readMem(0xdae1));
        // CB 4B 0172
        gbc.setState(0x40bd, 0x6daa, 0x6ca0, 0x6acf, 0x5e08, 0x3681, 0x0, 0x0);
        gbc.writeMem(0x40bd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6daa, gbc.sp());
        EXPECT(0x40bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0173
        gbc.setState(0xa8c1, 0x2a74, 0x5940, 0x22dc, 0x2ed4, 0xc436, 0x1, 0x0);
        gbc.writeMem(0xa8c1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2a74, gbc.sp());
        EXPECT(0xa8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c1));
        EXPECT(0x4b, gbc.readMem(0xa8c2));
        // CB 4B 0174
        gbc.setState(0x7044, 0xb91f, 0xdf30, 0x2eb1, 0x8a60, 0xd3e0, 0x1, 0x1);
        gbc.writeMem(0x7044, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb91f, gbc.sp());
        EXPECT(0x7046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0175
        gbc.setState(0x7e1b, 0x6559, 0x4cf0, 0x156e, 0x66c1, 0xba5f, 0x1, 0x0);
        gbc.writeMem(0x7e1b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6559, gbc.sp());
        EXPECT(0x7e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0176
        gbc.setState(0x7fd7, 0xa702, 0x3e80, 0x3544, 0x629d, 0x2a3b, 0x0, 0x1);
        gbc.writeMem(0x7fd7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa702, gbc.sp());
        EXPECT(0x7fd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0177
        gbc.setState(0x96f7, 0xd303, 0x140, 0xdcdd, 0x55fb, 0x6aff, 0x1, 0x0);
        gbc.writeMem(0x96f7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd303, gbc.sp());
        EXPECT(0x96f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f7));
        EXPECT(0x4b, gbc.readMem(0x96f8));
        // CB 4B 0178
        gbc.setState(0x91d0, 0x394c, 0x8f60, 0xa76e, 0x862a, 0x69c4, 0x0, 0x1);
        gbc.writeMem(0x91d0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x394c, gbc.sp());
        EXPECT(0x91d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d0));
        EXPECT(0x4b, gbc.readMem(0x91d1));
        // CB 4B 0179
        gbc.setState(0x1c1, 0x7ec6, 0xd950, 0xbca9, 0x3b5, 0xb802, 0x0, 0x1);
        gbc.writeMem(0x1c1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7ec6, gbc.sp());
        EXPECT(0x1c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 017A
        gbc.setState(0xdd4, 0x52, 0xad90, 0x2f13, 0x72a2, 0x68eb, 0x0, 0x1);
        gbc.writeMem(0xdd4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x52, gbc.sp());
        EXPECT(0xdd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 017B
        gbc.setState(0x9e7f, 0x72e, 0xeea0, 0xa997, 0x7681, 0x8047, 0x0, 0x1);
        gbc.writeMem(0x9e7f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x72e, gbc.sp());
        EXPECT(0x9e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7f));
        EXPECT(0x4b, gbc.readMem(0x9e80));
        // CB 4B 017C
        gbc.setState(0x22cb, 0x123a, 0x1650, 0x6a4e, 0x9579, 0x400e, 0x0, 0x1);
        gbc.writeMem(0x22cb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x123a, gbc.sp());
        EXPECT(0x22cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 017D
        gbc.setState(0xb041, 0xd173, 0x89e0, 0x2d6f, 0x65b3, 0x84e4, 0x1, 0x1);
        gbc.writeMem(0xb041, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd173, gbc.sp());
        EXPECT(0xb043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb041));
        EXPECT(0x4b, gbc.readMem(0xb042));
        // CB 4B 017E
        gbc.setState(0x9cf6, 0xca48, 0xaa80, 0xbcb9, 0x78a5, 0x9e94, 0x0, 0x1);
        gbc.writeMem(0x9cf6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xca48, gbc.sp());
        EXPECT(0x9cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf6));
        EXPECT(0x4b, gbc.readMem(0x9cf7));
        // CB 4B 017F
        gbc.setState(0x38f0, 0x2522, 0x38b0, 0xadb2, 0xbd54, 0x610d, 0x1, 0x1);
        gbc.writeMem(0x38f0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2522, gbc.sp());
        EXPECT(0x38f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0180
        gbc.setState(0x2d68, 0x945c, 0xe510, 0x35a3, 0x393c, 0x3825, 0x1, 0x1);
        gbc.writeMem(0x2d68, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x945c, gbc.sp());
        EXPECT(0x2d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0183
        gbc.setState(0x6c3a, 0x2de8, 0xb730, 0xeef6, 0x1bc9, 0x3d4e, 0x0, 0x0);
        gbc.writeMem(0x6c3a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2de8, gbc.sp());
        EXPECT(0x6c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0184
        gbc.setState(0x555b, 0xa412, 0x2780, 0x7391, 0x421c, 0x595a, 0x0, 0x0);
        gbc.writeMem(0x555b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa412, gbc.sp());
        EXPECT(0x555d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0185
        gbc.setState(0x453a, 0x305d, 0xdde0, 0x709f, 0x41ff, 0xdd83, 0x1, 0x1);
        gbc.writeMem(0x453a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x305d, gbc.sp());
        EXPECT(0x453c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0186
        gbc.setState(0xe781, 0xd556, 0xa70, 0x4c58, 0x8026, 0xb8b7, 0x0, 0x0);
        gbc.writeMem(0xe781, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd556, gbc.sp());
        EXPECT(0xe783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe781));
        EXPECT(0x4b, gbc.readMem(0xe782));
        // CB 4B 0187
        gbc.setState(0xee52, 0x3c48, 0x3f30, 0x8bfa, 0x2c0e, 0x448c, 0x0, 0x0);
        gbc.writeMem(0xee52, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3c48, gbc.sp());
        EXPECT(0xee54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee52));
        EXPECT(0x4b, gbc.readMem(0xee53));
        // CB 4B 0188
        gbc.setState(0x2bf5, 0xf48e, 0xe430, 0xa49e, 0xee72, 0xaa, 0x1, 0x1);
        gbc.writeMem(0x2bf5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf48e, gbc.sp());
        EXPECT(0x2bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0189
        gbc.setState(0xd20, 0x3e91, 0x3230, 0x9266, 0xe1cb, 0x8e5f, 0x0, 0x0);
        gbc.writeMem(0xd20, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3e91, gbc.sp());
        EXPECT(0xd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 018A
        gbc.setState(0x740c, 0x7bd6, 0xcbc0, 0xddae, 0xaec2, 0xaa61, 0x1, 0x1);
        gbc.writeMem(0x740c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7bd6, gbc.sp());
        EXPECT(0x740e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 018B
        gbc.setState(0xa758, 0x13ce, 0xe330, 0xdfdd, 0x1324, 0x2ea6, 0x1, 0x0);
        gbc.writeMem(0xa758, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x13ce, gbc.sp());
        EXPECT(0xa75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa758));
        EXPECT(0x4b, gbc.readMem(0xa759));
        // CB 4B 018C
        gbc.setState(0x84c8, 0x24f, 0x23e0, 0x4a68, 0x6835, 0xa18e, 0x1, 0x0);
        gbc.writeMem(0x84c8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x24f, gbc.sp());
        EXPECT(0x84ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c8));
        EXPECT(0x4b, gbc.readMem(0x84c9));
        // CB 4B 018D
        gbc.setState(0xe3b7, 0x7e3b, 0x4340, 0x996d, 0x49e4, 0x1e3b, 0x1, 0x1);
        gbc.writeMem(0xe3b7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7e3b, gbc.sp());
        EXPECT(0xe3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b7));
        EXPECT(0x4b, gbc.readMem(0xe3b8));
        // CB 4B 018E
        gbc.setState(0xd9e4, 0x7600, 0xdfe0, 0xebf7, 0xcc27, 0x580d, 0x1, 0x1);
        gbc.writeMem(0xd9e4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7600, gbc.sp());
        EXPECT(0xd9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e4));
        EXPECT(0x4b, gbc.readMem(0xd9e5));
        // CB 4B 0190
        gbc.setState(0xb3e2, 0xbd2b, 0x1db0, 0xbd82, 0xc992, 0xda3e, 0x0, 0x1);
        gbc.writeMem(0xb3e2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbd2b, gbc.sp());
        EXPECT(0xb3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e2));
        EXPECT(0x4b, gbc.readMem(0xb3e3));
        // CB 4B 0191
        gbc.setState(0x221, 0x1340, 0x5d40, 0x2690, 0xa92c, 0x8824, 0x1, 0x0);
        gbc.writeMem(0x221, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1340, gbc.sp());
        EXPECT(0x223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0192
        gbc.setState(0x6c1a, 0x3676, 0xc7c0, 0x484f, 0xc53b, 0x89d7, 0x1, 0x1);
        gbc.writeMem(0x6c1a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3676, gbc.sp());
        EXPECT(0x6c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0193
        gbc.setState(0xa76b, 0xf09, 0x3e50, 0x7a24, 0x7afe, 0xc81b, 0x0, 0x0);
        gbc.writeMem(0xa76b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf09, gbc.sp());
        EXPECT(0xa76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76b));
        EXPECT(0x4b, gbc.readMem(0xa76c));
        // CB 4B 0194
        gbc.setState(0x991f, 0xa4fc, 0xa780, 0x4e2a, 0x2ad1, 0xc370, 0x0, 0x0);
        gbc.writeMem(0x991f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa4fc, gbc.sp());
        EXPECT(0x9921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991f));
        EXPECT(0x4b, gbc.readMem(0x9920));
        // CB 4B 0195
        gbc.setState(0x648f, 0x5f64, 0x52b0, 0x4711, 0x2f24, 0xa3c2, 0x0, 0x0);
        gbc.writeMem(0x648f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5f64, gbc.sp());
        EXPECT(0x6491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0196
        gbc.setState(0xb152, 0xd009, 0xcef0, 0xb0d9, 0x909, 0xdcb, 0x1, 0x1);
        gbc.writeMem(0xb152, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd009, gbc.sp());
        EXPECT(0xb154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb152));
        EXPECT(0x4b, gbc.readMem(0xb153));
        // CB 4B 0197
        gbc.setState(0x4e1e, 0x4115, 0x5be0, 0x7df7, 0x84e4, 0x3e26, 0x0, 0x0);
        gbc.writeMem(0x4e1e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4115, gbc.sp());
        EXPECT(0x4e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0198
        gbc.setState(0xb39f, 0x6754, 0xb910, 0x4e57, 0xbe5c, 0x3eb0, 0x1, 0x0);
        gbc.writeMem(0xb39f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6754, gbc.sp());
        EXPECT(0xb3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39f));
        EXPECT(0x4b, gbc.readMem(0xb3a0));
        // CB 4B 0199
        gbc.setState(0x6872, 0x2460, 0xdbd0, 0x75fd, 0x184f, 0xbaf8, 0x0, 0x0);
        gbc.writeMem(0x6872, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2460, gbc.sp());
        EXPECT(0x6874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 019A
        gbc.setState(0xbf03, 0x6a83, 0x5330, 0xca5f, 0x7fd4, 0x904c, 0x1, 0x1);
        gbc.writeMem(0xbf03, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6a83, gbc.sp());
        EXPECT(0xbf05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf03));
        EXPECT(0x4b, gbc.readMem(0xbf04));
        // CB 4B 019B
        gbc.setState(0x5819, 0xba1f, 0x9fd0, 0xdb01, 0xaf82, 0x37fc, 0x0, 0x0);
        gbc.writeMem(0x5819, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xba1f, gbc.sp());
        EXPECT(0x581b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 019C
        gbc.setState(0xc2bc, 0xe954, 0x72a0, 0x599f, 0x5ae1, 0xdf2a, 0x1, 0x0);
        gbc.writeMem(0xc2bc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe954, gbc.sp());
        EXPECT(0xc2be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bc));
        EXPECT(0x4b, gbc.readMem(0xc2bd));
        // CB 4B 019D
        gbc.setState(0x4a6a, 0x9790, 0xcd40, 0xc1f5, 0xeabf, 0x303f, 0x0, 0x1);
        gbc.writeMem(0x4a6a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9790, gbc.sp());
        EXPECT(0x4a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 019E
        gbc.setState(0xd888, 0xcfe5, 0xe1d0, 0x8b3f, 0xd2c4, 0xcdc5, 0x0, 0x0);
        gbc.writeMem(0xd888, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcfe5, gbc.sp());
        EXPECT(0xd88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd888));
        EXPECT(0x4b, gbc.readMem(0xd889));
        // CB 4B 019F
        gbc.setState(0xeb43, 0x7717, 0xb7e0, 0xc5fa, 0xb828, 0xc12f, 0x1, 0x0);
        gbc.writeMem(0xeb43, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7717, gbc.sp());
        EXPECT(0xeb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb43));
        EXPECT(0x4b, gbc.readMem(0xeb44));
        // CB 4B 01A0
        gbc.setState(0x25a9, 0x2a98, 0xf30, 0x6041, 0xf2d7, 0xce3c, 0x0, 0x1);
        gbc.writeMem(0x25a9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2a98, gbc.sp());
        EXPECT(0x25ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01A1
        gbc.setState(0x8f64, 0x6a6a, 0x78d0, 0x16fc, 0xf240, 0x441c, 0x1, 0x1);
        gbc.writeMem(0x8f64, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6a6a, gbc.sp());
        EXPECT(0x8f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f64));
        EXPECT(0x4b, gbc.readMem(0x8f65));
        // CB 4B 01A2
        gbc.setState(0x7d62, 0xd02, 0xa190, 0x9812, 0x9298, 0x2343, 0x0, 0x1);
        gbc.writeMem(0x7d62, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd02, gbc.sp());
        EXPECT(0x7d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01A3
        gbc.setState(0xd739, 0x7dea, 0x1120, 0xa057, 0x3da5, 0x5e10, 0x0, 0x1);
        gbc.writeMem(0xd739, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7dea, gbc.sp());
        EXPECT(0xd73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd739));
        EXPECT(0x4b, gbc.readMem(0xd73a));
        // CB 4B 01A4
        gbc.setState(0x8522, 0xdadc, 0x9ec0, 0x1c83, 0xc982, 0x44cb, 0x0, 0x1);
        gbc.writeMem(0x8522, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdadc, gbc.sp());
        EXPECT(0x8524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8522));
        EXPECT(0x4b, gbc.readMem(0x8523));
        // CB 4B 01A5
        gbc.setState(0xe9ac, 0x2e62, 0xab30, 0x4385, 0xd5f7, 0x953d, 0x0, 0x0);
        gbc.writeMem(0xe9ac, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2e62, gbc.sp());
        EXPECT(0xe9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ac));
        EXPECT(0x4b, gbc.readMem(0xe9ad));
        // CB 4B 01A6
        gbc.setState(0xada8, 0x2924, 0x1b60, 0x1776, 0x779f, 0x9af5, 0x1, 0x1);
        gbc.writeMem(0xada8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2924, gbc.sp());
        EXPECT(0xadaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada8));
        EXPECT(0x4b, gbc.readMem(0xada9));
        // CB 4B 01A7
        gbc.setState(0xec43, 0x7d73, 0x2210, 0xcc90, 0xbec3, 0xa5a9, 0x0, 0x1);
        gbc.writeMem(0xec43, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7d73, gbc.sp());
        EXPECT(0xec45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec43));
        EXPECT(0x4b, gbc.readMem(0xec44));
        // CB 4B 01A8
        gbc.setState(0xed57, 0xc8b9, 0x47b0, 0x3ba8, 0x1845, 0x7fab, 0x1, 0x1);
        gbc.writeMem(0xed57, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc8b9, gbc.sp());
        EXPECT(0xed59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed57));
        EXPECT(0x4b, gbc.readMem(0xed58));
        // CB 4B 01A9
        gbc.setState(0xe93, 0x9621, 0xcdd0, 0x48f8, 0xdd99, 0x8bbc, 0x1, 0x1);
        gbc.writeMem(0xe93, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9621, gbc.sp());
        EXPECT(0xe95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01AA
        gbc.setState(0x1c88, 0xa9ab, 0xbd30, 0xc207, 0x768, 0x69f0, 0x1, 0x1);
        gbc.writeMem(0x1c88, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa9ab, gbc.sp());
        EXPECT(0x1c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01AC
        gbc.setState(0x44ed, 0x1292, 0xb880, 0x32ed, 0xcacf, 0xb895, 0x1, 0x1);
        gbc.writeMem(0x44ed, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1292, gbc.sp());
        EXPECT(0x44ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01AD
        gbc.setState(0x9950, 0xb7ae, 0xb640, 0x537d, 0x38aa, 0x6a1d, 0x0, 0x0);
        gbc.writeMem(0x9950, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb7ae, gbc.sp());
        EXPECT(0x9952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9950));
        EXPECT(0x4b, gbc.readMem(0x9951));
        // CB 4B 01AE
        gbc.setState(0x63cc, 0xb715, 0xdf50, 0x4963, 0x4d8f, 0xf4e3, 0x1, 0x0);
        gbc.writeMem(0x63cc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb715, gbc.sp());
        EXPECT(0x63ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01AF
        gbc.setState(0x4237, 0x12de, 0x2b80, 0x853, 0x8969, 0xb99f, 0x1, 0x0);
        gbc.writeMem(0x4237, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x12de, gbc.sp());
        EXPECT(0x4239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01B0
        gbc.setState(0xc610, 0xff67, 0x2e00, 0x957e, 0xe9b1, 0xd517, 0x0, 0x0);
        gbc.writeMem(0xc610, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xff67, gbc.sp());
        EXPECT(0xc612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc610));
        EXPECT(0x4b, gbc.readMem(0xc611));
        // CB 4B 01B1
        gbc.setState(0x20dd, 0x4bd, 0xa4d0, 0x5d69, 0x205c, 0x7515, 0x1, 0x1);
        gbc.writeMem(0x20dd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4bd, gbc.sp());
        EXPECT(0x20df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01B3
        gbc.setState(0xb34f, 0x9364, 0x1630, 0x3aeb, 0xec41, 0x4038, 0x1, 0x0);
        gbc.writeMem(0xb34f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9364, gbc.sp());
        EXPECT(0xb351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34f));
        EXPECT(0x4b, gbc.readMem(0xb350));
        // CB 4B 01B4
        gbc.setState(0x489f, 0x6145, 0x40, 0x870e, 0xee7f, 0xabf9, 0x0, 0x0);
        gbc.writeMem(0x489f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6145, gbc.sp());
        EXPECT(0x48a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01B5
        gbc.setState(0xdcd3, 0xf416, 0x6570, 0xcd7d, 0x40be, 0xddc, 0x1, 0x0);
        gbc.writeMem(0xdcd3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf416, gbc.sp());
        EXPECT(0xdcd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd3));
        EXPECT(0x4b, gbc.readMem(0xdcd4));
        // CB 4B 01B6
        gbc.setState(0xd5cd, 0xd729, 0xdbf0, 0xff15, 0x6e4a, 0xfa5e, 0x0, 0x0);
        gbc.writeMem(0xd5cd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd729, gbc.sp());
        EXPECT(0xd5cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5cd));
        EXPECT(0x4b, gbc.readMem(0xd5ce));
        // CB 4B 01B7
        gbc.setState(0xe793, 0x6d30, 0xee50, 0xbb4a, 0xf258, 0x2af9, 0x1, 0x0);
        gbc.writeMem(0xe793, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6d30, gbc.sp());
        EXPECT(0xe795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe793));
        EXPECT(0x4b, gbc.readMem(0xe794));
        // CB 4B 01B8
        gbc.setState(0x1922, 0x6533, 0x5c10, 0x6d0b, 0xd716, 0x5604, 0x1, 0x0);
        gbc.writeMem(0x1922, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6533, gbc.sp());
        EXPECT(0x1924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01B9
        gbc.setState(0xc8de, 0x468e, 0x4d0, 0xfaf2, 0x3fc0, 0xcbd1, 0x1, 0x0);
        gbc.writeMem(0xc8de, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x468e, gbc.sp());
        EXPECT(0xc8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8de));
        EXPECT(0x4b, gbc.readMem(0xc8df));
        // CB 4B 01BA
        gbc.setState(0xbdba, 0x170a, 0x98b0, 0x3ce1, 0xc64f, 0xb81b, 0x0, 0x1);
        gbc.writeMem(0xbdba, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x170a, gbc.sp());
        EXPECT(0xbdbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdba));
        EXPECT(0x4b, gbc.readMem(0xbdbb));
        // CB 4B 01BB
        gbc.setState(0x9f7, 0xba3d, 0x5890, 0x1421, 0xc017, 0x3e4a, 0x1, 0x1);
        gbc.writeMem(0x9f7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xba3d, gbc.sp());
        EXPECT(0x9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01BC
        gbc.setState(0x6647, 0x5445, 0x3180, 0x5bf3, 0xb598, 0x7078, 0x0, 0x1);
        gbc.writeMem(0x6647, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5445, gbc.sp());
        EXPECT(0x6649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01BD
        gbc.setState(0x308d, 0xc0d4, 0xd5b0, 0x9e31, 0x77c6, 0x233c, 0x1, 0x1);
        gbc.writeMem(0x308d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc0d4, gbc.sp());
        EXPECT(0x308f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01BE
        gbc.setState(0x1ccd, 0x9590, 0xef30, 0x665b, 0x77a1, 0xf595, 0x1, 0x0);
        gbc.writeMem(0x1ccd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9590, gbc.sp());
        EXPECT(0x1ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01BF
        gbc.setState(0x5241, 0x54f3, 0x6a70, 0x6e90, 0x2597, 0xdf20, 0x0, 0x1);
        gbc.writeMem(0x5241, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x54f3, gbc.sp());
        EXPECT(0x5243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01C0
        gbc.setState(0xb241, 0x1c7a, 0xa4a0, 0xe62d, 0x54dd, 0x6057, 0x0, 0x0);
        gbc.writeMem(0xb241, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1c7a, gbc.sp());
        EXPECT(0xb243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb241));
        EXPECT(0x4b, gbc.readMem(0xb242));
        // CB 4B 01C1
        gbc.setState(0x6555, 0xc6d7, 0x46b0, 0x11e3, 0x1b2b, 0x816d, 0x0, 0x0);
        gbc.writeMem(0x6555, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc6d7, gbc.sp());
        EXPECT(0x6557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01C2
        gbc.setState(0x9674, 0x907a, 0x6580, 0x1d03, 0x5a7a, 0xf397, 0x1, 0x0);
        gbc.writeMem(0x9674, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x907a, gbc.sp());
        EXPECT(0x9676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9674));
        EXPECT(0x4b, gbc.readMem(0x9675));
        // CB 4B 01C3
        gbc.setState(0x64c5, 0x34d3, 0x22e0, 0xe546, 0x39d7, 0xf519, 0x1, 0x1);
        gbc.writeMem(0x64c5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x34d3, gbc.sp());
        EXPECT(0x64c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01C4
        gbc.setState(0xcfdb, 0xa6f, 0x4260, 0x1dbd, 0xe0c1, 0x2745, 0x1, 0x0);
        gbc.writeMem(0xcfdb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa6f, gbc.sp());
        EXPECT(0xcfdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfdb));
        EXPECT(0x4b, gbc.readMem(0xcfdc));
        // CB 4B 01C5
        gbc.setState(0xbdac, 0x1a97, 0x450, 0xe51b, 0xa120, 0x8c60, 0x1, 0x0);
        gbc.writeMem(0xbdac, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1a97, gbc.sp());
        EXPECT(0xbdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdac));
        EXPECT(0x4b, gbc.readMem(0xbdad));
        // CB 4B 01C6
        gbc.setState(0x2ea, 0x2ab6, 0x50d0, 0xb40e, 0x540d, 0xc976, 0x1, 0x1);
        gbc.writeMem(0x2ea, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2ab6, gbc.sp());
        EXPECT(0x2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01C7
        gbc.setState(0x4c17, 0x633b, 0x40f0, 0xb578, 0xc128, 0x4e61, 0x0, 0x0);
        gbc.writeMem(0x4c17, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x633b, gbc.sp());
        EXPECT(0x4c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01C8
        gbc.setState(0xdf2b, 0x4572, 0x95d0, 0x3474, 0x3a2a, 0x75a2, 0x1, 0x0);
        gbc.writeMem(0xdf2b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4572, gbc.sp());
        EXPECT(0xdf2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2b));
        EXPECT(0x4b, gbc.readMem(0xdf2c));
        // CB 4B 01C9
        gbc.setState(0xdc5b, 0xdfce, 0xc420, 0xef8b, 0xfd4c, 0xe97b, 0x0, 0x0);
        gbc.writeMem(0xdc5b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdfce, gbc.sp());
        EXPECT(0xdc5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc5b));
        EXPECT(0x4b, gbc.readMem(0xdc5c));
        // CB 4B 01CA
        gbc.setState(0xe550, 0x8959, 0x7da0, 0xa199, 0xffa, 0x8718, 0x0, 0x1);
        gbc.writeMem(0xe550, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8959, gbc.sp());
        EXPECT(0xe552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe550));
        EXPECT(0x4b, gbc.readMem(0xe551));
        // CB 4B 01CB
        gbc.setState(0x6e8b, 0x108c, 0xc910, 0xcad5, 0x862a, 0x97be, 0x0, 0x0);
        gbc.writeMem(0x6e8b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x108c, gbc.sp());
        EXPECT(0x6e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01CC
        gbc.setState(0x213b, 0x1f30, 0xc910, 0xb781, 0xf388, 0x97b3, 0x0, 0x1);
        gbc.writeMem(0x213b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1f30, gbc.sp());
        EXPECT(0x213d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01CD
        gbc.setState(0xe2df, 0xddb5, 0x86d0, 0x7978, 0x7071, 0x2b34, 0x0, 0x0);
        gbc.writeMem(0xe2df, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xddb5, gbc.sp());
        EXPECT(0xe2e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2df));
        EXPECT(0x4b, gbc.readMem(0xe2e0));
        // CB 4B 01CF
        gbc.setState(0x4b04, 0x4713, 0x1e20, 0x6ab1, 0x4b12, 0xddd, 0x0, 0x1);
        gbc.writeMem(0x4b04, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4713, gbc.sp());
        EXPECT(0x4b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01D0
        gbc.setState(0xb537, 0xec6, 0xcf10, 0x1d72, 0x17f, 0x3ca3, 0x0, 0x1);
        gbc.writeMem(0xb537, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xec6, gbc.sp());
        EXPECT(0xb539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb537));
        EXPECT(0x4b, gbc.readMem(0xb538));
        // CB 4B 01D1
        gbc.setState(0x5d8d, 0x2aa1, 0xcd60, 0x2d33, 0xd081, 0xa1f4, 0x1, 0x0);
        gbc.writeMem(0x5d8d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2aa1, gbc.sp());
        EXPECT(0x5d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01D2
        gbc.setState(0x43a0, 0x2710, 0x7f00, 0x2503, 0x2735, 0x25f6, 0x1, 0x1);
        gbc.writeMem(0x43a0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2710, gbc.sp());
        EXPECT(0x43a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01D3
        gbc.setState(0xdb3e, 0xec2b, 0xdf0, 0x5164, 0xc4d, 0x6eec, 0x0, 0x1);
        gbc.writeMem(0xdb3e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xec2b, gbc.sp());
        EXPECT(0xdb40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb3e));
        EXPECT(0x4b, gbc.readMem(0xdb3f));
        // CB 4B 01D5
        gbc.setState(0x921a, 0x6e71, 0x4050, 0x9775, 0x3664, 0x9288, 0x1, 0x1);
        gbc.writeMem(0x921a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6e71, gbc.sp());
        EXPECT(0x921c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921a));
        EXPECT(0x4b, gbc.readMem(0x921b));
        // CB 4B 01D6
        gbc.setState(0xdd1a, 0x8f84, 0x350, 0x3052, 0x17f1, 0x8c9c, 0x1, 0x1);
        gbc.writeMem(0xdd1a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8f84, gbc.sp());
        EXPECT(0xdd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1a));
        EXPECT(0x4b, gbc.readMem(0xdd1b));
        // CB 4B 01D7
        gbc.setState(0x429d, 0x8ded, 0xdba0, 0x60de, 0x4e35, 0x70cf, 0x0, 0x1);
        gbc.writeMem(0x429d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8ded, gbc.sp());
        EXPECT(0x429f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01D8
        gbc.setState(0x6e85, 0x2774, 0x8970, 0xbb24, 0x4e89, 0x9d66, 0x0, 0x1);
        gbc.writeMem(0x6e85, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2774, gbc.sp());
        EXPECT(0x6e87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01D9
        gbc.setState(0x79be, 0x31a8, 0xfe60, 0x5f0c, 0xe784, 0x6503, 0x1, 0x1);
        gbc.writeMem(0x79be, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x31a8, gbc.sp());
        EXPECT(0x79c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01DA
        gbc.setState(0x8798, 0x4a6b, 0x6c50, 0x6ce7, 0x87d3, 0x7277, 0x0, 0x1);
        gbc.writeMem(0x8798, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4a6b, gbc.sp());
        EXPECT(0x879a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8798));
        EXPECT(0x4b, gbc.readMem(0x8799));
        // CB 4B 01DB
        gbc.setState(0x849e, 0x6ba9, 0x6d90, 0xbcde, 0x4b5a, 0xe55b, 0x0, 0x1);
        gbc.writeMem(0x849e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6ba9, gbc.sp());
        EXPECT(0x84a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849e));
        EXPECT(0x4b, gbc.readMem(0x849f));
        // CB 4B 01DC
        gbc.setState(0x5fe4, 0xcb94, 0x6270, 0x20a1, 0x8eaf, 0x1108, 0x1, 0x0);
        gbc.writeMem(0x5fe4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcb94, gbc.sp());
        EXPECT(0x5fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01DD
        gbc.setState(0x203e, 0x2f90, 0xb3d0, 0xea0e, 0x1271, 0xff33, 0x0, 0x1);
        gbc.writeMem(0x203e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2f90, gbc.sp());
        EXPECT(0x2040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01DE
        gbc.setState(0x4c88, 0x3ba7, 0xc1d0, 0x8206, 0x92ff, 0xae11, 0x1, 0x0);
        gbc.writeMem(0x4c88, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3ba7, gbc.sp());
        EXPECT(0x4c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01DF
        gbc.setState(0xec7d, 0x8104, 0x2020, 0x9d6b, 0xb32f, 0x165a, 0x1, 0x1);
        gbc.writeMem(0xec7d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8104, gbc.sp());
        EXPECT(0xec7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7d));
        EXPECT(0x4b, gbc.readMem(0xec7e));
        // CB 4B 01E0
        gbc.setState(0xe9f6, 0x7a52, 0xb130, 0x6b47, 0x501, 0x7af2, 0x1, 0x1);
        gbc.writeMem(0xe9f6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7a52, gbc.sp());
        EXPECT(0xe9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f6));
        EXPECT(0x4b, gbc.readMem(0xe9f7));
        // CB 4B 01E1
        gbc.setState(0x13cb, 0x89a6, 0xa060, 0xbf48, 0xb783, 0xac9a, 0x0, 0x1);
        gbc.writeMem(0x13cb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x89a6, gbc.sp());
        EXPECT(0x13cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01E2
        gbc.setState(0x454f, 0x9400, 0x5e90, 0x8405, 0x9ed4, 0x7053, 0x0, 0x0);
        gbc.writeMem(0x454f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9400, gbc.sp());
        EXPECT(0x4551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01E3
        gbc.setState(0x9f6, 0x9279, 0xf770, 0x3d86, 0xdf0, 0xbbe7, 0x0, 0x0);
        gbc.writeMem(0x9f6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9279, gbc.sp());
        EXPECT(0x9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01E4
        gbc.setState(0x6d0d, 0x58fc, 0x830, 0x160c, 0x4ef3, 0xae87, 0x1, 0x1);
        gbc.writeMem(0x6d0d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x58fc, gbc.sp());
        EXPECT(0x6d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01E5
        gbc.setState(0x9247, 0x6662, 0x3ac0, 0x14cf, 0x37db, 0xca08, 0x1, 0x1);
        gbc.writeMem(0x9247, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6662, gbc.sp());
        EXPECT(0x9249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9247));
        EXPECT(0x4b, gbc.readMem(0x9248));
        // CB 4B 01E6
        gbc.setState(0x2892, 0xb12c, 0xf3f0, 0xbb5d, 0xe0e4, 0xb458, 0x0, 0x1);
        gbc.writeMem(0x2892, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb12c, gbc.sp());
        EXPECT(0x2894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01E7
        gbc.setState(0x851d, 0x942c, 0x4560, 0xef1, 0xaadb, 0x559e, 0x0, 0x0);
        gbc.writeMem(0x851d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x942c, gbc.sp());
        EXPECT(0x851f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851d));
        EXPECT(0x4b, gbc.readMem(0x851e));
        // CB 4B 01E8
        gbc.setState(0x3c2a, 0xbd38, 0x4a90, 0x88bd, 0x8c0d, 0x80af, 0x1, 0x0);
        gbc.writeMem(0x3c2a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbd38, gbc.sp());
        EXPECT(0x3c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01E9
        gbc.setState(0x7511, 0x7920, 0x3800, 0x8123, 0x70bc, 0x304a, 0x1, 0x0);
        gbc.writeMem(0x7511, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7920, gbc.sp());
        EXPECT(0x7513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01EA
        gbc.setState(0xc11d, 0xac06, 0xdca0, 0x9235, 0x4d00, 0x15cf, 0x0, 0x0);
        gbc.writeMem(0xc11d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xac06, gbc.sp());
        EXPECT(0xc11f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11d));
        EXPECT(0x4b, gbc.readMem(0xc11e));
        // CB 4B 01EB
        gbc.setState(0x52e6, 0xd81, 0x6ab0, 0xf86c, 0xf75c, 0x5429, 0x1, 0x1);
        gbc.writeMem(0x52e6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd81, gbc.sp());
        EXPECT(0x52e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01EC
        gbc.setState(0x2a4d, 0xced, 0xfe20, 0x8ba2, 0xdaa3, 0xd996, 0x1, 0x0);
        gbc.writeMem(0x2a4d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xced, gbc.sp());
        EXPECT(0x2a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01ED
        gbc.setState(0x6a5e, 0xfbcd, 0xe890, 0xd2ec, 0x885b, 0x3c60, 0x1, 0x1);
        gbc.writeMem(0x6a5e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfbcd, gbc.sp());
        EXPECT(0x6a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01EE
        gbc.setState(0x110, 0x89b3, 0x5780, 0xa011, 0x48ff, 0xacdc, 0x0, 0x0);
        gbc.writeMem(0x110, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x89b3, gbc.sp());
        EXPECT(0x112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01EF
        gbc.setState(0xa191, 0x7828, 0x3300, 0x9d77, 0xb445, 0xacfa, 0x1, 0x1);
        gbc.writeMem(0xa191, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7828, gbc.sp());
        EXPECT(0xa193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa191));
        EXPECT(0x4b, gbc.readMem(0xa192));
        // CB 4B 01F0
        gbc.setState(0x9e79, 0x9dfa, 0xa00, 0xbfc6, 0x1c12, 0x311b, 0x1, 0x1);
        gbc.writeMem(0x9e79, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9dfa, gbc.sp());
        EXPECT(0x9e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e79));
        EXPECT(0x4b, gbc.readMem(0x9e7a));
        // CB 4B 01F1
        gbc.setState(0x5d00, 0x248b, 0x6f30, 0xe9cc, 0x7f85, 0x59c2, 0x0, 0x0);
        gbc.writeMem(0x5d00, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x248b, gbc.sp());
        EXPECT(0x5d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01F2
        gbc.setState(0x47e4, 0xe8e2, 0xb940, 0x65f6, 0x1d5, 0x1064, 0x1, 0x1);
        gbc.writeMem(0x47e4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe8e2, gbc.sp());
        EXPECT(0x47e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01F3
        gbc.setState(0x6376, 0xaac0, 0xf790, 0x2bbb, 0x736a, 0x548e, 0x1, 0x1);
        gbc.writeMem(0x6376, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xaac0, gbc.sp());
        EXPECT(0x6378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01F4
        gbc.setState(0xeb0e, 0x83b1, 0x47c0, 0xf865, 0x4202, 0xde7b, 0x0, 0x0);
        gbc.writeMem(0xeb0e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x83b1, gbc.sp());
        EXPECT(0xeb10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0e));
        EXPECT(0x4b, gbc.readMem(0xeb0f));
        // CB 4B 01F5
        gbc.setState(0x3ae0, 0x74d0, 0xdf80, 0xfa8a, 0x7eb3, 0x8c4, 0x1, 0x0);
        gbc.writeMem(0x3ae0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x74d0, gbc.sp());
        EXPECT(0x3ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01F6
        gbc.setState(0x91ed, 0x89a5, 0xb470, 0xec95, 0x6641, 0x898f, 0x0, 0x0);
        gbc.writeMem(0x91ed, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x89a5, gbc.sp());
        EXPECT(0x91ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ed));
        EXPECT(0x4b, gbc.readMem(0x91ee));
        // CB 4B 01F7
        gbc.setState(0xc80e, 0x14d, 0xe3a0, 0x56e4, 0x795c, 0x9d2d, 0x0, 0x0);
        gbc.writeMem(0xc80e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x14d, gbc.sp());
        EXPECT(0xc810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80e));
        EXPECT(0x4b, gbc.readMem(0xc80f));
        // CB 4B 01F8
        gbc.setState(0xe2c4, 0x3499, 0x96f0, 0xce65, 0xd96a, 0x105d, 0x0, 0x1);
        gbc.writeMem(0xe2c4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3499, gbc.sp());
        EXPECT(0xe2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c4));
        EXPECT(0x4b, gbc.readMem(0xe2c5));
        // CB 4B 01F9
        gbc.setState(0x9a8c, 0x493f, 0xcc40, 0xf13b, 0x34c2, 0x5ef7, 0x1, 0x1);
        gbc.writeMem(0x9a8c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x493f, gbc.sp());
        EXPECT(0x9a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8c));
        EXPECT(0x4b, gbc.readMem(0x9a8d));
        // CB 4B 01FA
        gbc.setState(0x9a3f, 0x5a7f, 0x3c80, 0x15f6, 0x4a63, 0x427d, 0x0, 0x1);
        gbc.writeMem(0x9a3f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5a7f, gbc.sp());
        EXPECT(0x9a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a3f));
        EXPECT(0x4b, gbc.readMem(0x9a40));
        // CB 4B 01FB
        gbc.setState(0x6542, 0xd397, 0x4b60, 0xee84, 0x513a, 0x92f5, 0x0, 0x0);
        gbc.writeMem(0x6542, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd397, gbc.sp());
        EXPECT(0x6544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 01FC
        gbc.setState(0x5af2, 0xd2e8, 0x7090, 0x5a61, 0xc03d, 0xcfc3, 0x1, 0x0);
        gbc.writeMem(0x5af2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd2e8, gbc.sp());
        EXPECT(0x5af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01FD
        gbc.setState(0x1c37, 0x1c4c, 0x7b70, 0x1f71, 0x4c95, 0x4afc, 0x0, 0x0);
        gbc.writeMem(0x1c37, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1c4c, gbc.sp());
        EXPECT(0x1c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 01FE
        gbc.setState(0xa8d0, 0xb25a, 0x63d0, 0xef06, 0xf68e, 0x7ba5, 0x1, 0x0);
        gbc.writeMem(0xa8d0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb25a, gbc.sp());
        EXPECT(0xa8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d0));
        EXPECT(0x4b, gbc.readMem(0xa8d1));
        // CB 4B 01FF
        gbc.setState(0xdfe2, 0x7e5c, 0xbe10, 0x14d7, 0xec0d, 0xaa4b, 0x1, 0x0);
        gbc.writeMem(0xdfe2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7e5c, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe2));
        EXPECT(0x4b, gbc.readMem(0xdfe3));
        // CB 4B 0201
        gbc.setState(0x32a0, 0x18f0, 0xd490, 0xc10d, 0x1650, 0x518d, 0x1, 0x1);
        gbc.writeMem(0x32a0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x18f0, gbc.sp());
        EXPECT(0x32a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0203
        gbc.setState(0x69f8, 0xdbdf, 0x2fc0, 0xf2fa, 0x4df8, 0x9e24, 0x0, 0x0);
        gbc.writeMem(0x69f8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdbdf, gbc.sp());
        EXPECT(0x69fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0204
        gbc.setState(0x22ad, 0x31e0, 0x14f0, 0x92e7, 0x1b, 0xa39b, 0x1, 0x1);
        gbc.writeMem(0x22ad, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x31e0, gbc.sp());
        EXPECT(0x22af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0205
        gbc.setState(0xdc2c, 0x558d, 0x7370, 0x5c88, 0xa156, 0xe777, 0x1, 0x1);
        gbc.writeMem(0xdc2c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x558d, gbc.sp());
        EXPECT(0xdc2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2c));
        EXPECT(0x4b, gbc.readMem(0xdc2d));
        // CB 4B 0206
        gbc.setState(0x19f1, 0xdfd, 0x5fb0, 0x51f3, 0xf5a7, 0x5012, 0x0, 0x0);
        gbc.writeMem(0x19f1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdfd, gbc.sp());
        EXPECT(0x19f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0207
        gbc.setState(0xd4a3, 0x8f38, 0x99c0, 0xf835, 0x99d6, 0x7218, 0x1, 0x1);
        gbc.writeMem(0xd4a3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8f38, gbc.sp());
        EXPECT(0xd4a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a3));
        EXPECT(0x4b, gbc.readMem(0xd4a4));
        // CB 4B 0208
        gbc.setState(0x6ac8, 0x4bfc, 0x18e0, 0x20a9, 0x3d63, 0xd825, 0x0, 0x0);
        gbc.writeMem(0x6ac8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4bfc, gbc.sp());
        EXPECT(0x6aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0209
        gbc.setState(0x7b1e, 0xfbd0, 0xccb0, 0x7b93, 0x747c, 0x2f73, 0x0, 0x0);
        gbc.writeMem(0x7b1e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfbd0, gbc.sp());
        EXPECT(0x7b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 020A
        gbc.setState(0x90cf, 0xd2fd, 0x47e0, 0x16b8, 0xbe60, 0x2aa9, 0x0, 0x0);
        gbc.writeMem(0x90cf, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd2fd, gbc.sp());
        EXPECT(0x90d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90cf));
        EXPECT(0x4b, gbc.readMem(0x90d0));
        // CB 4B 020B
        gbc.setState(0xdcef, 0x4429, 0x2830, 0xce4a, 0xc927, 0xc78e, 0x0, 0x0);
        gbc.writeMem(0xdcef, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4429, gbc.sp());
        EXPECT(0xdcf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcef));
        EXPECT(0x4b, gbc.readMem(0xdcf0));
        // CB 4B 020C
        gbc.setState(0x8eef, 0x420e, 0xbfe0, 0x9a94, 0x69f1, 0xc877, 0x0, 0x0);
        gbc.writeMem(0x8eef, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x420e, gbc.sp());
        EXPECT(0x8ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eef));
        EXPECT(0x4b, gbc.readMem(0x8ef0));
        // CB 4B 020D
        gbc.setState(0x6564, 0xc9fa, 0x3000, 0x54ec, 0x19d6, 0xf574, 0x0, 0x1);
        gbc.writeMem(0x6564, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc9fa, gbc.sp());
        EXPECT(0x6566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 020E
        gbc.setState(0x88e4, 0xcd93, 0x6500, 0xe08e, 0xce63, 0xdcf8, 0x1, 0x0);
        gbc.writeMem(0x88e4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcd93, gbc.sp());
        EXPECT(0x88e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88e4));
        EXPECT(0x4b, gbc.readMem(0x88e5));
        // CB 4B 020F
        gbc.setState(0xe535, 0x334, 0xf330, 0x25e7, 0xb381, 0x8eb4, 0x1, 0x1);
        gbc.writeMem(0xe535, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x334, gbc.sp());
        EXPECT(0xe537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe535));
        EXPECT(0x4b, gbc.readMem(0xe536));
        // CB 4B 0210
        gbc.setState(0xc51b, 0x1bf9, 0x7740, 0x934a, 0xd6f1, 0x5fc8, 0x0, 0x1);
        gbc.writeMem(0xc51b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1bf9, gbc.sp());
        EXPECT(0xc51d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51b));
        EXPECT(0x4b, gbc.readMem(0xc51c));
        // CB 4B 0211
        gbc.setState(0xa1b9, 0xcc5, 0x5460, 0x1bd7, 0x7d57, 0x8d05, 0x0, 0x0);
        gbc.writeMem(0xa1b9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcc5, gbc.sp());
        EXPECT(0xa1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b9));
        EXPECT(0x4b, gbc.readMem(0xa1ba));
        // CB 4B 0212
        gbc.setState(0x9511, 0xee5e, 0xcf70, 0x49ab, 0x4135, 0xb0c5, 0x1, 0x1);
        gbc.writeMem(0x9511, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xee5e, gbc.sp());
        EXPECT(0x9513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9511));
        EXPECT(0x4b, gbc.readMem(0x9512));
        // CB 4B 0213
        gbc.setState(0xa2cc, 0x510, 0x5d10, 0x5e38, 0x4fae, 0x372e, 0x1, 0x1);
        gbc.writeMem(0xa2cc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x510, gbc.sp());
        EXPECT(0xa2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2cc));
        EXPECT(0x4b, gbc.readMem(0xa2cd));
        // CB 4B 0214
        gbc.setState(0x3938, 0xc82d, 0x63c0, 0x2be, 0x4a15, 0x2a77, 0x0, 0x1);
        gbc.writeMem(0x3938, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc82d, gbc.sp());
        EXPECT(0x393a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0215
        gbc.setState(0x8c0, 0xa072, 0x90b0, 0x6af4, 0x3108, 0xcaf7, 0x1, 0x1);
        gbc.writeMem(0x8c0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa072, gbc.sp());
        EXPECT(0x8c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0217
        gbc.setState(0x736, 0x6e67, 0x3ae0, 0x89e6, 0xd524, 0xb99e, 0x1, 0x1);
        gbc.writeMem(0x736, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6e67, gbc.sp());
        EXPECT(0x738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0218
        gbc.setState(0x7e4d, 0xa2df, 0xe310, 0xbe0c, 0x235, 0x6762, 0x0, 0x0);
        gbc.writeMem(0x7e4d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa2df, gbc.sp());
        EXPECT(0x7e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0219
        gbc.setState(0x2529, 0x1ec7, 0x92b0, 0xe1b, 0xacdc, 0x7498, 0x1, 0x0);
        gbc.writeMem(0x2529, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1ec7, gbc.sp());
        EXPECT(0x252b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 021B
        gbc.setState(0xe0ca, 0x5aee, 0xd2c0, 0x247f, 0xb209, 0x2a6a, 0x1, 0x1);
        gbc.writeMem(0xe0ca, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5aee, gbc.sp());
        EXPECT(0xe0cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ca));
        EXPECT(0x4b, gbc.readMem(0xe0cb));
        // CB 4B 021C
        gbc.setState(0x66c8, 0x7668, 0xfd70, 0x9d99, 0xa9c1, 0xf781, 0x0, 0x1);
        gbc.writeMem(0x66c8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7668, gbc.sp());
        EXPECT(0x66ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 021D
        gbc.setState(0x9690, 0x202, 0xe510, 0xcfb6, 0x1fd8, 0x6e5d, 0x1, 0x1);
        gbc.writeMem(0x9690, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x202, gbc.sp());
        EXPECT(0x9692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9690));
        EXPECT(0x4b, gbc.readMem(0x9691));
        // CB 4B 021E
        gbc.setState(0xe9bd, 0x875c, 0xed50, 0xf9ce, 0x1fb3, 0xf79a, 0x0, 0x0);
        gbc.writeMem(0xe9bd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x875c, gbc.sp());
        EXPECT(0xe9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9bd));
        EXPECT(0x4b, gbc.readMem(0xe9be));
        // CB 4B 021F
        gbc.setState(0xcf0, 0xc3ea, 0x7390, 0x53bc, 0xe523, 0xb513, 0x0, 0x1);
        gbc.writeMem(0xcf0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc3ea, gbc.sp());
        EXPECT(0xcf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0220
        gbc.setState(0xd71b, 0xf7db, 0x9780, 0x5e53, 0xc3d6, 0xe3b8, 0x0, 0x1);
        gbc.writeMem(0xd71b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf7db, gbc.sp());
        EXPECT(0xd71d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71b));
        EXPECT(0x4b, gbc.readMem(0xd71c));
        // CB 4B 0221
        gbc.setState(0xa86f, 0x6740, 0x690, 0x977a, 0x5e25, 0xbc26, 0x1, 0x0);
        gbc.writeMem(0xa86f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6740, gbc.sp());
        EXPECT(0xa871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86f));
        EXPECT(0x4b, gbc.readMem(0xa870));
        // CB 4B 0222
        gbc.setState(0x7b54, 0xb544, 0x83c0, 0xcb04, 0xfe8e, 0xff0a, 0x0, 0x0);
        gbc.writeMem(0x7b54, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb544, gbc.sp());
        EXPECT(0x7b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0223
        gbc.setState(0x8a4, 0xec98, 0x9360, 0xbdcf, 0xc899, 0x37fb, 0x1, 0x0);
        gbc.writeMem(0x8a4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xec98, gbc.sp());
        EXPECT(0x8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0224
        gbc.setState(0x7ede, 0x2882, 0xf180, 0x978a, 0xe7f5, 0x8af9, 0x0, 0x1);
        gbc.writeMem(0x7ede, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2882, gbc.sp());
        EXPECT(0x7ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0225
        gbc.setState(0xa55d, 0x6587, 0x43c0, 0xb008, 0xa4a8, 0x89e8, 0x1, 0x1);
        gbc.writeMem(0xa55d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6587, gbc.sp());
        EXPECT(0xa55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa55d));
        EXPECT(0x4b, gbc.readMem(0xa55e));
        // CB 4B 0226
        gbc.setState(0xcf48, 0x6d6, 0xd390, 0x8499, 0x62c7, 0x9e8e, 0x1, 0x0);
        gbc.writeMem(0xcf48, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6d6, gbc.sp());
        EXPECT(0xcf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf48));
        EXPECT(0x4b, gbc.readMem(0xcf49));
        // CB 4B 0227
        gbc.setState(0x4dc1, 0xdc98, 0x8760, 0x16d9, 0x48f4, 0x4079, 0x1, 0x1);
        gbc.writeMem(0x4dc1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdc98, gbc.sp());
        EXPECT(0x4dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0228
        gbc.setState(0x4a28, 0x57d1, 0x6bc0, 0xdc94, 0x51a9, 0x7735, 0x1, 0x1);
        gbc.writeMem(0x4a28, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x57d1, gbc.sp());
        EXPECT(0x4a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0229
        gbc.setState(0x1abd, 0x5e85, 0x86c0, 0x3de4, 0xf83b, 0xf401, 0x1, 0x0);
        gbc.writeMem(0x1abd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5e85, gbc.sp());
        EXPECT(0x1abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 022B
        gbc.setState(0x7127, 0x5f5, 0x9790, 0x760, 0x97a6, 0x20e9, 0x0, 0x0);
        gbc.writeMem(0x7127, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5f5, gbc.sp());
        EXPECT(0x7129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 022D
        gbc.setState(0x74cd, 0x11ac, 0xf460, 0x3fb2, 0xaf4b, 0x7cc6, 0x0, 0x0);
        gbc.writeMem(0x74cd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x11ac, gbc.sp());
        EXPECT(0x74cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 022E
        gbc.setState(0xb3d5, 0x6f, 0xd760, 0xd8dc, 0x80fa, 0x33a8, 0x1, 0x1);
        gbc.writeMem(0xb3d5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6f, gbc.sp());
        EXPECT(0xb3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d5));
        EXPECT(0x4b, gbc.readMem(0xb3d6));
        // CB 4B 022F
        gbc.setState(0xeee6, 0x3980, 0xa790, 0xe6db, 0x61a3, 0xbe8d, 0x1, 0x0);
        gbc.writeMem(0xeee6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3980, gbc.sp());
        EXPECT(0xeee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee6));
        EXPECT(0x4b, gbc.readMem(0xeee7));
        // CB 4B 0230
        gbc.setState(0x34a3, 0xf6d0, 0x6c40, 0xf8e0, 0xf848, 0xa5fa, 0x0, 0x1);
        gbc.writeMem(0x34a3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf6d0, gbc.sp());
        EXPECT(0x34a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0231
        gbc.setState(0x30b4, 0x890d, 0x180, 0x2751, 0x265e, 0xcad, 0x1, 0x0);
        gbc.writeMem(0x30b4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x890d, gbc.sp());
        EXPECT(0x30b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0232
        gbc.setState(0x2c, 0x5f56, 0x290, 0x75ec, 0x5351, 0x5d44, 0x1, 0x1);
        gbc.writeMem(0x2c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5f56, gbc.sp());
        EXPECT(0x2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0233
        gbc.setState(0x4ac9, 0xfb03, 0x68d0, 0x41f, 0xf815, 0xa0bb, 0x1, 0x0);
        gbc.writeMem(0x4ac9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfb03, gbc.sp());
        EXPECT(0x4acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0234
        gbc.setState(0xd5f, 0x3e7f, 0xfb50, 0x3bb6, 0x25f1, 0xf2d9, 0x0, 0x0);
        gbc.writeMem(0xd5f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3e7f, gbc.sp());
        EXPECT(0xd61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0235
        gbc.setState(0x196e, 0xfbd3, 0xc320, 0x9111, 0x7643, 0x9f3f, 0x1, 0x1);
        gbc.writeMem(0x196e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfbd3, gbc.sp());
        EXPECT(0x1970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0236
        gbc.setState(0x4d3a, 0x71ee, 0x4cf0, 0x16d8, 0x287f, 0xbaca, 0x1, 0x1);
        gbc.writeMem(0x4d3a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x71ee, gbc.sp());
        EXPECT(0x4d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0237
        gbc.setState(0x493a, 0x8b06, 0xf9c0, 0xc45a, 0x6676, 0x8ae1, 0x0, 0x0);
        gbc.writeMem(0x493a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8b06, gbc.sp());
        EXPECT(0x493c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0238
        gbc.setState(0x4e28, 0xd63c, 0x7fa0, 0x2282, 0xfb06, 0xaca7, 0x0, 0x0);
        gbc.writeMem(0x4e28, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd63c, gbc.sp());
        EXPECT(0x4e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0239
        gbc.setState(0x5a6e, 0x57fd, 0x4640, 0x2ee7, 0x8dc2, 0xfc34, 0x1, 0x1);
        gbc.writeMem(0x5a6e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x57fd, gbc.sp());
        EXPECT(0x5a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 023B
        gbc.setState(0x41c6, 0x9518, 0x8710, 0x5e6f, 0x6086, 0x7f85, 0x0, 0x1);
        gbc.writeMem(0x41c6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9518, gbc.sp());
        EXPECT(0x41c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 023C
        gbc.setState(0x976c, 0x66e9, 0xc0f0, 0x5df9, 0x8a2a, 0x8e4a, 0x0, 0x1);
        gbc.writeMem(0x976c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x66e9, gbc.sp());
        EXPECT(0x976e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x976c));
        EXPECT(0x4b, gbc.readMem(0x976d));
        // CB 4B 023E
        gbc.setState(0x11fb, 0x5d2c, 0x6360, 0xf33a, 0xd8b3, 0xdfb6, 0x0, 0x1);
        gbc.writeMem(0x11fb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5d2c, gbc.sp());
        EXPECT(0x11fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 023F
        gbc.setState(0x6d12, 0x4f48, 0xe0b0, 0x2338, 0x9fcb, 0xa928, 0x1, 0x0);
        gbc.writeMem(0x6d12, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4f48, gbc.sp());
        EXPECT(0x6d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0240
        gbc.setState(0xc097, 0x1bfe, 0x2cf0, 0xf37c, 0x5056, 0xdfb1, 0x1, 0x0);
        gbc.writeMem(0xc097, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1bfe, gbc.sp());
        EXPECT(0xc099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc097));
        EXPECT(0x4b, gbc.readMem(0xc098));
        // CB 4B 0241
        gbc.setState(0x987e, 0xf440, 0x2340, 0xfd1e, 0xae9c, 0x6aa6, 0x1, 0x0);
        gbc.writeMem(0x987e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf440, gbc.sp());
        EXPECT(0x9880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987e));
        EXPECT(0x4b, gbc.readMem(0x987f));
        // CB 4B 0242
        gbc.setState(0xe5db, 0xbd6b, 0x7500, 0x2eac, 0xe944, 0x1226, 0x1, 0x0);
        gbc.writeMem(0xe5db, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbd6b, gbc.sp());
        EXPECT(0xe5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5db));
        EXPECT(0x4b, gbc.readMem(0xe5dc));
        // CB 4B 0243
        gbc.setState(0x9c47, 0xffa6, 0xe1b0, 0x29e4, 0x206a, 0x81c1, 0x1, 0x0);
        gbc.writeMem(0x9c47, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xffa6, gbc.sp());
        EXPECT(0x9c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c47));
        EXPECT(0x4b, gbc.readMem(0x9c48));
        // CB 4B 0244
        gbc.setState(0x51ad, 0x2f88, 0xef80, 0x3333, 0x6373, 0x804e, 0x0, 0x1);
        gbc.writeMem(0x51ad, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2f88, gbc.sp());
        EXPECT(0x51af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0245
        gbc.setState(0x5111, 0x42c, 0x8a50, 0xc5a, 0x5450, 0x4a71, 0x1, 0x0);
        gbc.writeMem(0x5111, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x42c, gbc.sp());
        EXPECT(0x5113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0246
        gbc.setState(0x3058, 0xdf71, 0x9580, 0x31cb, 0xff6a, 0xf87, 0x1, 0x0);
        gbc.writeMem(0x3058, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdf71, gbc.sp());
        EXPECT(0x305a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0247
        gbc.setState(0xc9d3, 0x1581, 0x8ec0, 0x2ca, 0x930c, 0xaf0a, 0x0, 0x1);
        gbc.writeMem(0xc9d3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1581, gbc.sp());
        EXPECT(0xc9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d3));
        EXPECT(0x4b, gbc.readMem(0xc9d4));
        // CB 4B 0248
        gbc.setState(0xa3fe, 0x408b, 0xbe40, 0xf7d7, 0xcbc9, 0x3e20, 0x1, 0x0);
        gbc.writeMem(0xa3fe, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x408b, gbc.sp());
        EXPECT(0xa400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fe));
        EXPECT(0x4b, gbc.readMem(0xa3ff));
        // CB 4B 0249
        gbc.setState(0x8d6e, 0x6ff7, 0xc070, 0xdc5f, 0x19b5, 0xf136, 0x0, 0x0);
        gbc.writeMem(0x8d6e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6ff7, gbc.sp());
        EXPECT(0x8d70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d6e));
        EXPECT(0x4b, gbc.readMem(0x8d6f));
        // CB 4B 024A
        gbc.setState(0x4a51, 0x53f0, 0xc670, 0x8a83, 0xdcd1, 0xdceb, 0x0, 0x1);
        gbc.writeMem(0x4a51, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x53f0, gbc.sp());
        EXPECT(0x4a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 024B
        gbc.setState(0x657c, 0xa462, 0x110, 0x18b4, 0x17a6, 0xc3c9, 0x0, 0x0);
        gbc.writeMem(0x657c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa462, gbc.sp());
        EXPECT(0x657e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 024C
        gbc.setState(0xb461, 0x4a5a, 0x5f00, 0xced0, 0x592b, 0x1b0d, 0x1, 0x0);
        gbc.writeMem(0xb461, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4a5a, gbc.sp());
        EXPECT(0xb463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb461));
        EXPECT(0x4b, gbc.readMem(0xb462));
        // CB 4B 024D
        gbc.setState(0xdf42, 0xbfaa, 0xbde0, 0xa9af, 0x3e95, 0x38ef, 0x0, 0x1);
        gbc.writeMem(0xdf42, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbfaa, gbc.sp());
        EXPECT(0xdf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf42));
        EXPECT(0x4b, gbc.readMem(0xdf43));
        // CB 4B 024F
        gbc.setState(0xa3ff, 0xf8a6, 0xde50, 0x86ed, 0xd599, 0xdf40, 0x0, 0x0);
        gbc.writeMem(0xa3ff, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf8a6, gbc.sp());
        EXPECT(0xa401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ff));
        EXPECT(0x4b, gbc.readMem(0xa400));
        // CB 4B 0250
        gbc.setState(0x1545, 0x2283, 0x8360, 0x9193, 0xf96, 0x6745, 0x0, 0x0);
        gbc.writeMem(0x1545, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2283, gbc.sp());
        EXPECT(0x1547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0251
        gbc.setState(0x1d17, 0x80f7, 0x6620, 0xce68, 0x1197, 0xcfb6, 0x0, 0x0);
        gbc.writeMem(0x1d17, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x80f7, gbc.sp());
        EXPECT(0x1d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0252
        gbc.setState(0x84a0, 0x9c53, 0x9a00, 0x3fe3, 0x4010, 0xcfbe, 0x1, 0x0);
        gbc.writeMem(0x84a0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9c53, gbc.sp());
        EXPECT(0x84a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a0));
        EXPECT(0x4b, gbc.readMem(0x84a1));
        // CB 4B 0253
        gbc.setState(0x3f26, 0x35a6, 0x8410, 0xdf85, 0x3228, 0xf79, 0x0, 0x1);
        gbc.writeMem(0x3f26, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x35a6, gbc.sp());
        EXPECT(0x3f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0254
        gbc.setState(0xc9a0, 0xb27e, 0xac00, 0x2dbd, 0x383c, 0x325b, 0x0, 0x1);
        gbc.writeMem(0xc9a0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb27e, gbc.sp());
        EXPECT(0xc9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a0));
        EXPECT(0x4b, gbc.readMem(0xc9a1));
        // CB 4B 0255
        gbc.setState(0x6963, 0x39e6, 0xd8d0, 0x86de, 0xbf0f, 0xd917, 0x1, 0x1);
        gbc.writeMem(0x6963, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x39e6, gbc.sp());
        EXPECT(0x6965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0256
        gbc.setState(0xd7a0, 0x49ba, 0x6a10, 0xce3e, 0x2696, 0xe5c8, 0x0, 0x1);
        gbc.writeMem(0xd7a0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x49ba, gbc.sp());
        EXPECT(0xd7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a0));
        EXPECT(0x4b, gbc.readMem(0xd7a1));
        // CB 4B 0257
        gbc.setState(0x49d1, 0xe37e, 0xd550, 0x54ef, 0xf8b4, 0xc39d, 0x1, 0x0);
        gbc.writeMem(0x49d1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe37e, gbc.sp());
        EXPECT(0x49d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0259
        gbc.setState(0x2380, 0xf8db, 0x15e0, 0x8d27, 0x99ae, 0x2c67, 0x1, 0x0);
        gbc.writeMem(0x2380, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf8db, gbc.sp());
        EXPECT(0x2382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 025A
        gbc.setState(0x96b9, 0xae8c, 0x6100, 0xc654, 0x3360, 0xccc, 0x0, 0x1);
        gbc.writeMem(0x96b9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0x96bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b9));
        EXPECT(0x4b, gbc.readMem(0x96ba));
        // CB 4B 025B
        gbc.setState(0x81cc, 0x6d2b, 0xeef0, 0x6b8, 0x85e4, 0x9e02, 0x0, 0x1);
        gbc.writeMem(0x81cc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6d2b, gbc.sp());
        EXPECT(0x81ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81cc));
        EXPECT(0x4b, gbc.readMem(0x81cd));
        // CB 4B 025C
        gbc.setState(0x74a8, 0x50fc, 0x8570, 0x13f, 0x8bd5, 0x16c5, 0x0, 0x0);
        gbc.writeMem(0x74a8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x50fc, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 025D
        gbc.setState(0xa281, 0x9670, 0x96b0, 0xf43, 0xe779, 0x215c, 0x0, 0x1);
        gbc.writeMem(0xa281, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9670, gbc.sp());
        EXPECT(0xa283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa281));
        EXPECT(0x4b, gbc.readMem(0xa282));
        // CB 4B 025E
        gbc.setState(0xa0ce, 0x613, 0x4e50, 0xe75, 0x52a4, 0xa4e7, 0x1, 0x0);
        gbc.writeMem(0xa0ce, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x613, gbc.sp());
        EXPECT(0xa0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ce));
        EXPECT(0x4b, gbc.readMem(0xa0cf));
        // CB 4B 025F
        gbc.setState(0xee45, 0x9d2f, 0x58b0, 0xd2e0, 0xcca, 0xfb61, 0x1, 0x1);
        gbc.writeMem(0xee45, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9d2f, gbc.sp());
        EXPECT(0xee47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee45));
        EXPECT(0x4b, gbc.readMem(0xee46));
        // CB 4B 0260
        gbc.setState(0x1cc5, 0x260e, 0xeb0, 0xe451, 0xf9ad, 0xa748, 0x1, 0x1);
        gbc.writeMem(0x1cc5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x260e, gbc.sp());
        EXPECT(0x1cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0261
        gbc.setState(0x2d43, 0x7913, 0xa0b0, 0x3cf, 0x6542, 0x5446, 0x1, 0x1);
        gbc.writeMem(0x2d43, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7913, gbc.sp());
        EXPECT(0x2d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0262
        gbc.setState(0x4379, 0x5e3b, 0x3de0, 0x7dcb, 0xc856, 0xb920, 0x0, 0x1);
        gbc.writeMem(0x4379, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5e3b, gbc.sp());
        EXPECT(0x437b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0263
        gbc.setState(0xd221, 0xace7, 0x1b60, 0xba38, 0xc170, 0x7337, 0x0, 0x0);
        gbc.writeMem(0xd221, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xace7, gbc.sp());
        EXPECT(0xd223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd221));
        EXPECT(0x4b, gbc.readMem(0xd222));
        // CB 4B 0264
        gbc.setState(0xe1fc, 0x9dd5, 0xbe80, 0x40d6, 0x9b41, 0xc7ee, 0x0, 0x0);
        gbc.writeMem(0xe1fc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9dd5, gbc.sp());
        EXPECT(0xe1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1fc));
        EXPECT(0x4b, gbc.readMem(0xe1fd));
        // CB 4B 0265
        gbc.setState(0x6fe8, 0xe492, 0x5f90, 0x3968, 0xb760, 0xa231, 0x1, 0x0);
        gbc.writeMem(0x6fe8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe492, gbc.sp());
        EXPECT(0x6fea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0266
        gbc.setState(0x7103, 0xd665, 0xa920, 0x89c4, 0x65fa, 0xb675, 0x0, 0x1);
        gbc.writeMem(0x7103, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd665, gbc.sp());
        EXPECT(0x7105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0267
        gbc.setState(0x81e8, 0xe4de, 0x970, 0xf454, 0x5117, 0x24c9, 0x0, 0x0);
        gbc.writeMem(0x81e8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe4de, gbc.sp());
        EXPECT(0x81ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81e8));
        EXPECT(0x4b, gbc.readMem(0x81e9));
        // CB 4B 0268
        gbc.setState(0xa85e, 0xaeae, 0xeb0, 0xe0a1, 0x1582, 0xfede, 0x1, 0x1);
        gbc.writeMem(0xa85e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaeae, gbc.sp());
        EXPECT(0xa860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa85e));
        EXPECT(0x4b, gbc.readMem(0xa85f));
        // CB 4B 0269
        gbc.setState(0x4597, 0x4047, 0x1fd0, 0xc578, 0xcfd6, 0xfabb, 0x0, 0x0);
        gbc.writeMem(0x4597, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4047, gbc.sp());
        EXPECT(0x4599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 026A
        gbc.setState(0x41cc, 0xf6b1, 0xba10, 0xd6d7, 0x1a56, 0xa3d0, 0x1, 0x0);
        gbc.writeMem(0x41cc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0x41ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 026B
        gbc.setState(0x80e7, 0x1b9a, 0xf980, 0xfa4c, 0xa922, 0xebb0, 0x1, 0x0);
        gbc.writeMem(0x80e7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1b9a, gbc.sp());
        EXPECT(0x80e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e7));
        EXPECT(0x4b, gbc.readMem(0x80e8));
        // CB 4B 026C
        gbc.setState(0x339e, 0x388c, 0x2fb0, 0xc033, 0xedd1, 0xdbf6, 0x1, 0x0);
        gbc.writeMem(0x339e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x388c, gbc.sp());
        EXPECT(0x33a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 026D
        gbc.setState(0xd71, 0xb218, 0x1200, 0x94c4, 0xa69, 0x6efd, 0x0, 0x1);
        gbc.writeMem(0xd71, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb218, gbc.sp());
        EXPECT(0xd73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 026E
        gbc.setState(0xe904, 0x27b2, 0x16a0, 0xa86, 0xfb53, 0x14b6, 0x1, 0x0);
        gbc.writeMem(0xe904, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x27b2, gbc.sp());
        EXPECT(0xe906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe904));
        EXPECT(0x4b, gbc.readMem(0xe905));
        // CB 4B 026F
        gbc.setState(0x85b4, 0xaae6, 0x1580, 0x1f8d, 0x1767, 0xe6e3, 0x0, 0x0);
        gbc.writeMem(0x85b4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xaae6, gbc.sp());
        EXPECT(0x85b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b4));
        EXPECT(0x4b, gbc.readMem(0x85b5));
        // CB 4B 0270
        gbc.setState(0xc31a, 0x54c5, 0x93d0, 0x7987, 0x6955, 0xe2a7, 0x1, 0x1);
        gbc.writeMem(0xc31a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x54c5, gbc.sp());
        EXPECT(0xc31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31a));
        EXPECT(0x4b, gbc.readMem(0xc31b));
        // CB 4B 0271
        gbc.setState(0xb132, 0x9d2, 0x810, 0xab44, 0x80ee, 0x69dc, 0x0, 0x1);
        gbc.writeMem(0xb132, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9d2, gbc.sp());
        EXPECT(0xb134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb132));
        EXPECT(0x4b, gbc.readMem(0xb133));
        // CB 4B 0272
        gbc.setState(0x5a7e, 0x1ba2, 0x3690, 0xe131, 0xa77b, 0x29c5, 0x0, 0x0);
        gbc.writeMem(0x5a7e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1ba2, gbc.sp());
        EXPECT(0x5a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0273
        gbc.setState(0x504e, 0x9965, 0xcb20, 0x9d8a, 0x5bfe, 0x32e3, 0x1, 0x0);
        gbc.writeMem(0x504e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9965, gbc.sp());
        EXPECT(0x5050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0274
        gbc.setState(0x40c, 0x95fa, 0x4c80, 0xbc1e, 0xc05b, 0xebf4, 0x1, 0x0);
        gbc.writeMem(0x40c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x95fa, gbc.sp());
        EXPECT(0x40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0275
        gbc.setState(0xb477, 0x42d5, 0xfea0, 0x1949, 0x62cd, 0xb607, 0x0, 0x1);
        gbc.writeMem(0xb477, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x42d5, gbc.sp());
        EXPECT(0xb479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb477));
        EXPECT(0x4b, gbc.readMem(0xb478));
        // CB 4B 0276
        gbc.setState(0xc6d1, 0x1213, 0x1dc0, 0x66bd, 0x9223, 0x79e8, 0x1, 0x0);
        gbc.writeMem(0xc6d1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1213, gbc.sp());
        EXPECT(0xc6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d1));
        EXPECT(0x4b, gbc.readMem(0xc6d2));
        // CB 4B 0277
        gbc.setState(0xe182, 0xac23, 0xb400, 0x5262, 0x719c, 0x6145, 0x1, 0x1);
        gbc.writeMem(0xe182, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xac23, gbc.sp());
        EXPECT(0xe184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe182));
        EXPECT(0x4b, gbc.readMem(0xe183));
        // CB 4B 0278
        gbc.setState(0x75db, 0x2c31, 0xdda0, 0xe13f, 0x6fee, 0x33db, 0x1, 0x1);
        gbc.writeMem(0x75db, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2c31, gbc.sp());
        EXPECT(0x75dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0279
        gbc.setState(0xc0e5, 0x78f2, 0xfd20, 0x7f84, 0x297b, 0x1135, 0x0, 0x1);
        gbc.writeMem(0xc0e5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x78f2, gbc.sp());
        EXPECT(0xc0e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e5));
        EXPECT(0x4b, gbc.readMem(0xc0e6));
        // CB 4B 027A
        gbc.setState(0x6c1f, 0xc76, 0x4800, 0x1839, 0xc2a, 0xba23, 0x0, 0x0);
        gbc.writeMem(0x6c1f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc76, gbc.sp());
        EXPECT(0x6c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 027B
        gbc.setState(0x8471, 0x4a13, 0xae30, 0x7d83, 0x8fa3, 0x4c09, 0x1, 0x0);
        gbc.writeMem(0x8471, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4a13, gbc.sp());
        EXPECT(0x8473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8471));
        EXPECT(0x4b, gbc.readMem(0x8472));
        // CB 4B 027C
        gbc.setState(0xe72, 0xebd0, 0x79c0, 0xc345, 0x79c9, 0xeadd, 0x1, 0x0);
        gbc.writeMem(0xe72, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xebd0, gbc.sp());
        EXPECT(0xe74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 027D
        gbc.setState(0x7cf3, 0x2aa6, 0x8960, 0x3ee5, 0x69d, 0xd8cf, 0x0, 0x1);
        gbc.writeMem(0x7cf3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2aa6, gbc.sp());
        EXPECT(0x7cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 027E
        gbc.setState(0x7ce1, 0x9f76, 0x18d0, 0x34d1, 0xc204, 0xccf4, 0x1, 0x1);
        gbc.writeMem(0x7ce1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9f76, gbc.sp());
        EXPECT(0x7ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 027F
        gbc.setState(0xc5b0, 0xaa38, 0xf2e0, 0xafdb, 0x35a8, 0xa4df, 0x1, 0x1);
        gbc.writeMem(0xc5b0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xaa38, gbc.sp());
        EXPECT(0xc5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b0));
        EXPECT(0x4b, gbc.readMem(0xc5b1));
        // CB 4B 0280
        gbc.setState(0xad1a, 0x27a7, 0x7010, 0xa100, 0xa2d3, 0x93b9, 0x0, 0x0);
        gbc.writeMem(0xad1a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x27a7, gbc.sp());
        EXPECT(0xad1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1a));
        EXPECT(0x4b, gbc.readMem(0xad1b));
        // CB 4B 0281
        gbc.setState(0xb99a, 0xdc89, 0x3ba0, 0x17e1, 0x1b2c, 0xf9c3, 0x0, 0x1);
        gbc.writeMem(0xb99a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdc89, gbc.sp());
        EXPECT(0xb99c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99a));
        EXPECT(0x4b, gbc.readMem(0xb99b));
        // CB 4B 0282
        gbc.setState(0x7faa, 0x486b, 0xf50, 0x4f34, 0xfcd4, 0xcf2d, 0x1, 0x0);
        gbc.writeMem(0x7faa, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x486b, gbc.sp());
        EXPECT(0x7fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0283
        gbc.setState(0x21ed, 0xef0a, 0xde40, 0x2860, 0xc366, 0xb288, 0x1, 0x0);
        gbc.writeMem(0x21ed, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xef0a, gbc.sp());
        EXPECT(0x21ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0284
        gbc.setState(0xc552, 0x6932, 0xfb80, 0x1224, 0x4f14, 0x70b, 0x0, 0x0);
        gbc.writeMem(0xc552, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6932, gbc.sp());
        EXPECT(0xc554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc552));
        EXPECT(0x4b, gbc.readMem(0xc553));
        // CB 4B 0285
        gbc.setState(0x6724, 0xc6d1, 0x7630, 0x17d2, 0x4081, 0x2889, 0x0, 0x0);
        gbc.writeMem(0x6724, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc6d1, gbc.sp());
        EXPECT(0x6726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0286
        gbc.setState(0xa9a8, 0x13, 0x9780, 0x13, 0x6c48, 0xaf99, 0x0, 0x0);
        gbc.writeMem(0xa9a8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x13, gbc.sp());
        EXPECT(0xa9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a8));
        EXPECT(0x4b, gbc.readMem(0xa9a9));
        // CB 4B 0287
        gbc.setState(0x13e4, 0xe7be, 0xe520, 0x8801, 0xd1e, 0x80c9, 0x0, 0x0);
        gbc.writeMem(0x13e4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe7be, gbc.sp());
        EXPECT(0x13e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0289
        gbc.setState(0xbe24, 0x1599, 0xedb0, 0x5bdb, 0xec8, 0x695, 0x0, 0x1);
        gbc.writeMem(0xbe24, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1599, gbc.sp());
        EXPECT(0xbe26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe24));
        EXPECT(0x4b, gbc.readMem(0xbe25));
        // CB 4B 028A
        gbc.setState(0x4b7, 0x1fc3, 0xaed0, 0x5945, 0x29c3, 0x959c, 0x1, 0x1);
        gbc.writeMem(0x4b7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1fc3, gbc.sp());
        EXPECT(0x4b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 028B
        gbc.setState(0x72d0, 0x8316, 0x95c0, 0x16b5, 0x42e2, 0x4ac, 0x0, 0x1);
        gbc.writeMem(0x72d0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8316, gbc.sp());
        EXPECT(0x72d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 028C
        gbc.setState(0x860e, 0x9526, 0x88e0, 0xf949, 0xf85, 0x60b7, 0x0, 0x0);
        gbc.writeMem(0x860e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9526, gbc.sp());
        EXPECT(0x8610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860e));
        EXPECT(0x4b, gbc.readMem(0x860f));
        // CB 4B 028D
        gbc.setState(0x284c, 0x183d, 0xc7a0, 0x2560, 0x343d, 0xce86, 0x0, 0x1);
        gbc.writeMem(0x284c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x183d, gbc.sp());
        EXPECT(0x284e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 028E
        gbc.setState(0x7408, 0x3e9, 0x1490, 0x51d2, 0x3cc7, 0x530d, 0x0, 0x1);
        gbc.writeMem(0x7408, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3e9, gbc.sp());
        EXPECT(0x740a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 028F
        gbc.setState(0x8521, 0xdf0, 0xdac0, 0x5a73, 0xaa0b, 0x48e8, 0x1, 0x1);
        gbc.writeMem(0x8521, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdf0, gbc.sp());
        EXPECT(0x8523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8521));
        EXPECT(0x4b, gbc.readMem(0x8522));
        // CB 4B 0292
        gbc.setState(0x73f5, 0x652, 0xf090, 0x4caf, 0x6f86, 0xe4d2, 0x1, 0x1);
        gbc.writeMem(0x73f5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x652, gbc.sp());
        EXPECT(0x73f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0293
        gbc.setState(0x3b2f, 0x85a1, 0x5790, 0xc001, 0xc32e, 0x5d8f, 0x0, 0x1);
        gbc.writeMem(0x3b2f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x85a1, gbc.sp());
        EXPECT(0x3b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0294
        gbc.setState(0x909b, 0x15d2, 0x8af0, 0xc1c5, 0xba74, 0x7af6, 0x1, 0x0);
        gbc.writeMem(0x909b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x15d2, gbc.sp());
        EXPECT(0x909d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909b));
        EXPECT(0x4b, gbc.readMem(0x909c));
        // CB 4B 0295
        gbc.setState(0x610c, 0xbf1c, 0xac30, 0x80d8, 0x99a2, 0x8df8, 0x0, 0x0);
        gbc.writeMem(0x610c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbf1c, gbc.sp());
        EXPECT(0x610e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0296
        gbc.setState(0x7064, 0x58ee, 0x3030, 0xb1e5, 0xc96d, 0xce29, 0x0, 0x0);
        gbc.writeMem(0x7064, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x58ee, gbc.sp());
        EXPECT(0x7066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0297
        gbc.setState(0x77b1, 0xda3d, 0x49a0, 0x783f, 0x6e2e, 0x8ef5, 0x0, 0x0);
        gbc.writeMem(0x77b1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xda3d, gbc.sp());
        EXPECT(0x77b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0298
        gbc.setState(0x3fb2, 0xc6bc, 0x92e0, 0x96dd, 0x7ff, 0x5786, 0x1, 0x1);
        gbc.writeMem(0x3fb2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc6bc, gbc.sp());
        EXPECT(0x3fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0299
        gbc.setState(0xa366, 0x4726, 0x9800, 0x4e63, 0xed0f, 0x6bb6, 0x0, 0x1);
        gbc.writeMem(0xa366, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4726, gbc.sp());
        EXPECT(0xa368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa366));
        EXPECT(0x4b, gbc.readMem(0xa367));
        // CB 4B 029A
        gbc.setState(0xe94b, 0x244b, 0x4970, 0xd530, 0xa364, 0x67a9, 0x1, 0x0);
        gbc.writeMem(0xe94b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x244b, gbc.sp());
        EXPECT(0xe94d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe94b));
        EXPECT(0x4b, gbc.readMem(0xe94c));
        // CB 4B 029B
        gbc.setState(0x76ee, 0x1aef, 0xf2a0, 0xe3a6, 0xfd66, 0x8bc5, 0x0, 0x0);
        gbc.writeMem(0x76ee, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1aef, gbc.sp());
        EXPECT(0x76f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 029C
        gbc.setState(0xaa04, 0x6c35, 0xd2b0, 0x39ac, 0xfe07, 0xa59b, 0x0, 0x0);
        gbc.writeMem(0xaa04, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6c35, gbc.sp());
        EXPECT(0xaa06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa04));
        EXPECT(0x4b, gbc.readMem(0xaa05));
        // CB 4B 029D
        gbc.setState(0x6138, 0xfe79, 0x4950, 0xeea0, 0x5f72, 0x1bd, 0x1, 0x1);
        gbc.writeMem(0x6138, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfe79, gbc.sp());
        EXPECT(0x613a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 029E
        gbc.setState(0xaab0, 0xed54, 0xd50, 0xb493, 0xc3a0, 0xd8fd, 0x0, 0x1);
        gbc.writeMem(0xaab0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xed54, gbc.sp());
        EXPECT(0xaab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab0));
        EXPECT(0x4b, gbc.readMem(0xaab1));
        // CB 4B 029F
        gbc.setState(0xd8b, 0xba5c, 0x8070, 0xdb63, 0xd4f5, 0x24d7, 0x1, 0x0);
        gbc.writeMem(0xd8b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xba5c, gbc.sp());
        EXPECT(0xd8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02A0
        gbc.setState(0x6d79, 0xf098, 0xc120, 0xbf9e, 0x7ce5, 0xf911, 0x0, 0x0);
        gbc.writeMem(0x6d79, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf098, gbc.sp());
        EXPECT(0x6d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02A1
        gbc.setState(0xd4ed, 0x6213, 0x2f80, 0x6894, 0x234, 0x3702, 0x1, 0x0);
        gbc.writeMem(0xd4ed, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6213, gbc.sp());
        EXPECT(0xd4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ed));
        EXPECT(0x4b, gbc.readMem(0xd4ee));
        // CB 4B 02A2
        gbc.setState(0xb1, 0xd782, 0x60f0, 0x50d5, 0xa491, 0x6728, 0x0, 0x0);
        gbc.writeMem(0xb1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd782, gbc.sp());
        EXPECT(0xb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02A3
        gbc.setState(0x9a8d, 0x4798, 0xe610, 0x6fd8, 0x7bd7, 0x838, 0x0, 0x0);
        gbc.writeMem(0x9a8d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4798, gbc.sp());
        EXPECT(0x9a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8d));
        EXPECT(0x4b, gbc.readMem(0x9a8e));
        // CB 4B 02A4
        gbc.setState(0x288d, 0xd719, 0x6830, 0xdbd9, 0xb493, 0x226, 0x1, 0x0);
        gbc.writeMem(0x288d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd719, gbc.sp());
        EXPECT(0x288f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02A5
        gbc.setState(0x2324, 0x839e, 0xf1d0, 0x125c, 0xbe29, 0xd915, 0x1, 0x0);
        gbc.writeMem(0x2324, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x839e, gbc.sp());
        EXPECT(0x2326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02A6
        gbc.setState(0x2bd, 0xd152, 0x4510, 0x6178, 0xffcc, 0x81ea, 0x1, 0x1);
        gbc.writeMem(0x2bd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd152, gbc.sp());
        EXPECT(0x2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02A7
        gbc.setState(0x4f2, 0x6bf, 0x1f0, 0x2f3a, 0x50f8, 0xd113, 0x0, 0x1);
        gbc.writeMem(0x4f2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6bf, gbc.sp());
        EXPECT(0x4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02A9
        gbc.setState(0x5eb3, 0x11ff, 0x2900, 0x27, 0x52c4, 0x7bd, 0x1, 0x0);
        gbc.writeMem(0x5eb3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x11ff, gbc.sp());
        EXPECT(0x5eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02AA
        gbc.setState(0xe458, 0x7315, 0x5870, 0xe12a, 0x760e, 0x727b, 0x0, 0x1);
        gbc.writeMem(0xe458, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7315, gbc.sp());
        EXPECT(0xe45a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe458));
        EXPECT(0x4b, gbc.readMem(0xe459));
        // CB 4B 02AB
        gbc.setState(0x278f, 0xa8ee, 0x2cf0, 0x15c, 0xa66f, 0x95d7, 0x0, 0x1);
        gbc.writeMem(0x278f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa8ee, gbc.sp());
        EXPECT(0x2791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02AC
        gbc.setState(0xbcd6, 0x9cac, 0xb480, 0x52db, 0xda7e, 0xe278, 0x0, 0x0);
        gbc.writeMem(0xbcd6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9cac, gbc.sp());
        EXPECT(0xbcd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd6));
        EXPECT(0x4b, gbc.readMem(0xbcd7));
        // CB 4B 02AD
        gbc.setState(0x6679, 0x6448, 0x6da0, 0xefb, 0xe2e0, 0x15b5, 0x0, 0x1);
        gbc.writeMem(0x6679, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6448, gbc.sp());
        EXPECT(0x667b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02AE
        gbc.setState(0xaeef, 0x4be7, 0x870, 0x4747, 0x1196, 0xe3f9, 0x1, 0x1);
        gbc.writeMem(0xaeef, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4be7, gbc.sp());
        EXPECT(0xaef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeef));
        EXPECT(0x4b, gbc.readMem(0xaef0));
        // CB 4B 02AF
        gbc.setState(0x755a, 0x9d45, 0xfd70, 0x9ac9, 0xadf7, 0xc4a9, 0x1, 0x0);
        gbc.writeMem(0x755a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9d45, gbc.sp());
        EXPECT(0x755c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02B0
        gbc.setState(0x9118, 0x25a0, 0xf370, 0xc89f, 0x1910, 0xbff8, 0x0, 0x0);
        gbc.writeMem(0x9118, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x25a0, gbc.sp());
        EXPECT(0x911a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9118));
        EXPECT(0x4b, gbc.readMem(0x9119));
        // CB 4B 02B1
        gbc.setState(0xe19b, 0x7cbf, 0x4800, 0x4e, 0xa401, 0x5a53, 0x1, 0x1);
        gbc.writeMem(0xe19b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7cbf, gbc.sp());
        EXPECT(0xe19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19b));
        EXPECT(0x4b, gbc.readMem(0xe19c));
        // CB 4B 02B2
        gbc.setState(0xe899, 0x951f, 0x4730, 0x418b, 0xcf33, 0xfaca, 0x0, 0x0);
        gbc.writeMem(0xe899, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x951f, gbc.sp());
        EXPECT(0xe89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe899));
        EXPECT(0x4b, gbc.readMem(0xe89a));
        // CB 4B 02B3
        gbc.setState(0x56aa, 0x57c4, 0x2f50, 0xdd07, 0xf9e0, 0x6875, 0x1, 0x0);
        gbc.writeMem(0x56aa, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x57c4, gbc.sp());
        EXPECT(0x56ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02B4
        gbc.setState(0x56d0, 0xfc00, 0xcaf0, 0xceed, 0x3a3c, 0xb88c, 0x0, 0x0);
        gbc.writeMem(0x56d0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfc00, gbc.sp());
        EXPECT(0x56d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02B5
        gbc.setState(0x9431, 0xe3bc, 0x89b0, 0xa644, 0x6bdf, 0xda10, 0x1, 0x0);
        gbc.writeMem(0x9431, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe3bc, gbc.sp());
        EXPECT(0x9433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9431));
        EXPECT(0x4b, gbc.readMem(0x9432));
        // CB 4B 02B6
        gbc.setState(0x592b, 0xd73c, 0xfc90, 0x31bc, 0x4f71, 0xa02a, 0x0, 0x0);
        gbc.writeMem(0x592b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd73c, gbc.sp());
        EXPECT(0x592d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02B7
        gbc.setState(0xd869, 0x795d, 0xbba0, 0xa295, 0x43ad, 0x5960, 0x0, 0x0);
        gbc.writeMem(0xd869, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x795d, gbc.sp());
        EXPECT(0xd86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd869));
        EXPECT(0x4b, gbc.readMem(0xd86a));
        // CB 4B 02B8
        gbc.setState(0xbf5a, 0xb5d3, 0x8980, 0x4a36, 0xe63f, 0x787d, 0x1, 0x0);
        gbc.writeMem(0xbf5a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb5d3, gbc.sp());
        EXPECT(0xbf5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5a));
        EXPECT(0x4b, gbc.readMem(0xbf5b));
        // CB 4B 02B9
        gbc.setState(0x9574, 0xc56, 0xe4b0, 0x3bc2, 0x6b56, 0xba92, 0x0, 0x1);
        gbc.writeMem(0x9574, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc56, gbc.sp());
        EXPECT(0x9576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9574));
        EXPECT(0x4b, gbc.readMem(0x9575));
        // CB 4B 02BA
        gbc.setState(0x5df9, 0x85ea, 0xd610, 0xac57, 0x9c11, 0x86c1, 0x1, 0x0);
        gbc.writeMem(0x5df9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x85ea, gbc.sp());
        EXPECT(0x5dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02BB
        gbc.setState(0x79ba, 0x7b46, 0x5ed0, 0x22b6, 0xa80a, 0x34d5, 0x1, 0x0);
        gbc.writeMem(0x79ba, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7b46, gbc.sp());
        EXPECT(0x79bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02BC
        gbc.setState(0x3a3c, 0x3a60, 0x6d80, 0x997, 0xb728, 0x153c, 0x0, 0x0);
        gbc.writeMem(0x3a3c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3a60, gbc.sp());
        EXPECT(0x3a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02BE
        gbc.setState(0x8e91, 0x5f5e, 0x5f60, 0x18bb, 0x598f, 0xb93c, 0x1, 0x1);
        gbc.writeMem(0x8e91, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5f5e, gbc.sp());
        EXPECT(0x8e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e91));
        EXPECT(0x4b, gbc.readMem(0x8e92));
        // CB 4B 02BF
        gbc.setState(0x2008, 0xf49c, 0xd9c0, 0xc9a9, 0x96, 0x9fce, 0x0, 0x0);
        gbc.writeMem(0x2008, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf49c, gbc.sp());
        EXPECT(0x200a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02C0
        gbc.setState(0x4b16, 0xc33, 0x8f20, 0x85f4, 0xcdf7, 0xe351, 0x0, 0x0);
        gbc.writeMem(0x4b16, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc33, gbc.sp());
        EXPECT(0x4b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02C1
        gbc.setState(0xf3b, 0x36cb, 0x7550, 0xd73, 0x65c8, 0x53d8, 0x0, 0x0);
        gbc.writeMem(0xf3b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x36cb, gbc.sp());
        EXPECT(0xf3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02C2
        gbc.setState(0x648e, 0xfe19, 0xe930, 0xd105, 0xa8, 0xa56d, 0x0, 0x1);
        gbc.writeMem(0x648e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfe19, gbc.sp());
        EXPECT(0x6490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02C3
        gbc.setState(0x4303, 0xac9c, 0xdee0, 0xf56a, 0x3a3a, 0xeff2, 0x1, 0x0);
        gbc.writeMem(0x4303, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xac9c, gbc.sp());
        EXPECT(0x4305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02C5
        gbc.setState(0x3f7d, 0x7431, 0x9a30, 0x1088, 0x6da, 0x3c16, 0x1, 0x0);
        gbc.writeMem(0x3f7d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7431, gbc.sp());
        EXPECT(0x3f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02C6
        gbc.setState(0x1e80, 0xb788, 0x5e20, 0x8eaf, 0x7d94, 0xeedc, 0x1, 0x1);
        gbc.writeMem(0x1e80, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb788, gbc.sp());
        EXPECT(0x1e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02C7
        gbc.setState(0x45b5, 0xd35e, 0x3fd0, 0xcd70, 0xbade, 0x32f9, 0x1, 0x0);
        gbc.writeMem(0x45b5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd35e, gbc.sp());
        EXPECT(0x45b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02C8
        gbc.setState(0xea0e, 0x9e0f, 0x5ae0, 0x735a, 0xf897, 0xb620, 0x0, 0x1);
        gbc.writeMem(0xea0e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9e0f, gbc.sp());
        EXPECT(0xea10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea0e));
        EXPECT(0x4b, gbc.readMem(0xea0f));
        // CB 4B 02C9
        gbc.setState(0x7039, 0x610c, 0x2ca0, 0x6fcf, 0xfa3e, 0x855a, 0x1, 0x0);
        gbc.writeMem(0x7039, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x610c, gbc.sp());
        EXPECT(0x703b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02CA
        gbc.setState(0x689b, 0x3f55, 0xdf50, 0xe5c5, 0xbcf8, 0x76b, 0x0, 0x0);
        gbc.writeMem(0x689b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3f55, gbc.sp());
        EXPECT(0x689d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02CB
        gbc.setState(0xb25a, 0xc271, 0xe110, 0xf606, 0xaff1, 0x3d59, 0x1, 0x0);
        gbc.writeMem(0xb25a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc271, gbc.sp());
        EXPECT(0xb25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25a));
        EXPECT(0x4b, gbc.readMem(0xb25b));
        // CB 4B 02CD
        gbc.setState(0x69bd, 0x2df0, 0x8dd0, 0x9ae8, 0xb6a6, 0x1f0e, 0x0, 0x1);
        gbc.writeMem(0x69bd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2df0, gbc.sp());
        EXPECT(0x69bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02CE
        gbc.setState(0xbc0a, 0xed6b, 0xf2b0, 0x36f3, 0xdd65, 0x1444, 0x0, 0x1);
        gbc.writeMem(0xbc0a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xed6b, gbc.sp());
        EXPECT(0xbc0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0a));
        EXPECT(0x4b, gbc.readMem(0xbc0b));
        // CB 4B 02CF
        gbc.setState(0x59de, 0x74ce, 0xb0a0, 0x138d, 0x545c, 0xd1ba, 0x0, 0x0);
        gbc.writeMem(0x59de, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x74ce, gbc.sp());
        EXPECT(0x59e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02D0
        gbc.setState(0xb332, 0xbb2d, 0x6180, 0xcb49, 0x1ce6, 0x4c78, 0x0, 0x1);
        gbc.writeMem(0xb332, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbb2d, gbc.sp());
        EXPECT(0xb334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb332));
        EXPECT(0x4b, gbc.readMem(0xb333));
        // CB 4B 02D1
        gbc.setState(0x981f, 0x5994, 0x2ea0, 0x5859, 0x7f01, 0x2828, 0x1, 0x1);
        gbc.writeMem(0x981f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5994, gbc.sp());
        EXPECT(0x9821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x981f));
        EXPECT(0x4b, gbc.readMem(0x9820));
        // CB 4B 02D2
        gbc.setState(0xe5ea, 0xefbe, 0xd7d0, 0x14b1, 0x609b, 0x42d6, 0x1, 0x0);
        gbc.writeMem(0xe5ea, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xefbe, gbc.sp());
        EXPECT(0xe5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ea));
        EXPECT(0x4b, gbc.readMem(0xe5eb));
        // CB 4B 02D3
        gbc.setState(0xadb7, 0x45d3, 0x9650, 0x58ef, 0x120f, 0x2923, 0x1, 0x1);
        gbc.writeMem(0xadb7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x45d3, gbc.sp());
        EXPECT(0xadb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb7));
        EXPECT(0x4b, gbc.readMem(0xadb8));
        // CB 4B 02D4
        gbc.setState(0x9692, 0x57dc, 0x88a0, 0x2b09, 0x82c1, 0x4dc5, 0x0, 0x0);
        gbc.writeMem(0x9692, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x57dc, gbc.sp());
        EXPECT(0x9694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9692));
        EXPECT(0x4b, gbc.readMem(0x9693));
        // CB 4B 02D5
        gbc.setState(0xd4c3, 0x1dcf, 0xe670, 0x87c5, 0x8459, 0x614b, 0x1, 0x1);
        gbc.writeMem(0xd4c3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1dcf, gbc.sp());
        EXPECT(0xd4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c3));
        EXPECT(0x4b, gbc.readMem(0xd4c4));
        // CB 4B 02D6
        gbc.setState(0x47ce, 0xb570, 0xd450, 0x3300, 0x11d6, 0xc020, 0x0, 0x1);
        gbc.writeMem(0x47ce, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb570, gbc.sp());
        EXPECT(0x47d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02D8
        gbc.setState(0xb8e0, 0x69ac, 0x4980, 0xe327, 0x216d, 0x5c04, 0x0, 0x0);
        gbc.writeMem(0xb8e0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x69ac, gbc.sp());
        EXPECT(0xb8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e0));
        EXPECT(0x4b, gbc.readMem(0xb8e1));
        // CB 4B 02D9
        gbc.setState(0x24a9, 0x4fb7, 0x9990, 0x6c41, 0xa014, 0x92, 0x0, 0x1);
        gbc.writeMem(0x24a9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4fb7, gbc.sp());
        EXPECT(0x24ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02DA
        gbc.setState(0x9922, 0x6400, 0x9e10, 0xab12, 0x1b39, 0x9b1, 0x0, 0x0);
        gbc.writeMem(0x9922, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6400, gbc.sp());
        EXPECT(0x9924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9922));
        EXPECT(0x4b, gbc.readMem(0x9923));
        // CB 4B 02DB
        gbc.setState(0xb26e, 0xeacd, 0xc30, 0x6ff8, 0x8f8d, 0xcf39, 0x1, 0x1);
        gbc.writeMem(0xb26e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xeacd, gbc.sp());
        EXPECT(0xb270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26e));
        EXPECT(0x4b, gbc.readMem(0xb26f));
        // CB 4B 02DC
        gbc.setState(0x5b, 0xfe15, 0xc7c0, 0x1214, 0x2811, 0x72e9, 0x0, 0x0);
        gbc.writeMem(0x5b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfe15, gbc.sp());
        EXPECT(0x5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02DD
        gbc.setState(0xa6e9, 0x6c86, 0xf680, 0x624d, 0xcf6f, 0x8de2, 0x1, 0x1);
        gbc.writeMem(0xa6e9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6c86, gbc.sp());
        EXPECT(0xa6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e9));
        EXPECT(0x4b, gbc.readMem(0xa6ea));
        // CB 4B 02DE
        gbc.setState(0x2a6c, 0xa1a, 0x8500, 0x6f06, 0xbd5e, 0x52f0, 0x1, 0x0);
        gbc.writeMem(0x2a6c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa1a, gbc.sp());
        EXPECT(0x2a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02DF
        gbc.setState(0xc64b, 0xf818, 0x2d0, 0xd1f7, 0xd316, 0x6871, 0x0, 0x1);
        gbc.writeMem(0xc64b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf818, gbc.sp());
        EXPECT(0xc64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64b));
        EXPECT(0x4b, gbc.readMem(0xc64c));
        // CB 4B 02E0
        gbc.setState(0x6853, 0x2f48, 0x9db0, 0xdae9, 0x833f, 0x49, 0x1, 0x0);
        gbc.writeMem(0x6853, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2f48, gbc.sp());
        EXPECT(0x6855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02E1
        gbc.setState(0xd16a, 0xf05a, 0x3bf0, 0x8ee3, 0x8226, 0x695d, 0x1, 0x1);
        gbc.writeMem(0xd16a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf05a, gbc.sp());
        EXPECT(0xd16c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16a));
        EXPECT(0x4b, gbc.readMem(0xd16b));
        // CB 4B 02E2
        gbc.setState(0x2558, 0x768, 0xd980, 0x44cb, 0x9d3, 0xc63a, 0x1, 0x1);
        gbc.writeMem(0x2558, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x768, gbc.sp());
        EXPECT(0x255a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02E4
        gbc.setState(0xdd87, 0xa877, 0x9040, 0x934, 0xb6b9, 0xd04b, 0x1, 0x1);
        gbc.writeMem(0xdd87, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa877, gbc.sp());
        EXPECT(0xdd89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd87));
        EXPECT(0x4b, gbc.readMem(0xdd88));
        // CB 4B 02E5
        gbc.setState(0xae94, 0x137f, 0x2730, 0xa5f9, 0x1345, 0xb74f, 0x1, 0x1);
        gbc.writeMem(0xae94, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x137f, gbc.sp());
        EXPECT(0xae96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae94));
        EXPECT(0x4b, gbc.readMem(0xae95));
        // CB 4B 02E6
        gbc.setState(0x80a2, 0x4f9f, 0x580, 0xafb5, 0xdca1, 0x4288, 0x0, 0x1);
        gbc.writeMem(0x80a2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4f9f, gbc.sp());
        EXPECT(0x80a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a2));
        EXPECT(0x4b, gbc.readMem(0x80a3));
        // CB 4B 02E7
        gbc.setState(0x5843, 0x51c3, 0x6400, 0xa7a5, 0xd293, 0xe51b, 0x0, 0x0);
        gbc.writeMem(0x5843, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x51c3, gbc.sp());
        EXPECT(0x5845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02E8
        gbc.setState(0x50ca, 0x3a4, 0xf110, 0x7640, 0xa00c, 0xaa9e, 0x0, 0x1);
        gbc.writeMem(0x50ca, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3a4, gbc.sp());
        EXPECT(0x50cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02E9
        gbc.setState(0x566c, 0x4140, 0xee00, 0x2559, 0xa60c, 0x5d35, 0x0, 0x1);
        gbc.writeMem(0x566c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4140, gbc.sp());
        EXPECT(0x566e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02EA
        gbc.setState(0x8576, 0xc054, 0x4e00, 0x9393, 0x4a89, 0x21bd, 0x1, 0x1);
        gbc.writeMem(0x8576, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc054, gbc.sp());
        EXPECT(0x8578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8576));
        EXPECT(0x4b, gbc.readMem(0x8577));
        // CB 4B 02EB
        gbc.setState(0x8864, 0xa7c7, 0x2d50, 0x211f, 0x54df, 0xf1, 0x0, 0x0);
        gbc.writeMem(0x8864, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa7c7, gbc.sp());
        EXPECT(0x8866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8864));
        EXPECT(0x4b, gbc.readMem(0x8865));
        // CB 4B 02EC
        gbc.setState(0xb172, 0xfde5, 0x6030, 0x7e66, 0x7ec9, 0xaf40, 0x1, 0x1);
        gbc.writeMem(0xb172, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfde5, gbc.sp());
        EXPECT(0xb174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb172));
        EXPECT(0x4b, gbc.readMem(0xb173));
        // CB 4B 02ED
        gbc.setState(0x7379, 0xd1b2, 0xb40, 0x10f7, 0xf382, 0xdee5, 0x1, 0x0);
        gbc.writeMem(0x7379, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd1b2, gbc.sp());
        EXPECT(0x737b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02EE
        gbc.setState(0x5005, 0xb11e, 0xf4c0, 0xea29, 0x5b3e, 0x7bf8, 0x1, 0x1);
        gbc.writeMem(0x5005, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb11e, gbc.sp());
        EXPECT(0x5007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02EF
        gbc.setState(0x4656, 0x541b, 0x92c0, 0x8afe, 0x3aec, 0x6c34, 0x1, 0x1);
        gbc.writeMem(0x4656, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x541b, gbc.sp());
        EXPECT(0x4658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02F1
        gbc.setState(0xbcb9, 0x11dc, 0xee90, 0x18b0, 0xa2bb, 0x1cd3, 0x0, 0x1);
        gbc.writeMem(0xbcb9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x11dc, gbc.sp());
        EXPECT(0xbcbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb9));
        EXPECT(0x4b, gbc.readMem(0xbcba));
        // CB 4B 02F2
        gbc.setState(0x953a, 0x952a, 0x8e0, 0x5799, 0x38f0, 0xb604, 0x0, 0x1);
        gbc.writeMem(0x953a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x952a, gbc.sp());
        EXPECT(0x953c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953a));
        EXPECT(0x4b, gbc.readMem(0x953b));
        // CB 4B 02F3
        gbc.setState(0x81df, 0xd666, 0xeed0, 0x86c9, 0x7007, 0xc341, 0x0, 0x0);
        gbc.writeMem(0x81df, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd666, gbc.sp());
        EXPECT(0x81e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81df));
        EXPECT(0x4b, gbc.readMem(0x81e0));
        // CB 4B 02F4
        gbc.setState(0x12a1, 0x3e5d, 0xb230, 0x3a0a, 0xcbe3, 0x20c9, 0x1, 0x0);
        gbc.writeMem(0x12a1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3e5d, gbc.sp());
        EXPECT(0x12a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02F5
        gbc.setState(0x431d, 0xb065, 0x6ca0, 0x60e4, 0xed90, 0x3778, 0x0, 0x0);
        gbc.writeMem(0x431d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb065, gbc.sp());
        EXPECT(0x431f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02F7
        gbc.setState(0x5f89, 0xb7c6, 0xac60, 0x9efe, 0xd758, 0x1abc, 0x1, 0x1);
        gbc.writeMem(0x5f89, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb7c6, gbc.sp());
        EXPECT(0x5f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02F8
        gbc.setState(0x13dd, 0x2f28, 0xccc0, 0x93f, 0xb579, 0x117, 0x1, 0x0);
        gbc.writeMem(0x13dd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2f28, gbc.sp());
        EXPECT(0x13df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02F9
        gbc.setState(0x3325, 0x642a, 0xef60, 0x5e70, 0x37ec, 0xb1be, 0x1, 0x1);
        gbc.writeMem(0x3325, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x642a, gbc.sp());
        EXPECT(0x3327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02FA
        gbc.setState(0x7322, 0x7a11, 0x9230, 0x40a7, 0xb06b, 0x31bf, 0x0, 0x1);
        gbc.writeMem(0x7322, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7a11, gbc.sp());
        EXPECT(0x7324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 02FC
        gbc.setState(0xb1fa, 0x2bf, 0xa6d0, 0x9465, 0x39fd, 0xce85, 0x1, 0x1);
        gbc.writeMem(0xb1fa, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2bf, gbc.sp());
        EXPECT(0xb1fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1fa));
        EXPECT(0x4b, gbc.readMem(0xb1fb));
        // CB 4B 02FD
        gbc.setState(0x4bd3, 0xb46b, 0x3a00, 0xa962, 0x36fd, 0x3297, 0x0, 0x1);
        gbc.writeMem(0x4bd3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb46b, gbc.sp());
        EXPECT(0x4bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 02FE
        gbc.setState(0x9b18, 0xfc74, 0x5180, 0x64ef, 0x7546, 0x37cb, 0x0, 0x1);
        gbc.writeMem(0x9b18, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfc74, gbc.sp());
        EXPECT(0x9b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b18));
        EXPECT(0x4b, gbc.readMem(0x9b19));
        // CB 4B 02FF
        gbc.setState(0xcf9f, 0x70a0, 0xf010, 0xcd7c, 0xa516, 0xd069, 0x0, 0x1);
        gbc.writeMem(0xcf9f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x70a0, gbc.sp());
        EXPECT(0xcfa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9f));
        EXPECT(0x4b, gbc.readMem(0xcfa0));
        // CB 4B 0300
        gbc.setState(0x5be6, 0xd333, 0xcee0, 0x281, 0x5f52, 0xeea4, 0x1, 0x1);
        gbc.writeMem(0x5be6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd333, gbc.sp());
        EXPECT(0x5be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0301
        gbc.setState(0x7a4b, 0x267, 0x7970, 0xe968, 0xf1f3, 0xca59, 0x0, 0x0);
        gbc.writeMem(0x7a4b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x267, gbc.sp());
        EXPECT(0x7a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0302
        gbc.setState(0x742f, 0xf21d, 0xd2c0, 0xee79, 0x57cf, 0x78fe, 0x1, 0x0);
        gbc.writeMem(0x742f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf21d, gbc.sp());
        EXPECT(0x7431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0303
        gbc.setState(0xd22b, 0xd6f8, 0x3b40, 0x7fce, 0x3347, 0xb553, 0x0, 0x0);
        gbc.writeMem(0xd22b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd6f8, gbc.sp());
        EXPECT(0xd22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22b));
        EXPECT(0x4b, gbc.readMem(0xd22c));
        // CB 4B 0304
        gbc.setState(0x69cf, 0xc23f, 0xb6b0, 0x4eba, 0xca8f, 0xf349, 0x1, 0x1);
        gbc.writeMem(0x69cf, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc23f, gbc.sp());
        EXPECT(0x69d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0305
        gbc.setState(0xc116, 0x714e, 0x5970, 0x568b, 0xf475, 0xb484, 0x1, 0x1);
        gbc.writeMem(0xc116, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x714e, gbc.sp());
        EXPECT(0xc118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc116));
        EXPECT(0x4b, gbc.readMem(0xc117));
        // CB 4B 0306
        gbc.setState(0x836a, 0xb9db, 0x8500, 0x6872, 0x3961, 0xba2e, 0x1, 0x1);
        gbc.writeMem(0x836a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb9db, gbc.sp());
        EXPECT(0x836c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836a));
        EXPECT(0x4b, gbc.readMem(0x836b));
        // CB 4B 0307
        gbc.setState(0x1ca8, 0x88b1, 0x7c40, 0x2319, 0x49ad, 0x1f96, 0x1, 0x1);
        gbc.writeMem(0x1ca8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x88b1, gbc.sp());
        EXPECT(0x1caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0308
        gbc.setState(0x152f, 0x58d8, 0xc860, 0x9ecc, 0x8f25, 0x6f40, 0x1, 0x0);
        gbc.writeMem(0x152f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x58d8, gbc.sp());
        EXPECT(0x1531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 030A
        gbc.setState(0x2c23, 0x5091, 0xdb10, 0x4331, 0xeba6, 0x1eb0, 0x1, 0x1);
        gbc.writeMem(0x2c23, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5091, gbc.sp());
        EXPECT(0x2c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 030B
        gbc.setState(0xb17b, 0x98dd, 0x890, 0x7940, 0x3187, 0xb4, 0x1, 0x1);
        gbc.writeMem(0xb17b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x98dd, gbc.sp());
        EXPECT(0xb17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17b));
        EXPECT(0x4b, gbc.readMem(0xb17c));
        // CB 4B 030C
        gbc.setState(0x5c73, 0xe925, 0xa610, 0xa0a1, 0xffcf, 0xc945, 0x0, 0x1);
        gbc.writeMem(0x5c73, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe925, gbc.sp());
        EXPECT(0x5c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 030D
        gbc.setState(0xe3e8, 0x8263, 0xdd90, 0x6d8b, 0x1063, 0x533a, 0x0, 0x0);
        gbc.writeMem(0xe3e8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8263, gbc.sp());
        EXPECT(0xe3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e8));
        EXPECT(0x4b, gbc.readMem(0xe3e9));
        // CB 4B 030E
        gbc.setState(0xb824, 0x9849, 0xcd80, 0x3a8d, 0xc27b, 0x71ea, 0x0, 0x1);
        gbc.writeMem(0xb824, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9849, gbc.sp());
        EXPECT(0xb826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb824));
        EXPECT(0x4b, gbc.readMem(0xb825));
        // CB 4B 030F
        gbc.setState(0x87d8, 0x23f0, 0x8e0, 0x2a45, 0x4b45, 0x4dc6, 0x0, 0x1);
        gbc.writeMem(0x87d8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x23f0, gbc.sp());
        EXPECT(0x87da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d8));
        EXPECT(0x4b, gbc.readMem(0x87d9));
        // CB 4B 0310
        gbc.setState(0x7b1e, 0x4f8d, 0x2d70, 0xbb34, 0xfd9c, 0xd59, 0x0, 0x1);
        gbc.writeMem(0x7b1e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4f8d, gbc.sp());
        EXPECT(0x7b20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0311
        gbc.setState(0x9575, 0xf692, 0xbf80, 0x849e, 0xb6a0, 0xe2fc, 0x0, 0x1);
        gbc.writeMem(0x9575, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf692, gbc.sp());
        EXPECT(0x9577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9575));
        EXPECT(0x4b, gbc.readMem(0x9576));
        // CB 4B 0312
        gbc.setState(0xf8b, 0xf799, 0xf820, 0xca3d, 0xcd01, 0x261c, 0x0, 0x0);
        gbc.writeMem(0xf8b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf799, gbc.sp());
        EXPECT(0xf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0313
        gbc.setState(0xa63b, 0xaa0, 0x8c40, 0x3c95, 0x75ab, 0x82cf, 0x1, 0x1);
        gbc.writeMem(0xa63b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xaa0, gbc.sp());
        EXPECT(0xa63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa63b));
        EXPECT(0x4b, gbc.readMem(0xa63c));
        // CB 4B 0315
        gbc.setState(0x98c2, 0xbc1, 0xf9c0, 0x98dd, 0x83a0, 0x504b, 0x0, 0x0);
        gbc.writeMem(0x98c2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbc1, gbc.sp());
        EXPECT(0x98c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c2));
        EXPECT(0x4b, gbc.readMem(0x98c3));
        // CB 4B 0316
        gbc.setState(0xd03e, 0xf9f4, 0x5800, 0x8360, 0x9bff, 0x1f60, 0x0, 0x1);
        gbc.writeMem(0xd03e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf9f4, gbc.sp());
        EXPECT(0xd040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03e));
        EXPECT(0x4b, gbc.readMem(0xd03f));
        // CB 4B 0317
        gbc.setState(0xdfa0, 0xdee1, 0xd730, 0x530d, 0x1022, 0x4f6, 0x1, 0x0);
        gbc.writeMem(0xdfa0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdee1, gbc.sp());
        EXPECT(0xdfa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa0));
        EXPECT(0x4b, gbc.readMem(0xdfa1));
        // CB 4B 0318
        gbc.setState(0xa80e, 0xa70, 0x5870, 0xe93e, 0xf283, 0x1299, 0x0, 0x1);
        gbc.writeMem(0xa80e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa70, gbc.sp());
        EXPECT(0xa810, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80e));
        EXPECT(0x4b, gbc.readMem(0xa80f));
        // CB 4B 0319
        gbc.setState(0xc7e8, 0x9c57, 0x6450, 0x56a5, 0x7777, 0x59e, 0x0, 0x1);
        gbc.writeMem(0xc7e8, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9c57, gbc.sp());
        EXPECT(0xc7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e8));
        EXPECT(0x4b, gbc.readMem(0xc7e9));
        // CB 4B 031A
        gbc.setState(0xb1aa, 0xeee6, 0x2500, 0x5e9b, 0x7508, 0x93ee, 0x1, 0x0);
        gbc.writeMem(0xb1aa, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0xb1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1aa));
        EXPECT(0x4b, gbc.readMem(0xb1ab));
        // CB 4B 031B
        gbc.setState(0x3513, 0x3c54, 0x96e0, 0x68a2, 0xb379, 0x946f, 0x0, 0x0);
        gbc.writeMem(0x3513, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3c54, gbc.sp());
        EXPECT(0x3515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 031C
        gbc.setState(0xa0bd, 0x2dee, 0xa8e0, 0xf772, 0x295b, 0x1e93, 0x0, 0x0);
        gbc.writeMem(0xa0bd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2dee, gbc.sp());
        EXPECT(0xa0bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0bd));
        EXPECT(0x4b, gbc.readMem(0xa0be));
        // CB 4B 031D
        gbc.setState(0x2948, 0x39c8, 0x42d0, 0x4b1a, 0x8a82, 0xcb15, 0x1, 0x1);
        gbc.writeMem(0x2948, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x39c8, gbc.sp());
        EXPECT(0x294a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 031E
        gbc.setState(0x20f5, 0x7c75, 0x90a0, 0xfb2f, 0xe7f9, 0xa89d, 0x0, 0x1);
        gbc.writeMem(0x20f5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7c75, gbc.sp());
        EXPECT(0x20f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 031F
        gbc.setState(0xd829, 0x7c28, 0xc9b0, 0xa66b, 0x5fb4, 0x7d69, 0x1, 0x1);
        gbc.writeMem(0xd829, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7c28, gbc.sp());
        EXPECT(0xd82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd829));
        EXPECT(0x4b, gbc.readMem(0xd82a));
        // CB 4B 0320
        gbc.setState(0xafc4, 0x462a, 0xade0, 0x2fe9, 0x832c, 0xe882, 0x1, 0x0);
        gbc.writeMem(0xafc4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x462a, gbc.sp());
        EXPECT(0xafc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc4));
        EXPECT(0x4b, gbc.readMem(0xafc5));
        // CB 4B 0321
        gbc.setState(0xe6b6, 0x233a, 0xd440, 0x9224, 0x4d27, 0xc6ed, 0x0, 0x0);
        gbc.writeMem(0xe6b6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x233a, gbc.sp());
        EXPECT(0xe6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b6));
        EXPECT(0x4b, gbc.readMem(0xe6b7));
        // CB 4B 0322
        gbc.setState(0x11b7, 0x4a2b, 0xe940, 0x2328, 0x60a0, 0x383, 0x0, 0x1);
        gbc.writeMem(0x11b7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4a2b, gbc.sp());
        EXPECT(0x11b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0323
        gbc.setState(0xa65b, 0x4471, 0x4060, 0x6e1e, 0x1f55, 0xfa11, 0x1, 0x1);
        gbc.writeMem(0xa65b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4471, gbc.sp());
        EXPECT(0xa65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa65b));
        EXPECT(0x4b, gbc.readMem(0xa65c));
        // CB 4B 0324
        gbc.setState(0x595f, 0x7400, 0xfaf0, 0x985d, 0xf869, 0x5ec5, 0x1, 0x1);
        gbc.writeMem(0x595f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7400, gbc.sp());
        EXPECT(0x5961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0325
        gbc.setState(0x4b39, 0x237c, 0xe50, 0x292c, 0x562a, 0x6f92, 0x1, 0x0);
        gbc.writeMem(0x4b39, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x237c, gbc.sp());
        EXPECT(0x4b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0326
        gbc.setState(0x467c, 0x39c3, 0x75c0, 0x7610, 0x5fa7, 0xd707, 0x0, 0x0);
        gbc.writeMem(0x467c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x39c3, gbc.sp());
        EXPECT(0x467e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0327
        gbc.setState(0xd6d1, 0x685f, 0xa240, 0x7622, 0xa482, 0xd69b, 0x1, 0x1);
        gbc.writeMem(0xd6d1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x685f, gbc.sp());
        EXPECT(0xd6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d1));
        EXPECT(0x4b, gbc.readMem(0xd6d2));
        // CB 4B 0328
        gbc.setState(0x7c41, 0x3d69, 0x53b0, 0x2976, 0xcd56, 0x5754, 0x1, 0x0);
        gbc.writeMem(0x7c41, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3d69, gbc.sp());
        EXPECT(0x7c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0329
        gbc.setState(0xb354, 0x13d, 0x9f80, 0xf6a3, 0xc766, 0xeb38, 0x0, 0x1);
        gbc.writeMem(0xb354, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x13d, gbc.sp());
        EXPECT(0xb356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb354));
        EXPECT(0x4b, gbc.readMem(0xb355));
        // CB 4B 032A
        gbc.setState(0x2d49, 0x1a67, 0x2b30, 0xd71d, 0x4222, 0x7a45, 0x0, 0x1);
        gbc.writeMem(0x2d49, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1a67, gbc.sp());
        EXPECT(0x2d4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 032B
        gbc.setState(0xe9a3, 0xc098, 0x5040, 0x3593, 0x102e, 0xcb, 0x0, 0x1);
        gbc.writeMem(0xe9a3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc098, gbc.sp());
        EXPECT(0xe9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a3));
        EXPECT(0x4b, gbc.readMem(0xe9a4));
        // CB 4B 032D
        gbc.setState(0x7f20, 0x2dbe, 0x9c90, 0x4f80, 0x7e7b, 0xe84e, 0x0, 0x1);
        gbc.writeMem(0x7f20, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2dbe, gbc.sp());
        EXPECT(0x7f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 032E
        gbc.setState(0x8baa, 0xa5a4, 0x1ae0, 0xcec2, 0xb952, 0x8d2f, 0x0, 0x0);
        gbc.writeMem(0x8baa, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xa5a4, gbc.sp());
        EXPECT(0x8bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8baa));
        EXPECT(0x4b, gbc.readMem(0x8bab));
        // CB 4B 032F
        gbc.setState(0x4533, 0x279b, 0xd0, 0xced7, 0xca3f, 0xd217, 0x0, 0x0);
        gbc.writeMem(0x4533, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x279b, gbc.sp());
        EXPECT(0x4535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0330
        gbc.setState(0x3702, 0x9455, 0x5260, 0xa395, 0x8fc5, 0x2e8e, 0x0, 0x0);
        gbc.writeMem(0x3702, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9455, gbc.sp());
        EXPECT(0x3704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0331
        gbc.setState(0xdf0, 0xb303, 0x4c10, 0x606b, 0x1d95, 0x7385, 0x1, 0x1);
        gbc.writeMem(0xdf0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb303, gbc.sp());
        EXPECT(0xdf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0332
        gbc.setState(0x1ee0, 0x7182, 0x3440, 0x4d12, 0xe55a, 0xdc08, 0x1, 0x1);
        gbc.writeMem(0x1ee0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7182, gbc.sp());
        EXPECT(0x1ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0333
        gbc.setState(0xe1ea, 0xfd1e, 0xe130, 0x7b0, 0x868a, 0x6935, 0x0, 0x1);
        gbc.writeMem(0xe1ea, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfd1e, gbc.sp());
        EXPECT(0xe1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ea));
        EXPECT(0x4b, gbc.readMem(0xe1eb));
        // CB 4B 0335
        gbc.setState(0xe542, 0x4e83, 0xc9a0, 0xf1bc, 0xf1ea, 0x7452, 0x0, 0x1);
        gbc.writeMem(0xe542, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4e83, gbc.sp());
        EXPECT(0xe544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe542));
        EXPECT(0x4b, gbc.readMem(0xe543));
        // CB 4B 0336
        gbc.setState(0x990, 0x8673, 0x8bb0, 0xcef1, 0x8bdd, 0xedb0, 0x1, 0x1);
        gbc.writeMem(0x990, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8673, gbc.sp());
        EXPECT(0x992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0337
        gbc.setState(0x4a48, 0xeba8, 0x9bb0, 0x926a, 0x2d6e, 0xbee4, 0x1, 0x1);
        gbc.writeMem(0x4a48, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xeba8, gbc.sp());
        EXPECT(0x4a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0339
        gbc.setState(0x6642, 0xfdd3, 0x73c0, 0x7e11, 0xd8f7, 0xbe6f, 0x0, 0x1);
        gbc.writeMem(0x6642, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfdd3, gbc.sp());
        EXPECT(0x6644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 033A
        gbc.setState(0xb3b1, 0x1ef6, 0xcbb0, 0x46ad, 0x3e1a, 0xdb16, 0x0, 0x0);
        gbc.writeMem(0xb3b1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1ef6, gbc.sp());
        EXPECT(0xb3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b1));
        EXPECT(0x4b, gbc.readMem(0xb3b2));
        // CB 4B 033B
        gbc.setState(0x1b5c, 0x4879, 0x7a40, 0x53e0, 0x9091, 0xb0a1, 0x0, 0x0);
        gbc.writeMem(0x1b5c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4879, gbc.sp());
        EXPECT(0x1b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 033C
        gbc.setState(0x3c75, 0x3c9f, 0xd2f0, 0xf302, 0xe8ee, 0xba24, 0x0, 0x1);
        gbc.writeMem(0x3c75, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3c9f, gbc.sp());
        EXPECT(0x3c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 033D
        gbc.setState(0x90d9, 0x3df3, 0xddb0, 0x6e0, 0x2c0a, 0x60f5, 0x1, 0x1);
        gbc.writeMem(0x90d9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3df3, gbc.sp());
        EXPECT(0x90db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d9));
        EXPECT(0x4b, gbc.readMem(0x90da));
        // CB 4B 033E
        gbc.setState(0x57a0, 0x67ec, 0x18e0, 0x70c9, 0x4805, 0x496c, 0x0, 0x1);
        gbc.writeMem(0x57a0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x67ec, gbc.sp());
        EXPECT(0x57a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 033F
        gbc.setState(0x5e03, 0xa904, 0xf150, 0xa719, 0x2085, 0xd2da, 0x1, 0x1);
        gbc.writeMem(0x5e03, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa904, gbc.sp());
        EXPECT(0x5e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0340
        gbc.setState(0xa04f, 0xe70b, 0x7ad0, 0x695b, 0x5dd, 0x4553, 0x0, 0x1);
        gbc.writeMem(0xa04f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe70b, gbc.sp());
        EXPECT(0xa051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa04f));
        EXPECT(0x4b, gbc.readMem(0xa050));
        // CB 4B 0341
        gbc.setState(0xea2, 0xb105, 0x6000, 0x4b21, 0xb8d3, 0xc18a, 0x0, 0x1);
        gbc.writeMem(0xea2, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb105, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0342
        gbc.setState(0xee68, 0xc154, 0x1420, 0x31c, 0xe834, 0x7474, 0x0, 0x0);
        gbc.writeMem(0xee68, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc154, gbc.sp());
        EXPECT(0xee6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee68));
        EXPECT(0x4b, gbc.readMem(0xee69));
        // CB 4B 0343
        gbc.setState(0xc541, 0x658b, 0x8f30, 0xc026, 0x89b5, 0x88b0, 0x1, 0x1);
        gbc.writeMem(0xc541, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x658b, gbc.sp());
        EXPECT(0xc543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc541));
        EXPECT(0x4b, gbc.readMem(0xc542));
        // CB 4B 0344
        gbc.setState(0x9861, 0xb414, 0xf570, 0xa5f7, 0x8a35, 0x343c, 0x1, 0x1);
        gbc.writeMem(0x9861, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb414, gbc.sp());
        EXPECT(0x9863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9861));
        EXPECT(0x4b, gbc.readMem(0x9862));
        // CB 4B 0345
        gbc.setState(0x9ee4, 0x63f9, 0xc2d0, 0xb986, 0x607a, 0x2f67, 0x1, 0x1);
        gbc.writeMem(0x9ee4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x63f9, gbc.sp());
        EXPECT(0x9ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee4));
        EXPECT(0x4b, gbc.readMem(0x9ee5));
        // CB 4B 0346
        gbc.setState(0xadbf, 0xd30d, 0x5f0, 0x6eca, 0x52b4, 0x8194, 0x0, 0x0);
        gbc.writeMem(0xadbf, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd30d, gbc.sp());
        EXPECT(0xadc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbf));
        EXPECT(0x4b, gbc.readMem(0xadc0));
        // CB 4B 0348
        gbc.setState(0x3da6, 0x9bc9, 0x3590, 0x97c8, 0x86be, 0x113e, 0x0, 0x1);
        gbc.writeMem(0x3da6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9bc9, gbc.sp());
        EXPECT(0x3da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0349
        gbc.setState(0xd3a5, 0xc901, 0xa070, 0x5971, 0xa905, 0x20dd, 0x1, 0x1);
        gbc.writeMem(0xd3a5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc901, gbc.sp());
        EXPECT(0xd3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a5));
        EXPECT(0x4b, gbc.readMem(0xd3a6));
        // CB 4B 034A
        gbc.setState(0xa5a0, 0x2ca2, 0x82b0, 0xc937, 0x9ca0, 0x4b9f, 0x0, 0x0);
        gbc.writeMem(0xa5a0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2ca2, gbc.sp());
        EXPECT(0xa5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a0));
        EXPECT(0x4b, gbc.readMem(0xa5a1));
        // CB 4B 034B
        gbc.setState(0xe676, 0xe26c, 0xa4c0, 0xf0da, 0x26e0, 0x1636, 0x0, 0x0);
        gbc.writeMem(0xe676, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe26c, gbc.sp());
        EXPECT(0xe678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe676));
        EXPECT(0x4b, gbc.readMem(0xe677));
        // CB 4B 034C
        gbc.setState(0x6f35, 0x5e3c, 0x9930, 0x203b, 0x5710, 0x1b37, 0x0, 0x0);
        gbc.writeMem(0x6f35, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5e3c, gbc.sp());
        EXPECT(0x6f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 034D
        gbc.setState(0xc018, 0x9954, 0x6830, 0x5778, 0x1b77, 0xf7b, 0x1, 0x0);
        gbc.writeMem(0xc018, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9954, gbc.sp());
        EXPECT(0xc01a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc018));
        EXPECT(0x4b, gbc.readMem(0xc019));
        // CB 4B 034E
        gbc.setState(0xa3a9, 0xcbf2, 0xbd70, 0xd6f, 0x3376, 0x5d5c, 0x0, 0x1);
        gbc.writeMem(0xa3a9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcbf2, gbc.sp());
        EXPECT(0xa3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a9));
        EXPECT(0x4b, gbc.readMem(0xa3aa));
        // CB 4B 034F
        gbc.setState(0xe60c, 0x7f54, 0xcca0, 0x53a8, 0xbe63, 0xaef2, 0x1, 0x1);
        gbc.writeMem(0xe60c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0xe60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe60c));
        EXPECT(0x4b, gbc.readMem(0xe60d));
        // CB 4B 0350
        gbc.setState(0x3cb6, 0x3e37, 0xc070, 0x6fa2, 0xcce1, 0x2770, 0x1, 0x1);
        gbc.writeMem(0x3cb6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3e37, gbc.sp());
        EXPECT(0x3cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0351
        gbc.setState(0x19da, 0x1536, 0x2780, 0xa6d5, 0x7903, 0xa82b, 0x1, 0x0);
        gbc.writeMem(0x19da, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1536, gbc.sp());
        EXPECT(0x19dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0352
        gbc.setState(0xdeec, 0x42c4, 0x92a0, 0x1001, 0xbab5, 0x1324, 0x0, 0x0);
        gbc.writeMem(0xdeec, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x42c4, gbc.sp());
        EXPECT(0xdeee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeec));
        EXPECT(0x4b, gbc.readMem(0xdeed));
        // CB 4B 0353
        gbc.setState(0x42ca, 0xf8d1, 0x4900, 0xbc6d, 0xbb6a, 0xa3d6, 0x1, 0x0);
        gbc.writeMem(0x42ca, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf8d1, gbc.sp());
        EXPECT(0x42cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0354
        gbc.setState(0xd63a, 0x9ea5, 0x7a90, 0xc39f, 0x5745, 0x6c59, 0x0, 0x0);
        gbc.writeMem(0xd63a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9ea5, gbc.sp());
        EXPECT(0xd63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd63a));
        EXPECT(0x4b, gbc.readMem(0xd63b));
        // CB 4B 0355
        gbc.setState(0x22c3, 0x75e1, 0xd390, 0x9077, 0xbe06, 0x917e, 0x0, 0x1);
        gbc.writeMem(0x22c3, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x75e1, gbc.sp());
        EXPECT(0x22c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0356
        gbc.setState(0xcfe0, 0x5aa0, 0x1f10, 0xb584, 0x5c70, 0xafb4, 0x0, 0x1);
        gbc.writeMem(0xcfe0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5aa0, gbc.sp());
        EXPECT(0xcfe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe0));
        EXPECT(0x4b, gbc.readMem(0xcfe1));
        // CB 4B 0357
        gbc.setState(0x7f1c, 0x39e9, 0x8620, 0xcb2c, 0x87d5, 0x3580, 0x1, 0x1);
        gbc.writeMem(0x7f1c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x39e9, gbc.sp());
        EXPECT(0x7f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0358
        gbc.setState(0xac08, 0x2fb4, 0x1260, 0x9b25, 0x462c, 0x47f, 0x1, 0x1);
        gbc.writeMem(0xac08, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2fb4, gbc.sp());
        EXPECT(0xac0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac08));
        EXPECT(0x4b, gbc.readMem(0xac09));
        // CB 4B 0359
        gbc.setState(0x39b1, 0x5825, 0x1670, 0x2dac, 0xb49, 0xb4be, 0x1, 0x1);
        gbc.writeMem(0x39b1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5825, gbc.sp());
        EXPECT(0x39b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 035B
        gbc.setState(0xecfa, 0x8340, 0xf4a0, 0x3245, 0x728f, 0x90ea, 0x1, 0x0);
        gbc.writeMem(0xecfa, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8340, gbc.sp());
        EXPECT(0xecfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecfa));
        EXPECT(0x4b, gbc.readMem(0xecfb));
        // CB 4B 035C
        gbc.setState(0x44e5, 0x9a90, 0x6730, 0x29d1, 0x8c4c, 0x2a71, 0x1, 0x0);
        gbc.writeMem(0x44e5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9a90, gbc.sp());
        EXPECT(0x44e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 035D
        gbc.setState(0x8f85, 0x9c88, 0xcbb0, 0x685e, 0x4861, 0x358c, 0x1, 0x0);
        gbc.writeMem(0x8f85, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9c88, gbc.sp());
        EXPECT(0x8f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f85));
        EXPECT(0x4b, gbc.readMem(0x8f86));
        // CB 4B 035E
        gbc.setState(0x451c, 0xb2fb, 0x9e50, 0x24db, 0x936c, 0x881c, 0x0, 0x1);
        gbc.writeMem(0x451c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb2fb, gbc.sp());
        EXPECT(0x451e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 035F
        gbc.setState(0x54ef, 0x71ef, 0x2180, 0x14a0, 0xb931, 0x716c, 0x1, 0x1);
        gbc.writeMem(0x54ef, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x71ef, gbc.sp());
        EXPECT(0x54f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0361
        gbc.setState(0xf79, 0x2cb9, 0x8950, 0x696a, 0xaa85, 0x6352, 0x0, 0x0);
        gbc.writeMem(0xf79, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2cb9, gbc.sp());
        EXPECT(0xf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0362
        gbc.setState(0x86cd, 0xbcc9, 0x1830, 0x813b, 0x177e, 0x6448, 0x1, 0x0);
        gbc.writeMem(0x86cd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbcc9, gbc.sp());
        EXPECT(0x86cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86cd));
        EXPECT(0x4b, gbc.readMem(0x86ce));
        // CB 4B 0363
        gbc.setState(0x6b0b, 0xa614, 0x18b0, 0x1122, 0xb530, 0xb5e4, 0x1, 0x0);
        gbc.writeMem(0x6b0b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa614, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0365
        gbc.setState(0xd6f0, 0xcbda, 0x6820, 0x24cb, 0x1fe1, 0xa1f3, 0x0, 0x1);
        gbc.writeMem(0xd6f0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcbda, gbc.sp());
        EXPECT(0xd6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f0));
        EXPECT(0x4b, gbc.readMem(0xd6f1));
        // CB 4B 0366
        gbc.setState(0x4aef, 0x7ee6, 0xe060, 0x6964, 0xd8d2, 0x727e, 0x0, 0x1);
        gbc.writeMem(0x4aef, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7ee6, gbc.sp());
        EXPECT(0x4af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0368
        gbc.setState(0xb4eb, 0xe7c9, 0x80a0, 0x5bb4, 0xb925, 0x8024, 0x1, 0x0);
        gbc.writeMem(0xb4eb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe7c9, gbc.sp());
        EXPECT(0xb4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4eb));
        EXPECT(0x4b, gbc.readMem(0xb4ec));
        // CB 4B 0369
        gbc.setState(0x472f, 0xd355, 0x29a0, 0x9fe8, 0x4dcd, 0xa0e5, 0x1, 0x1);
        gbc.writeMem(0x472f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd355, gbc.sp());
        EXPECT(0x4731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 036A
        gbc.setState(0xe25e, 0xbe4b, 0x54a0, 0xf390, 0xacb9, 0xe060, 0x0, 0x1);
        gbc.writeMem(0xe25e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbe4b, gbc.sp());
        EXPECT(0xe260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25e));
        EXPECT(0x4b, gbc.readMem(0xe25f));
        // CB 4B 036B
        gbc.setState(0x555f, 0x32a2, 0x7640, 0x7180, 0x9418, 0xf0a0, 0x1, 0x0);
        gbc.writeMem(0x555f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x32a2, gbc.sp());
        EXPECT(0x5561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 036C
        gbc.setState(0xdfc7, 0x3b84, 0x9380, 0xf20a, 0xdb73, 0x2b9a, 0x0, 0x1);
        gbc.writeMem(0xdfc7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3b84, gbc.sp());
        EXPECT(0xdfc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc7));
        EXPECT(0x4b, gbc.readMem(0xdfc8));
        // CB 4B 036D
        gbc.setState(0x5128, 0xf134, 0xa8e0, 0x9c0f, 0xefba, 0x39f2, 0x1, 0x1);
        gbc.writeMem(0x5128, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf134, gbc.sp());
        EXPECT(0x512a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 036F
        gbc.setState(0xcebd, 0x325e, 0x8560, 0x17e6, 0xa7c, 0xe0ef, 0x0, 0x0);
        gbc.writeMem(0xcebd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x325e, gbc.sp());
        EXPECT(0xcebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcebd));
        EXPECT(0x4b, gbc.readMem(0xcebe));
        // CB 4B 0370
        gbc.setState(0x464a, 0x616a, 0xede0, 0x1270, 0x90ef, 0xe8b4, 0x0, 0x0);
        gbc.writeMem(0x464a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x616a, gbc.sp());
        EXPECT(0x464c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0371
        gbc.setState(0x2997, 0xf7de, 0xe450, 0x7ea2, 0x4e36, 0x73ac, 0x1, 0x1);
        gbc.writeMem(0x2997, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf7de, gbc.sp());
        EXPECT(0x2999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0372
        gbc.setState(0x13bb, 0xdd60, 0xe360, 0xf67c, 0xc71f, 0x9337, 0x1, 0x1);
        gbc.writeMem(0x13bb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdd60, gbc.sp());
        EXPECT(0x13bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0373
        gbc.setState(0x4c6b, 0x6a4a, 0x2a0, 0x675b, 0xa99c, 0xeb92, 0x0, 0x1);
        gbc.writeMem(0x4c6b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6a4a, gbc.sp());
        EXPECT(0x4c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0374
        gbc.setState(0x401f, 0x6dd2, 0xf2f0, 0xdaf1, 0x185f, 0x4148, 0x1, 0x0);
        gbc.writeMem(0x401f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6dd2, gbc.sp());
        EXPECT(0x4021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0375
        gbc.setState(0xb0a6, 0x3c5b, 0xf890, 0x28a8, 0xf7de, 0x5ea1, 0x1, 0x1);
        gbc.writeMem(0xb0a6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3c5b, gbc.sp());
        EXPECT(0xb0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a6));
        EXPECT(0x4b, gbc.readMem(0xb0a7));
        // CB 4B 0376
        gbc.setState(0x3424, 0x5ac5, 0x1f70, 0xa5aa, 0xdc51, 0x7309, 0x1, 0x1);
        gbc.writeMem(0x3424, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5ac5, gbc.sp());
        EXPECT(0x3426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0377
        gbc.setState(0xb6e1, 0x31fe, 0x6b70, 0xc852, 0xbbca, 0x625d, 0x0, 0x0);
        gbc.writeMem(0xb6e1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x31fe, gbc.sp());
        EXPECT(0xb6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e1));
        EXPECT(0x4b, gbc.readMem(0xb6e2));
        // CB 4B 0378
        gbc.setState(0x15df, 0x2e11, 0x3610, 0x94c4, 0x901f, 0x547a, 0x0, 0x0);
        gbc.writeMem(0x15df, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2e11, gbc.sp());
        EXPECT(0x15e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0379
        gbc.setState(0xd99e, 0xbb49, 0x20a0, 0xd3fc, 0xa26, 0xa64f, 0x1, 0x0);
        gbc.writeMem(0xd99e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbb49, gbc.sp());
        EXPECT(0xd9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99e));
        EXPECT(0x4b, gbc.readMem(0xd99f));
        // CB 4B 037A
        gbc.setState(0x8331, 0xd2f2, 0x2d30, 0x6042, 0xa7c2, 0xb50c, 0x1, 0x0);
        gbc.writeMem(0x8331, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd2f2, gbc.sp());
        EXPECT(0x8333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8331));
        EXPECT(0x4b, gbc.readMem(0x8332));
        // CB 4B 037B
        gbc.setState(0x66bc, 0x6bd9, 0x9640, 0xff19, 0x74e3, 0xfbc3, 0x1, 0x1);
        gbc.writeMem(0x66bc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6bd9, gbc.sp());
        EXPECT(0x66be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 037C
        gbc.setState(0xd085, 0x29be, 0xbbc0, 0xfa2c, 0x3f20, 0xebb1, 0x0, 0x0);
        gbc.writeMem(0xd085, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x29be, gbc.sp());
        EXPECT(0xd087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd085));
        EXPECT(0x4b, gbc.readMem(0xd086));
        // CB 4B 037D
        gbc.setState(0x6fef, 0x450, 0x74c0, 0x1253, 0x5e56, 0x5d5e, 0x0, 0x0);
        gbc.writeMem(0x6fef, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x450, gbc.sp());
        EXPECT(0x6ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 037E
        gbc.setState(0x19e7, 0x6482, 0xb80, 0x8c97, 0xc21, 0x7861, 0x1, 0x0);
        gbc.writeMem(0x19e7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6482, gbc.sp());
        EXPECT(0x19e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 037F
        gbc.setState(0xdca1, 0x1273, 0xe110, 0x4931, 0x213c, 0x96c2, 0x1, 0x0);
        gbc.writeMem(0xdca1, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1273, gbc.sp());
        EXPECT(0xdca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca1));
        EXPECT(0x4b, gbc.readMem(0xdca2));
        // CB 4B 0380
        gbc.setState(0x7dcc, 0x42d7, 0xc9b0, 0xeeb3, 0x558d, 0x3940, 0x1, 0x0);
        gbc.writeMem(0x7dcc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x42d7, gbc.sp());
        EXPECT(0x7dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0381
        gbc.setState(0x6cd6, 0xde08, 0xff00, 0xfb48, 0xab48, 0xd7ff, 0x1, 0x1);
        gbc.writeMem(0x6cd6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xde08, gbc.sp());
        EXPECT(0x6cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0382
        gbc.setState(0x9914, 0x8466, 0x2480, 0xf5ac, 0xfb50, 0x3c33, 0x1, 0x1);
        gbc.writeMem(0x9914, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8466, gbc.sp());
        EXPECT(0x9916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9914));
        EXPECT(0x4b, gbc.readMem(0x9915));
        // CB 4B 0383
        gbc.setState(0x7eb7, 0xe85d, 0x6030, 0x1729, 0x175d, 0xeffa, 0x1, 0x1);
        gbc.writeMem(0x7eb7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe85d, gbc.sp());
        EXPECT(0x7eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0384
        gbc.setState(0x2d89, 0xf2a4, 0xf20, 0x73ac, 0x23a9, 0x191f, 0x0, 0x0);
        gbc.writeMem(0x2d89, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf2a4, gbc.sp());
        EXPECT(0x2d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0385
        gbc.setState(0x65ca, 0xdfe6, 0x6a90, 0x67c2, 0x9622, 0x63d, 0x1, 0x1);
        gbc.writeMem(0x65ca, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdfe6, gbc.sp());
        EXPECT(0x65cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0386
        gbc.setState(0x8318, 0x7f98, 0x23d0, 0xbd6c, 0xcadd, 0x9710, 0x0, 0x1);
        gbc.writeMem(0x8318, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7f98, gbc.sp());
        EXPECT(0x831a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8318));
        EXPECT(0x4b, gbc.readMem(0x8319));
        // CB 4B 0387
        gbc.setState(0x88f6, 0x977, 0x8720, 0x2294, 0x28d8, 0xd27f, 0x1, 0x1);
        gbc.writeMem(0x88f6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x977, gbc.sp());
        EXPECT(0x88f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f6));
        EXPECT(0x4b, gbc.readMem(0x88f7));
        // CB 4B 0388
        gbc.setState(0x6aff, 0x1f0b, 0x5580, 0x274, 0x29cb, 0x7431, 0x1, 0x1);
        gbc.writeMem(0x6aff, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1f0b, gbc.sp());
        EXPECT(0x6b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0389
        gbc.setState(0x4a7e, 0x8114, 0x6320, 0x65f9, 0x9566, 0x438a, 0x1, 0x1);
        gbc.writeMem(0x4a7e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8114, gbc.sp());
        EXPECT(0x4a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 038A
        gbc.setState(0x4b29, 0xb312, 0x4620, 0xe2c6, 0xae98, 0x7960, 0x0, 0x0);
        gbc.writeMem(0x4b29, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb312, gbc.sp());
        EXPECT(0x4b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 038B
        gbc.setState(0x33e, 0x61ef, 0xba60, 0xc345, 0x510, 0xa10a, 0x1, 0x1);
        gbc.writeMem(0x33e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x61ef, gbc.sp());
        EXPECT(0x340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 038C
        gbc.setState(0xccbc, 0x1b13, 0x4bf0, 0x5563, 0x2126, 0x31ff, 0x1, 0x1);
        gbc.writeMem(0xccbc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1b13, gbc.sp());
        EXPECT(0xccbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccbc));
        EXPECT(0x4b, gbc.readMem(0xccbd));
        // CB 4B 038E
        gbc.setState(0x71ed, 0xdb5c, 0xc140, 0xbf7a, 0x9a78, 0xf755, 0x0, 0x1);
        gbc.writeMem(0x71ed, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdb5c, gbc.sp());
        EXPECT(0x71ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 038F
        gbc.setState(0x9443, 0xadfb, 0x2cb0, 0xeb5b, 0xd77f, 0x8ba5, 0x1, 0x1);
        gbc.writeMem(0x9443, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xadfb, gbc.sp());
        EXPECT(0x9445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9443));
        EXPECT(0x4b, gbc.readMem(0x9444));
        // CB 4B 0390
        gbc.setState(0xd425, 0x2bb0, 0x210, 0x94c7, 0x1064, 0xc103, 0x1, 0x1);
        gbc.writeMem(0xd425, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2bb0, gbc.sp());
        EXPECT(0xd427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd425));
        EXPECT(0x4b, gbc.readMem(0xd426));
        // CB 4B 0391
        gbc.setState(0xb79, 0x1266, 0x2cc0, 0x72cb, 0xc65c, 0xebf2, 0x0, 0x1);
        gbc.writeMem(0xb79, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1266, gbc.sp());
        EXPECT(0xb7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0392
        gbc.setState(0xb7e, 0xb81d, 0xff40, 0xf33, 0x146b, 0xe63c, 0x0, 0x1);
        gbc.writeMem(0xb7e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb81d, gbc.sp());
        EXPECT(0xb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0393
        gbc.setState(0x851d, 0x221f, 0xffd0, 0xd8aa, 0xf498, 0x5aa4, 0x1, 0x0);
        gbc.writeMem(0x851d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x221f, gbc.sp());
        EXPECT(0x851f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851d));
        EXPECT(0x4b, gbc.readMem(0x851e));
        // CB 4B 0394
        gbc.setState(0x3eb, 0x9a38, 0x8700, 0x5722, 0x2484, 0xd355, 0x0, 0x1);
        gbc.writeMem(0x3eb, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9a38, gbc.sp());
        EXPECT(0x3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0396
        gbc.setState(0x10c6, 0xade5, 0x2e00, 0x6871, 0xff12, 0x9fef, 0x1, 0x0);
        gbc.writeMem(0x10c6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xade5, gbc.sp());
        EXPECT(0x10c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 0397
        gbc.setState(0x1f35, 0x6ad6, 0xf330, 0xbf12, 0xc572, 0xa7c3, 0x1, 0x0);
        gbc.writeMem(0x1f35, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6ad6, gbc.sp());
        EXPECT(0x1f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 0398
        gbc.setState(0xd864, 0x2064, 0x12a0, 0x6a68, 0xc636, 0x205d, 0x1, 0x1);
        gbc.writeMem(0xd864, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2064, gbc.sp());
        EXPECT(0xd866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd864));
        EXPECT(0x4b, gbc.readMem(0xd865));
        // CB 4B 0399
        gbc.setState(0x4163, 0xac84, 0xea10, 0x628a, 0x5f4c, 0x65da, 0x0, 0x1);
        gbc.writeMem(0x4163, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xac84, gbc.sp());
        EXPECT(0x4165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 039A
        gbc.setState(0xbfc7, 0xf395, 0x230, 0xf399, 0x80a5, 0x2d70, 0x0, 0x1);
        gbc.writeMem(0xbfc7, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf395, gbc.sp());
        EXPECT(0xbfc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc7));
        EXPECT(0x4b, gbc.readMem(0xbfc8));
        // CB 4B 039B
        gbc.setState(0x53b9, 0x5a13, 0x70f0, 0x155, 0x127, 0x589, 0x1, 0x0);
        gbc.writeMem(0x53b9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5a13, gbc.sp());
        EXPECT(0x53bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 039C
        gbc.setState(0xd1d4, 0xdc79, 0x7b10, 0x7239, 0x2ce0, 0x5e00, 0x0, 0x0);
        gbc.writeMem(0xd1d4, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdc79, gbc.sp());
        EXPECT(0xd1d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d4));
        EXPECT(0x4b, gbc.readMem(0xd1d5));
        // CB 4B 039D
        gbc.setState(0xe0dd, 0x2f0a, 0xc6e0, 0xd6b4, 0x5a0f, 0x4140, 0x1, 0x0);
        gbc.writeMem(0xe0dd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2f0a, gbc.sp());
        EXPECT(0xe0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0dd));
        EXPECT(0x4b, gbc.readMem(0xe0de));
        // CB 4B 039E
        gbc.setState(0xb4e0, 0x83bb, 0x7260, 0xe882, 0x5803, 0x5bc5, 0x0, 0x0);
        gbc.writeMem(0xb4e0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x83bb, gbc.sp());
        EXPECT(0xb4e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e0));
        EXPECT(0x4b, gbc.readMem(0xb4e1));
        // CB 4B 039F
        gbc.setState(0x34aa, 0x61e0, 0x7d0, 0x7cc9, 0xf855, 0xedd1, 0x1, 0x0);
        gbc.writeMem(0x34aa, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x61e0, gbc.sp());
        EXPECT(0x34ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03A0
        gbc.setState(0xe640, 0x6f68, 0xaef0, 0xfc84, 0x1f, 0x6ff2, 0x1, 0x0);
        gbc.writeMem(0xe640, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6f68, gbc.sp());
        EXPECT(0xe642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe640));
        EXPECT(0x4b, gbc.readMem(0xe641));
        // CB 4B 03A1
        gbc.setState(0x4358, 0x7df9, 0xfe0, 0x4502, 0x59bf, 0x6f04, 0x1, 0x0);
        gbc.writeMem(0x4358, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7df9, gbc.sp());
        EXPECT(0x435a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03A3
        gbc.setState(0x5342, 0xf1dc, 0x47b0, 0xadbf, 0xde48, 0x2b3f, 0x1, 0x1);
        gbc.writeMem(0x5342, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf1dc, gbc.sp());
        EXPECT(0x5344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03A4
        gbc.setState(0x8bdf, 0xef4c, 0xb7d0, 0x4647, 0x9fb, 0x6828, 0x1, 0x1);
        gbc.writeMem(0x8bdf, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xef4c, gbc.sp());
        EXPECT(0x8be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bdf));
        EXPECT(0x4b, gbc.readMem(0x8be0));
        // CB 4B 03A5
        gbc.setState(0x20ff, 0x23fd, 0x6340, 0xb4c3, 0x9ea3, 0xce85, 0x0, 0x1);
        gbc.writeMem(0x20ff, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x23fd, gbc.sp());
        EXPECT(0x2101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03A6
        gbc.setState(0xea6, 0xf840, 0x1880, 0x2b22, 0xd88c, 0xff75, 0x0, 0x0);
        gbc.writeMem(0xea6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf840, gbc.sp());
        EXPECT(0xea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03A7
        gbc.setState(0x834e, 0x9324, 0xd790, 0x1724, 0x4510, 0xf687, 0x0, 0x0);
        gbc.writeMem(0x834e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9324, gbc.sp());
        EXPECT(0x8350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x834e));
        EXPECT(0x4b, gbc.readMem(0x834f));
        // CB 4B 03A8
        gbc.setState(0x666a, 0x340e, 0xa810, 0xb4bb, 0x629b, 0xabe9, 0x0, 0x1);
        gbc.writeMem(0x666a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x340e, gbc.sp());
        EXPECT(0x666c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03A9
        gbc.setState(0x39c0, 0xeb57, 0x5b40, 0x69f, 0xc220, 0x5d00, 0x0, 0x1);
        gbc.writeMem(0x39c0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xeb57, gbc.sp());
        EXPECT(0x39c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03AA
        gbc.setState(0xe304, 0x7758, 0x73f0, 0xa731, 0xb3d6, 0xe7cf, 0x1, 0x0);
        gbc.writeMem(0xe304, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7758, gbc.sp());
        EXPECT(0xe306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe304));
        EXPECT(0x4b, gbc.readMem(0xe305));
        // CB 4B 03AD
        gbc.setState(0x9caa, 0xa640, 0xdc70, 0x1574, 0x607b, 0xea31, 0x0, 0x1);
        gbc.writeMem(0x9caa, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa640, gbc.sp());
        EXPECT(0x9cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9caa));
        EXPECT(0x4b, gbc.readMem(0x9cab));
        // CB 4B 03AE
        gbc.setState(0x6610, 0x6280, 0x1590, 0x355e, 0xc553, 0x9991, 0x1, 0x1);
        gbc.writeMem(0x6610, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6280, gbc.sp());
        EXPECT(0x6612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03AF
        gbc.setState(0x8ed9, 0x956b, 0xd570, 0xe751, 0x4f3e, 0x1e4a, 0x1, 0x1);
        gbc.writeMem(0x8ed9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x956b, gbc.sp());
        EXPECT(0x8edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed9));
        EXPECT(0x4b, gbc.readMem(0x8eda));
        // CB 4B 03B0
        gbc.setState(0x800d, 0x918e, 0x6570, 0x992e, 0x3b1f, 0xbff1, 0x0, 0x1);
        gbc.writeMem(0x800d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x918e, gbc.sp());
        EXPECT(0x800f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800d));
        EXPECT(0x4b, gbc.readMem(0x800e));
        // CB 4B 03B2
        gbc.setState(0xedba, 0xb2c, 0xdd20, 0x9617, 0xee34, 0x2de9, 0x1, 0x0);
        gbc.writeMem(0xedba, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb2c, gbc.sp());
        EXPECT(0xedbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedba));
        EXPECT(0x4b, gbc.readMem(0xedbb));
        // CB 4B 03B3
        gbc.setState(0x6734, 0x727c, 0x9330, 0xd00, 0x20fd, 0x2d24, 0x0, 0x0);
        gbc.writeMem(0x6734, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x727c, gbc.sp());
        EXPECT(0x6736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03B4
        gbc.setState(0xe311, 0xe43d, 0x68a0, 0x3f8b, 0x9832, 0x76a4, 0x0, 0x0);
        gbc.writeMem(0xe311, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe43d, gbc.sp());
        EXPECT(0xe313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe311));
        EXPECT(0x4b, gbc.readMem(0xe312));
        // CB 4B 03B5
        gbc.setState(0xe021, 0x4b30, 0xc0e0, 0xc71b, 0x5ff4, 0x2392, 0x0, 0x1);
        gbc.writeMem(0xe021, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4b30, gbc.sp());
        EXPECT(0xe023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe021));
        EXPECT(0x4b, gbc.readMem(0xe022));
        // CB 4B 03B6
        gbc.setState(0xcd75, 0x71f7, 0xcdb0, 0x911a, 0x2b38, 0x7244, 0x0, 0x0);
        gbc.writeMem(0xcd75, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x71f7, gbc.sp());
        EXPECT(0xcd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd75));
        EXPECT(0x4b, gbc.readMem(0xcd76));
        // CB 4B 03B7
        gbc.setState(0x5a81, 0xc33f, 0xfa10, 0xaf66, 0xb92f, 0xa6c3, 0x1, 0x0);
        gbc.writeMem(0x5a81, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc33f, gbc.sp());
        EXPECT(0x5a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03B8
        gbc.setState(0x7ddd, 0x70df, 0x8b20, 0x144, 0x8d3c, 0xdad, 0x1, 0x0);
        gbc.writeMem(0x7ddd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x70df, gbc.sp());
        EXPECT(0x7ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03B9
        gbc.setState(0x2b39, 0x22c8, 0xad0, 0xa88a, 0x4a57, 0x8042, 0x1, 0x0);
        gbc.writeMem(0x2b39, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x22c8, gbc.sp());
        EXPECT(0x2b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03BA
        gbc.setState(0xee45, 0x669e, 0x1390, 0x3cd3, 0xbd93, 0xf89f, 0x0, 0x0);
        gbc.writeMem(0xee45, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x669e, gbc.sp());
        EXPECT(0xee47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee45));
        EXPECT(0x4b, gbc.readMem(0xee46));
        // CB 4B 03BC
        gbc.setState(0xaf1d, 0xe47f, 0x6280, 0x4e7, 0xf13, 0xa0b5, 0x0, 0x1);
        gbc.writeMem(0xaf1d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe47f, gbc.sp());
        EXPECT(0xaf1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf1d));
        EXPECT(0x4b, gbc.readMem(0xaf1e));
        // CB 4B 03BD
        gbc.setState(0xa4f6, 0xb056, 0x1e40, 0x852, 0xe9ff, 0xcf53, 0x1, 0x0);
        gbc.writeMem(0xa4f6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb056, gbc.sp());
        EXPECT(0xa4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f6));
        EXPECT(0x4b, gbc.readMem(0xa4f7));
        // CB 4B 03BE
        gbc.setState(0x552b, 0x1518, 0x1250, 0xdeb4, 0x8f4f, 0x4af5, 0x0, 0x1);
        gbc.writeMem(0x552b, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1518, gbc.sp());
        EXPECT(0x552d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03BF
        gbc.setState(0x85ed, 0x50c8, 0x1290, 0x883c, 0x5614, 0x70cb, 0x1, 0x0);
        gbc.writeMem(0x85ed, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x50c8, gbc.sp());
        EXPECT(0x85ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ed));
        EXPECT(0x4b, gbc.readMem(0x85ee));
        // CB 4B 03C0
        gbc.setState(0x8e09, 0xd6c, 0x2220, 0x9ab6, 0xb713, 0x38de, 0x1, 0x1);
        gbc.writeMem(0x8e09, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd6c, gbc.sp());
        EXPECT(0x8e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e09));
        EXPECT(0x4b, gbc.readMem(0x8e0a));
        // CB 4B 03C1
        gbc.setState(0xd008, 0xa57d, 0xf8f0, 0x9c8c, 0xe71b, 0x62ad, 0x0, 0x0);
        gbc.writeMem(0xd008, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa57d, gbc.sp());
        EXPECT(0xd00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd008));
        EXPECT(0x4b, gbc.readMem(0xd009));
        // CB 4B 03C2
        gbc.setState(0x941f, 0x923d, 0xe3f0, 0x1821, 0x94aa, 0xa66f, 0x1, 0x0);
        gbc.writeMem(0x941f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x923d, gbc.sp());
        EXPECT(0x9421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941f));
        EXPECT(0x4b, gbc.readMem(0x9420));
        // CB 4B 03C3
        gbc.setState(0x4efe, 0x4a48, 0x5480, 0x9a33, 0xa0f9, 0xbea9, 0x1, 0x0);
        gbc.writeMem(0x4efe, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4a48, gbc.sp());
        EXPECT(0x4f00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03C4
        gbc.setState(0x3624, 0x3fd5, 0x61b0, 0xb435, 0x4d18, 0x1ece, 0x0, 0x1);
        gbc.writeMem(0x3624, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3fd5, gbc.sp());
        EXPECT(0x3626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03C5
        gbc.setState(0x9b54, 0x6820, 0xaac0, 0xef6d, 0xfd6e, 0xd409, 0x1, 0x1);
        gbc.writeMem(0x9b54, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6820, gbc.sp());
        EXPECT(0x9b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b54));
        EXPECT(0x4b, gbc.readMem(0x9b55));
        // CB 4B 03C6
        gbc.setState(0x61cc, 0xfa20, 0x52c0, 0x4e06, 0x2d2d, 0x663a, 0x1, 0x1);
        gbc.writeMem(0x61cc, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfa20, gbc.sp());
        EXPECT(0x61ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03C7
        gbc.setState(0xc10d, 0x84da, 0xd9f0, 0xe255, 0xa7cd, 0x5c7c, 0x0, 0x1);
        gbc.writeMem(0xc10d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x84da, gbc.sp());
        EXPECT(0xc10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc10d));
        EXPECT(0x4b, gbc.readMem(0xc10e));
        // CB 4B 03C8
        gbc.setState(0x765e, 0x311, 0x2110, 0xfc3e, 0xae7d, 0xd436, 0x0, 0x1);
        gbc.writeMem(0x765e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x311, gbc.sp());
        EXPECT(0x7660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03C9
        gbc.setState(0x6354, 0x7f6e, 0xa530, 0x4f00, 0x8645, 0x291f, 0x0, 0x0);
        gbc.writeMem(0x6354, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7f6e, gbc.sp());
        EXPECT(0x6356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03CA
        gbc.setState(0x4976, 0xfdf1, 0xa580, 0x5b70, 0xf7f5, 0xb33c, 0x1, 0x0);
        gbc.writeMem(0x4976, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfdf1, gbc.sp());
        EXPECT(0x4978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03CB
        gbc.setState(0xaa14, 0xf878, 0x6af0, 0xa7fd, 0xa3fe, 0x64d9, 0x0, 0x1);
        gbc.writeMem(0xaa14, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf878, gbc.sp());
        EXPECT(0xaa16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa14));
        EXPECT(0x4b, gbc.readMem(0xaa15));
        // CB 4B 03CC
        gbc.setState(0xc298, 0x2432, 0x6a90, 0x8c59, 0xe570, 0x90bf, 0x1, 0x1);
        gbc.writeMem(0xc298, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2432, gbc.sp());
        EXPECT(0xc29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc298));
        EXPECT(0x4b, gbc.readMem(0xc299));
        // CB 4B 03CD
        gbc.setState(0x689f, 0xa2fe, 0xb260, 0x994a, 0x6e21, 0x8e7d, 0x0, 0x1);
        gbc.writeMem(0x689f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa2fe, gbc.sp());
        EXPECT(0x68a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03CE
        gbc.setState(0xc4aa, 0x175d, 0x7eb0, 0x6e25, 0x75ef, 0x52d0, 0x0, 0x1);
        gbc.writeMem(0xc4aa, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x175d, gbc.sp());
        EXPECT(0xc4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4aa));
        EXPECT(0x4b, gbc.readMem(0xc4ab));
        // CB 4B 03CF
        gbc.setState(0x846c, 0x421, 0x81c0, 0xcf77, 0xcfc2, 0xe44d, 0x0, 0x1);
        gbc.writeMem(0x846c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x421, gbc.sp());
        EXPECT(0x846e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x846c));
        EXPECT(0x4b, gbc.readMem(0x846d));
        // CB 4B 03D0
        gbc.setState(0x5d1d, 0x79, 0x6140, 0xe8aa, 0x84fb, 0xa930, 0x0, 0x0);
        gbc.writeMem(0x5d1d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x79, gbc.sp());
        EXPECT(0x5d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03D1
        gbc.setState(0x1df6, 0x417f, 0xe570, 0x5af8, 0x8ca4, 0x9ca2, 0x0, 0x1);
        gbc.writeMem(0x1df6, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x417f, gbc.sp());
        EXPECT(0x1df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03D2
        gbc.setState(0x3ab9, 0xbba0, 0x3240, 0xd51d, 0x28cf, 0x31fd, 0x0, 0x1);
        gbc.writeMem(0x3ab9, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbba0, gbc.sp());
        EXPECT(0x3abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03D3
        gbc.setState(0x2a66, 0x9b75, 0x6e40, 0x51fe, 0xbd9b, 0x9f27, 0x1, 0x0);
        gbc.writeMem(0x2a66, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9b75, gbc.sp());
        EXPECT(0x2a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03D4
        gbc.setState(0x9202, 0x38e0, 0xc470, 0x1f17, 0x2833, 0xd4a8, 0x0, 0x1);
        gbc.writeMem(0x9202, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x38e0, gbc.sp());
        EXPECT(0x9204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9202));
        EXPECT(0x4b, gbc.readMem(0x9203));
        // CB 4B 03D5
        gbc.setState(0x4007, 0x2113, 0xfa90, 0xf4c8, 0xcde7, 0x1ad7, 0x0, 0x0);
        gbc.writeMem(0x4007, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2113, gbc.sp());
        EXPECT(0x4009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03D6
        gbc.setState(0x130d, 0xd2b4, 0x47d0, 0x3c16, 0xf6a8, 0x439d, 0x0, 0x1);
        gbc.writeMem(0x130d, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd2b4, gbc.sp());
        EXPECT(0x130f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03D7
        gbc.setState(0x34b5, 0x1ecf, 0x6f0, 0xbdec, 0x9b8a, 0x6685, 0x0, 0x0);
        gbc.writeMem(0x34b5, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1ecf, gbc.sp());
        EXPECT(0x34b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03D8
        gbc.setState(0x49cd, 0xaeb8, 0xec0, 0x8867, 0x2827, 0xae97, 0x1, 0x1);
        gbc.writeMem(0x49cd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaeb8, gbc.sp());
        EXPECT(0x49cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03D9
        gbc.setState(0xe15e, 0xbfc8, 0xbbc0, 0xf281, 0xbcc5, 0x520, 0x0, 0x0);
        gbc.writeMem(0xe15e, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbfc8, gbc.sp());
        EXPECT(0xe160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15e));
        EXPECT(0x4b, gbc.readMem(0xe15f));
        // CB 4B 03DA
        gbc.setState(0xf3c, 0x9238, 0xb330, 0xa791, 0x1154, 0xcdd1, 0x1, 0x0);
        gbc.writeMem(0xf3c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9238, gbc.sp());
        EXPECT(0xf3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03DB
        gbc.setState(0xd51f, 0xee1d, 0x1fb0, 0xd9bb, 0x3737, 0x896b, 0x0, 0x1);
        gbc.writeMem(0xd51f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xee1d, gbc.sp());
        EXPECT(0xd521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51f));
        EXPECT(0x4b, gbc.readMem(0xd520));
        // CB 4B 03DC
        gbc.setState(0x766f, 0x55ab, 0xf2a0, 0xa83, 0x54c9, 0xea1d, 0x0, 0x1);
        gbc.writeMem(0x766f, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x55ab, gbc.sp());
        EXPECT(0x7671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03DD
        gbc.setState(0x831a, 0x75fc, 0x81d0, 0xab89, 0xd5ec, 0x14d0, 0x1, 0x1);
        gbc.writeMem(0x831a, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x75fc, gbc.sp());
        EXPECT(0x831c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831a));
        EXPECT(0x4b, gbc.readMem(0x831b));
        // CB 4B 03DE
        gbc.setState(0x5214, 0x53b9, 0xc710, 0x4a75, 0x31dc, 0xd443, 0x1, 0x1);
        gbc.writeMem(0x5214, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x53b9, gbc.sp());
        EXPECT(0x5216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03DF
        gbc.setState(0x67fd, 0xffac, 0x110, 0x2c80, 0x6a7a, 0x7840, 0x0, 0x1);
        gbc.writeMem(0x67fd, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xffac, gbc.sp());
        EXPECT(0x67ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03E0
        gbc.setState(0xb21, 0xebb6, 0x3f60, 0x5cd5, 0x8e5c, 0x66a8, 0x1, 0x0);
        gbc.writeMem(0xb21, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xebb6, gbc.sp());
        EXPECT(0xb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 4B 03E1
        gbc.setState(0x3e84, 0x1792, 0x60b0, 0x8877, 0x870b, 0xee78, 0x0, 0x0);
        gbc.writeMem(0x3e84, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1792, gbc.sp());
        EXPECT(0x3e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03E2
        gbc.setState(0x1da0, 0xbd08, 0x3e30, 0xaeab, 0xc80f, 0x8b47, 0x1, 0x0);
        gbc.writeMem(0x1da0, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbd08, gbc.sp());
        EXPECT(0x1da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03E5
        gbc.setState(0x76ca, 0xd4c0, 0x8b70, 0x83a9, 0xadcc, 0x57bf, 0x1, 0x0);
        gbc.writeMem(0x76ca, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd4c0, gbc.sp());
        EXPECT(0x76cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 4B 03E6
        gbc.setState(0xe72c, 0x7ad4, 0xdb70, 0x7ae0, 0xa7e6, 0x91a4, 0x1, 0x0);
        gbc.writeMem(0xe72c, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7ad4, gbc.sp());
        EXPECT(0xe72e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72c));
        EXPECT(0x4b, gbc.readMem(0xe72d));
        // CB 4B 03E7
        gbc.setState(0x3daa, 0x90b6, 0x1de0, 0x119c, 0xbbd2, 0x199d, 0x0, 0x1);
        gbc.writeMem(0x3daa, { 0xcb, 0x4b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x90b6, gbc.sp());
        EXPECT(0x3dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
