#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_fd)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_fd) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB FD 0000
        gbc.setState(0xb29c, 0x669, 0x8e30, 0x4e7, 0x62e1, 0x2494, 0x0, 0x0);
        gbc.writeMem(0xb29c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x669);
        EXPECT(gbc.pc(), 0xb29e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb29c), 0xcb);
        EXPECT(gbc.readMem(0xb29d), 0xfd);
        // CB FD 0001
        gbc.setState(0x5434, 0x68a2, 0x6130, 0x8db3, 0x66be, 0xacb7, 0x1, 0x1);
        gbc.writeMem(0x5434, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x68a2);
        EXPECT(gbc.pc(), 0x5436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0002
        gbc.setState(0x487c, 0xe193, 0xefe0, 0xb19c, 0x9b00, 0x8fa9, 0x0, 0x0);
        gbc.writeMem(0x487c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe193);
        EXPECT(gbc.pc(), 0x487e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0003
        gbc.setState(0xe468, 0x7319, 0x4760, 0x49af, 0x1529, 0x8318, 0x1, 0x1);
        gbc.writeMem(0xe468, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7319);
        EXPECT(gbc.pc(), 0xe46a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe468), 0xcb);
        EXPECT(gbc.readMem(0xe469), 0xfd);
        // CB FD 0004
        gbc.setState(0x778d, 0xa9ff, 0x1f10, 0xbc3c, 0x497d, 0xb16f, 0x1, 0x1);
        gbc.writeMem(0x778d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa9ff);
        EXPECT(gbc.pc(), 0x778f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0007
        gbc.setState(0x7fde, 0x63df, 0xb560, 0xf770, 0x35a3, 0x9c47, 0x1, 0x0);
        gbc.writeMem(0x7fde, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x63df);
        EXPECT(gbc.pc(), 0x7fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 000A
        gbc.setState(0xd481, 0x9123, 0x520, 0x71ce, 0x7b2e, 0xc723, 0x1, 0x0);
        gbc.writeMem(0xd481, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9123);
        EXPECT(gbc.pc(), 0xd483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd481), 0xcb);
        EXPECT(gbc.readMem(0xd482), 0xfd);
        // CB FD 000B
        gbc.setState(0xc981, 0x3a5c, 0x4b10, 0x53bd, 0xa4bd, 0x40e3, 0x1, 0x0);
        gbc.writeMem(0xc981, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3a5c);
        EXPECT(gbc.pc(), 0xc983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc981), 0xcb);
        EXPECT(gbc.readMem(0xc982), 0xfd);
        // CB FD 000C
        gbc.setState(0xdfc5, 0xd6f5, 0x3330, 0xb225, 0xcdee, 0xd4a6, 0x1, 0x1);
        gbc.writeMem(0xdfc5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd6f5);
        EXPECT(gbc.pc(), 0xdfc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc5), 0xcb);
        EXPECT(gbc.readMem(0xdfc6), 0xfd);
        // CB FD 000D
        gbc.setState(0x9443, 0xf221, 0x560, 0xadc, 0x5a7d, 0xa70, 0x0, 0x1);
        gbc.writeMem(0x9443, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf221);
        EXPECT(gbc.pc(), 0x9445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9443), 0xcb);
        EXPECT(gbc.readMem(0x9444), 0xfd);
        // CB FD 000E
        gbc.setState(0x388e, 0x3ebc, 0x80e0, 0xef89, 0x4506, 0x5bbd, 0x1, 0x1);
        gbc.writeMem(0x388e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3ebc);
        EXPECT(gbc.pc(), 0x3890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 000F
        gbc.setState(0x5ade, 0xc704, 0x5ef0, 0xa919, 0xc1f0, 0xfb0, 0x1, 0x0);
        gbc.writeMem(0x5ade, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc704);
        EXPECT(gbc.pc(), 0x5ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0010
        gbc.setState(0x9c9f, 0x77f9, 0xf4d0, 0x2a8e, 0x11a2, 0x741e, 0x1, 0x1);
        gbc.writeMem(0x9c9f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x77f9);
        EXPECT(gbc.pc(), 0x9ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9f), 0xcb);
        EXPECT(gbc.readMem(0x9ca0), 0xfd);
        // CB FD 0011
        gbc.setState(0xb2a0, 0x2f05, 0x15c0, 0x8858, 0x3b71, 0x80d0, 0x0, 0x1);
        gbc.writeMem(0xb2a0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2f05);
        EXPECT(gbc.pc(), 0xb2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a0), 0xcb);
        EXPECT(gbc.readMem(0xb2a1), 0xfd);
        // CB FD 0012
        gbc.setState(0x1f5e, 0x29d7, 0x4c00, 0xe1c, 0xc2e, 0xff27, 0x1, 0x1);
        gbc.writeMem(0x1f5e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x29d7);
        EXPECT(gbc.pc(), 0x1f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0013
        gbc.setState(0x2150, 0x9ecb, 0xc850, 0x6cb3, 0xafe0, 0xd3a3, 0x1, 0x0);
        gbc.writeMem(0x2150, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9ecb);
        EXPECT(gbc.pc(), 0x2152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0014
        gbc.setState(0xcb4c, 0x5e0f, 0x8af0, 0xdac4, 0x5a72, 0xf1cf, 0x1, 0x0);
        gbc.writeMem(0xcb4c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5e0f);
        EXPECT(gbc.pc(), 0xcb4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb4c), 0xcb);
        EXPECT(gbc.readMem(0xcb4d), 0xfd);
        // CB FD 0015
        gbc.setState(0x6b67, 0xaf41, 0x3e60, 0xc495, 0xb28a, 0x6c08, 0x1, 0x1);
        gbc.writeMem(0x6b67, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xaf41);
        EXPECT(gbc.pc(), 0x6b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0017
        gbc.setState(0xe5c7, 0x109, 0x9f30, 0x4dc4, 0xb2f, 0xa822, 0x0, 0x0);
        gbc.writeMem(0xe5c7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x109);
        EXPECT(gbc.pc(), 0xe5c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c7), 0xcb);
        EXPECT(gbc.readMem(0xe5c8), 0xfd);
        // CB FD 0018
        gbc.setState(0x457a, 0x9ca4, 0xe0d0, 0x6752, 0x6733, 0xa1fd, 0x0, 0x0);
        gbc.writeMem(0x457a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9ca4);
        EXPECT(gbc.pc(), 0x457c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0019
        gbc.setState(0x83f5, 0x23ba, 0x4360, 0x82ed, 0x3095, 0xd0d2, 0x1, 0x1);
        gbc.writeMem(0x83f5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x23ba);
        EXPECT(gbc.pc(), 0x83f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f5), 0xcb);
        EXPECT(gbc.readMem(0x83f6), 0xfd);
        // CB FD 001A
        gbc.setState(0x7442, 0x9c6e, 0x9610, 0x1a10, 0x5841, 0x831c, 0x0, 0x0);
        gbc.writeMem(0x7442, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9c6e);
        EXPECT(gbc.pc(), 0x7444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 001B
        gbc.setState(0x63d7, 0xdcb, 0x5740, 0xefc8, 0xa727, 0x488c, 0x1, 0x0);
        gbc.writeMem(0x63d7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xdcb);
        EXPECT(gbc.pc(), 0x63d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 001C
        gbc.setState(0x2df6, 0xe5fd, 0xe060, 0x44c0, 0x7558, 0x5fb6, 0x0, 0x1);
        gbc.writeMem(0x2df6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe5fd);
        EXPECT(gbc.pc(), 0x2df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 001D
        gbc.setState(0x4a1f, 0x7914, 0xb8e0, 0xb575, 0xd8e2, 0x4897, 0x1, 0x1);
        gbc.writeMem(0x4a1f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7914);
        EXPECT(gbc.pc(), 0x4a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 001E
        gbc.setState(0x9d9a, 0x1b2e, 0xfb00, 0x2f2a, 0xb628, 0x3493, 0x1, 0x1);
        gbc.writeMem(0x9d9a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1b2e);
        EXPECT(gbc.pc(), 0x9d9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d9a), 0xcb);
        EXPECT(gbc.readMem(0x9d9b), 0xfd);
        // CB FD 001F
        gbc.setState(0x3cae, 0xa28c, 0xa510, 0xf1f2, 0xcb9b, 0x3269, 0x0, 0x1);
        gbc.writeMem(0x3cae, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa28c);
        EXPECT(gbc.pc(), 0x3cb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0020
        gbc.setState(0x278b, 0xe63a, 0x5f40, 0xf507, 0x1890, 0x6b24, 0x1, 0x1);
        gbc.writeMem(0x278b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe63a);
        EXPECT(gbc.pc(), 0x278d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0021
        gbc.setState(0x6131, 0xb0ed, 0x39c0, 0x391e, 0x3ef7, 0xd73e, 0x1, 0x0);
        gbc.writeMem(0x6131, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb0ed);
        EXPECT(gbc.pc(), 0x6133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0022
        gbc.setState(0xa445, 0xa68d, 0xc9b0, 0x5eda, 0xa1d6, 0x9061, 0x1, 0x1);
        gbc.writeMem(0xa445, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa68d);
        EXPECT(gbc.pc(), 0xa447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa445), 0xcb);
        EXPECT(gbc.readMem(0xa446), 0xfd);
        // CB FD 0024
        gbc.setState(0xc320, 0x27d0, 0x11f0, 0xb08c, 0xb58d, 0x120c, 0x1, 0x1);
        gbc.writeMem(0xc320, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x27d0);
        EXPECT(gbc.pc(), 0xc322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc320), 0xcb);
        EXPECT(gbc.readMem(0xc321), 0xfd);
        // CB FD 0025
        gbc.setState(0xe8e5, 0xf16, 0x5960, 0x5210, 0xb1f1, 0xe570, 0x0, 0x1);
        gbc.writeMem(0xe8e5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf16);
        EXPECT(gbc.pc(), 0xe8e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e5), 0xcb);
        EXPECT(gbc.readMem(0xe8e6), 0xfd);
        // CB FD 0026
        gbc.setState(0x86c3, 0x64d2, 0x6630, 0x9b0f, 0x7872, 0xfd52, 0x1, 0x1);
        gbc.writeMem(0x86c3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x64d2);
        EXPECT(gbc.pc(), 0x86c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c3), 0xcb);
        EXPECT(gbc.readMem(0x86c4), 0xfd);
        // CB FD 0027
        gbc.setState(0xd989, 0x738f, 0x5820, 0xa9cf, 0x17ca, 0x3e17, 0x1, 0x1);
        gbc.writeMem(0xd989, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x738f);
        EXPECT(gbc.pc(), 0xd98b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd989), 0xcb);
        EXPECT(gbc.readMem(0xd98a), 0xfd);
        // CB FD 0029
        gbc.setState(0x3a94, 0x11b9, 0xe800, 0x8930, 0x9862, 0x4b68, 0x0, 0x1);
        gbc.writeMem(0x3a94, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x11b9);
        EXPECT(gbc.pc(), 0x3a96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 002A
        gbc.setState(0x59b0, 0x6d85, 0x8790, 0xec44, 0x31b2, 0xddf8, 0x0, 0x1);
        gbc.writeMem(0x59b0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6d85);
        EXPECT(gbc.pc(), 0x59b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 002B
        gbc.setState(0x949d, 0x47ee, 0xb50, 0xc8f8, 0xeb60, 0xc738, 0x0, 0x1);
        gbc.writeMem(0x949d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x47ee);
        EXPECT(gbc.pc(), 0x949f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x949d), 0xcb);
        EXPECT(gbc.readMem(0x949e), 0xfd);
        // CB FD 002C
        gbc.setState(0x7f2c, 0xaf1, 0x5980, 0x6cea, 0xc696, 0xe5dc, 0x1, 0x1);
        gbc.writeMem(0x7f2c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xaf1);
        EXPECT(gbc.pc(), 0x7f2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 002D
        gbc.setState(0xc65, 0x6a23, 0x2a10, 0x33d0, 0xf324, 0x9047, 0x0, 0x0);
        gbc.writeMem(0xc65, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6a23);
        EXPECT(gbc.pc(), 0xc67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 002E
        gbc.setState(0x3762, 0xe910, 0x6110, 0x13eb, 0x58a8, 0xa029, 0x1, 0x1);
        gbc.writeMem(0x3762, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe910);
        EXPECT(gbc.pc(), 0x3764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 002F
        gbc.setState(0xdc0a, 0x7a5f, 0x8990, 0xe4d8, 0x7dd1, 0x4286, 0x0, 0x0);
        gbc.writeMem(0xdc0a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7a5f);
        EXPECT(gbc.pc(), 0xdc0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc0a), 0xcb);
        EXPECT(gbc.readMem(0xdc0b), 0xfd);
        // CB FD 0030
        gbc.setState(0xc85c, 0xf3e6, 0x1970, 0x8f77, 0xe6, 0x7935, 0x0, 0x0);
        gbc.writeMem(0xc85c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf3e6);
        EXPECT(gbc.pc(), 0xc85e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc85c), 0xcb);
        EXPECT(gbc.readMem(0xc85d), 0xfd);
        // CB FD 0031
        gbc.setState(0xc573, 0x99b5, 0xb950, 0x7e48, 0x8319, 0xe8f7, 0x0, 0x0);
        gbc.writeMem(0xc573, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x99b5);
        EXPECT(gbc.pc(), 0xc575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc573), 0xcb);
        EXPECT(gbc.readMem(0xc574), 0xfd);
        // CB FD 0032
        gbc.setState(0x19c8, 0xe28b, 0x4660, 0x8670, 0x45d7, 0x72e4, 0x1, 0x1);
        gbc.writeMem(0x19c8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe28b);
        EXPECT(gbc.pc(), 0x19ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0033
        gbc.setState(0x73e9, 0xfbef, 0x4280, 0x31db, 0xa38d, 0x95e6, 0x1, 0x1);
        gbc.writeMem(0x73e9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfbef);
        EXPECT(gbc.pc(), 0x73eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0034
        gbc.setState(0xcb2f, 0x85e3, 0xd540, 0x394c, 0xd9da, 0x5e31, 0x0, 0x0);
        gbc.writeMem(0xcb2f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x85e3);
        EXPECT(gbc.pc(), 0xcb31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb2f), 0xcb);
        EXPECT(gbc.readMem(0xcb30), 0xfd);
        // CB FD 0035
        gbc.setState(0xaaf0, 0x8851, 0x9f10, 0x56d4, 0x2d52, 0x8222, 0x0, 0x0);
        gbc.writeMem(0xaaf0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8851);
        EXPECT(gbc.pc(), 0xaaf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf0), 0xcb);
        EXPECT(gbc.readMem(0xaaf1), 0xfd);
        // CB FD 0036
        gbc.setState(0x175c, 0x65c0, 0x4af0, 0x5180, 0xcaeb, 0xa440, 0x0, 0x1);
        gbc.writeMem(0x175c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x65c0);
        EXPECT(gbc.pc(), 0x175e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0037
        gbc.setState(0xb724, 0x9dec, 0x1790, 0xd579, 0x1dab, 0x8b02, 0x0, 0x0);
        gbc.writeMem(0xb724, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9dec);
        EXPECT(gbc.pc(), 0xb726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb724), 0xcb);
        EXPECT(gbc.readMem(0xb725), 0xfd);
        // CB FD 0038
        gbc.setState(0x3292, 0xa070, 0xcef0, 0x3ea8, 0x5211, 0xb5da, 0x0, 0x0);
        gbc.writeMem(0x3292, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa070);
        EXPECT(gbc.pc(), 0x3294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0039
        gbc.setState(0x860e, 0x34fa, 0x5020, 0xc816, 0x98b0, 0xb95b, 0x0, 0x0);
        gbc.writeMem(0x860e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x34fa);
        EXPECT(gbc.pc(), 0x8610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860e), 0xcb);
        EXPECT(gbc.readMem(0x860f), 0xfd);
        // CB FD 003A
        gbc.setState(0x543, 0xa3ad, 0xb800, 0x7637, 0xd6d8, 0x95a8, 0x1, 0x0);
        gbc.writeMem(0x543, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa3ad);
        EXPECT(gbc.pc(), 0x545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 003B
        gbc.setState(0x30d5, 0xcc8d, 0x400, 0x86de, 0xd1a1, 0x738d, 0x0, 0x0);
        gbc.writeMem(0x30d5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcc8d);
        EXPECT(gbc.pc(), 0x30d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 003C
        gbc.setState(0xe6b5, 0x3e7, 0x1ca0, 0xf04c, 0xb0b3, 0xd6c3, 0x1, 0x0);
        gbc.writeMem(0xe6b5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3e7);
        EXPECT(gbc.pc(), 0xe6b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b5), 0xcb);
        EXPECT(gbc.readMem(0xe6b6), 0xfd);
        // CB FD 003D
        gbc.setState(0xa6f5, 0xb02b, 0x8610, 0x5f0e, 0x56d6, 0xc249, 0x0, 0x1);
        gbc.writeMem(0xa6f5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb02b);
        EXPECT(gbc.pc(), 0xa6f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6f5), 0xcb);
        EXPECT(gbc.readMem(0xa6f6), 0xfd);
        // CB FD 003E
        gbc.setState(0x56fe, 0x9c07, 0xf430, 0x6f13, 0xfc0c, 0xbfa6, 0x0, 0x0);
        gbc.writeMem(0x56fe, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9c07);
        EXPECT(gbc.pc(), 0x5700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0040
        gbc.setState(0x7ece, 0x71f3, 0xdaf0, 0xcd7b, 0x12e1, 0xc78b, 0x0, 0x1);
        gbc.writeMem(0x7ece, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x71f3);
        EXPECT(gbc.pc(), 0x7ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0041
        gbc.setState(0x11d9, 0x7f26, 0x35c0, 0x2505, 0x6aa9, 0xa8c9, 0x1, 0x0);
        gbc.writeMem(0x11d9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7f26);
        EXPECT(gbc.pc(), 0x11db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0042
        gbc.setState(0x4f68, 0xa9a0, 0xbd70, 0x899b, 0xec8e, 0xbed9, 0x0, 0x1);
        gbc.writeMem(0x4f68, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa9a0);
        EXPECT(gbc.pc(), 0x4f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0043
        gbc.setState(0x4092, 0x3545, 0xb80, 0xaec7, 0xccb3, 0x4044, 0x1, 0x0);
        gbc.writeMem(0x4092, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3545);
        EXPECT(gbc.pc(), 0x4094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0044
        gbc.setState(0x8bf7, 0x5a8b, 0x5b40, 0xc031, 0x7863, 0x66a9, 0x0, 0x1);
        gbc.writeMem(0x8bf7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5a8b);
        EXPECT(gbc.pc(), 0x8bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bf7), 0xcb);
        EXPECT(gbc.readMem(0x8bf8), 0xfd);
        // CB FD 0045
        gbc.setState(0x8afa, 0x432e, 0x4d0, 0xc80, 0xd4e5, 0x1234, 0x0, 0x1);
        gbc.writeMem(0x8afa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x432e);
        EXPECT(gbc.pc(), 0x8afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8afa), 0xcb);
        EXPECT(gbc.readMem(0x8afb), 0xfd);
        // CB FD 0046
        gbc.setState(0x387d, 0xa8c2, 0xdcd0, 0x7201, 0xc648, 0x728e, 0x0, 0x0);
        gbc.writeMem(0x387d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa8c2);
        EXPECT(gbc.pc(), 0x387f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0047
        gbc.setState(0x1434, 0xfa96, 0x2df0, 0xef3e, 0xabea, 0xe950, 0x0, 0x1);
        gbc.writeMem(0x1434, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfa96);
        EXPECT(gbc.pc(), 0x1436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0048
        gbc.setState(0xa94a, 0xff1a, 0x6940, 0x2979, 0xab7c, 0x5572, 0x0, 0x1);
        gbc.writeMem(0xa94a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xff1a);
        EXPECT(gbc.pc(), 0xa94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa94a), 0xcb);
        EXPECT(gbc.readMem(0xa94b), 0xfd);
        // CB FD 0049
        gbc.setState(0xdcf9, 0xe3b5, 0xd190, 0xdb3e, 0x2ebe, 0xd0ce, 0x0, 0x0);
        gbc.writeMem(0xdcf9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe3b5);
        EXPECT(gbc.pc(), 0xdcfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf9), 0xcb);
        EXPECT(gbc.readMem(0xdcfa), 0xfd);
        // CB FD 004A
        gbc.setState(0xe116, 0xa68e, 0xfd0, 0x9011, 0x7a99, 0x49db, 0x0, 0x0);
        gbc.writeMem(0xe116, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa68e);
        EXPECT(gbc.pc(), 0xe118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe116), 0xcb);
        EXPECT(gbc.readMem(0xe117), 0xfd);
        // CB FD 004B
        gbc.setState(0x1ded, 0x4e38, 0xdfa0, 0x5c23, 0xccc5, 0x433, 0x0, 0x0);
        gbc.writeMem(0x1ded, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4e38);
        EXPECT(gbc.pc(), 0x1def);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 004C
        gbc.setState(0xab4f, 0x291, 0x1b70, 0xcd7d, 0xb9, 0x569e, 0x1, 0x1);
        gbc.writeMem(0xab4f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x291);
        EXPECT(gbc.pc(), 0xab51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab4f), 0xcb);
        EXPECT(gbc.readMem(0xab50), 0xfd);
        // CB FD 004D
        gbc.setState(0x134f, 0xc2be, 0x7b70, 0x395f, 0x5db1, 0xcb35, 0x0, 0x0);
        gbc.writeMem(0x134f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc2be);
        EXPECT(gbc.pc(), 0x1351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 004E
        gbc.setState(0x192d, 0x35c4, 0x5e00, 0xa129, 0xdbe8, 0xe71d, 0x0, 0x1);
        gbc.writeMem(0x192d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x35c4);
        EXPECT(gbc.pc(), 0x192f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 004F
        gbc.setState(0x205e, 0x4610, 0xef20, 0x404e, 0xa2b6, 0x35d5, 0x0, 0x1);
        gbc.writeMem(0x205e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4610);
        EXPECT(gbc.pc(), 0x2060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0051
        gbc.setState(0x5311, 0xd3a7, 0x2950, 0xed1b, 0x376a, 0x80a1, 0x1, 0x1);
        gbc.writeMem(0x5311, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd3a7);
        EXPECT(gbc.pc(), 0x5313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0052
        gbc.setState(0xbfa, 0x7c69, 0x5b50, 0xb904, 0x85e3, 0x2b0a, 0x1, 0x0);
        gbc.writeMem(0xbfa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7c69);
        EXPECT(gbc.pc(), 0xbfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0053
        gbc.setState(0x63cb, 0x7a33, 0x4230, 0x4d95, 0x45e5, 0x4aac, 0x0, 0x1);
        gbc.writeMem(0x63cb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7a33);
        EXPECT(gbc.pc(), 0x63cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0054
        gbc.setState(0x81da, 0xcb71, 0xcbc0, 0xbf3f, 0x7319, 0x463d, 0x0, 0x1);
        gbc.writeMem(0x81da, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcb71);
        EXPECT(gbc.pc(), 0x81dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81da), 0xcb);
        EXPECT(gbc.readMem(0x81db), 0xfd);
        // CB FD 0055
        gbc.setState(0x780b, 0x9708, 0xc5e0, 0xc8d8, 0x4c5f, 0x6a2e, 0x0, 0x0);
        gbc.writeMem(0x780b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9708);
        EXPECT(gbc.pc(), 0x780d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0056
        gbc.setState(0xe6e, 0xc95e, 0x2470, 0x526d, 0x39ca, 0xfdea, 0x0, 0x1);
        gbc.writeMem(0xe6e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc95e);
        EXPECT(gbc.pc(), 0xe70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0057
        gbc.setState(0xec92, 0xd45d, 0xcde0, 0xea64, 0xd72f, 0xbb77, 0x0, 0x0);
        gbc.writeMem(0xec92, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd45d);
        EXPECT(gbc.pc(), 0xec94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec92), 0xcb);
        EXPECT(gbc.readMem(0xec93), 0xfd);
        // CB FD 0058
        gbc.setState(0xe83e, 0x3a57, 0x1ca0, 0x86a, 0x72c, 0xc57b, 0x1, 0x1);
        gbc.writeMem(0xe83e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x3a57);
        EXPECT(gbc.pc(), 0xe840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe83e), 0xcb);
        EXPECT(gbc.readMem(0xe83f), 0xfd);
        // CB FD 0059
        gbc.setState(0xa0f5, 0xd004, 0x8b50, 0xa18d, 0xb9b2, 0x7a2c, 0x0, 0x0);
        gbc.writeMem(0xa0f5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd004);
        EXPECT(gbc.pc(), 0xa0f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f5), 0xcb);
        EXPECT(gbc.readMem(0xa0f6), 0xfd);
        // CB FD 005A
        gbc.setState(0x851f, 0x82cb, 0xa0c0, 0x2209, 0x1823, 0x4dc8, 0x1, 0x1);
        gbc.writeMem(0x851f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x82cb);
        EXPECT(gbc.pc(), 0x8521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851f), 0xcb);
        EXPECT(gbc.readMem(0x8520), 0xfd);
        // CB FD 005C
        gbc.setState(0x86cf, 0xc3c, 0xb270, 0x7bc, 0x5696, 0x79aa, 0x1, 0x1);
        gbc.writeMem(0x86cf, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc3c);
        EXPECT(gbc.pc(), 0x86d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86cf), 0xcb);
        EXPECT(gbc.readMem(0x86d0), 0xfd);
        // CB FD 005D
        gbc.setState(0xbec9, 0xf215, 0x8c40, 0x3163, 0x60c6, 0x7910, 0x0, 0x1);
        gbc.writeMem(0xbec9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf215);
        EXPECT(gbc.pc(), 0xbecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec9), 0xcb);
        EXPECT(gbc.readMem(0xbeca), 0xfd);
        // CB FD 005E
        gbc.setState(0x8e6d, 0xe0f5, 0xa550, 0xdac9, 0x673e, 0xba4f, 0x0, 0x0);
        gbc.writeMem(0x8e6d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe0f5);
        EXPECT(gbc.pc(), 0x8e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e6d), 0xcb);
        EXPECT(gbc.readMem(0x8e6e), 0xfd);
        // CB FD 005F
        gbc.setState(0x4a71, 0x64a8, 0xb080, 0x3e83, 0x3402, 0x6dea, 0x0, 0x1);
        gbc.writeMem(0x4a71, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x64a8);
        EXPECT(gbc.pc(), 0x4a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0060
        gbc.setState(0x3c8f, 0x523b, 0x2280, 0x372a, 0x3ab8, 0x25eb, 0x1, 0x1);
        gbc.writeMem(0x3c8f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x523b);
        EXPECT(gbc.pc(), 0x3c91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0061
        gbc.setState(0x691c, 0x1e92, 0x7560, 0x19c4, 0x993c, 0x3815, 0x1, 0x0);
        gbc.writeMem(0x691c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1e92);
        EXPECT(gbc.pc(), 0x691e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0062
        gbc.setState(0xc27d, 0xf6b, 0xdb70, 0x6154, 0xf636, 0xe5f4, 0x0, 0x0);
        gbc.writeMem(0xc27d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf6b);
        EXPECT(gbc.pc(), 0xc27f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc27d), 0xcb);
        EXPECT(gbc.readMem(0xc27e), 0xfd);
        // CB FD 0063
        gbc.setState(0xb662, 0x7a31, 0x90c0, 0x8752, 0x48ec, 0x6b85, 0x1, 0x1);
        gbc.writeMem(0xb662, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7a31);
        EXPECT(gbc.pc(), 0xb664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb662), 0xcb);
        EXPECT(gbc.readMem(0xb663), 0xfd);
        // CB FD 0064
        gbc.setState(0xd3e8, 0x83ba, 0x5390, 0x2a6e, 0xf178, 0x20db, 0x0, 0x0);
        gbc.writeMem(0xd3e8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x83ba);
        EXPECT(gbc.pc(), 0xd3ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3e8), 0xcb);
        EXPECT(gbc.readMem(0xd3e9), 0xfd);
        // CB FD 0065
        gbc.setState(0x7fc7, 0x4e93, 0x8050, 0xef1e, 0xdaa4, 0xbdae, 0x0, 0x1);
        gbc.writeMem(0x7fc7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4e93);
        EXPECT(gbc.pc(), 0x7fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0066
        gbc.setState(0x1200, 0x8af3, 0xd520, 0x3f82, 0x2d05, 0xcd4, 0x1, 0x0);
        gbc.writeMem(0x1200, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8af3);
        EXPECT(gbc.pc(), 0x1202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0067
        gbc.setState(0xb0bd, 0x3ce1, 0x29d0, 0x2197, 0x1b75, 0xc6cf, 0x0, 0x1);
        gbc.writeMem(0xb0bd, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3ce1);
        EXPECT(gbc.pc(), 0xb0bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0bd), 0xcb);
        EXPECT(gbc.readMem(0xb0be), 0xfd);
        // CB FD 0068
        gbc.setState(0x298, 0xc463, 0x5aa0, 0xbf8e, 0x38f, 0xbd9, 0x0, 0x1);
        gbc.writeMem(0x298, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc463);
        EXPECT(gbc.pc(), 0x29a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0069
        gbc.setState(0xcb1c, 0xd5f1, 0x8000, 0x8f84, 0x858d, 0x1a5c, 0x0, 0x1);
        gbc.writeMem(0xcb1c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd5f1);
        EXPECT(gbc.pc(), 0xcb1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb1c), 0xcb);
        EXPECT(gbc.readMem(0xcb1d), 0xfd);
        // CB FD 006A
        gbc.setState(0x466e, 0xcf50, 0x28b0, 0xeaeb, 0x910a, 0x632c, 0x1, 0x1);
        gbc.writeMem(0x466e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcf50);
        EXPECT(gbc.pc(), 0x4670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 006B
        gbc.setState(0x3a92, 0xae, 0x9060, 0xf565, 0x993, 0x5d05, 0x0, 0x0);
        gbc.writeMem(0x3a92, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xae);
        EXPECT(gbc.pc(), 0x3a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 006C
        gbc.setState(0xb695, 0x810d, 0x7d40, 0xe0de, 0x8435, 0x12e2, 0x1, 0x0);
        gbc.writeMem(0xb695, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x810d);
        EXPECT(gbc.pc(), 0xb697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb695), 0xcb);
        EXPECT(gbc.readMem(0xb696), 0xfd);
        // CB FD 006D
        gbc.setState(0x90a4, 0xba28, 0x37d0, 0x9800, 0x6a13, 0xd725, 0x0, 0x0);
        gbc.writeMem(0x90a4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xba28);
        EXPECT(gbc.pc(), 0x90a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a4), 0xcb);
        EXPECT(gbc.readMem(0x90a5), 0xfd);
        // CB FD 006E
        gbc.setState(0xb20e, 0x7edd, 0x8c60, 0x472f, 0x1a2f, 0x7e4d, 0x1, 0x0);
        gbc.writeMem(0xb20e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7edd);
        EXPECT(gbc.pc(), 0xb210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20e), 0xcb);
        EXPECT(gbc.readMem(0xb20f), 0xfd);
        // CB FD 006F
        gbc.setState(0x2d8b, 0x7441, 0xf970, 0x1dfd, 0x82c, 0xb86e, 0x0, 0x1);
        gbc.writeMem(0x2d8b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7441);
        EXPECT(gbc.pc(), 0x2d8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0070
        gbc.setState(0x9885, 0xdd74, 0x4d10, 0x9a78, 0x32ef, 0x9917, 0x0, 0x1);
        gbc.writeMem(0x9885, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdd74);
        EXPECT(gbc.pc(), 0x9887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9885), 0xcb);
        EXPECT(gbc.readMem(0x9886), 0xfd);
        // CB FD 0071
        gbc.setState(0x3936, 0x5dc7, 0xacc0, 0x526a, 0xd3c, 0x1552, 0x1, 0x0);
        gbc.writeMem(0x3936, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5dc7);
        EXPECT(gbc.pc(), 0x3938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0073
        gbc.setState(0x3e47, 0x7b38, 0x8640, 0xe40c, 0x88ab, 0x2715, 0x1, 0x0);
        gbc.writeMem(0x3e47, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7b38);
        EXPECT(gbc.pc(), 0x3e49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0074
        gbc.setState(0x9577, 0xdbff, 0x3990, 0x5ed7, 0x39c5, 0x2c63, 0x1, 0x1);
        gbc.writeMem(0x9577, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xdbff);
        EXPECT(gbc.pc(), 0x9579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9577), 0xcb);
        EXPECT(gbc.readMem(0x9578), 0xfd);
        // CB FD 0075
        gbc.setState(0x3f92, 0x3520, 0x61e0, 0x25c0, 0x36d3, 0x28ed, 0x1, 0x1);
        gbc.writeMem(0x3f92, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3520);
        EXPECT(gbc.pc(), 0x3f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0077
        gbc.setState(0x3510, 0xbcfc, 0x23d0, 0x478b, 0xe8f4, 0x2438, 0x0, 0x1);
        gbc.writeMem(0x3510, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbcfc);
        EXPECT(gbc.pc(), 0x3512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0079
        gbc.setState(0x46f3, 0xdeb3, 0xc6f0, 0x452d, 0x375b, 0xab7f, 0x1, 0x0);
        gbc.writeMem(0x46f3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdeb3);
        EXPECT(gbc.pc(), 0x46f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 007A
        gbc.setState(0x1e50, 0x374d, 0xf4a0, 0x2a00, 0xc41a, 0x54f5, 0x1, 0x0);
        gbc.writeMem(0x1e50, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x374d);
        EXPECT(gbc.pc(), 0x1e52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 007B
        gbc.setState(0x829a, 0x7952, 0xbd30, 0x3244, 0x4537, 0x17b5, 0x0, 0x0);
        gbc.writeMem(0x829a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7952);
        EXPECT(gbc.pc(), 0x829c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x829a), 0xcb);
        EXPECT(gbc.readMem(0x829b), 0xfd);
        // CB FD 007C
        gbc.setState(0x2446, 0x2ca8, 0xdae0, 0x19c6, 0x68fa, 0x750a, 0x1, 0x1);
        gbc.writeMem(0x2446, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2ca8);
        EXPECT(gbc.pc(), 0x2448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 007D
        gbc.setState(0x1394, 0x8b74, 0xf240, 0x2ac3, 0x6d75, 0x622c, 0x1, 0x0);
        gbc.writeMem(0x1394, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8b74);
        EXPECT(gbc.pc(), 0x1396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 007E
        gbc.setState(0xeec3, 0xf282, 0x8b0, 0x7ad3, 0xf4b3, 0xd762, 0x0, 0x0);
        gbc.writeMem(0xeec3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf282);
        EXPECT(gbc.pc(), 0xeec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec3), 0xcb);
        EXPECT(gbc.readMem(0xeec4), 0xfd);
        // CB FD 007F
        gbc.setState(0x9f29, 0xace, 0x2f50, 0x8425, 0x2580, 0xa857, 0x1, 0x1);
        gbc.writeMem(0x9f29, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xace);
        EXPECT(gbc.pc(), 0x9f2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f29), 0xcb);
        EXPECT(gbc.readMem(0x9f2a), 0xfd);
        // CB FD 0081
        gbc.setState(0x85d6, 0x1d12, 0x3bf0, 0x4ac2, 0xe8ef, 0x20aa, 0x1, 0x0);
        gbc.writeMem(0x85d6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1d12);
        EXPECT(gbc.pc(), 0x85d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d6), 0xcb);
        EXPECT(gbc.readMem(0x85d7), 0xfd);
        // CB FD 0082
        gbc.setState(0x10f9, 0x4bd3, 0x23f0, 0x2c0d, 0xaba6, 0x18ec, 0x0, 0x0);
        gbc.writeMem(0x10f9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4bd3);
        EXPECT(gbc.pc(), 0x10fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0083
        gbc.setState(0x6ab1, 0x134, 0x4910, 0x93a8, 0xaf5, 0xad16, 0x1, 0x0);
        gbc.writeMem(0x6ab1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x134);
        EXPECT(gbc.pc(), 0x6ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0084
        gbc.setState(0x4498, 0x2a99, 0xff70, 0x8edc, 0x1c86, 0x7a58, 0x0, 0x0);
        gbc.writeMem(0x4498, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2a99);
        EXPECT(gbc.pc(), 0x449a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0085
        gbc.setState(0x3ccd, 0x95b0, 0x5320, 0xddeb, 0xb924, 0x99a3, 0x1, 0x1);
        gbc.writeMem(0x3ccd, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x95b0);
        EXPECT(gbc.pc(), 0x3ccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0086
        gbc.setState(0xbd5c, 0x7bbf, 0xce50, 0x6ffc, 0x302b, 0x1c98, 0x0, 0x1);
        gbc.writeMem(0xbd5c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7bbf);
        EXPECT(gbc.pc(), 0xbd5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5c), 0xcb);
        EXPECT(gbc.readMem(0xbd5d), 0xfd);
        // CB FD 0087
        gbc.setState(0xe88f, 0x5fbc, 0xf70, 0x15b6, 0x40b, 0xb7cb, 0x1, 0x0);
        gbc.writeMem(0xe88f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5fbc);
        EXPECT(gbc.pc(), 0xe891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88f), 0xcb);
        EXPECT(gbc.readMem(0xe890), 0xfd);
        // CB FD 0088
        gbc.setState(0x457d, 0xf4f4, 0x18c0, 0x5746, 0x590e, 0xdee4, 0x0, 0x1);
        gbc.writeMem(0x457d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf4f4);
        EXPECT(gbc.pc(), 0x457f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0089
        gbc.setState(0xd97, 0xbca7, 0x76b0, 0x647c, 0xfb16, 0x4e34, 0x1, 0x0);
        gbc.writeMem(0xd97, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbca7);
        EXPECT(gbc.pc(), 0xd99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 008A
        gbc.setState(0xb3b7, 0xd3be, 0x80d0, 0xa799, 0x3c62, 0xc956, 0x1, 0x0);
        gbc.writeMem(0xb3b7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd3be);
        EXPECT(gbc.pc(), 0xb3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b7), 0xcb);
        EXPECT(gbc.readMem(0xb3b8), 0xfd);
        // CB FD 008B
        gbc.setState(0x9c1d, 0x9b6a, 0x8c20, 0xd1fe, 0x7e91, 0xd57b, 0x1, 0x1);
        gbc.writeMem(0x9c1d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9b6a);
        EXPECT(gbc.pc(), 0x9c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1d), 0xcb);
        EXPECT(gbc.readMem(0x9c1e), 0xfd);
        // CB FD 008C
        gbc.setState(0xdca3, 0x8e6b, 0xb1a0, 0x1f91, 0x5e89, 0x2054, 0x1, 0x1);
        gbc.writeMem(0xdca3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8e6b);
        EXPECT(gbc.pc(), 0xdca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca3), 0xcb);
        EXPECT(gbc.readMem(0xdca4), 0xfd);
        // CB FD 008D
        gbc.setState(0xc054, 0x8b9f, 0x3580, 0x50f8, 0xffe0, 0xc41a, 0x1, 0x0);
        gbc.writeMem(0xc054, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8b9f);
        EXPECT(gbc.pc(), 0xc056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc054), 0xcb);
        EXPECT(gbc.readMem(0xc055), 0xfd);
        // CB FD 008E
        gbc.setState(0x1e59, 0x1374, 0x1360, 0xe4, 0x7ad, 0xf934, 0x1, 0x0);
        gbc.writeMem(0x1e59, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1374);
        EXPECT(gbc.pc(), 0x1e5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 008F
        gbc.setState(0xc51e, 0x1d54, 0xbc10, 0x3381, 0xd2d, 0x64e8, 0x1, 0x0);
        gbc.writeMem(0xc51e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1d54);
        EXPECT(gbc.pc(), 0xc520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc51e), 0xcb);
        EXPECT(gbc.readMem(0xc51f), 0xfd);
        // CB FD 0090
        gbc.setState(0x1c6c, 0x9878, 0x76f0, 0xed29, 0x8cd3, 0xc89c, 0x1, 0x1);
        gbc.writeMem(0x1c6c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9878);
        EXPECT(gbc.pc(), 0x1c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0091
        gbc.setState(0x80a, 0x1f58, 0x7680, 0x72ce, 0x6f79, 0x18, 0x0, 0x0);
        gbc.writeMem(0x80a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1f58);
        EXPECT(gbc.pc(), 0x80c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0092
        gbc.setState(0x14b8, 0x55bd, 0x6d20, 0xa3ca, 0xf411, 0x947e, 0x1, 0x1);
        gbc.writeMem(0x14b8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x55bd);
        EXPECT(gbc.pc(), 0x14ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0093
        gbc.setState(0x7022, 0xe32f, 0x2230, 0xb202, 0xa3e3, 0x96f4, 0x0, 0x0);
        gbc.writeMem(0x7022, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe32f);
        EXPECT(gbc.pc(), 0x7024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0094
        gbc.setState(0xa0ec, 0xb494, 0x75f0, 0x91fa, 0xd800, 0x4e55, 0x0, 0x1);
        gbc.writeMem(0xa0ec, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb494);
        EXPECT(gbc.pc(), 0xa0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ec), 0xcb);
        EXPECT(gbc.readMem(0xa0ed), 0xfd);
        // CB FD 0095
        gbc.setState(0x8924, 0x9998, 0x3ad0, 0x7e01, 0x674b, 0x7c0f, 0x0, 0x1);
        gbc.writeMem(0x8924, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9998);
        EXPECT(gbc.pc(), 0x8926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8924), 0xcb);
        EXPECT(gbc.readMem(0x8925), 0xfd);
        // CB FD 0096
        gbc.setState(0x80ce, 0x3af0, 0x13b0, 0x2788, 0x7ca3, 0xffe6, 0x1, 0x0);
        gbc.writeMem(0x80ce, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3af0);
        EXPECT(gbc.pc(), 0x80d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80ce), 0xcb);
        EXPECT(gbc.readMem(0x80cf), 0xfd);
        // CB FD 0098
        gbc.setState(0x7600, 0x9681, 0xae60, 0x16a2, 0xf127, 0x6d4a, 0x1, 0x0);
        gbc.writeMem(0x7600, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9681);
        EXPECT(gbc.pc(), 0x7602);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0099
        gbc.setState(0x609e, 0xa467, 0x4d50, 0xfbcf, 0x9bd9, 0xcb0d, 0x0, 0x1);
        gbc.writeMem(0x609e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa467);
        EXPECT(gbc.pc(), 0x60a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 009A
        gbc.setState(0xa658, 0x265b, 0xa7e0, 0xd47e, 0xf1f8, 0x7028, 0x1, 0x1);
        gbc.writeMem(0xa658, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x265b);
        EXPECT(gbc.pc(), 0xa65a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa658), 0xcb);
        EXPECT(gbc.readMem(0xa659), 0xfd);
        // CB FD 009B
        gbc.setState(0xe106, 0xd126, 0x90e0, 0xc2bd, 0xc9ac, 0x2ba4, 0x1, 0x1);
        gbc.writeMem(0xe106, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd126);
        EXPECT(gbc.pc(), 0xe108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe106), 0xcb);
        EXPECT(gbc.readMem(0xe107), 0xfd);
        // CB FD 009C
        gbc.setState(0xc7f2, 0x9940, 0xc050, 0xf7eb, 0xbb81, 0x7b7b, 0x0, 0x0);
        gbc.writeMem(0xc7f2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9940);
        EXPECT(gbc.pc(), 0xc7f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7f2), 0xcb);
        EXPECT(gbc.readMem(0xc7f3), 0xfd);
        // CB FD 009D
        gbc.setState(0xc58, 0xd9ac, 0x4d30, 0x45ab, 0x901b, 0x9036, 0x1, 0x0);
        gbc.writeMem(0xc58, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd9ac);
        EXPECT(gbc.pc(), 0xc5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 009E
        gbc.setState(0x8d09, 0xe3fc, 0x8560, 0xe2f0, 0xf4e1, 0xfa92, 0x0, 0x1);
        gbc.writeMem(0x8d09, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe3fc);
        EXPECT(gbc.pc(), 0x8d0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d09), 0xcb);
        EXPECT(gbc.readMem(0x8d0a), 0xfd);
        // CB FD 009F
        gbc.setState(0x21e, 0x3418, 0x7ec0, 0xb6f, 0x4f3, 0xbe16, 0x1, 0x1);
        gbc.writeMem(0x21e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3418);
        EXPECT(gbc.pc(), 0x220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00A0
        gbc.setState(0x3a6f, 0x90a, 0x9bc0, 0xc394, 0x76da, 0x7ccb, 0x1, 0x1);
        gbc.writeMem(0x3a6f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x90a);
        EXPECT(gbc.pc(), 0x3a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00A1
        gbc.setState(0xa13c, 0xdd83, 0xbe20, 0x4377, 0xc866, 0x2dee, 0x1, 0x1);
        gbc.writeMem(0xa13c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdd83);
        EXPECT(gbc.pc(), 0xa13e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa13c), 0xcb);
        EXPECT(gbc.readMem(0xa13d), 0xfd);
        // CB FD 00A2
        gbc.setState(0x1e60, 0xa6be, 0xb2b0, 0xd6e8, 0x8078, 0xbe1, 0x0, 0x0);
        gbc.writeMem(0x1e60, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa6be);
        EXPECT(gbc.pc(), 0x1e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00A3
        gbc.setState(0x9331, 0xd312, 0x9180, 0xeb2, 0x1d72, 0xd3a0, 0x1, 0x1);
        gbc.writeMem(0x9331, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd312);
        EXPECT(gbc.pc(), 0x9333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9331), 0xcb);
        EXPECT(gbc.readMem(0x9332), 0xfd);
        // CB FD 00A4
        gbc.setState(0xb9b7, 0xf23b, 0xf6c0, 0x87a0, 0x9409, 0x3fb2, 0x0, 0x1);
        gbc.writeMem(0xb9b7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf23b);
        EXPECT(gbc.pc(), 0xb9b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b7), 0xcb);
        EXPECT(gbc.readMem(0xb9b8), 0xfd);
        // CB FD 00A6
        gbc.setState(0xedb8, 0x1494, 0x98e0, 0xa813, 0x8418, 0xed8, 0x1, 0x0);
        gbc.writeMem(0xedb8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1494);
        EXPECT(gbc.pc(), 0xedba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb8), 0xcb);
        EXPECT(gbc.readMem(0xedb9), 0xfd);
        // CB FD 00A7
        gbc.setState(0x953d, 0x2fb, 0x5bf0, 0x197f, 0x8412, 0x3ee1, 0x1, 0x0);
        gbc.writeMem(0x953d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x2fb);
        EXPECT(gbc.pc(), 0x953f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x953d), 0xcb);
        EXPECT(gbc.readMem(0x953e), 0xfd);
        // CB FD 00A8
        gbc.setState(0x20ed, 0xee1e, 0x2440, 0x6ded, 0x8743, 0xb2e1, 0x1, 0x0);
        gbc.writeMem(0x20ed, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xee1e);
        EXPECT(gbc.pc(), 0x20ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00A9
        gbc.setState(0x2592, 0x590b, 0x2d10, 0x5350, 0x8833, 0xdb74, 0x1, 0x0);
        gbc.writeMem(0x2592, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x590b);
        EXPECT(gbc.pc(), 0x2594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00AA
        gbc.setState(0xa80d, 0x864e, 0x5c0, 0xcc4, 0x70ad, 0xbc94, 0x0, 0x0);
        gbc.writeMem(0xa80d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x864e);
        EXPECT(gbc.pc(), 0xa80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa80d), 0xcb);
        EXPECT(gbc.readMem(0xa80e), 0xfd);
        // CB FD 00AB
        gbc.setState(0xd64e, 0x35f7, 0x7340, 0xf26b, 0x11ae, 0x83cc, 0x1, 0x1);
        gbc.writeMem(0xd64e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x35f7);
        EXPECT(gbc.pc(), 0xd650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd64e), 0xcb);
        EXPECT(gbc.readMem(0xd64f), 0xfd);
        // CB FD 00AC
        gbc.setState(0xdb69, 0xe2aa, 0xea60, 0xf2e3, 0x9769, 0x136b, 0x1, 0x1);
        gbc.writeMem(0xdb69, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe2aa);
        EXPECT(gbc.pc(), 0xdb6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb69), 0xcb);
        EXPECT(gbc.readMem(0xdb6a), 0xfd);
        // CB FD 00AD
        gbc.setState(0xd1c3, 0x3189, 0x8520, 0xd30b, 0xc2a2, 0x2908, 0x1, 0x0);
        gbc.writeMem(0xd1c3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3189);
        EXPECT(gbc.pc(), 0xd1c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c3), 0xcb);
        EXPECT(gbc.readMem(0xd1c4), 0xfd);
        // CB FD 00AF
        gbc.setState(0x2ed5, 0x3d8d, 0x5ca0, 0xcb2, 0x4e98, 0x2dbc, 0x0, 0x0);
        gbc.writeMem(0x2ed5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3d8d);
        EXPECT(gbc.pc(), 0x2ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00B0
        gbc.setState(0x5aac, 0x60e4, 0x2980, 0x7dbe, 0x9c8f, 0xf853, 0x1, 0x0);
        gbc.writeMem(0x5aac, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x60e4);
        EXPECT(gbc.pc(), 0x5aae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00B1
        gbc.setState(0xbff6, 0x701c, 0x69b0, 0x7877, 0x95cc, 0x155c, 0x1, 0x1);
        gbc.writeMem(0xbff6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x701c);
        EXPECT(gbc.pc(), 0xbff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff6), 0xcb);
        EXPECT(gbc.readMem(0xbff7), 0xfd);
        // CB FD 00B2
        gbc.setState(0xe1ab, 0x94ca, 0xb5d0, 0xe0ae, 0x8c73, 0x6f9a, 0x0, 0x0);
        gbc.writeMem(0xe1ab, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x94ca);
        EXPECT(gbc.pc(), 0xe1ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ab), 0xcb);
        EXPECT(gbc.readMem(0xe1ac), 0xfd);
        // CB FD 00B3
        gbc.setState(0xc03d, 0x9556, 0x6540, 0x1aa3, 0x9e72, 0x7aa1, 0x0, 0x0);
        gbc.writeMem(0xc03d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9556);
        EXPECT(gbc.pc(), 0xc03f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03d), 0xcb);
        EXPECT(gbc.readMem(0xc03e), 0xfd);
        // CB FD 00B4
        gbc.setState(0x605c, 0x1714, 0xbc70, 0xd95f, 0x99c8, 0x5e3, 0x0, 0x0);
        gbc.writeMem(0x605c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1714);
        EXPECT(gbc.pc(), 0x605e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00B5
        gbc.setState(0xe62c, 0xfe32, 0x1ca0, 0x90ed, 0xef42, 0xfe45, 0x1, 0x1);
        gbc.writeMem(0xe62c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfe32);
        EXPECT(gbc.pc(), 0xe62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe62c), 0xcb);
        EXPECT(gbc.readMem(0xe62d), 0xfd);
        // CB FD 00B6
        gbc.setState(0x8f90, 0x36f3, 0xc0, 0xd93c, 0xfa59, 0x7548, 0x0, 0x1);
        gbc.writeMem(0x8f90, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x36f3);
        EXPECT(gbc.pc(), 0x8f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f90), 0xcb);
        EXPECT(gbc.readMem(0x8f91), 0xfd);
        // CB FD 00B7
        gbc.setState(0xd62c, 0xb301, 0xf460, 0x3a14, 0x25a8, 0xa09e, 0x0, 0x0);
        gbc.writeMem(0xd62c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb301);
        EXPECT(gbc.pc(), 0xd62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62c), 0xcb);
        EXPECT(gbc.readMem(0xd62d), 0xfd);
        // CB FD 00B8
        gbc.setState(0x3662, 0x9948, 0xbdf0, 0xe8be, 0x8327, 0xe86f, 0x0, 0x0);
        gbc.writeMem(0x3662, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9948);
        EXPECT(gbc.pc(), 0x3664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00B9
        gbc.setState(0xba35, 0x53f1, 0xff60, 0x63fb, 0xcd2f, 0x215c, 0x0, 0x0);
        gbc.writeMem(0xba35, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x53f1);
        EXPECT(gbc.pc(), 0xba37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba35), 0xcb);
        EXPECT(gbc.readMem(0xba36), 0xfd);
        // CB FD 00BA
        gbc.setState(0x45f8, 0x1f05, 0xbe70, 0xd8e, 0xa52e, 0xb311, 0x0, 0x0);
        gbc.writeMem(0x45f8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1f05);
        EXPECT(gbc.pc(), 0x45fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00BB
        gbc.setState(0xcf57, 0x8be2, 0xb9a0, 0xd898, 0xc5ec, 0x8f4e, 0x1, 0x1);
        gbc.writeMem(0xcf57, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8be2);
        EXPECT(gbc.pc(), 0xcf59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf57), 0xcb);
        EXPECT(gbc.readMem(0xcf58), 0xfd);
        // CB FD 00BC
        gbc.setState(0x632b, 0x42c1, 0xcfe0, 0xe97c, 0xacc5, 0xc60, 0x0, 0x0);
        gbc.writeMem(0x632b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x42c1);
        EXPECT(gbc.pc(), 0x632d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00BD
        gbc.setState(0x7367, 0x83b6, 0xb8a0, 0x10, 0x9d87, 0x648e, 0x0, 0x1);
        gbc.writeMem(0x7367, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x83b6);
        EXPECT(gbc.pc(), 0x7369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00BF
        gbc.setState(0x4d13, 0x9b3e, 0x3ec0, 0xc795, 0x6f1a, 0xa920, 0x1, 0x1);
        gbc.writeMem(0x4d13, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9b3e);
        EXPECT(gbc.pc(), 0x4d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00C0
        gbc.setState(0xe4fb, 0x4c4e, 0x4390, 0xf9c6, 0xca9b, 0xe438, 0x0, 0x1);
        gbc.writeMem(0xe4fb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4c4e);
        EXPECT(gbc.pc(), 0xe4fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4fb), 0xcb);
        EXPECT(gbc.readMem(0xe4fc), 0xfd);
        // CB FD 00C1
        gbc.setState(0xca2, 0xfc5c, 0xcd00, 0xdbed, 0xddc8, 0x7518, 0x1, 0x0);
        gbc.writeMem(0xca2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfc5c);
        EXPECT(gbc.pc(), 0xca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00C3
        gbc.setState(0xaa16, 0xa24c, 0xa0, 0x39bf, 0xa8ae, 0xc564, 0x1, 0x0);
        gbc.writeMem(0xaa16, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa24c);
        EXPECT(gbc.pc(), 0xaa18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa16), 0xcb);
        EXPECT(gbc.readMem(0xaa17), 0xfd);
        // CB FD 00C4
        gbc.setState(0x82ab, 0x2bf8, 0x4300, 0xd08d, 0x162b, 0x6063, 0x1, 0x0);
        gbc.writeMem(0x82ab, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2bf8);
        EXPECT(gbc.pc(), 0x82ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ab), 0xcb);
        EXPECT(gbc.readMem(0x82ac), 0xfd);
        // CB FD 00C5
        gbc.setState(0x5da0, 0x1242, 0x3100, 0x7e11, 0xbb40, 0x2ab2, 0x0, 0x1);
        gbc.writeMem(0x5da0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1242);
        EXPECT(gbc.pc(), 0x5da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00C6
        gbc.setState(0xdafa, 0xf10a, 0x2e60, 0xdfa1, 0xe46b, 0xd4e4, 0x1, 0x0);
        gbc.writeMem(0xdafa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf10a);
        EXPECT(gbc.pc(), 0xdafc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdafa), 0xcb);
        EXPECT(gbc.readMem(0xdafb), 0xfd);
        // CB FD 00C7
        gbc.setState(0x6f41, 0xa416, 0x96d0, 0x4e59, 0x9fdf, 0x7a30, 0x1, 0x1);
        gbc.writeMem(0x6f41, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa416);
        EXPECT(gbc.pc(), 0x6f43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00C8
        gbc.setState(0xd080, 0x1fec, 0xabc0, 0xb974, 0x97aa, 0xee75, 0x0, 0x0);
        gbc.writeMem(0xd080, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1fec);
        EXPECT(gbc.pc(), 0xd082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd080), 0xcb);
        EXPECT(gbc.readMem(0xd081), 0xfd);
        // CB FD 00CA
        gbc.setState(0x1c88, 0x5fd9, 0x5010, 0xdfde, 0xa0cb, 0x7ee2, 0x1, 0x1);
        gbc.writeMem(0x1c88, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5fd9);
        EXPECT(gbc.pc(), 0x1c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00CB
        gbc.setState(0xc0cf, 0x457c, 0x860, 0xc3c6, 0x9766, 0x6e50, 0x1, 0x0);
        gbc.writeMem(0xc0cf, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x457c);
        EXPECT(gbc.pc(), 0xc0d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0cf), 0xcb);
        EXPECT(gbc.readMem(0xc0d0), 0xfd);
        // CB FD 00CC
        gbc.setState(0x29e7, 0x6d20, 0x1c90, 0xdb6c, 0xa48, 0x6a00, 0x0, 0x1);
        gbc.writeMem(0x29e7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6d20);
        EXPECT(gbc.pc(), 0x29e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00CD
        gbc.setState(0x2ab7, 0xae8e, 0x30e0, 0x756c, 0x8e3a, 0x2bc1, 0x1, 0x0);
        gbc.writeMem(0x2ab7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xae8e);
        EXPECT(gbc.pc(), 0x2ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00CE
        gbc.setState(0x85cb, 0x566d, 0x57b0, 0x9d5f, 0xcd46, 0x7dbd, 0x1, 0x0);
        gbc.writeMem(0x85cb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x566d);
        EXPECT(gbc.pc(), 0x85cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85cb), 0xcb);
        EXPECT(gbc.readMem(0x85cc), 0xfd);
        // CB FD 00CF
        gbc.setState(0x505f, 0x4d91, 0xbed0, 0xb3ac, 0x5ad8, 0xc24a, 0x0, 0x0);
        gbc.writeMem(0x505f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4d91);
        EXPECT(gbc.pc(), 0x5061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00D0
        gbc.setState(0x1751, 0xaf8e, 0xfd10, 0x8625, 0xdcb, 0x64af, 0x1, 0x0);
        gbc.writeMem(0x1751, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xaf8e);
        EXPECT(gbc.pc(), 0x1753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00D1
        gbc.setState(0x305e, 0x9595, 0x83a0, 0x4515, 0x1c45, 0x3a04, 0x1, 0x1);
        gbc.writeMem(0x305e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9595);
        EXPECT(gbc.pc(), 0x3060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00D2
        gbc.setState(0xad5, 0x9714, 0x55d0, 0xd7f, 0x6e4b, 0xe180, 0x1, 0x1);
        gbc.writeMem(0xad5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9714);
        EXPECT(gbc.pc(), 0xad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00D3
        gbc.setState(0x8142, 0x9934, 0x9aa0, 0x4285, 0x7006, 0xd175, 0x0, 0x0);
        gbc.writeMem(0x8142, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9934);
        EXPECT(gbc.pc(), 0x8144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8142), 0xcb);
        EXPECT(gbc.readMem(0x8143), 0xfd);
        // CB FD 00D4
        gbc.setState(0xc435, 0x321b, 0x9070, 0x82c9, 0x2d0e, 0xbaae, 0x1, 0x0);
        gbc.writeMem(0xc435, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x321b);
        EXPECT(gbc.pc(), 0xc437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc435), 0xcb);
        EXPECT(gbc.readMem(0xc436), 0xfd);
        // CB FD 00D5
        gbc.setState(0x290a, 0x4c18, 0xcc80, 0x8990, 0x94ff, 0x549f, 0x0, 0x1);
        gbc.writeMem(0x290a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4c18);
        EXPECT(gbc.pc(), 0x290c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00D6
        gbc.setState(0xebce, 0x4c4e, 0xf6a0, 0x9557, 0xc500, 0x5301, 0x1, 0x0);
        gbc.writeMem(0xebce, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4c4e);
        EXPECT(gbc.pc(), 0xebd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebce), 0xcb);
        EXPECT(gbc.readMem(0xebcf), 0xfd);
        // CB FD 00D7
        gbc.setState(0x512e, 0x6dcf, 0x4380, 0xe15a, 0xba1b, 0xa201, 0x1, 0x1);
        gbc.writeMem(0x512e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6dcf);
        EXPECT(gbc.pc(), 0x5130);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00D8
        gbc.setState(0xbb60, 0xf635, 0x7240, 0xc116, 0xd335, 0x138c, 0x0, 0x0);
        gbc.writeMem(0xbb60, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf635);
        EXPECT(gbc.pc(), 0xbb62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb60), 0xcb);
        EXPECT(gbc.readMem(0xbb61), 0xfd);
        // CB FD 00D9
        gbc.setState(0x477c, 0x9f84, 0x1a00, 0xc7d0, 0xc5ea, 0x96, 0x1, 0x1);
        gbc.writeMem(0x477c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9f84);
        EXPECT(gbc.pc(), 0x477e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00DA
        gbc.setState(0xb175, 0xaff6, 0x1390, 0x13c1, 0x4ca9, 0x90e2, 0x0, 0x0);
        gbc.writeMem(0xb175, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xaff6);
        EXPECT(gbc.pc(), 0xb177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb175), 0xcb);
        EXPECT(gbc.readMem(0xb176), 0xfd);
        // CB FD 00DB
        gbc.setState(0x8a9b, 0x96c8, 0x2510, 0x6f60, 0x8cf2, 0xd76a, 0x0, 0x1);
        gbc.writeMem(0x8a9b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x96c8);
        EXPECT(gbc.pc(), 0x8a9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a9b), 0xcb);
        EXPECT(gbc.readMem(0x8a9c), 0xfd);
        // CB FD 00DC
        gbc.setState(0xc89d, 0x77c4, 0xa890, 0x9cf6, 0x5a, 0xaa1a, 0x0, 0x1);
        gbc.writeMem(0xc89d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x77c4);
        EXPECT(gbc.pc(), 0xc89f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc89d), 0xcb);
        EXPECT(gbc.readMem(0xc89e), 0xfd);
        // CB FD 00DD
        gbc.setState(0x8671, 0x437c, 0xa060, 0xf37a, 0x7229, 0xc8ff, 0x1, 0x0);
        gbc.writeMem(0x8671, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x437c);
        EXPECT(gbc.pc(), 0x8673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8671), 0xcb);
        EXPECT(gbc.readMem(0x8672), 0xfd);
        // CB FD 00DE
        gbc.setState(0x6b1b, 0x11e1, 0xfa70, 0x5e71, 0xd827, 0x6804, 0x0, 0x1);
        gbc.writeMem(0x6b1b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x11e1);
        EXPECT(gbc.pc(), 0x6b1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00DF
        gbc.setState(0x90be, 0xc64, 0xcc10, 0xca15, 0x1343, 0x4ab9, 0x1, 0x0);
        gbc.writeMem(0x90be, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc64);
        EXPECT(gbc.pc(), 0x90c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90be), 0xcb);
        EXPECT(gbc.readMem(0x90bf), 0xfd);
        // CB FD 00E0
        gbc.setState(0x6e5a, 0xd517, 0x61a0, 0xb407, 0x536b, 0xc808, 0x0, 0x0);
        gbc.writeMem(0x6e5a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd517);
        EXPECT(gbc.pc(), 0x6e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00E1
        gbc.setState(0x7e73, 0xb57a, 0x2b10, 0x6d62, 0x2663, 0x8ce8, 0x1, 0x0);
        gbc.writeMem(0x7e73, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb57a);
        EXPECT(gbc.pc(), 0x7e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00E2
        gbc.setState(0x434c, 0xbf63, 0xd7d0, 0x5e01, 0x3f08, 0xeecf, 0x1, 0x1);
        gbc.writeMem(0x434c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbf63);
        EXPECT(gbc.pc(), 0x434e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00E3
        gbc.setState(0x4b09, 0x8ac, 0xfe80, 0x2f78, 0xb764, 0x8341, 0x0, 0x0);
        gbc.writeMem(0x4b09, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8ac);
        EXPECT(gbc.pc(), 0x4b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00E4
        gbc.setState(0x255e, 0x6138, 0x5340, 0x7fd0, 0xe003, 0x4a23, 0x0, 0x0);
        gbc.writeMem(0x255e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6138);
        EXPECT(gbc.pc(), 0x2560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00E5
        gbc.setState(0xebcd, 0x5ae6, 0x3c10, 0xfff4, 0xd59d, 0x3144, 0x1, 0x0);
        gbc.writeMem(0xebcd, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5ae6);
        EXPECT(gbc.pc(), 0xebcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebcd), 0xcb);
        EXPECT(gbc.readMem(0xebce), 0xfd);
        // CB FD 00E6
        gbc.setState(0x38ec, 0xd300, 0x59c0, 0xa86c, 0xbaf9, 0x489, 0x0, 0x0);
        gbc.writeMem(0x38ec, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd300);
        EXPECT(gbc.pc(), 0x38ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00E7
        gbc.setState(0xef, 0x183d, 0x8b00, 0x430e, 0x67d2, 0x4308, 0x1, 0x0);
        gbc.writeMem(0xef, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x183d);
        EXPECT(gbc.pc(), 0xf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00E8
        gbc.setState(0x611b, 0x5740, 0xab10, 0x5e51, 0xe18c, 0xec66, 0x0, 0x1);
        gbc.writeMem(0x611b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5740);
        EXPECT(gbc.pc(), 0x611d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00E9
        gbc.setState(0xecdf, 0xd7bb, 0x3230, 0xddb8, 0x8b9c, 0xb657, 0x1, 0x0);
        gbc.writeMem(0xecdf, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd7bb);
        EXPECT(gbc.pc(), 0xece1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecdf), 0xcb);
        EXPECT(gbc.readMem(0xece0), 0xfd);
        // CB FD 00EA
        gbc.setState(0x1e28, 0x985c, 0xdbf0, 0xf39, 0x46e9, 0x9623, 0x0, 0x1);
        gbc.writeMem(0x1e28, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x985c);
        EXPECT(gbc.pc(), 0x1e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00EB
        gbc.setState(0x9b62, 0xc654, 0xfdf0, 0x4a68, 0xc5f6, 0x2f63, 0x1, 0x1);
        gbc.writeMem(0x9b62, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc654);
        EXPECT(gbc.pc(), 0x9b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b62), 0xcb);
        EXPECT(gbc.readMem(0x9b63), 0xfd);
        // CB FD 00EC
        gbc.setState(0x2674, 0xc49e, 0x8730, 0xa40c, 0x2acd, 0x7e44, 0x0, 0x0);
        gbc.writeMem(0x2674, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc49e);
        EXPECT(gbc.pc(), 0x2676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00EE
        gbc.setState(0x8083, 0xe754, 0x5ab0, 0xd799, 0x53cd, 0x3ad8, 0x1, 0x0);
        gbc.writeMem(0x8083, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe754);
        EXPECT(gbc.pc(), 0x8085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8083), 0xcb);
        EXPECT(gbc.readMem(0x8084), 0xfd);
        // CB FD 00EF
        gbc.setState(0x227f, 0xafe2, 0x3350, 0x803f, 0x59fe, 0xc6cf, 0x1, 0x0);
        gbc.writeMem(0x227f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xafe2);
        EXPECT(gbc.pc(), 0x2281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00F0
        gbc.setState(0x1a66, 0xefc, 0xc2e0, 0x5452, 0x2bee, 0x39d6, 0x0, 0x1);
        gbc.writeMem(0x1a66, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xefc);
        EXPECT(gbc.pc(), 0x1a68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00F1
        gbc.setState(0x642d, 0x1267, 0x3aa0, 0x1d58, 0xbabe, 0xa96d, 0x0, 0x1);
        gbc.writeMem(0x642d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1267);
        EXPECT(gbc.pc(), 0x642f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00F2
        gbc.setState(0x2b43, 0x821c, 0xb780, 0x5a2e, 0xebc4, 0xf681, 0x1, 0x1);
        gbc.writeMem(0x2b43, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x821c);
        EXPECT(gbc.pc(), 0x2b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00F3
        gbc.setState(0x8f6f, 0xc256, 0xfd20, 0x9d74, 0xf372, 0x4cf7, 0x0, 0x1);
        gbc.writeMem(0x8f6f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc256);
        EXPECT(gbc.pc(), 0x8f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f6f), 0xcb);
        EXPECT(gbc.readMem(0x8f70), 0xfd);
        // CB FD 00F4
        gbc.setState(0x2af0, 0x7ac7, 0xfda0, 0xe987, 0xe4d0, 0xc29e, 0x1, 0x1);
        gbc.writeMem(0x2af0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7ac7);
        EXPECT(gbc.pc(), 0x2af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00F5
        gbc.setState(0xc102, 0x42c9, 0x8810, 0xf3e2, 0x2da6, 0xfeeb, 0x1, 0x1);
        gbc.writeMem(0xc102, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x42c9);
        EXPECT(gbc.pc(), 0xc104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc102), 0xcb);
        EXPECT(gbc.readMem(0xc103), 0xfd);
        // CB FD 00F6
        gbc.setState(0xc9e3, 0xca78, 0x3cf0, 0x735c, 0xafca, 0x671b, 0x1, 0x1);
        gbc.writeMem(0xc9e3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xca78);
        EXPECT(gbc.pc(), 0xc9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e3), 0xcb);
        EXPECT(gbc.readMem(0xc9e4), 0xfd);
        // CB FD 00F7
        gbc.setState(0x6c7c, 0x6f87, 0xd620, 0x5778, 0x6d7, 0x1039, 0x1, 0x1);
        gbc.writeMem(0x6c7c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6f87);
        EXPECT(gbc.pc(), 0x6c7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00F8
        gbc.setState(0x6067, 0xa043, 0xf4f0, 0x8420, 0x6931, 0xdbde, 0x0, 0x0);
        gbc.writeMem(0x6067, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa043);
        EXPECT(gbc.pc(), 0x6069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00F9
        gbc.setState(0x4792, 0xc35, 0x65f0, 0xebb1, 0xe58a, 0xc083, 0x1, 0x1);
        gbc.writeMem(0x4792, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc35);
        EXPECT(gbc.pc(), 0x4794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00FA
        gbc.setState(0x53d, 0xefe6, 0xe830, 0x964f, 0x8975, 0xb918, 0x1, 0x1);
        gbc.writeMem(0x53d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xefe6);
        EXPECT(gbc.pc(), 0x53f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00FB
        gbc.setState(0xbfe6, 0xee9d, 0x8bb0, 0xf6ab, 0x995, 0x13d9, 0x0, 0x1);
        gbc.writeMem(0xbfe6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xee9d);
        EXPECT(gbc.pc(), 0xbfe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe6), 0xcb);
        EXPECT(gbc.readMem(0xbfe7), 0xfd);
        // CB FD 00FC
        gbc.setState(0xafea, 0x21af, 0x6c90, 0x43ee, 0x8d9c, 0x37d4, 0x1, 0x1);
        gbc.writeMem(0xafea, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x21af);
        EXPECT(gbc.pc(), 0xafec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafea), 0xcb);
        EXPECT(gbc.readMem(0xafeb), 0xfd);
        // CB FD 00FD
        gbc.setState(0x2ef8, 0x7fea, 0xb9d0, 0x4690, 0x9722, 0xb21d, 0x1, 0x0);
        gbc.writeMem(0x2ef8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7fea);
        EXPECT(gbc.pc(), 0x2efa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 00FE
        gbc.setState(0x56f1, 0xbcde, 0x8dc0, 0x58e1, 0x13d3, 0xf44, 0x0, 0x0);
        gbc.writeMem(0x56f1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbcde);
        EXPECT(gbc.pc(), 0x56f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 00FF
        gbc.setState(0xba7, 0xfbc2, 0xa770, 0xd029, 0x56a9, 0x24f, 0x1, 0x0);
        gbc.writeMem(0xba7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xfbc2);
        EXPECT(gbc.pc(), 0xba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0100
        gbc.setState(0xd552, 0x6394, 0x73a0, 0xca63, 0x7769, 0xd22c, 0x1, 0x0);
        gbc.writeMem(0xd552, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6394);
        EXPECT(gbc.pc(), 0xd554);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd552), 0xcb);
        EXPECT(gbc.readMem(0xd553), 0xfd);
        // CB FD 0101
        gbc.setState(0x3534, 0xfe59, 0xd030, 0x2d78, 0x3b56, 0xf9f, 0x1, 0x1);
        gbc.writeMem(0x3534, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfe59);
        EXPECT(gbc.pc(), 0x3536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0102
        gbc.setState(0x41f2, 0x40ec, 0xb10, 0x8f14, 0x36fe, 0x42cd, 0x1, 0x1);
        gbc.writeMem(0x41f2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x40ec);
        EXPECT(gbc.pc(), 0x41f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0103
        gbc.setState(0x535d, 0x4e7, 0xd990, 0x9670, 0xd212, 0xfdbe, 0x1, 0x1);
        gbc.writeMem(0x535d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4e7);
        EXPECT(gbc.pc(), 0x535f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0104
        gbc.setState(0x54c, 0x3299, 0xbdb0, 0xdc3f, 0x75f6, 0xaff7, 0x1, 0x0);
        gbc.writeMem(0x54c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3299);
        EXPECT(gbc.pc(), 0x54e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0105
        gbc.setState(0x6188, 0xfbd3, 0xba20, 0x48ad, 0xb8b1, 0x71de, 0x0, 0x1);
        gbc.writeMem(0x6188, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfbd3);
        EXPECT(gbc.pc(), 0x618a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0106
        gbc.setState(0x6b09, 0xa133, 0xaf20, 0xff04, 0x863d, 0x462, 0x0, 0x1);
        gbc.writeMem(0x6b09, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa133);
        EXPECT(gbc.pc(), 0x6b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0107
        gbc.setState(0xc910, 0xee11, 0x4060, 0xc1, 0xd280, 0xd96c, 0x0, 0x1);
        gbc.writeMem(0xc910, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xee11);
        EXPECT(gbc.pc(), 0xc912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc910), 0xcb);
        EXPECT(gbc.readMem(0xc911), 0xfd);
        // CB FD 0108
        gbc.setState(0x7fbf, 0xfe3f, 0x71b0, 0x4a02, 0x7eed, 0x7c82, 0x0, 0x1);
        gbc.writeMem(0x7fbf, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfe3f);
        EXPECT(gbc.pc(), 0x7fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 010A
        gbc.setState(0x72fc, 0x275b, 0xb7f0, 0x2f04, 0x47ae, 0xec4, 0x1, 0x1);
        gbc.writeMem(0x72fc, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x275b);
        EXPECT(gbc.pc(), 0x72fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 010B
        gbc.setState(0x6508, 0xe4dc, 0xb5d0, 0x9cbf, 0x601d, 0x150b, 0x0, 0x1);
        gbc.writeMem(0x6508, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe4dc);
        EXPECT(gbc.pc(), 0x650a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 010C
        gbc.setState(0x9533, 0x4a79, 0x2e00, 0xdb25, 0xa72f, 0x5fcc, 0x0, 0x1);
        gbc.writeMem(0x9533, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4a79);
        EXPECT(gbc.pc(), 0x9535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9533), 0xcb);
        EXPECT(gbc.readMem(0x9534), 0xfd);
        // CB FD 010D
        gbc.setState(0x569, 0x678d, 0x9750, 0x6dd, 0x2b4, 0xb18d, 0x1, 0x0);
        gbc.writeMem(0x569, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x678d);
        EXPECT(gbc.pc(), 0x56b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 010E
        gbc.setState(0xd3c9, 0x4ddc, 0x4a40, 0xf2f0, 0x92fe, 0xfd6c, 0x0, 0x0);
        gbc.writeMem(0xd3c9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4ddc);
        EXPECT(gbc.pc(), 0xd3cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c9), 0xcb);
        EXPECT(gbc.readMem(0xd3ca), 0xfd);
        // CB FD 010F
        gbc.setState(0x8eba, 0x1010, 0xb0c0, 0x1cbb, 0xcdab, 0x597, 0x0, 0x1);
        gbc.writeMem(0x8eba, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1010);
        EXPECT(gbc.pc(), 0x8ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eba), 0xcb);
        EXPECT(gbc.readMem(0x8ebb), 0xfd);
        // CB FD 0110
        gbc.setState(0xbabc, 0x5d25, 0xa8a0, 0xe3e9, 0xd1f1, 0xb790, 0x0, 0x0);
        gbc.writeMem(0xbabc, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5d25);
        EXPECT(gbc.pc(), 0xbabe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbabc), 0xcb);
        EXPECT(gbc.readMem(0xbabd), 0xfd);
        // CB FD 0111
        gbc.setState(0x6490, 0x5b99, 0x8d60, 0xbb1e, 0xe406, 0x402d, 0x1, 0x0);
        gbc.writeMem(0x6490, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5b99);
        EXPECT(gbc.pc(), 0x6492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0112
        gbc.setState(0x4449, 0x488a, 0x600, 0xf3a6, 0x21b3, 0x7b9, 0x1, 0x0);
        gbc.writeMem(0x4449, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x488a);
        EXPECT(gbc.pc(), 0x444b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0113
        gbc.setState(0x63b4, 0x4bae, 0x6f40, 0x2e51, 0xde49, 0x756e, 0x1, 0x0);
        gbc.writeMem(0x63b4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4bae);
        EXPECT(gbc.pc(), 0x63b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0114
        gbc.setState(0x1002, 0x7341, 0xd470, 0xec0c, 0xbdb2, 0x67d8, 0x1, 0x1);
        gbc.writeMem(0x1002, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7341);
        EXPECT(gbc.pc(), 0x1004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0115
        gbc.setState(0x321d, 0x8cd9, 0xb230, 0xcbae, 0x3dc4, 0x52f, 0x0, 0x0);
        gbc.writeMem(0x321d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8cd9);
        EXPECT(gbc.pc(), 0x321f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0116
        gbc.setState(0x1c11, 0x3ede, 0x5f30, 0xf2e0, 0xb6b8, 0x811c, 0x0, 0x1);
        gbc.writeMem(0x1c11, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3ede);
        EXPECT(gbc.pc(), 0x1c13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0117
        gbc.setState(0x6a6b, 0x6788, 0x9bc0, 0x9adc, 0x7e6b, 0x9e60, 0x1, 0x1);
        gbc.writeMem(0x6a6b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6788);
        EXPECT(gbc.pc(), 0x6a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0118
        gbc.setState(0xcec1, 0x8441, 0x3cc0, 0xa9c2, 0x4f27, 0xcee2, 0x1, 0x1);
        gbc.writeMem(0xcec1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8441);
        EXPECT(gbc.pc(), 0xcec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec1), 0xcb);
        EXPECT(gbc.readMem(0xcec2), 0xfd);
        // CB FD 0119
        gbc.setState(0xa83, 0x76f3, 0xce0, 0xef23, 0x5acf, 0xdfb4, 0x1, 0x1);
        gbc.writeMem(0xa83, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x76f3);
        EXPECT(gbc.pc(), 0xa85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 011A
        gbc.setState(0x1815, 0xb649, 0x2ea0, 0xbe5d, 0x9957, 0xb78b, 0x0, 0x0);
        gbc.writeMem(0x1815, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb649);
        EXPECT(gbc.pc(), 0x1817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 011B
        gbc.setState(0x13cd, 0x21a4, 0xd8a0, 0x8392, 0xe289, 0x9a78, 0x0, 0x0);
        gbc.writeMem(0x13cd, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x21a4);
        EXPECT(gbc.pc(), 0x13cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 011C
        gbc.setState(0x5d1c, 0x59a1, 0xa390, 0x609b, 0x3137, 0xae7f, 0x1, 0x0);
        gbc.writeMem(0x5d1c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x59a1);
        EXPECT(gbc.pc(), 0x5d1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 011D
        gbc.setState(0x1dfb, 0x666a, 0x5590, 0xb967, 0xc241, 0xcb4d, 0x1, 0x1);
        gbc.writeMem(0x1dfb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x666a);
        EXPECT(gbc.pc(), 0x1dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 011E
        gbc.setState(0xbeff, 0x7840, 0x94e0, 0x519c, 0x1537, 0xc559, 0x0, 0x1);
        gbc.writeMem(0xbeff, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7840);
        EXPECT(gbc.pc(), 0xbf01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeff), 0xcb);
        EXPECT(gbc.readMem(0xbf00), 0xfd);
        // CB FD 011F
        gbc.setState(0x8, 0x8599, 0xdf60, 0xcca6, 0x6b46, 0x2ff, 0x0, 0x1);
        gbc.writeMem(0x8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8599);
        EXPECT(gbc.pc(), 0xa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0120
        gbc.setState(0x9bee, 0x6d87, 0xe1d0, 0x408, 0xcce8, 0xdc53, 0x0, 0x0);
        gbc.writeMem(0x9bee, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6d87);
        EXPECT(gbc.pc(), 0x9bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bee), 0xcb);
        EXPECT(gbc.readMem(0x9bef), 0xfd);
        // CB FD 0121
        gbc.setState(0x342b, 0x68d2, 0x4870, 0x6fa5, 0x3271, 0x9dfc, 0x0, 0x0);
        gbc.writeMem(0x342b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x68d2);
        EXPECT(gbc.pc(), 0x342d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0122
        gbc.setState(0x8353, 0xd495, 0x6a80, 0x3708, 0xddab, 0x253f, 0x1, 0x1);
        gbc.writeMem(0x8353, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd495);
        EXPECT(gbc.pc(), 0x8355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8353), 0xcb);
        EXPECT(gbc.readMem(0x8354), 0xfd);
        // CB FD 0123
        gbc.setState(0x5aee, 0x1d24, 0x8610, 0x4c1, 0x5f4d, 0x83c8, 0x1, 0x0);
        gbc.writeMem(0x5aee, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1d24);
        EXPECT(gbc.pc(), 0x5af0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0124
        gbc.setState(0x7199, 0x40e5, 0x2600, 0xcd9c, 0x1060, 0x8f71, 0x1, 0x1);
        gbc.writeMem(0x7199, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x40e5);
        EXPECT(gbc.pc(), 0x719b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0125
        gbc.setState(0x7885, 0x93fe, 0x52f0, 0x90f9, 0x5e52, 0xcf04, 0x1, 0x1);
        gbc.writeMem(0x7885, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x93fe);
        EXPECT(gbc.pc(), 0x7887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0126
        gbc.setState(0x6b5c, 0x50c1, 0xee00, 0xbd43, 0x784b, 0xfddc, 0x0, 0x1);
        gbc.writeMem(0x6b5c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x50c1);
        EXPECT(gbc.pc(), 0x6b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0127
        gbc.setState(0xa120, 0x30cb, 0x4e80, 0xe6e1, 0x62dd, 0x68c1, 0x0, 0x1);
        gbc.writeMem(0xa120, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x30cb);
        EXPECT(gbc.pc(), 0xa122);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa120), 0xcb);
        EXPECT(gbc.readMem(0xa121), 0xfd);
        // CB FD 0128
        gbc.setState(0x874a, 0x4bc1, 0xebe0, 0x6574, 0xf0c2, 0xad29, 0x1, 0x0);
        gbc.writeMem(0x874a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4bc1);
        EXPECT(gbc.pc(), 0x874c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874a), 0xcb);
        EXPECT(gbc.readMem(0x874b), 0xfd);
        // CB FD 0129
        gbc.setState(0x359c, 0xb88d, 0x37d0, 0xd14b, 0xe93, 0x3a9b, 0x0, 0x0);
        gbc.writeMem(0x359c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb88d);
        EXPECT(gbc.pc(), 0x359e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 012A
        gbc.setState(0xb2aa, 0x607d, 0xf370, 0x18ce, 0x4e97, 0xac51, 0x1, 0x0);
        gbc.writeMem(0xb2aa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x607d);
        EXPECT(gbc.pc(), 0xb2ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2aa), 0xcb);
        EXPECT(gbc.readMem(0xb2ab), 0xfd);
        // CB FD 012B
        gbc.setState(0xcabe, 0xaa88, 0x3c10, 0xa577, 0xa952, 0x4c21, 0x1, 0x0);
        gbc.writeMem(0xcabe, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xaa88);
        EXPECT(gbc.pc(), 0xcac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcabe), 0xcb);
        EXPECT(gbc.readMem(0xcabf), 0xfd);
        // CB FD 012C
        gbc.setState(0x5b15, 0x82db, 0x9b30, 0x8656, 0x2feb, 0xcd4b, 0x1, 0x1);
        gbc.writeMem(0x5b15, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x82db);
        EXPECT(gbc.pc(), 0x5b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 012D
        gbc.setState(0x7838, 0x6d53, 0x4c20, 0x9bf9, 0xc7ae, 0xf5ad, 0x1, 0x1);
        gbc.writeMem(0x7838, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6d53);
        EXPECT(gbc.pc(), 0x783a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 012E
        gbc.setState(0xa1a3, 0xe096, 0xd3d0, 0xc057, 0x902f, 0x4666, 0x0, 0x1);
        gbc.writeMem(0xa1a3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe096);
        EXPECT(gbc.pc(), 0xa1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a3), 0xcb);
        EXPECT(gbc.readMem(0xa1a4), 0xfd);
        // CB FD 012F
        gbc.setState(0x425c, 0x6367, 0xad50, 0x67b1, 0xa2b5, 0x935e, 0x1, 0x1);
        gbc.writeMem(0x425c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6367);
        EXPECT(gbc.pc(), 0x425e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0130
        gbc.setState(0x971d, 0x8da, 0x28b0, 0x61e, 0xc440, 0x97c9, 0x0, 0x0);
        gbc.writeMem(0x971d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8da);
        EXPECT(gbc.pc(), 0x971f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x971d), 0xcb);
        EXPECT(gbc.readMem(0x971e), 0xfd);
        // CB FD 0132
        gbc.setState(0x9b15, 0xd879, 0xad00, 0x97d1, 0x5c7c, 0xb4cf, 0x0, 0x1);
        gbc.writeMem(0x9b15, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd879);
        EXPECT(gbc.pc(), 0x9b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b15), 0xcb);
        EXPECT(gbc.readMem(0x9b16), 0xfd);
        // CB FD 0133
        gbc.setState(0xd7d5, 0x8755, 0xff50, 0x2626, 0x41ae, 0x7cfa, 0x0, 0x0);
        gbc.writeMem(0xd7d5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8755);
        EXPECT(gbc.pc(), 0xd7d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d5), 0xcb);
        EXPECT(gbc.readMem(0xd7d6), 0xfd);
        // CB FD 0134
        gbc.setState(0xd97a, 0x24a8, 0x4b40, 0xb3ca, 0x98a0, 0x89f8, 0x0, 0x1);
        gbc.writeMem(0xd97a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x24a8);
        EXPECT(gbc.pc(), 0xd97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97a), 0xcb);
        EXPECT(gbc.readMem(0xd97b), 0xfd);
        // CB FD 0135
        gbc.setState(0x21bd, 0xb092, 0xd3b0, 0xdceb, 0x5ae8, 0xdb3a, 0x1, 0x1);
        gbc.writeMem(0x21bd, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb092);
        EXPECT(gbc.pc(), 0x21bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0136
        gbc.setState(0xd7f2, 0x535f, 0x6f50, 0xdd55, 0xe2cd, 0xefac, 0x1, 0x1);
        gbc.writeMem(0xd7f2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x535f);
        EXPECT(gbc.pc(), 0xd7f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f2), 0xcb);
        EXPECT(gbc.readMem(0xd7f3), 0xfd);
        // CB FD 0137
        gbc.setState(0x6c02, 0x885a, 0x9fa0, 0xed2, 0xe0e1, 0x2568, 0x1, 0x1);
        gbc.writeMem(0x6c02, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x885a);
        EXPECT(gbc.pc(), 0x6c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0138
        gbc.setState(0xc7df, 0x7b7, 0x76c0, 0xeab3, 0xe283, 0x9a0e, 0x0, 0x0);
        gbc.writeMem(0xc7df, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x7b7);
        EXPECT(gbc.pc(), 0xc7e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7df), 0xcb);
        EXPECT(gbc.readMem(0xc7e0), 0xfd);
        // CB FD 0139
        gbc.setState(0x35c2, 0xfce0, 0xe7a0, 0x83fc, 0x8cdd, 0x3fea, 0x0, 0x1);
        gbc.writeMem(0x35c2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfce0);
        EXPECT(gbc.pc(), 0x35c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 013A
        gbc.setState(0x1328, 0x2a1d, 0xe30, 0xc027, 0x6e8b, 0x34ef, 0x0, 0x1);
        gbc.writeMem(0x1328, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2a1d);
        EXPECT(gbc.pc(), 0x132a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 013B
        gbc.setState(0xc3ce, 0xbd4b, 0x1330, 0xe06, 0xa0b, 0x9a98, 0x0, 0x0);
        gbc.writeMem(0xc3ce, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xbd4b);
        EXPECT(gbc.pc(), 0xc3d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ce), 0xcb);
        EXPECT(gbc.readMem(0xc3cf), 0xfd);
        // CB FD 013C
        gbc.setState(0x80c1, 0x9b0a, 0xa8f0, 0x2365, 0x2011, 0xe838, 0x1, 0x0);
        gbc.writeMem(0x80c1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9b0a);
        EXPECT(gbc.pc(), 0x80c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c1), 0xcb);
        EXPECT(gbc.readMem(0x80c2), 0xfd);
        // CB FD 013E
        gbc.setState(0xc0e7, 0xb270, 0x5a10, 0x1a1e, 0x2257, 0x2dae, 0x1, 0x1);
        gbc.writeMem(0xc0e7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb270);
        EXPECT(gbc.pc(), 0xc0e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e7), 0xcb);
        EXPECT(gbc.readMem(0xc0e8), 0xfd);
        // CB FD 013F
        gbc.setState(0xc32, 0xfb17, 0xd060, 0xdddb, 0x7306, 0x403d, 0x0, 0x0);
        gbc.writeMem(0xc32, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfb17);
        EXPECT(gbc.pc(), 0xc34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0140
        gbc.setState(0xb348, 0x528a, 0xeaa0, 0xcfe4, 0x9c12, 0x20be, 0x0, 0x1);
        gbc.writeMem(0xb348, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x528a);
        EXPECT(gbc.pc(), 0xb34a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb348), 0xcb);
        EXPECT(gbc.readMem(0xb349), 0xfd);
        // CB FD 0141
        gbc.setState(0x1b09, 0x2129, 0x19e0, 0x1e96, 0xc860, 0x8018, 0x1, 0x1);
        gbc.writeMem(0x1b09, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2129);
        EXPECT(gbc.pc(), 0x1b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0142
        gbc.setState(0x3bfa, 0x1946, 0x3340, 0xd8c1, 0x1b9b, 0x3e50, 0x0, 0x0);
        gbc.writeMem(0x3bfa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1946);
        EXPECT(gbc.pc(), 0x3bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0143
        gbc.setState(0x7d38, 0x901d, 0xa420, 0xa78e, 0x63b3, 0x1867, 0x1, 0x0);
        gbc.writeMem(0x7d38, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x901d);
        EXPECT(gbc.pc(), 0x7d3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0144
        gbc.setState(0xc03d, 0x2897, 0x2a20, 0xec5f, 0xa4a6, 0xce24, 0x1, 0x0);
        gbc.writeMem(0xc03d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2897);
        EXPECT(gbc.pc(), 0xc03f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03d), 0xcb);
        EXPECT(gbc.readMem(0xc03e), 0xfd);
        // CB FD 0145
        gbc.setState(0x7f30, 0xcc8c, 0x50d0, 0x3de5, 0x5565, 0x109, 0x1, 0x0);
        gbc.writeMem(0x7f30, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xcc8c);
        EXPECT(gbc.pc(), 0x7f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0146
        gbc.setState(0x6485, 0x529a, 0x2bb0, 0xaa3e, 0x24f6, 0xe387, 0x0, 0x0);
        gbc.writeMem(0x6485, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x529a);
        EXPECT(gbc.pc(), 0x6487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0147
        gbc.setState(0xece4, 0x6999, 0xfe40, 0xedb5, 0x8ade, 0x7e3c, 0x1, 0x0);
        gbc.writeMem(0xece4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6999);
        EXPECT(gbc.pc(), 0xece6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece4), 0xcb);
        EXPECT(gbc.readMem(0xece5), 0xfd);
        // CB FD 0148
        gbc.setState(0x7ff1, 0x3ca9, 0xc4d0, 0xf4d5, 0x8fdf, 0xd067, 0x1, 0x1);
        gbc.writeMem(0x7ff1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3ca9);
        EXPECT(gbc.pc(), 0x7ff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0149
        gbc.setState(0xbad5, 0x4430, 0x3e70, 0xc491, 0x6b1a, 0x35e9, 0x0, 0x0);
        gbc.writeMem(0xbad5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4430);
        EXPECT(gbc.pc(), 0xbad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad5), 0xcb);
        EXPECT(gbc.readMem(0xbad6), 0xfd);
        // CB FD 014A
        gbc.setState(0x2669, 0x92e1, 0x4c70, 0x3d68, 0x5eac, 0xbe03, 0x0, 0x0);
        gbc.writeMem(0x2669, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x92e1);
        EXPECT(gbc.pc(), 0x266b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 014B
        gbc.setState(0x7092, 0x5983, 0x1340, 0xb470, 0xf5cb, 0x149a, 0x0, 0x0);
        gbc.writeMem(0x7092, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5983);
        EXPECT(gbc.pc(), 0x7094);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 014C
        gbc.setState(0x67a5, 0xdd0c, 0xf400, 0xfd73, 0x304a, 0x29b9, 0x0, 0x0);
        gbc.writeMem(0x67a5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xdd0c);
        EXPECT(gbc.pc(), 0x67a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 014E
        gbc.setState(0xc2e7, 0x6631, 0xe30, 0x246b, 0xd208, 0xc693, 0x1, 0x1);
        gbc.writeMem(0xc2e7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6631);
        EXPECT(gbc.pc(), 0xc2e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e7), 0xcb);
        EXPECT(gbc.readMem(0xc2e8), 0xfd);
        // CB FD 014F
        gbc.setState(0xa996, 0x2e35, 0x2ff0, 0x7b60, 0xb4e4, 0x70db, 0x1, 0x0);
        gbc.writeMem(0xa996, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2e35);
        EXPECT(gbc.pc(), 0xa998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa996), 0xcb);
        EXPECT(gbc.readMem(0xa997), 0xfd);
        // CB FD 0150
        gbc.setState(0x3d21, 0x60d0, 0x450, 0x9977, 0xe76d, 0x3b49, 0x1, 0x1);
        gbc.writeMem(0x3d21, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x60d0);
        EXPECT(gbc.pc(), 0x3d23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0151
        gbc.setState(0x728d, 0x94d1, 0xffb0, 0x2bac, 0xb69a, 0x582, 0x0, 0x0);
        gbc.writeMem(0x728d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x94d1);
        EXPECT(gbc.pc(), 0x728f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0152
        gbc.setState(0x4bb8, 0xe272, 0xacb0, 0xaa4, 0x663e, 0x8666, 0x0, 0x0);
        gbc.writeMem(0x4bb8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe272);
        EXPECT(gbc.pc(), 0x4bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0153
        gbc.setState(0xb235, 0x3fae, 0xcd30, 0xe96b, 0xdb7e, 0xb10, 0x0, 0x0);
        gbc.writeMem(0xb235, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3fae);
        EXPECT(gbc.pc(), 0xb237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb235), 0xcb);
        EXPECT(gbc.readMem(0xb236), 0xfd);
        // CB FD 0154
        gbc.setState(0x8706, 0xa478, 0x97f0, 0x9a56, 0x13d, 0x30fb, 0x1, 0x1);
        gbc.writeMem(0x8706, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa478);
        EXPECT(gbc.pc(), 0x8708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8706), 0xcb);
        EXPECT(gbc.readMem(0x8707), 0xfd);
        // CB FD 0155
        gbc.setState(0xcc8c, 0xd9a3, 0x7730, 0xc2ec, 0xd5f0, 0x1344, 0x0, 0x0);
        gbc.writeMem(0xcc8c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd9a3);
        EXPECT(gbc.pc(), 0xcc8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc8c), 0xcb);
        EXPECT(gbc.readMem(0xcc8d), 0xfd);
        // CB FD 0156
        gbc.setState(0x3678, 0x5f6e, 0x1d80, 0x104b, 0x7614, 0xfa40, 0x1, 0x1);
        gbc.writeMem(0x3678, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5f6e);
        EXPECT(gbc.pc(), 0x367a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0157
        gbc.setState(0x559e, 0xa1ed, 0x8710, 0x53f9, 0xa9c7, 0x6c7, 0x0, 0x0);
        gbc.writeMem(0x559e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa1ed);
        EXPECT(gbc.pc(), 0x55a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0158
        gbc.setState(0x5c47, 0xacde, 0x38e0, 0xae6f, 0x93c3, 0x6709, 0x1, 0x1);
        gbc.writeMem(0x5c47, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xacde);
        EXPECT(gbc.pc(), 0x5c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0159
        gbc.setState(0xd904, 0xd1ea, 0x4ca0, 0x7cb4, 0xd94c, 0xe9b0, 0x0, 0x0);
        gbc.writeMem(0xd904, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd1ea);
        EXPECT(gbc.pc(), 0xd906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd904), 0xcb);
        EXPECT(gbc.readMem(0xd905), 0xfd);
        // CB FD 015A
        gbc.setState(0xc2b6, 0x1ae3, 0xcde0, 0x6687, 0x8324, 0xdffb, 0x1, 0x0);
        gbc.writeMem(0xc2b6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1ae3);
        EXPECT(gbc.pc(), 0xc2b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b6), 0xcb);
        EXPECT(gbc.readMem(0xc2b7), 0xfd);
        // CB FD 015B
        gbc.setState(0x53d5, 0xa574, 0x6690, 0x88ed, 0xcbcd, 0xe6d3, 0x0, 0x1);
        gbc.writeMem(0x53d5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xa574);
        EXPECT(gbc.pc(), 0x53d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 015D
        gbc.setState(0x7398, 0xf67, 0x180, 0x2d2d, 0x355, 0x5527, 0x0, 0x0);
        gbc.writeMem(0x7398, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf67);
        EXPECT(gbc.pc(), 0x739a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 015F
        gbc.setState(0x60aa, 0x5818, 0xc2b0, 0xd73e, 0x132b, 0x5fdd, 0x0, 0x1);
        gbc.writeMem(0x60aa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5818);
        EXPECT(gbc.pc(), 0x60ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0160
        gbc.setState(0x306e, 0xdafd, 0x6ec0, 0xf8b1, 0xf5a, 0xf0b0, 0x1, 0x0);
        gbc.writeMem(0x306e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdafd);
        EXPECT(gbc.pc(), 0x3070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0161
        gbc.setState(0xb579, 0xc772, 0xd720, 0xa13, 0xfe07, 0x968f, 0x0, 0x1);
        gbc.writeMem(0xb579, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc772);
        EXPECT(gbc.pc(), 0xb57b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb579), 0xcb);
        EXPECT(gbc.readMem(0xb57a), 0xfd);
        // CB FD 0162
        gbc.setState(0x1020, 0x8099, 0xfaf0, 0x9b73, 0x4bbf, 0x82d3, 0x1, 0x0);
        gbc.writeMem(0x1020, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8099);
        EXPECT(gbc.pc(), 0x1022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0163
        gbc.setState(0x7bb, 0xc7d, 0x1dc0, 0xf876, 0xe9b1, 0xbe9c, 0x0, 0x0);
        gbc.writeMem(0x7bb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc7d);
        EXPECT(gbc.pc(), 0x7bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0164
        gbc.setState(0xdb93, 0xa7ab, 0x39b0, 0x47f4, 0x803d, 0x7f46, 0x0, 0x0);
        gbc.writeMem(0xdb93, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa7ab);
        EXPECT(gbc.pc(), 0xdb95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb93), 0xcb);
        EXPECT(gbc.readMem(0xdb94), 0xfd);
        // CB FD 0165
        gbc.setState(0x7517, 0x17cc, 0xf270, 0xf6a3, 0x3313, 0xd6fa, 0x0, 0x1);
        gbc.writeMem(0x7517, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x17cc);
        EXPECT(gbc.pc(), 0x7519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0166
        gbc.setState(0xbd7, 0x37d1, 0x2a20, 0x3001, 0x66d5, 0xf90a, 0x1, 0x1);
        gbc.writeMem(0xbd7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x37d1);
        EXPECT(gbc.pc(), 0xbd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0167
        gbc.setState(0xd8b3, 0x8887, 0x33a0, 0xe485, 0x67b4, 0xa976, 0x0, 0x0);
        gbc.writeMem(0xd8b3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8887);
        EXPECT(gbc.pc(), 0xd8b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b3), 0xcb);
        EXPECT(gbc.readMem(0xd8b4), 0xfd);
        // CB FD 0169
        gbc.setState(0xb372, 0x1c0f, 0x6100, 0xa9e4, 0x6d04, 0x526d, 0x0, 0x0);
        gbc.writeMem(0xb372, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1c0f);
        EXPECT(gbc.pc(), 0xb374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb372), 0xcb);
        EXPECT(gbc.readMem(0xb373), 0xfd);
        // CB FD 016A
        gbc.setState(0xbd67, 0x8eab, 0x4d80, 0xbe2a, 0xa238, 0xb792, 0x1, 0x1);
        gbc.writeMem(0xbd67, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8eab);
        EXPECT(gbc.pc(), 0xbd69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd67), 0xcb);
        EXPECT(gbc.readMem(0xbd68), 0xfd);
        // CB FD 016B
        gbc.setState(0x9a88, 0x5a61, 0xec30, 0x7828, 0x9e6a, 0xffc1, 0x1, 0x0);
        gbc.writeMem(0x9a88, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5a61);
        EXPECT(gbc.pc(), 0x9a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a88), 0xcb);
        EXPECT(gbc.readMem(0x9a89), 0xfd);
        // CB FD 016C
        gbc.setState(0xd626, 0x1cbf, 0xfeb0, 0xbf04, 0x7d8, 0xb5a8, 0x1, 0x0);
        gbc.writeMem(0xd626, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1cbf);
        EXPECT(gbc.pc(), 0xd628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd626), 0xcb);
        EXPECT(gbc.readMem(0xd627), 0xfd);
        // CB FD 016D
        gbc.setState(0xd8c8, 0x990b, 0xa990, 0x77b8, 0x3ebf, 0x409f, 0x1, 0x0);
        gbc.writeMem(0xd8c8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x990b);
        EXPECT(gbc.pc(), 0xd8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8c8), 0xcb);
        EXPECT(gbc.readMem(0xd8c9), 0xfd);
        // CB FD 016E
        gbc.setState(0x855e, 0x6d1, 0x84e0, 0xdbbb, 0x1e9c, 0xeae0, 0x0, 0x1);
        gbc.writeMem(0x855e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6d1);
        EXPECT(gbc.pc(), 0x8560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x855e), 0xcb);
        EXPECT(gbc.readMem(0x855f), 0xfd);
        // CB FD 016F
        gbc.setState(0xe885, 0xee75, 0xc120, 0xec8a, 0x5ebe, 0x6f92, 0x1, 0x0);
        gbc.writeMem(0xe885, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xee75);
        EXPECT(gbc.pc(), 0xe887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe885), 0xcb);
        EXPECT(gbc.readMem(0xe886), 0xfd);
        // CB FD 0170
        gbc.setState(0x6ad4, 0xca09, 0x2310, 0xa80d, 0x208b, 0xc42d, 0x0, 0x1);
        gbc.writeMem(0x6ad4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xca09);
        EXPECT(gbc.pc(), 0x6ad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0171
        gbc.setState(0x4d7a, 0x506a, 0xe9f0, 0x97e1, 0x9618, 0x77ac, 0x1, 0x0);
        gbc.writeMem(0x4d7a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x506a);
        EXPECT(gbc.pc(), 0x4d7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0172
        gbc.setState(0x54c9, 0xa1a, 0x7a00, 0xaa0a, 0xc148, 0x43a3, 0x1, 0x1);
        gbc.writeMem(0x54c9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa1a);
        EXPECT(gbc.pc(), 0x54cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0173
        gbc.setState(0x3264, 0xe035, 0x85d0, 0xd970, 0xa29a, 0xae8a, 0x1, 0x0);
        gbc.writeMem(0x3264, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe035);
        EXPECT(gbc.pc(), 0x3266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0174
        gbc.setState(0xbcfa, 0x5ab8, 0x5dc0, 0x1845, 0xa25f, 0x3a5b, 0x0, 0x1);
        gbc.writeMem(0xbcfa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5ab8);
        EXPECT(gbc.pc(), 0xbcfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcfa), 0xcb);
        EXPECT(gbc.readMem(0xbcfb), 0xfd);
        // CB FD 0175
        gbc.setState(0xaa4a, 0x5d27, 0xbb80, 0xbaa9, 0x7836, 0xe1cb, 0x0, 0x1);
        gbc.writeMem(0xaa4a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5d27);
        EXPECT(gbc.pc(), 0xaa4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa4a), 0xcb);
        EXPECT(gbc.readMem(0xaa4b), 0xfd);
        // CB FD 0176
        gbc.setState(0x58e, 0x483e, 0x4960, 0x9275, 0x1650, 0xb3c8, 0x1, 0x0);
        gbc.writeMem(0x58e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x483e);
        EXPECT(gbc.pc(), 0x590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0177
        gbc.setState(0x79a9, 0xb09b, 0x3430, 0x10f7, 0xbd9f, 0x8671, 0x0, 0x1);
        gbc.writeMem(0x79a9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb09b);
        EXPECT(gbc.pc(), 0x79ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0178
        gbc.setState(0x73e2, 0x2424, 0x4660, 0x42c7, 0xcf6f, 0xfeaa, 0x1, 0x1);
        gbc.writeMem(0x73e2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2424);
        EXPECT(gbc.pc(), 0x73e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0179
        gbc.setState(0xe181, 0x156d, 0xfe80, 0x96e2, 0xfc9f, 0x118f, 0x1, 0x0);
        gbc.writeMem(0xe181, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x156d);
        EXPECT(gbc.pc(), 0xe183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe181), 0xcb);
        EXPECT(gbc.readMem(0xe182), 0xfd);
        // CB FD 017A
        gbc.setState(0x7168, 0x5b24, 0x2940, 0x4c32, 0x8db, 0xb574, 0x1, 0x0);
        gbc.writeMem(0x7168, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5b24);
        EXPECT(gbc.pc(), 0x716a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 017B
        gbc.setState(0xdce2, 0x3734, 0xc730, 0xeaf6, 0x11ac, 0xfcea, 0x0, 0x0);
        gbc.writeMem(0xdce2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3734);
        EXPECT(gbc.pc(), 0xdce4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce2), 0xcb);
        EXPECT(gbc.readMem(0xdce3), 0xfd);
        // CB FD 017C
        gbc.setState(0xe7a1, 0xd015, 0xec0, 0x8b5a, 0x9bd0, 0xbc2f, 0x0, 0x0);
        gbc.writeMem(0xe7a1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd015);
        EXPECT(gbc.pc(), 0xe7a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7a1), 0xcb);
        EXPECT(gbc.readMem(0xe7a2), 0xfd);
        // CB FD 017D
        gbc.setState(0xa657, 0x88c0, 0x92a0, 0xa58, 0x4ac9, 0x1ea, 0x0, 0x0);
        gbc.writeMem(0xa657, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x88c0);
        EXPECT(gbc.pc(), 0xa659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa657), 0xcb);
        EXPECT(gbc.readMem(0xa658), 0xfd);
        // CB FD 017E
        gbc.setState(0x7c77, 0x900f, 0x1ba0, 0xd008, 0x525, 0xa2f9, 0x1, 0x1);
        gbc.writeMem(0x7c77, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x900f);
        EXPECT(gbc.pc(), 0x7c79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 017F
        gbc.setState(0x93ae, 0x2087, 0x3090, 0xd896, 0xe9db, 0xa0e5, 0x1, 0x1);
        gbc.writeMem(0x93ae, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2087);
        EXPECT(gbc.pc(), 0x93b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ae), 0xcb);
        EXPECT(gbc.readMem(0x93af), 0xfd);
        // CB FD 0180
        gbc.setState(0x6557, 0x9802, 0xe8f0, 0xdb51, 0xfcfc, 0x86ba, 0x1, 0x0);
        gbc.writeMem(0x6557, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9802);
        EXPECT(gbc.pc(), 0x6559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0181
        gbc.setState(0x253f, 0x9cac, 0xfff0, 0x6d3f, 0x93a0, 0x79b0, 0x0, 0x1);
        gbc.writeMem(0x253f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9cac);
        EXPECT(gbc.pc(), 0x2541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0182
        gbc.setState(0x560d, 0xce5, 0x7630, 0xf91c, 0x61fc, 0xf39a, 0x1, 0x0);
        gbc.writeMem(0x560d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xce5);
        EXPECT(gbc.pc(), 0x560f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0183
        gbc.setState(0x401f, 0x2138, 0xf990, 0xf722, 0xc038, 0xf2a3, 0x1, 0x0);
        gbc.writeMem(0x401f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2138);
        EXPECT(gbc.pc(), 0x4021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0184
        gbc.setState(0x7d6a, 0xfd40, 0xa390, 0x38cd, 0xdabc, 0xd5ff, 0x0, 0x0);
        gbc.writeMem(0x7d6a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xfd40);
        EXPECT(gbc.pc(), 0x7d6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0185
        gbc.setState(0x93ca, 0xc46a, 0x2e30, 0x7217, 0x8e1e, 0xab, 0x1, 0x1);
        gbc.writeMem(0x93ca, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc46a);
        EXPECT(gbc.pc(), 0x93cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ca), 0xcb);
        EXPECT(gbc.readMem(0x93cb), 0xfd);
        // CB FD 0186
        gbc.setState(0xac94, 0x5290, 0xc5a0, 0xd58c, 0x33f7, 0xf3be, 0x1, 0x0);
        gbc.writeMem(0xac94, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5290);
        EXPECT(gbc.pc(), 0xac96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac94), 0xcb);
        EXPECT(gbc.readMem(0xac95), 0xfd);
        // CB FD 0187
        gbc.setState(0x746d, 0x8b39, 0xf560, 0x9bca, 0x5ecf, 0x7bb0, 0x1, 0x1);
        gbc.writeMem(0x746d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8b39);
        EXPECT(gbc.pc(), 0x746f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0189
        gbc.setState(0x65b3, 0x8aee, 0xd3a0, 0x1db4, 0x637, 0xb476, 0x1, 0x1);
        gbc.writeMem(0x65b3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8aee);
        EXPECT(gbc.pc(), 0x65b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 018A
        gbc.setState(0x3e95, 0x236f, 0xf330, 0x2cbc, 0x27bc, 0xd1bc, 0x1, 0x1);
        gbc.writeMem(0x3e95, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x236f);
        EXPECT(gbc.pc(), 0x3e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 018B
        gbc.setState(0xadf5, 0x83d1, 0xea10, 0xe0d2, 0xc076, 0x796e, 0x1, 0x1);
        gbc.writeMem(0xadf5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x83d1);
        EXPECT(gbc.pc(), 0xadf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf5), 0xcb);
        EXPECT(gbc.readMem(0xadf6), 0xfd);
        // CB FD 018C
        gbc.setState(0xe3c7, 0x7555, 0xbac0, 0x2f84, 0x3759, 0x4378, 0x1, 0x1);
        gbc.writeMem(0xe3c7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7555);
        EXPECT(gbc.pc(), 0xe3c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c7), 0xcb);
        EXPECT(gbc.readMem(0xe3c8), 0xfd);
        // CB FD 018D
        gbc.setState(0x85a1, 0xc1e8, 0x92a0, 0x93ef, 0x9765, 0xa296, 0x0, 0x0);
        gbc.writeMem(0x85a1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc1e8);
        EXPECT(gbc.pc(), 0x85a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a1), 0xcb);
        EXPECT(gbc.readMem(0x85a2), 0xfd);
        // CB FD 018E
        gbc.setState(0xe097, 0xeac6, 0xb500, 0x35ee, 0x7852, 0xb5d, 0x1, 0x0);
        gbc.writeMem(0xe097, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xeac6);
        EXPECT(gbc.pc(), 0xe099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe097), 0xcb);
        EXPECT(gbc.readMem(0xe098), 0xfd);
        // CB FD 018F
        gbc.setState(0x413d, 0x6f06, 0x3030, 0x52a5, 0x56ee, 0x1811, 0x1, 0x1);
        gbc.writeMem(0x413d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6f06);
        EXPECT(gbc.pc(), 0x413f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0190
        gbc.setState(0x7ece, 0x9e18, 0x2ce0, 0x55c6, 0xd98, 0x5279, 0x1, 0x1);
        gbc.writeMem(0x7ece, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9e18);
        EXPECT(gbc.pc(), 0x7ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0191
        gbc.setState(0x205c, 0x1864, 0xf6e0, 0x26ab, 0x9288, 0x61c5, 0x0, 0x1);
        gbc.writeMem(0x205c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1864);
        EXPECT(gbc.pc(), 0x205e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0192
        gbc.setState(0x6455, 0x311b, 0x41e0, 0x26ca, 0x12f5, 0xefd4, 0x1, 0x0);
        gbc.writeMem(0x6455, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x311b);
        EXPECT(gbc.pc(), 0x6457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0193
        gbc.setState(0x3c2, 0xd1eb, 0xdb40, 0xd53a, 0xd715, 0x63d4, 0x0, 0x0);
        gbc.writeMem(0x3c2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd1eb);
        EXPECT(gbc.pc(), 0x3c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0194
        gbc.setState(0x25d3, 0x56e5, 0xa320, 0xa5ce, 0x8aca, 0x1d72, 0x1, 0x0);
        gbc.writeMem(0x25d3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x56e5);
        EXPECT(gbc.pc(), 0x25d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0195
        gbc.setState(0x41fa, 0x32bb, 0x7db0, 0x9c77, 0x5ab5, 0xd4cd, 0x0, 0x0);
        gbc.writeMem(0x41fa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x32bb);
        EXPECT(gbc.pc(), 0x41fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0196
        gbc.setState(0x2a95, 0xae75, 0xab50, 0x6a1e, 0xa60b, 0xb74c, 0x0, 0x1);
        gbc.writeMem(0x2a95, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xae75);
        EXPECT(gbc.pc(), 0x2a97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0197
        gbc.setState(0x2b0b, 0x3a3c, 0x5910, 0x36e0, 0x83e5, 0x9814, 0x0, 0x1);
        gbc.writeMem(0x2b0b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3a3c);
        EXPECT(gbc.pc(), 0x2b0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0198
        gbc.setState(0xe3c0, 0x4a68, 0xb490, 0x9118, 0x46e6, 0x5db4, 0x1, 0x0);
        gbc.writeMem(0xe3c0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4a68);
        EXPECT(gbc.pc(), 0xe3c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3c0), 0xcb);
        EXPECT(gbc.readMem(0xe3c1), 0xfd);
        // CB FD 0199
        gbc.setState(0xc38c, 0xaec7, 0x1e70, 0x49e6, 0xeaef, 0x5a51, 0x1, 0x0);
        gbc.writeMem(0xc38c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xaec7);
        EXPECT(gbc.pc(), 0xc38e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc38c), 0xcb);
        EXPECT(gbc.readMem(0xc38d), 0xfd);
        // CB FD 019A
        gbc.setState(0x6cc7, 0x7e03, 0x6940, 0x12c3, 0x38f9, 0x8369, 0x0, 0x1);
        gbc.writeMem(0x6cc7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7e03);
        EXPECT(gbc.pc(), 0x6cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 019B
        gbc.setState(0x8a2a, 0xb327, 0x2490, 0x8d88, 0x825c, 0x6db5, 0x0, 0x0);
        gbc.writeMem(0x8a2a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb327);
        EXPECT(gbc.pc(), 0x8a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2a), 0xcb);
        EXPECT(gbc.readMem(0x8a2b), 0xfd);
        // CB FD 019C
        gbc.setState(0x1749, 0xe527, 0xb3e0, 0xfb4f, 0xeeee, 0x38f8, 0x0, 0x0);
        gbc.writeMem(0x1749, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe527);
        EXPECT(gbc.pc(), 0x174b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 019E
        gbc.setState(0xe312, 0xf665, 0xb050, 0x9bb0, 0xe01, 0xb483, 0x1, 0x0);
        gbc.writeMem(0xe312, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf665);
        EXPECT(gbc.pc(), 0xe314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe312), 0xcb);
        EXPECT(gbc.readMem(0xe313), 0xfd);
        // CB FD 019F
        gbc.setState(0x43eb, 0xff0b, 0x8300, 0xcc54, 0xbf1c, 0xb864, 0x1, 0x1);
        gbc.writeMem(0x43eb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xff0b);
        EXPECT(gbc.pc(), 0x43ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01A0
        gbc.setState(0xb048, 0xc912, 0xfb90, 0xb753, 0x4225, 0x1aae, 0x1, 0x1);
        gbc.writeMem(0xb048, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc912);
        EXPECT(gbc.pc(), 0xb04a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb048), 0xcb);
        EXPECT(gbc.readMem(0xb049), 0xfd);
        // CB FD 01A1
        gbc.setState(0x5a67, 0xe6c7, 0xce60, 0xf98, 0x9f99, 0x3dd, 0x1, 0x0);
        gbc.writeMem(0x5a67, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe6c7);
        EXPECT(gbc.pc(), 0x5a69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01A2
        gbc.setState(0xdf8c, 0x3b0d, 0xc9d0, 0x398d, 0xc65d, 0x125c, 0x0, 0x1);
        gbc.writeMem(0xdf8c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3b0d);
        EXPECT(gbc.pc(), 0xdf8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf8c), 0xcb);
        EXPECT(gbc.readMem(0xdf8d), 0xfd);
        // CB FD 01A4
        gbc.setState(0x84a6, 0xf62, 0x87b0, 0xcb9f, 0x6eae, 0x25fe, 0x0, 0x0);
        gbc.writeMem(0x84a6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf62);
        EXPECT(gbc.pc(), 0x84a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a6), 0xcb);
        EXPECT(gbc.readMem(0x84a7), 0xfd);
        // CB FD 01A5
        gbc.setState(0xe80d, 0x9b33, 0xe8a0, 0xcb99, 0xb0ed, 0xb2a7, 0x0, 0x1);
        gbc.writeMem(0xe80d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9b33);
        EXPECT(gbc.pc(), 0xe80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe80d), 0xcb);
        EXPECT(gbc.readMem(0xe80e), 0xfd);
        // CB FD 01A6
        gbc.setState(0xcd18, 0x7f6e, 0x9080, 0xe35a, 0x291b, 0xacd5, 0x1, 0x1);
        gbc.writeMem(0xcd18, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7f6e);
        EXPECT(gbc.pc(), 0xcd1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd18), 0xcb);
        EXPECT(gbc.readMem(0xcd19), 0xfd);
        // CB FD 01A7
        gbc.setState(0x39f0, 0xa0dd, 0x2530, 0xf9f2, 0x409, 0x6680, 0x1, 0x1);
        gbc.writeMem(0x39f0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa0dd);
        EXPECT(gbc.pc(), 0x39f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01A8
        gbc.setState(0xc18b, 0xbe5b, 0xbb30, 0x693d, 0xb995, 0x3c13, 0x0, 0x0);
        gbc.writeMem(0xc18b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbe5b);
        EXPECT(gbc.pc(), 0xc18d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc18b), 0xcb);
        EXPECT(gbc.readMem(0xc18c), 0xfd);
        // CB FD 01A9
        gbc.setState(0xec9, 0x86d8, 0x660, 0xcd54, 0x532d, 0x8034, 0x0, 0x1);
        gbc.writeMem(0xec9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x86d8);
        EXPECT(gbc.pc(), 0xecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01AA
        gbc.setState(0x8678, 0x4a23, 0x8330, 0x1c09, 0x287c, 0xa068, 0x1, 0x0);
        gbc.writeMem(0x8678, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4a23);
        EXPECT(gbc.pc(), 0x867a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8678), 0xcb);
        EXPECT(gbc.readMem(0x8679), 0xfd);
        // CB FD 01AB
        gbc.setState(0x6363, 0x8901, 0x4d70, 0xb70d, 0xe616, 0x24cb, 0x1, 0x0);
        gbc.writeMem(0x6363, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8901);
        EXPECT(gbc.pc(), 0x6365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01AC
        gbc.setState(0x615e, 0xb302, 0xc560, 0x2c2b, 0x97ef, 0x81c6, 0x0, 0x1);
        gbc.writeMem(0x615e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb302);
        EXPECT(gbc.pc(), 0x6160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01AD
        gbc.setState(0xa115, 0x3264, 0x5ce0, 0x562f, 0x336d, 0xd3ce, 0x0, 0x0);
        gbc.writeMem(0xa115, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3264);
        EXPECT(gbc.pc(), 0xa117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa115), 0xcb);
        EXPECT(gbc.readMem(0xa116), 0xfd);
        // CB FD 01AE
        gbc.setState(0x7629, 0x2d73, 0xd9d0, 0xda14, 0x8235, 0xf8f3, 0x0, 0x0);
        gbc.writeMem(0x7629, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2d73);
        EXPECT(gbc.pc(), 0x762b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01AF
        gbc.setState(0x78dd, 0x5104, 0xc60, 0xc1e4, 0x70f, 0xe75f, 0x1, 0x1);
        gbc.writeMem(0x78dd, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5104);
        EXPECT(gbc.pc(), 0x78df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01B0
        gbc.setState(0x111a, 0x654c, 0x3bf0, 0xee32, 0xf407, 0xd1f8, 0x1, 0x1);
        gbc.writeMem(0x111a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x654c);
        EXPECT(gbc.pc(), 0x111c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01B1
        gbc.setState(0x9e4e, 0x3cc3, 0x3330, 0xc752, 0xcaab, 0xcdc7, 0x1, 0x1);
        gbc.writeMem(0x9e4e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x3cc3);
        EXPECT(gbc.pc(), 0x9e50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e4e), 0xcb);
        EXPECT(gbc.readMem(0x9e4f), 0xfd);
        // CB FD 01B2
        gbc.setState(0xd69b, 0x6e8c, 0xda20, 0x7f5, 0x53be, 0x47c0, 0x0, 0x0);
        gbc.writeMem(0xd69b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6e8c);
        EXPECT(gbc.pc(), 0xd69d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd69b), 0xcb);
        EXPECT(gbc.readMem(0xd69c), 0xfd);
        // CB FD 01B3
        gbc.setState(0x10f, 0xaf89, 0x75e0, 0x51e7, 0xe7d0, 0xb853, 0x1, 0x0);
        gbc.writeMem(0x10f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xaf89);
        EXPECT(gbc.pc(), 0x111);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01B4
        gbc.setState(0xdc08, 0xc6f7, 0xc560, 0xa6cb, 0x494a, 0x42ba, 0x0, 0x1);
        gbc.writeMem(0xdc08, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc6f7);
        EXPECT(gbc.pc(), 0xdc0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc08), 0xcb);
        EXPECT(gbc.readMem(0xdc09), 0xfd);
        // CB FD 01B5
        gbc.setState(0xdaf2, 0x42ae, 0x3440, 0x11a1, 0x9bcd, 0x71ea, 0x1, 0x1);
        gbc.writeMem(0xdaf2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x42ae);
        EXPECT(gbc.pc(), 0xdaf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf2), 0xcb);
        EXPECT(gbc.readMem(0xdaf3), 0xfd);
        // CB FD 01B6
        gbc.setState(0x273b, 0x29d2, 0x1740, 0x397c, 0x3d26, 0x4e3c, 0x1, 0x0);
        gbc.writeMem(0x273b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x29d2);
        EXPECT(gbc.pc(), 0x273d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01B7
        gbc.setState(0xc17a, 0x6404, 0xd770, 0x69d5, 0xdc35, 0x359f, 0x1, 0x0);
        gbc.writeMem(0xc17a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6404);
        EXPECT(gbc.pc(), 0xc17c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc17a), 0xcb);
        EXPECT(gbc.readMem(0xc17b), 0xfd);
        // CB FD 01B8
        gbc.setState(0x83b9, 0xa7de, 0x64f0, 0x2eec, 0xc08f, 0xe7cc, 0x0, 0x0);
        gbc.writeMem(0x83b9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa7de);
        EXPECT(gbc.pc(), 0x83bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83b9), 0xcb);
        EXPECT(gbc.readMem(0x83ba), 0xfd);
        // CB FD 01B9
        gbc.setState(0x266d, 0x2f59, 0x6e0, 0x1b3b, 0xe056, 0x2d18, 0x0, 0x0);
        gbc.writeMem(0x266d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2f59);
        EXPECT(gbc.pc(), 0x266f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01BA
        gbc.setState(0x53, 0x82a4, 0xd0d0, 0x90f3, 0x4b48, 0x55d2, 0x1, 0x0);
        gbc.writeMem(0x53, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x82a4);
        EXPECT(gbc.pc(), 0x55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01BB
        gbc.setState(0x9365, 0x2172, 0x4e60, 0x29d3, 0x5724, 0x4d3b, 0x1, 0x1);
        gbc.writeMem(0x9365, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2172);
        EXPECT(gbc.pc(), 0x9367);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9365), 0xcb);
        EXPECT(gbc.readMem(0x9366), 0xfd);
        // CB FD 01BC
        gbc.setState(0xddf9, 0xff40, 0xaf70, 0x7459, 0x3fb1, 0xcf98, 0x0, 0x1);
        gbc.writeMem(0xddf9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xff40);
        EXPECT(gbc.pc(), 0xddfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf9), 0xcb);
        EXPECT(gbc.readMem(0xddfa), 0xfd);
        // CB FD 01BD
        gbc.setState(0x283f, 0x7576, 0xf490, 0x41d6, 0x9e97, 0x7f0, 0x1, 0x0);
        gbc.writeMem(0x283f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7576);
        EXPECT(gbc.pc(), 0x2841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01BE
        gbc.setState(0xa254, 0x58ba, 0x3a0, 0x7831, 0x353, 0xb453, 0x1, 0x0);
        gbc.writeMem(0xa254, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x58ba);
        EXPECT(gbc.pc(), 0xa256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa254), 0xcb);
        EXPECT(gbc.readMem(0xa255), 0xfd);
        // CB FD 01BF
        gbc.setState(0xb177, 0x55ea, 0x9e90, 0xb266, 0xec67, 0x8b2, 0x0, 0x1);
        gbc.writeMem(0xb177, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x55ea);
        EXPECT(gbc.pc(), 0xb179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb177), 0xcb);
        EXPECT(gbc.readMem(0xb178), 0xfd);
        // CB FD 01C1
        gbc.setState(0xdb8d, 0xb076, 0xe0a0, 0x3d90, 0x4353, 0xdc53, 0x1, 0x1);
        gbc.writeMem(0xdb8d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb076);
        EXPECT(gbc.pc(), 0xdb8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8d), 0xcb);
        EXPECT(gbc.readMem(0xdb8e), 0xfd);
        // CB FD 01C2
        gbc.setState(0x7ca9, 0x7cca, 0xa380, 0xb446, 0xe8, 0xa66e, 0x1, 0x0);
        gbc.writeMem(0x7ca9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7cca);
        EXPECT(gbc.pc(), 0x7cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01C3
        gbc.setState(0x2911, 0x80a5, 0x3400, 0xedaa, 0xa0a2, 0xe232, 0x1, 0x0);
        gbc.writeMem(0x2911, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x80a5);
        EXPECT(gbc.pc(), 0x2913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01C4
        gbc.setState(0xec3a, 0x471a, 0xeb30, 0xd8be, 0xcdb, 0xa3b3, 0x0, 0x1);
        gbc.writeMem(0xec3a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x471a);
        EXPECT(gbc.pc(), 0xec3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec3a), 0xcb);
        EXPECT(gbc.readMem(0xec3b), 0xfd);
        // CB FD 01C5
        gbc.setState(0xc580, 0xdbab, 0xd980, 0xe82f, 0xd637, 0x4e76, 0x0, 0x1);
        gbc.writeMem(0xc580, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xdbab);
        EXPECT(gbc.pc(), 0xc582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc580), 0xcb);
        EXPECT(gbc.readMem(0xc581), 0xfd);
        // CB FD 01C6
        gbc.setState(0xb8be, 0x7549, 0x1c40, 0x10cd, 0x1d46, 0x7bb6, 0x1, 0x0);
        gbc.writeMem(0xb8be, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7549);
        EXPECT(gbc.pc(), 0xb8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8be), 0xcb);
        EXPECT(gbc.readMem(0xb8bf), 0xfd);
        // CB FD 01C7
        gbc.setState(0xc8ad, 0x7cf6, 0x6260, 0x32f7, 0x3533, 0xccf0, 0x1, 0x0);
        gbc.writeMem(0xc8ad, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7cf6);
        EXPECT(gbc.pc(), 0xc8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ad), 0xcb);
        EXPECT(gbc.readMem(0xc8ae), 0xfd);
        // CB FD 01C9
        gbc.setState(0xdf90, 0xe3d0, 0xb0f0, 0x60a7, 0x319, 0x6a16, 0x0, 0x0);
        gbc.writeMem(0xdf90, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe3d0);
        EXPECT(gbc.pc(), 0xdf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf90), 0xcb);
        EXPECT(gbc.readMem(0xdf91), 0xfd);
        // CB FD 01CA
        gbc.setState(0x6a7d, 0x7e97, 0xfee0, 0x8af5, 0x4b2a, 0xe618, 0x0, 0x0);
        gbc.writeMem(0x6a7d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7e97);
        EXPECT(gbc.pc(), 0x6a7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01CB
        gbc.setState(0x13ee, 0x8ca2, 0x6030, 0x201, 0x8e4a, 0xf9f7, 0x1, 0x1);
        gbc.writeMem(0x13ee, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8ca2);
        EXPECT(gbc.pc(), 0x13f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01CC
        gbc.setState(0xf2d, 0x47eb, 0x7660, 0x66f7, 0x1ad9, 0x2e19, 0x1, 0x1);
        gbc.writeMem(0xf2d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x47eb);
        EXPECT(gbc.pc(), 0xf2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01CD
        gbc.setState(0xe0c1, 0xbc38, 0xe080, 0x11af, 0x44eb, 0xe9cf, 0x0, 0x1);
        gbc.writeMem(0xe0c1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbc38);
        EXPECT(gbc.pc(), 0xe0c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c1), 0xcb);
        EXPECT(gbc.readMem(0xe0c2), 0xfd);
        // CB FD 01CE
        gbc.setState(0x4a43, 0x8dbf, 0x7800, 0x8054, 0xdaf2, 0x5058, 0x1, 0x1);
        gbc.writeMem(0x4a43, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8dbf);
        EXPECT(gbc.pc(), 0x4a45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01CF
        gbc.setState(0x48aa, 0x2249, 0x2f30, 0xad78, 0xd35a, 0xb060, 0x1, 0x1);
        gbc.writeMem(0x48aa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2249);
        EXPECT(gbc.pc(), 0x48ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01D0
        gbc.setState(0xcfa1, 0x8f0f, 0x9f90, 0xceb5, 0xb0ce, 0xd09, 0x0, 0x1);
        gbc.writeMem(0xcfa1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8f0f);
        EXPECT(gbc.pc(), 0xcfa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa1), 0xcb);
        EXPECT(gbc.readMem(0xcfa2), 0xfd);
        // CB FD 01D1
        gbc.setState(0x318f, 0x959, 0x48d0, 0x9bff, 0xbef7, 0x7c27, 0x0, 0x0);
        gbc.writeMem(0x318f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x959);
        EXPECT(gbc.pc(), 0x3191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01D2
        gbc.setState(0x96a1, 0xaf7b, 0x9cb0, 0x66df, 0x2c1e, 0x440d, 0x0, 0x0);
        gbc.writeMem(0x96a1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xaf7b);
        EXPECT(gbc.pc(), 0x96a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a1), 0xcb);
        EXPECT(gbc.readMem(0x96a2), 0xfd);
        // CB FD 01D3
        gbc.setState(0x5c88, 0xc4da, 0x4e70, 0x2fd3, 0x3d59, 0x4179, 0x0, 0x1);
        gbc.writeMem(0x5c88, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc4da);
        EXPECT(gbc.pc(), 0x5c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01D5
        gbc.setState(0x4d67, 0x5b43, 0x6300, 0xe3f1, 0xf039, 0x8a26, 0x0, 0x0);
        gbc.writeMem(0x4d67, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5b43);
        EXPECT(gbc.pc(), 0x4d69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01D6
        gbc.setState(0xd104, 0xb09, 0x5d40, 0xd6d3, 0xe5f0, 0xed22, 0x0, 0x0);
        gbc.writeMem(0xd104, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb09);
        EXPECT(gbc.pc(), 0xd106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd104), 0xcb);
        EXPECT(gbc.readMem(0xd105), 0xfd);
        // CB FD 01D7
        gbc.setState(0xe26e, 0x2e8b, 0x8250, 0x645e, 0x8755, 0x5a2d, 0x0, 0x0);
        gbc.writeMem(0xe26e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2e8b);
        EXPECT(gbc.pc(), 0xe270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe26e), 0xcb);
        EXPECT(gbc.readMem(0xe26f), 0xfd);
        // CB FD 01D8
        gbc.setState(0xc6d9, 0xc0f3, 0xbe0, 0x6ff7, 0x3aea, 0x4fa4, 0x1, 0x1);
        gbc.writeMem(0xc6d9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc0f3);
        EXPECT(gbc.pc(), 0xc6db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d9), 0xcb);
        EXPECT(gbc.readMem(0xc6da), 0xfd);
        // CB FD 01D9
        gbc.setState(0x8b5a, 0x2e53, 0x1290, 0x10cb, 0xad52, 0x3f20, 0x1, 0x1);
        gbc.writeMem(0x8b5a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2e53);
        EXPECT(gbc.pc(), 0x8b5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5a), 0xcb);
        EXPECT(gbc.readMem(0x8b5b), 0xfd);
        // CB FD 01DA
        gbc.setState(0x11db, 0xdbef, 0xbd70, 0x2dbe, 0xab96, 0x9d5b, 0x1, 0x0);
        gbc.writeMem(0x11db, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xdbef);
        EXPECT(gbc.pc(), 0x11dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01DB
        gbc.setState(0x3041, 0x328e, 0x8810, 0x3de1, 0xcea6, 0x6898, 0x0, 0x0);
        gbc.writeMem(0x3041, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x328e);
        EXPECT(gbc.pc(), 0x3043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01DC
        gbc.setState(0xacfa, 0x5847, 0x1010, 0x6589, 0x909e, 0xb67, 0x1, 0x0);
        gbc.writeMem(0xacfa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5847);
        EXPECT(gbc.pc(), 0xacfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacfa), 0xcb);
        EXPECT(gbc.readMem(0xacfb), 0xfd);
        // CB FD 01DD
        gbc.setState(0xbe24, 0x252d, 0x5b20, 0x98, 0x2228, 0x85e, 0x0, 0x1);
        gbc.writeMem(0xbe24, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x252d);
        EXPECT(gbc.pc(), 0xbe26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe24), 0xcb);
        EXPECT(gbc.readMem(0xbe25), 0xfd);
        // CB FD 01DE
        gbc.setState(0x8739, 0x7d4, 0x6a30, 0xf8ed, 0x9528, 0x38b, 0x0, 0x0);
        gbc.writeMem(0x8739, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7d4);
        EXPECT(gbc.pc(), 0x873b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8739), 0xcb);
        EXPECT(gbc.readMem(0x873a), 0xfd);
        // CB FD 01DF
        gbc.setState(0xe82e, 0x52f7, 0x8060, 0xbfb6, 0x3fb9, 0xc9ba, 0x0, 0x0);
        gbc.writeMem(0xe82e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x52f7);
        EXPECT(gbc.pc(), 0xe830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe82e), 0xcb);
        EXPECT(gbc.readMem(0xe82f), 0xfd);
        // CB FD 01E0
        gbc.setState(0x79fa, 0x430e, 0x6920, 0xd73, 0xc269, 0xaa92, 0x0, 0x0);
        gbc.writeMem(0x79fa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x430e);
        EXPECT(gbc.pc(), 0x79fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01E1
        gbc.setState(0x21af, 0x4d6f, 0x8960, 0xf741, 0x5975, 0xab27, 0x1, 0x0);
        gbc.writeMem(0x21af, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4d6f);
        EXPECT(gbc.pc(), 0x21b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01E2
        gbc.setState(0x34b3, 0xbaa4, 0xbb90, 0xe864, 0x4ee1, 0xc4e1, 0x0, 0x0);
        gbc.writeMem(0x34b3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbaa4);
        EXPECT(gbc.pc(), 0x34b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01E3
        gbc.setState(0xbc2c, 0x2796, 0xe740, 0x246b, 0xff31, 0xc72d, 0x1, 0x0);
        gbc.writeMem(0xbc2c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2796);
        EXPECT(gbc.pc(), 0xbc2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2c), 0xcb);
        EXPECT(gbc.readMem(0xbc2d), 0xfd);
        // CB FD 01E4
        gbc.setState(0x3409, 0x11fd, 0x6380, 0xb319, 0xff1c, 0xa2c5, 0x0, 0x1);
        gbc.writeMem(0x3409, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x11fd);
        EXPECT(gbc.pc(), 0x340b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01E5
        gbc.setState(0xaa32, 0x6818, 0xbd00, 0xf0f5, 0xfa55, 0xc4b1, 0x0, 0x1);
        gbc.writeMem(0xaa32, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6818);
        EXPECT(gbc.pc(), 0xaa34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa32), 0xcb);
        EXPECT(gbc.readMem(0xaa33), 0xfd);
        // CB FD 01E6
        gbc.setState(0x4aa7, 0x525d, 0xc270, 0xea7a, 0xddb3, 0xedf8, 0x1, 0x1);
        gbc.writeMem(0x4aa7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x525d);
        EXPECT(gbc.pc(), 0x4aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01E7
        gbc.setState(0xd305, 0x192d, 0x6ce0, 0xd59f, 0xf216, 0xea42, 0x1, 0x1);
        gbc.writeMem(0xd305, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x192d);
        EXPECT(gbc.pc(), 0xd307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd305), 0xcb);
        EXPECT(gbc.readMem(0xd306), 0xfd);
        // CB FD 01E8
        gbc.setState(0x7c90, 0x9ff8, 0xbe0, 0x3d14, 0xa0ad, 0x9019, 0x1, 0x0);
        gbc.writeMem(0x7c90, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9ff8);
        EXPECT(gbc.pc(), 0x7c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01E9
        gbc.setState(0xdb69, 0x2a92, 0xc5f0, 0x3602, 0xeeda, 0x8bb5, 0x0, 0x1);
        gbc.writeMem(0xdb69, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2a92);
        EXPECT(gbc.pc(), 0xdb6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb69), 0xcb);
        EXPECT(gbc.readMem(0xdb6a), 0xfd);
        // CB FD 01EA
        gbc.setState(0x171c, 0xe56c, 0xdf60, 0xfe24, 0xcf91, 0xe118, 0x1, 0x0);
        gbc.writeMem(0x171c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe56c);
        EXPECT(gbc.pc(), 0x171e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01EB
        gbc.setState(0x634c, 0x51fe, 0x7750, 0xf45d, 0x1f44, 0x9d91, 0x1, 0x1);
        gbc.writeMem(0x634c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x51fe);
        EXPECT(gbc.pc(), 0x634e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01EC
        gbc.setState(0x9cc4, 0x1b54, 0x48a0, 0x10de, 0x67bc, 0x15ca, 0x0, 0x0);
        gbc.writeMem(0x9cc4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1b54);
        EXPECT(gbc.pc(), 0x9cc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc4), 0xcb);
        EXPECT(gbc.readMem(0x9cc5), 0xfd);
        // CB FD 01ED
        gbc.setState(0xe656, 0xe93f, 0xfb50, 0xe10f, 0x6b96, 0x7c02, 0x0, 0x0);
        gbc.writeMem(0xe656, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe93f);
        EXPECT(gbc.pc(), 0xe658);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe656), 0xcb);
        EXPECT(gbc.readMem(0xe657), 0xfd);
        // CB FD 01EE
        gbc.setState(0x319c, 0x2f9d, 0xd420, 0x4b27, 0x737f, 0x5e80, 0x0, 0x0);
        gbc.writeMem(0x319c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2f9d);
        EXPECT(gbc.pc(), 0x319e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01EF
        gbc.setState(0xed1c, 0x6c5, 0x2830, 0x8db9, 0xe670, 0xfae4, 0x0, 0x0);
        gbc.writeMem(0xed1c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6c5);
        EXPECT(gbc.pc(), 0xed1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed1c), 0xcb);
        EXPECT(gbc.readMem(0xed1d), 0xfd);
        // CB FD 01F0
        gbc.setState(0x12d9, 0xa30c, 0xf750, 0xb4ed, 0x88fa, 0x8a6a, 0x0, 0x0);
        gbc.writeMem(0x12d9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa30c);
        EXPECT(gbc.pc(), 0x12db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01F1
        gbc.setState(0xbb97, 0x2fdb, 0x21d0, 0x62c4, 0x7d7c, 0xca60, 0x1, 0x1);
        gbc.writeMem(0xbb97, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2fdb);
        EXPECT(gbc.pc(), 0xbb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb97), 0xcb);
        EXPECT(gbc.readMem(0xbb98), 0xfd);
        // CB FD 01F2
        gbc.setState(0x9f92, 0x1c44, 0x52b0, 0x504, 0x972a, 0x5ba5, 0x0, 0x0);
        gbc.writeMem(0x9f92, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1c44);
        EXPECT(gbc.pc(), 0x9f94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f92), 0xcb);
        EXPECT(gbc.readMem(0x9f93), 0xfd);
        // CB FD 01F3
        gbc.setState(0xedbb, 0xb0e0, 0xf010, 0x59e9, 0xc8f8, 0x823c, 0x0, 0x0);
        gbc.writeMem(0xedbb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb0e0);
        EXPECT(gbc.pc(), 0xedbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedbb), 0xcb);
        EXPECT(gbc.readMem(0xedbc), 0xfd);
        // CB FD 01F4
        gbc.setState(0x8a68, 0xb23d, 0x65e0, 0x4c15, 0x3259, 0x9fd6, 0x0, 0x0);
        gbc.writeMem(0x8a68, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb23d);
        EXPECT(gbc.pc(), 0x8a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a68), 0xcb);
        EXPECT(gbc.readMem(0x8a69), 0xfd);
        // CB FD 01F5
        gbc.setState(0x58a1, 0xdd0b, 0xd3c0, 0xb2ee, 0xcfa7, 0xcd25, 0x0, 0x0);
        gbc.writeMem(0x58a1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xdd0b);
        EXPECT(gbc.pc(), 0x58a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01F6
        gbc.setState(0xaf4, 0x51e5, 0x4200, 0x65a0, 0x5310, 0xe10f, 0x1, 0x1);
        gbc.writeMem(0xaf4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x51e5);
        EXPECT(gbc.pc(), 0xaf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01F7
        gbc.setState(0x91c6, 0x679e, 0xa9a0, 0xa277, 0xa045, 0x7e6, 0x0, 0x0);
        gbc.writeMem(0x91c6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x679e);
        EXPECT(gbc.pc(), 0x91c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c6), 0xcb);
        EXPECT(gbc.readMem(0x91c7), 0xfd);
        // CB FD 01F8
        gbc.setState(0xeb15, 0x2536, 0x5190, 0x6732, 0xb96a, 0x4e41, 0x0, 0x0);
        gbc.writeMem(0xeb15, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2536);
        EXPECT(gbc.pc(), 0xeb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb15), 0xcb);
        EXPECT(gbc.readMem(0xeb16), 0xfd);
        // CB FD 01F9
        gbc.setState(0xef04, 0xddd3, 0x5b10, 0x8df, 0xf2c4, 0xae00, 0x0, 0x1);
        gbc.writeMem(0xef04, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xddd3);
        EXPECT(gbc.pc(), 0xef06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef04), 0xcb);
        EXPECT(gbc.readMem(0xef05), 0xfd);
        // CB FD 01FA
        gbc.setState(0x73c2, 0x4635, 0x7f40, 0xa6e9, 0x8e52, 0xa2da, 0x0, 0x0);
        gbc.writeMem(0x73c2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4635);
        EXPECT(gbc.pc(), 0x73c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01FB
        gbc.setState(0x852b, 0x6980, 0x2a80, 0xfe3, 0x48cd, 0x1f09, 0x0, 0x0);
        gbc.writeMem(0x852b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6980);
        EXPECT(gbc.pc(), 0x852d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x852b), 0xcb);
        EXPECT(gbc.readMem(0x852c), 0xfd);
        // CB FD 01FC
        gbc.setState(0x556c, 0xd985, 0x540, 0x4958, 0x14c4, 0xac23, 0x1, 0x0);
        gbc.writeMem(0x556c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd985);
        EXPECT(gbc.pc(), 0x556e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 01FD
        gbc.setState(0xa3c6, 0x7b26, 0xa350, 0xfaed, 0x92ab, 0x14cc, 0x1, 0x0);
        gbc.writeMem(0xa3c6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7b26);
        EXPECT(gbc.pc(), 0xa3c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c6), 0xcb);
        EXPECT(gbc.readMem(0xa3c7), 0xfd);
        // CB FD 01FE
        gbc.setState(0x1ba9, 0xe1d, 0x8bd0, 0x1910, 0x6302, 0x1efe, 0x0, 0x1);
        gbc.writeMem(0x1ba9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe1d);
        EXPECT(gbc.pc(), 0x1bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 01FF
        gbc.setState(0xb0af, 0xb235, 0xbfe0, 0x3246, 0xb4c3, 0xde17, 0x0, 0x1);
        gbc.writeMem(0xb0af, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb235);
        EXPECT(gbc.pc(), 0xb0b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0af), 0xcb);
        EXPECT(gbc.readMem(0xb0b0), 0xfd);
        // CB FD 0201
        gbc.setState(0x7223, 0x60d, 0x5190, 0x7612, 0x71e, 0x2a95, 0x1, 0x0);
        gbc.writeMem(0x7223, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x60d);
        EXPECT(gbc.pc(), 0x7225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0202
        gbc.setState(0x607, 0xda93, 0xe070, 0x2c26, 0xeb5d, 0x5340, 0x1, 0x0);
        gbc.writeMem(0x607, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xda93);
        EXPECT(gbc.pc(), 0x609);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0203
        gbc.setState(0x56e2, 0x5674, 0xac50, 0x9dfd, 0x5d6e, 0x8cf9, 0x0, 0x1);
        gbc.writeMem(0x56e2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5674);
        EXPECT(gbc.pc(), 0x56e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0204
        gbc.setState(0xa545, 0x8ceb, 0xb660, 0xbd6d, 0xc6b1, 0xba86, 0x1, 0x0);
        gbc.writeMem(0xa545, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8ceb);
        EXPECT(gbc.pc(), 0xa547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa545), 0xcb);
        EXPECT(gbc.readMem(0xa546), 0xfd);
        // CB FD 0205
        gbc.setState(0x41bf, 0x9d9b, 0x2430, 0x5e9f, 0x1c27, 0x7603, 0x1, 0x1);
        gbc.writeMem(0x41bf, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9d9b);
        EXPECT(gbc.pc(), 0x41c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0206
        gbc.setState(0xcdf5, 0x11ac, 0xf8b0, 0xb39a, 0xd6b2, 0xefdd, 0x1, 0x0);
        gbc.writeMem(0xcdf5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x11ac);
        EXPECT(gbc.pc(), 0xcdf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdf5), 0xcb);
        EXPECT(gbc.readMem(0xcdf6), 0xfd);
        // CB FD 0207
        gbc.setState(0xdd9b, 0x6eef, 0xecd0, 0xcb87, 0x7483, 0x934f, 0x1, 0x0);
        gbc.writeMem(0xdd9b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6eef);
        EXPECT(gbc.pc(), 0xdd9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd9b), 0xcb);
        EXPECT(gbc.readMem(0xdd9c), 0xfd);
        // CB FD 0208
        gbc.setState(0xe513, 0xeed0, 0x9440, 0xaad, 0xc058, 0x877e, 0x1, 0x0);
        gbc.writeMem(0xe513, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xeed0);
        EXPECT(gbc.pc(), 0xe515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe513), 0xcb);
        EXPECT(gbc.readMem(0xe514), 0xfd);
        // CB FD 0209
        gbc.setState(0x9912, 0xb332, 0xa7e0, 0x448f, 0x5c9f, 0x540, 0x0, 0x1);
        gbc.writeMem(0x9912, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb332);
        EXPECT(gbc.pc(), 0x9914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9912), 0xcb);
        EXPECT(gbc.readMem(0x9913), 0xfd);
        // CB FD 020A
        gbc.setState(0x16fd, 0x6766, 0xb610, 0xc3c8, 0xbb13, 0x4711, 0x1, 0x0);
        gbc.writeMem(0x16fd, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6766);
        EXPECT(gbc.pc(), 0x16ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 020B
        gbc.setState(0x923f, 0x5e67, 0x2a50, 0x4634, 0x228, 0x94b7, 0x1, 0x1);
        gbc.writeMem(0x923f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5e67);
        EXPECT(gbc.pc(), 0x9241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x923f), 0xcb);
        EXPECT(gbc.readMem(0x9240), 0xfd);
        // CB FD 020C
        gbc.setState(0xe4c, 0x757b, 0xd6b0, 0x969a, 0xa446, 0xa476, 0x1, 0x1);
        gbc.writeMem(0xe4c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x757b);
        EXPECT(gbc.pc(), 0xe4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 020D
        gbc.setState(0x6d4c, 0x4cee, 0x97e0, 0xcad3, 0xede, 0xe127, 0x0, 0x0);
        gbc.writeMem(0x6d4c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4cee);
        EXPECT(gbc.pc(), 0x6d4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 020E
        gbc.setState(0x8faa, 0x81b5, 0x4730, 0x8239, 0x4ed4, 0x9218, 0x0, 0x0);
        gbc.writeMem(0x8faa, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x81b5);
        EXPECT(gbc.pc(), 0x8fac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8faa), 0xcb);
        EXPECT(gbc.readMem(0x8fab), 0xfd);
        // CB FD 020F
        gbc.setState(0x7b7e, 0x8bb5, 0xe2a0, 0xf5cc, 0x7aed, 0x2fda, 0x0, 0x0);
        gbc.writeMem(0x7b7e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8bb5);
        EXPECT(gbc.pc(), 0x7b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0212
        gbc.setState(0xb1df, 0xd192, 0xce90, 0xe1ff, 0x9857, 0x2396, 0x0, 0x0);
        gbc.writeMem(0xb1df, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd192);
        EXPECT(gbc.pc(), 0xb1e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1df), 0xcb);
        EXPECT(gbc.readMem(0xb1e0), 0xfd);
        // CB FD 0213
        gbc.setState(0x3d4a, 0x960c, 0xfcb0, 0x5bdc, 0xb1f, 0xe1a6, 0x0, 0x1);
        gbc.writeMem(0x3d4a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x960c);
        EXPECT(gbc.pc(), 0x3d4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0214
        gbc.setState(0xe406, 0x8993, 0x1800, 0xaf54, 0x25ae, 0x82bf, 0x1, 0x1);
        gbc.writeMem(0xe406, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8993);
        EXPECT(gbc.pc(), 0xe408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe406), 0xcb);
        EXPECT(gbc.readMem(0xe407), 0xfd);
        // CB FD 0215
        gbc.setState(0xc204, 0xca98, 0x70d0, 0x631b, 0x7313, 0xe5f6, 0x0, 0x0);
        gbc.writeMem(0xc204, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xca98);
        EXPECT(gbc.pc(), 0xc206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc204), 0xcb);
        EXPECT(gbc.readMem(0xc205), 0xfd);
        // CB FD 0216
        gbc.setState(0x781e, 0x2808, 0x2100, 0x47f8, 0xc510, 0x3b7a, 0x1, 0x0);
        gbc.writeMem(0x781e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2808);
        EXPECT(gbc.pc(), 0x7820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0217
        gbc.setState(0x25e6, 0x983a, 0x8b0, 0x9dc8, 0x7446, 0x4b5f, 0x0, 0x0);
        gbc.writeMem(0x25e6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x983a);
        EXPECT(gbc.pc(), 0x25e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0218
        gbc.setState(0xcd78, 0xffa7, 0x4720, 0x39, 0x174d, 0xfc6c, 0x0, 0x1);
        gbc.writeMem(0xcd78, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xffa7);
        EXPECT(gbc.pc(), 0xcd7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd78), 0xcb);
        EXPECT(gbc.readMem(0xcd79), 0xfd);
        // CB FD 0219
        gbc.setState(0x13f7, 0xf2df, 0x6a60, 0xfcb1, 0xdd05, 0x8a21, 0x1, 0x1);
        gbc.writeMem(0x13f7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf2df);
        EXPECT(gbc.pc(), 0x13f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 021A
        gbc.setState(0xc344, 0x168b, 0xed90, 0x2842, 0x4408, 0x903d, 0x0, 0x0);
        gbc.writeMem(0xc344, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x168b);
        EXPECT(gbc.pc(), 0xc346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc344), 0xcb);
        EXPECT(gbc.readMem(0xc345), 0xfd);
        // CB FD 021B
        gbc.setState(0xddcf, 0xd8cf, 0xbc60, 0x973d, 0x4b0f, 0xba50, 0x1, 0x0);
        gbc.writeMem(0xddcf, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd8cf);
        EXPECT(gbc.pc(), 0xddd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddcf), 0xcb);
        EXPECT(gbc.readMem(0xddd0), 0xfd);
        // CB FD 021C
        gbc.setState(0x1531, 0xb297, 0x52b0, 0x307e, 0xf2f1, 0x86ac, 0x1, 0x0);
        gbc.writeMem(0x1531, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb297);
        EXPECT(gbc.pc(), 0x1533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 021D
        gbc.setState(0x293c, 0xda72, 0xd210, 0x650e, 0x1ca5, 0x7e67, 0x1, 0x0);
        gbc.writeMem(0x293c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xda72);
        EXPECT(gbc.pc(), 0x293e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 021E
        gbc.setState(0xa347, 0x91eb, 0x6160, 0x3e15, 0x8002, 0xf2b0, 0x1, 0x0);
        gbc.writeMem(0xa347, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x91eb);
        EXPECT(gbc.pc(), 0xa349);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa347), 0xcb);
        EXPECT(gbc.readMem(0xa348), 0xfd);
        // CB FD 021F
        gbc.setState(0x76fe, 0xdfab, 0x5740, 0xcffe, 0xa781, 0x4d68, 0x0, 0x0);
        gbc.writeMem(0x76fe, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdfab);
        EXPECT(gbc.pc(), 0x7700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0220
        gbc.setState(0xe66e, 0x8aa, 0x1bd0, 0xa36b, 0x539b, 0x5b05, 0x0, 0x1);
        gbc.writeMem(0xe66e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8aa);
        EXPECT(gbc.pc(), 0xe670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe66e), 0xcb);
        EXPECT(gbc.readMem(0xe66f), 0xfd);
        // CB FD 0221
        gbc.setState(0x8819, 0xb1b, 0x8ef0, 0xbce2, 0x1f61, 0xb207, 0x1, 0x0);
        gbc.writeMem(0x8819, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb1b);
        EXPECT(gbc.pc(), 0x881b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8819), 0xcb);
        EXPECT(gbc.readMem(0x881a), 0xfd);
        // CB FD 0222
        gbc.setState(0xcf58, 0x6f91, 0xab50, 0x206, 0xc974, 0x74b6, 0x1, 0x1);
        gbc.writeMem(0xcf58, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6f91);
        EXPECT(gbc.pc(), 0xcf5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf58), 0xcb);
        EXPECT(gbc.readMem(0xcf59), 0xfd);
        // CB FD 0223
        gbc.setState(0xb1bc, 0x75d1, 0x3c40, 0xc361, 0x4844, 0x9462, 0x1, 0x1);
        gbc.writeMem(0xb1bc, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x75d1);
        EXPECT(gbc.pc(), 0xb1be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1bc), 0xcb);
        EXPECT(gbc.readMem(0xb1bd), 0xfd);
        // CB FD 0224
        gbc.setState(0x2154, 0x8568, 0x2900, 0xaab2, 0xc23f, 0xabbd, 0x1, 0x0);
        gbc.writeMem(0x2154, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8568);
        EXPECT(gbc.pc(), 0x2156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0225
        gbc.setState(0x57a6, 0xd898, 0xb350, 0xd693, 0x90ae, 0xe46b, 0x0, 0x1);
        gbc.writeMem(0x57a6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd898);
        EXPECT(gbc.pc(), 0x57a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0226
        gbc.setState(0xec0a, 0x1753, 0x6580, 0x1274, 0xad11, 0x293c, 0x1, 0x1);
        gbc.writeMem(0xec0a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1753);
        EXPECT(gbc.pc(), 0xec0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec0a), 0xcb);
        EXPECT(gbc.readMem(0xec0b), 0xfd);
        // CB FD 0227
        gbc.setState(0xe8e8, 0xe5d3, 0x340, 0xae35, 0x17ba, 0x324e, 0x0, 0x0);
        gbc.writeMem(0xe8e8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe5d3);
        EXPECT(gbc.pc(), 0xe8ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e8), 0xcb);
        EXPECT(gbc.readMem(0xe8e9), 0xfd);
        // CB FD 0228
        gbc.setState(0xca5e, 0x5034, 0x8420, 0x9dc5, 0xa2d8, 0x2425, 0x1, 0x0);
        gbc.writeMem(0xca5e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5034);
        EXPECT(gbc.pc(), 0xca60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca5e), 0xcb);
        EXPECT(gbc.readMem(0xca5f), 0xfd);
        // CB FD 0229
        gbc.setState(0xb01b, 0xeade, 0xf3d0, 0x4372, 0xf17c, 0x5d8d, 0x0, 0x0);
        gbc.writeMem(0xb01b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xeade);
        EXPECT(gbc.pc(), 0xb01d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb01b), 0xcb);
        EXPECT(gbc.readMem(0xb01c), 0xfd);
        // CB FD 022A
        gbc.setState(0xebfb, 0x64c5, 0x1b30, 0x6d91, 0xf7b7, 0x1d7f, 0x0, 0x1);
        gbc.writeMem(0xebfb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x64c5);
        EXPECT(gbc.pc(), 0xebfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfb), 0xcb);
        EXPECT(gbc.readMem(0xebfc), 0xfd);
        // CB FD 022B
        gbc.setState(0x6d73, 0xab07, 0x1390, 0x3e2d, 0xce42, 0x50c0, 0x0, 0x1);
        gbc.writeMem(0x6d73, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xab07);
        EXPECT(gbc.pc(), 0x6d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 022C
        gbc.setState(0x2c62, 0x5f5b, 0x2dd0, 0x506, 0xefbc, 0xa70b, 0x0, 0x1);
        gbc.writeMem(0x2c62, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5f5b);
        EXPECT(gbc.pc(), 0x2c64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 022D
        gbc.setState(0x6432, 0xb587, 0x9de0, 0xb4cc, 0x75af, 0xaa57, 0x0, 0x1);
        gbc.writeMem(0x6432, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb587);
        EXPECT(gbc.pc(), 0x6434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 022E
        gbc.setState(0x141b, 0xecf3, 0x39c0, 0xaf83, 0x1067, 0x35, 0x0, 0x0);
        gbc.writeMem(0x141b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xecf3);
        EXPECT(gbc.pc(), 0x141d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 022F
        gbc.setState(0xf68, 0x97c8, 0x77c0, 0x306c, 0x71e7, 0xa28f, 0x1, 0x1);
        gbc.writeMem(0xf68, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x97c8);
        EXPECT(gbc.pc(), 0xf6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0230
        gbc.setState(0x784b, 0xda83, 0xd5e0, 0xf0cf, 0x468f, 0x9646, 0x1, 0x1);
        gbc.writeMem(0x784b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xda83);
        EXPECT(gbc.pc(), 0x784d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0231
        gbc.setState(0x55d4, 0xcd04, 0xe450, 0x7ce9, 0x884, 0xc70, 0x1, 0x1);
        gbc.writeMem(0x55d4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcd04);
        EXPECT(gbc.pc(), 0x55d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0232
        gbc.setState(0x3162, 0x9150, 0x4060, 0x2470, 0xbf12, 0xb9e0, 0x0, 0x1);
        gbc.writeMem(0x3162, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9150);
        EXPECT(gbc.pc(), 0x3164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0233
        gbc.setState(0x394b, 0xba70, 0x6440, 0x661e, 0x4982, 0xbf69, 0x1, 0x1);
        gbc.writeMem(0x394b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xba70);
        EXPECT(gbc.pc(), 0x394d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0234
        gbc.setState(0xd0eb, 0x8c37, 0x7e30, 0xc926, 0xd0b7, 0x8de3, 0x0, 0x0);
        gbc.writeMem(0xd0eb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8c37);
        EXPECT(gbc.pc(), 0xd0ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0eb), 0xcb);
        EXPECT(gbc.readMem(0xd0ec), 0xfd);
        // CB FD 0235
        gbc.setState(0x70d4, 0x3ded, 0x6f80, 0x3f9b, 0xff1d, 0x284, 0x0, 0x0);
        gbc.writeMem(0x70d4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3ded);
        EXPECT(gbc.pc(), 0x70d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0236
        gbc.setState(0x474c, 0x84ad, 0xd900, 0x3db5, 0x493e, 0xd08e, 0x0, 0x0);
        gbc.writeMem(0x474c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x84ad);
        EXPECT(gbc.pc(), 0x474e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0237
        gbc.setState(0xbaec, 0x5f61, 0xd1d0, 0x310d, 0xf9db, 0x69dd, 0x1, 0x1);
        gbc.writeMem(0xbaec, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5f61);
        EXPECT(gbc.pc(), 0xbaee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaec), 0xcb);
        EXPECT(gbc.readMem(0xbaed), 0xfd);
        // CB FD 0238
        gbc.setState(0x9e9c, 0xf47d, 0x2650, 0x69e7, 0xd456, 0xf609, 0x0, 0x1);
        gbc.writeMem(0x9e9c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf47d);
        EXPECT(gbc.pc(), 0x9e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e9c), 0xcb);
        EXPECT(gbc.readMem(0x9e9d), 0xfd);
        // CB FD 0239
        gbc.setState(0x2819, 0x656c, 0xef20, 0x7d8e, 0x3dd4, 0xea3d, 0x1, 0x0);
        gbc.writeMem(0x2819, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x656c);
        EXPECT(gbc.pc(), 0x281b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 023A
        gbc.setState(0x488c, 0xa39d, 0xa450, 0x7672, 0x2bbe, 0xc6a0, 0x1, 0x1);
        gbc.writeMem(0x488c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa39d);
        EXPECT(gbc.pc(), 0x488e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 023B
        gbc.setState(0x4967, 0xe8db, 0x57c0, 0x39ef, 0x33c4, 0x6704, 0x1, 0x0);
        gbc.writeMem(0x4967, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe8db);
        EXPECT(gbc.pc(), 0x4969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 023C
        gbc.setState(0x3c0d, 0x6283, 0xdf00, 0x98f7, 0x272e, 0xb028, 0x1, 0x0);
        gbc.writeMem(0x3c0d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6283);
        EXPECT(gbc.pc(), 0x3c0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 023D
        gbc.setState(0xee76, 0x86e7, 0x5bd0, 0x79ff, 0xfd43, 0x6696, 0x0, 0x1);
        gbc.writeMem(0xee76, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x86e7);
        EXPECT(gbc.pc(), 0xee78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee76), 0xcb);
        EXPECT(gbc.readMem(0xee77), 0xfd);
        // CB FD 023E
        gbc.setState(0xd753, 0x397c, 0x7100, 0x9154, 0x5195, 0x3259, 0x1, 0x0);
        gbc.writeMem(0xd753, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x397c);
        EXPECT(gbc.pc(), 0xd755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd753), 0xcb);
        EXPECT(gbc.readMem(0xd754), 0xfd);
        // CB FD 023F
        gbc.setState(0x536f, 0x9177, 0x1eb0, 0x9496, 0xea82, 0xf82f, 0x1, 0x0);
        gbc.writeMem(0x536f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9177);
        EXPECT(gbc.pc(), 0x5371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0240
        gbc.setState(0x9ef1, 0x4e87, 0x3db0, 0xedc5, 0xac5f, 0x2d20, 0x0, 0x1);
        gbc.writeMem(0x9ef1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4e87);
        EXPECT(gbc.pc(), 0x9ef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef1), 0xcb);
        EXPECT(gbc.readMem(0x9ef2), 0xfd);
        // CB FD 0241
        gbc.setState(0xebf4, 0x6e10, 0xd6e0, 0xd8ad, 0x1c0e, 0x9d32, 0x0, 0x0);
        gbc.writeMem(0xebf4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6e10);
        EXPECT(gbc.pc(), 0xebf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf4), 0xcb);
        EXPECT(gbc.readMem(0xebf5), 0xfd);
        // CB FD 0242
        gbc.setState(0x6435, 0x3fac, 0xe100, 0xf223, 0xba68, 0x315f, 0x0, 0x1);
        gbc.writeMem(0x6435, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3fac);
        EXPECT(gbc.pc(), 0x6437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0243
        gbc.setState(0x3bd9, 0x902d, 0xfe10, 0xe513, 0xeef9, 0x3906, 0x0, 0x1);
        gbc.writeMem(0x3bd9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x902d);
        EXPECT(gbc.pc(), 0x3bdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0244
        gbc.setState(0xc388, 0xbfbd, 0x4be0, 0x827b, 0xc410, 0x12fd, 0x0, 0x0);
        gbc.writeMem(0xc388, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbfbd);
        EXPECT(gbc.pc(), 0xc38a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc388), 0xcb);
        EXPECT(gbc.readMem(0xc389), 0xfd);
        // CB FD 0245
        gbc.setState(0x7ade, 0xe77d, 0x2100, 0xbff2, 0xf88a, 0x2da7, 0x0, 0x0);
        gbc.writeMem(0x7ade, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe77d);
        EXPECT(gbc.pc(), 0x7ae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0246
        gbc.setState(0xd2b4, 0xe348, 0x4da0, 0x26fd, 0x912f, 0x8db9, 0x1, 0x1);
        gbc.writeMem(0xd2b4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe348);
        EXPECT(gbc.pc(), 0xd2b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b4), 0xcb);
        EXPECT(gbc.readMem(0xd2b5), 0xfd);
        // CB FD 0247
        gbc.setState(0xed33, 0xe887, 0x6a30, 0xfb2c, 0x678f, 0x7bdf, 0x1, 0x1);
        gbc.writeMem(0xed33, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe887);
        EXPECT(gbc.pc(), 0xed35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed33), 0xcb);
        EXPECT(gbc.readMem(0xed34), 0xfd);
        // CB FD 0248
        gbc.setState(0x1dab, 0xf38a, 0x8080, 0x894e, 0x98cd, 0xfdc0, 0x0, 0x0);
        gbc.writeMem(0x1dab, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf38a);
        EXPECT(gbc.pc(), 0x1dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0249
        gbc.setState(0x3848, 0x88c0, 0xd890, 0xee39, 0x9c37, 0xe2b9, 0x0, 0x0);
        gbc.writeMem(0x3848, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x88c0);
        EXPECT(gbc.pc(), 0x384a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 024A
        gbc.setState(0x7a2a, 0x33b1, 0xed00, 0xcd51, 0xed33, 0x50c9, 0x0, 0x1);
        gbc.writeMem(0x7a2a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x33b1);
        EXPECT(gbc.pc(), 0x7a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 024B
        gbc.setState(0xdc37, 0xa8b7, 0xc8c0, 0x3693, 0xdebc, 0xd0e0, 0x1, 0x0);
        gbc.writeMem(0xdc37, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa8b7);
        EXPECT(gbc.pc(), 0xdc39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc37), 0xcb);
        EXPECT(gbc.readMem(0xdc38), 0xfd);
        // CB FD 024C
        gbc.setState(0x8977, 0x941d, 0x4520, 0x2751, 0x6fcd, 0x8118, 0x0, 0x1);
        gbc.writeMem(0x8977, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x941d);
        EXPECT(gbc.pc(), 0x8979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8977), 0xcb);
        EXPECT(gbc.readMem(0x8978), 0xfd);
        // CB FD 024D
        gbc.setState(0xafac, 0x4fc8, 0x6a20, 0x8932, 0x37b1, 0x603b, 0x1, 0x0);
        gbc.writeMem(0xafac, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4fc8);
        EXPECT(gbc.pc(), 0xafae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafac), 0xcb);
        EXPECT(gbc.readMem(0xafad), 0xfd);
        // CB FD 024F
        gbc.setState(0x1af, 0x366c, 0x8cb0, 0x283a, 0xe879, 0x1eef, 0x0, 0x1);
        gbc.writeMem(0x1af, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x366c);
        EXPECT(gbc.pc(), 0x1b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0251
        gbc.setState(0xac11, 0x9763, 0xcf80, 0x7d34, 0xbdc8, 0xb7c3, 0x1, 0x0);
        gbc.writeMem(0xac11, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9763);
        EXPECT(gbc.pc(), 0xac13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac11), 0xcb);
        EXPECT(gbc.readMem(0xac12), 0xfd);
        // CB FD 0252
        gbc.setState(0x258b, 0xaba3, 0xef60, 0xc110, 0xe211, 0x9a75, 0x0, 0x1);
        gbc.writeMem(0x258b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xaba3);
        EXPECT(gbc.pc(), 0x258d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0253
        gbc.setState(0xb0f8, 0x41b5, 0xf600, 0x1aac, 0x1fab, 0x339b, 0x1, 0x0);
        gbc.writeMem(0xb0f8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x41b5);
        EXPECT(gbc.pc(), 0xb0fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0f8), 0xcb);
        EXPECT(gbc.readMem(0xb0f9), 0xfd);
        // CB FD 0254
        gbc.setState(0xd01a, 0x197c, 0xb8e0, 0x5956, 0x5c35, 0xf955, 0x1, 0x0);
        gbc.writeMem(0xd01a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x197c);
        EXPECT(gbc.pc(), 0xd01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd01a), 0xcb);
        EXPECT(gbc.readMem(0xd01b), 0xfd);
        // CB FD 0255
        gbc.setState(0xbf8e, 0x638d, 0xe2f0, 0x6b2f, 0xf573, 0x918e, 0x0, 0x1);
        gbc.writeMem(0xbf8e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x638d);
        EXPECT(gbc.pc(), 0xbf90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8e), 0xcb);
        EXPECT(gbc.readMem(0xbf8f), 0xfd);
        // CB FD 0256
        gbc.setState(0x9bc4, 0xdf37, 0x69d0, 0x52a8, 0x369e, 0xa544, 0x1, 0x1);
        gbc.writeMem(0x9bc4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdf37);
        EXPECT(gbc.pc(), 0x9bc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc4), 0xcb);
        EXPECT(gbc.readMem(0x9bc5), 0xfd);
        // CB FD 0257
        gbc.setState(0x86c0, 0x771e, 0x77d0, 0x3bb5, 0x744b, 0xc20f, 0x0, 0x1);
        gbc.writeMem(0x86c0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x771e);
        EXPECT(gbc.pc(), 0x86c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86c0), 0xcb);
        EXPECT(gbc.readMem(0x86c1), 0xfd);
        // CB FD 0258
        gbc.setState(0xa53d, 0x1246, 0xe430, 0x92b1, 0x103f, 0xb20c, 0x1, 0x1);
        gbc.writeMem(0xa53d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1246);
        EXPECT(gbc.pc(), 0xa53f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa53d), 0xcb);
        EXPECT(gbc.readMem(0xa53e), 0xfd);
        // CB FD 0259
        gbc.setState(0x3860, 0x3bfc, 0x2930, 0x69b2, 0xf8d5, 0x237c, 0x1, 0x1);
        gbc.writeMem(0x3860, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3bfc);
        EXPECT(gbc.pc(), 0x3862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 025A
        gbc.setState(0xc7f3, 0xa6bc, 0xa7e0, 0xc99f, 0x4835, 0xe3f7, 0x1, 0x1);
        gbc.writeMem(0xc7f3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa6bc);
        EXPECT(gbc.pc(), 0xc7f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f3), 0xcb);
        EXPECT(gbc.readMem(0xc7f4), 0xfd);
        // CB FD 025B
        gbc.setState(0x53c8, 0xc7ac, 0x3e00, 0x9c46, 0xbe1b, 0xd09e, 0x1, 0x1);
        gbc.writeMem(0x53c8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc7ac);
        EXPECT(gbc.pc(), 0x53ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 025C
        gbc.setState(0x2d38, 0x6544, 0x2620, 0xfd9f, 0x4e80, 0x7d3d, 0x1, 0x0);
        gbc.writeMem(0x2d38, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6544);
        EXPECT(gbc.pc(), 0x2d3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 025E
        gbc.setState(0x8a9c, 0x68d9, 0x5430, 0x4494, 0xe7cc, 0x79dc, 0x0, 0x0);
        gbc.writeMem(0x8a9c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x68d9);
        EXPECT(gbc.pc(), 0x8a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a9c), 0xcb);
        EXPECT(gbc.readMem(0x8a9d), 0xfd);
        // CB FD 025F
        gbc.setState(0xb4a8, 0xfdc, 0xbdb0, 0x5033, 0xe086, 0x53e0, 0x0, 0x1);
        gbc.writeMem(0xb4a8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xfdc);
        EXPECT(gbc.pc(), 0xb4aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a8), 0xcb);
        EXPECT(gbc.readMem(0xb4a9), 0xfd);
        // CB FD 0261
        gbc.setState(0xcd47, 0x5133, 0x3ee0, 0x8789, 0xc69c, 0xe81a, 0x0, 0x1);
        gbc.writeMem(0xcd47, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5133);
        EXPECT(gbc.pc(), 0xcd49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd47), 0xcb);
        EXPECT(gbc.readMem(0xcd48), 0xfd);
        // CB FD 0262
        gbc.setState(0x177c, 0x2bdc, 0x6490, 0x4158, 0x98af, 0x7d14, 0x1, 0x0);
        gbc.writeMem(0x177c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2bdc);
        EXPECT(gbc.pc(), 0x177e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0263
        gbc.setState(0xa228, 0x5e6c, 0xf0, 0xafad, 0x1c12, 0x272b, 0x1, 0x0);
        gbc.writeMem(0xa228, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5e6c);
        EXPECT(gbc.pc(), 0xa22a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa228), 0xcb);
        EXPECT(gbc.readMem(0xa229), 0xfd);
        // CB FD 0264
        gbc.setState(0xa24c, 0x7dec, 0x3c80, 0x8b87, 0xa0f3, 0x7430, 0x0, 0x0);
        gbc.writeMem(0xa24c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7dec);
        EXPECT(gbc.pc(), 0xa24e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa24c), 0xcb);
        EXPECT(gbc.readMem(0xa24d), 0xfd);
        // CB FD 0265
        gbc.setState(0x4f12, 0x9b14, 0x2b10, 0x894a, 0x2031, 0x2fc7, 0x1, 0x0);
        gbc.writeMem(0x4f12, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9b14);
        EXPECT(gbc.pc(), 0x4f14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0266
        gbc.setState(0x4925, 0xf974, 0xcb90, 0xa0e5, 0x6a27, 0xfa4a, 0x0, 0x1);
        gbc.writeMem(0x4925, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf974);
        EXPECT(gbc.pc(), 0x4927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0267
        gbc.setState(0xbdb3, 0x36fd, 0xbf30, 0x2505, 0x4c7b, 0x9a40, 0x0, 0x1);
        gbc.writeMem(0xbdb3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x36fd);
        EXPECT(gbc.pc(), 0xbdb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb3), 0xcb);
        EXPECT(gbc.readMem(0xbdb4), 0xfd);
        // CB FD 0268
        gbc.setState(0xbb99, 0xab19, 0x3cd0, 0x9c66, 0x733a, 0x40fe, 0x0, 0x0);
        gbc.writeMem(0xbb99, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xab19);
        EXPECT(gbc.pc(), 0xbb9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb99), 0xcb);
        EXPECT(gbc.readMem(0xbb9a), 0xfd);
        // CB FD 0269
        gbc.setState(0x8089, 0x4d8d, 0x14a0, 0xc5ee, 0x9845, 0xe76d, 0x1, 0x0);
        gbc.writeMem(0x8089, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4d8d);
        EXPECT(gbc.pc(), 0x808b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8089), 0xcb);
        EXPECT(gbc.readMem(0x808a), 0xfd);
        // CB FD 026A
        gbc.setState(0xe687, 0xcab8, 0x6200, 0xaa08, 0x2110, 0xf68f, 0x0, 0x1);
        gbc.writeMem(0xe687, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xcab8);
        EXPECT(gbc.pc(), 0xe689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe687), 0xcb);
        EXPECT(gbc.readMem(0xe688), 0xfd);
        // CB FD 026B
        gbc.setState(0x2b53, 0xd518, 0xe2d0, 0xd8a0, 0xb3b2, 0x8eaf, 0x1, 0x1);
        gbc.writeMem(0x2b53, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd518);
        EXPECT(gbc.pc(), 0x2b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 026C
        gbc.setState(0x95, 0x8467, 0xa920, 0x5497, 0x28c3, 0x6eb7, 0x0, 0x0);
        gbc.writeMem(0x95, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8467);
        EXPECT(gbc.pc(), 0x97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 026D
        gbc.setState(0xe6cc, 0x5632, 0x7ef0, 0xe70a, 0xdc85, 0x2b21, 0x1, 0x1);
        gbc.writeMem(0xe6cc, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5632);
        EXPECT(gbc.pc(), 0xe6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6cc), 0xcb);
        EXPECT(gbc.readMem(0xe6cd), 0xfd);
        // CB FD 026E
        gbc.setState(0x34d0, 0xc8c5, 0x4090, 0xd69a, 0xd8b, 0xf6ec, 0x1, 0x1);
        gbc.writeMem(0x34d0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc8c5);
        EXPECT(gbc.pc(), 0x34d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 026F
        gbc.setState(0xe732, 0xde4d, 0x5080, 0xf2bf, 0x4073, 0xeff6, 0x0, 0x0);
        gbc.writeMem(0xe732, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xde4d);
        EXPECT(gbc.pc(), 0xe734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe732), 0xcb);
        EXPECT(gbc.readMem(0xe733), 0xfd);
        // CB FD 0270
        gbc.setState(0x6eb4, 0xe834, 0xa290, 0x338c, 0x3350, 0xa6eb, 0x0, 0x1);
        gbc.writeMem(0x6eb4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe834);
        EXPECT(gbc.pc(), 0x6eb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0271
        gbc.setState(0x644, 0x980d, 0xb220, 0x95c3, 0x13c2, 0x8e39, 0x1, 0x1);
        gbc.writeMem(0x644, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x980d);
        EXPECT(gbc.pc(), 0x646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0272
        gbc.setState(0x898a, 0x1620, 0x2d0, 0xf135, 0x2ea4, 0xd40d, 0x1, 0x1);
        gbc.writeMem(0x898a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1620);
        EXPECT(gbc.pc(), 0x898c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x898a), 0xcb);
        EXPECT(gbc.readMem(0x898b), 0xfd);
        // CB FD 0273
        gbc.setState(0x3e0b, 0x6d5a, 0xf9f0, 0x8147, 0x3b01, 0xf5c5, 0x1, 0x1);
        gbc.writeMem(0x3e0b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6d5a);
        EXPECT(gbc.pc(), 0x3e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0274
        gbc.setState(0x9902, 0x6114, 0x8480, 0x60f, 0x3ad, 0x6118, 0x1, 0x1);
        gbc.writeMem(0x9902, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6114);
        EXPECT(gbc.pc(), 0x9904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9902), 0xcb);
        EXPECT(gbc.readMem(0x9903), 0xfd);
        // CB FD 0275
        gbc.setState(0xcc5f, 0xd6a7, 0x5cb0, 0x9ea, 0xd203, 0xa1f2, 0x1, 0x1);
        gbc.writeMem(0xcc5f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd6a7);
        EXPECT(gbc.pc(), 0xcc61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc5f), 0xcb);
        EXPECT(gbc.readMem(0xcc60), 0xfd);
        // CB FD 0276
        gbc.setState(0xed0f, 0xbd3a, 0x5830, 0x7528, 0xc1ca, 0xaafb, 0x0, 0x1);
        gbc.writeMem(0xed0f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbd3a);
        EXPECT(gbc.pc(), 0xed11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed0f), 0xcb);
        EXPECT(gbc.readMem(0xed10), 0xfd);
        // CB FD 0277
        gbc.setState(0x34c8, 0xcdf6, 0x7130, 0xc53e, 0x1111, 0xee6e, 0x0, 0x0);
        gbc.writeMem(0x34c8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcdf6);
        EXPECT(gbc.pc(), 0x34ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0278
        gbc.setState(0x2d19, 0xe4e8, 0x1850, 0xbdf8, 0xebda, 0xa4e7, 0x1, 0x1);
        gbc.writeMem(0x2d19, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe4e8);
        EXPECT(gbc.pc(), 0x2d1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0279
        gbc.setState(0xb4da, 0xc322, 0x8770, 0xab5a, 0x5570, 0x1c0f, 0x1, 0x1);
        gbc.writeMem(0xb4da, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc322);
        EXPECT(gbc.pc(), 0xb4dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4da), 0xcb);
        EXPECT(gbc.readMem(0xb4db), 0xfd);
        // CB FD 027A
        gbc.setState(0x8a24, 0xf605, 0xfc10, 0x21ec, 0x8a76, 0x95f5, 0x1, 0x0);
        gbc.writeMem(0x8a24, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf605);
        EXPECT(gbc.pc(), 0x8a26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a24), 0xcb);
        EXPECT(gbc.readMem(0x8a25), 0xfd);
        // CB FD 027B
        gbc.setState(0x3762, 0x9c55, 0x26e0, 0x52b4, 0xdf82, 0x9b70, 0x1, 0x1);
        gbc.writeMem(0x3762, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9c55);
        EXPECT(gbc.pc(), 0x3764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 027C
        gbc.setState(0x4995, 0x27a6, 0x22f0, 0xe99b, 0x72d8, 0x7660, 0x0, 0x0);
        gbc.writeMem(0x4995, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x27a6);
        EXPECT(gbc.pc(), 0x4997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 027E
        gbc.setState(0x5dca, 0x9807, 0xe690, 0xb90d, 0x1ba1, 0x302c, 0x0, 0x1);
        gbc.writeMem(0x5dca, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9807);
        EXPECT(gbc.pc(), 0x5dcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 027F
        gbc.setState(0x9bce, 0x8b0, 0xeca0, 0xf892, 0x1d57, 0xc9bc, 0x0, 0x1);
        gbc.writeMem(0x9bce, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8b0);
        EXPECT(gbc.pc(), 0x9bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bce), 0xcb);
        EXPECT(gbc.readMem(0x9bcf), 0xfd);
        // CB FD 0280
        gbc.setState(0x3125, 0xf0f, 0x3750, 0x6823, 0xb61c, 0x832f, 0x0, 0x0);
        gbc.writeMem(0x3125, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf0f);
        EXPECT(gbc.pc(), 0x3127);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0282
        gbc.setState(0xacf, 0x8732, 0x4370, 0x511d, 0x5ffc, 0x77d0, 0x1, 0x1);
        gbc.writeMem(0xacf, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8732);
        EXPECT(gbc.pc(), 0xad1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0283
        gbc.setState(0x7cad, 0x8be8, 0xa060, 0x3ec0, 0x5af, 0xc69c, 0x0, 0x0);
        gbc.writeMem(0x7cad, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8be8);
        EXPECT(gbc.pc(), 0x7caf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0284
        gbc.setState(0xb146, 0xb956, 0x4f80, 0xaf53, 0x4232, 0x19a1, 0x0, 0x1);
        gbc.writeMem(0xb146, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb956);
        EXPECT(gbc.pc(), 0xb148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb146), 0xcb);
        EXPECT(gbc.readMem(0xb147), 0xfd);
        // CB FD 0285
        gbc.setState(0x16f0, 0x9c6a, 0x7990, 0x658e, 0x41bb, 0x91c9, 0x1, 0x1);
        gbc.writeMem(0x16f0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9c6a);
        EXPECT(gbc.pc(), 0x16f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0286
        gbc.setState(0x839a, 0x2ee4, 0xc920, 0xfebb, 0xe9c4, 0x9445, 0x1, 0x1);
        gbc.writeMem(0x839a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2ee4);
        EXPECT(gbc.pc(), 0x839c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x839a), 0xcb);
        EXPECT(gbc.readMem(0x839b), 0xfd);
        // CB FD 0288
        gbc.setState(0x8b70, 0xb20e, 0x6140, 0x982e, 0x595f, 0x8e51, 0x1, 0x0);
        gbc.writeMem(0x8b70, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb20e);
        EXPECT(gbc.pc(), 0x8b72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b70), 0xcb);
        EXPECT(gbc.readMem(0x8b71), 0xfd);
        // CB FD 0289
        gbc.setState(0xade8, 0xce5a, 0xd9a0, 0xb89e, 0x894d, 0xde95, 0x1, 0x0);
        gbc.writeMem(0xade8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xce5a);
        EXPECT(gbc.pc(), 0xadea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade8), 0xcb);
        EXPECT(gbc.readMem(0xade9), 0xfd);
        // CB FD 028B
        gbc.setState(0x68c3, 0x944c, 0x8570, 0x10b5, 0xc903, 0x9482, 0x0, 0x0);
        gbc.writeMem(0x68c3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x944c);
        EXPECT(gbc.pc(), 0x68c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 028C
        gbc.setState(0x6cd5, 0x7c43, 0x1640, 0xa94, 0x31e0, 0x6188, 0x0, 0x1);
        gbc.writeMem(0x6cd5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7c43);
        EXPECT(gbc.pc(), 0x6cd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 028E
        gbc.setState(0xaf64, 0x30e, 0xf60, 0xb09f, 0x65f9, 0xc319, 0x0, 0x0);
        gbc.writeMem(0xaf64, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x30e);
        EXPECT(gbc.pc(), 0xaf66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf64), 0xcb);
        EXPECT(gbc.readMem(0xaf65), 0xfd);
        // CB FD 028F
        gbc.setState(0x707c, 0xfaab, 0x80f0, 0xa445, 0x119b, 0xeebd, 0x1, 0x1);
        gbc.writeMem(0x707c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xfaab);
        EXPECT(gbc.pc(), 0x707e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0290
        gbc.setState(0xd32c, 0x8890, 0x3510, 0x82ca, 0x2f35, 0x1947, 0x1, 0x0);
        gbc.writeMem(0xd32c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8890);
        EXPECT(gbc.pc(), 0xd32e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32c), 0xcb);
        EXPECT(gbc.readMem(0xd32d), 0xfd);
        // CB FD 0291
        gbc.setState(0x3840, 0x8b3f, 0x6c00, 0x26a3, 0xcb06, 0xa5c, 0x0, 0x1);
        gbc.writeMem(0x3840, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8b3f);
        EXPECT(gbc.pc(), 0x3842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0292
        gbc.setState(0x3219, 0x3215, 0x7630, 0x1124, 0xc976, 0x71fd, 0x0, 0x0);
        gbc.writeMem(0x3219, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3215);
        EXPECT(gbc.pc(), 0x321b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0293
        gbc.setState(0x2ec9, 0x20a4, 0x87c0, 0x7f3f, 0xf1f1, 0x6f34, 0x0, 0x1);
        gbc.writeMem(0x2ec9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x20a4);
        EXPECT(gbc.pc(), 0x2ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0294
        gbc.setState(0xce06, 0x1850, 0xaf80, 0xbe8e, 0x32cc, 0x73b6, 0x0, 0x0);
        gbc.writeMem(0xce06, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1850);
        EXPECT(gbc.pc(), 0xce08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce06), 0xcb);
        EXPECT(gbc.readMem(0xce07), 0xfd);
        // CB FD 0295
        gbc.setState(0xeae9, 0xea3f, 0x6990, 0xbe9, 0xb5a5, 0xe68e, 0x0, 0x0);
        gbc.writeMem(0xeae9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xea3f);
        EXPECT(gbc.pc(), 0xeaeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae9), 0xcb);
        EXPECT(gbc.readMem(0xeaea), 0xfd);
        // CB FD 0296
        gbc.setState(0x359f, 0x4ad, 0x1730, 0xd9b4, 0x87bb, 0x95cf, 0x1, 0x0);
        gbc.writeMem(0x359f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4ad);
        EXPECT(gbc.pc(), 0x35a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0297
        gbc.setState(0xa061, 0x9e0a, 0x1300, 0x7a13, 0xe81a, 0x74b2, 0x1, 0x0);
        gbc.writeMem(0xa061, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9e0a);
        EXPECT(gbc.pc(), 0xa063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa061), 0xcb);
        EXPECT(gbc.readMem(0xa062), 0xfd);
        // CB FD 0298
        gbc.setState(0x1836, 0x7d72, 0x15c0, 0xd0f5, 0xf429, 0x84c5, 0x0, 0x1);
        gbc.writeMem(0x1836, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7d72);
        EXPECT(gbc.pc(), 0x1838);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0299
        gbc.setState(0x4a9f, 0x2159, 0x8800, 0xadfe, 0x49c4, 0xf3a0, 0x0, 0x0);
        gbc.writeMem(0x4a9f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2159);
        EXPECT(gbc.pc(), 0x4aa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 029A
        gbc.setState(0x3d0d, 0x7774, 0xba90, 0xc490, 0x20a0, 0x65e7, 0x0, 0x1);
        gbc.writeMem(0x3d0d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7774);
        EXPECT(gbc.pc(), 0x3d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 029B
        gbc.setState(0xd075, 0x7128, 0x2810, 0x98d3, 0x6ac4, 0x20ab, 0x1, 0x0);
        gbc.writeMem(0xd075, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7128);
        EXPECT(gbc.pc(), 0xd077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd075), 0xcb);
        EXPECT(gbc.readMem(0xd076), 0xfd);
        // CB FD 029C
        gbc.setState(0xcca5, 0xf2cc, 0xacb0, 0xf35d, 0x7b37, 0xe300, 0x0, 0x1);
        gbc.writeMem(0xcca5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf2cc);
        EXPECT(gbc.pc(), 0xcca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcca5), 0xcb);
        EXPECT(gbc.readMem(0xcca6), 0xfd);
        // CB FD 029E
        gbc.setState(0xb9b5, 0xd051, 0x97c0, 0x96bd, 0x1a4d, 0xc8c7, 0x0, 0x0);
        gbc.writeMem(0xb9b5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd051);
        EXPECT(gbc.pc(), 0xb9b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b5), 0xcb);
        EXPECT(gbc.readMem(0xb9b6), 0xfd);
        // CB FD 029F
        gbc.setState(0xd9cd, 0x845a, 0x4ba0, 0xd02b, 0x5b6, 0xb625, 0x1, 0x1);
        gbc.writeMem(0xd9cd, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x845a);
        EXPECT(gbc.pc(), 0xd9cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9cd), 0xcb);
        EXPECT(gbc.readMem(0xd9ce), 0xfd);
        // CB FD 02A0
        gbc.setState(0x823d, 0xdb23, 0xd460, 0x8212, 0x21d8, 0x241d, 0x1, 0x0);
        gbc.writeMem(0x823d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdb23);
        EXPECT(gbc.pc(), 0x823f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823d), 0xcb);
        EXPECT(gbc.readMem(0x823e), 0xfd);
        // CB FD 02A1
        gbc.setState(0xbace, 0xcd35, 0xde70, 0x4d88, 0xfa8, 0xe9e7, 0x0, 0x0);
        gbc.writeMem(0xbace, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcd35);
        EXPECT(gbc.pc(), 0xbad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbace), 0xcb);
        EXPECT(gbc.readMem(0xbacf), 0xfd);
        // CB FD 02A2
        gbc.setState(0x19d1, 0x1fa0, 0xad10, 0x18d6, 0xe480, 0xead9, 0x1, 0x0);
        gbc.writeMem(0x19d1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1fa0);
        EXPECT(gbc.pc(), 0x19d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02A3
        gbc.setState(0xf5, 0xe1d1, 0xf4d0, 0x856, 0x1bbe, 0x21fe, 0x1, 0x1);
        gbc.writeMem(0xf5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe1d1);
        EXPECT(gbc.pc(), 0xf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02A4
        gbc.setState(0xddff, 0xaacc, 0xe5f0, 0xdab, 0xbb53, 0x9d42, 0x0, 0x1);
        gbc.writeMem(0xddff, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xaacc);
        EXPECT(gbc.pc(), 0xde01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddff), 0xcb);
        EXPECT(gbc.readMem(0xde00), 0xfd);
        // CB FD 02A5
        gbc.setState(0xbf4a, 0xb44d, 0xd530, 0x4077, 0xaa1b, 0x8b73, 0x1, 0x1);
        gbc.writeMem(0xbf4a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb44d);
        EXPECT(gbc.pc(), 0xbf4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf4a), 0xcb);
        EXPECT(gbc.readMem(0xbf4b), 0xfd);
        // CB FD 02A6
        gbc.setState(0x5649, 0xc124, 0x32d0, 0x34c9, 0xf623, 0xa1a1, 0x0, 0x0);
        gbc.writeMem(0x5649, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc124);
        EXPECT(gbc.pc(), 0x564b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02A7
        gbc.setState(0x45fc, 0x445a, 0x7690, 0x13b3, 0x1de, 0x5ff8, 0x0, 0x0);
        gbc.writeMem(0x45fc, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x445a);
        EXPECT(gbc.pc(), 0x45fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02A8
        gbc.setState(0x431d, 0xa95e, 0x1050, 0x92f7, 0xb246, 0xc12b, 0x1, 0x0);
        gbc.writeMem(0x431d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa95e);
        EXPECT(gbc.pc(), 0x431f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02A9
        gbc.setState(0x87db, 0x2e88, 0x5a20, 0x73a, 0x3a94, 0x6f5a, 0x1, 0x0);
        gbc.writeMem(0x87db, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2e88);
        EXPECT(gbc.pc(), 0x87dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87db), 0xcb);
        EXPECT(gbc.readMem(0x87dc), 0xfd);
        // CB FD 02AA
        gbc.setState(0xab3a, 0x221a, 0x6a10, 0xcf6b, 0xff17, 0x3e67, 0x1, 0x1);
        gbc.writeMem(0xab3a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x221a);
        EXPECT(gbc.pc(), 0xab3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3a), 0xcb);
        EXPECT(gbc.readMem(0xab3b), 0xfd);
        // CB FD 02AC
        gbc.setState(0x6b29, 0x9ff7, 0xe850, 0x2d71, 0xb89a, 0xafcc, 0x1, 0x0);
        gbc.writeMem(0x6b29, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9ff7);
        EXPECT(gbc.pc(), 0x6b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02AD
        gbc.setState(0x9b50, 0x2a0c, 0x7160, 0x16f7, 0x4f14, 0x6df1, 0x0, 0x0);
        gbc.writeMem(0x9b50, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2a0c);
        EXPECT(gbc.pc(), 0x9b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b50), 0xcb);
        EXPECT(gbc.readMem(0x9b51), 0xfd);
        // CB FD 02AE
        gbc.setState(0xb6ea, 0x7e71, 0xd530, 0x8aac, 0xc677, 0xd0c9, 0x0, 0x1);
        gbc.writeMem(0xb6ea, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7e71);
        EXPECT(gbc.pc(), 0xb6ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ea), 0xcb);
        EXPECT(gbc.readMem(0xb6eb), 0xfd);
        // CB FD 02AF
        gbc.setState(0x4a, 0xa131, 0x2030, 0xf0c5, 0xa1a3, 0xe0de, 0x1, 0x1);
        gbc.writeMem(0x4a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa131);
        EXPECT(gbc.pc(), 0x4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02B1
        gbc.setState(0x84a7, 0xcb03, 0xe810, 0xccc2, 0x6c21, 0x1214, 0x0, 0x1);
        gbc.writeMem(0x84a7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcb03);
        EXPECT(gbc.pc(), 0x84a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84a7), 0xcb);
        EXPECT(gbc.readMem(0x84a8), 0xfd);
        // CB FD 02B2
        gbc.setState(0xcec, 0xc3d0, 0x6f10, 0x88d1, 0xa6a1, 0x7ab7, 0x1, 0x1);
        gbc.writeMem(0xcec, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc3d0);
        EXPECT(gbc.pc(), 0xcee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02B3
        gbc.setState(0xad45, 0x5b5f, 0xbb20, 0x9e8a, 0x19ca, 0x3643, 0x0, 0x0);
        gbc.writeMem(0xad45, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5b5f);
        EXPECT(gbc.pc(), 0xad47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad45), 0xcb);
        EXPECT(gbc.readMem(0xad46), 0xfd);
        // CB FD 02B4
        gbc.setState(0x7899, 0xbf42, 0xd580, 0x9c35, 0x986c, 0x32c1, 0x0, 0x0);
        gbc.writeMem(0x7899, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbf42);
        EXPECT(gbc.pc(), 0x789b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02B5
        gbc.setState(0x503c, 0x6936, 0x7b20, 0x336d, 0x8e2d, 0x31bf, 0x1, 0x0);
        gbc.writeMem(0x503c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6936);
        EXPECT(gbc.pc(), 0x503e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02B6
        gbc.setState(0x8557, 0xcd03, 0xc740, 0x30da, 0x65c8, 0xe21, 0x0, 0x0);
        gbc.writeMem(0x8557, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcd03);
        EXPECT(gbc.pc(), 0x8559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8557), 0xcb);
        EXPECT(gbc.readMem(0x8558), 0xfd);
        // CB FD 02B7
        gbc.setState(0x8b2f, 0xa604, 0x9e40, 0x3feb, 0x2723, 0x656e, 0x0, 0x0);
        gbc.writeMem(0x8b2f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa604);
        EXPECT(gbc.pc(), 0x8b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2f), 0xcb);
        EXPECT(gbc.readMem(0x8b30), 0xfd);
        // CB FD 02B8
        gbc.setState(0x1dbd, 0x95e6, 0x7ae0, 0x18fd, 0x9462, 0x6a28, 0x0, 0x1);
        gbc.writeMem(0x1dbd, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x95e6);
        EXPECT(gbc.pc(), 0x1dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02B9
        gbc.setState(0x5f23, 0x6656, 0x37a0, 0x8fac, 0x199d, 0x3e91, 0x0, 0x1);
        gbc.writeMem(0x5f23, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6656);
        EXPECT(gbc.pc(), 0x5f25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02BA
        gbc.setState(0x2f23, 0x2c5a, 0x8170, 0x58e7, 0xc6bb, 0xfd9f, 0x1, 0x0);
        gbc.writeMem(0x2f23, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2c5a);
        EXPECT(gbc.pc(), 0x2f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02BB
        gbc.setState(0xab07, 0xf72f, 0x5960, 0xdfe7, 0xf057, 0xb7c3, 0x0, 0x0);
        gbc.writeMem(0xab07, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf72f);
        EXPECT(gbc.pc(), 0xab09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab07), 0xcb);
        EXPECT(gbc.readMem(0xab08), 0xfd);
        // CB FD 02BC
        gbc.setState(0x3447, 0xe7a7, 0xb1e0, 0xbbf6, 0x5b31, 0xe9c8, 0x0, 0x0);
        gbc.writeMem(0x3447, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe7a7);
        EXPECT(gbc.pc(), 0x3449);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02BD
        gbc.setState(0x1091, 0x10d, 0x22b0, 0xbc6c, 0x23dc, 0xb2b2, 0x1, 0x1);
        gbc.writeMem(0x1091, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x10d);
        EXPECT(gbc.pc(), 0x1093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02BE
        gbc.setState(0xd680, 0xaaeb, 0xec10, 0x4c77, 0x71d5, 0x9124, 0x1, 0x0);
        gbc.writeMem(0xd680, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xaaeb);
        EXPECT(gbc.pc(), 0xd682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd680), 0xcb);
        EXPECT(gbc.readMem(0xd681), 0xfd);
        // CB FD 02BF
        gbc.setState(0x158a, 0xa, 0x22f0, 0xe1c6, 0x7ca5, 0x4f4f, 0x0, 0x0);
        gbc.writeMem(0x158a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa);
        EXPECT(gbc.pc(), 0x158c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02C1
        gbc.setState(0x6cc1, 0x955a, 0x3f20, 0x5f14, 0x9b44, 0xbebe, 0x1, 0x0);
        gbc.writeMem(0x6cc1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x955a);
        EXPECT(gbc.pc(), 0x6cc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02C2
        gbc.setState(0x448c, 0x829d, 0xb760, 0xdab0, 0x1418, 0xb5f5, 0x1, 0x1);
        gbc.writeMem(0x448c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x829d);
        EXPECT(gbc.pc(), 0x448e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02C3
        gbc.setState(0x93f4, 0x7a36, 0xe130, 0x584c, 0x62d4, 0xa672, 0x1, 0x0);
        gbc.writeMem(0x93f4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7a36);
        EXPECT(gbc.pc(), 0x93f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f4), 0xcb);
        EXPECT(gbc.readMem(0x93f5), 0xfd);
        // CB FD 02C4
        gbc.setState(0xd6d9, 0x2195, 0x7870, 0x1056, 0xf1b7, 0x4b85, 0x0, 0x0);
        gbc.writeMem(0xd6d9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2195);
        EXPECT(gbc.pc(), 0xd6db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6d9), 0xcb);
        EXPECT(gbc.readMem(0xd6da), 0xfd);
        // CB FD 02C5
        gbc.setState(0x20a1, 0x1059, 0xadd0, 0xe7c6, 0x631b, 0x5132, 0x0, 0x1);
        gbc.writeMem(0x20a1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1059);
        EXPECT(gbc.pc(), 0x20a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02C6
        gbc.setState(0xc8b8, 0xf33f, 0x3710, 0xfa56, 0xad02, 0x9fb5, 0x1, 0x0);
        gbc.writeMem(0xc8b8, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf33f);
        EXPECT(gbc.pc(), 0xc8ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b8), 0xcb);
        EXPECT(gbc.readMem(0xc8b9), 0xfd);
        // CB FD 02C7
        gbc.setState(0x86db, 0xab73, 0x56b0, 0x8bb4, 0x46bd, 0x9dc2, 0x1, 0x1);
        gbc.writeMem(0x86db, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xab73);
        EXPECT(gbc.pc(), 0x86dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86db), 0xcb);
        EXPECT(gbc.readMem(0x86dc), 0xfd);
        // CB FD 02C8
        gbc.setState(0xaa19, 0x923b, 0xd170, 0xe632, 0x243f, 0x7189, 0x0, 0x0);
        gbc.writeMem(0xaa19, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x923b);
        EXPECT(gbc.pc(), 0xaa1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa19), 0xcb);
        EXPECT(gbc.readMem(0xaa1a), 0xfd);
        // CB FD 02C9
        gbc.setState(0x129d, 0xf972, 0x3730, 0x93a4, 0xe6e0, 0xb63d, 0x1, 0x0);
        gbc.writeMem(0x129d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf972);
        EXPECT(gbc.pc(), 0x129f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02CA
        gbc.setState(0x1534, 0xf029, 0xbb50, 0xa0c9, 0xb356, 0x73c4, 0x0, 0x1);
        gbc.writeMem(0x1534, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf029);
        EXPECT(gbc.pc(), 0x1536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02CB
        gbc.setState(0x82c, 0xb678, 0x9410, 0x547b, 0x157a, 0xf4ad, 0x1, 0x0);
        gbc.writeMem(0x82c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb678);
        EXPECT(gbc.pc(), 0x82e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02CC
        gbc.setState(0xc08f, 0xcff4, 0x4830, 0xd2a9, 0x1f08, 0x77ed, 0x0, 0x1);
        gbc.writeMem(0xc08f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcff4);
        EXPECT(gbc.pc(), 0xc091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc08f), 0xcb);
        EXPECT(gbc.readMem(0xc090), 0xfd);
        // CB FD 02CD
        gbc.setState(0x909f, 0x66ca, 0xf180, 0xe9e1, 0x8ebf, 0x1f3a, 0x1, 0x1);
        gbc.writeMem(0x909f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x66ca);
        EXPECT(gbc.pc(), 0x90a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909f), 0xcb);
        EXPECT(gbc.readMem(0x90a0), 0xfd);
        // CB FD 02CE
        gbc.setState(0x5a72, 0x88b4, 0x830, 0xf50b, 0x321e, 0x1b7e, 0x0, 0x0);
        gbc.writeMem(0x5a72, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x88b4);
        EXPECT(gbc.pc(), 0x5a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02CF
        gbc.setState(0x9897, 0xc03f, 0xaf50, 0x1641, 0x7265, 0xc755, 0x0, 0x1);
        gbc.writeMem(0x9897, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc03f);
        EXPECT(gbc.pc(), 0x9899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9897), 0xcb);
        EXPECT(gbc.readMem(0x9898), 0xfd);
        // CB FD 02D0
        gbc.setState(0x257, 0x4656, 0x12c0, 0xd198, 0xd05a, 0xc7cd, 0x1, 0x0);
        gbc.writeMem(0x257, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4656);
        EXPECT(gbc.pc(), 0x259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02D2
        gbc.setState(0xfa3, 0xf46c, 0x6050, 0xd717, 0xac0a, 0xe87f, 0x1, 0x0);
        gbc.writeMem(0xfa3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf46c);
        EXPECT(gbc.pc(), 0xfa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02D3
        gbc.setState(0xf0d, 0xaee6, 0xa360, 0x8023, 0xe6a9, 0xcb5c, 0x0, 0x1);
        gbc.writeMem(0xf0d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xaee6);
        EXPECT(gbc.pc(), 0xf0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02D4
        gbc.setState(0x939f, 0xe517, 0x34a0, 0x4f9c, 0x5296, 0x34a6, 0x1, 0x0);
        gbc.writeMem(0x939f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe517);
        EXPECT(gbc.pc(), 0x93a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939f), 0xcb);
        EXPECT(gbc.readMem(0x93a0), 0xfd);
        // CB FD 02D5
        gbc.setState(0x4310, 0x585e, 0x5360, 0xdf31, 0x88af, 0x2b60, 0x0, 0x0);
        gbc.writeMem(0x4310, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x585e);
        EXPECT(gbc.pc(), 0x4312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02D6
        gbc.setState(0x309c, 0xe344, 0x3680, 0x7c90, 0xbf5, 0x5c34, 0x1, 0x0);
        gbc.writeMem(0x309c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe344);
        EXPECT(gbc.pc(), 0x309e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02D7
        gbc.setState(0x2ab6, 0xce69, 0xb730, 0x4fde, 0xc9ad, 0x3830, 0x1, 0x0);
        gbc.writeMem(0x2ab6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xce69);
        EXPECT(gbc.pc(), 0x2ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02D8
        gbc.setState(0x41be, 0xf87d, 0x8840, 0xea8e, 0x1fb6, 0xeed1, 0x0, 0x0);
        gbc.writeMem(0x41be, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf87d);
        EXPECT(gbc.pc(), 0x41c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02D9
        gbc.setState(0xd730, 0x6941, 0x3b70, 0x1d4f, 0x1eb1, 0xd141, 0x1, 0x0);
        gbc.writeMem(0xd730, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6941);
        EXPECT(gbc.pc(), 0xd732);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd730), 0xcb);
        EXPECT(gbc.readMem(0xd731), 0xfd);
        // CB FD 02DA
        gbc.setState(0x770, 0xa0d6, 0x7e40, 0xee9, 0xefd0, 0xc862, 0x1, 0x1);
        gbc.writeMem(0x770, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa0d6);
        EXPECT(gbc.pc(), 0x772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02DB
        gbc.setState(0xd0f3, 0xbf88, 0x3040, 0xa01d, 0xcbb4, 0x895c, 0x1, 0x0);
        gbc.writeMem(0xd0f3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbf88);
        EXPECT(gbc.pc(), 0xd0f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0f3), 0xcb);
        EXPECT(gbc.readMem(0xd0f4), 0xfd);
        // CB FD 02DC
        gbc.setState(0x566d, 0xcc53, 0xd530, 0xe14f, 0xe06f, 0x91b, 0x1, 0x0);
        gbc.writeMem(0x566d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xcc53);
        EXPECT(gbc.pc(), 0x566f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02DD
        gbc.setState(0x6e96, 0x916e, 0xa930, 0x371f, 0x8a58, 0x81b6, 0x0, 0x0);
        gbc.writeMem(0x6e96, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x916e);
        EXPECT(gbc.pc(), 0x6e98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02DE
        gbc.setState(0xc11b, 0x3719, 0x8400, 0x5cf, 0xbcac, 0x6659, 0x1, 0x0);
        gbc.writeMem(0xc11b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3719);
        EXPECT(gbc.pc(), 0xc11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc11b), 0xcb);
        EXPECT(gbc.readMem(0xc11c), 0xfd);
        // CB FD 02DF
        gbc.setState(0x59bd, 0xe031, 0xd520, 0xd04e, 0xe44e, 0x6156, 0x1, 0x0);
        gbc.writeMem(0x59bd, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe031);
        EXPECT(gbc.pc(), 0x59bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02E0
        gbc.setState(0x899d, 0xb2b5, 0x8e00, 0xc33c, 0xb91d, 0xe7f2, 0x1, 0x1);
        gbc.writeMem(0x899d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb2b5);
        EXPECT(gbc.pc(), 0x899f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x899d), 0xcb);
        EXPECT(gbc.readMem(0x899e), 0xfd);
        // CB FD 02E1
        gbc.setState(0xa71b, 0xc491, 0x6210, 0x26dc, 0x5313, 0xf6bc, 0x1, 0x0);
        gbc.writeMem(0xa71b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc491);
        EXPECT(gbc.pc(), 0xa71d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa71b), 0xcb);
        EXPECT(gbc.readMem(0xa71c), 0xfd);
        // CB FD 02E2
        gbc.setState(0x64cf, 0x1691, 0x3160, 0xd3f3, 0xc7e3, 0xae4f, 0x1, 0x0);
        gbc.writeMem(0x64cf, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1691);
        EXPECT(gbc.pc(), 0x64d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02E3
        gbc.setState(0x89fe, 0x3aa, 0xc510, 0xf0c4, 0x6010, 0xdea8, 0x0, 0x1);
        gbc.writeMem(0x89fe, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3aa);
        EXPECT(gbc.pc(), 0x8a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89fe), 0xcb);
        EXPECT(gbc.readMem(0x89ff), 0xfd);
        // CB FD 02E4
        gbc.setState(0x5904, 0xfdfe, 0xa1c0, 0x2ad1, 0x5d0d, 0x6542, 0x0, 0x1);
        gbc.writeMem(0x5904, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xfdfe);
        EXPECT(gbc.pc(), 0x5906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02E5
        gbc.setState(0xcdbf, 0xa7ff, 0x11e0, 0x5dfc, 0x4dbf, 0x932e, 0x0, 0x1);
        gbc.writeMem(0xcdbf, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa7ff);
        EXPECT(gbc.pc(), 0xcdc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdbf), 0xcb);
        EXPECT(gbc.readMem(0xcdc0), 0xfd);
        // CB FD 02E6
        gbc.setState(0xa0e9, 0x5a3a, 0x5ad0, 0x85f6, 0x7532, 0x1284, 0x1, 0x0);
        gbc.writeMem(0xa0e9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5a3a);
        EXPECT(gbc.pc(), 0xa0eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0e9), 0xcb);
        EXPECT(gbc.readMem(0xa0ea), 0xfd);
        // CB FD 02E7
        gbc.setState(0xd3af, 0x7e68, 0xc780, 0x7e0a, 0x27, 0xe0cc, 0x0, 0x0);
        gbc.writeMem(0xd3af, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7e68);
        EXPECT(gbc.pc(), 0xd3b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3af), 0xcb);
        EXPECT(gbc.readMem(0xd3b0), 0xfd);
        // CB FD 02E8
        gbc.setState(0x2319, 0x69f9, 0x8d30, 0x5289, 0x1cec, 0x2fcf, 0x1, 0x0);
        gbc.writeMem(0x2319, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x69f9);
        EXPECT(gbc.pc(), 0x231b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02E9
        gbc.setState(0x7d45, 0x1d94, 0x34c0, 0x92bd, 0xb413, 0xd5fd, 0x0, 0x1);
        gbc.writeMem(0x7d45, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1d94);
        EXPECT(gbc.pc(), 0x7d47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02EA
        gbc.setState(0x339f, 0x1312, 0xc370, 0xf412, 0x1403, 0xda51, 0x0, 0x0);
        gbc.writeMem(0x339f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1312);
        EXPECT(gbc.pc(), 0x33a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02EB
        gbc.setState(0x10ba, 0x9f68, 0xc7e0, 0xa63e, 0x5313, 0xdea4, 0x0, 0x1);
        gbc.writeMem(0x10ba, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9f68);
        EXPECT(gbc.pc(), 0x10bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02EC
        gbc.setState(0x7fa6, 0xdf6d, 0xd0e0, 0xe2f0, 0xdd85, 0x2bbe, 0x0, 0x0);
        gbc.writeMem(0x7fa6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdf6d);
        EXPECT(gbc.pc(), 0x7fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02ED
        gbc.setState(0x5fca, 0x717f, 0x8b00, 0x2c73, 0xe67c, 0x1be8, 0x0, 0x1);
        gbc.writeMem(0x5fca, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x717f);
        EXPECT(gbc.pc(), 0x5fcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02EE
        gbc.setState(0xc35e, 0xdf71, 0xb3c0, 0xbf17, 0x5ec2, 0x15c8, 0x0, 0x1);
        gbc.writeMem(0xc35e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdf71);
        EXPECT(gbc.pc(), 0xc360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc35e), 0xcb);
        EXPECT(gbc.readMem(0xc35f), 0xfd);
        // CB FD 02EF
        gbc.setState(0x7429, 0x75ec, 0x9b30, 0x293c, 0x2bba, 0x90a3, 0x0, 0x1);
        gbc.writeMem(0x7429, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x75ec);
        EXPECT(gbc.pc(), 0x742b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02F0
        gbc.setState(0xa181, 0x6dca, 0xbe70, 0x30ea, 0xb4c7, 0x7710, 0x0, 0x1);
        gbc.writeMem(0xa181, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6dca);
        EXPECT(gbc.pc(), 0xa183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa181), 0xcb);
        EXPECT(gbc.readMem(0xa182), 0xfd);
        // CB FD 02F1
        gbc.setState(0x9581, 0x232e, 0x4f90, 0x5c40, 0x3501, 0x55f0, 0x0, 0x1);
        gbc.writeMem(0x9581, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x232e);
        EXPECT(gbc.pc(), 0x9583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9581), 0xcb);
        EXPECT(gbc.readMem(0x9582), 0xfd);
        // CB FD 02F2
        gbc.setState(0xb9b5, 0x1cb4, 0x8910, 0x18a9, 0xc2ba, 0x46dc, 0x1, 0x1);
        gbc.writeMem(0xb9b5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1cb4);
        EXPECT(gbc.pc(), 0xb9b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b5), 0xcb);
        EXPECT(gbc.readMem(0xb9b6), 0xfd);
        // CB FD 02F4
        gbc.setState(0x978, 0xcfc8, 0x610, 0x6d63, 0xa39b, 0xa0d0, 0x0, 0x1);
        gbc.writeMem(0x978, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcfc8);
        EXPECT(gbc.pc(), 0x97a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02F5
        gbc.setState(0xdd29, 0xa1e3, 0x99b0, 0x5d30, 0x4805, 0xd091, 0x1, 0x1);
        gbc.writeMem(0xdd29, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa1e3);
        EXPECT(gbc.pc(), 0xdd2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd29), 0xcb);
        EXPECT(gbc.readMem(0xdd2a), 0xfd);
        // CB FD 02F6
        gbc.setState(0xcec6, 0x5068, 0xb580, 0x6cda, 0x850a, 0x9d99, 0x0, 0x0);
        gbc.writeMem(0xcec6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5068);
        EXPECT(gbc.pc(), 0xcec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec6), 0xcb);
        EXPECT(gbc.readMem(0xcec7), 0xfd);
        // CB FD 02F7
        gbc.setState(0xbe9, 0x131, 0x29c0, 0xef51, 0xcab4, 0x50bc, 0x0, 0x0);
        gbc.writeMem(0xbe9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x131);
        EXPECT(gbc.pc(), 0xbeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02F8
        gbc.setState(0xebc7, 0xf51, 0x5be0, 0x72d2, 0x1f04, 0x409, 0x0, 0x1);
        gbc.writeMem(0xebc7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf51);
        EXPECT(gbc.pc(), 0xebc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc7), 0xcb);
        EXPECT(gbc.readMem(0xebc8), 0xfd);
        // CB FD 02F9
        gbc.setState(0xa271, 0xcd2e, 0xc880, 0xd26b, 0x3b2c, 0x33f0, 0x1, 0x0);
        gbc.writeMem(0xa271, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcd2e);
        EXPECT(gbc.pc(), 0xa273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa271), 0xcb);
        EXPECT(gbc.readMem(0xa272), 0xfd);
        // CB FD 02FA
        gbc.setState(0xdced, 0xbfd3, 0x4c70, 0xfb0a, 0x8bf8, 0xd39b, 0x0, 0x0);
        gbc.writeMem(0xdced, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xbfd3);
        EXPECT(gbc.pc(), 0xdcef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdced), 0xcb);
        EXPECT(gbc.readMem(0xdcee), 0xfd);
        // CB FD 02FB
        gbc.setState(0x9370, 0xc2, 0xb10, 0xe68f, 0x1324, 0x692a, 0x0, 0x1);
        gbc.writeMem(0x9370, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc2);
        EXPECT(gbc.pc(), 0x9372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9370), 0xcb);
        EXPECT(gbc.readMem(0x9371), 0xfd);
        // CB FD 02FC
        gbc.setState(0xc73, 0x778a, 0x9990, 0x7477, 0x683a, 0x2bca, 0x0, 0x1);
        gbc.writeMem(0xc73, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x778a);
        EXPECT(gbc.pc(), 0xc75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 02FD
        gbc.setState(0x1143, 0xe0b9, 0xaca0, 0x95cf, 0x75dc, 0xfe3b, 0x1, 0x0);
        gbc.writeMem(0x1143, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe0b9);
        EXPECT(gbc.pc(), 0x1145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 02FE
        gbc.setState(0xcab5, 0x923c, 0xa8d0, 0x9724, 0x80e7, 0x8e75, 0x1, 0x0);
        gbc.writeMem(0xcab5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x923c);
        EXPECT(gbc.pc(), 0xcab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab5), 0xcb);
        EXPECT(gbc.readMem(0xcab6), 0xfd);
        // CB FD 0300
        gbc.setState(0xcf83, 0x6187, 0x8240, 0xd62e, 0x391c, 0xe96b, 0x0, 0x0);
        gbc.writeMem(0xcf83, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6187);
        EXPECT(gbc.pc(), 0xcf85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf83), 0xcb);
        EXPECT(gbc.readMem(0xcf84), 0xfd);
        // CB FD 0301
        gbc.setState(0xa247, 0xeace, 0x2940, 0x4a2f, 0xe22c, 0x13e7, 0x0, 0x0);
        gbc.writeMem(0xa247, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xeace);
        EXPECT(gbc.pc(), 0xa249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa247), 0xcb);
        EXPECT(gbc.readMem(0xa248), 0xfd);
        // CB FD 0302
        gbc.setState(0x25d9, 0xb6a0, 0x1680, 0xf083, 0x374c, 0x87e, 0x1, 0x0);
        gbc.writeMem(0x25d9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb6a0);
        EXPECT(gbc.pc(), 0x25db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0303
        gbc.setState(0x239a, 0xe257, 0xba50, 0x3e53, 0xf2e9, 0xb1f6, 0x0, 0x1);
        gbc.writeMem(0x239a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe257);
        EXPECT(gbc.pc(), 0x239c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0304
        gbc.setState(0x9236, 0xc3ed, 0x89e0, 0x55c5, 0x6168, 0x37e0, 0x1, 0x1);
        gbc.writeMem(0x9236, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc3ed);
        EXPECT(gbc.pc(), 0x9238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9236), 0xcb);
        EXPECT(gbc.readMem(0x9237), 0xfd);
        // CB FD 0305
        gbc.setState(0xb85, 0x6452, 0xf030, 0xecd, 0x1e0c, 0xe90b, 0x0, 0x0);
        gbc.writeMem(0xb85, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6452);
        EXPECT(gbc.pc(), 0xb87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0306
        gbc.setState(0x21e3, 0x3c89, 0xe00, 0x83c2, 0x85d0, 0xdd5f, 0x0, 0x0);
        gbc.writeMem(0x21e3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3c89);
        EXPECT(gbc.pc(), 0x21e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0307
        gbc.setState(0x5b3a, 0x2def, 0x9700, 0xe9e0, 0xffc5, 0x8094, 0x0, 0x0);
        gbc.writeMem(0x5b3a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2def);
        EXPECT(gbc.pc(), 0x5b3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0308
        gbc.setState(0x185, 0xda71, 0xa100, 0xa982, 0x4d5a, 0x957f, 0x1, 0x1);
        gbc.writeMem(0x185, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xda71);
        EXPECT(gbc.pc(), 0x187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0309
        gbc.setState(0xe34d, 0xc2a3, 0x6540, 0xfde1, 0xe8c0, 0xf034, 0x0, 0x1);
        gbc.writeMem(0xe34d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc2a3);
        EXPECT(gbc.pc(), 0xe34f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe34d), 0xcb);
        EXPECT(gbc.readMem(0xe34e), 0xfd);
        // CB FD 030A
        gbc.setState(0x159c, 0x4976, 0xe380, 0xfcba, 0x4a46, 0x33be, 0x1, 0x0);
        gbc.writeMem(0x159c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4976);
        EXPECT(gbc.pc(), 0x159e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 030B
        gbc.setState(0x3e07, 0x9b23, 0xdee0, 0x48d8, 0xe708, 0xc1ed, 0x1, 0x1);
        gbc.writeMem(0x3e07, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9b23);
        EXPECT(gbc.pc(), 0x3e09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 030C
        gbc.setState(0x7be6, 0x84c0, 0xd160, 0xbaa9, 0x1e80, 0x69e2, 0x0, 0x1);
        gbc.writeMem(0x7be6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x84c0);
        EXPECT(gbc.pc(), 0x7be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 030D
        gbc.setState(0x704, 0x60c0, 0x9b60, 0xb671, 0xa4ea, 0x6938, 0x0, 0x1);
        gbc.writeMem(0x704, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x60c0);
        EXPECT(gbc.pc(), 0x706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 030E
        gbc.setState(0x9673, 0xa009, 0x4c30, 0x1569, 0x858a, 0x1f15, 0x0, 0x0);
        gbc.writeMem(0x9673, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa009);
        EXPECT(gbc.pc(), 0x9675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9673), 0xcb);
        EXPECT(gbc.readMem(0x9674), 0xfd);
        // CB FD 030F
        gbc.setState(0x5f2a, 0xc654, 0x29b0, 0xdbb1, 0x5e75, 0x7412, 0x0, 0x1);
        gbc.writeMem(0x5f2a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc654);
        EXPECT(gbc.pc(), 0x5f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0310
        gbc.setState(0x7fce, 0x6786, 0x2430, 0xd0ed, 0x1591, 0xea65, 0x0, 0x1);
        gbc.writeMem(0x7fce, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6786);
        EXPECT(gbc.pc(), 0x7fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0311
        gbc.setState(0xa7e1, 0xf452, 0xdb30, 0x2abf, 0x1abe, 0xc81a, 0x0, 0x1);
        gbc.writeMem(0xa7e1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf452);
        EXPECT(gbc.pc(), 0xa7e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e1), 0xcb);
        EXPECT(gbc.readMem(0xa7e2), 0xfd);
        // CB FD 0312
        gbc.setState(0xaada, 0x5a97, 0x7930, 0xb54b, 0xceeb, 0xa461, 0x0, 0x0);
        gbc.writeMem(0xaada, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5a97);
        EXPECT(gbc.pc(), 0xaadc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaada), 0xcb);
        EXPECT(gbc.readMem(0xaadb), 0xfd);
        // CB FD 0313
        gbc.setState(0xbe12, 0xd86, 0xd490, 0xc948, 0x8489, 0x3af2, 0x1, 0x0);
        gbc.writeMem(0xbe12, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd86);
        EXPECT(gbc.pc(), 0xbe14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe12), 0xcb);
        EXPECT(gbc.readMem(0xbe13), 0xfd);
        // CB FD 0314
        gbc.setState(0x237, 0x40b6, 0x7780, 0x3155, 0x4015, 0x1229, 0x1, 0x1);
        gbc.writeMem(0x237, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x40b6);
        EXPECT(gbc.pc(), 0x239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0315
        gbc.setState(0xedad, 0x2244, 0xe550, 0x8fa6, 0xf638, 0x9c2b, 0x0, 0x0);
        gbc.writeMem(0xedad, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2244);
        EXPECT(gbc.pc(), 0xedaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedad), 0xcb);
        EXPECT(gbc.readMem(0xedae), 0xfd);
        // CB FD 0318
        gbc.setState(0xc3b1, 0x62b3, 0x4980, 0xfe09, 0xc4bb, 0x4495, 0x1, 0x1);
        gbc.writeMem(0xc3b1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x62b3);
        EXPECT(gbc.pc(), 0xc3b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b1), 0xcb);
        EXPECT(gbc.readMem(0xc3b2), 0xfd);
        // CB FD 0319
        gbc.setState(0xb2c2, 0x67b1, 0x7ce0, 0x7784, 0x2891, 0x6fa, 0x1, 0x0);
        gbc.writeMem(0xb2c2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x67b1);
        EXPECT(gbc.pc(), 0xb2c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c2), 0xcb);
        EXPECT(gbc.readMem(0xb2c3), 0xfd);
        // CB FD 031A
        gbc.setState(0x70fb, 0x1da5, 0xef40, 0x7732, 0xe8de, 0xcbc2, 0x1, 0x0);
        gbc.writeMem(0x70fb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1da5);
        EXPECT(gbc.pc(), 0x70fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 031C
        gbc.setState(0x75de, 0x1c09, 0x8620, 0x9a8a, 0x7a66, 0xbb7, 0x0, 0x1);
        gbc.writeMem(0x75de, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1c09);
        EXPECT(gbc.pc(), 0x75e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 031D
        gbc.setState(0x99c3, 0xbf3a, 0x24c0, 0xcd56, 0x65fe, 0x6d2b, 0x0, 0x1);
        gbc.writeMem(0x99c3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbf3a);
        EXPECT(gbc.pc(), 0x99c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c3), 0xcb);
        EXPECT(gbc.readMem(0x99c4), 0xfd);
        // CB FD 031E
        gbc.setState(0x70ec, 0x14f3, 0x17f0, 0x51ac, 0xd41e, 0x2ee, 0x0, 0x1);
        gbc.writeMem(0x70ec, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x14f3);
        EXPECT(gbc.pc(), 0x70ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 031F
        gbc.setState(0x84ee, 0xe1fc, 0x9400, 0xad8, 0x237d, 0x712c, 0x0, 0x1);
        gbc.writeMem(0x84ee, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe1fc);
        EXPECT(gbc.pc(), 0x84f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ee), 0xcb);
        EXPECT(gbc.readMem(0x84ef), 0xfd);
        // CB FD 0320
        gbc.setState(0xb946, 0xa6f2, 0xf500, 0xd7e3, 0x7e81, 0x175a, 0x0, 0x1);
        gbc.writeMem(0xb946, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa6f2);
        EXPECT(gbc.pc(), 0xb948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb946), 0xcb);
        EXPECT(gbc.readMem(0xb947), 0xfd);
        // CB FD 0321
        gbc.setState(0x8531, 0xc8d0, 0x9560, 0x8e33, 0x8ec7, 0x8550, 0x0, 0x1);
        gbc.writeMem(0x8531, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc8d0);
        EXPECT(gbc.pc(), 0x8533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8531), 0xcb);
        EXPECT(gbc.readMem(0x8532), 0xfd);
        // CB FD 0323
        gbc.setState(0x6553, 0x69f0, 0x90b0, 0xb44e, 0x775a, 0xae73, 0x1, 0x0);
        gbc.writeMem(0x6553, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x69f0);
        EXPECT(gbc.pc(), 0x6555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0324
        gbc.setState(0xb058, 0xbde4, 0x370, 0xf9fc, 0x9abf, 0xba42, 0x1, 0x1);
        gbc.writeMem(0xb058, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbde4);
        EXPECT(gbc.pc(), 0xb05a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb058), 0xcb);
        EXPECT(gbc.readMem(0xb059), 0xfd);
        // CB FD 0326
        gbc.setState(0x4195, 0xf521, 0x3df0, 0x8f61, 0xf383, 0x329, 0x1, 0x1);
        gbc.writeMem(0x4195, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf521);
        EXPECT(gbc.pc(), 0x4197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0327
        gbc.setState(0xeb88, 0x5039, 0x1cf0, 0x71d4, 0x5394, 0x61b0, 0x1, 0x0);
        gbc.writeMem(0xeb88, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5039);
        EXPECT(gbc.pc(), 0xeb8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb88), 0xcb);
        EXPECT(gbc.readMem(0xeb89), 0xfd);
        // CB FD 0328
        gbc.setState(0xd0c2, 0xc189, 0xaa0, 0x1521, 0xc10, 0xbb1a, 0x1, 0x1);
        gbc.writeMem(0xd0c2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc189);
        EXPECT(gbc.pc(), 0xd0c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c2), 0xcb);
        EXPECT(gbc.readMem(0xd0c3), 0xfd);
        // CB FD 0329
        gbc.setState(0xdc44, 0xc2b7, 0xf2a0, 0x38c3, 0x1d85, 0x70fe, 0x1, 0x0);
        gbc.writeMem(0xdc44, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc2b7);
        EXPECT(gbc.pc(), 0xdc46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc44), 0xcb);
        EXPECT(gbc.readMem(0xdc45), 0xfd);
        // CB FD 032A
        gbc.setState(0x238b, 0x14ec, 0x67d0, 0x13a3, 0xd7db, 0xe6dd, 0x0, 0x0);
        gbc.writeMem(0x238b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x14ec);
        EXPECT(gbc.pc(), 0x238d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 032B
        gbc.setState(0x4008, 0x9ccc, 0xb5b0, 0x62be, 0x2c9d, 0xf69b, 0x1, 0x0);
        gbc.writeMem(0x4008, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9ccc);
        EXPECT(gbc.pc(), 0x400a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 032C
        gbc.setState(0x989, 0x2569, 0x8d00, 0xa9db, 0xa62d, 0xd355, 0x0, 0x0);
        gbc.writeMem(0x989, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2569);
        EXPECT(gbc.pc(), 0x98b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 032E
        gbc.setState(0xc8a5, 0x35c0, 0xa170, 0x4204, 0x7a3b, 0x73db, 0x0, 0x0);
        gbc.writeMem(0xc8a5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x35c0);
        EXPECT(gbc.pc(), 0xc8a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a5), 0xcb);
        EXPECT(gbc.readMem(0xc8a6), 0xfd);
        // CB FD 032F
        gbc.setState(0x866b, 0xa61d, 0x7b20, 0x59aa, 0xa541, 0xad83, 0x1, 0x1);
        gbc.writeMem(0x866b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa61d);
        EXPECT(gbc.pc(), 0x866d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866b), 0xcb);
        EXPECT(gbc.readMem(0x866c), 0xfd);
        // CB FD 0330
        gbc.setState(0x7b25, 0x29c0, 0xa060, 0x3ed, 0x3177, 0x92cb, 0x1, 0x1);
        gbc.writeMem(0x7b25, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x29c0);
        EXPECT(gbc.pc(), 0x7b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0331
        gbc.setState(0x1714, 0x41d2, 0x41f0, 0x5c01, 0xf962, 0x2a17, 0x1, 0x1);
        gbc.writeMem(0x1714, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x41d2);
        EXPECT(gbc.pc(), 0x1716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0332
        gbc.setState(0x2fbe, 0xa6ec, 0x4cf0, 0xa7a2, 0x21bd, 0xaba9, 0x1, 0x1);
        gbc.writeMem(0x2fbe, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa6ec);
        EXPECT(gbc.pc(), 0x2fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0333
        gbc.setState(0xa4a1, 0xc223, 0x4c90, 0x4bfc, 0xd3d3, 0x42d7, 0x1, 0x1);
        gbc.writeMem(0xa4a1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc223);
        EXPECT(gbc.pc(), 0xa4a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a1), 0xcb);
        EXPECT(gbc.readMem(0xa4a2), 0xfd);
        // CB FD 0335
        gbc.setState(0x73bf, 0xfe3c, 0x17d0, 0x52a1, 0x8da7, 0x4d33, 0x1, 0x1);
        gbc.writeMem(0x73bf, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xfe3c);
        EXPECT(gbc.pc(), 0x73c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0336
        gbc.setState(0x7a50, 0xb72e, 0xf5c0, 0xb765, 0x2cfa, 0x5234, 0x1, 0x1);
        gbc.writeMem(0x7a50, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb72e);
        EXPECT(gbc.pc(), 0x7a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0338
        gbc.setState(0x205b, 0xba9a, 0x7bc0, 0x560a, 0xd920, 0x729f, 0x0, 0x1);
        gbc.writeMem(0x205b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xba9a);
        EXPECT(gbc.pc(), 0x205d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 033A
        gbc.setState(0x77bb, 0x367b, 0x1850, 0x8f67, 0x5103, 0x901d, 0x0, 0x0);
        gbc.writeMem(0x77bb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x367b);
        EXPECT(gbc.pc(), 0x77bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 033B
        gbc.setState(0xccc9, 0xf9da, 0xbf10, 0xdcca, 0x1d, 0xc9de, 0x1, 0x0);
        gbc.writeMem(0xccc9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf9da);
        EXPECT(gbc.pc(), 0xcccb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc9), 0xcb);
        EXPECT(gbc.readMem(0xccca), 0xfd);
        // CB FD 033C
        gbc.setState(0xa37b, 0xd6a, 0x1c80, 0x5cbd, 0x70fc, 0x74d0, 0x0, 0x1);
        gbc.writeMem(0xa37b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd6a);
        EXPECT(gbc.pc(), 0xa37d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa37b), 0xcb);
        EXPECT(gbc.readMem(0xa37c), 0xfd);
        // CB FD 033D
        gbc.setState(0x295, 0x86a0, 0xee10, 0xaee, 0xd618, 0xb911, 0x1, 0x1);
        gbc.writeMem(0x295, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x86a0);
        EXPECT(gbc.pc(), 0x297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 033E
        gbc.setState(0x7081, 0xf254, 0x7360, 0x37e6, 0x9913, 0xff3b, 0x1, 0x1);
        gbc.writeMem(0x7081, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf254);
        EXPECT(gbc.pc(), 0x7083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 033F
        gbc.setState(0x79fc, 0xef79, 0xa400, 0x6ab9, 0x9f78, 0x62f2, 0x0, 0x0);
        gbc.writeMem(0x79fc, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xef79);
        EXPECT(gbc.pc(), 0x79fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0340
        gbc.setState(0x769c, 0x3f99, 0xfd90, 0xbd23, 0x68d9, 0x7ee7, 0x1, 0x1);
        gbc.writeMem(0x769c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3f99);
        EXPECT(gbc.pc(), 0x769e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0341
        gbc.setState(0x1c20, 0xfc49, 0xa960, 0x7735, 0x203d, 0xeb8b, 0x0, 0x1);
        gbc.writeMem(0x1c20, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfc49);
        EXPECT(gbc.pc(), 0x1c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0342
        gbc.setState(0xaa99, 0x40f1, 0x7080, 0x61a6, 0x64eb, 0x3b37, 0x0, 0x1);
        gbc.writeMem(0xaa99, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x40f1);
        EXPECT(gbc.pc(), 0xaa9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa99), 0xcb);
        EXPECT(gbc.readMem(0xaa9a), 0xfd);
        // CB FD 0343
        gbc.setState(0xc4d4, 0xe590, 0xe460, 0x4b3b, 0x9011, 0x261, 0x1, 0x0);
        gbc.writeMem(0xc4d4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe590);
        EXPECT(gbc.pc(), 0xc4d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d4), 0xcb);
        EXPECT(gbc.readMem(0xc4d5), 0xfd);
        // CB FD 0344
        gbc.setState(0x7662, 0x52ae, 0xf460, 0x53b2, 0xabf7, 0xc710, 0x0, 0x0);
        gbc.writeMem(0x7662, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x52ae);
        EXPECT(gbc.pc(), 0x7664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0345
        gbc.setState(0x26ca, 0x1d63, 0xf420, 0x7b45, 0x6517, 0x794, 0x1, 0x0);
        gbc.writeMem(0x26ca, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1d63);
        EXPECT(gbc.pc(), 0x26cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0346
        gbc.setState(0x456, 0x4084, 0xcf90, 0xefb, 0xb554, 0x4f5, 0x0, 0x0);
        gbc.writeMem(0x456, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4084);
        EXPECT(gbc.pc(), 0x458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0347
        gbc.setState(0xa9c3, 0xb3a2, 0x430, 0x17ee, 0xfb63, 0x2677, 0x1, 0x0);
        gbc.writeMem(0xa9c3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb3a2);
        EXPECT(gbc.pc(), 0xa9c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c3), 0xcb);
        EXPECT(gbc.readMem(0xa9c4), 0xfd);
        // CB FD 0348
        gbc.setState(0x81a7, 0x4e1e, 0x42e0, 0xf85c, 0x1fe, 0x474e, 0x1, 0x1);
        gbc.writeMem(0x81a7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4e1e);
        EXPECT(gbc.pc(), 0x81a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a7), 0xcb);
        EXPECT(gbc.readMem(0x81a8), 0xfd);
        // CB FD 0349
        gbc.setState(0x64bb, 0x9c87, 0x39a0, 0xb25c, 0x2401, 0x40ea, 0x1, 0x1);
        gbc.writeMem(0x64bb, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9c87);
        EXPECT(gbc.pc(), 0x64bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 034A
        gbc.setState(0x85c6, 0xcc13, 0x55e0, 0xbcfc, 0x7785, 0xc49a, 0x0, 0x1);
        gbc.writeMem(0x85c6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xcc13);
        EXPECT(gbc.pc(), 0x85c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c6), 0xcb);
        EXPECT(gbc.readMem(0x85c7), 0xfd);
        // CB FD 034B
        gbc.setState(0xac61, 0x336f, 0x8f0, 0x7b8c, 0xa805, 0x5953, 0x0, 0x1);
        gbc.writeMem(0xac61, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x336f);
        EXPECT(gbc.pc(), 0xac63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac61), 0xcb);
        EXPECT(gbc.readMem(0xac62), 0xfd);
        // CB FD 034C
        gbc.setState(0x32f6, 0xf8f, 0x780, 0x2e24, 0xdfbf, 0xaf4b, 0x0, 0x0);
        gbc.writeMem(0x32f6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf8f);
        EXPECT(gbc.pc(), 0x32f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 034D
        gbc.setState(0x9da3, 0xa474, 0xd110, 0x826a, 0xa215, 0xf4b9, 0x1, 0x0);
        gbc.writeMem(0x9da3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa474);
        EXPECT(gbc.pc(), 0x9da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da3), 0xcb);
        EXPECT(gbc.readMem(0x9da4), 0xfd);
        // CB FD 034E
        gbc.setState(0x7357, 0x803d, 0xd660, 0x2770, 0x3e3b, 0xf753, 0x1, 0x0);
        gbc.writeMem(0x7357, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x803d);
        EXPECT(gbc.pc(), 0x7359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 034F
        gbc.setState(0xdd1, 0xc8b2, 0x7910, 0x2fc, 0x7fc9, 0xff04, 0x1, 0x1);
        gbc.writeMem(0xdd1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc8b2);
        EXPECT(gbc.pc(), 0xdd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0350
        gbc.setState(0x9863, 0x6c7b, 0xadd0, 0x24f6, 0x5bc3, 0x8df6, 0x0, 0x0);
        gbc.writeMem(0x9863, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6c7b);
        EXPECT(gbc.pc(), 0x9865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9863), 0xcb);
        EXPECT(gbc.readMem(0x9864), 0xfd);
        // CB FD 0351
        gbc.setState(0xc134, 0x2652, 0x27a0, 0x34b8, 0x3692, 0x7686, 0x1, 0x0);
        gbc.writeMem(0xc134, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x2652);
        EXPECT(gbc.pc(), 0xc136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc134), 0xcb);
        EXPECT(gbc.readMem(0xc135), 0xfd);
        // CB FD 0352
        gbc.setState(0x1c80, 0xa3e1, 0x3480, 0xfd71, 0x7d67, 0xc021, 0x0, 0x0);
        gbc.writeMem(0x1c80, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa3e1);
        EXPECT(gbc.pc(), 0x1c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0353
        gbc.setState(0xb372, 0xa88f, 0x7790, 0x4d96, 0xe8ce, 0xffb7, 0x0, 0x1);
        gbc.writeMem(0xb372, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa88f);
        EXPECT(gbc.pc(), 0xb374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb372), 0xcb);
        EXPECT(gbc.readMem(0xb373), 0xfd);
        // CB FD 0354
        gbc.setState(0x7f85, 0xce68, 0xc700, 0x372b, 0x272d, 0xc799, 0x1, 0x1);
        gbc.writeMem(0x7f85, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xce68);
        EXPECT(gbc.pc(), 0x7f87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0355
        gbc.setState(0x9d60, 0xaa5f, 0xe6e0, 0xaf2b, 0x750b, 0x7c3c, 0x1, 0x1);
        gbc.writeMem(0x9d60, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xaa5f);
        EXPECT(gbc.pc(), 0x9d62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d60), 0xcb);
        EXPECT(gbc.readMem(0x9d61), 0xfd);
        // CB FD 0356
        gbc.setState(0xc38e, 0xeb58, 0xecb0, 0x48e0, 0xadee, 0x858f, 0x1, 0x0);
        gbc.writeMem(0xc38e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xeb58);
        EXPECT(gbc.pc(), 0xc390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc38e), 0xcb);
        EXPECT(gbc.readMem(0xc38f), 0xfd);
        // CB FD 0357
        gbc.setState(0xd12f, 0xa2b, 0x90a0, 0x9eba, 0x2e9e, 0x8df7, 0x0, 0x0);
        gbc.writeMem(0xd12f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa2b);
        EXPECT(gbc.pc(), 0xd131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd12f), 0xcb);
        EXPECT(gbc.readMem(0xd130), 0xfd);
        // CB FD 0358
        gbc.setState(0xbafc, 0x634d, 0x5780, 0xca35, 0x3511, 0xcf0f, 0x1, 0x0);
        gbc.writeMem(0xbafc, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x634d);
        EXPECT(gbc.pc(), 0xbafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbafc), 0xcb);
        EXPECT(gbc.readMem(0xbafd), 0xfd);
        // CB FD 0359
        gbc.setState(0x732e, 0x34a2, 0x2460, 0xc88a, 0xcd5c, 0xcc, 0x0, 0x1);
        gbc.writeMem(0x732e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x34a2);
        EXPECT(gbc.pc(), 0x7330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 035A
        gbc.setState(0xbbf5, 0xfab4, 0x6f90, 0x198f, 0x5f2, 0xc00f, 0x0, 0x1);
        gbc.writeMem(0xbbf5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfab4);
        EXPECT(gbc.pc(), 0xbbf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf5), 0xcb);
        EXPECT(gbc.readMem(0xbbf6), 0xfd);
        // CB FD 035B
        gbc.setState(0x958, 0xeb65, 0x3450, 0x132f, 0x67e9, 0x5bc7, 0x1, 0x0);
        gbc.writeMem(0x958, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xeb65);
        EXPECT(gbc.pc(), 0x95a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 035C
        gbc.setState(0x425f, 0xd6c5, 0xc960, 0x9459, 0x71ed, 0x5d5f, 0x1, 0x0);
        gbc.writeMem(0x425f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd6c5);
        EXPECT(gbc.pc(), 0x4261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 035D
        gbc.setState(0xa3be, 0x87e2, 0xeb40, 0x2b13, 0xfd71, 0xdc97, 0x1, 0x0);
        gbc.writeMem(0xa3be, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x87e2);
        EXPECT(gbc.pc(), 0xa3c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3be), 0xcb);
        EXPECT(gbc.readMem(0xa3bf), 0xfd);
        // CB FD 035E
        gbc.setState(0xe05f, 0x39ba, 0x5580, 0x6e41, 0x85c1, 0x9fb6, 0x0, 0x0);
        gbc.writeMem(0xe05f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x39ba);
        EXPECT(gbc.pc(), 0xe061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe05f), 0xcb);
        EXPECT(gbc.readMem(0xe060), 0xfd);
        // CB FD 035F
        gbc.setState(0xf23, 0x165f, 0x4aa0, 0x2f09, 0x553e, 0x53ef, 0x1, 0x0);
        gbc.writeMem(0xf23, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x165f);
        EXPECT(gbc.pc(), 0xf25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0360
        gbc.setState(0xc560, 0x9f5f, 0x28b0, 0xf3b, 0xc30a, 0x74c1, 0x1, 0x0);
        gbc.writeMem(0xc560, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9f5f);
        EXPECT(gbc.pc(), 0xc562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc560), 0xcb);
        EXPECT(gbc.readMem(0xc561), 0xfd);
        // CB FD 0361
        gbc.setState(0xcc10, 0x8c28, 0xcea0, 0x3463, 0x9ad3, 0x44b8, 0x0, 0x1);
        gbc.writeMem(0xcc10, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8c28);
        EXPECT(gbc.pc(), 0xcc12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc10), 0xcb);
        EXPECT(gbc.readMem(0xcc11), 0xfd);
        // CB FD 0362
        gbc.setState(0x5a52, 0xe848, 0xc000, 0xbdf5, 0x63e3, 0x8467, 0x0, 0x1);
        gbc.writeMem(0x5a52, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe848);
        EXPECT(gbc.pc(), 0x5a54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0363
        gbc.setState(0x624d, 0x1b0b, 0x5b60, 0x3183, 0x298a, 0xd839, 0x0, 0x1);
        gbc.writeMem(0x624d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1b0b);
        EXPECT(gbc.pc(), 0x624f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0364
        gbc.setState(0x4, 0x612d, 0x18b0, 0x914, 0xed54, 0x6476, 0x1, 0x1);
        gbc.writeMem(0x4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x612d);
        EXPECT(gbc.pc(), 0x6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0365
        gbc.setState(0x5a9, 0x718d, 0xe760, 0x252, 0x8f60, 0xf1cb, 0x0, 0x1);
        gbc.writeMem(0x5a9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x718d);
        EXPECT(gbc.pc(), 0x5ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0367
        gbc.setState(0xd548, 0x2bf7, 0xc440, 0x8cc9, 0xb99, 0x8ee2, 0x1, 0x1);
        gbc.writeMem(0xd548, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2bf7);
        EXPECT(gbc.pc(), 0xd54a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd548), 0xcb);
        EXPECT(gbc.readMem(0xd549), 0xfd);
        // CB FD 0368
        gbc.setState(0xee9e, 0x8d99, 0x78c0, 0x5e81, 0xb4df, 0xc737, 0x0, 0x1);
        gbc.writeMem(0xee9e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8d99);
        EXPECT(gbc.pc(), 0xeea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee9e), 0xcb);
        EXPECT(gbc.readMem(0xee9f), 0xfd);
        // CB FD 0369
        gbc.setState(0xce18, 0xdb0c, 0xc120, 0xcd4c, 0xcdd2, 0x33a4, 0x1, 0x1);
        gbc.writeMem(0xce18, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdb0c);
        EXPECT(gbc.pc(), 0xce1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce18), 0xcb);
        EXPECT(gbc.readMem(0xce19), 0xfd);
        // CB FD 036A
        gbc.setState(0xa06a, 0xe8a3, 0xaa20, 0x4605, 0x5176, 0xb6a8, 0x1, 0x0);
        gbc.writeMem(0xa06a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe8a3);
        EXPECT(gbc.pc(), 0xa06c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa06a), 0xcb);
        EXPECT(gbc.readMem(0xa06b), 0xfd);
        // CB FD 036B
        gbc.setState(0xb579, 0x6a0e, 0xefa0, 0x673a, 0x4f77, 0xcba7, 0x0, 0x1);
        gbc.writeMem(0xb579, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6a0e);
        EXPECT(gbc.pc(), 0xb57b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb579), 0xcb);
        EXPECT(gbc.readMem(0xb57a), 0xfd);
        // CB FD 036C
        gbc.setState(0x26dc, 0x56c6, 0x4a60, 0x6022, 0xa699, 0x2938, 0x0, 0x0);
        gbc.writeMem(0x26dc, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x56c6);
        EXPECT(gbc.pc(), 0x26de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 036D
        gbc.setState(0x181f, 0x5445, 0xcb80, 0x799c, 0x8935, 0xcd6f, 0x0, 0x0);
        gbc.writeMem(0x181f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5445);
        EXPECT(gbc.pc(), 0x1821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 036E
        gbc.setState(0x5b66, 0x1492, 0x110, 0xfedd, 0xa542, 0x8d6c, 0x0, 0x1);
        gbc.writeMem(0x5b66, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1492);
        EXPECT(gbc.pc(), 0x5b68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 036F
        gbc.setState(0xcccc, 0xe0ae, 0xaa0, 0xaef5, 0x91e5, 0xa2f4, 0x0, 0x1);
        gbc.writeMem(0xcccc, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe0ae);
        EXPECT(gbc.pc(), 0xccce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcccc), 0xcb);
        EXPECT(gbc.readMem(0xcccd), 0xfd);
        // CB FD 0370
        gbc.setState(0x6db0, 0x2356, 0x500, 0xf3c5, 0xa457, 0x2430, 0x1, 0x1);
        gbc.writeMem(0x6db0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2356);
        EXPECT(gbc.pc(), 0x6db2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0371
        gbc.setState(0x295a, 0xb84c, 0xee70, 0xa373, 0x76d1, 0xc508, 0x1, 0x1);
        gbc.writeMem(0x295a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb84c);
        EXPECT(gbc.pc(), 0x295c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0372
        gbc.setState(0x2087, 0x870a, 0xf6c0, 0xce8a, 0xa818, 0xdaaf, 0x1, 0x1);
        gbc.writeMem(0x2087, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x870a);
        EXPECT(gbc.pc(), 0x2089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0373
        gbc.setState(0x79da, 0xc7a4, 0xc190, 0x5663, 0x8247, 0xd73d, 0x0, 0x1);
        gbc.writeMem(0x79da, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc7a4);
        EXPECT(gbc.pc(), 0x79dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0374
        gbc.setState(0xae7a, 0x231d, 0x8c70, 0xef10, 0x53e9, 0x2336, 0x0, 0x0);
        gbc.writeMem(0xae7a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x231d);
        EXPECT(gbc.pc(), 0xae7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae7a), 0xcb);
        EXPECT(gbc.readMem(0xae7b), 0xfd);
        // CB FD 0375
        gbc.setState(0xb0ec, 0x4562, 0x4ba0, 0x5e86, 0x17eb, 0xb132, 0x1, 0x0);
        gbc.writeMem(0xb0ec, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4562);
        EXPECT(gbc.pc(), 0xb0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ec), 0xcb);
        EXPECT(gbc.readMem(0xb0ed), 0xfd);
        // CB FD 0376
        gbc.setState(0x4421, 0xd990, 0x58f0, 0xa034, 0x889f, 0xc909, 0x0, 0x1);
        gbc.writeMem(0x4421, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd990);
        EXPECT(gbc.pc(), 0x4423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0377
        gbc.setState(0x2df0, 0xffb4, 0xe120, 0xc630, 0xd798, 0x35cc, 0x1, 0x1);
        gbc.writeMem(0x2df0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xffb4);
        EXPECT(gbc.pc(), 0x2df2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0378
        gbc.setState(0x5f0, 0xb6dc, 0xe190, 0x477f, 0x1d04, 0x176a, 0x1, 0x1);
        gbc.writeMem(0x5f0, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb6dc);
        EXPECT(gbc.pc(), 0x5f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0379
        gbc.setState(0xda44, 0xfb89, 0x88c0, 0x5011, 0xe60e, 0x41c1, 0x1, 0x0);
        gbc.writeMem(0xda44, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfb89);
        EXPECT(gbc.pc(), 0xda46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda44), 0xcb);
        EXPECT(gbc.readMem(0xda45), 0xfd);
        // CB FD 037A
        gbc.setState(0x6b1c, 0xa84e, 0xfa00, 0x5be3, 0xee73, 0x266f, 0x1, 0x0);
        gbc.writeMem(0x6b1c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa84e);
        EXPECT(gbc.pc(), 0x6b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 037B
        gbc.setState(0xd3b1, 0xbf7b, 0xcb70, 0x200d, 0xd9e4, 0x3f0c, 0x0, 0x1);
        gbc.writeMem(0xd3b1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbf7b);
        EXPECT(gbc.pc(), 0xd3b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b1), 0xcb);
        EXPECT(gbc.readMem(0xd3b2), 0xfd);
        // CB FD 037C
        gbc.setState(0x72a, 0x5453, 0x170, 0x96d7, 0x2d4d, 0x679e, 0x0, 0x1);
        gbc.writeMem(0x72a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5453);
        EXPECT(gbc.pc(), 0x72c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 037D
        gbc.setState(0xe31, 0x649a, 0x55b0, 0x8f5a, 0x95b0, 0x8e0c, 0x0, 0x1);
        gbc.writeMem(0xe31, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x649a);
        EXPECT(gbc.pc(), 0xe33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 037E
        gbc.setState(0x80d4, 0xa1cc, 0xd80, 0x85b1, 0xd09e, 0xa212, 0x1, 0x1);
        gbc.writeMem(0x80d4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa1cc);
        EXPECT(gbc.pc(), 0x80d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d4), 0xcb);
        EXPECT(gbc.readMem(0x80d5), 0xfd);
        // CB FD 037F
        gbc.setState(0x2408, 0x1f7b, 0x48b0, 0x8897, 0x89b9, 0xaf00, 0x1, 0x1);
        gbc.writeMem(0x2408, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1f7b);
        EXPECT(gbc.pc(), 0x240a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0380
        gbc.setState(0x772, 0x9ccb, 0xfd00, 0x5e68, 0x2407, 0xb400, 0x0, 0x1);
        gbc.writeMem(0x772, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9ccb);
        EXPECT(gbc.pc(), 0x774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0381
        gbc.setState(0xcf8e, 0xa65c, 0x1400, 0xa7c1, 0xbdb1, 0xc8be, 0x1, 0x0);
        gbc.writeMem(0xcf8e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa65c);
        EXPECT(gbc.pc(), 0xcf90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf8e), 0xcb);
        EXPECT(gbc.readMem(0xcf8f), 0xfd);
        // CB FD 0382
        gbc.setState(0xb6ba, 0x2bd9, 0xeba0, 0xa354, 0x7514, 0x5105, 0x1, 0x0);
        gbc.writeMem(0xb6ba, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2bd9);
        EXPECT(gbc.pc(), 0xb6bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ba), 0xcb);
        EXPECT(gbc.readMem(0xb6bb), 0xfd);
        // CB FD 0384
        gbc.setState(0xa318, 0x38a1, 0x31e0, 0xe8da, 0x5d66, 0xce60, 0x0, 0x1);
        gbc.writeMem(0xa318, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x38a1);
        EXPECT(gbc.pc(), 0xa31a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa318), 0xcb);
        EXPECT(gbc.readMem(0xa319), 0xfd);
        // CB FD 0385
        gbc.setState(0x904e, 0x2a48, 0xa700, 0x41a8, 0x9433, 0x4847, 0x1, 0x0);
        gbc.writeMem(0x904e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2a48);
        EXPECT(gbc.pc(), 0x9050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x904e), 0xcb);
        EXPECT(gbc.readMem(0x904f), 0xfd);
        // CB FD 0386
        gbc.setState(0x1043, 0x52d5, 0xbf20, 0x2548, 0x5edc, 0x9e55, 0x0, 0x0);
        gbc.writeMem(0x1043, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x52d5);
        EXPECT(gbc.pc(), 0x1045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0387
        gbc.setState(0xebb1, 0x1f77, 0xd970, 0x233e, 0x744e, 0xb1ec, 0x0, 0x0);
        gbc.writeMem(0xebb1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1f77);
        EXPECT(gbc.pc(), 0xebb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb1), 0xcb);
        EXPECT(gbc.readMem(0xebb2), 0xfd);
        // CB FD 0388
        gbc.setState(0x9897, 0x1d03, 0x9e70, 0xd18, 0xf14c, 0xda8a, 0x1, 0x1);
        gbc.writeMem(0x9897, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1d03);
        EXPECT(gbc.pc(), 0x9899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9897), 0xcb);
        EXPECT(gbc.readMem(0x9898), 0xfd);
        // CB FD 0389
        gbc.setState(0x9e73, 0xa75e, 0xccf0, 0x3ff6, 0x13e0, 0xe75, 0x1, 0x1);
        gbc.writeMem(0x9e73, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa75e);
        EXPECT(gbc.pc(), 0x9e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e73), 0xcb);
        EXPECT(gbc.readMem(0x9e74), 0xfd);
        // CB FD 038A
        gbc.setState(0x6783, 0x7ff9, 0xf90, 0x3a5f, 0xb3d0, 0x4a06, 0x0, 0x0);
        gbc.writeMem(0x6783, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7ff9);
        EXPECT(gbc.pc(), 0x6785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 038B
        gbc.setState(0x5f9, 0x6311, 0x1520, 0x2831, 0xf8ce, 0xe5c5, 0x0, 0x0);
        gbc.writeMem(0x5f9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6311);
        EXPECT(gbc.pc(), 0x5fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 038C
        gbc.setState(0x790b, 0x98b9, 0x32b0, 0xc216, 0x2ec1, 0x931b, 0x1, 0x0);
        gbc.writeMem(0x790b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x98b9);
        EXPECT(gbc.pc(), 0x790d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 038D
        gbc.setState(0x50a2, 0x3892, 0xe810, 0x3a64, 0x2c88, 0xc6f2, 0x1, 0x0);
        gbc.writeMem(0x50a2, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3892);
        EXPECT(gbc.pc(), 0x50a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 038E
        gbc.setState(0xa194, 0x60f6, 0x9a70, 0x4718, 0x3403, 0x4c7a, 0x0, 0x1);
        gbc.writeMem(0xa194, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x60f6);
        EXPECT(gbc.pc(), 0xa196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa194), 0xcb);
        EXPECT(gbc.readMem(0xa195), 0xfd);
        // CB FD 038F
        gbc.setState(0xa4c1, 0x6437, 0x10b0, 0x96b0, 0x4960, 0x6443, 0x0, 0x0);
        gbc.writeMem(0xa4c1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6437);
        EXPECT(gbc.pc(), 0xa4c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c1), 0xcb);
        EXPECT(gbc.readMem(0xa4c2), 0xfd);
        // CB FD 0390
        gbc.setState(0x881c, 0xe471, 0x8040, 0xcdd9, 0x15f2, 0x5e30, 0x0, 0x0);
        gbc.writeMem(0x881c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe471);
        EXPECT(gbc.pc(), 0x881e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881c), 0xcb);
        EXPECT(gbc.readMem(0x881d), 0xfd);
        // CB FD 0392
        gbc.setState(0x7c9, 0xe570, 0x4c60, 0xbabf, 0xdda0, 0x2509, 0x0, 0x1);
        gbc.writeMem(0x7c9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe570);
        EXPECT(gbc.pc(), 0x7cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 0393
        gbc.setState(0x86d6, 0x5ab4, 0xcfb0, 0x3191, 0x5373, 0x299e, 0x1, 0x0);
        gbc.writeMem(0x86d6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5ab4);
        EXPECT(gbc.pc(), 0x86d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d6), 0xcb);
        EXPECT(gbc.readMem(0x86d7), 0xfd);
        // CB FD 0394
        gbc.setState(0xcf9d, 0x1de3, 0x1640, 0x3556, 0x9a2e, 0x136e, 0x0, 0x1);
        gbc.writeMem(0xcf9d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1de3);
        EXPECT(gbc.pc(), 0xcf9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9d), 0xcb);
        EXPECT(gbc.readMem(0xcf9e), 0xfd);
        // CB FD 0395
        gbc.setState(0x884a, 0xa267, 0xe320, 0x77dc, 0x4364, 0x35ef, 0x1, 0x1);
        gbc.writeMem(0x884a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa267);
        EXPECT(gbc.pc(), 0x884c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x884a), 0xcb);
        EXPECT(gbc.readMem(0x884b), 0xfd);
        // CB FD 0396
        gbc.setState(0x7a16, 0xedae, 0xab90, 0xc088, 0x6b5, 0xe149, 0x1, 0x0);
        gbc.writeMem(0x7a16, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xedae);
        EXPECT(gbc.pc(), 0x7a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 0398
        gbc.setState(0xbdad, 0x7842, 0x6140, 0x1522, 0xe681, 0x18da, 0x1, 0x0);
        gbc.writeMem(0xbdad, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7842);
        EXPECT(gbc.pc(), 0xbdaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdad), 0xcb);
        EXPECT(gbc.readMem(0xbdae), 0xfd);
        // CB FD 0399
        gbc.setState(0x70ad, 0xca79, 0xb010, 0x5874, 0xaafd, 0x1c8, 0x0, 0x1);
        gbc.writeMem(0x70ad, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xca79);
        EXPECT(gbc.pc(), 0x70af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 039B
        gbc.setState(0x77b5, 0x76d1, 0x6480, 0x286, 0xb43, 0xb414, 0x1, 0x0);
        gbc.writeMem(0x77b5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x76d1);
        EXPECT(gbc.pc(), 0x77b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 039C
        gbc.setState(0xdc91, 0x3306, 0x1b00, 0x96a9, 0xe8f8, 0x9913, 0x0, 0x0);
        gbc.writeMem(0xdc91, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3306);
        EXPECT(gbc.pc(), 0xdc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc91), 0xcb);
        EXPECT(gbc.readMem(0xdc92), 0xfd);
        // CB FD 039D
        gbc.setState(0x7a27, 0xf31, 0x3b0, 0x8abd, 0x51d2, 0xe13, 0x1, 0x1);
        gbc.writeMem(0x7a27, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf31);
        EXPECT(gbc.pc(), 0x7a29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 039E
        gbc.setState(0x856a, 0xd6f1, 0x55f0, 0xfc07, 0x3036, 0xa56a, 0x0, 0x0);
        gbc.writeMem(0x856a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd6f1);
        EXPECT(gbc.pc(), 0x856c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x856a), 0xcb);
        EXPECT(gbc.readMem(0x856b), 0xfd);
        // CB FD 039F
        gbc.setState(0xc54, 0xc6c6, 0x92d0, 0x8bde, 0x3c7d, 0x99, 0x0, 0x1);
        gbc.writeMem(0xc54, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc6c6);
        EXPECT(gbc.pc(), 0xc56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03A0
        gbc.setState(0x548f, 0x2eaf, 0x16d0, 0x2f3f, 0x371, 0x5b3e, 0x0, 0x1);
        gbc.writeMem(0x548f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2eaf);
        EXPECT(gbc.pc(), 0x5491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03A1
        gbc.setState(0x5228, 0xe213, 0x1950, 0xe33a, 0x9147, 0x8842, 0x1, 0x0);
        gbc.writeMem(0x5228, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe213);
        EXPECT(gbc.pc(), 0x522a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03A2
        gbc.setState(0x58a4, 0x752f, 0x540, 0x69b1, 0x2401, 0x6db8, 0x1, 0x0);
        gbc.writeMem(0x58a4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x752f);
        EXPECT(gbc.pc(), 0x58a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03A3
        gbc.setState(0x158c, 0xfdf8, 0xc60, 0xb256, 0x7239, 0x95bf, 0x1, 0x0);
        gbc.writeMem(0x158c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xfdf8);
        EXPECT(gbc.pc(), 0x158e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03A4
        gbc.setState(0xb9ce, 0xe44f, 0x1e00, 0x9c18, 0xcdd3, 0xcee8, 0x1, 0x1);
        gbc.writeMem(0xb9ce, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe44f);
        EXPECT(gbc.pc(), 0xb9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ce), 0xcb);
        EXPECT(gbc.readMem(0xb9cf), 0xfd);
        // CB FD 03A5
        gbc.setState(0x3988, 0xac89, 0x5750, 0x2133, 0x1c13, 0x5479, 0x0, 0x1);
        gbc.writeMem(0x3988, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xac89);
        EXPECT(gbc.pc(), 0x398a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03A6
        gbc.setState(0x1785, 0x2102, 0x2460, 0xbda7, 0x5f5b, 0xbefa, 0x0, 0x0);
        gbc.writeMem(0x1785, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2102);
        EXPECT(gbc.pc(), 0x1787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03A7
        gbc.setState(0xb64a, 0x38bd, 0xa610, 0x8ba2, 0x8b48, 0x969b, 0x1, 0x0);
        gbc.writeMem(0xb64a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x38bd);
        EXPECT(gbc.pc(), 0xb64c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb64a), 0xcb);
        EXPECT(gbc.readMem(0xb64b), 0xfd);
        // CB FD 03A8
        gbc.setState(0x97a9, 0x4ef5, 0xacd0, 0xcd34, 0x9d46, 0xac6b, 0x0, 0x1);
        gbc.writeMem(0x97a9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4ef5);
        EXPECT(gbc.pc(), 0x97ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a9), 0xcb);
        EXPECT(gbc.readMem(0x97aa), 0xfd);
        // CB FD 03A9
        gbc.setState(0x60b4, 0x7742, 0xf180, 0x7c38, 0xcb32, 0xf2c5, 0x1, 0x0);
        gbc.writeMem(0x60b4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7742);
        EXPECT(gbc.pc(), 0x60b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03AA
        gbc.setState(0xaa53, 0x8ced, 0x76c0, 0x7f17, 0xbcec, 0x875c, 0x1, 0x0);
        gbc.writeMem(0xaa53, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8ced);
        EXPECT(gbc.pc(), 0xaa55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa53), 0xcb);
        EXPECT(gbc.readMem(0xaa54), 0xfd);
        // CB FD 03AB
        gbc.setState(0x328a, 0x6742, 0xa7e0, 0x26ac, 0x1b67, 0xef12, 0x1, 0x0);
        gbc.writeMem(0x328a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6742);
        EXPECT(gbc.pc(), 0x328c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03AC
        gbc.setState(0x2c94, 0xb121, 0xc670, 0xffa9, 0x739f, 0xe15c, 0x0, 0x1);
        gbc.writeMem(0x2c94, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb121);
        EXPECT(gbc.pc(), 0x2c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03AD
        gbc.setState(0x89b5, 0x477e, 0x7270, 0xbe1, 0x4940, 0x1756, 0x1, 0x0);
        gbc.writeMem(0x89b5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x477e);
        EXPECT(gbc.pc(), 0x89b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89b5), 0xcb);
        EXPECT(gbc.readMem(0x89b6), 0xfd);
        // CB FD 03AE
        gbc.setState(0x6680, 0xcd49, 0x2440, 0x3f2c, 0x85af, 0xde09, 0x0, 0x0);
        gbc.writeMem(0x6680, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xcd49);
        EXPECT(gbc.pc(), 0x6682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03AF
        gbc.setState(0x6205, 0x1518, 0x7600, 0x5f2c, 0x2bff, 0xc5d, 0x0, 0x0);
        gbc.writeMem(0x6205, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1518);
        EXPECT(gbc.pc(), 0x6207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03B0
        gbc.setState(0x3d30, 0x24f5, 0x1e00, 0x2c15, 0x6baf, 0xbeb0, 0x1, 0x1);
        gbc.writeMem(0x3d30, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x24f5);
        EXPECT(gbc.pc(), 0x3d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03B1
        gbc.setState(0x6c2b, 0x6441, 0xc2e0, 0x6887, 0xdabb, 0x8c5f, 0x0, 0x0);
        gbc.writeMem(0x6c2b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6441);
        EXPECT(gbc.pc(), 0x6c2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03B2
        gbc.setState(0x4fc1, 0xd08a, 0x6e00, 0x25f7, 0x5554, 0xd074, 0x0, 0x0);
        gbc.writeMem(0x4fc1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd08a);
        EXPECT(gbc.pc(), 0x4fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03B3
        gbc.setState(0x71d1, 0xf4ea, 0x4cc0, 0x234a, 0x716a, 0xb0e7, 0x0, 0x1);
        gbc.writeMem(0x71d1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf4ea);
        EXPECT(gbc.pc(), 0x71d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03B4
        gbc.setState(0xe970, 0x4b1e, 0x8230, 0x54c3, 0x2eca, 0xfbec, 0x0, 0x1);
        gbc.writeMem(0xe970, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4b1e);
        EXPECT(gbc.pc(), 0xe972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe970), 0xcb);
        EXPECT(gbc.readMem(0xe971), 0xfd);
        // CB FD 03B5
        gbc.setState(0xe7f, 0x7054, 0x4900, 0x2dfb, 0x11ce, 0x4fe8, 0x1, 0x0);
        gbc.writeMem(0xe7f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7054);
        EXPECT(gbc.pc(), 0xe81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03B6
        gbc.setState(0x8fce, 0xc097, 0x2340, 0xac76, 0x32d3, 0xfa70, 0x0, 0x1);
        gbc.writeMem(0x8fce, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc097);
        EXPECT(gbc.pc(), 0x8fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fce), 0xcb);
        EXPECT(gbc.readMem(0x8fcf), 0xfd);
        // CB FD 03B7
        gbc.setState(0x1ea5, 0xc0ac, 0xa830, 0xe6cb, 0xba7a, 0xa380, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc0ac);
        EXPECT(gbc.pc(), 0x1ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03B8
        gbc.setState(0x1f99, 0x31, 0x300, 0xa167, 0x341e, 0xc5cc, 0x1, 0x1);
        gbc.writeMem(0x1f99, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x31);
        EXPECT(gbc.pc(), 0x1f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03B9
        gbc.setState(0x9eb7, 0x6bb1, 0x1a80, 0xc5d, 0x9f46, 0xff33, 0x1, 0x0);
        gbc.writeMem(0x9eb7, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6bb1);
        EXPECT(gbc.pc(), 0x9eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eb7), 0xcb);
        EXPECT(gbc.readMem(0x9eb8), 0xfd);
        // CB FD 03BA
        gbc.setState(0x60b1, 0x71ef, 0x8240, 0x1ea, 0xa16f, 0x6468, 0x1, 0x0);
        gbc.writeMem(0x60b1, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x71ef);
        EXPECT(gbc.pc(), 0x60b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03BB
        gbc.setState(0xb218, 0xa08, 0xc300, 0x606, 0x3542, 0xd85d, 0x1, 0x0);
        gbc.writeMem(0xb218, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa08);
        EXPECT(gbc.pc(), 0xb21a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb218), 0xcb);
        EXPECT(gbc.readMem(0xb219), 0xfd);
        // CB FD 03BC
        gbc.setState(0x2f0e, 0xdb8b, 0xf390, 0xb2e3, 0xc67, 0x7cc1, 0x0, 0x1);
        gbc.writeMem(0x2f0e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xdb8b);
        EXPECT(gbc.pc(), 0x2f10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03BD
        gbc.setState(0x195f, 0xbee3, 0xb7e0, 0x20e, 0xccfe, 0xeae8, 0x1, 0x0);
        gbc.writeMem(0x195f, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbee3);
        EXPECT(gbc.pc(), 0x1961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03BE
        gbc.setState(0x419a, 0xb64c, 0x5f70, 0x48c9, 0xd2bc, 0x4ceb, 0x1, 0x0);
        gbc.writeMem(0x419a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb64c);
        EXPECT(gbc.pc(), 0x419c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03BF
        gbc.setState(0xc400, 0x1562, 0x11e0, 0x69db, 0xaee6, 0x3d3c, 0x1, 0x0);
        gbc.writeMem(0xc400, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1562);
        EXPECT(gbc.pc(), 0xc402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc400), 0xcb);
        EXPECT(gbc.readMem(0xc401), 0xfd);
        // CB FD 03C0
        gbc.setState(0x87c3, 0xec0b, 0xafd0, 0x22fb, 0xae6f, 0xf38a, 0x1, 0x0);
        gbc.writeMem(0x87c3, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xec0b);
        EXPECT(gbc.pc(), 0x87c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c3), 0xcb);
        EXPECT(gbc.readMem(0x87c4), 0xfd);
        // CB FD 03C1
        gbc.setState(0x64fd, 0xb614, 0xbc40, 0x40d3, 0xff5a, 0xab2c, 0x1, 0x1);
        gbc.writeMem(0x64fd, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb614);
        EXPECT(gbc.pc(), 0x64ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03C2
        gbc.setState(0x5436, 0x851, 0xc810, 0xf231, 0xe1f6, 0x88ee, 0x0, 0x1);
        gbc.writeMem(0x5436, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x851);
        EXPECT(gbc.pc(), 0x5438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03C3
        gbc.setState(0xd61e, 0x7a1f, 0x1dc0, 0x4393, 0x66f0, 0x8c69, 0x1, 0x1);
        gbc.writeMem(0xd61e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7a1f);
        EXPECT(gbc.pc(), 0xd620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd61e), 0xcb);
        EXPECT(gbc.readMem(0xd61f), 0xfd);
        // CB FD 03C4
        gbc.setState(0x3c57, 0x96ea, 0xc2e0, 0xeb8a, 0xa219, 0xf378, 0x0, 0x1);
        gbc.writeMem(0x3c57, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x96ea);
        EXPECT(gbc.pc(), 0x3c59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03C5
        gbc.setState(0x4cb4, 0x5c42, 0x55f0, 0xa09e, 0xafd5, 0xe128, 0x1, 0x1);
        gbc.writeMem(0x4cb4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5c42);
        EXPECT(gbc.pc(), 0x4cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03C6
        gbc.setState(0xccf9, 0x138b, 0x6260, 0x68f2, 0x6ac2, 0x1be6, 0x1, 0x0);
        gbc.writeMem(0xccf9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x138b);
        EXPECT(gbc.pc(), 0xccfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf9), 0xcb);
        EXPECT(gbc.readMem(0xccfa), 0xfd);
        // CB FD 03C7
        gbc.setState(0x34df, 0xda0c, 0xf730, 0xd97c, 0xdc0f, 0xd8d2, 0x0, 0x0);
        gbc.writeMem(0x34df, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xda0c);
        EXPECT(gbc.pc(), 0x34e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03C9
        gbc.setState(0xb60b, 0xebe2, 0x3be0, 0x42c5, 0x7700, 0xcdd7, 0x0, 0x0);
        gbc.writeMem(0xb60b, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xebe2);
        EXPECT(gbc.pc(), 0xb60d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb60b), 0xcb);
        EXPECT(gbc.readMem(0xb60c), 0xfd);
        // CB FD 03CA
        gbc.setState(0xaaa4, 0x6123, 0x5fc0, 0x590d, 0x7853, 0xa35a, 0x1, 0x0);
        gbc.writeMem(0xaaa4, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6123);
        EXPECT(gbc.pc(), 0xaaa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa4), 0xcb);
        EXPECT(gbc.readMem(0xaaa5), 0xfd);
        // CB FD 03CB
        gbc.setState(0x374a, 0xa9e5, 0xe290, 0xd970, 0x3f02, 0x84c0, 0x0, 0x0);
        gbc.writeMem(0x374a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa9e5);
        EXPECT(gbc.pc(), 0x374c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03CC
        gbc.setState(0xe274, 0xb683, 0x7ec0, 0xad2f, 0xa7d4, 0x258d, 0x0, 0x0);
        gbc.writeMem(0xe274, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb683);
        EXPECT(gbc.pc(), 0xe276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe274), 0xcb);
        EXPECT(gbc.readMem(0xe275), 0xfd);
        // CB FD 03CD
        gbc.setState(0xcb87, 0xa8cd, 0x63f0, 0xfc1d, 0xe04a, 0x81d7, 0x0, 0x0);
        gbc.writeMem(0xcb87, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa8cd);
        EXPECT(gbc.pc(), 0xcb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb87), 0xcb);
        EXPECT(gbc.readMem(0xcb88), 0xfd);
        // CB FD 03CF
        gbc.setState(0x2c19, 0x75d6, 0x6d0, 0xed69, 0x179d, 0x2d07, 0x0, 0x0);
        gbc.writeMem(0x2c19, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x75d6);
        EXPECT(gbc.pc(), 0x2c1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03D0
        gbc.setState(0x136e, 0xf92, 0x35c0, 0x232, 0xed46, 0xa9f2, 0x1, 0x1);
        gbc.writeMem(0x136e, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf92);
        EXPECT(gbc.pc(), 0x1370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03D1
        gbc.setState(0x1eec, 0xe17b, 0x25d0, 0xefc8, 0x3ba2, 0x86fd, 0x1, 0x1);
        gbc.writeMem(0x1eec, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe17b);
        EXPECT(gbc.pc(), 0x1eee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03D2
        gbc.setState(0x8122, 0xdc02, 0x4f30, 0x402f, 0x286f, 0xfad, 0x0, 0x1);
        gbc.writeMem(0x8122, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xdc02);
        EXPECT(gbc.pc(), 0x8124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8122), 0xcb);
        EXPECT(gbc.readMem(0x8123), 0xfd);
        // CB FD 03D3
        gbc.setState(0x3672, 0xf0cd, 0x180, 0xca0d, 0x9392, 0xe917, 0x1, 0x1);
        gbc.writeMem(0x3672, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf0cd);
        EXPECT(gbc.pc(), 0x3674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03D4
        gbc.setState(0xce6a, 0x7a55, 0x8c60, 0xb8e, 0xac0a, 0x311, 0x1, 0x0);
        gbc.writeMem(0xce6a, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7a55);
        EXPECT(gbc.pc(), 0xce6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce6a), 0xcb);
        EXPECT(gbc.readMem(0xce6b), 0xfd);
        // CB FD 03D5
        gbc.setState(0xae18, 0xc71f, 0xeef0, 0x3b54, 0x1ae4, 0xe9c2, 0x0, 0x0);
        gbc.writeMem(0xae18, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc71f);
        EXPECT(gbc.pc(), 0xae1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae18), 0xcb);
        EXPECT(gbc.readMem(0xae19), 0xfd);
        // CB FD 03D6
        gbc.setState(0x281d, 0xabe1, 0xf330, 0xd907, 0xd80b, 0x54bf, 0x1, 0x1);
        gbc.writeMem(0x281d, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xabe1);
        EXPECT(gbc.pc(), 0x281f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03D7
        gbc.setState(0x241c, 0xaa39, 0xe0, 0xf8eb, 0xfb6a, 0x2aea, 0x1, 0x0);
        gbc.writeMem(0x241c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xaa39);
        EXPECT(gbc.pc(), 0x241e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03D8
        gbc.setState(0x9ca6, 0x7cfd, 0xb420, 0x854e, 0xa1db, 0xab5d, 0x1, 0x1);
        gbc.writeMem(0x9ca6, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7cfd);
        EXPECT(gbc.pc(), 0x9ca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca6), 0xcb);
        EXPECT(gbc.readMem(0x9ca7), 0xfd);
        // CB FD 03D9
        gbc.setState(0x5f49, 0xc26e, 0x8580, 0x4849, 0xc3b0, 0xfd82, 0x1, 0x1);
        gbc.writeMem(0x5f49, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc26e);
        EXPECT(gbc.pc(), 0x5f4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03DA
        gbc.setState(0x66a5, 0x3b04, 0x96b0, 0xca47, 0x1ab4, 0xd769, 0x1, 0x1);
        gbc.writeMem(0x66a5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3b04);
        EXPECT(gbc.pc(), 0x66a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03DB
        gbc.setState(0x8f24, 0x71fa, 0x6780, 0xf26c, 0x25e5, 0xb0b5, 0x1, 0x0);
        gbc.writeMem(0x8f24, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x71fa);
        EXPECT(gbc.pc(), 0x8f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f24), 0xcb);
        EXPECT(gbc.readMem(0x8f25), 0xfd);
        // CB FD 03DC
        gbc.setState(0xd75c, 0xf32a, 0x1520, 0x61be, 0xc8dd, 0xf378, 0x1, 0x0);
        gbc.writeMem(0xd75c, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf32a);
        EXPECT(gbc.pc(), 0xd75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd75c), 0xcb);
        EXPECT(gbc.readMem(0xd75d), 0xfd);
        // CB FD 03DD
        gbc.setState(0x6ef9, 0xad80, 0x5790, 0xc4ca, 0x14fb, 0x1722, 0x0, 0x1);
        gbc.writeMem(0x6ef9, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xad80);
        EXPECT(gbc.pc(), 0x6efb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03DE
        gbc.setState(0x2b07, 0x615f, 0xb890, 0x5ecb, 0x4779, 0x5c89, 0x0, 0x1);
        gbc.writeMem(0x2b07, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x615f);
        EXPECT(gbc.pc(), 0x2b09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03DF
        gbc.setState(0x2caf, 0xb7c5, 0xcb70, 0xed9, 0xe3ce, 0x2868, 0x0, 0x1);
        gbc.writeMem(0x2caf, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb7c5);
        EXPECT(gbc.pc(), 0x2cb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03E0
        gbc.setState(0x77d5, 0xd3cc, 0xb6b0, 0x88a1, 0xdc81, 0x7b2d, 0x0, 0x1);
        gbc.writeMem(0x77d5, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd3cc);
        EXPECT(gbc.pc(), 0x77d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03E1
        gbc.setState(0xd037, 0x158, 0x3960, 0x545b, 0x93ca, 0x7edb, 0x1, 0x0);
        gbc.writeMem(0xd037, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x158);
        EXPECT(gbc.pc(), 0xd039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd037), 0xcb);
        EXPECT(gbc.readMem(0xd038), 0xfd);
        // CB FD 03E2
        gbc.setState(0x4708, 0xf75c, 0x24b0, 0x1a36, 0x274f, 0x1fbf, 0x0, 0x0);
        gbc.writeMem(0x4708, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf75c);
        EXPECT(gbc.pc(), 0x470a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03E3
        gbc.setState(0x6646, 0x2366, 0x99e0, 0xbc4b, 0xc0b9, 0xd9b1, 0x1, 0x1);
        gbc.writeMem(0x6646, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2366);
        EXPECT(gbc.pc(), 0x6648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03E4
        gbc.setState(0x2970, 0x2dc4, 0xe950, 0x1f21, 0xd121, 0xe544, 0x0, 0x0);
        gbc.writeMem(0x2970, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2dc4);
        EXPECT(gbc.pc(), 0x2972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03E5
        gbc.setState(0x5644, 0xe526, 0x4a70, 0xeeee, 0x2089, 0x10a3, 0x1, 0x1);
        gbc.writeMem(0x5644, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe526);
        EXPECT(gbc.pc(), 0x5646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB FD 03E6
        gbc.setState(0x5748, 0x9cdb, 0xe9a0, 0xbfae, 0x44ad, 0x58d9, 0x0, 0x0);
        gbc.writeMem(0x5748, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9cdb);
        EXPECT(gbc.pc(), 0x574a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB FD 03E7
        gbc.setState(0xecae, 0x6f02, 0xb590, 0x8758, 0xb1a2, 0x3fae, 0x1, 0x0);
        gbc.writeMem(0xecae, { 0xcb, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6f02);
        EXPECT(gbc.pc(), 0xecb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecae), 0xcb);
        EXPECT(gbc.readMem(0xecaf), 0xfd);
    }
}
#endif
