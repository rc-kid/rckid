    TEST(gbcemu, opcode_b6) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // B6 0000
        gbc.setState(0x1a2c, 0xae0, 0x8e30, 0x8d2e, 0x5ff7, 0x8dc6, 0x0, 0x0);
        gbc.writeMem(0x1a2c, { 0xb6 });
        gbc.writeMem(0x8dc6, { 0xa1 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xae0, gbc.sp());
        EXPECT(0x1a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x8dc6));
        // B6 0001
        gbc.setState(0x7460, 0xf658, 0xbe90, 0x8c43, 0x40a4, 0x1766, 0x1, 0x0);
        gbc.writeMem(0x1766, { 0x18 });
        gbc.writeMem(0x7460, { 0xb6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf658, gbc.sp());
        EXPECT(0x7461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0002
        gbc.setState(0x609c, 0xfbb5, 0xd2b0, 0xbfd3, 0x5679, 0x35bd, 0x0, 0x0);
        gbc.writeMem(0x35bd, { 0x3e });
        gbc.writeMem(0x609c, { 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfbb5, gbc.sp());
        EXPECT(0x609d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0003
        gbc.setState(0xb7a9, 0xbfa1, 0x80c0, 0x3b67, 0xd384, 0x9943, 0x1, 0x0);
        gbc.writeMem(0x9943, { 0xb7 });
        gbc.writeMem(0xb7a9, { 0xb6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbfa1, gbc.sp());
        EXPECT(0xb7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9943));
        EXPECT(0xb6, gbc.readMem(0xb7a9));
        // B6 0004
        gbc.setState(0x9d3b, 0x581b, 0xd9d0, 0x161c, 0xc392, 0xceca, 0x0, 0x1);
        gbc.writeMem(0x9d3b, { 0xb6 });
        gbc.writeMem(0xceca, { 0x35 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x581b, gbc.sp());
        EXPECT(0x9d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9d3b));
        EXPECT(0x35, gbc.readMem(0xceca));
        // B6 0005
        gbc.setState(0x45b3, 0xa9ef, 0x88c0, 0x766e, 0x7e4, 0xe931, 0x0, 0x0);
        gbc.writeMem(0x45b3, { 0xb6 });
        gbc.writeMem(0xe931, { 0xc5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa9ef, gbc.sp());
        EXPECT(0x45b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xe931));
        // B6 0006
        gbc.setState(0xefe2, 0x8547, 0xb3c0, 0xd6d2, 0x88b2, 0xc540, 0x1, 0x0);
        gbc.writeMem(0xc540, { 0x98 });
        gbc.writeMem(0xefe2, { 0xb6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8547, gbc.sp());
        EXPECT(0xefe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc540));
        EXPECT(0xb6, gbc.readMem(0xefe2));
        // B6 0007
        gbc.setState(0xb35, 0x114f, 0x8310, 0xd2a2, 0xb218, 0x13e1, 0x1, 0x0);
        gbc.writeMem(0xb35, { 0xb6 });
        gbc.writeMem(0x13e1, { 0x4f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x114f, gbc.sp());
        EXPECT(0xb36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0008
        gbc.setState(0x6ad2, 0xd581, 0xec20, 0x21b0, 0xdc14, 0x5097, 0x1, 0x1);
        gbc.writeMem(0x5097, { 0x94 });
        gbc.writeMem(0x6ad2, { 0xb6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd581, gbc.sp());
        EXPECT(0x6ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0009
        gbc.setState(0x527e, 0xc5c6, 0x5ec0, 0x24e7, 0x2884, 0xe25e, 0x0, 0x1);
        gbc.writeMem(0x527e, { 0xb6 });
        gbc.writeMem(0xe25e, { 0x70 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc5c6, gbc.sp());
        EXPECT(0x527f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xe25e));
        // B6 000A
        gbc.setState(0x192e, 0x1d5f, 0xa120, 0xb437, 0x2bcb, 0x80c4, 0x1, 0x0);
        gbc.writeMem(0x192e, { 0xb6 });
        gbc.writeMem(0x80c4, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1d5f, gbc.sp());
        EXPECT(0x192f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x80c4));
        // B6 000B
        gbc.setState(0x9e36, 0xbef0, 0x81e0, 0x81c5, 0x5e51, 0xf655, 0x1, 0x0);
        gbc.writeMem(0x9e36, { 0xb6 });
        gbc.writeMem(0xf655, { 0x73 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbef0, gbc.sp());
        EXPECT(0x9e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9e36));
        EXPECT(0x73, gbc.readMem(0xf655));
        // B6 000C
        gbc.setState(0x86cf, 0x53a5, 0x5f90, 0xed1a, 0x5839, 0xaf89, 0x0, 0x0);
        gbc.writeMem(0x86cf, { 0xb6 });
        gbc.writeMem(0xaf89, { 0x6b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x53a5, gbc.sp());
        EXPECT(0x86d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x86cf));
        EXPECT(0x6b, gbc.readMem(0xaf89));
        // B6 000D
        gbc.setState(0x7fd5, 0x1092, 0x6b90, 0x8810, 0xcbc, 0x1b06, 0x0, 0x1);
        gbc.writeMem(0x1b06, { 0xb4 });
        gbc.writeMem(0x7fd5, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1092, gbc.sp());
        EXPECT(0x7fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 000E
        gbc.setState(0x88a5, 0x7b05, 0xaf30, 0x12f5, 0xe02e, 0xbdf9, 0x0, 0x0);
        gbc.writeMem(0x88a5, { 0xb6 });
        gbc.writeMem(0xbdf9, { 0xb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7b05, gbc.sp());
        EXPECT(0x88a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x88a5));
        EXPECT(0xb, gbc.readMem(0xbdf9));
        // B6 000F
        gbc.setState(0x65a5, 0x1e8, 0x9c0, 0x8f9c, 0xd24, 0xd59b, 0x0, 0x1);
        gbc.writeMem(0x65a5, { 0xb6 });
        gbc.writeMem(0xd59b, { 0x2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1e8, gbc.sp());
        EXPECT(0x65a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xd59b));
        // B6 0010
        gbc.setState(0xe990, 0x6b4d, 0xae30, 0x5609, 0xccf0, 0x4abe, 0x0, 0x1);
        gbc.writeMem(0x4abe, { 0x9b });
        gbc.writeMem(0xe990, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6b4d, gbc.sp());
        EXPECT(0xe991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe990));
        // B6 0011
        gbc.setState(0xc2f6, 0x7d78, 0x4940, 0x3114, 0xfac0, 0x5fe2, 0x0, 0x1);
        gbc.writeMem(0x5fe2, { 0xfa });
        gbc.writeMem(0xc2f6, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7d78, gbc.sp());
        EXPECT(0xc2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc2f6));
        // B6 0013
        gbc.setState(0x4b3e, 0x4071, 0x5620, 0xb3c3, 0xf5a, 0xf19b, 0x0, 0x1);
        gbc.writeMem(0x4b3e, { 0xb6 });
        gbc.writeMem(0xf19b, { 0x5a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4071, gbc.sp());
        EXPECT(0x4b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xf19b));
        // B6 0014
        gbc.setState(0x43d8, 0x17c7, 0x56c0, 0xb10d, 0xe358, 0xf603, 0x1, 0x1);
        gbc.writeMem(0x43d8, { 0xb6 });
        gbc.writeMem(0xf603, { 0x91 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x17c7, gbc.sp());
        EXPECT(0x43d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xf603));
        // B6 0015
        gbc.setState(0xd40, 0x98f5, 0xda60, 0x7a48, 0xb777, 0xec33, 0x0, 0x1);
        gbc.writeMem(0xd40, { 0xb6 });
        gbc.writeMem(0xec33, { 0xbf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x98f5, gbc.sp());
        EXPECT(0xd41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xec33));
        // B6 0016
        gbc.setState(0xc574, 0xf23f, 0x13c0, 0xf2c5, 0xe5d5, 0x21d7, 0x0, 0x0);
        gbc.writeMem(0x21d7, { 0xf1 });
        gbc.writeMem(0xc574, { 0xb6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf23f, gbc.sp());
        EXPECT(0xc575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc574));
        // B6 0017
        gbc.setState(0x3f62, 0x3879, 0x1da0, 0x6238, 0x4a04, 0xff3d, 0x1, 0x0);
        gbc.writeMem(0x3f62, { 0xb6 });
        gbc.writeMem(0xff3d, { 0xcb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3879, gbc.sp());
        EXPECT(0x3f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xff3d));
        // B6 0018
        gbc.setState(0xa0eb, 0x9546, 0x7da0, 0xe439, 0x2cd9, 0xa434, 0x1, 0x1);
        gbc.writeMem(0xa0eb, { 0xb6 });
        gbc.writeMem(0xa434, { 0x9c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9546, gbc.sp());
        EXPECT(0xa0ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa0eb));
        EXPECT(0x9c, gbc.readMem(0xa434));
        // B6 0019
        gbc.setState(0x56fa, 0xeee5, 0x89b0, 0x38d4, 0x97b9, 0x1268, 0x1, 0x1);
        gbc.writeMem(0x1268, { 0x90 });
        gbc.writeMem(0x56fa, { 0xb6 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xeee5, gbc.sp());
        EXPECT(0x56fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 001A
        gbc.setState(0x562c, 0x3c62, 0x2220, 0x134e, 0x614, 0x8f9c, 0x1, 0x1);
        gbc.writeMem(0x562c, { 0xb6 });
        gbc.writeMem(0x8f9c, { 0x51 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3c62, gbc.sp());
        EXPECT(0x562d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8f9c));
        // B6 001B
        gbc.setState(0xebc7, 0x2d28, 0x73e0, 0x2c29, 0x18dd, 0xc101, 0x1, 0x0);
        gbc.writeMem(0xc101, { 0x79 });
        gbc.writeMem(0xebc7, { 0xb6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2d28, gbc.sp());
        EXPECT(0xebc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xc101));
        EXPECT(0xb6, gbc.readMem(0xebc7));
        // B6 001C
        gbc.setState(0xd246, 0xac73, 0x290, 0x515d, 0x2811, 0x4299, 0x1, 0x1);
        gbc.writeMem(0x4299, { 0x50 });
        gbc.writeMem(0xd246, { 0xb6 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xac73, gbc.sp());
        EXPECT(0xd247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd246));
        // B6 001D
        gbc.setState(0x723c, 0xe3c3, 0x9330, 0xe943, 0x79b0, 0xab96, 0x0, 0x1);
        gbc.writeMem(0x723c, { 0xb6 });
        gbc.writeMem(0xab96, { 0x8e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe3c3, gbc.sp());
        EXPECT(0x723d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xab96));
        // B6 001E
        gbc.setState(0xc49b, 0x6574, 0x7470, 0x45e9, 0xbb85, 0xacf8, 0x1, 0x0);
        gbc.writeMem(0xacf8, { 0x45 });
        gbc.writeMem(0xc49b, { 0xb6 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6574, gbc.sp());
        EXPECT(0xc49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xacf8));
        EXPECT(0xb6, gbc.readMem(0xc49b));
        // B6 001F
        gbc.setState(0x28d6, 0x63d0, 0x9d90, 0xa9fb, 0xb883, 0x3d6, 0x0, 0x1);
        gbc.writeMem(0x3d6, { 0xae });
        gbc.writeMem(0x28d6, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x63d0, gbc.sp());
        EXPECT(0x28d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0020
        gbc.setState(0x306, 0xdd65, 0x2a10, 0x2bd0, 0xd88a, 0xfad3, 0x1, 0x1);
        gbc.writeMem(0x306, { 0xb6 });
        gbc.writeMem(0xfad3, { 0x8b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdd65, gbc.sp());
        EXPECT(0x307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xfad3));
        // B6 0021
        gbc.setState(0xe9b2, 0xbded, 0x4b50, 0x40d9, 0x938, 0xce04, 0x1, 0x1);
        gbc.writeMem(0xce04, { 0xbb });
        gbc.writeMem(0xe9b2, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbded, gbc.sp());
        EXPECT(0xe9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xce04));
        EXPECT(0xb6, gbc.readMem(0xe9b2));
        // B6 0022
        gbc.setState(0x8707, 0xcf86, 0x3b50, 0x9c53, 0x4993, 0xae8, 0x0, 0x1);
        gbc.writeMem(0xae8, { 0xdb });
        gbc.writeMem(0x8707, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcf86, gbc.sp());
        EXPECT(0x8708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8707));
        // B6 0023
        gbc.setState(0x6610, 0xb349, 0xb2d0, 0xe9e7, 0xc6f, 0x92fd, 0x0, 0x1);
        gbc.writeMem(0x6610, { 0xb6 });
        gbc.writeMem(0x92fd, { 0x20 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb349, gbc.sp());
        EXPECT(0x6611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x92fd));
        // B6 0025
        gbc.setState(0x42da, 0x642c, 0x47a0, 0x8fa8, 0x3f7c, 0xa08e, 0x1, 0x1);
        gbc.writeMem(0x42da, { 0xb6 });
        gbc.writeMem(0xa08e, { 0x8e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x642c, gbc.sp());
        EXPECT(0x42db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa08e));
        // B6 0026
        gbc.setState(0x5fd5, 0x4033, 0x7d80, 0x90ee, 0xe894, 0x8601, 0x1, 0x1);
        gbc.writeMem(0x5fd5, { 0xb6 });
        gbc.writeMem(0x8601, { 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4033, gbc.sp());
        EXPECT(0x5fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x8601));
        // B6 0027
        gbc.setState(0x1565, 0x1913, 0x7480, 0x7cd2, 0xbeaa, 0x941e, 0x0, 0x0);
        gbc.writeMem(0x1565, { 0xb6 });
        gbc.writeMem(0x941e, { 0x39 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1913, gbc.sp());
        EXPECT(0x1566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x941e));
        // B6 0028
        gbc.setState(0x20ce, 0x4112, 0xb9a0, 0xe5db, 0xdd40, 0x282a, 0x1, 0x1);
        gbc.writeMem(0x20ce, { 0xb6 });
        gbc.writeMem(0x282a, { 0xc4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4112, gbc.sp());
        EXPECT(0x20cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0029
        gbc.setState(0x53c2, 0x5360, 0xd380, 0xc968, 0xab06, 0x375b, 0x1, 0x0);
        gbc.writeMem(0x375b, { 0x35 });
        gbc.writeMem(0x53c2, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5360, gbc.sp());
        EXPECT(0x53c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 002A
        gbc.setState(0x6df0, 0xf12, 0x2f30, 0x3f76, 0xdedf, 0xadf5, 0x0, 0x0);
        gbc.writeMem(0x6df0, { 0xb6 });
        gbc.writeMem(0xadf5, { 0xe3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf12, gbc.sp());
        EXPECT(0x6df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xadf5));
        // B6 002B
        gbc.setState(0xee0c, 0xac40, 0xbae0, 0x70e4, 0xd345, 0x8ed8, 0x1, 0x1);
        gbc.writeMem(0x8ed8, { 0xf });
        gbc.writeMem(0xee0c, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xac40, gbc.sp());
        EXPECT(0xee0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x8ed8));
        EXPECT(0xb6, gbc.readMem(0xee0c));
        // B6 002D
        gbc.setState(0xe396, 0x3205, 0x16f0, 0xf3ff, 0x1bf6, 0x96a2, 0x1, 0x0);
        gbc.writeMem(0x96a2, { 0x9f });
        gbc.writeMem(0xe396, { 0xb6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3205, gbc.sp());
        EXPECT(0xe397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x96a2));
        EXPECT(0xb6, gbc.readMem(0xe396));
        // B6 002E
        gbc.setState(0xe35e, 0x6d5b, 0xf6e0, 0x112b, 0xffc, 0xfa8e, 0x1, 0x0);
        gbc.writeMem(0xe35e, { 0xb6 });
        gbc.writeMem(0xfa8e, { 0xb8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6d5b, gbc.sp());
        EXPECT(0xe35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe35e));
        EXPECT(0xb8, gbc.readMem(0xfa8e));
        // B6 002F
        gbc.setState(0x2bf, 0x1b81, 0x5ba0, 0xbcdb, 0x3769, 0x53ac, 0x0, 0x1);
        gbc.writeMem(0x2bf, { 0xb6 });
        gbc.writeMem(0x53ac, { 0x7e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1b81, gbc.sp());
        EXPECT(0x2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0030
        gbc.setState(0xc09a, 0x5772, 0x7ee0, 0xd5ff, 0xcca5, 0x9f96, 0x1, 0x1);
        gbc.writeMem(0x9f96, { 0x13 });
        gbc.writeMem(0xc09a, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5772, gbc.sp());
        EXPECT(0xc09b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9f96));
        EXPECT(0xb6, gbc.readMem(0xc09a));
        // B6 0032
        gbc.setState(0x13b3, 0xac61, 0x78e0, 0x3f6a, 0x5124, 0x4375, 0x1, 0x0);
        gbc.writeMem(0x13b3, { 0xb6 });
        gbc.writeMem(0x4375, { 0x80 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xac61, gbc.sp());
        EXPECT(0x13b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0033
        gbc.setState(0x108d, 0xe339, 0xc9f0, 0x81dc, 0x21a2, 0xeb89, 0x1, 0x1);
        gbc.writeMem(0x108d, { 0xb6 });
        gbc.writeMem(0xeb89, { 0xf2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe339, gbc.sp());
        EXPECT(0x108e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xeb89));
        // B6 0034
        gbc.setState(0x1fca, 0x56fc, 0xccd0, 0xdb80, 0x6e4b, 0xe58f, 0x0, 0x1);
        gbc.writeMem(0x1fca, { 0xb6 });
        gbc.writeMem(0xe58f, { 0x38 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x56fc, gbc.sp());
        EXPECT(0x1fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe58f));
        // B6 0035
        gbc.setState(0x131d, 0x51da, 0x3580, 0x8f51, 0x576, 0x4d72, 0x0, 0x1);
        gbc.writeMem(0x131d, { 0xb6 });
        gbc.writeMem(0x4d72, { 0x4f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x51da, gbc.sp());
        EXPECT(0x131e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0036
        gbc.setState(0x4421, 0x1ae8, 0xfeb0, 0xf79d, 0x1ef0, 0x5442, 0x0, 0x1);
        gbc.writeMem(0x4421, { 0xb6 });
        gbc.writeMem(0x5442, { 0xfb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1ae8, gbc.sp());
        EXPECT(0x4422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0037
        gbc.setState(0x23cc, 0x7a1f, 0x8380, 0xb6f6, 0xccf8, 0x5f20, 0x0, 0x1);
        gbc.writeMem(0x23cc, { 0xb6 });
        gbc.writeMem(0x5f20, { 0x73 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7a1f, gbc.sp());
        EXPECT(0x23cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0038
        gbc.setState(0x38c5, 0x414, 0x8410, 0xcc68, 0x707e, 0x2b6c, 0x0, 0x0);
        gbc.writeMem(0x2b6c, { 0x1f });
        gbc.writeMem(0x38c5, { 0xb6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x414, gbc.sp());
        EXPECT(0x38c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0039
        gbc.setState(0x3700, 0x2c5c, 0xc9f0, 0x8ba2, 0x616e, 0x7d37, 0x0, 0x0);
        gbc.writeMem(0x3700, { 0xb6 });
        gbc.writeMem(0x7d37, { 0x63 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2c5c, gbc.sp());
        EXPECT(0x3701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 003A
        gbc.setState(0x10dd, 0xd80, 0x3210, 0xb3eb, 0x399, 0xf9f0, 0x0, 0x0);
        gbc.writeMem(0x10dd, { 0xb6 });
        gbc.writeMem(0xf9f0, { 0x6d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd80, gbc.sp());
        EXPECT(0x10de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xf9f0));
        // B6 003B
        gbc.setState(0x151f, 0x62b5, 0xfd80, 0xab44, 0x6b8c, 0x1a80, 0x1, 0x0);
        gbc.writeMem(0x151f, { 0xb6 });
        gbc.writeMem(0x1a80, { 0xd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x62b5, gbc.sp());
        EXPECT(0x1520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 003C
        gbc.setState(0x8131, 0xc27e, 0xe020, 0x89c, 0x696d, 0xcace, 0x1, 0x0);
        gbc.writeMem(0x8131, { 0xb6 });
        gbc.writeMem(0xcace, { 0x48 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc27e, gbc.sp());
        EXPECT(0x8132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8131));
        EXPECT(0x48, gbc.readMem(0xcace));
        // B6 003D
        gbc.setState(0x4636, 0x6e7c, 0x30f0, 0xdf1e, 0xe6df, 0x416f, 0x1, 0x0);
        gbc.writeMem(0x416f, { 0xbd });
        gbc.writeMem(0x4636, { 0xb6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6e7c, gbc.sp());
        EXPECT(0x4637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 003E
        gbc.setState(0x9228, 0xcfe2, 0x4c60, 0xcd61, 0xe438, 0x340f, 0x0, 0x0);
        gbc.writeMem(0x340f, { 0xc0 });
        gbc.writeMem(0x9228, { 0xb6 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcfe2, gbc.sp());
        EXPECT(0x9229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9228));
        // B6 003F
        gbc.setState(0x672d, 0xcf55, 0x5540, 0x29de, 0xc9b7, 0xe231, 0x1, 0x0);
        gbc.writeMem(0x672d, { 0xb6 });
        gbc.writeMem(0xe231, { 0xbe });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcf55, gbc.sp());
        EXPECT(0x672e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xe231));
        // B6 0040
        gbc.setState(0x3c4, 0xd4f8, 0x7a10, 0xa93e, 0x7260, 0x2b00, 0x1, 0x0);
        gbc.writeMem(0x3c4, { 0xb6 });
        gbc.writeMem(0x2b00, { 0x7c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd4f8, gbc.sp());
        EXPECT(0x3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0041
        gbc.setState(0xaf71, 0x978, 0xe200, 0x179f, 0xe30d, 0xce09, 0x1, 0x1);
        gbc.writeMem(0xaf71, { 0xb6 });
        gbc.writeMem(0xce09, { 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x978, gbc.sp());
        EXPECT(0xaf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xaf71));
        EXPECT(0x85, gbc.readMem(0xce09));
        // B6 0042
        gbc.setState(0xaca4, 0x6809, 0x6410, 0x69fb, 0x28bf, 0x8155, 0x1, 0x1);
        gbc.writeMem(0x8155, { 0x67 });
        gbc.writeMem(0xaca4, { 0xb6 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6809, gbc.sp());
        EXPECT(0xaca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x8155));
        EXPECT(0xb6, gbc.readMem(0xaca4));
        // B6 0043
        gbc.setState(0x4e45, 0x770a, 0xeb30, 0x991b, 0x4d0b, 0x8012, 0x1, 0x0);
        gbc.writeMem(0x4e45, { 0xb6 });
        gbc.writeMem(0x8012, { 0x38 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x770a, gbc.sp());
        EXPECT(0x4e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8012));
        // B6 0044
        gbc.setState(0x804f, 0xa703, 0x8870, 0x5deb, 0x5d, 0x87bf, 0x0, 0x1);
        gbc.writeMem(0x804f, { 0xb6 });
        gbc.writeMem(0x87bf, { 0x46 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa703, gbc.sp());
        EXPECT(0x8050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x804f));
        EXPECT(0x46, gbc.readMem(0x87bf));
        // B6 0045
        gbc.setState(0x998c, 0xa977, 0x72b0, 0x4b66, 0x19d3, 0x7e5a, 0x0, 0x0);
        gbc.writeMem(0x7e5a, { 0x4d });
        gbc.writeMem(0x998c, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa977, gbc.sp());
        EXPECT(0x998d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x998c));
        // B6 0046
        gbc.setState(0x8d23, 0x6ea8, 0x9810, 0xf239, 0x16cf, 0x8c5e, 0x1, 0x1);
        gbc.writeMem(0x8c5e, { 0x72 });
        gbc.writeMem(0x8d23, { 0xb6 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0x8d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x8c5e));
        EXPECT(0xb6, gbc.readMem(0x8d23));
        // B6 0047
        gbc.setState(0x540f, 0x6d6f, 0xbe40, 0xfe75, 0xc839, 0xa251, 0x0, 0x0);
        gbc.writeMem(0x540f, { 0xb6 });
        gbc.writeMem(0xa251, { 0xf7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6d6f, gbc.sp());
        EXPECT(0x5410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa251));
        // B6 0048
        gbc.setState(0x26e1, 0x2eee, 0x3500, 0x2e41, 0x81d, 0x1452, 0x0, 0x0);
        gbc.writeMem(0x1452, { 0xb9 });
        gbc.writeMem(0x26e1, { 0xb6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2eee, gbc.sp());
        EXPECT(0x26e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 004A
        gbc.setState(0x5c2f, 0x7350, 0x2640, 0x2676, 0x1286, 0xa3be, 0x1, 0x1);
        gbc.writeMem(0x5c2f, { 0xb6 });
        gbc.writeMem(0xa3be, { 0xe9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7350, gbc.sp());
        EXPECT(0x5c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xa3be));
        // B6 004B
        gbc.setState(0x7659, 0x12aa, 0xf920, 0xc507, 0x8222, 0xb075, 0x0, 0x1);
        gbc.writeMem(0x7659, { 0xb6 });
        gbc.writeMem(0xb075, { 0xd2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x12aa, gbc.sp());
        EXPECT(0x765a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xb075));
        // B6 004C
        gbc.setState(0xe244, 0x3363, 0xd5a0, 0xc097, 0xf2b2, 0xc68e, 0x0, 0x1);
        gbc.writeMem(0xc68e, { 0x13 });
        gbc.writeMem(0xe244, { 0xb6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3363, gbc.sp());
        EXPECT(0xe245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc68e));
        EXPECT(0xb6, gbc.readMem(0xe244));
        // B6 004D
        gbc.setState(0x16c8, 0x4ce5, 0x5a10, 0xd223, 0xc141, 0x89ce, 0x1, 0x1);
        gbc.writeMem(0x16c8, { 0xb6 });
        gbc.writeMem(0x89ce, { 0xc7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4ce5, gbc.sp());
        EXPECT(0x16c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x89ce));
        // B6 004E
        gbc.setState(0xdf32, 0x89b2, 0x2200, 0x1ef8, 0xb59c, 0x2e95, 0x1, 0x1);
        gbc.writeMem(0x2e95, { 0xbd });
        gbc.writeMem(0xdf32, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x89b2, gbc.sp());
        EXPECT(0xdf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdf32));
        // B6 004F
        gbc.setState(0x6627, 0x2f45, 0x1bc0, 0xef, 0x97d8, 0x94, 0x0, 0x0);
        gbc.writeMem(0x94, { 0xe7 });
        gbc.writeMem(0x6627, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2f45, gbc.sp());
        EXPECT(0x6628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0050
        gbc.setState(0x670, 0x3b65, 0xcf20, 0x8654, 0x3b7c, 0x1074, 0x1, 0x1);
        gbc.writeMem(0x670, { 0xb6 });
        gbc.writeMem(0x1074, { 0x2b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3b65, gbc.sp());
        EXPECT(0x671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0052
        gbc.setState(0x5a7e, 0x288b, 0x7420, 0xcbd4, 0x25d8, 0x1e39, 0x0, 0x0);
        gbc.writeMem(0x1e39, { 0xd4 });
        gbc.writeMem(0x5a7e, { 0xb6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x288b, gbc.sp());
        EXPECT(0x5a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0053
        gbc.setState(0x8aa3, 0xb52c, 0x6540, 0xac48, 0xd158, 0x9f5d, 0x0, 0x0);
        gbc.writeMem(0x8aa3, { 0xb6 });
        gbc.writeMem(0x9f5d, { 0x30 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb52c, gbc.sp());
        EXPECT(0x8aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8aa3));
        EXPECT(0x30, gbc.readMem(0x9f5d));
        // B6 0054
        gbc.setState(0x73eb, 0xda36, 0xc520, 0xb094, 0x73b8, 0x6265, 0x1, 0x0);
        gbc.writeMem(0x6265, { 0xe8 });
        gbc.writeMem(0x73eb, { 0xb6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xda36, gbc.sp());
        EXPECT(0x73ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0055
        gbc.setState(0xd067, 0xd9a2, 0x990, 0xfc0b, 0x99c5, 0xa69d, 0x1, 0x1);
        gbc.writeMem(0xa69d, { 0x51 });
        gbc.writeMem(0xd067, { 0xb6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd9a2, gbc.sp());
        EXPECT(0xd068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xa69d));
        EXPECT(0xb6, gbc.readMem(0xd067));
        // B6 0056
        gbc.setState(0x62cf, 0x921b, 0x7a50, 0x458c, 0xe30, 0x92db, 0x0, 0x1);
        gbc.writeMem(0x62cf, { 0xb6 });
        gbc.writeMem(0x92db, { 0x48 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x921b, gbc.sp());
        EXPECT(0x62d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x92db));
        // B6 0057
        gbc.setState(0x413b, 0x9dbf, 0xf70, 0x1009, 0x99e4, 0xea63, 0x0, 0x1);
        gbc.writeMem(0x413b, { 0xb6 });
        gbc.writeMem(0xea63, { 0x80 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9dbf, gbc.sp());
        EXPECT(0x413c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xea63));
        // B6 0058
        gbc.setState(0x8d88, 0xfb9e, 0xd740, 0x9c06, 0x541, 0x1228, 0x1, 0x0);
        gbc.writeMem(0x1228, { 0xa1 });
        gbc.writeMem(0x8d88, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfb9e, gbc.sp());
        EXPECT(0x8d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8d88));
        // B6 0059
        gbc.setState(0x9f64, 0xce97, 0xf760, 0xf7af, 0xc1e5, 0x40bd, 0x0, 0x1);
        gbc.writeMem(0x40bd, { 0xe1 });
        gbc.writeMem(0x9f64, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xce97, gbc.sp());
        EXPECT(0x9f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9f64));
        // B6 005A
        gbc.setState(0x68e1, 0xc59d, 0xc70, 0x6d7a, 0xbd90, 0x4772, 0x0, 0x0);
        gbc.writeMem(0x4772, { 0x9e });
        gbc.writeMem(0x68e1, { 0xb6 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc59d, gbc.sp());
        EXPECT(0x68e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 005B
        gbc.setState(0xb90b, 0x238, 0x290, 0xf96e, 0xd926, 0xdc9d, 0x1, 0x0);
        gbc.writeMem(0xb90b, { 0xb6 });
        gbc.writeMem(0xdc9d, { 0xfd });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x238, gbc.sp());
        EXPECT(0xb90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb90b));
        EXPECT(0xfd, gbc.readMem(0xdc9d));
        // B6 005C
        gbc.setState(0x124b, 0x99cf, 0xdc60, 0x6f8a, 0x7de, 0xb22e, 0x1, 0x1);
        gbc.writeMem(0x124b, { 0xb6 });
        gbc.writeMem(0xb22e, { 0x27 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x99cf, gbc.sp());
        EXPECT(0x124c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb22e));
        // B6 005D
        gbc.setState(0xa575, 0x7c0e, 0xe340, 0x5493, 0xd79b, 0xb853, 0x0, 0x0);
        gbc.writeMem(0xa575, { 0xb6 });
        gbc.writeMem(0xb853, { 0xa6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7c0e, gbc.sp());
        EXPECT(0xa576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa575));
        EXPECT(0xa6, gbc.readMem(0xb853));
        // B6 005E
        gbc.setState(0xee3b, 0x1da7, 0xd100, 0x90b0, 0xe62a, 0x1faa, 0x0, 0x1);
        gbc.writeMem(0x1faa, { 0x3c });
        gbc.writeMem(0xee3b, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1da7, gbc.sp());
        EXPECT(0xee3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xee3b));
        // B6 005F
        gbc.setState(0x8292, 0x989b, 0xf740, 0x4f63, 0xe2bb, 0xa78d, 0x1, 0x1);
        gbc.writeMem(0x8292, { 0xb6 });
        gbc.writeMem(0xa78d, { 0x70 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x989b, gbc.sp());
        EXPECT(0x8293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8292));
        EXPECT(0x70, gbc.readMem(0xa78d));
        // B6 0060
        gbc.setState(0xb410, 0xef0a, 0x93d0, 0xdcd, 0x4003, 0xd4b6, 0x0, 0x0);
        gbc.writeMem(0xb410, { 0xb6 });
        gbc.writeMem(0xd4b6, { 0x77 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xef0a, gbc.sp());
        EXPECT(0xb411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb410));
        EXPECT(0x77, gbc.readMem(0xd4b6));
        // B6 0061
        gbc.setState(0xbda3, 0x1b38, 0xd130, 0x4ea4, 0x70b1, 0xdba3, 0x0, 0x0);
        gbc.writeMem(0xbda3, { 0xb6 });
        gbc.writeMem(0xdba3, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1b38, gbc.sp());
        EXPECT(0xbda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xbda3));
        EXPECT(0xdf, gbc.readMem(0xdba3));
        // B6 0062
        gbc.setState(0x29ab, 0x2622, 0xd900, 0xd0df, 0x38c7, 0x82eb, 0x1, 0x1);
        gbc.writeMem(0x29ab, { 0xb6 });
        gbc.writeMem(0x82eb, { 0xf6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2622, gbc.sp());
        EXPECT(0x29ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x82eb));
        // B6 0063
        gbc.setState(0xe5ac, 0xba7b, 0xeae0, 0x6e87, 0x1422, 0xe0b1, 0x1, 0x1);
        gbc.writeMem(0xe0b1, { 0xe4 });
        gbc.writeMem(0xe5ac, { 0xb6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xba7b, gbc.sp());
        EXPECT(0xe5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xe0b1));
        EXPECT(0xb6, gbc.readMem(0xe5ac));
        // B6 0064
        gbc.setState(0x66a, 0x8d93, 0x6850, 0x4150, 0x5372, 0x1100, 0x1, 0x0);
        gbc.writeMem(0x66a, { 0xb6 });
        gbc.writeMem(0x1100, { 0xf1 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8d93, gbc.sp());
        EXPECT(0x66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0065
        gbc.setState(0xca59, 0xb6bd, 0x4710, 0x17b7, 0x8afc, 0xa0f3, 0x0, 0x0);
        gbc.writeMem(0xa0f3, { 0xd8 });
        gbc.writeMem(0xca59, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb6bd, gbc.sp());
        EXPECT(0xca5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xa0f3));
        EXPECT(0xb6, gbc.readMem(0xca59));
        // B6 0066
        gbc.setState(0xb207, 0x754f, 0xe80, 0x5e14, 0x4edf, 0xb7f1, 0x0, 0x0);
        gbc.writeMem(0xb207, { 0xb6 });
        gbc.writeMem(0xb7f1, { 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x754f, gbc.sp());
        EXPECT(0xb208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb207));
        EXPECT(0x6e, gbc.readMem(0xb7f1));
        // B6 0067
        gbc.setState(0x2a29, 0xdbfe, 0xea90, 0xcb1, 0xac88, 0xd01e, 0x0, 0x1);
        gbc.writeMem(0x2a29, { 0xb6 });
        gbc.writeMem(0xd01e, { 0x2d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdbfe, gbc.sp());
        EXPECT(0x2a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd01e));
        // B6 0068
        gbc.setState(0x504c, 0x4135, 0xc020, 0x6c1d, 0x3272, 0xf902, 0x1, 0x1);
        gbc.writeMem(0x504c, { 0xb6 });
        gbc.writeMem(0xf902, { 0x8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4135, gbc.sp());
        EXPECT(0x504d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xf902));
        // B6 0069
        gbc.setState(0x3941, 0x3e0e, 0x4160, 0xe1e2, 0x16b6, 0xd657, 0x1, 0x0);
        gbc.writeMem(0x3941, { 0xb6 });
        gbc.writeMem(0xd657, { 0x96 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3e0e, gbc.sp());
        EXPECT(0x3942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xd657));
        // B6 006A
        gbc.setState(0x283c, 0x2563, 0xcde0, 0xb1f2, 0xd938, 0x25a6, 0x0, 0x0);
        gbc.writeMem(0x25a6, { 0x37 });
        gbc.writeMem(0x283c, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2563, gbc.sp());
        EXPECT(0x283d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 006B
        gbc.setState(0x789f, 0xf7d7, 0x5b20, 0x1f9a, 0x4f0b, 0x437, 0x0, 0x1);
        gbc.writeMem(0x437, { 0x5a });
        gbc.writeMem(0x789f, { 0xb6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf7d7, gbc.sp());
        EXPECT(0x78a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 006C
        gbc.setState(0xd276, 0x76f0, 0x3e10, 0xd686, 0x456e, 0x6342, 0x1, 0x1);
        gbc.writeMem(0x6342, { 0xf0 });
        gbc.writeMem(0xd276, { 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x76f0, gbc.sp());
        EXPECT(0xd277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd276));
        // B6 006D
        gbc.setState(0x6196, 0xde1, 0xd6a0, 0xbc9f, 0x5063, 0x7744, 0x0, 0x0);
        gbc.writeMem(0x6196, { 0xb6 });
        gbc.writeMem(0x7744, { 0x11 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xde1, gbc.sp());
        EXPECT(0x6197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 006E
        gbc.setState(0xa2ef, 0xd977, 0x1650, 0x3ca1, 0x5953, 0xa310, 0x1, 0x1);
        gbc.writeMem(0xa2ef, { 0xb6 });
        gbc.writeMem(0xa310, { 0xda });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd977, gbc.sp());
        EXPECT(0xa2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa2ef));
        EXPECT(0xda, gbc.readMem(0xa310));
        // B6 006F
        gbc.setState(0x70a6, 0x7c86, 0xf070, 0xa47c, 0x9f41, 0xa28c, 0x0, 0x1);
        gbc.writeMem(0x70a6, { 0xb6 });
        gbc.writeMem(0xa28c, { 0x76 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7c86, gbc.sp());
        EXPECT(0x70a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa28c));
        // B6 0071
        gbc.setState(0x6ede, 0x9ac0, 0xfc90, 0x3e03, 0x32a2, 0x680d, 0x0, 0x0);
        gbc.writeMem(0x680d, { 0x8c });
        gbc.writeMem(0x6ede, { 0xb6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9ac0, gbc.sp());
        EXPECT(0x6edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0072
        gbc.setState(0x584e, 0xa146, 0xea40, 0xf101, 0xf14, 0x66d4, 0x1, 0x1);
        gbc.writeMem(0x584e, { 0xb6 });
        gbc.writeMem(0x66d4, { 0xae });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa146, gbc.sp());
        EXPECT(0x584f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0073
        gbc.setState(0xb939, 0x560f, 0x6040, 0xf312, 0xff2a, 0xdafb, 0x0, 0x0);
        gbc.writeMem(0xb939, { 0xb6 });
        gbc.writeMem(0xdafb, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x560f, gbc.sp());
        EXPECT(0xb93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb939));
        EXPECT(0x71, gbc.readMem(0xdafb));
        // B6 0074
        gbc.setState(0xea31, 0x2e2c, 0x30, 0xd325, 0x36a2, 0x60a, 0x0, 0x1);
        gbc.writeMem(0x60a, { 0xf0 });
        gbc.writeMem(0xea31, { 0xb6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2e2c, gbc.sp());
        EXPECT(0xea32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xea31));
        // B6 0075
        gbc.setState(0x88b5, 0x2f60, 0xb0d0, 0x4908, 0x4ca3, 0xe8ee, 0x0, 0x0);
        gbc.writeMem(0x88b5, { 0xb6 });
        gbc.writeMem(0xe8ee, { 0xe9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2f60, gbc.sp());
        EXPECT(0x88b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x88b5));
        EXPECT(0xe9, gbc.readMem(0xe8ee));
        // B6 0076
        gbc.setState(0xbf1c, 0x59b7, 0xa580, 0x5590, 0x9088, 0xb408, 0x0, 0x1);
        gbc.writeMem(0xb408, { 0x85 });
        gbc.writeMem(0xbf1c, { 0xb6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x59b7, gbc.sp());
        EXPECT(0xbf1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb408));
        EXPECT(0xb6, gbc.readMem(0xbf1c));
        // B6 0077
        gbc.setState(0xda33, 0x9389, 0x95d0, 0x6d44, 0xa1b5, 0x6d4e, 0x0, 0x0);
        gbc.writeMem(0x6d4e, { 0x86 });
        gbc.writeMem(0xda33, { 0xb6 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9389, gbc.sp());
        EXPECT(0xda34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xda33));
        // B6 0078
        gbc.setState(0x8e4b, 0x9a6b, 0xa880, 0x9042, 0x274f, 0x18e4, 0x1, 0x0);
        gbc.writeMem(0x18e4, { 0x29 });
        gbc.writeMem(0x8e4b, { 0xb6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9a6b, gbc.sp());
        EXPECT(0x8e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8e4b));
        // B6 0079
        gbc.setState(0xa96c, 0x6d3e, 0x70, 0x49a, 0x1af5, 0x64dc, 0x0, 0x1);
        gbc.writeMem(0x64dc, { 0xdf });
        gbc.writeMem(0xa96c, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6d3e, gbc.sp());
        EXPECT(0xa96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa96c));
        // B6 007A
        gbc.setState(0xe4e4, 0x2f60, 0x6430, 0x7e4c, 0x2738, 0xf0b5, 0x0, 0x1);
        gbc.writeMem(0xe4e4, { 0xb6 });
        gbc.writeMem(0xf0b5, { 0xc7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2f60, gbc.sp());
        EXPECT(0xe4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe4e4));
        EXPECT(0xc7, gbc.readMem(0xf0b5));
        // B6 007B
        gbc.setState(0xb4be, 0xd2a6, 0xc6f0, 0x298d, 0x2bed, 0x1083, 0x1, 0x0);
        gbc.writeMem(0x1083, { 0xcf });
        gbc.writeMem(0xb4be, { 0xb6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd2a6, gbc.sp());
        EXPECT(0xb4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb4be));
        // B6 007C
        gbc.setState(0x355b, 0x7da8, 0xdf40, 0x939a, 0xec18, 0x27a6, 0x1, 0x0);
        gbc.writeMem(0x27a6, { 0x53 });
        gbc.writeMem(0x355b, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7da8, gbc.sp());
        EXPECT(0x355c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 007D
        gbc.setState(0x7194, 0x8840, 0xf350, 0xcae5, 0xf0cf, 0xc495, 0x0, 0x1);
        gbc.writeMem(0x7194, { 0xb6 });
        gbc.writeMem(0xc495, { 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8840, gbc.sp());
        EXPECT(0x7195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xc495));
        // B6 007E
        gbc.setState(0x6c15, 0xfbe9, 0xd530, 0xe3ff, 0x48b4, 0x9329, 0x1, 0x0);
        gbc.writeMem(0x6c15, { 0xb6 });
        gbc.writeMem(0x9329, { 0x9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfbe9, gbc.sp());
        EXPECT(0x6c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0x9329));
        // B6 007F
        gbc.setState(0xd02a, 0x9c18, 0xa410, 0x1331, 0xbe05, 0xa731, 0x1, 0x0);
        gbc.writeMem(0xa731, { 0x33 });
        gbc.writeMem(0xd02a, { 0xb6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9c18, gbc.sp());
        EXPECT(0xd02b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa731));
        EXPECT(0xb6, gbc.readMem(0xd02a));
        // B6 0080
        gbc.setState(0xc104, 0x250e, 0xcd80, 0x5190, 0x4e3c, 0xe283, 0x0, 0x0);
        gbc.writeMem(0xc104, { 0xb6 });
        gbc.writeMem(0xe283, { 0x55 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x250e, gbc.sp());
        EXPECT(0xc105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc104));
        EXPECT(0x55, gbc.readMem(0xe283));
        // B6 0081
        gbc.setState(0x4485, 0x2afa, 0x2230, 0xf6b, 0x9532, 0x48aa, 0x1, 0x0);
        gbc.writeMem(0x4485, { 0xb6 });
        gbc.writeMem(0x48aa, { 0x49 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2afa, gbc.sp());
        EXPECT(0x4486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0083
        gbc.setState(0x6ddd, 0xc31f, 0x1f60, 0xdcd6, 0x10eb, 0xea92, 0x1, 0x1);
        gbc.writeMem(0x6ddd, { 0xb6 });
        gbc.writeMem(0xea92, { 0xdb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc31f, gbc.sp());
        EXPECT(0x6dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xea92));
        // B6 0084
        gbc.setState(0xb43, 0x4ea3, 0x1cc0, 0x2974, 0xab9e, 0x7a24, 0x0, 0x0);
        gbc.writeMem(0xb43, { 0xb6 });
        gbc.writeMem(0x7a24, { 0x8c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4ea3, gbc.sp());
        EXPECT(0xb44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0085
        gbc.setState(0x8080, 0xdb6c, 0x19d0, 0x2b0c, 0x6f12, 0x4e4, 0x1, 0x1);
        gbc.writeMem(0x4e4, { 0x69 });
        gbc.writeMem(0x8080, { 0xb6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdb6c, gbc.sp());
        EXPECT(0x8081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8080));
        // B6 0086
        gbc.setState(0x5203, 0xe7a7, 0x4e10, 0xb811, 0x8ba0, 0xa23e, 0x1, 0x1);
        gbc.writeMem(0x5203, { 0xb6 });
        gbc.writeMem(0xa23e, { 0x62 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe7a7, gbc.sp());
        EXPECT(0x5204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xa23e));
        // B6 0087
        gbc.setState(0xe980, 0xcba9, 0x8560, 0xb238, 0x45ba, 0xcfbe, 0x0, 0x1);
        gbc.writeMem(0xcfbe, { 0x4f });
        gbc.writeMem(0xe980, { 0xb6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcba9, gbc.sp());
        EXPECT(0xe981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xcfbe));
        EXPECT(0xb6, gbc.readMem(0xe980));
        // B6 0088
        gbc.setState(0x21f5, 0x1ab5, 0xd420, 0x6175, 0x1af2, 0x96cd, 0x0, 0x0);
        gbc.writeMem(0x21f5, { 0xb6 });
        gbc.writeMem(0x96cd, { 0x78 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1ab5, gbc.sp());
        EXPECT(0x21f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0x96cd));
        // B6 0089
        gbc.setState(0xc12d, 0x68f5, 0x4b70, 0x1ab9, 0x287f, 0x5a48, 0x0, 0x0);
        gbc.writeMem(0x5a48, { 0x1d });
        gbc.writeMem(0xc12d, { 0xb6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x68f5, gbc.sp());
        EXPECT(0xc12e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc12d));
        // B6 008B
        gbc.setState(0x7d29, 0xe164, 0x9280, 0xbadb, 0xc9c9, 0xf16f, 0x1, 0x0);
        gbc.writeMem(0x7d29, { 0xb6 });
        gbc.writeMem(0xf16f, { 0x15 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe164, gbc.sp());
        EXPECT(0x7d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xf16f));
        // B6 008C
        gbc.setState(0xebc4, 0xe0be, 0x6dc0, 0x51d3, 0xe13e, 0xa17a, 0x1, 0x0);
        gbc.writeMem(0xa17a, { 0x86 });
        gbc.writeMem(0xebc4, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe0be, gbc.sp());
        EXPECT(0xebc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa17a));
        EXPECT(0xb6, gbc.readMem(0xebc4));
        // B6 008D
        gbc.setState(0x4e8e, 0x4bed, 0x5820, 0x9e61, 0x593e, 0xa551, 0x1, 0x0);
        gbc.writeMem(0x4e8e, { 0xb6 });
        gbc.writeMem(0xa551, { 0x15 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4bed, gbc.sp());
        EXPECT(0x4e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa551));
        // B6 008E
        gbc.setState(0x8a2a, 0x4256, 0x97e0, 0x5c43, 0x4452, 0x5ceb, 0x1, 0x0);
        gbc.writeMem(0x5ceb, { 0x7b });
        gbc.writeMem(0x8a2a, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4256, gbc.sp());
        EXPECT(0x8a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8a2a));
        // B6 0090
        gbc.setState(0x4c6b, 0x6a0b, 0x4de0, 0xa519, 0x6a83, 0x9469, 0x0, 0x1);
        gbc.writeMem(0x4c6b, { 0xb6 });
        gbc.writeMem(0x9469, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6a0b, gbc.sp());
        EXPECT(0x4c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9469));
        // B6 0092
        gbc.setState(0x1c30, 0x67c3, 0xb020, 0x6d71, 0xe36c, 0x9c31, 0x0, 0x1);
        gbc.writeMem(0x1c30, { 0xb6 });
        gbc.writeMem(0x9c31, { 0x89 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x67c3, gbc.sp());
        EXPECT(0x1c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9c31));
        // B6 0093
        gbc.setState(0x3409, 0x92cd, 0xa640, 0xeb1e, 0x44ad, 0x8062, 0x1, 0x0);
        gbc.writeMem(0x3409, { 0xb6 });
        gbc.writeMem(0x8062, { 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x92cd, gbc.sp());
        EXPECT(0x340a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8062));
        // B6 0094
        gbc.setState(0x49f1, 0x5884, 0x45f0, 0x8c60, 0x2a72, 0x3833, 0x0, 0x1);
        gbc.writeMem(0x3833, { 0xf });
        gbc.writeMem(0x49f1, { 0xb6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5884, gbc.sp());
        EXPECT(0x49f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0095
        gbc.setState(0x1b35, 0xa121, 0xb770, 0xcb87, 0x946d, 0x3193, 0x0, 0x1);
        gbc.writeMem(0x1b35, { 0xb6 });
        gbc.writeMem(0x3193, { 0x86 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa121, gbc.sp());
        EXPECT(0x1b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0096
        gbc.setState(0xc234, 0x4e79, 0x4f20, 0x155c, 0x1fba, 0xc5c0, 0x1, 0x0);
        gbc.writeMem(0xc234, { 0xb6 });
        gbc.writeMem(0xc5c0, { 0x4b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4e79, gbc.sp());
        EXPECT(0xc235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc234));
        EXPECT(0x4b, gbc.readMem(0xc5c0));
        // B6 0097
        gbc.setState(0x10a1, 0x7f6d, 0x48d0, 0xc372, 0x21b9, 0xc1ed, 0x0, 0x0);
        gbc.writeMem(0x10a1, { 0xb6 });
        gbc.writeMem(0xc1ed, { 0xc5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7f6d, gbc.sp());
        EXPECT(0x10a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xc1ed));
        // B6 0098
        gbc.setState(0x2bad, 0xc6ff, 0x6270, 0xa12, 0x3107, 0xc867, 0x0, 0x1);
        gbc.writeMem(0x2bad, { 0xb6 });
        gbc.writeMem(0xc867, { 0x37 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc6ff, gbc.sp());
        EXPECT(0x2bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc867));
        // B6 0099
        gbc.setState(0x593e, 0xcb85, 0xa40, 0xc019, 0xa82c, 0xcb90, 0x0, 0x0);
        gbc.writeMem(0x593e, { 0xb6 });
        gbc.writeMem(0xcb90, { 0x29 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcb85, gbc.sp());
        EXPECT(0x593f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xcb90));
        // B6 009A
        gbc.setState(0x3e6f, 0x8b9b, 0x5120, 0x383, 0x5c99, 0x2246, 0x1, 0x0);
        gbc.writeMem(0x2246, { 0x40 });
        gbc.writeMem(0x3e6f, { 0xb6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8b9b, gbc.sp());
        EXPECT(0x3e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 009B
        gbc.setState(0xe42d, 0x9b71, 0x2ca0, 0x7e05, 0x5c1e, 0xf417, 0x1, 0x1);
        gbc.writeMem(0xe42d, { 0xb6 });
        gbc.writeMem(0xf417, { 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9b71, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe42d));
        EXPECT(0x6e, gbc.readMem(0xf417));
        // B6 009C
        gbc.setState(0x30f0, 0x7bd0, 0xea70, 0x8a2, 0xbe88, 0xdfe6, 0x0, 0x0);
        gbc.writeMem(0x30f0, { 0xb6 });
        gbc.writeMem(0xdfe6, { 0x5f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7bd0, gbc.sp());
        EXPECT(0x30f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xdfe6));
        // B6 009D
        gbc.setState(0x2e8a, 0xed13, 0x5a30, 0x27ff, 0x87e1, 0x9e3f, 0x1, 0x1);
        gbc.writeMem(0x2e8a, { 0xb6 });
        gbc.writeMem(0x9e3f, { 0x56 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xed13, gbc.sp());
        EXPECT(0x2e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9e3f));
        // B6 009E
        gbc.setState(0xdcc0, 0x2d6c, 0x6d00, 0x2181, 0xda91, 0x83dd, 0x1, 0x1);
        gbc.writeMem(0x83dd, { 0xcf });
        gbc.writeMem(0xdcc0, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2d6c, gbc.sp());
        EXPECT(0xdcc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x83dd));
        EXPECT(0xb6, gbc.readMem(0xdcc0));
        // B6 009F
        gbc.setState(0x8b8b, 0xd0c5, 0x1ec0, 0x36c0, 0x6823, 0xa460, 0x0, 0x1);
        gbc.writeMem(0x8b8b, { 0xb6 });
        gbc.writeMem(0xa460, { 0xb1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd0c5, gbc.sp());
        EXPECT(0x8b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8b8b));
        EXPECT(0xb1, gbc.readMem(0xa460));
        // B6 00A0
        gbc.setState(0xc283, 0x35db, 0x4fb0, 0xc4f4, 0x760e, 0xa088, 0x0, 0x1);
        gbc.writeMem(0xa088, { 0xd9 });
        gbc.writeMem(0xc283, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x35db, gbc.sp());
        EXPECT(0xc284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa088));
        EXPECT(0xb6, gbc.readMem(0xc283));
        // B6 00A1
        gbc.setState(0xa867, 0xb43, 0x5a50, 0x77e4, 0xb606, 0x20e0, 0x1, 0x1);
        gbc.writeMem(0x20e0, { 0x80 });
        gbc.writeMem(0xa867, { 0xb6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb43, gbc.sp());
        EXPECT(0xa868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa867));
        // B6 00A2
        gbc.setState(0x1bfd, 0x77b7, 0x700, 0x814, 0xf16b, 0xd705, 0x0, 0x0);
        gbc.writeMem(0x1bfd, { 0xb6 });
        gbc.writeMem(0xd705, { 0xf1 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x77b7, gbc.sp());
        EXPECT(0x1bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd705));
        // B6 00A3
        gbc.setState(0xae1d, 0xd457, 0x2970, 0x2695, 0x9106, 0x3a2a, 0x0, 0x1);
        gbc.writeMem(0x3a2a, { 0xb3 });
        gbc.writeMem(0xae1d, { 0xb6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd457, gbc.sp());
        EXPECT(0xae1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xae1d));
        // B6 00A4
        gbc.setState(0x433, 0x2ac5, 0xe800, 0x2c83, 0x9a07, 0x361d, 0x0, 0x1);
        gbc.writeMem(0x433, { 0xb6 });
        gbc.writeMem(0x361d, { 0x6b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2ac5, gbc.sp());
        EXPECT(0x434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00A5
        gbc.setState(0x716b, 0x3b24, 0xae60, 0x15eb, 0x633e, 0xac13, 0x1, 0x1);
        gbc.writeMem(0x716b, { 0xb6 });
        gbc.writeMem(0xac13, { 0x16 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3b24, gbc.sp());
        EXPECT(0x716c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xac13));
        // B6 00A6
        gbc.setState(0x30de, 0xeef4, 0x4420, 0x9452, 0x6163, 0x34a6, 0x0, 0x1);
        gbc.writeMem(0x30de, { 0xb6 });
        gbc.writeMem(0x34a6, { 0x8f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xeef4, gbc.sp());
        EXPECT(0x30df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00A7
        gbc.setState(0xc0af, 0xb890, 0x1970, 0x90e3, 0x65ed, 0xf657, 0x1, 0x0);
        gbc.writeMem(0xc0af, { 0xb6 });
        gbc.writeMem(0xf657, { 0x70 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb890, gbc.sp());
        EXPECT(0xc0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc0af));
        EXPECT(0x70, gbc.readMem(0xf657));
        // B6 00A8
        gbc.setState(0x2388, 0xa14a, 0xe210, 0x82d3, 0xfe8d, 0xf4e6, 0x0, 0x0);
        gbc.writeMem(0x2388, { 0xb6 });
        gbc.writeMem(0xf4e6, { 0x75 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa14a, gbc.sp());
        EXPECT(0x2389, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xf4e6));
        // B6 00A9
        gbc.setState(0x4207, 0x7116, 0x9ba0, 0x13e7, 0xa0ea, 0xbb09, 0x0, 0x1);
        gbc.writeMem(0x4207, { 0xb6 });
        gbc.writeMem(0xbb09, { 0x89 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7116, gbc.sp());
        EXPECT(0x4208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbb09));
        // B6 00AA
        gbc.setState(0x1cf4, 0x2215, 0xa820, 0x56c4, 0x4ded, 0x7f4b, 0x1, 0x0);
        gbc.writeMem(0x1cf4, { 0xb6 });
        gbc.writeMem(0x7f4b, { 0x53 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2215, gbc.sp());
        EXPECT(0x1cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00AB
        gbc.setState(0xa036, 0xcac, 0x3490, 0x6809, 0x61f9, 0x1078, 0x1, 0x1);
        gbc.writeMem(0x1078, { 0x0 });
        gbc.writeMem(0xa036, { 0xb6 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcac, gbc.sp());
        EXPECT(0xa037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa036));
        // B6 00AC
        gbc.setState(0x622, 0xc82f, 0xba80, 0x3954, 0xa8b0, 0x269a, 0x0, 0x0);
        gbc.writeMem(0x622, { 0xb6 });
        gbc.writeMem(0x269a, { 0xae });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc82f, gbc.sp());
        EXPECT(0x623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00AD
        gbc.setState(0xb4da, 0xd001, 0x5210, 0xd9e9, 0xb40b, 0xc86c, 0x1, 0x1);
        gbc.writeMem(0xb4da, { 0xb6 });
        gbc.writeMem(0xc86c, { 0xc1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd001, gbc.sp());
        EXPECT(0xb4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb4da));
        EXPECT(0xc1, gbc.readMem(0xc86c));
        // B6 00AE
        gbc.setState(0x7673, 0xaa59, 0x5d00, 0x1c84, 0x5e73, 0x9c3, 0x0, 0x1);
        gbc.writeMem(0x9c3, { 0xf2 });
        gbc.writeMem(0x7673, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xaa59, gbc.sp());
        EXPECT(0x7674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00AF
        gbc.setState(0x8060, 0x76e4, 0xad50, 0x42b9, 0x75a1, 0x86a8, 0x1, 0x0);
        gbc.writeMem(0x8060, { 0xb6 });
        gbc.writeMem(0x86a8, { 0x2f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x76e4, gbc.sp());
        EXPECT(0x8061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8060));
        EXPECT(0x2f, gbc.readMem(0x86a8));
        // B6 00B0
        gbc.setState(0x36ed, 0xa005, 0x6be0, 0xb1bf, 0xaf6c, 0x9809, 0x0, 0x1);
        gbc.writeMem(0x36ed, { 0xb6 });
        gbc.writeMem(0x9809, { 0x4f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa005, gbc.sp());
        EXPECT(0x36ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0x9809));
        // B6 00B1
        gbc.setState(0x6ea5, 0xabe8, 0x4f20, 0x4076, 0x644c, 0x5386, 0x0, 0x0);
        gbc.writeMem(0x5386, { 0x13 });
        gbc.writeMem(0x6ea5, { 0xb6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xabe8, gbc.sp());
        EXPECT(0x6ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00B2
        gbc.setState(0x4096, 0x637b, 0xf5b0, 0xca97, 0x28e0, 0x7cb7, 0x1, 0x0);
        gbc.writeMem(0x4096, { 0xb6 });
        gbc.writeMem(0x7cb7, { 0x28 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x637b, gbc.sp());
        EXPECT(0x4097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00B3
        gbc.setState(0xc752, 0xd603, 0x7440, 0x2b47, 0xf3a6, 0xb0e9, 0x1, 0x1);
        gbc.writeMem(0xb0e9, { 0xc8 });
        gbc.writeMem(0xc752, { 0xb6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd603, gbc.sp());
        EXPECT(0xc753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb0e9));
        EXPECT(0xb6, gbc.readMem(0xc752));
        // B6 00B4
        gbc.setState(0x3117, 0x53b9, 0x9ef0, 0x320e, 0x4027, 0x7d94, 0x1, 0x0);
        gbc.writeMem(0x3117, { 0xb6 });
        gbc.writeMem(0x7d94, { 0x12 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x53b9, gbc.sp());
        EXPECT(0x3118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00B5
        gbc.setState(0xd999, 0xf912, 0xccc0, 0x3100, 0xe72d, 0x8199, 0x1, 0x0);
        gbc.writeMem(0x8199, { 0xc8 });
        gbc.writeMem(0xd999, { 0xb6 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf912, gbc.sp());
        EXPECT(0xd99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8199));
        EXPECT(0xb6, gbc.readMem(0xd999));
        // B6 00B6
        gbc.setState(0x4069, 0xf14, 0x5820, 0x1f14, 0x1e51, 0x2220, 0x0, 0x1);
        gbc.writeMem(0x2220, { 0xa3 });
        gbc.writeMem(0x4069, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf14, gbc.sp());
        EXPECT(0x406a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00B7
        gbc.setState(0xbea5, 0x27f8, 0xc370, 0xff03, 0x5fd3, 0x3389, 0x1, 0x1);
        gbc.writeMem(0x3389, { 0xb8 });
        gbc.writeMem(0xbea5, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x27f8, gbc.sp());
        EXPECT(0xbea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xbea5));
        // B6 00B8
        gbc.setState(0xed2b, 0xb51f, 0x1d80, 0x5cb6, 0xd719, 0x8105, 0x1, 0x1);
        gbc.writeMem(0x8105, { 0xe4 });
        gbc.writeMem(0xed2b, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb51f, gbc.sp());
        EXPECT(0xed2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x8105));
        EXPECT(0xb6, gbc.readMem(0xed2b));
        // B6 00B9
        gbc.setState(0x7dbf, 0x69aa, 0x8730, 0x80c9, 0xcef6, 0x96a4, 0x1, 0x1);
        gbc.writeMem(0x7dbf, { 0xb6 });
        gbc.writeMem(0x96a4, { 0xd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x69aa, gbc.sp());
        EXPECT(0x7dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x96a4));
        // B6 00BA
        gbc.setState(0xca92, 0xdc35, 0x9720, 0xede3, 0x14b7, 0x678a, 0x1, 0x1);
        gbc.writeMem(0x678a, { 0x78 });
        gbc.writeMem(0xca92, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdc35, gbc.sp());
        EXPECT(0xca93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xca92));
        // B6 00BB
        gbc.setState(0x77c4, 0x4edb, 0x1a90, 0x556c, 0x39ef, 0xbd7f, 0x0, 0x0);
        gbc.writeMem(0x77c4, { 0xb6 });
        gbc.writeMem(0xbd7f, { 0xc5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4edb, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbd7f));
        // B6 00BC
        gbc.setState(0xdc08, 0xa570, 0xf050, 0x46a5, 0x4f29, 0x1cef, 0x1, 0x1);
        gbc.writeMem(0x1cef, { 0x68 });
        gbc.writeMem(0xdc08, { 0xb6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa570, gbc.sp());
        EXPECT(0xdc09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdc08));
        // B6 00BD
        gbc.setState(0x4c74, 0x11d7, 0xb680, 0x3576, 0x7d47, 0x2312, 0x1, 0x1);
        gbc.writeMem(0x2312, { 0x82 });
        gbc.writeMem(0x4c74, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x11d7, gbc.sp());
        EXPECT(0x4c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00BE
        gbc.setState(0x3a15, 0x568, 0xe80, 0x2ce2, 0xc61c, 0x91e9, 0x0, 0x0);
        gbc.writeMem(0x3a15, { 0xb6 });
        gbc.writeMem(0x91e9, { 0xf0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x568, gbc.sp());
        EXPECT(0x3a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x91e9));
        // B6 00BF
        gbc.setState(0x9d2d, 0xe67e, 0x2770, 0xd0bd, 0x868d, 0x8fd9, 0x0, 0x0);
        gbc.writeMem(0x8fd9, { 0x8b });
        gbc.writeMem(0x9d2d, { 0xb6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe67e, gbc.sp());
        EXPECT(0x9d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8fd9));
        EXPECT(0xb6, gbc.readMem(0x9d2d));
        // B6 00C0
        gbc.setState(0x76e8, 0x3975, 0xcd00, 0x7e8b, 0x4bdd, 0x7a2e, 0x0, 0x1);
        gbc.writeMem(0x76e8, { 0xb6 });
        gbc.writeMem(0x7a2e, { 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3975, gbc.sp());
        EXPECT(0x76e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00C1
        gbc.setState(0x75ee, 0xa2df, 0xe160, 0xbdd1, 0x811, 0xd039, 0x1, 0x0);
        gbc.writeMem(0x75ee, { 0xb6 });
        gbc.writeMem(0xd039, { 0x3e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa2df, gbc.sp());
        EXPECT(0x75ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xd039));
        // B6 00C2
        gbc.setState(0x12ed, 0xf629, 0xae60, 0x7558, 0xdd47, 0x35b9, 0x1, 0x0);
        gbc.writeMem(0x12ed, { 0xb6 });
        gbc.writeMem(0x35b9, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf629, gbc.sp());
        EXPECT(0x12ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00C3
        gbc.setState(0xe0b4, 0x20af, 0xfac0, 0xfc82, 0x8e59, 0x8f20, 0x1, 0x1);
        gbc.writeMem(0x8f20, { 0x38 });
        gbc.writeMem(0xe0b4, { 0xb6 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x20af, gbc.sp());
        EXPECT(0xe0b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8f20));
        EXPECT(0xb6, gbc.readMem(0xe0b4));
        // B6 00C4
        gbc.setState(0xd2d1, 0x827c, 0x4290, 0x7460, 0x4b2e, 0x65b8, 0x0, 0x0);
        gbc.writeMem(0x65b8, { 0xfe });
        gbc.writeMem(0xd2d1, { 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x827c, gbc.sp());
        EXPECT(0xd2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd2d1));
        // B6 00C6
        gbc.setState(0xe7a1, 0x30a2, 0xdfc0, 0xb459, 0xccb7, 0x76ac, 0x0, 0x0);
        gbc.writeMem(0x76ac, { 0x84 });
        gbc.writeMem(0xe7a1, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x30a2, gbc.sp());
        EXPECT(0xe7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe7a1));
        // B6 00C7
        gbc.setState(0x9967, 0x5bb0, 0x3320, 0x3ea2, 0x7109, 0x64f4, 0x0, 0x1);
        gbc.writeMem(0x64f4, { 0xab });
        gbc.writeMem(0x9967, { 0xb6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5bb0, gbc.sp());
        EXPECT(0x9968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9967));
        // B6 00C8
        gbc.setState(0xe6b4, 0x6618, 0xafb0, 0xb072, 0xfecb, 0xf393, 0x1, 0x0);
        gbc.writeMem(0xe6b4, { 0xb6 });
        gbc.writeMem(0xf393, { 0x13 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6618, gbc.sp());
        EXPECT(0xe6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe6b4));
        EXPECT(0x13, gbc.readMem(0xf393));
        // B6 00C9
        gbc.setState(0x44e, 0x5e0e, 0x9eb0, 0x1b57, 0x4d84, 0x3b0a, 0x1, 0x0);
        gbc.writeMem(0x44e, { 0xb6 });
        gbc.writeMem(0x3b0a, { 0x8e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5e0e, gbc.sp());
        EXPECT(0x44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00CA
        gbc.setState(0xd0a0, 0xdf26, 0xb2d0, 0x48f2, 0xa905, 0xb3b2, 0x1, 0x0);
        gbc.writeMem(0xb3b2, { 0xbd });
        gbc.writeMem(0xd0a0, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdf26, gbc.sp());
        EXPECT(0xd0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xb3b2));
        EXPECT(0xb6, gbc.readMem(0xd0a0));
        // B6 00CB
        gbc.setState(0x2e25, 0x5c9b, 0x1220, 0x5a43, 0xa5f6, 0x5ea2, 0x0, 0x1);
        gbc.writeMem(0x2e25, { 0xb6 });
        gbc.writeMem(0x5ea2, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5c9b, gbc.sp());
        EXPECT(0x2e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00CC
        gbc.setState(0xcf96, 0x509d, 0x1770, 0x862b, 0x4f4, 0x488d, 0x0, 0x0);
        gbc.writeMem(0x488d, { 0x76 });
        gbc.writeMem(0xcf96, { 0xb6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x509d, gbc.sp());
        EXPECT(0xcf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xcf96));
        // B6 00CD
        gbc.setState(0x922, 0x32cf, 0x5ab0, 0xed55, 0x7fbf, 0xefb6, 0x1, 0x1);
        gbc.writeMem(0x922, { 0xb6 });
        gbc.writeMem(0xefb6, { 0xd8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x32cf, gbc.sp());
        EXPECT(0x923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xefb6));
        // B6 00CE
        gbc.setState(0x65b2, 0x8f05, 0x38c0, 0x3f90, 0xcabe, 0xcbe3, 0x1, 0x1);
        gbc.writeMem(0x65b2, { 0xb6 });
        gbc.writeMem(0xcbe3, { 0x6 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8f05, gbc.sp());
        EXPECT(0x65b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xcbe3));
        // B6 00CF
        gbc.setState(0x728b, 0xdbbd, 0x4c40, 0x5c57, 0x9e2b, 0x5b55, 0x0, 0x1);
        gbc.writeMem(0x5b55, { 0x97 });
        gbc.writeMem(0x728b, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdbbd, gbc.sp());
        EXPECT(0x728c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00D0
        gbc.setState(0x79a3, 0x1558, 0x30e0, 0x7648, 0x79fe, 0xc14f, 0x0, 0x1);
        gbc.writeMem(0x79a3, { 0xb6 });
        gbc.writeMem(0xc14f, { 0x19 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1558, gbc.sp());
        EXPECT(0x79a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xc14f));
        // B6 00D1
        gbc.setState(0x8db5, 0x7a0e, 0xa680, 0x22bf, 0x280e, 0xeae0, 0x1, 0x1);
        gbc.writeMem(0x8db5, { 0xb6 });
        gbc.writeMem(0xeae0, { 0xde });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7a0e, gbc.sp());
        EXPECT(0x8db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8db5));
        EXPECT(0xde, gbc.readMem(0xeae0));
        // B6 00D2
        gbc.setState(0xa2b8, 0xaf6b, 0xb080, 0xe7d7, 0xbee7, 0x2740, 0x0, 0x1);
        gbc.writeMem(0x2740, { 0x63 });
        gbc.writeMem(0xa2b8, { 0xb6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xaf6b, gbc.sp());
        EXPECT(0xa2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa2b8));
        // B6 00D3
        gbc.setState(0x5109, 0x533e, 0xd580, 0x1585, 0x2cfe, 0x484e, 0x1, 0x0);
        gbc.writeMem(0x484e, { 0xb9 });
        gbc.writeMem(0x5109, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x533e, gbc.sp());
        EXPECT(0x510a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00D5
        gbc.setState(0x9344, 0x84a8, 0x57d0, 0x7247, 0xa272, 0xb130, 0x0, 0x0);
        gbc.writeMem(0x9344, { 0xb6 });
        gbc.writeMem(0xb130, { 0xeb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x84a8, gbc.sp());
        EXPECT(0x9345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9344));
        EXPECT(0xeb, gbc.readMem(0xb130));
        // B6 00D6
        gbc.setState(0xc40f, 0x94f0, 0xe510, 0x5d1a, 0x1df5, 0xce72, 0x0, 0x0);
        gbc.writeMem(0xc40f, { 0xb6 });
        gbc.writeMem(0xce72, { 0x70 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x94f0, gbc.sp());
        EXPECT(0xc410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc40f));
        EXPECT(0x70, gbc.readMem(0xce72));
        // B6 00D7
        gbc.setState(0x97de, 0x1c80, 0xc8c0, 0x6ef7, 0xf69b, 0x9494, 0x1, 0x0);
        gbc.writeMem(0x9494, { 0x86 });
        gbc.writeMem(0x97de, { 0xb6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1c80, gbc.sp());
        EXPECT(0x97df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x9494));
        EXPECT(0xb6, gbc.readMem(0x97de));
        // B6 00D8
        gbc.setState(0x5d57, 0x9baa, 0x90, 0x2674, 0x3838, 0xcc0e, 0x1, 0x0);
        gbc.writeMem(0x5d57, { 0xb6 });
        gbc.writeMem(0xcc0e, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9baa, gbc.sp());
        EXPECT(0x5d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xcc0e));
        // B6 00D9
        gbc.setState(0x9bd6, 0x93a0, 0xea0, 0xfa8f, 0x80ec, 0xe223, 0x0, 0x1);
        gbc.writeMem(0x9bd6, { 0xb6 });
        gbc.writeMem(0xe223, { 0xa2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x93a0, gbc.sp());
        EXPECT(0x9bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9bd6));
        EXPECT(0xa2, gbc.readMem(0xe223));
        // B6 00DA
        gbc.setState(0x9273, 0x55ff, 0xa950, 0x8aae, 0xcf04, 0xbb6d, 0x0, 0x0);
        gbc.writeMem(0x9273, { 0xb6 });
        gbc.writeMem(0xbb6d, { 0xc9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x55ff, gbc.sp());
        EXPECT(0x9274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9273));
        EXPECT(0xc9, gbc.readMem(0xbb6d));
        // B6 00DB
        gbc.setState(0x7bdc, 0x32f0, 0xcf80, 0x9714, 0x79cf, 0x6cad, 0x0, 0x1);
        gbc.writeMem(0x6cad, { 0x9a });
        gbc.writeMem(0x7bdc, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x32f0, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00DC
        gbc.setState(0xb25a, 0x8b9f, 0xf600, 0x3345, 0x5ec9, 0x434d, 0x1, 0x0);
        gbc.writeMem(0x434d, { 0x23 });
        gbc.writeMem(0xb25a, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8b9f, gbc.sp());
        EXPECT(0xb25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb25a));
        // B6 00DF
        gbc.setState(0xd830, 0xa1fc, 0x3b30, 0x28cc, 0x7d7f, 0x1cd2, 0x0, 0x1);
        gbc.writeMem(0x1cd2, { 0x8 });
        gbc.writeMem(0xd830, { 0xb6 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa1fc, gbc.sp());
        EXPECT(0xd831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd830));
        // B6 00E0
        gbc.setState(0x8e6b, 0x4f8c, 0x8120, 0x5155, 0xb3dc, 0x2157, 0x1, 0x1);
        gbc.writeMem(0x2157, { 0xc0 });
        gbc.writeMem(0x8e6b, { 0xb6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4f8c, gbc.sp());
        EXPECT(0x8e6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8e6b));
        // B6 00E1
        gbc.setState(0x8262, 0x6e54, 0xd700, 0x1fdc, 0x2706, 0x1c72, 0x1, 0x0);
        gbc.writeMem(0x1c72, { 0x4b });
        gbc.writeMem(0x8262, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6e54, gbc.sp());
        EXPECT(0x8263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8262));
        // B6 00E2
        gbc.setState(0xd28a, 0xc62e, 0x5f80, 0x2606, 0xd810, 0xd305, 0x1, 0x1);
        gbc.writeMem(0xd28a, { 0xb6 });
        gbc.writeMem(0xd305, { 0xa7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc62e, gbc.sp());
        EXPECT(0xd28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd28a));
        EXPECT(0xa7, gbc.readMem(0xd305));
        // B6 00E3
        gbc.setState(0x336a, 0xc272, 0x3670, 0x674, 0x6f79, 0xaf8e, 0x1, 0x0);
        gbc.writeMem(0x336a, { 0xb6 });
        gbc.writeMem(0xaf8e, { 0xf5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc272, gbc.sp());
        EXPECT(0x336b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xaf8e));
        // B6 00E4
        gbc.setState(0x4b8c, 0x7c43, 0x96d0, 0xbbdf, 0x68a9, 0xb8ee, 0x0, 0x0);
        gbc.writeMem(0x4b8c, { 0xb6 });
        gbc.writeMem(0xb8ee, { 0x5d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7c43, gbc.sp());
        EXPECT(0x4b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb8ee));
        // B6 00E5
        gbc.setState(0x49c9, 0x694b, 0x63f0, 0x3df8, 0xb732, 0x4b90, 0x1, 0x0);
        gbc.writeMem(0x49c9, { 0xb6 });
        gbc.writeMem(0x4b90, { 0x25 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x694b, gbc.sp());
        EXPECT(0x49ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00E6
        gbc.setState(0xd74c, 0x8af0, 0xace0, 0x7a1d, 0x9f22, 0x8e40, 0x0, 0x0);
        gbc.writeMem(0x8e40, { 0xf });
        gbc.writeMem(0xd74c, { 0xb6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8af0, gbc.sp());
        EXPECT(0xd74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x8e40));
        EXPECT(0xb6, gbc.readMem(0xd74c));
        // B6 00E7
        gbc.setState(0xa7f3, 0xc4f5, 0x8310, 0xd7fc, 0xf385, 0x6bb4, 0x1, 0x0);
        gbc.writeMem(0x6bb4, { 0x3b });
        gbc.writeMem(0xa7f3, { 0xb6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc4f5, gbc.sp());
        EXPECT(0xa7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa7f3));
        // B6 00E8
        gbc.setState(0x12bd, 0x5ec2, 0xf100, 0x8f10, 0xb330, 0x8457, 0x0, 0x1);
        gbc.writeMem(0x12bd, { 0xb6 });
        gbc.writeMem(0x8457, { 0xf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5ec2, gbc.sp());
        EXPECT(0x12be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x8457));
        // B6 00E9
        gbc.setState(0x18cf, 0xd334, 0xabb0, 0xbf4d, 0x493a, 0xbb86, 0x1, 0x0);
        gbc.writeMem(0x18cf, { 0xb6 });
        gbc.writeMem(0xbb86, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd334, gbc.sp());
        EXPECT(0x18d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xbb86));
        // B6 00EA
        gbc.setState(0x1b6d, 0xabd3, 0xe6d0, 0x647, 0x7299, 0x6bf3, 0x0, 0x1);
        gbc.writeMem(0x1b6d, { 0xb6 });
        gbc.writeMem(0x6bf3, { 0x47 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xabd3, gbc.sp());
        EXPECT(0x1b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00EB
        gbc.setState(0x43a3, 0x74ef, 0x53d0, 0xc29c, 0x5744, 0x86fa, 0x1, 0x1);
        gbc.writeMem(0x43a3, { 0xb6 });
        gbc.writeMem(0x86fa, { 0x39 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x74ef, gbc.sp());
        EXPECT(0x43a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x86fa));
        // B6 00EC
        gbc.setState(0x3ccc, 0x781, 0xfcc0, 0x130f, 0x509f, 0x5fc5, 0x0, 0x1);
        gbc.writeMem(0x3ccc, { 0xb6 });
        gbc.writeMem(0x5fc5, { 0x87 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x781, gbc.sp());
        EXPECT(0x3ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00ED
        gbc.setState(0x9214, 0x7f2d, 0xaf40, 0xde3, 0xe399, 0xd55d, 0x0, 0x1);
        gbc.writeMem(0x9214, { 0xb6 });
        gbc.writeMem(0xd55d, { 0x52 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7f2d, gbc.sp());
        EXPECT(0x9215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9214));
        EXPECT(0x52, gbc.readMem(0xd55d));
        // B6 00EE
        gbc.setState(0xd021, 0xa7b0, 0x2510, 0xf795, 0x7829, 0xe3c8, 0x1, 0x1);
        gbc.writeMem(0xd021, { 0xb6 });
        gbc.writeMem(0xe3c8, { 0xee });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa7b0, gbc.sp());
        EXPECT(0xd022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd021));
        EXPECT(0xee, gbc.readMem(0xe3c8));
        // B6 00F0
        gbc.setState(0x6c07, 0xf331, 0xc0a0, 0x7ec, 0xdb79, 0xce4d, 0x0, 0x1);
        gbc.writeMem(0x6c07, { 0xb6 });
        gbc.writeMem(0xce4d, { 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf331, gbc.sp());
        EXPECT(0x6c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xce4d));
        // B6 00F1
        gbc.setState(0x279b, 0xb46f, 0x39e0, 0x5fde, 0x4180, 0x3a15, 0x1, 0x1);
        gbc.writeMem(0x279b, { 0xb6 });
        gbc.writeMem(0x3a15, { 0x31 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb46f, gbc.sp());
        EXPECT(0x279c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00F2
        gbc.setState(0x1b43, 0xda26, 0xfb20, 0x7725, 0xff3c, 0x1d11, 0x1, 0x1);
        gbc.writeMem(0x1b43, { 0xb6 });
        gbc.writeMem(0x1d11, { 0xde });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xda26, gbc.sp());
        EXPECT(0x1b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00F3
        gbc.setState(0xc7ec, 0xc93f, 0x80c0, 0xd0bc, 0xafe2, 0x263b, 0x0, 0x0);
        gbc.writeMem(0x263b, { 0xe5 });
        gbc.writeMem(0xc7ec, { 0xb6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc93f, gbc.sp());
        EXPECT(0xc7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc7ec));
        // B6 00F4
        gbc.setState(0x6744, 0xc37c, 0x5140, 0x94bc, 0x39f7, 0xaccf, 0x0, 0x1);
        gbc.writeMem(0x6744, { 0xb6 });
        gbc.writeMem(0xaccf, { 0x6c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc37c, gbc.sp());
        EXPECT(0x6745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xaccf));
        // B6 00F5
        gbc.setState(0x8e89, 0x50a1, 0x4a30, 0x1064, 0xcf53, 0x1c91, 0x1, 0x1);
        gbc.writeMem(0x1c91, { 0xcb });
        gbc.writeMem(0x8e89, { 0xb6 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x50a1, gbc.sp());
        EXPECT(0x8e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8e89));
        // B6 00F6
        gbc.setState(0xa3dc, 0x5571, 0x28d0, 0x5dd9, 0x3461, 0xe33f, 0x1, 0x0);
        gbc.writeMem(0xa3dc, { 0xb6 });
        gbc.writeMem(0xe33f, { 0x27 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5571, gbc.sp());
        EXPECT(0xa3dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa3dc));
        EXPECT(0x27, gbc.readMem(0xe33f));
        // B6 00F7
        gbc.setState(0xdcad, 0xb65b, 0x2bc0, 0xc21e, 0xc986, 0x1f1d, 0x0, 0x1);
        gbc.writeMem(0x1f1d, { 0xc4 });
        gbc.writeMem(0xdcad, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb65b, gbc.sp());
        EXPECT(0xdcae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdcad));
        // B6 00F8
        gbc.setState(0x356f, 0x68ea, 0x8720, 0x2890, 0x303b, 0x3db8, 0x1, 0x1);
        gbc.writeMem(0x356f, { 0xb6 });
        gbc.writeMem(0x3db8, { 0x4b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x68ea, gbc.sp());
        EXPECT(0x3570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00F9
        gbc.setState(0xbd67, 0xce5a, 0x3250, 0x82da, 0x2194, 0x9458, 0x1, 0x0);
        gbc.writeMem(0x9458, { 0xee });
        gbc.writeMem(0xbd67, { 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xce5a, gbc.sp());
        EXPECT(0xbd68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9458));
        EXPECT(0xb6, gbc.readMem(0xbd67));
        // B6 00FA
        gbc.setState(0x704, 0x2ac7, 0x8460, 0xb8d6, 0xc0d0, 0x1fc5, 0x1, 0x1);
        gbc.writeMem(0x704, { 0xb6 });
        gbc.writeMem(0x1fc5, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2ac7, gbc.sp());
        EXPECT(0x705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00FB
        gbc.setState(0x829a, 0x6bca, 0x2410, 0x5858, 0xef01, 0xc5ce, 0x0, 0x1);
        gbc.writeMem(0x829a, { 0xb6 });
        gbc.writeMem(0xc5ce, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6bca, gbc.sp());
        EXPECT(0x829b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x829a));
        EXPECT(0x6c, gbc.readMem(0xc5ce));
        // B6 00FC
        gbc.setState(0x2055, 0xc36d, 0xa6c0, 0x71c5, 0xc5d4, 0xd865, 0x1, 0x1);
        gbc.writeMem(0x2055, { 0xb6 });
        gbc.writeMem(0xd865, { 0xdb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc36d, gbc.sp());
        EXPECT(0x2056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xd865));
        // B6 00FD
        gbc.setState(0xf86, 0xdea7, 0xbda0, 0xe880, 0x4ff6, 0x355f, 0x1, 0x1);
        gbc.writeMem(0xf86, { 0xb6 });
        gbc.writeMem(0x355f, { 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdea7, gbc.sp());
        EXPECT(0xf87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00FE
        gbc.setState(0x131, 0x9cc6, 0xe2a0, 0xda10, 0xf92c, 0x1628, 0x1, 0x0);
        gbc.writeMem(0x131, { 0xb6 });
        gbc.writeMem(0x1628, { 0x14 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9cc6, gbc.sp());
        EXPECT(0x132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 00FF
        gbc.setState(0xc103, 0xbb49, 0xf870, 0xfdfd, 0x3ad5, 0x81f5, 0x1, 0x0);
        gbc.writeMem(0x81f5, { 0x18 });
        gbc.writeMem(0xc103, { 0xb6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbb49, gbc.sp());
        EXPECT(0xc104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x81f5));
        EXPECT(0xb6, gbc.readMem(0xc103));
        // B6 0100
        gbc.setState(0x553c, 0x41d4, 0x7d0, 0x2e83, 0xb7ae, 0x926c, 0x0, 0x0);
        gbc.writeMem(0x553c, { 0xb6 });
        gbc.writeMem(0x926c, { 0x4 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x41d4, gbc.sp());
        EXPECT(0x553d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x926c));
        // B6 0101
        gbc.setState(0xd854, 0xc65f, 0x8060, 0xed28, 0x61b8, 0x7e3d, 0x1, 0x1);
        gbc.writeMem(0x7e3d, { 0x4 });
        gbc.writeMem(0xd854, { 0xb6 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc65f, gbc.sp());
        EXPECT(0xd855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd854));
        // B6 0102
        gbc.setState(0xd6b7, 0xec6c, 0x32e0, 0x95a3, 0xe74, 0xbb09, 0x1, 0x0);
        gbc.writeMem(0xbb09, { 0x89 });
        gbc.writeMem(0xd6b7, { 0xb6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xec6c, gbc.sp());
        EXPECT(0xd6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xbb09));
        EXPECT(0xb6, gbc.readMem(0xd6b7));
        // B6 0103
        gbc.setState(0x42df, 0x86c8, 0xe280, 0xfad, 0xa169, 0xde45, 0x1, 0x0);
        gbc.writeMem(0x42df, { 0xb6 });
        gbc.writeMem(0xde45, { 0x37 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x86c8, gbc.sp());
        EXPECT(0x42e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xde45));
        // B6 0104
        gbc.setState(0xa4fe, 0xca41, 0xda70, 0x51c5, 0xa8f3, 0x861d, 0x1, 0x0);
        gbc.writeMem(0x861d, { 0x1d });
        gbc.writeMem(0xa4fe, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xca41, gbc.sp());
        EXPECT(0xa4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x861d));
        EXPECT(0xb6, gbc.readMem(0xa4fe));
        // B6 0105
        gbc.setState(0xe1eb, 0xa3af, 0x86d0, 0xe9d4, 0xcda0, 0x4651, 0x1, 0x1);
        gbc.writeMem(0x4651, { 0x76 });
        gbc.writeMem(0xe1eb, { 0xb6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa3af, gbc.sp());
        EXPECT(0xe1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe1eb));
        // B6 0106
        gbc.setState(0xc45, 0xf8bd, 0x3a70, 0xff5, 0xca58, 0x98d6, 0x0, 0x0);
        gbc.writeMem(0xc45, { 0xb6 });
        gbc.writeMem(0x98d6, { 0xc7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf8bd, gbc.sp());
        EXPECT(0xc46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x98d6));
        // B6 0107
        gbc.setState(0xb02f, 0xcc0, 0x5720, 0xfd20, 0xcb7a, 0x1235, 0x1, 0x1);
        gbc.writeMem(0x1235, { 0xd5 });
        gbc.writeMem(0xb02f, { 0xb6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcc0, gbc.sp());
        EXPECT(0xb030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb02f));
        // B6 0108
        gbc.setState(0xbb54, 0xab7a, 0x780, 0x3835, 0x7d6a, 0x67eb, 0x1, 0x0);
        gbc.writeMem(0x67eb, { 0xd5 });
        gbc.writeMem(0xbb54, { 0xb6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xab7a, gbc.sp());
        EXPECT(0xbb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xbb54));
        // B6 0109
        gbc.setState(0xc7df, 0xc761, 0x9b00, 0x8379, 0xffba, 0x2773, 0x1, 0x0);
        gbc.writeMem(0x2773, { 0xd1 });
        gbc.writeMem(0xc7df, { 0xb6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc761, gbc.sp());
        EXPECT(0xc7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc7df));
        // B6 010A
        gbc.setState(0x7a03, 0xd4a3, 0x4040, 0x69a, 0x97c6, 0xe26a, 0x1, 0x0);
        gbc.writeMem(0x7a03, { 0xb6 });
        gbc.writeMem(0xe26a, { 0x6b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd4a3, gbc.sp());
        EXPECT(0x7a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xe26a));
        // B6 010B
        gbc.setState(0x7133, 0xe43f, 0xdd30, 0xbf9a, 0xd4dc, 0x7fc5, 0x0, 0x0);
        gbc.writeMem(0x7133, { 0xb6 });
        gbc.writeMem(0x7fc5, { 0x97 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe43f, gbc.sp());
        EXPECT(0x7134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 010C
        gbc.setState(0x71d6, 0x5b15, 0x4850, 0x4762, 0xf578, 0x5950, 0x1, 0x1);
        gbc.writeMem(0x5950, { 0xc3 });
        gbc.writeMem(0x71d6, { 0xb6 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5b15, gbc.sp());
        EXPECT(0x71d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 010D
        gbc.setState(0x6a93, 0x8c76, 0x82c0, 0x1e35, 0x68fb, 0xd9dd, 0x1, 0x0);
        gbc.writeMem(0x6a93, { 0xb6 });
        gbc.writeMem(0xd9dd, { 0x3c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8c76, gbc.sp());
        EXPECT(0x6a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd9dd));
        // B6 010E
        gbc.setState(0xe8ae, 0xff46, 0x4830, 0x89e8, 0x311c, 0x464f, 0x1, 0x1);
        gbc.writeMem(0x464f, { 0x8e });
        gbc.writeMem(0xe8ae, { 0xb6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xff46, gbc.sp());
        EXPECT(0xe8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe8ae));
        // B6 010F
        gbc.setState(0x529e, 0xe24f, 0x8f20, 0xd773, 0x964c, 0x910, 0x0, 0x1);
        gbc.writeMem(0x910, { 0x9e });
        gbc.writeMem(0x529e, { 0xb6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe24f, gbc.sp());
        EXPECT(0x529f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0110
        gbc.setState(0x77c, 0xdf4c, 0x2fe0, 0xa36a, 0x8f50, 0x5cc2, 0x1, 0x1);
        gbc.writeMem(0x77c, { 0xb6 });
        gbc.writeMem(0x5cc2, { 0xea });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdf4c, gbc.sp());
        EXPECT(0x77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0111
        gbc.setState(0xa606, 0x7ba4, 0xdc0, 0xb136, 0x5f7a, 0x8946, 0x0, 0x0);
        gbc.writeMem(0x8946, { 0xa7 });
        gbc.writeMem(0xa606, { 0xb6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7ba4, gbc.sp());
        EXPECT(0xa607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8946));
        EXPECT(0xb6, gbc.readMem(0xa606));
        // B6 0112
        gbc.setState(0x9c71, 0x9b9d, 0xb770, 0xc89b, 0x5340, 0x6eda, 0x1, 0x0);
        gbc.writeMem(0x6eda, { 0xec });
        gbc.writeMem(0x9c71, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9b9d, gbc.sp());
        EXPECT(0x9c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9c71));
        // B6 0113
        gbc.setState(0x980, 0xdfc3, 0xa7b0, 0x46dc, 0xd0a4, 0x4b26, 0x1, 0x0);
        gbc.writeMem(0x980, { 0xb6 });
        gbc.writeMem(0x4b26, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdfc3, gbc.sp());
        EXPECT(0x981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0114
        gbc.setState(0xa81b, 0x9c6d, 0xcf90, 0x4b51, 0xee45, 0x9f81, 0x0, 0x1);
        gbc.writeMem(0x9f81, { 0xa1 });
        gbc.writeMem(0xa81b, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9c6d, gbc.sp());
        EXPECT(0xa81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9f81));
        EXPECT(0xb6, gbc.readMem(0xa81b));
        // B6 0115
        gbc.setState(0x304d, 0xd124, 0xf920, 0x819d, 0x77b, 0x7e51, 0x0, 0x0);
        gbc.writeMem(0x304d, { 0xb6 });
        gbc.writeMem(0x7e51, { 0x40 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd124, gbc.sp());
        EXPECT(0x304e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0116
        gbc.setState(0xb84, 0x8c10, 0xb1d0, 0xe1e8, 0xf96e, 0xb790, 0x0, 0x0);
        gbc.writeMem(0xb84, { 0xb6 });
        gbc.writeMem(0xb790, { 0x2b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8c10, gbc.sp());
        EXPECT(0xb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb790));
        // B6 0117
        gbc.setState(0x7720, 0xe071, 0x5030, 0xe325, 0xf333, 0x20f7, 0x0, 0x0);
        gbc.writeMem(0x20f7, { 0x9 });
        gbc.writeMem(0x7720, { 0xb6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe071, gbc.sp());
        EXPECT(0x7721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0118
        gbc.setState(0xcbf6, 0xc12d, 0x2740, 0x23b1, 0xd290, 0x7a6a, 0x1, 0x0);
        gbc.writeMem(0x7a6a, { 0xb6 });
        gbc.writeMem(0xcbf6, { 0xb6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc12d, gbc.sp());
        EXPECT(0xcbf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xcbf6));
        // B6 011A
        gbc.setState(0x7a55, 0x4fd8, 0x6510, 0xed36, 0x9b50, 0x3b0d, 0x0, 0x0);
        gbc.writeMem(0x3b0d, { 0xbc });
        gbc.writeMem(0x7a55, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4fd8, gbc.sp());
        EXPECT(0x7a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 011B
        gbc.setState(0x9f2a, 0x6659, 0x3750, 0xe00, 0x2129, 0x1e53, 0x1, 0x1);
        gbc.writeMem(0x1e53, { 0xda });
        gbc.writeMem(0x9f2a, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6659, gbc.sp());
        EXPECT(0x9f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9f2a));
        // B6 011C
        gbc.setState(0x82ca, 0xa77e, 0x7720, 0x6377, 0xbc94, 0x1041, 0x1, 0x1);
        gbc.writeMem(0x1041, { 0xba });
        gbc.writeMem(0x82ca, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa77e, gbc.sp());
        EXPECT(0x82cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x82ca));
        // B6 011D
        gbc.setState(0x6629, 0x5609, 0xbbe0, 0xffe0, 0x5b2c, 0xeb9, 0x1, 0x1);
        gbc.writeMem(0xeb9, { 0x71 });
        gbc.writeMem(0x6629, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5609, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 011E
        gbc.setState(0xe2c8, 0x84dc, 0xe3f0, 0x3870, 0xc0df, 0x34c6, 0x0, 0x0);
        gbc.writeMem(0x34c6, { 0xe7 });
        gbc.writeMem(0xe2c8, { 0xb6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x84dc, gbc.sp());
        EXPECT(0xe2c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe2c8));
        // B6 011F
        gbc.setState(0x79b5, 0xb74b, 0xb2e0, 0xfb92, 0x3e73, 0x6620, 0x0, 0x1);
        gbc.writeMem(0x6620, { 0x6d });
        gbc.writeMem(0x79b5, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb74b, gbc.sp());
        EXPECT(0x79b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0120
        gbc.setState(0x17c0, 0x724e, 0xd470, 0xf133, 0xbed9, 0xefee, 0x1, 0x1);
        gbc.writeMem(0x17c0, { 0xb6 });
        gbc.writeMem(0xefee, { 0x25 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x724e, gbc.sp());
        EXPECT(0x17c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xefee));
        // B6 0121
        gbc.setState(0x235d, 0xa367, 0x3b80, 0x5201, 0x54e7, 0x3a52, 0x1, 0x0);
        gbc.writeMem(0x235d, { 0xb6 });
        gbc.writeMem(0x3a52, { 0x17 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa367, gbc.sp());
        EXPECT(0x235e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0122
        gbc.setState(0x9dc7, 0x854c, 0x6fe0, 0x40e3, 0x64a, 0x9989, 0x1, 0x0);
        gbc.writeMem(0x9989, { 0x28 });
        gbc.writeMem(0x9dc7, { 0xb6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x854c, gbc.sp());
        EXPECT(0x9dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0x9989));
        EXPECT(0xb6, gbc.readMem(0x9dc7));
        // B6 0123
        gbc.setState(0x52a0, 0xc7c9, 0xfbb0, 0x4921, 0xc8f4, 0x9076, 0x1, 0x1);
        gbc.writeMem(0x52a0, { 0xb6 });
        gbc.writeMem(0x9076, { 0xf6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc7c9, gbc.sp());
        EXPECT(0x52a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x9076));
        // B6 0124
        gbc.setState(0x958, 0x37ab, 0x34c0, 0xe8dc, 0x350c, 0xb6f2, 0x1, 0x0);
        gbc.writeMem(0x958, { 0xb6 });
        gbc.writeMem(0xb6f2, { 0xae });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x37ab, gbc.sp());
        EXPECT(0x959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xb6f2));
        // B6 0125
        gbc.setState(0x2788, 0xc2a2, 0x8030, 0x4bea, 0x3e6b, 0xe640, 0x0, 0x1);
        gbc.writeMem(0x2788, { 0xb6 });
        gbc.writeMem(0xe640, { 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc2a2, gbc.sp());
        EXPECT(0x2789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe640));
        // B6 0126
        gbc.setState(0x8ae0, 0xdbf8, 0x9b80, 0xef19, 0x953d, 0x81d1, 0x0, 0x0);
        gbc.writeMem(0x81d1, { 0x43 });
        gbc.writeMem(0x8ae0, { 0xb6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdbf8, gbc.sp());
        EXPECT(0x8ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x81d1));
        EXPECT(0xb6, gbc.readMem(0x8ae0));
        // B6 0127
        gbc.setState(0x3ca, 0xf773, 0x6fc0, 0xa477, 0x94f7, 0xa25e, 0x0, 0x0);
        gbc.writeMem(0x3ca, { 0xb6 });
        gbc.writeMem(0xa25e, { 0x5b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf773, gbc.sp());
        EXPECT(0x3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa25e));
        // B6 0128
        gbc.setState(0xeb7f, 0x2b8d, 0xba80, 0x5b8f, 0x2898, 0x1c10, 0x0, 0x1);
        gbc.writeMem(0x1c10, { 0xf5 });
        gbc.writeMem(0xeb7f, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2b8d, gbc.sp());
        EXPECT(0xeb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xeb7f));
        // B6 0129
        gbc.setState(0x5719, 0xc313, 0x1610, 0x6685, 0x7e1e, 0x9b63, 0x1, 0x0);
        gbc.writeMem(0x5719, { 0xb6 });
        gbc.writeMem(0x9b63, { 0xbb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc313, gbc.sp());
        EXPECT(0x571a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x9b63));
        // B6 012A
        gbc.setState(0x63c1, 0x575a, 0x97e0, 0xa99f, 0x482, 0xdd43, 0x1, 0x1);
        gbc.writeMem(0x63c1, { 0xb6 });
        gbc.writeMem(0xdd43, { 0x73 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x575a, gbc.sp());
        EXPECT(0x63c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xdd43));
        // B6 012B
        gbc.setState(0xa625, 0x9e66, 0xb790, 0x79b8, 0x7018, 0x7609, 0x1, 0x0);
        gbc.writeMem(0x7609, { 0x8d });
        gbc.writeMem(0xa625, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9e66, gbc.sp());
        EXPECT(0xa626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa625));
        // B6 012C
        gbc.setState(0xa9fa, 0x4c9f, 0xa350, 0x9ce9, 0x957c, 0x6800, 0x0, 0x0);
        gbc.writeMem(0x6800, { 0xa5 });
        gbc.writeMem(0xa9fa, { 0xb6 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4c9f, gbc.sp());
        EXPECT(0xa9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa9fa));
        // B6 012D
        gbc.setState(0x4ce2, 0xe9f0, 0xc00, 0x32a8, 0xa028, 0x4680, 0x0, 0x0);
        gbc.writeMem(0x4680, { 0x7a });
        gbc.writeMem(0x4ce2, { 0xb6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe9f0, gbc.sp());
        EXPECT(0x4ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 012E
        gbc.setState(0x4a24, 0xdbe7, 0x34b0, 0x5b98, 0x4e3, 0x7334, 0x1, 0x1);
        gbc.writeMem(0x4a24, { 0xb6 });
        gbc.writeMem(0x7334, { 0x9d });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdbe7, gbc.sp());
        EXPECT(0x4a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0130
        gbc.setState(0xdf25, 0x8976, 0x3400, 0x5d3f, 0xde07, 0xfd8f, 0x0, 0x1);
        gbc.writeMem(0xdf25, { 0xb6 });
        gbc.writeMem(0xfd8f, { 0xe2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8976, gbc.sp());
        EXPECT(0xdf26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdf25));
        EXPECT(0xe2, gbc.readMem(0xfd8f));
        // B6 0131
        gbc.setState(0x3080, 0x899b, 0xca50, 0x722e, 0xe88a, 0xff77, 0x0, 0x0);
        gbc.writeMem(0x3080, { 0xb6 });
        gbc.writeMem(0xff77, { 0x52 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0x3081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xff77));
        // B6 0133
        gbc.setState(0x5679, 0xa309, 0xab00, 0x75a4, 0x6164, 0x3753, 0x0, 0x1);
        gbc.writeMem(0x3753, { 0xdd });
        gbc.writeMem(0x5679, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa309, gbc.sp());
        EXPECT(0x567a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0134
        gbc.setState(0x4870, 0x3d5c, 0xb720, 0x914c, 0x4ffb, 0xd65e, 0x0, 0x0);
        gbc.writeMem(0x4870, { 0xb6 });
        gbc.writeMem(0xd65e, { 0x8c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3d5c, gbc.sp());
        EXPECT(0x4871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd65e));
        // B6 0135
        gbc.setState(0x4f79, 0x9814, 0x7b60, 0x78df, 0xbee5, 0x9cb3, 0x1, 0x1);
        gbc.writeMem(0x4f79, { 0xb6 });
        gbc.writeMem(0x9cb3, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9814, gbc.sp());
        EXPECT(0x4f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9cb3));
        // B6 0136
        gbc.setState(0xeb6e, 0xed86, 0x5270, 0xc135, 0x6671, 0x4be, 0x0, 0x0);
        gbc.writeMem(0x4be, { 0x5e });
        gbc.writeMem(0xeb6e, { 0xb6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xed86, gbc.sp());
        EXPECT(0xeb6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xeb6e));
        // B6 0137
        gbc.setState(0x1db1, 0x9fbe, 0x20d0, 0x1f6, 0xacb4, 0x2d1b, 0x0, 0x1);
        gbc.writeMem(0x1db1, { 0xb6 });
        gbc.writeMem(0x2d1b, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9fbe, gbc.sp());
        EXPECT(0x1db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0139
        gbc.setState(0xe422, 0xaefd, 0x9930, 0xc848, 0xc32f, 0x1c3e, 0x0, 0x1);
        gbc.writeMem(0x1c3e, { 0x6e });
        gbc.writeMem(0xe422, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaefd, gbc.sp());
        EXPECT(0xe423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe422));
        // B6 013A
        gbc.setState(0x5ca5, 0x99ef, 0x6960, 0x58cb, 0x6036, 0x6315, 0x0, 0x0);
        gbc.writeMem(0x5ca5, { 0xb6 });
        gbc.writeMem(0x6315, { 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x99ef, gbc.sp());
        EXPECT(0x5ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 013B
        gbc.setState(0x66f2, 0x985, 0x9ce0, 0xe452, 0xe9b2, 0x896d, 0x0, 0x1);
        gbc.writeMem(0x66f2, { 0xb6 });
        gbc.writeMem(0x896d, { 0xf9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x985, gbc.sp());
        EXPECT(0x66f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0x896d));
        // B6 013C
        gbc.setState(0x963d, 0x4753, 0x98a0, 0x87a7, 0xaae3, 0xb2bb, 0x1, 0x1);
        gbc.writeMem(0x963d, { 0xb6 });
        gbc.writeMem(0xb2bb, { 0xb3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4753, gbc.sp());
        EXPECT(0x963e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x963d));
        EXPECT(0xb3, gbc.readMem(0xb2bb));
        // B6 013D
        gbc.setState(0x705c, 0xea5c, 0xf3d0, 0x15e3, 0xd840, 0xde97, 0x1, 0x0);
        gbc.writeMem(0x705c, { 0xb6 });
        gbc.writeMem(0xde97, { 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xea5c, gbc.sp());
        EXPECT(0x705d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xde97));
        // B6 013E
        gbc.setState(0xa6b6, 0xb756, 0x5ec0, 0xd37e, 0x9836, 0x4cde, 0x0, 0x1);
        gbc.writeMem(0x4cde, { 0x6 });
        gbc.writeMem(0xa6b6, { 0xb6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb756, gbc.sp());
        EXPECT(0xa6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa6b6));
        // B6 013F
        gbc.setState(0xe1a, 0x2a47, 0x67d0, 0x2edf, 0x4f7c, 0x5da6, 0x0, 0x1);
        gbc.writeMem(0xe1a, { 0xb6 });
        gbc.writeMem(0x5da6, { 0x24 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2a47, gbc.sp());
        EXPECT(0xe1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0140
        gbc.setState(0x5fe0, 0xae42, 0xd570, 0x8a0f, 0x8a09, 0x470, 0x0, 0x1);
        gbc.writeMem(0x470, { 0x32 });
        gbc.writeMem(0x5fe0, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xae42, gbc.sp());
        EXPECT(0x5fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0141
        gbc.setState(0x4687, 0xa781, 0x7880, 0xae88, 0xc78c, 0x555f, 0x1, 0x0);
        gbc.writeMem(0x4687, { 0xb6 });
        gbc.writeMem(0x555f, { 0xed });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa781, gbc.sp());
        EXPECT(0x4688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0142
        gbc.setState(0xb60c, 0xa63d, 0xf780, 0x5a18, 0x33d9, 0x21c0, 0x0, 0x1);
        gbc.writeMem(0x21c0, { 0x5e });
        gbc.writeMem(0xb60c, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa63d, gbc.sp());
        EXPECT(0xb60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb60c));
        // B6 0143
        gbc.setState(0xd1f7, 0x49e3, 0x70a0, 0x20a5, 0xfea1, 0xfbca, 0x1, 0x1);
        gbc.writeMem(0xd1f7, { 0xb6 });
        gbc.writeMem(0xfbca, { 0x41 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x49e3, gbc.sp());
        EXPECT(0xd1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd1f7));
        EXPECT(0x41, gbc.readMem(0xfbca));
        // B6 0144
        gbc.setState(0x9559, 0x6a33, 0x8500, 0x7f65, 0x729b, 0x7913, 0x0, 0x1);
        gbc.writeMem(0x7913, { 0x15 });
        gbc.writeMem(0x9559, { 0xb6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6a33, gbc.sp());
        EXPECT(0x955a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9559));
        // B6 0145
        gbc.setState(0x1d88, 0xe5c0, 0x4fc0, 0xc0c, 0x6da3, 0x254b, 0x0, 0x1);
        gbc.writeMem(0x1d88, { 0xb6 });
        gbc.writeMem(0x254b, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe5c0, gbc.sp());
        EXPECT(0x1d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0146
        gbc.setState(0x5c61, 0x8360, 0x9e40, 0x41c3, 0xbd53, 0x85c4, 0x0, 0x1);
        gbc.writeMem(0x5c61, { 0xb6 });
        gbc.writeMem(0x85c4, { 0x72 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8360, gbc.sp());
        EXPECT(0x5c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x85c4));
        // B6 0147
        gbc.setState(0xd4c2, 0xac83, 0xa040, 0x6616, 0x5b30, 0x8025, 0x0, 0x0);
        gbc.writeMem(0x8025, { 0x67 });
        gbc.writeMem(0xd4c2, { 0xb6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xac83, gbc.sp());
        EXPECT(0xd4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x8025));
        EXPECT(0xb6, gbc.readMem(0xd4c2));
        // B6 0148
        gbc.setState(0xd895, 0xb655, 0x56f0, 0x8092, 0x5868, 0xdd8b, 0x1, 0x0);
        gbc.writeMem(0xd895, { 0xb6 });
        gbc.writeMem(0xdd8b, { 0x7a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb655, gbc.sp());
        EXPECT(0xd896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd895));
        EXPECT(0x7a, gbc.readMem(0xdd8b));
        // B6 0149
        gbc.setState(0xe297, 0xacf3, 0x4fa0, 0xb036, 0x7f70, 0x6e5, 0x1, 0x1);
        gbc.writeMem(0x6e5, { 0xe3 });
        gbc.writeMem(0xe297, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xacf3, gbc.sp());
        EXPECT(0xe298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe297));
        // B6 014A
        gbc.setState(0xe16d, 0xf15b, 0x160, 0xfcb0, 0xc3cb, 0x7b63, 0x1, 0x1);
        gbc.writeMem(0x7b63, { 0xdb });
        gbc.writeMem(0xe16d, { 0xb6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf15b, gbc.sp());
        EXPECT(0xe16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe16d));
        // B6 014C
        gbc.setState(0x331b, 0xe172, 0xeda0, 0x18db, 0x151d, 0x24fe, 0x1, 0x0);
        gbc.writeMem(0x24fe, { 0x9f });
        gbc.writeMem(0x331b, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe172, gbc.sp());
        EXPECT(0x331c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 014D
        gbc.setState(0x1940, 0x8016, 0x210, 0xe544, 0xf3d6, 0x9598, 0x1, 0x1);
        gbc.writeMem(0x1940, { 0xb6 });
        gbc.writeMem(0x9598, { 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8016, gbc.sp());
        EXPECT(0x1941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x9598));
        // B6 014E
        gbc.setState(0x94b2, 0xa52b, 0xe070, 0x5b35, 0x648a, 0x33b6, 0x0, 0x0);
        gbc.writeMem(0x33b6, { 0xdf });
        gbc.writeMem(0x94b2, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa52b, gbc.sp());
        EXPECT(0x94b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x94b2));
        // B6 014F
        gbc.setState(0x7de2, 0xe4e5, 0x9340, 0x6562, 0x6d0b, 0xb41b, 0x0, 0x0);
        gbc.writeMem(0x7de2, { 0xb6 });
        gbc.writeMem(0xb41b, { 0x36 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe4e5, gbc.sp());
        EXPECT(0x7de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xb41b));
        // B6 0151
        gbc.setState(0xa963, 0x1c06, 0x2360, 0x3dce, 0x160d, 0xa3c, 0x0, 0x0);
        gbc.writeMem(0xa3c, { 0xa9 });
        gbc.writeMem(0xa963, { 0xb6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1c06, gbc.sp());
        EXPECT(0xa964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa963));
        // B6 0152
        gbc.setState(0xa172, 0x8cbe, 0x5890, 0x46ff, 0x2759, 0xcc74, 0x1, 0x0);
        gbc.writeMem(0xa172, { 0xb6 });
        gbc.writeMem(0xcc74, { 0x28 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8cbe, gbc.sp());
        EXPECT(0xa173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa172));
        EXPECT(0x28, gbc.readMem(0xcc74));
        // B6 0153
        gbc.setState(0x745b, 0xe688, 0xd250, 0xf33a, 0xca27, 0x7f48, 0x0, 0x1);
        gbc.writeMem(0x745b, { 0xb6 });
        gbc.writeMem(0x7f48, { 0xe3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe688, gbc.sp());
        EXPECT(0x745c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0154
        gbc.setState(0x2cdd, 0x8875, 0xc240, 0x5ea1, 0xb741, 0xf9f6, 0x0, 0x1);
        gbc.writeMem(0x2cdd, { 0xb6 });
        gbc.writeMem(0xf9f6, { 0x6d });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8875, gbc.sp());
        EXPECT(0x2cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xf9f6));
        // B6 0155
        gbc.setState(0x5a6d, 0x9c12, 0xe560, 0x367b, 0x4c31, 0x7ddc, 0x1, 0x0);
        gbc.writeMem(0x5a6d, { 0xb6 });
        gbc.writeMem(0x7ddc, { 0x3e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9c12, gbc.sp());
        EXPECT(0x5a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0156
        gbc.setState(0x1acf, 0xc893, 0xcb30, 0x2612, 0x1584, 0x2578, 0x1, 0x0);
        gbc.writeMem(0x1acf, { 0xb6 });
        gbc.writeMem(0x2578, { 0x60 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc893, gbc.sp());
        EXPECT(0x1ad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0157
        gbc.setState(0xb682, 0x5b9f, 0x5f30, 0xaa9f, 0x1f80, 0x68bb, 0x1, 0x1);
        gbc.writeMem(0x68bb, { 0x7b });
        gbc.writeMem(0xb682, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5b9f, gbc.sp());
        EXPECT(0xb683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb682));
        // B6 0158
        gbc.setState(0xc482, 0xd7b8, 0xd3e0, 0x21c0, 0x968b, 0xd753, 0x1, 0x1);
        gbc.writeMem(0xc482, { 0xb6 });
        gbc.writeMem(0xd753, { 0xa });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd7b8, gbc.sp());
        EXPECT(0xc483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc482));
        EXPECT(0xa, gbc.readMem(0xd753));
        // B6 0159
        gbc.setState(0x9104, 0x9afa, 0xe240, 0xe21b, 0xcd16, 0x1131, 0x1, 0x0);
        gbc.writeMem(0x1131, { 0x5c });
        gbc.writeMem(0x9104, { 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9afa, gbc.sp());
        EXPECT(0x9105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9104));
        // B6 015A
        gbc.setState(0xb595, 0x49fb, 0xcff0, 0xff86, 0xb2f, 0x9abc, 0x0, 0x0);
        gbc.writeMem(0x9abc, { 0xcb });
        gbc.writeMem(0xb595, { 0xb6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x49fb, gbc.sp());
        EXPECT(0xb596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abc));
        EXPECT(0xb6, gbc.readMem(0xb595));
        // B6 015B
        gbc.setState(0x3a3, 0x1f93, 0xf5e0, 0xf7e, 0x4298, 0x7ea6, 0x0, 0x1);
        gbc.writeMem(0x3a3, { 0xb6 });
        gbc.writeMem(0x7ea6, { 0xdf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1f93, gbc.sp());
        EXPECT(0x3a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 015C
        gbc.setState(0x2796, 0x8218, 0x9730, 0x12d8, 0x5a69, 0xfd71, 0x0, 0x0);
        gbc.writeMem(0x2796, { 0xb6 });
        gbc.writeMem(0xfd71, { 0x3b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8218, gbc.sp());
        EXPECT(0x2797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xfd71));
        // B6 015D
        gbc.setState(0x6604, 0x5bf2, 0xea50, 0xa129, 0x38f4, 0x93f5, 0x1, 0x1);
        gbc.writeMem(0x6604, { 0xb6 });
        gbc.writeMem(0x93f5, { 0x7e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5bf2, gbc.sp());
        EXPECT(0x6605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x93f5));
        // B6 015E
        gbc.setState(0x180d, 0x3116, 0x3950, 0xa855, 0x6757, 0x999, 0x1, 0x1);
        gbc.writeMem(0x999, { 0xfd });
        gbc.writeMem(0x180d, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3116, gbc.sp());
        EXPECT(0x180e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 015F
        gbc.setState(0x7f25, 0x845b, 0xfc70, 0xa975, 0x571f, 0xaff0, 0x1, 0x1);
        gbc.writeMem(0x7f25, { 0xb6 });
        gbc.writeMem(0xaff0, { 0x1d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x845b, gbc.sp());
        EXPECT(0x7f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xaff0));
        // B6 0160
        gbc.setState(0x318c, 0xbb00, 0x5900, 0xc222, 0xfdce, 0xd633, 0x1, 0x1);
        gbc.writeMem(0x318c, { 0xb6 });
        gbc.writeMem(0xd633, { 0x82 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xbb00, gbc.sp());
        EXPECT(0x318d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xd633));
        // B6 0161
        gbc.setState(0x3777, 0x7604, 0xe180, 0x396f, 0x6edd, 0x2c2d, 0x1, 0x1);
        gbc.writeMem(0x2c2d, { 0xfe });
        gbc.writeMem(0x3777, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7604, gbc.sp());
        EXPECT(0x3778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0162
        gbc.setState(0x6f4e, 0xe2f8, 0xb070, 0xd68a, 0xb61e, 0x9ff, 0x0, 0x0);
        gbc.writeMem(0x9ff, { 0x3a });
        gbc.writeMem(0x6f4e, { 0xb6 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe2f8, gbc.sp());
        EXPECT(0x6f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0163
        gbc.setState(0x564c, 0x6cda, 0xce60, 0xe7ca, 0x74db, 0xf899, 0x1, 0x0);
        gbc.writeMem(0x564c, { 0xb6 });
        gbc.writeMem(0xf899, { 0x17 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6cda, gbc.sp());
        EXPECT(0x564d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xf899));
        // B6 0164
        gbc.setState(0xc915, 0x85f6, 0x79e0, 0x333, 0xfc08, 0x9ab2, 0x0, 0x0);
        gbc.writeMem(0x9ab2, { 0xe3 });
        gbc.writeMem(0xc915, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x85f6, gbc.sp());
        EXPECT(0xc916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x9ab2));
        EXPECT(0xb6, gbc.readMem(0xc915));
        // B6 0165
        gbc.setState(0x4c43, 0x2da1, 0x7640, 0xf32c, 0x672a, 0x5f15, 0x1, 0x0);
        gbc.writeMem(0x4c43, { 0xb6 });
        gbc.writeMem(0x5f15, { 0x53 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2da1, gbc.sp());
        EXPECT(0x4c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0166
        gbc.setState(0x1012, 0x9bd6, 0xb0c0, 0xd08f, 0xf19b, 0x9eb1, 0x1, 0x0);
        gbc.writeMem(0x1012, { 0xb6 });
        gbc.writeMem(0x9eb1, { 0xee });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9bd6, gbc.sp());
        EXPECT(0x1013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9eb1));
        // B6 0167
        gbc.setState(0x1fa9, 0xdd54, 0x90b0, 0xfc98, 0x2118, 0xb5c, 0x1, 0x0);
        gbc.writeMem(0xb5c, { 0xf });
        gbc.writeMem(0x1fa9, { 0xb6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdd54, gbc.sp());
        EXPECT(0x1faa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0168
        gbc.setState(0x9e2a, 0x3ffd, 0x25e0, 0x8d69, 0xe700, 0xdd6a, 0x1, 0x0);
        gbc.writeMem(0x9e2a, { 0xb6 });
        gbc.writeMem(0xdd6a, { 0x11 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3ffd, gbc.sp());
        EXPECT(0x9e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9e2a));
        EXPECT(0x11, gbc.readMem(0xdd6a));
        // B6 016A
        gbc.setState(0x7bea, 0x3b50, 0x25e0, 0x8b09, 0xf77, 0xc922, 0x0, 0x1);
        gbc.writeMem(0x7bea, { 0xb6 });
        gbc.writeMem(0xc922, { 0xa3 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3b50, gbc.sp());
        EXPECT(0x7beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xc922));
        // B6 016B
        gbc.setState(0xd4e5, 0x55ee, 0xf780, 0x35b6, 0x242c, 0x6ca2, 0x1, 0x0);
        gbc.writeMem(0x6ca2, { 0x54 });
        gbc.writeMem(0xd4e5, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x55ee, gbc.sp());
        EXPECT(0xd4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd4e5));
        // B6 016C
        gbc.setState(0x3d48, 0xd00c, 0x7d20, 0xff78, 0x5ab2, 0x57fc, 0x1, 0x0);
        gbc.writeMem(0x3d48, { 0xb6 });
        gbc.writeMem(0x57fc, { 0xa5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd00c, gbc.sp());
        EXPECT(0x3d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 016D
        gbc.setState(0x1461, 0x44fc, 0x7c10, 0xf70e, 0x73ab, 0xc77a, 0x0, 0x1);
        gbc.writeMem(0x1461, { 0xb6 });
        gbc.writeMem(0xc77a, { 0x70 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x44fc, gbc.sp());
        EXPECT(0x1462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xc77a));
        // B6 016E
        gbc.setState(0xadfb, 0xebae, 0x39a0, 0xa274, 0x41f0, 0xc157, 0x1, 0x1);
        gbc.writeMem(0xadfb, { 0xb6 });
        gbc.writeMem(0xc157, { 0xbc });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xebae, gbc.sp());
        EXPECT(0xadfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xadfb));
        EXPECT(0xbc, gbc.readMem(0xc157));
        // B6 016F
        gbc.setState(0x4f3c, 0x821, 0xa1e0, 0x1913, 0xbbbf, 0xedb3, 0x1, 0x0);
        gbc.writeMem(0x4f3c, { 0xb6 });
        gbc.writeMem(0xedb3, { 0x39 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x821, gbc.sp());
        EXPECT(0x4f3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xedb3));
        // B6 0170
        gbc.setState(0x806c, 0xeadd, 0xf6b0, 0xaa2d, 0x48e2, 0xc9ca, 0x0, 0x0);
        gbc.writeMem(0x806c, { 0xb6 });
        gbc.writeMem(0xc9ca, { 0xa4 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xeadd, gbc.sp());
        EXPECT(0x806d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x806c));
        EXPECT(0xa4, gbc.readMem(0xc9ca));
        // B6 0172
        gbc.setState(0x8619, 0xbecc, 0x6f70, 0xae71, 0xb422, 0x1c8e, 0x1, 0x0);
        gbc.writeMem(0x1c8e, { 0x38 });
        gbc.writeMem(0x8619, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbecc, gbc.sp());
        EXPECT(0x861a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8619));
        // B6 0173
        gbc.setState(0xd8a6, 0x8b0c, 0x2310, 0x48d6, 0xeecd, 0x40d5, 0x1, 0x1);
        gbc.writeMem(0x40d5, { 0x4e });
        gbc.writeMem(0xd8a6, { 0xb6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8b0c, gbc.sp());
        EXPECT(0xd8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd8a6));
        // B6 0174
        gbc.setState(0x19e3, 0x732c, 0xb470, 0x528, 0xfeb9, 0x679c, 0x1, 0x0);
        gbc.writeMem(0x19e3, { 0xb6 });
        gbc.writeMem(0x679c, { 0xc8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x732c, gbc.sp());
        EXPECT(0x19e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0175
        gbc.setState(0xb7b1, 0xf338, 0x3e10, 0x38f1, 0x201e, 0xff3b, 0x0, 0x1);
        gbc.writeMem(0xb7b1, { 0xb6 });
        gbc.writeMem(0xff3b, { 0xb2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf338, gbc.sp());
        EXPECT(0xb7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb7b1));
        EXPECT(0xb2, gbc.readMem(0xff3b));
        // B6 0176
        gbc.setState(0x9250, 0xca07, 0x9980, 0xa120, 0xe8e2, 0x7452, 0x1, 0x0);
        gbc.writeMem(0x7452, { 0x30 });
        gbc.writeMem(0x9250, { 0xb6 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xca07, gbc.sp());
        EXPECT(0x9251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9250));
        // B6 0177
        gbc.setState(0x2079, 0x9d49, 0xe9a0, 0x5ecb, 0xed70, 0x29db, 0x0, 0x0);
        gbc.writeMem(0x2079, { 0xb6 });
        gbc.writeMem(0x29db, { 0x49 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9d49, gbc.sp());
        EXPECT(0x207a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0178
        gbc.setState(0x677f, 0xcd4e, 0x4340, 0x2262, 0x63c8, 0xeba2, 0x0, 0x1);
        gbc.writeMem(0x677f, { 0xb6 });
        gbc.writeMem(0xeba2, { 0xd });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcd4e, gbc.sp());
        EXPECT(0x6780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xeba2));
        // B6 0179
        gbc.setState(0xe357, 0x5e83, 0x9b20, 0x62e6, 0x497, 0xd91a, 0x0, 0x1);
        gbc.writeMem(0xd91a, { 0xa4 });
        gbc.writeMem(0xe357, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5e83, gbc.sp());
        EXPECT(0xe358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xd91a));
        EXPECT(0xb6, gbc.readMem(0xe357));
        // B6 017A
        gbc.setState(0x6952, 0x4827, 0x64b0, 0x5517, 0x8505, 0xd22c, 0x0, 0x0);
        gbc.writeMem(0x6952, { 0xb6 });
        gbc.writeMem(0xd22c, { 0x8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4827, gbc.sp());
        EXPECT(0x6953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xd22c));
        // B6 017B
        gbc.setState(0xd145, 0x3aa8, 0x5080, 0xb103, 0x8efd, 0x105, 0x1, 0x1);
        gbc.writeMem(0x105, { 0xa });
        gbc.writeMem(0xd145, { 0xb6 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3aa8, gbc.sp());
        EXPECT(0xd146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd145));
        // B6 017C
        gbc.setState(0x150d, 0x4cc9, 0x8820, 0x6d8e, 0x3419, 0xf582, 0x1, 0x0);
        gbc.writeMem(0x150d, { 0xb6 });
        gbc.writeMem(0xf582, { 0x4b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4cc9, gbc.sp());
        EXPECT(0x150e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xf582));
        // B6 017D
        gbc.setState(0x7552, 0x334e, 0xbb90, 0xb763, 0x232, 0xc164, 0x0, 0x0);
        gbc.writeMem(0x7552, { 0xb6 });
        gbc.writeMem(0xc164, { 0x6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x334e, gbc.sp());
        EXPECT(0x7553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc164));
        // B6 017E
        gbc.setState(0xbe41, 0x5370, 0x6bf0, 0x7efe, 0x80d3, 0x82b1, 0x1, 0x1);
        gbc.writeMem(0x82b1, { 0x8e });
        gbc.writeMem(0xbe41, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5370, gbc.sp());
        EXPECT(0xbe42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x82b1));
        EXPECT(0xb6, gbc.readMem(0xbe41));
        // B6 017F
        gbc.setState(0xd448, 0xde7a, 0x46c0, 0xebf0, 0x89a3, 0x3b8a, 0x0, 0x1);
        gbc.writeMem(0x3b8a, { 0x28 });
        gbc.writeMem(0xd448, { 0xb6 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xde7a, gbc.sp());
        EXPECT(0xd449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd448));
        // B6 0180
        gbc.setState(0x30dc, 0xc4e0, 0x2f10, 0x9a54, 0xf971, 0x724d, 0x0, 0x1);
        gbc.writeMem(0x30dc, { 0xb6 });
        gbc.writeMem(0x724d, { 0xa5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc4e0, gbc.sp());
        EXPECT(0x30dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0182
        gbc.setState(0x36ea, 0x438, 0xe630, 0x2cf4, 0x701e, 0x8281, 0x0, 0x0);
        gbc.writeMem(0x36ea, { 0xb6 });
        gbc.writeMem(0x8281, { 0xb8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x438, gbc.sp());
        EXPECT(0x36eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8281));
        // B6 0183
        gbc.setState(0x42c5, 0x59c7, 0x5be0, 0x6ed1, 0x4609, 0xaa41, 0x0, 0x1);
        gbc.writeMem(0x42c5, { 0xb6 });
        gbc.writeMem(0xaa41, { 0xe3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x59c7, gbc.sp());
        EXPECT(0x42c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xaa41));
        // B6 0184
        gbc.setState(0xb148, 0x2e80, 0xce30, 0x7ea3, 0x82fa, 0x3783, 0x0, 0x1);
        gbc.writeMem(0x3783, { 0x50 });
        gbc.writeMem(0xb148, { 0xb6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2e80, gbc.sp());
        EXPECT(0xb149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb148));
        // B6 0185
        gbc.setState(0x4184, 0xb3aa, 0x9e20, 0x8fb8, 0xebf4, 0xce01, 0x1, 0x1);
        gbc.writeMem(0x4184, { 0xb6 });
        gbc.writeMem(0xce01, { 0xd5 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb3aa, gbc.sp());
        EXPECT(0x4185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xce01));
        // B6 0186
        gbc.setState(0xb0f8, 0x50f2, 0x62d0, 0x88b1, 0xb9bb, 0xa6c8, 0x1, 0x0);
        gbc.writeMem(0xa6c8, { 0x91 });
        gbc.writeMem(0xb0f8, { 0xb6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x50f2, gbc.sp());
        EXPECT(0xb0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa6c8));
        EXPECT(0xb6, gbc.readMem(0xb0f8));
        // B6 0187
        gbc.setState(0xba01, 0xe5d0, 0x8ae0, 0x1a51, 0x500, 0x248b, 0x0, 0x1);
        gbc.writeMem(0x248b, { 0xd7 });
        gbc.writeMem(0xba01, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe5d0, gbc.sp());
        EXPECT(0xba02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xba01));
        // B6 0188
        gbc.setState(0xb3a0, 0xfbaf, 0xfc90, 0xb6df, 0xc711, 0x95f, 0x1, 0x1);
        gbc.writeMem(0x95f, { 0xfb });
        gbc.writeMem(0xb3a0, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfbaf, gbc.sp());
        EXPECT(0xb3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb3a0));
        // B6 0189
        gbc.setState(0x1aa2, 0x1eb5, 0x6050, 0x2577, 0xfae6, 0x6d1e, 0x1, 0x0);
        gbc.writeMem(0x1aa2, { 0xb6 });
        gbc.writeMem(0x6d1e, { 0x51 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1eb5, gbc.sp());
        EXPECT(0x1aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 018A
        gbc.setState(0x31f5, 0xfc38, 0xea50, 0xede1, 0x8b5d, 0x347, 0x1, 0x1);
        gbc.writeMem(0x347, { 0x5f });
        gbc.writeMem(0x31f5, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfc38, gbc.sp());
        EXPECT(0x31f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 018B
        gbc.setState(0xaf0b, 0xde51, 0xfb10, 0x2b24, 0xe387, 0x262a, 0x1, 0x1);
        gbc.writeMem(0x262a, { 0x3c });
        gbc.writeMem(0xaf0b, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xde51, gbc.sp());
        EXPECT(0xaf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xaf0b));
        // B6 018C
        gbc.setState(0x419d, 0x1d0b, 0x8480, 0x6497, 0x5aaf, 0x7791, 0x1, 0x1);
        gbc.writeMem(0x419d, { 0xb6 });
        gbc.writeMem(0x7791, { 0x6e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1d0b, gbc.sp());
        EXPECT(0x419e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 018D
        gbc.setState(0xd689, 0x8048, 0x48f0, 0x511, 0xfd41, 0xe283, 0x1, 0x0);
        gbc.writeMem(0xd689, { 0xb6 });
        gbc.writeMem(0xe283, { 0x55 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8048, gbc.sp());
        EXPECT(0xd68a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd689));
        EXPECT(0x55, gbc.readMem(0xe283));
        // B6 018E
        gbc.setState(0xb76c, 0x1c92, 0xc250, 0x3b07, 0xfd25, 0xeaa4, 0x0, 0x0);
        gbc.writeMem(0xb76c, { 0xb6 });
        gbc.writeMem(0xeaa4, { 0x87 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1c92, gbc.sp());
        EXPECT(0xb76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb76c));
        EXPECT(0x87, gbc.readMem(0xeaa4));
        // B6 018F
        gbc.setState(0x91ce, 0xdda6, 0x8820, 0x7721, 0xc33b, 0xfb86, 0x0, 0x0);
        gbc.writeMem(0x91ce, { 0xb6 });
        gbc.writeMem(0xfb86, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdda6, gbc.sp());
        EXPECT(0x91cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x91ce));
        EXPECT(0xdf, gbc.readMem(0xfb86));
        // B6 0190
        gbc.setState(0x46cd, 0x9467, 0x7da0, 0x6f73, 0x618e, 0xbf, 0x1, 0x1);
        gbc.writeMem(0xbf, { 0x36 });
        gbc.writeMem(0x46cd, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9467, gbc.sp());
        EXPECT(0x46ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0191
        gbc.setState(0x3c9e, 0x2e7a, 0x1950, 0x8829, 0xf501, 0x2473, 0x1, 0x0);
        gbc.writeMem(0x2473, { 0x78 });
        gbc.writeMem(0x3c9e, { 0xb6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2e7a, gbc.sp());
        EXPECT(0x3c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0192
        gbc.setState(0x5f76, 0x5a8b, 0x12b0, 0x8388, 0x4a21, 0xfefb, 0x0, 0x1);
        gbc.writeMem(0x5f76, { 0xb6 });
        gbc.writeMem(0xfefb, { 0xe8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5a8b, gbc.sp());
        EXPECT(0x5f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xfefb));
        // B6 0193
        gbc.setState(0x54a8, 0xa0da, 0x7f10, 0xdfe3, 0x9f29, 0x7938, 0x1, 0x1);
        gbc.writeMem(0x54a8, { 0xb6 });
        gbc.writeMem(0x7938, { 0x84 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa0da, gbc.sp());
        EXPECT(0x54a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0194
        gbc.setState(0xb614, 0x1e07, 0x1800, 0x584e, 0x8b38, 0x7647, 0x1, 0x0);
        gbc.writeMem(0x7647, { 0xc });
        gbc.writeMem(0xb614, { 0xb6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1e07, gbc.sp());
        EXPECT(0xb615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb614));
        // B6 0195
        gbc.setState(0xa722, 0x1978, 0x49d0, 0x1f5b, 0x1d08, 0x3081, 0x0, 0x1);
        gbc.writeMem(0x3081, { 0xdc });
        gbc.writeMem(0xa722, { 0xb6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1978, gbc.sp());
        EXPECT(0xa723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa722));
        // B6 0196
        gbc.setState(0x8451, 0x9bd6, 0xfaf0, 0x63ea, 0xc110, 0xe2ab, 0x0, 0x0);
        gbc.writeMem(0x8451, { 0xb6 });
        gbc.writeMem(0xe2ab, { 0x27 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9bd6, gbc.sp());
        EXPECT(0x8452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8451));
        EXPECT(0x27, gbc.readMem(0xe2ab));
        // B6 0197
        gbc.setState(0x86a, 0x8230, 0x25c0, 0xb672, 0xb6f8, 0x40c0, 0x0, 0x1);
        gbc.writeMem(0x86a, { 0xb6 });
        gbc.writeMem(0x40c0, { 0x8d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8230, gbc.sp());
        EXPECT(0x86b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0198
        gbc.setState(0xc0b3, 0x4719, 0x6b50, 0xb12e, 0x29e8, 0x6c33, 0x0, 0x0);
        gbc.writeMem(0x6c33, { 0xbc });
        gbc.writeMem(0xc0b3, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4719, gbc.sp());
        EXPECT(0xc0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc0b3));
        // B6 0199
        gbc.setState(0xc91, 0xf656, 0x3b40, 0x2fb6, 0x457b, 0xcfb7, 0x1, 0x1);
        gbc.writeMem(0xc91, { 0xb6 });
        gbc.writeMem(0xcfb7, { 0x4e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf656, gbc.sp());
        EXPECT(0xc92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcfb7));
        // B6 019A
        gbc.setState(0xb1ab, 0x8094, 0x3390, 0x69ba, 0x8f71, 0xf21e, 0x1, 0x0);
        gbc.writeMem(0xb1ab, { 0xb6 });
        gbc.writeMem(0xf21e, { 0x88 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8094, gbc.sp());
        EXPECT(0xb1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb1ab));
        EXPECT(0x88, gbc.readMem(0xf21e));
        // B6 019D
        gbc.setState(0x712f, 0x2a0, 0x2b30, 0x54d8, 0x96f8, 0xb623, 0x1, 0x0);
        gbc.writeMem(0x712f, { 0xb6 });
        gbc.writeMem(0xb623, { 0xac });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2a0, gbc.sp());
        EXPECT(0x7130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb623));
        // B6 019E
        gbc.setState(0xba61, 0xde70, 0x2060, 0x1c4a, 0xe3d5, 0x75fe, 0x0, 0x1);
        gbc.writeMem(0x75fe, { 0x19 });
        gbc.writeMem(0xba61, { 0xb6 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xde70, gbc.sp());
        EXPECT(0xba62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xba61));
        // B6 019F
        gbc.setState(0x770b, 0x8be6, 0x4ef0, 0xccba, 0xf30e, 0xca65, 0x1, 0x1);
        gbc.writeMem(0x770b, { 0xb6 });
        gbc.writeMem(0xca65, { 0xc });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8be6, gbc.sp());
        EXPECT(0x770c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xca65));
        // B6 01A0
        gbc.setState(0x262e, 0x8c7a, 0xffc0, 0x7b79, 0x4ad5, 0xa089, 0x1, 0x0);
        gbc.writeMem(0x262e, { 0xb6 });
        gbc.writeMem(0xa089, { 0x84 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8c7a, gbc.sp());
        EXPECT(0x262f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xa089));
        // B6 01A1
        gbc.setState(0x6463, 0x1ce4, 0x3d50, 0xabbd, 0x9988, 0x274, 0x1, 0x1);
        gbc.writeMem(0x274, { 0xcb });
        gbc.writeMem(0x6463, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1ce4, gbc.sp());
        EXPECT(0x6464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01A2
        gbc.setState(0x815, 0xae01, 0xe9f0, 0x3512, 0x8ee3, 0xeb8f, 0x0, 0x1);
        gbc.writeMem(0x815, { 0xb6 });
        gbc.writeMem(0xeb8f, { 0xd5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xae01, gbc.sp());
        EXPECT(0x816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xeb8f));
        // B6 01A3
        gbc.setState(0xa7b8, 0x1429, 0xa720, 0x5e89, 0xcf8a, 0xf1fb, 0x0, 0x0);
        gbc.writeMem(0xa7b8, { 0xb6 });
        gbc.writeMem(0xf1fb, { 0xe8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1429, gbc.sp());
        EXPECT(0xa7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa7b8));
        EXPECT(0xe8, gbc.readMem(0xf1fb));
        // B6 01A4
        gbc.setState(0x2d28, 0xe8a4, 0xe260, 0x5340, 0x1967, 0x475, 0x0, 0x1);
        gbc.writeMem(0x475, { 0x6f });
        gbc.writeMem(0x2d28, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe8a4, gbc.sp());
        EXPECT(0x2d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01A5
        gbc.setState(0x313a, 0x873, 0x3880, 0x4a1a, 0x8987, 0xc3ed, 0x1, 0x0);
        gbc.writeMem(0x313a, { 0xb6 });
        gbc.writeMem(0xc3ed, { 0x8a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x873, gbc.sp());
        EXPECT(0x313b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc3ed));
        // B6 01A6
        gbc.setState(0x4f9b, 0x4bc8, 0xa4a0, 0x9f9a, 0xf326, 0x43f9, 0x1, 0x1);
        gbc.writeMem(0x43f9, { 0xbd });
        gbc.writeMem(0x4f9b, { 0xb6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4bc8, gbc.sp());
        EXPECT(0x4f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01A7
        gbc.setState(0xcdd9, 0x8abd, 0x92d0, 0x52de, 0xbb94, 0xbd16, 0x1, 0x0);
        gbc.writeMem(0xbd16, { 0x16 });
        gbc.writeMem(0xcdd9, { 0xb6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8abd, gbc.sp());
        EXPECT(0xcdda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xbd16));
        EXPECT(0xb6, gbc.readMem(0xcdd9));
        // B6 01A8
        gbc.setState(0x1e48, 0xb820, 0x2b50, 0xcb09, 0x99ba, 0x7117, 0x0, 0x1);
        gbc.writeMem(0x1e48, { 0xb6 });
        gbc.writeMem(0x7117, { 0x56 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb820, gbc.sp());
        EXPECT(0x1e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01A9
        gbc.setState(0x54d6, 0xb3ef, 0x200, 0xd88, 0xe5dd, 0xa471, 0x0, 0x1);
        gbc.writeMem(0x54d6, { 0xb6 });
        gbc.writeMem(0xa471, { 0x21 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb3ef, gbc.sp());
        EXPECT(0x54d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa471));
        // B6 01AA
        gbc.setState(0x9c78, 0x7877, 0xee10, 0xd896, 0x9d6b, 0x77d9, 0x1, 0x1);
        gbc.writeMem(0x77d9, { 0x24 });
        gbc.writeMem(0x9c78, { 0xb6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7877, gbc.sp());
        EXPECT(0x9c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9c78));
        // B6 01AB
        gbc.setState(0x42da, 0x5802, 0x9c20, 0x2872, 0xbf1e, 0xfc40, 0x1, 0x1);
        gbc.writeMem(0x42da, { 0xb6 });
        gbc.writeMem(0xfc40, { 0x7b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5802, gbc.sp());
        EXPECT(0x42db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xfc40));
        // B6 01AC
        gbc.setState(0x9569, 0xda41, 0x3670, 0x74ec, 0x639e, 0xe154, 0x0, 0x1);
        gbc.writeMem(0x9569, { 0xb6 });
        gbc.writeMem(0xe154, { 0x23 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xda41, gbc.sp());
        EXPECT(0x956a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9569));
        EXPECT(0x23, gbc.readMem(0xe154));
        // B6 01AD
        gbc.setState(0xc788, 0xa7df, 0x4bd0, 0x825f, 0x9eea, 0x1612, 0x0, 0x0);
        gbc.writeMem(0x1612, { 0x3c });
        gbc.writeMem(0xc788, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa7df, gbc.sp());
        EXPECT(0xc789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc788));
        // B6 01AE
        gbc.setState(0xc1ac, 0x18d9, 0x1100, 0xd8f6, 0x947f, 0x48c4, 0x1, 0x1);
        gbc.writeMem(0x48c4, { 0x59 });
        gbc.writeMem(0xc1ac, { 0xb6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x18d9, gbc.sp());
        EXPECT(0xc1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc1ac));
        // B6 01AF
        gbc.setState(0x5fb9, 0xe49d, 0x7c70, 0x2468, 0x8113, 0x63d0, 0x0, 0x1);
        gbc.writeMem(0x5fb9, { 0xb6 });
        gbc.writeMem(0x63d0, { 0x30 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe49d, gbc.sp());
        EXPECT(0x5fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01B0
        gbc.setState(0x9dda, 0xdcd7, 0xd0d0, 0xb823, 0x3788, 0x4846, 0x1, 0x1);
        gbc.writeMem(0x4846, { 0xc6 });
        gbc.writeMem(0x9dda, { 0xb6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdcd7, gbc.sp());
        EXPECT(0x9ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9dda));
        // B6 01B1
        gbc.setState(0xdab4, 0xb2b7, 0x8060, 0xcdf8, 0x3e8e, 0x5b47, 0x1, 0x1);
        gbc.writeMem(0x5b47, { 0xbc });
        gbc.writeMem(0xdab4, { 0xb6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb2b7, gbc.sp());
        EXPECT(0xdab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdab4));
        // B6 01B2
        gbc.setState(0xcbfb, 0xdb0b, 0xbbe0, 0x295e, 0x7916, 0xc63a, 0x0, 0x1);
        gbc.writeMem(0xc63a, { 0x95 });
        gbc.writeMem(0xcbfb, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdb0b, gbc.sp());
        EXPECT(0xcbfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc63a));
        EXPECT(0xb6, gbc.readMem(0xcbfb));
        // B6 01B3
        gbc.setState(0x1904, 0xa1bf, 0xdca0, 0x3558, 0xff79, 0xcc8f, 0x0, 0x0);
        gbc.writeMem(0x1904, { 0xb6 });
        gbc.writeMem(0xcc8f, { 0xd9 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa1bf, gbc.sp());
        EXPECT(0x1905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xcc8f));
        // B6 01B4
        gbc.setState(0xa1a9, 0xa28f, 0x9700, 0xb6f5, 0x6af3, 0x90f4, 0x0, 0x1);
        gbc.writeMem(0x90f4, { 0x9a });
        gbc.writeMem(0xa1a9, { 0xb6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa28f, gbc.sp());
        EXPECT(0xa1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x90f4));
        EXPECT(0xb6, gbc.readMem(0xa1a9));
        // B6 01B5
        gbc.setState(0x41a3, 0x4458, 0x8340, 0x87b9, 0xc0aa, 0x2ce, 0x0, 0x0);
        gbc.writeMem(0x2ce, { 0xee });
        gbc.writeMem(0x41a3, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4458, gbc.sp());
        EXPECT(0x41a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01B6
        gbc.setState(0xde66, 0x132e, 0xfa30, 0x1a5, 0x3677, 0xf410, 0x0, 0x0);
        gbc.writeMem(0xde66, { 0xb6 });
        gbc.writeMem(0xf410, { 0xae });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x132e, gbc.sp());
        EXPECT(0xde67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xde66));
        EXPECT(0xae, gbc.readMem(0xf410));
        // B6 01B7
        gbc.setState(0x5b2a, 0xf828, 0x9b90, 0xf3f5, 0x6a5c, 0x423a, 0x1, 0x1);
        gbc.writeMem(0x423a, { 0x26 });
        gbc.writeMem(0x5b2a, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf828, gbc.sp());
        EXPECT(0x5b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01B9
        gbc.setState(0x2408, 0x3616, 0xc710, 0x92ea, 0xb06b, 0xe86e, 0x0, 0x1);
        gbc.writeMem(0x2408, { 0xb6 });
        gbc.writeMem(0xe86e, { 0xbb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3616, gbc.sp());
        EXPECT(0x2409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xe86e));
        // B6 01BA
        gbc.setState(0x4c0a, 0x9e27, 0x5090, 0xd5f4, 0x4aa0, 0xaebd, 0x1, 0x1);
        gbc.writeMem(0x4c0a, { 0xb6 });
        gbc.writeMem(0xaebd, { 0x63 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9e27, gbc.sp());
        EXPECT(0x4c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xaebd));
        // B6 01BB
        gbc.setState(0xdcd5, 0xe8ab, 0x28c0, 0x1d6f, 0x54c1, 0x5515, 0x0, 0x1);
        gbc.writeMem(0x5515, { 0x5f });
        gbc.writeMem(0xdcd5, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe8ab, gbc.sp());
        EXPECT(0xdcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdcd5));
        // B6 01BC
        gbc.setState(0xda31, 0xa427, 0xc790, 0x5797, 0x421b, 0xe8ce, 0x0, 0x1);
        gbc.writeMem(0xda31, { 0xb6 });
        gbc.writeMem(0xe8ce, { 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa427, gbc.sp());
        EXPECT(0xda32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xda31));
        EXPECT(0xa7, gbc.readMem(0xe8ce));
        // B6 01BD
        gbc.setState(0x55f7, 0x58f4, 0xeb50, 0xc670, 0xf893, 0x4e68, 0x0, 0x0);
        gbc.writeMem(0x4e68, { 0xe7 });
        gbc.writeMem(0x55f7, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x58f4, gbc.sp());
        EXPECT(0x55f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01BE
        gbc.setState(0x9c1b, 0x629, 0x5450, 0x848b, 0x2aae, 0xabcc, 0x0, 0x1);
        gbc.writeMem(0x9c1b, { 0xb6 });
        gbc.writeMem(0xabcc, { 0x12 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x629, gbc.sp());
        EXPECT(0x9c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9c1b));
        EXPECT(0x12, gbc.readMem(0xabcc));
        // B6 01C0
        gbc.setState(0x3213, 0x8fd3, 0xcc90, 0x8597, 0x756d, 0x270e, 0x0, 0x1);
        gbc.writeMem(0x270e, { 0x13 });
        gbc.writeMem(0x3213, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8fd3, gbc.sp());
        EXPECT(0x3214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01C1
        gbc.setState(0x66e1, 0xe7b8, 0x9550, 0xe953, 0x863a, 0xe28c, 0x1, 0x1);
        gbc.writeMem(0x66e1, { 0xb6 });
        gbc.writeMem(0xe28c, { 0x4a });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe7b8, gbc.sp());
        EXPECT(0x66e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xe28c));
        // B6 01C2
        gbc.setState(0xde52, 0x37c5, 0x5260, 0x2992, 0x2bff, 0x5338, 0x0, 0x0);
        gbc.writeMem(0x5338, { 0x39 });
        gbc.writeMem(0xde52, { 0xb6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x37c5, gbc.sp());
        EXPECT(0xde53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xde52));
        // B6 01C3
        gbc.setState(0x67c, 0xea49, 0x1f80, 0x564c, 0x1bb9, 0x31b3, 0x0, 0x1);
        gbc.writeMem(0x67c, { 0xb6 });
        gbc.writeMem(0x31b3, { 0xd1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xea49, gbc.sp());
        EXPECT(0x67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01C4
        gbc.setState(0x249d, 0xe438, 0xa180, 0xa5f5, 0xc779, 0xb7d4, 0x1, 0x1);
        gbc.writeMem(0x249d, { 0xb6 });
        gbc.writeMem(0xb7d4, { 0xb2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe438, gbc.sp());
        EXPECT(0x249e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xb7d4));
        // B6 01C5
        gbc.setState(0x3e7a, 0x90a6, 0x2b20, 0xde04, 0x4902, 0x8241, 0x0, 0x1);
        gbc.writeMem(0x3e7a, { 0xb6 });
        gbc.writeMem(0x8241, { 0x7a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x90a6, gbc.sp());
        EXPECT(0x3e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8241));
        // B6 01C6
        gbc.setState(0x2006, 0x4267, 0x1c10, 0xe307, 0xba44, 0xaaad, 0x0, 0x0);
        gbc.writeMem(0x2006, { 0xb6 });
        gbc.writeMem(0xaaad, { 0xa4 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4267, gbc.sp());
        EXPECT(0x2007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xaaad));
        // B6 01C7
        gbc.setState(0x3d66, 0x9fab, 0xf320, 0x413a, 0x4cdb, 0x868d, 0x0, 0x1);
        gbc.writeMem(0x3d66, { 0xb6 });
        gbc.writeMem(0x868d, { 0xc9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9fab, gbc.sp());
        EXPECT(0x3d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x868d));
        // B6 01C8
        gbc.setState(0xa457, 0x92b7, 0xca50, 0xf508, 0x669d, 0x2238, 0x0, 0x1);
        gbc.writeMem(0x2238, { 0x33 });
        gbc.writeMem(0xa457, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x92b7, gbc.sp());
        EXPECT(0xa458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa457));
        // B6 01C9
        gbc.setState(0x3a7d, 0x4350, 0xd4f0, 0xa9e, 0xbb8b, 0x310, 0x1, 0x1);
        gbc.writeMem(0x310, { 0xb2 });
        gbc.writeMem(0x3a7d, { 0xb6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4350, gbc.sp());
        EXPECT(0x3a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01CB
        gbc.setState(0xdcd7, 0x616e, 0xc280, 0x5c8b, 0xb6ee, 0x4106, 0x1, 0x0);
        gbc.writeMem(0x4106, { 0x66 });
        gbc.writeMem(0xdcd7, { 0xb6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x616e, gbc.sp());
        EXPECT(0xdcd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdcd7));
        // B6 01CC
        gbc.setState(0xd085, 0xe401, 0xeae0, 0xd3b5, 0xb1f8, 0x8c68, 0x0, 0x0);
        gbc.writeMem(0x8c68, { 0x4c });
        gbc.writeMem(0xd085, { 0xb6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe401, gbc.sp());
        EXPECT(0xd086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8c68));
        EXPECT(0xb6, gbc.readMem(0xd085));
        // B6 01CD
        gbc.setState(0x4f18, 0x34a5, 0x8bf0, 0x8b11, 0xb873, 0xfda3, 0x1, 0x0);
        gbc.writeMem(0x4f18, { 0xb6 });
        gbc.writeMem(0xfda3, { 0x79 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x34a5, gbc.sp());
        EXPECT(0x4f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xfda3));
        // B6 01CE
        gbc.setState(0xa03, 0xd5a3, 0xc880, 0xe819, 0xab19, 0xe4c2, 0x1, 0x0);
        gbc.writeMem(0xa03, { 0xb6 });
        gbc.writeMem(0xe4c2, { 0x6d });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd5a3, gbc.sp());
        EXPECT(0xa04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe4c2));
        // B6 01CF
        gbc.setState(0x8756, 0x5043, 0x2490, 0xc9ea, 0x2edf, 0x161, 0x0, 0x1);
        gbc.writeMem(0x161, { 0xe0 });
        gbc.writeMem(0x8756, { 0xb6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5043, gbc.sp());
        EXPECT(0x8757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8756));
        // B6 01D0
        gbc.setState(0x8241, 0x26f2, 0x4290, 0xb5ba, 0xbef2, 0xc820, 0x1, 0x0);
        gbc.writeMem(0x8241, { 0xb6 });
        gbc.writeMem(0xc820, { 0xec });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x26f2, gbc.sp());
        EXPECT(0x8242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8241));
        EXPECT(0xec, gbc.readMem(0xc820));
        // B6 01D1
        gbc.setState(0x3ecb, 0x9d60, 0x20c0, 0x6c84, 0xe472, 0x7311, 0x1, 0x1);
        gbc.writeMem(0x3ecb, { 0xb6 });
        gbc.writeMem(0x7311, { 0xcf });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9d60, gbc.sp());
        EXPECT(0x3ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01D3
        gbc.setState(0x5fe8, 0x8836, 0x9f70, 0xffc7, 0x82a8, 0x6409, 0x0, 0x1);
        gbc.writeMem(0x5fe8, { 0xb6 });
        gbc.writeMem(0x6409, { 0xdc });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8836, gbc.sp());
        EXPECT(0x5fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01D4
        gbc.setState(0x9080, 0x48df, 0xdb70, 0xe391, 0x5e24, 0x2e76, 0x1, 0x1);
        gbc.writeMem(0x2e76, { 0x42 });
        gbc.writeMem(0x9080, { 0xb6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x48df, gbc.sp());
        EXPECT(0x9081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9080));
        // B6 01D6
        gbc.setState(0x56b0, 0x4eaf, 0x9240, 0xfb5a, 0x56a5, 0xe1cf, 0x1, 0x0);
        gbc.writeMem(0x56b0, { 0xb6 });
        gbc.writeMem(0xe1cf, { 0xcd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4eaf, gbc.sp());
        EXPECT(0x56b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xe1cf));
        // B6 01D7
        gbc.setState(0x143d, 0x28d9, 0x8b40, 0xbe38, 0x6c23, 0xf5b0, 0x1, 0x1);
        gbc.writeMem(0x143d, { 0xb6 });
        gbc.writeMem(0xf5b0, { 0x27 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x28d9, gbc.sp());
        EXPECT(0x143e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xf5b0));
        // B6 01D8
        gbc.setState(0xcbfd, 0x49d2, 0x7c20, 0x1a6a, 0x872c, 0x95b1, 0x1, 0x1);
        gbc.writeMem(0x95b1, { 0xed });
        gbc.writeMem(0xcbfd, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x49d2, gbc.sp());
        EXPECT(0xcbfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x95b1));
        EXPECT(0xb6, gbc.readMem(0xcbfd));
        // B6 01D9
        gbc.setState(0x33ae, 0x6f50, 0x2cb0, 0xaa14, 0xd8c3, 0x989, 0x1, 0x1);
        gbc.writeMem(0x989, { 0xd9 });
        gbc.writeMem(0x33ae, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6f50, gbc.sp());
        EXPECT(0x33af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01DA
        gbc.setState(0x7d39, 0x4b96, 0xc0b0, 0x65f, 0x41f6, 0x50c3, 0x1, 0x0);
        gbc.writeMem(0x50c3, { 0x19 });
        gbc.writeMem(0x7d39, { 0xb6 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4b96, gbc.sp());
        EXPECT(0x7d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01DB
        gbc.setState(0x4695, 0x1f1d, 0x2fd0, 0x56d9, 0x62e2, 0xe4d, 0x0, 0x0);
        gbc.writeMem(0xe4d, { 0x11 });
        gbc.writeMem(0x4695, { 0xb6 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1f1d, gbc.sp());
        EXPECT(0x4696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01DC
        gbc.setState(0x4325, 0xe3bd, 0xe680, 0xffff, 0xf1b0, 0x2044, 0x0, 0x0);
        gbc.writeMem(0x2044, { 0xb5 });
        gbc.writeMem(0x4325, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe3bd, gbc.sp());
        EXPECT(0x4326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01DD
        gbc.setState(0x37c6, 0xcc13, 0x2050, 0xffa0, 0x1d4, 0x314c, 0x1, 0x1);
        gbc.writeMem(0x314c, { 0xed });
        gbc.writeMem(0x37c6, { 0xb6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcc13, gbc.sp());
        EXPECT(0x37c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01DE
        gbc.setState(0x3e04, 0x6fe9, 0xcaa0, 0x1f54, 0xec87, 0x2608, 0x1, 0x1);
        gbc.writeMem(0x2608, { 0x9a });
        gbc.writeMem(0x3e04, { 0xb6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6fe9, gbc.sp());
        EXPECT(0x3e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01DF
        gbc.setState(0x364f, 0x6bfc, 0xc620, 0x79c0, 0x7c4b, 0x9937, 0x0, 0x1);
        gbc.writeMem(0x364f, { 0xb6 });
        gbc.writeMem(0x9937, { 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6bfc, gbc.sp());
        EXPECT(0x3650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9937));
        // B6 01E0
        gbc.setState(0xbf9f, 0x345c, 0xe840, 0x90b4, 0xf39e, 0xc2b3, 0x0, 0x1);
        gbc.writeMem(0xbf9f, { 0xb6 });
        gbc.writeMem(0xc2b3, { 0xe9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x345c, gbc.sp());
        EXPECT(0xbfa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xbf9f));
        EXPECT(0xe9, gbc.readMem(0xc2b3));
        // B6 01E1
        gbc.setState(0x2de7, 0xda5a, 0x4a30, 0x72d0, 0x55c1, 0x2e44, 0x0, 0x0);
        gbc.writeMem(0x2de7, { 0xb6 });
        gbc.writeMem(0x2e44, { 0xf0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xda5a, gbc.sp());
        EXPECT(0x2de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01E2
        gbc.setState(0x358e, 0x1862, 0x95a0, 0xddee, 0xb89e, 0x767e, 0x0, 0x0);
        gbc.writeMem(0x358e, { 0xb6 });
        gbc.writeMem(0x767e, { 0x91 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1862, gbc.sp());
        EXPECT(0x358f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01E3
        gbc.setState(0xcadb, 0x1c6d, 0xfb40, 0xed9d, 0x64d6, 0xbd87, 0x1, 0x1);
        gbc.writeMem(0xbd87, { 0x98 });
        gbc.writeMem(0xcadb, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1c6d, gbc.sp());
        EXPECT(0xcadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xbd87));
        EXPECT(0xb6, gbc.readMem(0xcadb));
        // B6 01E4
        gbc.setState(0x5ab0, 0x1254, 0xff40, 0xa99c, 0xc58a, 0x544e, 0x1, 0x1);
        gbc.writeMem(0x544e, { 0xcb });
        gbc.writeMem(0x5ab0, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1254, gbc.sp());
        EXPECT(0x5ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01E5
        gbc.setState(0x9df2, 0x85e5, 0xda50, 0x13a4, 0xc2ea, 0x8669, 0x1, 0x0);
        gbc.writeMem(0x8669, { 0x9d });
        gbc.writeMem(0x9df2, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x85e5, gbc.sp());
        EXPECT(0x9df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8669));
        EXPECT(0xb6, gbc.readMem(0x9df2));
        // B6 01E6
        gbc.setState(0x62d5, 0x9fc9, 0x9c50, 0xea49, 0x595b, 0x522c, 0x0, 0x0);
        gbc.writeMem(0x522c, { 0xfe });
        gbc.writeMem(0x62d5, { 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9fc9, gbc.sp());
        EXPECT(0x62d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01E7
        gbc.setState(0x1b13, 0x803b, 0xa570, 0x13a0, 0x2f0d, 0x50a6, 0x0, 0x1);
        gbc.writeMem(0x1b13, { 0xb6 });
        gbc.writeMem(0x50a6, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x803b, gbc.sp());
        EXPECT(0x1b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01E8
        gbc.setState(0x1896, 0x4161, 0x3700, 0xca6b, 0xf53c, 0x9b70, 0x0, 0x1);
        gbc.writeMem(0x1896, { 0xb6 });
        gbc.writeMem(0x9b70, { 0xe });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4161, gbc.sp());
        EXPECT(0x1897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9b70));
        // B6 01E9
        gbc.setState(0x6f07, 0x809b, 0xe4a0, 0x739e, 0xcfa7, 0x1fd1, 0x1, 0x1);
        gbc.writeMem(0x1fd1, { 0xae });
        gbc.writeMem(0x6f07, { 0xb6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x809b, gbc.sp());
        EXPECT(0x6f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01EA
        gbc.setState(0xe259, 0xc61a, 0x6770, 0xa845, 0x6870, 0x2fc6, 0x1, 0x1);
        gbc.writeMem(0x2fc6, { 0xfd });
        gbc.writeMem(0xe259, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc61a, gbc.sp());
        EXPECT(0xe25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe259));
        // B6 01EB
        gbc.setState(0x1c9d, 0xe43d, 0x9970, 0xec8d, 0x1282, 0x6c7f, 0x1, 0x0);
        gbc.writeMem(0x1c9d, { 0xb6 });
        gbc.writeMem(0x6c7f, { 0xce });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe43d, gbc.sp());
        EXPECT(0x1c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01EC
        gbc.setState(0x6258, 0xad73, 0x6170, 0xd4f8, 0x7e24, 0x9d39, 0x0, 0x1);
        gbc.writeMem(0x6258, { 0xb6 });
        gbc.writeMem(0x9d39, { 0xd8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xad73, gbc.sp());
        EXPECT(0x6259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x9d39));
        // B6 01EE
        gbc.setState(0xab24, 0xda7, 0xc260, 0xf1f8, 0x3176, 0x9d6b, 0x1, 0x1);
        gbc.writeMem(0x9d6b, { 0x9d });
        gbc.writeMem(0xab24, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xda7, gbc.sp());
        EXPECT(0xab25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9d6b));
        EXPECT(0xb6, gbc.readMem(0xab24));
        // B6 01EF
        gbc.setState(0x8364, 0x1a3c, 0x36d0, 0x4390, 0x288d, 0xb625, 0x0, 0x0);
        gbc.writeMem(0x8364, { 0xb6 });
        gbc.writeMem(0xb625, { 0x6b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1a3c, gbc.sp());
        EXPECT(0x8365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8364));
        EXPECT(0x6b, gbc.readMem(0xb625));
        // B6 01F0
        gbc.setState(0xa809, 0xb906, 0x9fc0, 0xf7b3, 0x97c, 0x9714, 0x0, 0x0);
        gbc.writeMem(0x9714, { 0x91 });
        gbc.writeMem(0xa809, { 0xb6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb906, gbc.sp());
        EXPECT(0xa80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9714));
        EXPECT(0xb6, gbc.readMem(0xa809));
        // B6 01F1
        gbc.setState(0x9cf4, 0x6fc5, 0x84c0, 0x992f, 0x81d2, 0xbc5e, 0x1, 0x0);
        gbc.writeMem(0x9cf4, { 0xb6 });
        gbc.writeMem(0xbc5e, { 0xb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6fc5, gbc.sp());
        EXPECT(0x9cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9cf4));
        EXPECT(0xb, gbc.readMem(0xbc5e));
        // B6 01F2
        gbc.setState(0x5038, 0xc745, 0x2b90, 0x692e, 0x663a, 0x5d33, 0x1, 0x1);
        gbc.writeMem(0x5038, { 0xb6 });
        gbc.writeMem(0x5d33, { 0x6e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc745, gbc.sp());
        EXPECT(0x5039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01F3
        gbc.setState(0x2f5f, 0x1aa6, 0xbc0, 0x2268, 0x3093, 0x7c36, 0x0, 0x1);
        gbc.writeMem(0x2f5f, { 0xb6 });
        gbc.writeMem(0x7c36, { 0xf2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1aa6, gbc.sp());
        EXPECT(0x2f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01F4
        gbc.setState(0x2589, 0x4552, 0xf120, 0xd19a, 0xe4ac, 0xb6f6, 0x1, 0x1);
        gbc.writeMem(0x2589, { 0xb6 });
        gbc.writeMem(0xb6f6, { 0x68 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4552, gbc.sp());
        EXPECT(0x258a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb6f6));
        // B6 01F6
        gbc.setState(0x1251, 0x298d, 0x9720, 0x8a5e, 0x4473, 0x23d0, 0x0, 0x1);
        gbc.writeMem(0x1251, { 0xb6 });
        gbc.writeMem(0x23d0, { 0xa9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x298d, gbc.sp());
        EXPECT(0x1252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01F7
        gbc.setState(0xcf34, 0xbded, 0xec40, 0x8ed2, 0x7d86, 0xf350, 0x0, 0x0);
        gbc.writeMem(0xcf34, { 0xb6 });
        gbc.writeMem(0xf350, { 0x1e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbded, gbc.sp());
        EXPECT(0xcf35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xcf34));
        EXPECT(0x1e, gbc.readMem(0xf350));
        // B6 01F8
        gbc.setState(0x6abf, 0xc377, 0x9140, 0x5c75, 0x3296, 0x6296, 0x0, 0x0);
        gbc.writeMem(0x6296, { 0xa9 });
        gbc.writeMem(0x6abf, { 0xb6 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc377, gbc.sp());
        EXPECT(0x6ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01FA
        gbc.setState(0x3b3, 0x32a0, 0xc0a0, 0x5388, 0x20d6, 0x2e56, 0x1, 0x1);
        gbc.writeMem(0x3b3, { 0xb6 });
        gbc.writeMem(0x2e56, { 0x59 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x32a0, gbc.sp());
        EXPECT(0x3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01FB
        gbc.setState(0x55ab, 0x9006, 0x4bd0, 0x20bf, 0xeb71, 0xd0ee, 0x0, 0x1);
        gbc.writeMem(0x55ab, { 0xb6 });
        gbc.writeMem(0xd0ee, { 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9006, gbc.sp());
        EXPECT(0x55ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd0ee));
        // B6 01FC
        gbc.setState(0x7e9c, 0xac36, 0xd490, 0xd2a0, 0x8386, 0x239f, 0x1, 0x0);
        gbc.writeMem(0x239f, { 0x18 });
        gbc.writeMem(0x7e9c, { 0xb6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xac36, gbc.sp());
        EXPECT(0x7e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01FD
        gbc.setState(0xba91, 0x5b5c, 0xe9e0, 0xf36, 0xde3d, 0x756b, 0x1, 0x1);
        gbc.writeMem(0x756b, { 0xd5 });
        gbc.writeMem(0xba91, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5b5c, gbc.sp());
        EXPECT(0xba92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xba91));
        // B6 01FE
        gbc.setState(0x5bf6, 0x959, 0x1070, 0xa3dd, 0x6162, 0x5324, 0x0, 0x1);
        gbc.writeMem(0x5324, { 0x2d });
        gbc.writeMem(0x5bf6, { 0xb6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x959, gbc.sp());
        EXPECT(0x5bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 01FF
        gbc.setState(0x5847, 0x9cbb, 0x73e0, 0xabce, 0xf22, 0x436f, 0x0, 0x0);
        gbc.writeMem(0x436f, { 0xa3 });
        gbc.writeMem(0x5847, { 0xb6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9cbb, gbc.sp());
        EXPECT(0x5848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0200
        gbc.setState(0xb4d9, 0xa4d4, 0x8830, 0xf1b7, 0x8fbb, 0x9716, 0x0, 0x0);
        gbc.writeMem(0x9716, { 0xdd });
        gbc.writeMem(0xb4d9, { 0xb6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa4d4, gbc.sp());
        EXPECT(0xb4da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9716));
        EXPECT(0xb6, gbc.readMem(0xb4d9));
        // B6 0201
        gbc.setState(0xb419, 0x9069, 0x60a0, 0x7bc0, 0xc311, 0x69d6, 0x1, 0x0);
        gbc.writeMem(0x69d6, { 0xd9 });
        gbc.writeMem(0xb419, { 0xb6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9069, gbc.sp());
        EXPECT(0xb41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb419));
        // B6 0202
        gbc.setState(0x3e00, 0x7b84, 0xfec0, 0xd149, 0x4e8e, 0x8a2b, 0x0, 0x1);
        gbc.writeMem(0x3e00, { 0xb6 });
        gbc.writeMem(0x8a2b, { 0xea });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7b84, gbc.sp());
        EXPECT(0x3e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x8a2b));
        // B6 0203
        gbc.setState(0x7039, 0x6178, 0xc3d0, 0x875c, 0x7ba5, 0x8980, 0x0, 0x1);
        gbc.writeMem(0x7039, { 0xb6 });
        gbc.writeMem(0x8980, { 0x8a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6178, gbc.sp());
        EXPECT(0x703a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8980));
        // B6 0204
        gbc.setState(0xd7f5, 0x7d9a, 0x8b80, 0xf8f2, 0xfe2b, 0xf86d, 0x1, 0x0);
        gbc.writeMem(0xd7f5, { 0xb6 });
        gbc.writeMem(0xf86d, { 0xd6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7d9a, gbc.sp());
        EXPECT(0xd7f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd7f5));
        EXPECT(0xd6, gbc.readMem(0xf86d));
        // B6 0205
        gbc.setState(0x7360, 0x61ee, 0x48a0, 0xac07, 0xb8dc, 0x6e57, 0x0, 0x0);
        gbc.writeMem(0x6e57, { 0x16 });
        gbc.writeMem(0x7360, { 0xb6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x61ee, gbc.sp());
        EXPECT(0x7361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0206
        gbc.setState(0x6c9f, 0x30e3, 0xab60, 0xd58d, 0x8a1d, 0x42f2, 0x1, 0x1);
        gbc.writeMem(0x42f2, { 0x70 });
        gbc.writeMem(0x6c9f, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x30e3, gbc.sp());
        EXPECT(0x6ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0207
        gbc.setState(0x1e46, 0x9129, 0x2550, 0x571d, 0x9cc7, 0x41c0, 0x1, 0x0);
        gbc.writeMem(0x1e46, { 0xb6 });
        gbc.writeMem(0x41c0, { 0x76 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9129, gbc.sp());
        EXPECT(0x1e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0208
        gbc.setState(0x82b0, 0xda2a, 0x12d0, 0xa1e2, 0x18ac, 0x3358, 0x0, 0x1);
        gbc.writeMem(0x3358, { 0x22 });
        gbc.writeMem(0x82b0, { 0xb6 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xda2a, gbc.sp());
        EXPECT(0x82b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x82b0));
        // B6 0209
        gbc.setState(0x9e9c, 0xd910, 0xf810, 0x5951, 0x7997, 0x4349, 0x1, 0x1);
        gbc.writeMem(0x4349, { 0xcd });
        gbc.writeMem(0x9e9c, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd910, gbc.sp());
        EXPECT(0x9e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9e9c));
        // B6 020A
        gbc.setState(0x4e64, 0x708c, 0xd750, 0xd4a1, 0x2af7, 0x41ed, 0x1, 0x0);
        gbc.writeMem(0x41ed, { 0x5 });
        gbc.writeMem(0x4e64, { 0xb6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x708c, gbc.sp());
        EXPECT(0x4e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 020B
        gbc.setState(0x4379, 0x43a9, 0x24c0, 0x4fc3, 0x328, 0x6bcf, 0x0, 0x1);
        gbc.writeMem(0x4379, { 0xb6 });
        gbc.writeMem(0x6bcf, { 0x8e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x43a9, gbc.sp());
        EXPECT(0x437a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 020C
        gbc.setState(0xd249, 0x5409, 0x8010, 0xc5f4, 0xc5dd, 0xe9b0, 0x1, 0x1);
        gbc.writeMem(0xd249, { 0xb6 });
        gbc.writeMem(0xe9b0, { 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5409, gbc.sp());
        EXPECT(0xd24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd249));
        EXPECT(0xfc, gbc.readMem(0xe9b0));
        // B6 020D
        gbc.setState(0x4efb, 0x4b4d, 0xbaa0, 0xe471, 0xf066, 0xa92a, 0x0, 0x1);
        gbc.writeMem(0x4efb, { 0xb6 });
        gbc.writeMem(0xa92a, { 0xb8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4b4d, gbc.sp());
        EXPECT(0x4efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xa92a));
        // B6 020E
        gbc.setState(0x1511, 0x278c, 0x7a60, 0x521b, 0x9241, 0x665e, 0x0, 0x1);
        gbc.writeMem(0x1511, { 0xb6 });
        gbc.writeMem(0x665e, { 0xc7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x278c, gbc.sp());
        EXPECT(0x1512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 020F
        gbc.setState(0x51e3, 0xa368, 0xcfa0, 0xfbda, 0xc42, 0x5686, 0x1, 0x0);
        gbc.writeMem(0x51e3, { 0xb6 });
        gbc.writeMem(0x5686, { 0xf1 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa368, gbc.sp());
        EXPECT(0x51e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0210
        gbc.setState(0x8c35, 0xac69, 0x430, 0x83c, 0xc5a7, 0x4005, 0x0, 0x0);
        gbc.writeMem(0x4005, { 0xbe });
        gbc.writeMem(0x8c35, { 0xb6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xac69, gbc.sp());
        EXPECT(0x8c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8c35));
        // B6 0211
        gbc.setState(0x11b9, 0x6604, 0x4ce0, 0x65ec, 0x5780, 0xf60e, 0x0, 0x1);
        gbc.writeMem(0x11b9, { 0xb6 });
        gbc.writeMem(0xf60e, { 0xd1 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6604, gbc.sp());
        EXPECT(0x11ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xf60e));
        // B6 0213
        gbc.setState(0xc474, 0xf724, 0xbc30, 0xac7e, 0xf8a8, 0x4181, 0x1, 0x0);
        gbc.writeMem(0x4181, { 0x87 });
        gbc.writeMem(0xc474, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0xc475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc474));
        // B6 0214
        gbc.setState(0xeb94, 0xd7e5, 0xde50, 0x103a, 0xd902, 0xec85, 0x0, 0x0);
        gbc.writeMem(0xeb94, { 0xb6 });
        gbc.writeMem(0xec85, { 0xcf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd7e5, gbc.sp());
        EXPECT(0xeb95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xeb94));
        EXPECT(0xcf, gbc.readMem(0xec85));
        // B6 0215
        gbc.setState(0x7875, 0x75f7, 0x7af0, 0x86ca, 0x189e, 0x164c, 0x0, 0x0);
        gbc.writeMem(0x164c, { 0xec });
        gbc.writeMem(0x7875, { 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x75f7, gbc.sp());
        EXPECT(0x7876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0216
        gbc.setState(0x4a10, 0xcc5f, 0xd540, 0x8df2, 0x8037, 0xc93a, 0x1, 0x1);
        gbc.writeMem(0x4a10, { 0xb6 });
        gbc.writeMem(0xc93a, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcc5f, gbc.sp());
        EXPECT(0x4a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xc93a));
        // B6 0217
        gbc.setState(0x8a2c, 0x942c, 0x51b0, 0x6388, 0xea4d, 0x4f24, 0x0, 0x0);
        gbc.writeMem(0x4f24, { 0x2 });
        gbc.writeMem(0x8a2c, { 0xb6 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x942c, gbc.sp());
        EXPECT(0x8a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8a2c));
        // B6 0218
        gbc.setState(0xb5bb, 0xcc97, 0x9000, 0x85a4, 0x4290, 0xc203, 0x1, 0x1);
        gbc.writeMem(0xb5bb, { 0xb6 });
        gbc.writeMem(0xc203, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcc97, gbc.sp());
        EXPECT(0xb5bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb5bb));
        EXPECT(0xbf, gbc.readMem(0xc203));
        // B6 0219
        gbc.setState(0x77f2, 0x7e42, 0xbc60, 0x8094, 0x8a78, 0x2caf, 0x0, 0x1);
        gbc.writeMem(0x2caf, { 0xaa });
        gbc.writeMem(0x77f2, { 0xb6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7e42, gbc.sp());
        EXPECT(0x77f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 021A
        gbc.setState(0x1a94, 0x4962, 0x51d0, 0x7d52, 0xaf90, 0xc167, 0x1, 0x1);
        gbc.writeMem(0x1a94, { 0xb6 });
        gbc.writeMem(0xc167, { 0xa4 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4962, gbc.sp());
        EXPECT(0x1a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xc167));
        // B6 021B
        gbc.setState(0x6ad3, 0x4cf3, 0x3850, 0xe0b, 0x3b9e, 0x4f9, 0x1, 0x1);
        gbc.writeMem(0x4f9, { 0x50 });
        gbc.writeMem(0x6ad3, { 0xb6 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4cf3, gbc.sp());
        EXPECT(0x6ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 021C
        gbc.setState(0x2c1b, 0xff81, 0x6f70, 0x7037, 0xf923, 0xa03f, 0x0, 0x1);
        gbc.writeMem(0x2c1b, { 0xb6 });
        gbc.writeMem(0xa03f, { 0x36 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xff81, gbc.sp());
        EXPECT(0x2c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xa03f));
        // B6 021D
        gbc.setState(0x6d54, 0x161a, 0xee20, 0x7ca2, 0xfa90, 0x4017, 0x0, 0x0);
        gbc.writeMem(0x4017, { 0x95 });
        gbc.writeMem(0x6d54, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x161a, gbc.sp());
        EXPECT(0x6d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 021F
        gbc.setState(0x4e08, 0x1bab, 0x19a0, 0xf7ee, 0x690f, 0xe3b4, 0x1, 0x0);
        gbc.writeMem(0x4e08, { 0xb6 });
        gbc.writeMem(0xe3b4, { 0xb2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1bab, gbc.sp());
        EXPECT(0x4e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe3b4));
        // B6 0220
        gbc.setState(0xbf27, 0x7c9a, 0x17e0, 0x2ac8, 0xfd7e, 0x1833, 0x0, 0x0);
        gbc.writeMem(0x1833, { 0xd8 });
        gbc.writeMem(0xbf27, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7c9a, gbc.sp());
        EXPECT(0xbf28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xbf27));
        // B6 0221
        gbc.setState(0xb72, 0x68db, 0x1480, 0x6d1b, 0x73fc, 0x69b, 0x0, 0x1);
        gbc.writeMem(0x69b, { 0xdf });
        gbc.writeMem(0xb72, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x68db, gbc.sp());
        EXPECT(0xb73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0223
        gbc.setState(0x806d, 0x1d2b, 0xd550, 0x1489, 0xa403, 0x6a3f, 0x0, 0x1);
        gbc.writeMem(0x6a3f, { 0xaa });
        gbc.writeMem(0x806d, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1d2b, gbc.sp());
        EXPECT(0x806e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x806d));
        // B6 0224
        gbc.setState(0xe508, 0x1c3a, 0xc3c0, 0x46d7, 0x3131, 0x2342, 0x1, 0x0);
        gbc.writeMem(0x2342, { 0x23 });
        gbc.writeMem(0xe508, { 0xb6 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1c3a, gbc.sp());
        EXPECT(0xe509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe508));
        // B6 0225
        gbc.setState(0xd73f, 0x8095, 0xe20, 0xc1e7, 0xf1b5, 0x62a7, 0x0, 0x0);
        gbc.writeMem(0x62a7, { 0xb6 });
        gbc.writeMem(0xd73f, { 0xb6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8095, gbc.sp());
        EXPECT(0xd740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd73f));
        // B6 0226
        gbc.setState(0x1b83, 0xf7b6, 0x7290, 0xd283, 0xec6e, 0x12e7, 0x1, 0x1);
        gbc.writeMem(0x12e7, { 0x23 });
        gbc.writeMem(0x1b83, { 0xb6 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf7b6, gbc.sp());
        EXPECT(0x1b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0227
        gbc.setState(0x3b97, 0xc3ca, 0x9940, 0x9d42, 0x9619, 0x72ff, 0x0, 0x1);
        gbc.writeMem(0x3b97, { 0xb6 });
        gbc.writeMem(0x72ff, { 0xb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc3ca, gbc.sp());
        EXPECT(0x3b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0228
        gbc.setState(0xcff1, 0x7ea7, 0xe730, 0xc2dc, 0xd268, 0x1773, 0x1, 0x1);
        gbc.writeMem(0x1773, { 0xdc });
        gbc.writeMem(0xcff1, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7ea7, gbc.sp());
        EXPECT(0xcff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xcff1));
        // B6 0229
        gbc.setState(0x968a, 0xcd8d, 0xe4e0, 0x8c5, 0x9ce4, 0x786f, 0x0, 0x1);
        gbc.writeMem(0x786f, { 0x49 });
        gbc.writeMem(0x968a, { 0xb6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcd8d, gbc.sp());
        EXPECT(0x968b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x968a));
        // B6 022A
        gbc.setState(0x35ae, 0x8db7, 0x9630, 0x61c1, 0x8d40, 0x97c, 0x1, 0x0);
        gbc.writeMem(0x97c, { 0xca });
        gbc.writeMem(0x35ae, { 0xb6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8db7, gbc.sp());
        EXPECT(0x35af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 022B
        gbc.setState(0xd2a, 0xa087, 0xb1e0, 0x4e1f, 0x722d, 0x2151, 0x1, 0x1);
        gbc.writeMem(0xd2a, { 0xb6 });
        gbc.writeMem(0x2151, { 0x44 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa087, gbc.sp());
        EXPECT(0xd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 022C
        gbc.setState(0x1c20, 0xa04d, 0xb810, 0xfb9, 0x2e2b, 0xaaab, 0x1, 0x1);
        gbc.writeMem(0x1c20, { 0xb6 });
        gbc.writeMem(0xaaab, { 0x45 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa04d, gbc.sp());
        EXPECT(0x1c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xaaab));
        // B6 022D
        gbc.setState(0x2807, 0x95e3, 0xa080, 0xec0a, 0x710b, 0xf160, 0x0, 0x0);
        gbc.writeMem(0x2807, { 0xb6 });
        gbc.writeMem(0xf160, { 0xd5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x95e3, gbc.sp());
        EXPECT(0x2808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xf160));
        // B6 022E
        gbc.setState(0x842b, 0x3017, 0x9ae0, 0x83ee, 0xad6f, 0xaaa0, 0x1, 0x1);
        gbc.writeMem(0x842b, { 0xb6 });
        gbc.writeMem(0xaaa0, { 0xa1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3017, gbc.sp());
        EXPECT(0x842c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x842b));
        EXPECT(0xa1, gbc.readMem(0xaaa0));
        // B6 0230
        gbc.setState(0x6d3d, 0xfa89, 0x890, 0x2a8e, 0xf138, 0xdb8a, 0x0, 0x1);
        gbc.writeMem(0x6d3d, { 0xb6 });
        gbc.writeMem(0xdb8a, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfa89, gbc.sp());
        EXPECT(0x6d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xdb8a));
        // B6 0231
        gbc.setState(0x255b, 0x78c4, 0x4b20, 0xe7e9, 0xa702, 0xabac, 0x0, 0x1);
        gbc.writeMem(0x255b, { 0xb6 });
        gbc.writeMem(0xabac, { 0x23 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x78c4, gbc.sp());
        EXPECT(0x255c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xabac));
        // B6 0232
        gbc.setState(0xad71, 0xe787, 0xd710, 0x1596, 0x182, 0x44b7, 0x1, 0x0);
        gbc.writeMem(0x44b7, { 0x3 });
        gbc.writeMem(0xad71, { 0xb6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe787, gbc.sp());
        EXPECT(0xad72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xad71));
        // B6 0233
        gbc.setState(0x7035, 0x6bfd, 0x6fc0, 0xe192, 0x64fe, 0x6a93, 0x1, 0x1);
        gbc.writeMem(0x6a93, { 0x80 });
        gbc.writeMem(0x7035, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6bfd, gbc.sp());
        EXPECT(0x7036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0234
        gbc.setState(0x9f1, 0x6b0, 0x3af0, 0xb0f5, 0x7cc1, 0xc319, 0x0, 0x1);
        gbc.writeMem(0x9f1, { 0xb6 });
        gbc.writeMem(0xc319, { 0xf6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6b0, gbc.sp());
        EXPECT(0x9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xc319));
        // B6 0235
        gbc.setState(0xb070, 0x73b3, 0x8080, 0xed81, 0xeec1, 0xced5, 0x1, 0x0);
        gbc.writeMem(0xb070, { 0xb6 });
        gbc.writeMem(0xced5, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x73b3, gbc.sp());
        EXPECT(0xb071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb070));
        EXPECT(0x94, gbc.readMem(0xced5));
        // B6 0236
        gbc.setState(0x5cde, 0x2ddd, 0xcd90, 0x98c1, 0xce68, 0x7e48, 0x1, 0x1);
        gbc.writeMem(0x5cde, { 0xb6 });
        gbc.writeMem(0x7e48, { 0xb9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2ddd, gbc.sp());
        EXPECT(0x5cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0237
        gbc.setState(0x649f, 0x3e72, 0x9f10, 0x4177, 0xfcee, 0xe24d, 0x1, 0x0);
        gbc.writeMem(0x649f, { 0xb6 });
        gbc.writeMem(0xe24d, { 0x1 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3e72, gbc.sp());
        EXPECT(0x64a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xe24d));
        // B6 0239
        gbc.setState(0x961f, 0x19e4, 0x8d00, 0x794b, 0x5bf, 0x88d7, 0x0, 0x1);
        gbc.writeMem(0x88d7, { 0xc2 });
        gbc.writeMem(0x961f, { 0xb6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x19e4, gbc.sp());
        EXPECT(0x9620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0x88d7));
        EXPECT(0xb6, gbc.readMem(0x961f));
        // B6 023C
        gbc.setState(0x1e05, 0x12c1, 0x6900, 0xedbb, 0x955, 0xaa9, 0x1, 0x0);
        gbc.writeMem(0xaa9, { 0x6f });
        gbc.writeMem(0x1e05, { 0xb6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x12c1, gbc.sp());
        EXPECT(0x1e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 023D
        gbc.setState(0x5226, 0x18c7, 0x630, 0xac6f, 0x49eb, 0xe89c, 0x0, 0x1);
        gbc.writeMem(0x5226, { 0xb6 });
        gbc.writeMem(0xe89c, { 0x6c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x18c7, gbc.sp());
        EXPECT(0x5227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xe89c));
        // B6 023E
        gbc.setState(0x89bd, 0x26dc, 0xc8e0, 0x91a3, 0xd91a, 0x710f, 0x1, 0x1);
        gbc.writeMem(0x710f, { 0xe8 });
        gbc.writeMem(0x89bd, { 0xb6 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x26dc, gbc.sp());
        EXPECT(0x89be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x89bd));
        // B6 023F
        gbc.setState(0x3e1f, 0x2cc, 0x4b20, 0x7fd2, 0xe496, 0xe4ac, 0x1, 0x0);
        gbc.writeMem(0x3e1f, { 0xb6 });
        gbc.writeMem(0xe4ac, { 0xd1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2cc, gbc.sp());
        EXPECT(0x3e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xe4ac));
        // B6 0240
        gbc.setState(0xc436, 0xea7c, 0x55a0, 0x4013, 0xf94b, 0x53a6, 0x0, 0x0);
        gbc.writeMem(0x53a6, { 0x74 });
        gbc.writeMem(0xc436, { 0xb6 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xea7c, gbc.sp());
        EXPECT(0xc437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc436));
        // B6 0241
        gbc.setState(0x1b1e, 0x8521, 0xaa30, 0x58c3, 0x6c86, 0xabce, 0x1, 0x0);
        gbc.writeMem(0x1b1e, { 0xb6 });
        gbc.writeMem(0xabce, { 0x53 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8521, gbc.sp());
        EXPECT(0x1b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xabce));
        // B6 0242
        gbc.setState(0x24f0, 0x10fb, 0x8430, 0x1a32, 0x5c88, 0x4744, 0x1, 0x1);
        gbc.writeMem(0x24f0, { 0xb6 });
        gbc.writeMem(0x4744, { 0xbd });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x10fb, gbc.sp());
        EXPECT(0x24f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0243
        gbc.setState(0x10a7, 0xaae3, 0xd2b0, 0x1313, 0xd3b1, 0x3208, 0x0, 0x0);
        gbc.writeMem(0x10a7, { 0xb6 });
        gbc.writeMem(0x3208, { 0x17 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xaae3, gbc.sp());
        EXPECT(0x10a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0244
        gbc.setState(0x1594, 0xb4dd, 0x1100, 0xea0d, 0x82a4, 0xd906, 0x0, 0x0);
        gbc.writeMem(0x1594, { 0xb6 });
        gbc.writeMem(0xd906, { 0xcc });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb4dd, gbc.sp());
        EXPECT(0x1595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xd906));
        // B6 0245
        gbc.setState(0x26a0, 0xb12e, 0xf370, 0x7836, 0xcfae, 0x20f6, 0x1, 0x0);
        gbc.writeMem(0x20f6, { 0x3d });
        gbc.writeMem(0x26a0, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb12e, gbc.sp());
        EXPECT(0x26a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0246
        gbc.setState(0xb8b4, 0x6ca7, 0xecc0, 0xa1ca, 0x82b3, 0x16a0, 0x0, 0x1);
        gbc.writeMem(0x16a0, { 0xbb });
        gbc.writeMem(0xb8b4, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6ca7, gbc.sp());
        EXPECT(0xb8b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb8b4));
        // B6 0247
        gbc.setState(0x5c66, 0xdaed, 0xf800, 0x65a3, 0x4a60, 0xfa08, 0x0, 0x1);
        gbc.writeMem(0x5c66, { 0xb6 });
        gbc.writeMem(0xfa08, { 0x26 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdaed, gbc.sp());
        EXPECT(0x5c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xfa08));
        // B6 0248
        gbc.setState(0x92e8, 0xbed6, 0xf880, 0xe9fd, 0x3794, 0xf046, 0x0, 0x0);
        gbc.writeMem(0x92e8, { 0xb6 });
        gbc.writeMem(0xf046, { 0xd4 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbed6, gbc.sp());
        EXPECT(0x92e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x92e8));
        EXPECT(0xd4, gbc.readMem(0xf046));
        // B6 0249
        gbc.setState(0x9a17, 0x6918, 0xd750, 0xbc0, 0x4c02, 0x18a0, 0x1, 0x1);
        gbc.writeMem(0x18a0, { 0x58 });
        gbc.writeMem(0x9a17, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6918, gbc.sp());
        EXPECT(0x9a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9a17));
        // B6 024A
        gbc.setState(0xcd5, 0xdd18, 0x8430, 0xcfc2, 0x7f08, 0xe996, 0x1, 0x0);
        gbc.writeMem(0xcd5, { 0xb6 });
        gbc.writeMem(0xe996, { 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdd18, gbc.sp());
        EXPECT(0xcd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xe996));
        // B6 024B
        gbc.setState(0x9078, 0xc202, 0x3430, 0x2dea, 0xdce1, 0x351d, 0x1, 0x1);
        gbc.writeMem(0x351d, { 0xe });
        gbc.writeMem(0x9078, { 0xb6 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc202, gbc.sp());
        EXPECT(0x9079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9078));
        // B6 024C
        gbc.setState(0xe2ab, 0x6157, 0xb280, 0x2351, 0xbafd, 0xa1da, 0x0, 0x0);
        gbc.writeMem(0xa1da, { 0x16 });
        gbc.writeMem(0xe2ab, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6157, gbc.sp());
        EXPECT(0xe2ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa1da));
        EXPECT(0xb6, gbc.readMem(0xe2ab));
        // B6 024D
        gbc.setState(0xbac5, 0xa2fb, 0x2330, 0xc468, 0x5ce5, 0x3c58, 0x0, 0x1);
        gbc.writeMem(0x3c58, { 0xde });
        gbc.writeMem(0xbac5, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa2fb, gbc.sp());
        EXPECT(0xbac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xbac5));
        // B6 024E
        gbc.setState(0x5e43, 0x7247, 0x33f0, 0xaeb1, 0xb1d4, 0xf25, 0x0, 0x0);
        gbc.writeMem(0xf25, { 0xa2 });
        gbc.writeMem(0x5e43, { 0xb6 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7247, gbc.sp());
        EXPECT(0x5e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 024F
        gbc.setState(0x185c, 0xc6a6, 0xbc10, 0x946f, 0x46c8, 0xca02, 0x0, 0x0);
        gbc.writeMem(0x185c, { 0xb6 });
        gbc.writeMem(0xca02, { 0x2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc6a6, gbc.sp());
        EXPECT(0x185d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xca02));
        // B6 0250
        gbc.setState(0xab9b, 0x194, 0x8640, 0x4199, 0x2613, 0x386f, 0x1, 0x1);
        gbc.writeMem(0x386f, { 0x35 });
        gbc.writeMem(0xab9b, { 0xb6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x194, gbc.sp());
        EXPECT(0xab9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xab9b));
        // B6 0251
        gbc.setState(0x2481, 0xe447, 0x9f20, 0xed53, 0x9875, 0x2732, 0x0, 0x1);
        gbc.writeMem(0x2481, { 0xb6 });
        gbc.writeMem(0x2732, { 0x70 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe447, gbc.sp());
        EXPECT(0x2482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0252
        gbc.setState(0x96ce, 0xc4f5, 0xf190, 0xd064, 0x489e, 0x36ee, 0x0, 0x0);
        gbc.writeMem(0x36ee, { 0x8b });
        gbc.writeMem(0x96ce, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc4f5, gbc.sp());
        EXPECT(0x96cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x96ce));
        // B6 0253
        gbc.setState(0x5e99, 0xcdaf, 0x1520, 0xc3b1, 0x237e, 0xacb6, 0x1, 0x1);
        gbc.writeMem(0x5e99, { 0xb6 });
        gbc.writeMem(0xacb6, { 0xcf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcdaf, gbc.sp());
        EXPECT(0x5e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xacb6));
        // B6 0254
        gbc.setState(0xc5b2, 0x8ace, 0x6120, 0x5c4a, 0x8726, 0x3ce3, 0x0, 0x1);
        gbc.writeMem(0x3ce3, { 0xd6 });
        gbc.writeMem(0xc5b2, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8ace, gbc.sp());
        EXPECT(0xc5b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc5b2));
        // B6 0255
        gbc.setState(0x6d92, 0x87a8, 0xe040, 0x898c, 0x52a8, 0x65d0, 0x1, 0x1);
        gbc.writeMem(0x65d0, { 0x22 });
        gbc.writeMem(0x6d92, { 0xb6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x87a8, gbc.sp());
        EXPECT(0x6d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0256
        gbc.setState(0x8b1e, 0x6d1d, 0x3320, 0xc26f, 0x2e02, 0x26b0, 0x1, 0x0);
        gbc.writeMem(0x26b0, { 0x9 });
        gbc.writeMem(0x8b1e, { 0xb6 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6d1d, gbc.sp());
        EXPECT(0x8b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8b1e));
        // B6 0257
        gbc.setState(0xa19c, 0xb411, 0xc80, 0x1113, 0xdaf8, 0xfade, 0x1, 0x0);
        gbc.writeMem(0xa19c, { 0xb6 });
        gbc.writeMem(0xfade, { 0x39 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb411, gbc.sp());
        EXPECT(0xa19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa19c));
        EXPECT(0x39, gbc.readMem(0xfade));
        // B6 0258
        gbc.setState(0x4836, 0xfc30, 0x6150, 0x5919, 0x94b9, 0xaa37, 0x1, 0x1);
        gbc.writeMem(0x4836, { 0xb6 });
        gbc.writeMem(0xaa37, { 0xd5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfc30, gbc.sp());
        EXPECT(0x4837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xaa37));
        // B6 0259
        gbc.setState(0xb6a4, 0xc8b7, 0xe130, 0xfb6a, 0x6ec9, 0x9974, 0x1, 0x0);
        gbc.writeMem(0x9974, { 0x75 });
        gbc.writeMem(0xb6a4, { 0xb6 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc8b7, gbc.sp());
        EXPECT(0xb6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x9974));
        EXPECT(0xb6, gbc.readMem(0xb6a4));
        // B6 025A
        gbc.setState(0xa46b, 0x7856, 0xffc0, 0x30ef, 0x9332, 0x3813, 0x0, 0x1);
        gbc.writeMem(0x3813, { 0x43 });
        gbc.writeMem(0xa46b, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7856, gbc.sp());
        EXPECT(0xa46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa46b));
        // B6 025B
        gbc.setState(0x143d, 0xb9ab, 0x3f70, 0x5d9c, 0x58fc, 0x5987, 0x1, 0x1);
        gbc.writeMem(0x143d, { 0xb6 });
        gbc.writeMem(0x5987, { 0x6a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb9ab, gbc.sp());
        EXPECT(0x143e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 025C
        gbc.setState(0x84b, 0xd508, 0x2e00, 0x9e6f, 0xa0dc, 0x7bb2, 0x0, 0x0);
        gbc.writeMem(0x84b, { 0xb6 });
        gbc.writeMem(0x7bb2, { 0xc });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd508, gbc.sp());
        EXPECT(0x84c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 025E
        gbc.setState(0xe9fd, 0xb600, 0x730, 0x9491, 0xe5f5, 0xa0ad, 0x1, 0x0);
        gbc.writeMem(0xa0ad, { 0x19 });
        gbc.writeMem(0xe9fd, { 0xb6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb600, gbc.sp());
        EXPECT(0xe9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa0ad));
        EXPECT(0xb6, gbc.readMem(0xe9fd));
        // B6 025F
        gbc.setState(0x4c40, 0xcce, 0x5780, 0xe5c7, 0x8889, 0x3270, 0x0, 0x1);
        gbc.writeMem(0x3270, { 0x7d });
        gbc.writeMem(0x4c40, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcce, gbc.sp());
        EXPECT(0x4c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0260
        gbc.setState(0x13e7, 0x720b, 0x2950, 0xf153, 0x2067, 0xb13d, 0x0, 0x1);
        gbc.writeMem(0x13e7, { 0xb6 });
        gbc.writeMem(0xb13d, { 0x41 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x720b, gbc.sp());
        EXPECT(0x13e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xb13d));
        // B6 0261
        gbc.setState(0xc0d6, 0x8ab2, 0x85d0, 0xc85, 0xfe86, 0x41, 0x1, 0x0);
        gbc.writeMem(0x41, { 0x15 });
        gbc.writeMem(0xc0d6, { 0xb6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8ab2, gbc.sp());
        EXPECT(0xc0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc0d6));
        // B6 0262
        gbc.setState(0x6fec, 0xea53, 0x8a40, 0xbac3, 0x551a, 0xe25, 0x0, 0x0);
        gbc.writeMem(0xe25, { 0x5c });
        gbc.writeMem(0x6fec, { 0xb6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xea53, gbc.sp());
        EXPECT(0x6fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0264
        gbc.setState(0x25d7, 0xa84a, 0x2860, 0x8a87, 0x96cd, 0xb3cc, 0x1, 0x1);
        gbc.writeMem(0x25d7, { 0xb6 });
        gbc.writeMem(0xb3cc, { 0x81 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa84a, gbc.sp());
        EXPECT(0x25d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xb3cc));
        // B6 0265
        gbc.setState(0x64f8, 0x3e8b, 0xdae0, 0xb1e6, 0xaad9, 0x1be5, 0x1, 0x0);
        gbc.writeMem(0x1be5, { 0xda });
        gbc.writeMem(0x64f8, { 0xb6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3e8b, gbc.sp());
        EXPECT(0x64f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0266
        gbc.setState(0x1b3, 0xf7ea, 0xb1c0, 0x2bb5, 0x874f, 0x41d7, 0x0, 0x1);
        gbc.writeMem(0x1b3, { 0xb6 });
        gbc.writeMem(0x41d7, { 0xd0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf7ea, gbc.sp());
        EXPECT(0x1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0267
        gbc.setState(0x9b2a, 0xfe7c, 0x1270, 0x6e25, 0x64d8, 0xb650, 0x0, 0x0);
        gbc.writeMem(0x9b2a, { 0xb6 });
        gbc.writeMem(0xb650, { 0xf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfe7c, gbc.sp());
        EXPECT(0x9b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9b2a));
        EXPECT(0xf, gbc.readMem(0xb650));
        // B6 0268
        gbc.setState(0x39b6, 0x68c6, 0x3170, 0xb43a, 0x76b, 0xef04, 0x0, 0x0);
        gbc.writeMem(0x39b6, { 0xb6 });
        gbc.writeMem(0xef04, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x68c6, gbc.sp());
        EXPECT(0x39b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xef04));
        // B6 0269
        gbc.setState(0x2ad8, 0x56ca, 0x8b60, 0xb40a, 0xc2c2, 0x9f37, 0x1, 0x0);
        gbc.writeMem(0x2ad8, { 0xb6 });
        gbc.writeMem(0x9f37, { 0xb2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x56ca, gbc.sp());
        EXPECT(0x2ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x9f37));
        // B6 026A
        gbc.setState(0x8021, 0xee90, 0xcd0, 0xbfe7, 0x1161, 0xa721, 0x0, 0x1);
        gbc.writeMem(0x8021, { 0xb6 });
        gbc.writeMem(0xa721, { 0x33 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xee90, gbc.sp());
        EXPECT(0x8022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8021));
        EXPECT(0x33, gbc.readMem(0xa721));
        // B6 026B
        gbc.setState(0x5a2e, 0xeaf1, 0x43d0, 0x2508, 0x11f3, 0x546d, 0x1, 0x0);
        gbc.writeMem(0x546d, { 0x7d });
        gbc.writeMem(0x5a2e, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xeaf1, gbc.sp());
        EXPECT(0x5a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 026C
        gbc.setState(0x50b6, 0x25e9, 0x9300, 0xf09d, 0x4bb3, 0x15ca, 0x0, 0x0);
        gbc.writeMem(0x15ca, { 0x26 });
        gbc.writeMem(0x50b6, { 0xb6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x25e9, gbc.sp());
        EXPECT(0x50b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 026D
        gbc.setState(0x6e14, 0xea4a, 0xf7f0, 0x50fb, 0x1a6e, 0x7237, 0x1, 0x1);
        gbc.writeMem(0x6e14, { 0xb6 });
        gbc.writeMem(0x7237, { 0x6a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xea4a, gbc.sp());
        EXPECT(0x6e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 026E
        gbc.setState(0xd1f7, 0xb808, 0xfbb0, 0x4a6b, 0x8c4, 0xac32, 0x0, 0x1);
        gbc.writeMem(0xac32, { 0x76 });
        gbc.writeMem(0xd1f7, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb808, gbc.sp());
        EXPECT(0xd1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xac32));
        EXPECT(0xb6, gbc.readMem(0xd1f7));
        // B6 026F
        gbc.setState(0x9d2c, 0x3370, 0xca90, 0x6e82, 0x8279, 0x8c68, 0x0, 0x0);
        gbc.writeMem(0x8c68, { 0x4c });
        gbc.writeMem(0x9d2c, { 0xb6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3370, gbc.sp());
        EXPECT(0x9d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x8c68));
        EXPECT(0xb6, gbc.readMem(0x9d2c));
        // B6 0270
        gbc.setState(0x3966, 0x746f, 0x14b0, 0xdf4e, 0xaad2, 0x76b2, 0x0, 0x0);
        gbc.writeMem(0x3966, { 0xb6 });
        gbc.writeMem(0x76b2, { 0xe6 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x746f, gbc.sp());
        EXPECT(0x3967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0271
        gbc.setState(0x1fb8, 0x7019, 0x8b00, 0x5a1, 0x7fb7, 0xc472, 0x1, 0x1);
        gbc.writeMem(0x1fb8, { 0xb6 });
        gbc.writeMem(0xc472, { 0x36 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7019, gbc.sp());
        EXPECT(0x1fb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xc472));
        // B6 0272
        gbc.setState(0x74db, 0x8d99, 0x7d90, 0x1617, 0xb966, 0x2311, 0x0, 0x1);
        gbc.writeMem(0x2311, { 0xd7 });
        gbc.writeMem(0x74db, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8d99, gbc.sp());
        EXPECT(0x74dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0273
        gbc.setState(0x98da, 0x6969, 0x36d0, 0xf992, 0xd58a, 0x2529, 0x1, 0x0);
        gbc.writeMem(0x2529, { 0x52 });
        gbc.writeMem(0x98da, { 0xb6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6969, gbc.sp());
        EXPECT(0x98db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x98da));
        // B6 0274
        gbc.setState(0x5ebc, 0x206d, 0xe5d0, 0xed61, 0xa35a, 0x64d2, 0x0, 0x1);
        gbc.writeMem(0x5ebc, { 0xb6 });
        gbc.writeMem(0x64d2, { 0xcd });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x206d, gbc.sp());
        EXPECT(0x5ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0275
        gbc.setState(0x75b5, 0x720e, 0xa770, 0x9f34, 0x73ae, 0xc00c, 0x0, 0x0);
        gbc.writeMem(0x75b5, { 0xb6 });
        gbc.writeMem(0xc00c, { 0x38 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x720e, gbc.sp());
        EXPECT(0x75b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc00c));
        // B6 0276
        gbc.setState(0x6aee, 0xe82c, 0xbc00, 0xf7a9, 0xb896, 0xf5aa, 0x0, 0x0);
        gbc.writeMem(0x6aee, { 0xb6 });
        gbc.writeMem(0xf5aa, { 0x2e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe82c, gbc.sp());
        EXPECT(0x6aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xf5aa));
        // B6 0279
        gbc.setState(0xa8f, 0x66a3, 0xe0d0, 0xf1d5, 0x6069, 0x33e0, 0x1, 0x0);
        gbc.writeMem(0xa8f, { 0xb6 });
        gbc.writeMem(0x33e0, { 0xc6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x66a3, gbc.sp());
        EXPECT(0xa90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 027A
        gbc.setState(0x92eb, 0x450c, 0x4110, 0xd48a, 0x2172, 0x77d9, 0x0, 0x1);
        gbc.writeMem(0x77d9, { 0x24 });
        gbc.writeMem(0x92eb, { 0xb6 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x450c, gbc.sp());
        EXPECT(0x92ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x92eb));
        // B6 027B
        gbc.setState(0x81c2, 0x455b, 0xe4a0, 0x27a5, 0xdd74, 0xc7df, 0x0, 0x1);
        gbc.writeMem(0x81c2, { 0xb6 });
        gbc.writeMem(0xc7df, { 0xa9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x455b, gbc.sp());
        EXPECT(0x81c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x81c2));
        EXPECT(0xa9, gbc.readMem(0xc7df));
        // B6 027C
        gbc.setState(0x7552, 0xed53, 0xd840, 0x75f5, 0x2ee9, 0xb155, 0x0, 0x0);
        gbc.writeMem(0x7552, { 0xb6 });
        gbc.writeMem(0xb155, { 0x8a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xed53, gbc.sp());
        EXPECT(0x7553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb155));
        // B6 027D
        gbc.setState(0x6de2, 0xa92, 0x2df0, 0xfa21, 0xc66e, 0x29fd, 0x0, 0x0);
        gbc.writeMem(0x29fd, { 0x43 });
        gbc.writeMem(0x6de2, { 0xb6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa92, gbc.sp());
        EXPECT(0x6de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 027E
        gbc.setState(0xae75, 0xf26b, 0xf130, 0x799b, 0x79f2, 0xf5e, 0x0, 0x1);
        gbc.writeMem(0xf5e, { 0x33 });
        gbc.writeMem(0xae75, { 0xb6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf26b, gbc.sp());
        EXPECT(0xae76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xae75));
        // B6 027F
        gbc.setState(0x5f2f, 0x4be8, 0xacc0, 0xad4c, 0x3fb0, 0x4138, 0x0, 0x1);
        gbc.writeMem(0x4138, { 0x8 });
        gbc.writeMem(0x5f2f, { 0xb6 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4be8, gbc.sp());
        EXPECT(0x5f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0280
        gbc.setState(0xe7fd, 0xad5a, 0xa360, 0xb58a, 0x3412, 0xe9b6, 0x0, 0x0);
        gbc.writeMem(0xe7fd, { 0xb6 });
        gbc.writeMem(0xe9b6, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xad5a, gbc.sp());
        EXPECT(0xe7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe7fd));
        EXPECT(0xb3, gbc.readMem(0xe9b6));
        // B6 0281
        gbc.setState(0xad49, 0x1f3d, 0x2b20, 0x247, 0x1b6c, 0x341c, 0x1, 0x0);
        gbc.writeMem(0x341c, { 0x6c });
        gbc.writeMem(0xad49, { 0xb6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1f3d, gbc.sp());
        EXPECT(0xad4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xad49));
        // B6 0282
        gbc.setState(0x5f16, 0x13a, 0xb130, 0x34f0, 0x5d16, 0x6297, 0x1, 0x1);
        gbc.writeMem(0x5f16, { 0xb6 });
        gbc.writeMem(0x6297, { 0xa6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x13a, gbc.sp());
        EXPECT(0x5f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0283
        gbc.setState(0x101f, 0xd1c5, 0x63f0, 0x21d0, 0x39c7, 0x27ef, 0x1, 0x0);
        gbc.writeMem(0x101f, { 0xb6 });
        gbc.writeMem(0x27ef, { 0x8c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd1c5, gbc.sp());
        EXPECT(0x1020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0284
        gbc.setState(0x7b05, 0x3ad6, 0x9260, 0xfefa, 0x6050, 0x8e8, 0x1, 0x1);
        gbc.writeMem(0x8e8, { 0xad });
        gbc.writeMem(0x7b05, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3ad6, gbc.sp());
        EXPECT(0x7b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0286
        gbc.setState(0x127, 0x2831, 0xddf0, 0x3ee7, 0x872a, 0x3b63, 0x0, 0x0);
        gbc.writeMem(0x127, { 0xb6 });
        gbc.writeMem(0x3b63, { 0x21 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2831, gbc.sp());
        EXPECT(0x128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0287
        gbc.setState(0xe943, 0x1f27, 0xebd0, 0xadb4, 0x9aad, 0xe05f, 0x1, 0x0);
        gbc.writeMem(0xe05f, { 0xa1 });
        gbc.writeMem(0xe943, { 0xb6 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1f27, gbc.sp());
        EXPECT(0xe944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xe05f));
        EXPECT(0xb6, gbc.readMem(0xe943));
        // B6 0288
        gbc.setState(0xb1c4, 0x160f, 0x40d0, 0x5fda, 0x5b88, 0xb01f, 0x0, 0x1);
        gbc.writeMem(0xb01f, { 0xe3 });
        gbc.writeMem(0xb1c4, { 0xb6 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x160f, gbc.sp());
        EXPECT(0xb1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xb01f));
        EXPECT(0xb6, gbc.readMem(0xb1c4));
        // B6 0289
        gbc.setState(0x4ead, 0xd65e, 0x8550, 0xc542, 0x5c94, 0xa655, 0x0, 0x0);
        gbc.writeMem(0x4ead, { 0xb6 });
        gbc.writeMem(0xa655, { 0x24 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd65e, gbc.sp());
        EXPECT(0x4eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xa655));
        // B6 028A
        gbc.setState(0xeb9e, 0x30e, 0xbff0, 0x7805, 0x3a63, 0x2706, 0x0, 0x0);
        gbc.writeMem(0x2706, { 0x1b });
        gbc.writeMem(0xeb9e, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x30e, gbc.sp());
        EXPECT(0xeb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xeb9e));
        // B6 028B
        gbc.setState(0xc49c, 0xceb9, 0x8160, 0x2345, 0xecb, 0x9858, 0x0, 0x1);
        gbc.writeMem(0x9858, { 0xf2 });
        gbc.writeMem(0xc49c, { 0xb6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xceb9, gbc.sp());
        EXPECT(0xc49d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x9858));
        EXPECT(0xb6, gbc.readMem(0xc49c));
        // B6 028C
        gbc.setState(0x2a7, 0x9d21, 0xc60, 0xb333, 0xad80, 0xefed, 0x0, 0x0);
        gbc.writeMem(0x2a7, { 0xb6 });
        gbc.writeMem(0xefed, { 0xb0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9d21, gbc.sp());
        EXPECT(0x2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xefed));
        // B6 028D
        gbc.setState(0x8b15, 0x6edc, 0x49b0, 0x3382, 0x4f6, 0x3df4, 0x1, 0x1);
        gbc.writeMem(0x3df4, { 0x69 });
        gbc.writeMem(0x8b15, { 0xb6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6edc, gbc.sp());
        EXPECT(0x8b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8b15));
        // B6 028E
        gbc.setState(0x1b07, 0x411e, 0x5880, 0x5c6c, 0xcff1, 0xfeb5, 0x0, 0x0);
        gbc.writeMem(0x1b07, { 0xb6 });
        gbc.writeMem(0xfeb5, { 0x2c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x411e, gbc.sp());
        EXPECT(0x1b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xfeb5));
        // B6 028F
        gbc.setState(0x1760, 0xf4d7, 0x2100, 0xd8a9, 0x4fb4, 0x867f, 0x0, 0x1);
        gbc.writeMem(0x1760, { 0xb6 });
        gbc.writeMem(0x867f, { 0x49 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf4d7, gbc.sp());
        EXPECT(0x1761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x867f));
        // B6 0290
        gbc.setState(0x774a, 0xb0b7, 0x58f0, 0x4404, 0xb694, 0x2ad7, 0x1, 0x1);
        gbc.writeMem(0x2ad7, { 0xa6 });
        gbc.writeMem(0x774a, { 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb0b7, gbc.sp());
        EXPECT(0x774b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0291
        gbc.setState(0x42bd, 0x5889, 0x2e30, 0xfcec, 0xfb9c, 0x555c, 0x0, 0x0);
        gbc.writeMem(0x42bd, { 0xb6 });
        gbc.writeMem(0x555c, { 0x8f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5889, gbc.sp());
        EXPECT(0x42be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0292
        gbc.setState(0x9cd5, 0x5483, 0x6840, 0x4339, 0x469e, 0xcfcd, 0x0, 0x0);
        gbc.writeMem(0x9cd5, { 0xb6 });
        gbc.writeMem(0xcfcd, { 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5483, gbc.sp());
        EXPECT(0x9cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9cd5));
        EXPECT(0xe8, gbc.readMem(0xcfcd));
        // B6 0293
        gbc.setState(0xdf5e, 0x92f9, 0x38e0, 0x8ccc, 0xe242, 0xae94, 0x0, 0x0);
        gbc.writeMem(0xae94, { 0x1c });
        gbc.writeMem(0xdf5e, { 0xb6 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x92f9, gbc.sp());
        EXPECT(0xdf5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xae94));
        EXPECT(0xb6, gbc.readMem(0xdf5e));
        // B6 0294
        gbc.setState(0x9252, 0x3445, 0xc2c0, 0x6d56, 0x359, 0xfe1b, 0x0, 0x1);
        gbc.writeMem(0x9252, { 0xb6 });
        gbc.writeMem(0xfe1b, { 0x24 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3445, gbc.sp());
        EXPECT(0x9253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9252));
        EXPECT(0x24, gbc.readMem(0xfe1b));
        // B6 0295
        gbc.setState(0xdf32, 0x7993, 0x7460, 0xbc5c, 0xc64c, 0x140a, 0x1, 0x0);
        gbc.writeMem(0x140a, { 0xba });
        gbc.writeMem(0xdf32, { 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7993, gbc.sp());
        EXPECT(0xdf33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdf32));
        // B6 0297
        gbc.setState(0xc5a, 0x3e8f, 0xa600, 0xc38d, 0xf67b, 0x836f, 0x0, 0x0);
        gbc.writeMem(0xc5a, { 0xb6 });
        gbc.writeMem(0x836f, { 0xd9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3e8f, gbc.sp());
        EXPECT(0xc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x836f));
        // B6 0298
        gbc.setState(0x2eed, 0x9b9e, 0x29d0, 0x5e00, 0x1ebd, 0x7a59, 0x0, 0x1);
        gbc.writeMem(0x2eed, { 0xb6 });
        gbc.writeMem(0x7a59, { 0xb1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9b9e, gbc.sp());
        EXPECT(0x2eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0299
        gbc.setState(0x748c, 0x1666, 0xbc00, 0x78c4, 0x1efb, 0xb153, 0x1, 0x0);
        gbc.writeMem(0x748c, { 0xb6 });
        gbc.writeMem(0xb153, { 0xc9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1666, gbc.sp());
        EXPECT(0x748d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb153));
        // B6 029A
        gbc.setState(0x529e, 0xc2c3, 0xd300, 0xac12, 0xf44d, 0xf94, 0x0, 0x0);
        gbc.writeMem(0xf94, { 0x46 });
        gbc.writeMem(0x529e, { 0xb6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc2c3, gbc.sp());
        EXPECT(0x529f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 029B
        gbc.setState(0xdf3e, 0xdabf, 0xf5d0, 0xf5df, 0x1003, 0x5411, 0x1, 0x1);
        gbc.writeMem(0x5411, { 0x18 });
        gbc.writeMem(0xdf3e, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdabf, gbc.sp());
        EXPECT(0xdf3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdf3e));
        // B6 029D
        gbc.setState(0xe468, 0xb32b, 0x2ac0, 0x2b58, 0x514, 0x8428, 0x1, 0x0);
        gbc.writeMem(0x8428, { 0xd9 });
        gbc.writeMem(0xe468, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb32b, gbc.sp());
        EXPECT(0xe469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8428));
        EXPECT(0xb6, gbc.readMem(0xe468));
        // B6 029E
        gbc.setState(0x7b4c, 0x8db1, 0x1780, 0x7e14, 0xa26b, 0x3f38, 0x1, 0x1);
        gbc.writeMem(0x3f38, { 0xd8 });
        gbc.writeMem(0x7b4c, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8db1, gbc.sp());
        EXPECT(0x7b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 029F
        gbc.setState(0x12f2, 0x7c02, 0xc360, 0xa57, 0xe726, 0xfe53, 0x1, 0x1);
        gbc.writeMem(0x12f2, { 0xb6 });
        gbc.writeMem(0xfe53, { 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7c02, gbc.sp());
        EXPECT(0x12f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xfe53));
        // B6 02A0
        gbc.setState(0x5232, 0xfb58, 0x5f50, 0x65fb, 0xf7a2, 0x8a0f, 0x0, 0x0);
        gbc.writeMem(0x5232, { 0xb6 });
        gbc.writeMem(0x8a0f, { 0x53 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfb58, gbc.sp());
        EXPECT(0x5233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8a0f));
        // B6 02A1
        gbc.setState(0x84c3, 0x68fe, 0xe400, 0xe204, 0x71e1, 0x2c45, 0x1, 0x0);
        gbc.writeMem(0x2c45, { 0x8b });
        gbc.writeMem(0x84c3, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x68fe, gbc.sp());
        EXPECT(0x84c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x84c3));
        // B6 02A2
        gbc.setState(0x8029, 0x387e, 0x4dd0, 0x907d, 0xa8fa, 0xb037, 0x0, 0x1);
        gbc.writeMem(0x8029, { 0xb6 });
        gbc.writeMem(0xb037, { 0xf9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x387e, gbc.sp());
        EXPECT(0x802a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8029));
        EXPECT(0xf9, gbc.readMem(0xb037));
        // B6 02A3
        gbc.setState(0x5fd1, 0x6b15, 0x84d0, 0xb53a, 0x1c49, 0x8b43, 0x1, 0x0);
        gbc.writeMem(0x5fd1, { 0xb6 });
        gbc.writeMem(0x8b43, { 0x59 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6b15, gbc.sp());
        EXPECT(0x5fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0x8b43));
        // B6 02A5
        gbc.setState(0xe3d3, 0x1093, 0xa2a0, 0xe254, 0x4469, 0x9287, 0x1, 0x0);
        gbc.writeMem(0x9287, { 0x30 });
        gbc.writeMem(0xe3d3, { 0xb6 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1093, gbc.sp());
        EXPECT(0xe3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x9287));
        EXPECT(0xb6, gbc.readMem(0xe3d3));
        // B6 02A6
        gbc.setState(0x9608, 0xf58b, 0x2d20, 0x6c21, 0x100a, 0x3c1c, 0x1, 0x0);
        gbc.writeMem(0x3c1c, { 0xe8 });
        gbc.writeMem(0x9608, { 0xb6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf58b, gbc.sp());
        EXPECT(0x9609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9608));
        // B6 02A7
        gbc.setState(0xa3e0, 0xe8be, 0x8220, 0xa943, 0xe489, 0xb09a, 0x1, 0x0);
        gbc.writeMem(0xa3e0, { 0xb6 });
        gbc.writeMem(0xb09a, { 0x63 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe8be, gbc.sp());
        EXPECT(0xa3e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa3e0));
        EXPECT(0x63, gbc.readMem(0xb09a));
        // B6 02A8
        gbc.setState(0xd20b, 0xfaae, 0x76b0, 0xe5c3, 0xa301, 0xed3a, 0x1, 0x0);
        gbc.writeMem(0xd20b, { 0xb6 });
        gbc.writeMem(0xed3a, { 0x7c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfaae, gbc.sp());
        EXPECT(0xd20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd20b));
        EXPECT(0x7c, gbc.readMem(0xed3a));
        // B6 02A9
        gbc.setState(0xae15, 0xa93, 0x7e40, 0xb094, 0x7747, 0x6b8a, 0x0, 0x1);
        gbc.writeMem(0x6b8a, { 0x2d });
        gbc.writeMem(0xae15, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa93, gbc.sp());
        EXPECT(0xae16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xae15));
        // B6 02AA
        gbc.setState(0x717f, 0x6512, 0xf7d0, 0xb917, 0xf66c, 0x54ee, 0x1, 0x0);
        gbc.writeMem(0x54ee, { 0xe });
        gbc.writeMem(0x717f, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6512, gbc.sp());
        EXPECT(0x7180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02AB
        gbc.setState(0x1803, 0xd393, 0x9220, 0x242a, 0x71e2, 0xd7c3, 0x0, 0x0);
        gbc.writeMem(0x1803, { 0xb6 });
        gbc.writeMem(0xd7c3, { 0x5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd393, gbc.sp());
        EXPECT(0x1804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd7c3));
        // B6 02AC
        gbc.setState(0x39c2, 0xb155, 0x3800, 0xefa3, 0x2ffc, 0x70c5, 0x0, 0x1);
        gbc.writeMem(0x39c2, { 0xb6 });
        gbc.writeMem(0x70c5, { 0xed });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb155, gbc.sp());
        EXPECT(0x39c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02AD
        gbc.setState(0xe51, 0x6f31, 0x6ba0, 0x3423, 0x4771, 0xc8d0, 0x1, 0x1);
        gbc.writeMem(0xe51, { 0xb6 });
        gbc.writeMem(0xc8d0, { 0x26 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6f31, gbc.sp());
        EXPECT(0xe52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc8d0));
        // B6 02AE
        gbc.setState(0x5017, 0x5f3, 0xde30, 0xf73a, 0xf661, 0xcde7, 0x0, 0x1);
        gbc.writeMem(0x5017, { 0xb6 });
        gbc.writeMem(0xcde7, { 0x97 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5f3, gbc.sp());
        EXPECT(0x5018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xcde7));
        // B6 02AF
        gbc.setState(0x32a4, 0x9ff, 0xf7b0, 0x62bd, 0x8f31, 0xb85b, 0x1, 0x1);
        gbc.writeMem(0x32a4, { 0xb6 });
        gbc.writeMem(0xb85b, { 0xe8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9ff, gbc.sp());
        EXPECT(0x32a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xb85b));
        // B6 02B0
        gbc.setState(0x7eb5, 0xd3b6, 0xd250, 0xb651, 0xa530, 0xedeb, 0x1, 0x0);
        gbc.writeMem(0x7eb5, { 0xb6 });
        gbc.writeMem(0xedeb, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd3b6, gbc.sp());
        EXPECT(0x7eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xedeb));
        // B6 02B1
        gbc.setState(0xaeab, 0xee23, 0xebb0, 0x92c4, 0xbd9e, 0x74ea, 0x0, 0x0);
        gbc.writeMem(0x74ea, { 0x71 });
        gbc.writeMem(0xaeab, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xee23, gbc.sp());
        EXPECT(0xaeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xaeab));
        // B6 02B2
        gbc.setState(0x7822, 0x55a, 0xfb20, 0x415f, 0x9f3c, 0x1e5b, 0x1, 0x0);
        gbc.writeMem(0x1e5b, { 0xa0 });
        gbc.writeMem(0x7822, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x55a, gbc.sp());
        EXPECT(0x7823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02B3
        gbc.setState(0x1ffb, 0x2f60, 0x85c0, 0xf995, 0xeba8, 0xb557, 0x1, 0x1);
        gbc.writeMem(0x1ffb, { 0xb6 });
        gbc.writeMem(0xb557, { 0x4c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2f60, gbc.sp());
        EXPECT(0x1ffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb557));
        // B6 02B4
        gbc.setState(0x71ae, 0xf7c2, 0xbc30, 0xb29e, 0x3149, 0x2a1d, 0x0, 0x0);
        gbc.writeMem(0x2a1d, { 0x95 });
        gbc.writeMem(0x71ae, { 0xb6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf7c2, gbc.sp());
        EXPECT(0x71af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02B6
        gbc.setState(0x6b4, 0xa9f3, 0x2cf0, 0x8482, 0xf087, 0xd9c9, 0x0, 0x1);
        gbc.writeMem(0x6b4, { 0xb6 });
        gbc.writeMem(0xd9c9, { 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa9f3, gbc.sp());
        EXPECT(0x6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xd9c9));
        // B6 02B7
        gbc.setState(0xe021, 0x4500, 0x5ef0, 0xfce0, 0xd21c, 0x61, 0x0, 0x0);
        gbc.writeMem(0x61, { 0x8f });
        gbc.writeMem(0xe021, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4500, gbc.sp());
        EXPECT(0xe022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe021));
        // B6 02B8
        gbc.setState(0xa9fd, 0xfca4, 0x59c0, 0x1953, 0xde6e, 0xe854, 0x1, 0x1);
        gbc.writeMem(0xa9fd, { 0xb6 });
        gbc.writeMem(0xe854, { 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfca4, gbc.sp());
        EXPECT(0xa9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa9fd));
        EXPECT(0xfd, gbc.readMem(0xe854));
        // B6 02B9
        gbc.setState(0xb126, 0xe282, 0x9420, 0x41ba, 0x2837, 0x2771, 0x0, 0x1);
        gbc.writeMem(0x2771, { 0x97 });
        gbc.writeMem(0xb126, { 0xb6 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe282, gbc.sp());
        EXPECT(0xb127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb126));
        // B6 02BA
        gbc.setState(0x27f4, 0xe748, 0x43a0, 0xb6d0, 0xa78e, 0x9b36, 0x1, 0x1);
        gbc.writeMem(0x27f4, { 0xb6 });
        gbc.writeMem(0x9b36, { 0x1c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe748, gbc.sp());
        EXPECT(0x27f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9b36));
        // B6 02BB
        gbc.setState(0x6a85, 0xbf4a, 0x6430, 0x1478, 0x49da, 0x31a4, 0x1, 0x0);
        gbc.writeMem(0x31a4, { 0xce });
        gbc.writeMem(0x6a85, { 0xb6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbf4a, gbc.sp());
        EXPECT(0x6a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02BC
        gbc.setState(0x26d9, 0xc81b, 0x6e50, 0xa8ed, 0x8cb9, 0x2c9f, 0x0, 0x1);
        gbc.writeMem(0x26d9, { 0xb6 });
        gbc.writeMem(0x2c9f, { 0xf2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc81b, gbc.sp());
        EXPECT(0x26da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02BD
        gbc.setState(0x2974, 0x1c23, 0x5230, 0xb688, 0x124a, 0xb4c3, 0x1, 0x1);
        gbc.writeMem(0x2974, { 0xb6 });
        gbc.writeMem(0xb4c3, { 0x15 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1c23, gbc.sp());
        EXPECT(0x2975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb4c3));
        // B6 02BE
        gbc.setState(0xb374, 0x480b, 0xf160, 0xa2c, 0xa3d8, 0x8281, 0x1, 0x1);
        gbc.writeMem(0x8281, { 0xb8 });
        gbc.writeMem(0xb374, { 0xb6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x480b, gbc.sp());
        EXPECT(0xb375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x8281));
        EXPECT(0xb6, gbc.readMem(0xb374));
        // B6 02BF
        gbc.setState(0xc8f7, 0x4fe9, 0xe0c0, 0xcae, 0x78a7, 0x29, 0x0, 0x1);
        gbc.writeMem(0x29, { 0xf0 });
        gbc.writeMem(0xc8f7, { 0xb6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4fe9, gbc.sp());
        EXPECT(0xc8f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc8f7));
        // B6 02C0
        gbc.setState(0x9ca1, 0x3287, 0xe270, 0x5519, 0x9e3a, 0x4f55, 0x0, 0x0);
        gbc.writeMem(0x4f55, { 0xcc });
        gbc.writeMem(0x9ca1, { 0xb6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3287, gbc.sp());
        EXPECT(0x9ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9ca1));
        // B6 02C1
        gbc.setState(0xb2ad, 0x4313, 0x75e0, 0x1172, 0xcf7d, 0x10a5, 0x1, 0x1);
        gbc.writeMem(0x10a5, { 0x51 });
        gbc.writeMem(0xb2ad, { 0xb6 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4313, gbc.sp());
        EXPECT(0xb2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb2ad));
        // B6 02C2
        gbc.setState(0xb08, 0x5353, 0xfd50, 0x12b6, 0xb916, 0x9fca, 0x0, 0x0);
        gbc.writeMem(0xb08, { 0xb6 });
        gbc.writeMem(0x9fca, { 0xb5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5353, gbc.sp());
        EXPECT(0xb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9fca));
        // B6 02C3
        gbc.setState(0x358d, 0xf8c6, 0xb710, 0xcb69, 0x9c73, 0x9cd7, 0x0, 0x1);
        gbc.writeMem(0x358d, { 0xb6 });
        gbc.writeMem(0x9cd7, { 0x1d });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf8c6, gbc.sp());
        EXPECT(0x358e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9cd7));
        // B6 02C4
        gbc.setState(0xe1ec, 0x10a4, 0xf650, 0xeb6c, 0x24b6, 0xf55, 0x1, 0x1);
        gbc.writeMem(0xf55, { 0x69 });
        gbc.writeMem(0xe1ec, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x10a4, gbc.sp());
        EXPECT(0xe1ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe1ec));
        // B6 02C5
        gbc.setState(0x714e, 0x29ce, 0x8370, 0xf511, 0x8c29, 0x4a5e, 0x0, 0x1);
        gbc.writeMem(0x4a5e, { 0xfd });
        gbc.writeMem(0x714e, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x29ce, gbc.sp());
        EXPECT(0x714f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02C6
        gbc.setState(0x89a6, 0x2471, 0x5890, 0x47e0, 0x590d, 0x73d8, 0x0, 0x1);
        gbc.writeMem(0x73d8, { 0xe9 });
        gbc.writeMem(0x89a6, { 0xb6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2471, gbc.sp());
        EXPECT(0x89a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x89a6));
        // B6 02C7
        gbc.setState(0xabd8, 0xeb5e, 0xe850, 0xa9e6, 0xace1, 0xd33f, 0x1, 0x1);
        gbc.writeMem(0xabd8, { 0xb6 });
        gbc.writeMem(0xd33f, { 0xbf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xeb5e, gbc.sp());
        EXPECT(0xabd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xabd8));
        EXPECT(0xbf, gbc.readMem(0xd33f));
        // B6 02C8
        gbc.setState(0xed2a, 0x349d, 0x3840, 0x3258, 0xc96f, 0x9983, 0x0, 0x1);
        gbc.writeMem(0x9983, { 0xf5 });
        gbc.writeMem(0xed2a, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x349d, gbc.sp());
        EXPECT(0xed2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9983));
        EXPECT(0xb6, gbc.readMem(0xed2a));
        // B6 02C9
        gbc.setState(0x53eb, 0x64e9, 0x4180, 0x6d56, 0x2af5, 0x2b47, 0x0, 0x0);
        gbc.writeMem(0x2b47, { 0x6c });
        gbc.writeMem(0x53eb, { 0xb6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x64e9, gbc.sp());
        EXPECT(0x53ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02CA
        gbc.setState(0xd947, 0x200e, 0xf1f0, 0x408, 0x19b6, 0x36d6, 0x1, 0x0);
        gbc.writeMem(0x36d6, { 0xa0 });
        gbc.writeMem(0xd947, { 0xb6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x200e, gbc.sp());
        EXPECT(0xd948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd947));
        // B6 02CB
        gbc.setState(0x82d8, 0x3bb0, 0x2b10, 0x4b3a, 0x7a06, 0x4329, 0x1, 0x0);
        gbc.writeMem(0x4329, { 0x8b });
        gbc.writeMem(0x82d8, { 0xb6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3bb0, gbc.sp());
        EXPECT(0x82d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x82d8));
        // B6 02CC
        gbc.setState(0x3e1, 0x2b6d, 0x9500, 0xef5c, 0x3761, 0xbd68, 0x1, 0x1);
        gbc.writeMem(0x3e1, { 0xb6 });
        gbc.writeMem(0xbd68, { 0xba });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2b6d, gbc.sp());
        EXPECT(0x3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xbd68));
        // B6 02CD
        gbc.setState(0xe67b, 0x6333, 0x73c0, 0xa6b6, 0xa97b, 0xb7b3, 0x1, 0x1);
        gbc.writeMem(0xb7b3, { 0x2d });
        gbc.writeMem(0xe67b, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6333, gbc.sp());
        EXPECT(0xe67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb7b3));
        EXPECT(0xb6, gbc.readMem(0xe67b));
        // B6 02CE
        gbc.setState(0x9025, 0xd616, 0x90e0, 0x33d7, 0xd2c2, 0xead2, 0x1, 0x0);
        gbc.writeMem(0x9025, { 0xb6 });
        gbc.writeMem(0xead2, { 0xf4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd616, gbc.sp());
        EXPECT(0x9026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9025));
        EXPECT(0xf4, gbc.readMem(0xead2));
        // B6 02CF
        gbc.setState(0x601e, 0xaf7d, 0xd250, 0xfe6a, 0xfc43, 0x58ff, 0x1, 0x1);
        gbc.writeMem(0x58ff, { 0x7c });
        gbc.writeMem(0x601e, { 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xaf7d, gbc.sp());
        EXPECT(0x601f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02D0
        gbc.setState(0x8d00, 0x67, 0x3b20, 0x3a68, 0x2f1, 0x21d5, 0x0, 0x0);
        gbc.writeMem(0x21d5, { 0x55 });
        gbc.writeMem(0x8d00, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x67, gbc.sp());
        EXPECT(0x8d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8d00));
        // B6 02D1
        gbc.setState(0xbec5, 0xb6c6, 0xce80, 0x56d7, 0x3141, 0x1247, 0x1, 0x0);
        gbc.writeMem(0x1247, { 0xc1 });
        gbc.writeMem(0xbec5, { 0xb6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb6c6, gbc.sp());
        EXPECT(0xbec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xbec5));
        // B6 02D2
        gbc.setState(0x4248, 0xf5be, 0x66e0, 0x7863, 0x7e9f, 0xc7d8, 0x0, 0x1);
        gbc.writeMem(0x4248, { 0xb6 });
        gbc.writeMem(0xc7d8, { 0x48 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf5be, gbc.sp());
        EXPECT(0x4249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xc7d8));
        // B6 02D3
        gbc.setState(0x8bc3, 0xd215, 0xab60, 0xd450, 0x2694, 0x51ac, 0x0, 0x1);
        gbc.writeMem(0x51ac, { 0x62 });
        gbc.writeMem(0x8bc3, { 0xb6 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd215, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8bc3));
        // B6 02D4
        gbc.setState(0x166, 0x7fcb, 0xfd60, 0x2790, 0x211f, 0xbe96, 0x1, 0x0);
        gbc.writeMem(0x166, { 0xb6 });
        gbc.writeMem(0xbe96, { 0xba });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7fcb, gbc.sp());
        EXPECT(0x167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xbe96));
        // B6 02D5
        gbc.setState(0xdfa7, 0x825d, 0x90e0, 0x3940, 0x17cd, 0x27aa, 0x1, 0x0);
        gbc.writeMem(0x27aa, { 0xeb });
        gbc.writeMem(0xdfa7, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x825d, gbc.sp());
        EXPECT(0xdfa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdfa7));
        // B6 02D6
        gbc.setState(0xa16f, 0xdf85, 0x1750, 0x9d58, 0x93ad, 0xdd, 0x1, 0x0);
        gbc.writeMem(0xdd, { 0x49 });
        gbc.writeMem(0xa16f, { 0xb6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdf85, gbc.sp());
        EXPECT(0xa170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa16f));
        // B6 02D7
        gbc.setState(0x9ece, 0xb5b1, 0x5680, 0x4c1, 0x532c, 0xc306, 0x0, 0x0);
        gbc.writeMem(0x9ece, { 0xb6 });
        gbc.writeMem(0xc306, { 0xd9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb5b1, gbc.sp());
        EXPECT(0x9ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9ece));
        EXPECT(0xd9, gbc.readMem(0xc306));
        // B6 02D8
        gbc.setState(0xd26b, 0x2af9, 0xd190, 0x7fb1, 0x4225, 0xbe35, 0x1, 0x1);
        gbc.writeMem(0xbe35, { 0xc3 });
        gbc.writeMem(0xd26b, { 0xb6 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2af9, gbc.sp());
        EXPECT(0xd26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbe35));
        EXPECT(0xb6, gbc.readMem(0xd26b));
        // B6 02DA
        gbc.setState(0x30, 0xc0e8, 0x74b0, 0x5b2, 0x9f83, 0x8425, 0x1, 0x0);
        gbc.writeMem(0x30, { 0xb6 });
        gbc.writeMem(0x8425, { 0x35 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0x31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x8425));
        // B6 02DB
        gbc.setState(0x69da, 0xe211, 0x3da0, 0x387, 0xfc06, 0x2d59, 0x0, 0x0);
        gbc.writeMem(0x2d59, { 0x1 });
        gbc.writeMem(0x69da, { 0xb6 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe211, gbc.sp());
        EXPECT(0x69db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02DC
        gbc.setState(0x3735, 0x3bb4, 0x4c90, 0xe1aa, 0xedbe, 0x7836, 0x1, 0x1);
        gbc.writeMem(0x3735, { 0xb6 });
        gbc.writeMem(0x7836, { 0xc2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3bb4, gbc.sp());
        EXPECT(0x3736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02DD
        gbc.setState(0x23a5, 0x9d28, 0xe0a0, 0x183, 0xf983, 0x409e, 0x0, 0x0);
        gbc.writeMem(0x23a5, { 0xb6 });
        gbc.writeMem(0x409e, { 0xc2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9d28, gbc.sp());
        EXPECT(0x23a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02DE
        gbc.setState(0x8358, 0x5de0, 0x9fb0, 0x25dc, 0x63b6, 0x821e, 0x0, 0x0);
        gbc.writeMem(0x821e, { 0xac });
        gbc.writeMem(0x8358, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5de0, gbc.sp());
        EXPECT(0x8359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x821e));
        EXPECT(0xb6, gbc.readMem(0x8358));
        // B6 02DF
        gbc.setState(0x24c0, 0xe713, 0x42e0, 0x1ddd, 0xf98f, 0x480, 0x1, 0x0);
        gbc.writeMem(0x480, { 0xff });
        gbc.writeMem(0x24c0, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe713, gbc.sp());
        EXPECT(0x24c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02E0
        gbc.setState(0x5b8b, 0xc598, 0x41a0, 0x9ff4, 0x330b, 0xa9ff, 0x1, 0x0);
        gbc.writeMem(0x5b8b, { 0xb6 });
        gbc.writeMem(0xa9ff, { 0x19 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc598, gbc.sp());
        EXPECT(0x5b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa9ff));
        // B6 02E1
        gbc.setState(0x7f47, 0x37c3, 0xe370, 0xfe33, 0xa0d7, 0x5e9c, 0x1, 0x1);
        gbc.writeMem(0x5e9c, { 0x56 });
        gbc.writeMem(0x7f47, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x37c3, gbc.sp());
        EXPECT(0x7f48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02E2
        gbc.setState(0x7314, 0x4143, 0x48f0, 0x39a5, 0x1d91, 0xef83, 0x0, 0x0);
        gbc.writeMem(0x7314, { 0xb6 });
        gbc.writeMem(0xef83, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4143, gbc.sp());
        EXPECT(0x7315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xef83));
        // B6 02E3
        gbc.setState(0x77cb, 0xe249, 0x6b40, 0x669a, 0x17c1, 0x157b, 0x1, 0x0);
        gbc.writeMem(0x157b, { 0x6d });
        gbc.writeMem(0x77cb, { 0xb6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe249, gbc.sp());
        EXPECT(0x77cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02E4
        gbc.setState(0xc233, 0x38f4, 0x5c90, 0xccce, 0x4a2b, 0x1374, 0x1, 0x1);
        gbc.writeMem(0x1374, { 0xfd });
        gbc.writeMem(0xc233, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x38f4, gbc.sp());
        EXPECT(0xc234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc233));
        // B6 02E5
        gbc.setState(0x568f, 0x4076, 0x7d0, 0x681a, 0x30fa, 0xefbd, 0x0, 0x1);
        gbc.writeMem(0x568f, { 0xb6 });
        gbc.writeMem(0xefbd, { 0xae });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4076, gbc.sp());
        EXPECT(0x5690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xefbd));
        // B6 02E6
        gbc.setState(0x1dbf, 0x7aaa, 0x8e00, 0xc82, 0x1436, 0x9e12, 0x1, 0x1);
        gbc.writeMem(0x1dbf, { 0xb6 });
        gbc.writeMem(0x9e12, { 0xb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7aaa, gbc.sp());
        EXPECT(0x1dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x9e12));
        // B6 02E7
        gbc.setState(0x8c4d, 0xaac3, 0x1970, 0x3e3, 0x17e7, 0x541, 0x0, 0x0);
        gbc.writeMem(0x541, { 0xb6 });
        gbc.writeMem(0x8c4d, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xaac3, gbc.sp());
        EXPECT(0x8c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8c4d));
        // B6 02E8
        gbc.setState(0x50d6, 0xd98f, 0x45f0, 0x12d1, 0xc089, 0x7ee8, 0x0, 0x1);
        gbc.writeMem(0x50d6, { 0xb6 });
        gbc.writeMem(0x7ee8, { 0x7e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd98f, gbc.sp());
        EXPECT(0x50d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02E9
        gbc.setState(0x8181, 0xf7ff, 0xf800, 0xbf0f, 0xf179, 0x316a, 0x1, 0x0);
        gbc.writeMem(0x316a, { 0xd });
        gbc.writeMem(0x8181, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf7ff, gbc.sp());
        EXPECT(0x8182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8181));
        // B6 02EA
        gbc.setState(0x289a, 0x2cbc, 0x94c0, 0xebe3, 0x540d, 0xc9fa, 0x0, 0x1);
        gbc.writeMem(0x289a, { 0xb6 });
        gbc.writeMem(0xc9fa, { 0xd });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2cbc, gbc.sp());
        EXPECT(0x289b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xc9fa));
        // B6 02EB
        gbc.setState(0x5f01, 0xf151, 0x1590, 0xe284, 0xdcc4, 0xc432, 0x1, 0x1);
        gbc.writeMem(0x5f01, { 0xb6 });
        gbc.writeMem(0xc432, { 0x24 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf151, gbc.sp());
        EXPECT(0x5f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xc432));
        // B6 02EC
        gbc.setState(0xeefe, 0x6296, 0x4280, 0x520a, 0xa3d1, 0xc52f, 0x0, 0x1);
        gbc.writeMem(0xc52f, { 0x5b });
        gbc.writeMem(0xeefe, { 0xb6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6296, gbc.sp());
        EXPECT(0xeeff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xc52f));
        EXPECT(0xb6, gbc.readMem(0xeefe));
        // B6 02ED
        gbc.setState(0xe451, 0xcfd7, 0x85c0, 0xb2ff, 0x2937, 0xba59, 0x0, 0x1);
        gbc.writeMem(0xba59, { 0x12 });
        gbc.writeMem(0xe451, { 0xb6 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcfd7, gbc.sp());
        EXPECT(0xe452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xba59));
        EXPECT(0xb6, gbc.readMem(0xe451));
        // B6 02EF
        gbc.setState(0xba43, 0xb0f0, 0xee00, 0xc9ca, 0xe52a, 0xb700, 0x0, 0x0);
        gbc.writeMem(0xb700, { 0x27 });
        gbc.writeMem(0xba43, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb0f0, gbc.sp());
        EXPECT(0xba44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb700));
        EXPECT(0xb6, gbc.readMem(0xba43));
        // B6 02F0
        gbc.setState(0x685d, 0x6b92, 0x6890, 0x6899, 0x5a4f, 0xa885, 0x1, 0x1);
        gbc.writeMem(0x685d, { 0xb6 });
        gbc.writeMem(0xa885, { 0xa8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6b92, gbc.sp());
        EXPECT(0x685e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xa885));
        // B6 02F1
        gbc.setState(0xb4d7, 0xefaa, 0x42f0, 0x87a4, 0xd26, 0xe521, 0x0, 0x0);
        gbc.writeMem(0xb4d7, { 0xb6 });
        gbc.writeMem(0xe521, { 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xefaa, gbc.sp());
        EXPECT(0xb4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb4d7));
        EXPECT(0x7b, gbc.readMem(0xe521));
        // B6 02F2
        gbc.setState(0x5f74, 0x39e2, 0x8400, 0xef07, 0xe243, 0x3590, 0x1, 0x0);
        gbc.writeMem(0x3590, { 0x22 });
        gbc.writeMem(0x5f74, { 0xb6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x39e2, gbc.sp());
        EXPECT(0x5f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02F3
        gbc.setState(0x7c70, 0xf142, 0xfbf0, 0x5e03, 0x720b, 0x227, 0x0, 0x1);
        gbc.writeMem(0x227, { 0x94 });
        gbc.writeMem(0x7c70, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf142, gbc.sp());
        EXPECT(0x7c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02F4
        gbc.setState(0x6188, 0x7cf, 0x8c00, 0x60fc, 0xc651, 0xa730, 0x0, 0x0);
        gbc.writeMem(0x6188, { 0xb6 });
        gbc.writeMem(0xa730, { 0x86 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7cf, gbc.sp());
        EXPECT(0x6189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xa730));
        // B6 02F5
        gbc.setState(0x67e7, 0x2fb2, 0x86d0, 0x4533, 0x92b6, 0x90a, 0x0, 0x0);
        gbc.writeMem(0x90a, { 0xaf });
        gbc.writeMem(0x67e7, { 0xb6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2fb2, gbc.sp());
        EXPECT(0x67e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02F7
        gbc.setState(0x2e92, 0x6c59, 0x2a40, 0x3e3f, 0x585d, 0xf480, 0x0, 0x1);
        gbc.writeMem(0x2e92, { 0xb6 });
        gbc.writeMem(0xf480, { 0x93 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6c59, gbc.sp());
        EXPECT(0x2e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xf480));
        // B6 02F8
        gbc.setState(0x2b07, 0xc061, 0x3220, 0xd8e5, 0x9e50, 0x49f1, 0x1, 0x1);
        gbc.writeMem(0x2b07, { 0xb6 });
        gbc.writeMem(0x49f1, { 0x39 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc061, gbc.sp());
        EXPECT(0x2b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02F9
        gbc.setState(0x5926, 0x40d2, 0x1d80, 0xdaed, 0x9579, 0xdde0, 0x0, 0x1);
        gbc.writeMem(0x5926, { 0xb6 });
        gbc.writeMem(0xdde0, { 0xa2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x40d2, gbc.sp());
        EXPECT(0x5927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xdde0));
        // B6 02FA
        gbc.setState(0xacab, 0xea6d, 0xcf70, 0x5e1b, 0xd583, 0xc51, 0x1, 0x1);
        gbc.writeMem(0xc51, { 0xfb });
        gbc.writeMem(0xacab, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xea6d, gbc.sp());
        EXPECT(0xacac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xacab));
        // B6 02FB
        gbc.setState(0x3981, 0x9885, 0x560, 0xe36e, 0x9d31, 0xdbc9, 0x0, 0x0);
        gbc.writeMem(0x3981, { 0xb6 });
        gbc.writeMem(0xdbc9, { 0xdb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9885, gbc.sp());
        EXPECT(0x3982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xdbc9));
        // B6 02FC
        gbc.setState(0xc724, 0xf78f, 0xd490, 0x5ca3, 0xb251, 0x10f3, 0x1, 0x1);
        gbc.writeMem(0x10f3, { 0xfc });
        gbc.writeMem(0xc724, { 0xb6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf78f, gbc.sp());
        EXPECT(0xc725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc724));
        // B6 02FD
        gbc.setState(0x5be9, 0x4346, 0x9870, 0x112e, 0x3a0f, 0x398, 0x1, 0x0);
        gbc.writeMem(0x398, { 0x13 });
        gbc.writeMem(0x5be9, { 0xb6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4346, gbc.sp());
        EXPECT(0x5bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 02FE
        gbc.setState(0xb4f9, 0xeaa, 0xad30, 0x28d9, 0x9e1b, 0xf7f7, 0x0, 0x1);
        gbc.writeMem(0xb4f9, { 0xb6 });
        gbc.writeMem(0xf7f7, { 0x50 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0xb4fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb4f9));
        EXPECT(0x50, gbc.readMem(0xf7f7));
        // B6 0300
        gbc.setState(0x185, 0xd69b, 0xe2b0, 0x92f5, 0x36b4, 0xfd85, 0x1, 0x0);
        gbc.writeMem(0x185, { 0xb6 });
        gbc.writeMem(0xfd85, { 0x77 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd69b, gbc.sp());
        EXPECT(0x186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xfd85));
        // B6 0301
        gbc.setState(0x4236, 0x832b, 0xf780, 0x1b47, 0xb706, 0x2f11, 0x0, 0x1);
        gbc.writeMem(0x2f11, { 0xb8 });
        gbc.writeMem(0x4236, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x832b, gbc.sp());
        EXPECT(0x4237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0302
        gbc.setState(0x4dcc, 0x6f5f, 0xbca0, 0x539f, 0x4a74, 0x84a, 0x1, 0x1);
        gbc.writeMem(0x84a, { 0x1 });
        gbc.writeMem(0x4dcc, { 0xb6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6f5f, gbc.sp());
        EXPECT(0x4dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0303
        gbc.setState(0xa535, 0x3ed6, 0xcf70, 0x4029, 0xce83, 0x43f5, 0x0, 0x1);
        gbc.writeMem(0x43f5, { 0x8e });
        gbc.writeMem(0xa535, { 0xb6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3ed6, gbc.sp());
        EXPECT(0xa536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa535));
        // B6 0304
        gbc.setState(0xf0b, 0x7130, 0x4a60, 0x44e0, 0x6a4f, 0x3798, 0x0, 0x1);
        gbc.writeMem(0xf0b, { 0xb6 });
        gbc.writeMem(0x3798, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7130, gbc.sp());
        EXPECT(0xf0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0305
        gbc.setState(0xa8f3, 0xff01, 0xf220, 0x516d, 0x6b13, 0x971f, 0x1, 0x0);
        gbc.writeMem(0x971f, { 0xb3 });
        gbc.writeMem(0xa8f3, { 0xb6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xff01, gbc.sp());
        EXPECT(0xa8f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x971f));
        EXPECT(0xb6, gbc.readMem(0xa8f3));
        // B6 0307
        gbc.setState(0x36b, 0x2a20, 0x9cc0, 0x5879, 0xd6a6, 0x75af, 0x0, 0x1);
        gbc.writeMem(0x36b, { 0xb6 });
        gbc.writeMem(0x75af, { 0x2a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2a20, gbc.sp());
        EXPECT(0x36c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0308
        gbc.setState(0xbc47, 0xa2ba, 0x1fd0, 0x36c0, 0x21a4, 0x958a, 0x0, 0x0);
        gbc.writeMem(0x958a, { 0x8e });
        gbc.writeMem(0xbc47, { 0xb6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa2ba, gbc.sp());
        EXPECT(0xbc48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x958a));
        EXPECT(0xb6, gbc.readMem(0xbc47));
        // B6 0309
        gbc.setState(0x28ab, 0xe9b9, 0xd510, 0xc3fc, 0xa158, 0x2128, 0x0, 0x1);
        gbc.writeMem(0x2128, { 0x3a });
        gbc.writeMem(0x28ab, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe9b9, gbc.sp());
        EXPECT(0x28ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 030A
        gbc.setState(0x3225, 0x7c88, 0x680, 0xfa5e, 0xfedb, 0xabd, 0x0, 0x0);
        gbc.writeMem(0xabd, { 0xe5 });
        gbc.writeMem(0x3225, { 0xb6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7c88, gbc.sp());
        EXPECT(0x3226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 030B
        gbc.setState(0xd823, 0xc866, 0x6740, 0xd656, 0x6852, 0xac72, 0x1, 0x1);
        gbc.writeMem(0xac72, { 0x66 });
        gbc.writeMem(0xd823, { 0xb6 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc866, gbc.sp());
        EXPECT(0xd824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xac72));
        EXPECT(0xb6, gbc.readMem(0xd823));
        // B6 030C
        gbc.setState(0xbc4c, 0x770f, 0x7e30, 0xeac6, 0xa824, 0x3b02, 0x0, 0x0);
        gbc.writeMem(0x3b02, { 0x45 });
        gbc.writeMem(0xbc4c, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x770f, gbc.sp());
        EXPECT(0xbc4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xbc4c));
        // B6 030D
        gbc.setState(0xb2e9, 0xcd6a, 0x1d60, 0xff86, 0xe051, 0x145c, 0x1, 0x1);
        gbc.writeMem(0x145c, { 0xce });
        gbc.writeMem(0xb2e9, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcd6a, gbc.sp());
        EXPECT(0xb2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb2e9));
        // B6 030E
        gbc.setState(0xef73, 0x5b29, 0xe10, 0x4f3, 0x4d12, 0xdf25, 0x1, 0x1);
        gbc.writeMem(0xdf25, { 0x30 });
        gbc.writeMem(0xef73, { 0xb6 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5b29, gbc.sp());
        EXPECT(0xef74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xdf25));
        EXPECT(0xb6, gbc.readMem(0xef73));
        // B6 030F
        gbc.setState(0x4729, 0x1dc1, 0xf250, 0x6495, 0x1449, 0xa037, 0x0, 0x1);
        gbc.writeMem(0x4729, { 0xb6 });
        gbc.writeMem(0xa037, { 0x1b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1dc1, gbc.sp());
        EXPECT(0x472a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xa037));
        // B6 0311
        gbc.setState(0xc9ac, 0x3004, 0x1680, 0xb82e, 0xd2ab, 0x5dc, 0x0, 0x1);
        gbc.writeMem(0x5dc, { 0x42 });
        gbc.writeMem(0xc9ac, { 0xb6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3004, gbc.sp());
        EXPECT(0xc9ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc9ac));
        // B6 0312
        gbc.setState(0x8603, 0xd798, 0xf6d0, 0xc41e, 0x246e, 0x9823, 0x1, 0x1);
        gbc.writeMem(0x8603, { 0xb6 });
        gbc.writeMem(0x9823, { 0x99 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd798, gbc.sp());
        EXPECT(0x8604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8603));
        EXPECT(0x99, gbc.readMem(0x9823));
        // B6 0313
        gbc.setState(0x393c, 0x868, 0x7770, 0xdb25, 0x1447, 0x12d1, 0x1, 0x1);
        gbc.writeMem(0x12d1, { 0xd7 });
        gbc.writeMem(0x393c, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x868, gbc.sp());
        EXPECT(0x393d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0314
        gbc.setState(0x682f, 0xfadc, 0x9380, 0xbb64, 0x3270, 0x576a, 0x1, 0x0);
        gbc.writeMem(0x576a, { 0x73 });
        gbc.writeMem(0x682f, { 0xb6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfadc, gbc.sp());
        EXPECT(0x6830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0315
        gbc.setState(0xd93d, 0xb487, 0x4900, 0xaabd, 0x7b73, 0x6fca, 0x0, 0x1);
        gbc.writeMem(0x6fca, { 0xe4 });
        gbc.writeMem(0xd93d, { 0xb6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb487, gbc.sp());
        EXPECT(0xd93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd93d));
        // B6 0316
        gbc.setState(0xacf, 0xcfa0, 0x2bd0, 0xc48a, 0x32e9, 0xebc8, 0x0, 0x1);
        gbc.writeMem(0xacf, { 0xb6 });
        gbc.writeMem(0xebc8, { 0xc8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcfa0, gbc.sp());
        EXPECT(0xad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xebc8));
        // B6 0317
        gbc.setState(0x8bff, 0x6528, 0x2bb0, 0x20b0, 0x2d90, 0x36ea, 0x1, 0x0);
        gbc.writeMem(0x36ea, { 0x64 });
        gbc.writeMem(0x8bff, { 0xb6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6528, gbc.sp());
        EXPECT(0x8c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8bff));
        // B6 0318
        gbc.setState(0x34ab, 0x254e, 0xb950, 0x4ccc, 0x16d, 0xde0, 0x0, 0x0);
        gbc.writeMem(0xde0, { 0x68 });
        gbc.writeMem(0x34ab, { 0xb6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x254e, gbc.sp());
        EXPECT(0x34ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0319
        gbc.setState(0x17f7, 0x491a, 0x8340, 0x74af, 0xd7d6, 0x5413, 0x1, 0x1);
        gbc.writeMem(0x17f7, { 0xb6 });
        gbc.writeMem(0x5413, { 0xe6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x491a, gbc.sp());
        EXPECT(0x17f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 031A
        gbc.setState(0xde43, 0x9cb8, 0xefc0, 0x1896, 0x421a, 0xe1b4, 0x1, 0x1);
        gbc.writeMem(0xde43, { 0xb6 });
        gbc.writeMem(0xe1b4, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0xde44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xde43));
        EXPECT(0x0, gbc.readMem(0xe1b4));
        // B6 031B
        gbc.setState(0xc4db, 0xc514, 0x4f0, 0x7bae, 0x68b7, 0x4e64, 0x1, 0x0);
        gbc.writeMem(0x4e64, { 0x7 });
        gbc.writeMem(0xc4db, { 0xb6 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc514, gbc.sp());
        EXPECT(0xc4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc4db));
        // B6 031C
        gbc.setState(0x7040, 0x75f8, 0x1010, 0x368f, 0x6279, 0xb985, 0x1, 0x1);
        gbc.writeMem(0x7040, { 0xb6 });
        gbc.writeMem(0xb985, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x75f8, gbc.sp());
        EXPECT(0x7041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xb985));
        // B6 031D
        gbc.setState(0xd458, 0x3aed, 0x5d60, 0x971c, 0x43b9, 0x4940, 0x1, 0x0);
        gbc.writeMem(0x4940, { 0xd5 });
        gbc.writeMem(0xd458, { 0xb6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3aed, gbc.sp());
        EXPECT(0xd459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd458));
        // B6 031E
        gbc.setState(0xd2e7, 0xd98c, 0xab40, 0x41a1, 0x8fff, 0x4adb, 0x0, 0x0);
        gbc.writeMem(0x4adb, { 0xe0 });
        gbc.writeMem(0xd2e7, { 0xb6 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd98c, gbc.sp());
        EXPECT(0xd2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd2e7));
        // B6 031F
        gbc.setState(0xc6a4, 0x98b5, 0x2fc0, 0x9cf8, 0xd0a5, 0xd6ee, 0x1, 0x0);
        gbc.writeMem(0xc6a4, { 0xb6 });
        gbc.writeMem(0xd6ee, { 0x7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x98b5, gbc.sp());
        EXPECT(0xc6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc6a4));
        EXPECT(0x7, gbc.readMem(0xd6ee));
        // B6 0320
        gbc.setState(0xec16, 0x1b2, 0x5bd0, 0x6db2, 0x4af8, 0x531a, 0x0, 0x0);
        gbc.writeMem(0x531a, { 0xe2 });
        gbc.writeMem(0xec16, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1b2, gbc.sp());
        EXPECT(0xec17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xec16));
        // B6 0321
        gbc.setState(0x9f70, 0xbc2d, 0xabf0, 0x2872, 0x35f2, 0x7792, 0x1, 0x0);
        gbc.writeMem(0x7792, { 0x81 });
        gbc.writeMem(0x9f70, { 0xb6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbc2d, gbc.sp());
        EXPECT(0x9f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9f70));
        // B6 0322
        gbc.setState(0x35f0, 0x2fa3, 0x5ec0, 0x276, 0xb461, 0xe69, 0x1, 0x1);
        gbc.writeMem(0xe69, { 0xf1 });
        gbc.writeMem(0x35f0, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2fa3, gbc.sp());
        EXPECT(0x35f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0323
        gbc.setState(0x2fd0, 0x8c89, 0xaf30, 0x5f95, 0x49e9, 0x51a7, 0x1, 0x1);
        gbc.writeMem(0x2fd0, { 0xb6 });
        gbc.writeMem(0x51a7, { 0xc3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8c89, gbc.sp());
        EXPECT(0x2fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0324
        gbc.setState(0x9190, 0x9d4f, 0x36f0, 0xb63c, 0xf6e5, 0xac5b, 0x0, 0x1);
        gbc.writeMem(0x9190, { 0xb6 });
        gbc.writeMem(0xac5b, { 0x9e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9d4f, gbc.sp());
        EXPECT(0x9191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9190));
        EXPECT(0x9e, gbc.readMem(0xac5b));
        // B6 0325
        gbc.setState(0x385d, 0x1e2f, 0xce80, 0x272c, 0xcf0d, 0x20e8, 0x1, 0x1);
        gbc.writeMem(0x20e8, { 0xe5 });
        gbc.writeMem(0x385d, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1e2f, gbc.sp());
        EXPECT(0x385e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0326
        gbc.setState(0x7352, 0xac4b, 0x90a0, 0x4546, 0x5fd2, 0x435b, 0x0, 0x1);
        gbc.writeMem(0x435b, { 0x4b });
        gbc.writeMem(0x7352, { 0xb6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xac4b, gbc.sp());
        EXPECT(0x7353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0327
        gbc.setState(0xe7d1, 0xfd75, 0x9b70, 0x94c1, 0xbae0, 0xf5e5, 0x1, 0x1);
        gbc.writeMem(0xe7d1, { 0xb6 });
        gbc.writeMem(0xf5e5, { 0x18 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfd75, gbc.sp());
        EXPECT(0xe7d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe7d1));
        EXPECT(0x18, gbc.readMem(0xf5e5));
        // B6 0328
        gbc.setState(0x4379, 0x8b88, 0x7440, 0xfb05, 0x2e5, 0xd315, 0x1, 0x1);
        gbc.writeMem(0x4379, { 0xb6 });
        gbc.writeMem(0xd315, { 0xf1 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8b88, gbc.sp());
        EXPECT(0x437a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd315));
        // B6 0329
        gbc.setState(0xcd95, 0x5fd9, 0x6590, 0x4029, 0xa4a9, 0xe557, 0x0, 0x1);
        gbc.writeMem(0xcd95, { 0xb6 });
        gbc.writeMem(0xe557, { 0x83 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5fd9, gbc.sp());
        EXPECT(0xcd96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xcd95));
        EXPECT(0x83, gbc.readMem(0xe557));
        // B6 032A
        gbc.setState(0xd21, 0xed92, 0xdee0, 0xb4dc, 0x5961, 0x989b, 0x1, 0x0);
        gbc.writeMem(0xd21, { 0xb6 });
        gbc.writeMem(0x989b, { 0xdb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xed92, gbc.sp());
        EXPECT(0xd22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x989b));
        // B6 032B
        gbc.setState(0x55e4, 0x283d, 0x14f0, 0x6a53, 0x3321, 0xa2e8, 0x0, 0x1);
        gbc.writeMem(0x55e4, { 0xb6 });
        gbc.writeMem(0xa2e8, { 0x53 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x283d, gbc.sp());
        EXPECT(0x55e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa2e8));
        // B6 032C
        gbc.setState(0xe8fa, 0xcd6a, 0xf8b0, 0xe6e4, 0xba9d, 0x1fbd, 0x1, 0x0);
        gbc.writeMem(0x1fbd, { 0x50 });
        gbc.writeMem(0xe8fa, { 0xb6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcd6a, gbc.sp());
        EXPECT(0xe8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe8fa));
        // B6 032D
        gbc.setState(0xaf12, 0xa95d, 0xef90, 0x7bab, 0xd097, 0x96fa, 0x1, 0x1);
        gbc.writeMem(0x96fa, { 0xf2 });
        gbc.writeMem(0xaf12, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa95d, gbc.sp());
        EXPECT(0xaf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x96fa));
        EXPECT(0xb6, gbc.readMem(0xaf12));
        // B6 032E
        gbc.setState(0xd5b6, 0x5a9c, 0x3670, 0xf0d3, 0xbbfb, 0xd103, 0x0, 0x1);
        gbc.writeMem(0xd103, { 0x71 });
        gbc.writeMem(0xd5b6, { 0xb6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5a9c, gbc.sp());
        EXPECT(0xd5b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xd103));
        EXPECT(0xb6, gbc.readMem(0xd5b6));
        // B6 032F
        gbc.setState(0xb2af, 0x99ab, 0xd9b0, 0xbf6f, 0x29c1, 0x1123, 0x0, 0x0);
        gbc.writeMem(0x1123, { 0xbc });
        gbc.writeMem(0xb2af, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x99ab, gbc.sp());
        EXPECT(0xb2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb2af));
        // B6 0330
        gbc.setState(0xc674, 0xca9, 0x4200, 0x4614, 0x7c8f, 0xd4d1, 0x0, 0x1);
        gbc.writeMem(0xc674, { 0xb6 });
        gbc.writeMem(0xd4d1, { 0x3f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xca9, gbc.sp());
        EXPECT(0xc675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc674));
        EXPECT(0x3f, gbc.readMem(0xd4d1));
        // B6 0331
        gbc.setState(0xb132, 0x289c, 0x23a0, 0x97f0, 0x43d5, 0x1142, 0x0, 0x0);
        gbc.writeMem(0x1142, { 0xca });
        gbc.writeMem(0xb132, { 0xb6 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x289c, gbc.sp());
        EXPECT(0xb133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb132));
        // B6 0332
        gbc.setState(0xcc3c, 0x1831, 0xeab0, 0xec07, 0xe5fd, 0x8580, 0x0, 0x0);
        gbc.writeMem(0x8580, { 0x6f });
        gbc.writeMem(0xcc3c, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1831, gbc.sp());
        EXPECT(0xcc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x8580));
        EXPECT(0xb6, gbc.readMem(0xcc3c));
        // B6 0333
        gbc.setState(0xe6c1, 0xa41c, 0x61b0, 0x32bf, 0xf4d, 0xfc14, 0x0, 0x0);
        gbc.writeMem(0xe6c1, { 0xb6 });
        gbc.writeMem(0xfc14, { 0x5e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa41c, gbc.sp());
        EXPECT(0xe6c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe6c1));
        EXPECT(0x5e, gbc.readMem(0xfc14));
        // B6 0334
        gbc.setState(0x6a26, 0x793a, 0x7780, 0x8d1f, 0x59c0, 0xce82, 0x0, 0x1);
        gbc.writeMem(0x6a26, { 0xb6 });
        gbc.writeMem(0xce82, { 0x33 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x793a, gbc.sp());
        EXPECT(0x6a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xce82));
        // B6 0335
        gbc.setState(0x21c3, 0x49e5, 0x4750, 0x2e9c, 0xa34d, 0x42e5, 0x0, 0x1);
        gbc.writeMem(0x21c3, { 0xb6 });
        gbc.writeMem(0x42e5, { 0x8d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x49e5, gbc.sp());
        EXPECT(0x21c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0336
        gbc.setState(0x5fcb, 0x792f, 0x8780, 0x692d, 0x743b, 0x9c12, 0x0, 0x1);
        gbc.writeMem(0x5fcb, { 0xb6 });
        gbc.writeMem(0x9c12, { 0x20 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x792f, gbc.sp());
        EXPECT(0x5fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9c12));
        // B6 0337
        gbc.setState(0xefb0, 0x7c03, 0x6f20, 0xf76d, 0xa3f6, 0xf456, 0x1, 0x1);
        gbc.writeMem(0xefb0, { 0xb6 });
        gbc.writeMem(0xf456, { 0x62 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7c03, gbc.sp());
        EXPECT(0xefb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xefb0));
        EXPECT(0x62, gbc.readMem(0xf456));
        // B6 0338
        gbc.setState(0xaecc, 0x9177, 0x43b0, 0x95c0, 0x1956, 0x718e, 0x0, 0x0);
        gbc.writeMem(0x718e, { 0x74 });
        gbc.writeMem(0xaecc, { 0xb6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9177, gbc.sp());
        EXPECT(0xaecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xaecc));
        // B6 0339
        gbc.setState(0x1966, 0xbbf, 0x1f80, 0xdb2e, 0xba0, 0x7a28, 0x0, 0x1);
        gbc.writeMem(0x1966, { 0xb6 });
        gbc.writeMem(0x7a28, { 0x6c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbbf, gbc.sp());
        EXPECT(0x1967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 033A
        gbc.setState(0x94fb, 0x968, 0xf580, 0xada5, 0x7207, 0x8e84, 0x1, 0x0);
        gbc.writeMem(0x8e84, { 0xd8 });
        gbc.writeMem(0x94fb, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x968, gbc.sp());
        EXPECT(0x94fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x8e84));
        EXPECT(0xb6, gbc.readMem(0x94fb));
        // B6 033B
        gbc.setState(0xc283, 0xe246, 0xc440, 0xd248, 0xdc14, 0x52a6, 0x1, 0x1);
        gbc.writeMem(0x52a6, { 0x60 });
        gbc.writeMem(0xc283, { 0xb6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe246, gbc.sp());
        EXPECT(0xc284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc283));
        // B6 033C
        gbc.setState(0x213f, 0x39e8, 0x1490, 0x31e7, 0x6d76, 0xca42, 0x1, 0x1);
        gbc.writeMem(0x213f, { 0xb6 });
        gbc.writeMem(0xca42, { 0x31 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x39e8, gbc.sp());
        EXPECT(0x2140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xca42));
        // B6 033D
        gbc.setState(0xb2e, 0x3a46, 0xd550, 0x7b50, 0x9f40, 0xcf54, 0x0, 0x0);
        gbc.writeMem(0xb2e, { 0xb6 });
        gbc.writeMem(0xcf54, { 0x65 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3a46, gbc.sp());
        EXPECT(0xb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcf54));
        // B6 033E
        gbc.setState(0xcd7b, 0x4f41, 0x84d0, 0x28b6, 0x1031, 0x5dd7, 0x0, 0x0);
        gbc.writeMem(0x5dd7, { 0x52 });
        gbc.writeMem(0xcd7b, { 0xb6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4f41, gbc.sp());
        EXPECT(0xcd7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xcd7b));
        // B6 033F
        gbc.setState(0xc94f, 0xee2b, 0x8e40, 0xd8bd, 0xb321, 0x45eb, 0x1, 0x0);
        gbc.writeMem(0x45eb, { 0xe8 });
        gbc.writeMem(0xc94f, { 0xb6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xee2b, gbc.sp());
        EXPECT(0xc950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc94f));
        // B6 0340
        gbc.setState(0x84cc, 0xe4a6, 0x26e0, 0x1bb0, 0xb1b, 0x28d1, 0x1, 0x1);
        gbc.writeMem(0x28d1, { 0x95 });
        gbc.writeMem(0x84cc, { 0xb6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe4a6, gbc.sp());
        EXPECT(0x84cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x84cc));
        // B6 0341
        gbc.setState(0xe953, 0x87b9, 0x43d0, 0xf0d0, 0xb7db, 0xd6f8, 0x1, 0x1);
        gbc.writeMem(0xd6f8, { 0xd });
        gbc.writeMem(0xe953, { 0xb6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x87b9, gbc.sp());
        EXPECT(0xe954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xd6f8));
        EXPECT(0xb6, gbc.readMem(0xe953));
        // B6 0342
        gbc.setState(0x4ca2, 0xf77c, 0x1380, 0xa2d3, 0x7f96, 0x2975, 0x0, 0x0);
        gbc.writeMem(0x2975, { 0x2 });
        gbc.writeMem(0x4ca2, { 0xb6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf77c, gbc.sp());
        EXPECT(0x4ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0343
        gbc.setState(0x129f, 0xadda, 0x40a0, 0x2391, 0x2bbb, 0x3558, 0x1, 0x0);
        gbc.writeMem(0x129f, { 0xb6 });
        gbc.writeMem(0x3558, { 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xadda, gbc.sp());
        EXPECT(0x12a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0344
        gbc.setState(0x6ee7, 0xad77, 0xe090, 0xfdc6, 0x8e7, 0x8165, 0x0, 0x0);
        gbc.writeMem(0x6ee7, { 0xb6 });
        gbc.writeMem(0x8165, { 0x24 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xad77, gbc.sp());
        EXPECT(0x6ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x8165));
        // B6 0345
        gbc.setState(0x9d9b, 0xa0ad, 0x13c0, 0xceda, 0x5ca7, 0x1ebc, 0x0, 0x1);
        gbc.writeMem(0x1ebc, { 0x5c });
        gbc.writeMem(0x9d9b, { 0xb6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa0ad, gbc.sp());
        EXPECT(0x9d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9d9b));
        // B6 0346
        gbc.setState(0xc539, 0x7d87, 0x95f0, 0xed80, 0x95cb, 0x68e7, 0x0, 0x0);
        gbc.writeMem(0x68e7, { 0xd5 });
        gbc.writeMem(0xc539, { 0xb6 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7d87, gbc.sp());
        EXPECT(0xc53a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc539));
        // B6 0347
        gbc.setState(0xcc1, 0xb458, 0x6f20, 0x30a0, 0x4ece, 0x99b9, 0x0, 0x0);
        gbc.writeMem(0xcc1, { 0xb6 });
        gbc.writeMem(0x99b9, { 0xbf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb458, gbc.sp());
        EXPECT(0xcc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0x99b9));
        // B6 0348
        gbc.setState(0xa65e, 0x55a0, 0x30f0, 0x3866, 0x28c2, 0x599b, 0x0, 0x1);
        gbc.writeMem(0x599b, { 0xbb });
        gbc.writeMem(0xa65e, { 0xb6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x55a0, gbc.sp());
        EXPECT(0xa65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa65e));
        // B6 0349
        gbc.setState(0xbf9, 0xe45e, 0x3bf0, 0x946e, 0xe161, 0x4600, 0x1, 0x0);
        gbc.writeMem(0xbf9, { 0xb6 });
        gbc.writeMem(0x4600, { 0xe4 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe45e, gbc.sp());
        EXPECT(0xbfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 034A
        gbc.setState(0x6733, 0xdc3d, 0xa530, 0xd48c, 0xb714, 0xb46e, 0x1, 0x0);
        gbc.writeMem(0x6733, { 0xb6 });
        gbc.writeMem(0xb46e, { 0x99 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdc3d, gbc.sp());
        EXPECT(0x6734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb46e));
        // B6 034B
        gbc.setState(0x5d9f, 0x74ee, 0xb820, 0xb0c3, 0x106c, 0x6947, 0x0, 0x0);
        gbc.writeMem(0x5d9f, { 0xb6 });
        gbc.writeMem(0x6947, { 0xb2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0x5da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 034C
        gbc.setState(0x9f5e, 0x5b4b, 0xc6d0, 0x8c4a, 0xb560, 0x7663, 0x0, 0x0);
        gbc.writeMem(0x7663, { 0xa3 });
        gbc.writeMem(0x9f5e, { 0xb6 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5b4b, gbc.sp());
        EXPECT(0x9f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9f5e));
        // B6 034D
        gbc.setState(0x687a, 0x8fb8, 0x3e10, 0xcca8, 0xf1db, 0xa3ed, 0x1, 0x0);
        gbc.writeMem(0x687a, { 0xb6 });
        gbc.writeMem(0xa3ed, { 0x52 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8fb8, gbc.sp());
        EXPECT(0x687b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa3ed));
        // B6 034E
        gbc.setState(0x9f87, 0xf95e, 0x9210, 0x910c, 0xb641, 0x50d0, 0x0, 0x1);
        gbc.writeMem(0x50d0, { 0x23 });
        gbc.writeMem(0x9f87, { 0xb6 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf95e, gbc.sp());
        EXPECT(0x9f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9f87));
        // B6 034F
        gbc.setState(0x41e3, 0x1943, 0xd410, 0xc2b, 0x387d, 0xb021, 0x0, 0x0);
        gbc.writeMem(0x41e3, { 0xb6 });
        gbc.writeMem(0xb021, { 0x68 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1943, gbc.sp());
        EXPECT(0x41e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb021));
        // B6 0350
        gbc.setState(0x525f, 0xa744, 0x4e50, 0xbe26, 0xe1f5, 0x9130, 0x0, 0x0);
        gbc.writeMem(0x525f, { 0xb6 });
        gbc.writeMem(0x9130, { 0x82 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa744, gbc.sp());
        EXPECT(0x5260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x9130));
        // B6 0351
        gbc.setState(0x88e6, 0x3877, 0xef90, 0x6a7c, 0xce3b, 0x7a96, 0x0, 0x0);
        gbc.writeMem(0x7a96, { 0x36 });
        gbc.writeMem(0x88e6, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3877, gbc.sp());
        EXPECT(0x88e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x88e6));
        // B6 0352
        gbc.setState(0x4b5f, 0xba04, 0x1330, 0x8e92, 0xdae0, 0x3949, 0x0, 0x0);
        gbc.writeMem(0x3949, { 0x3a });
        gbc.writeMem(0x4b5f, { 0xb6 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xba04, gbc.sp());
        EXPECT(0x4b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0353
        gbc.setState(0x57c5, 0x7290, 0xc900, 0xb8a1, 0x9fec, 0x2d8, 0x1, 0x1);
        gbc.writeMem(0x2d8, { 0x3 });
        gbc.writeMem(0x57c5, { 0xb6 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7290, gbc.sp());
        EXPECT(0x57c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0354
        gbc.setState(0xbde5, 0x3fe7, 0xec10, 0xe001, 0xa540, 0xa80e, 0x1, 0x0);
        gbc.writeMem(0xa80e, { 0xa2 });
        gbc.writeMem(0xbde5, { 0xb6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3fe7, gbc.sp());
        EXPECT(0xbde6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa80e));
        EXPECT(0xb6, gbc.readMem(0xbde5));
        // B6 0355
        gbc.setState(0x1c99, 0xdd70, 0x5db0, 0xac4f, 0xc362, 0xb83c, 0x1, 0x1);
        gbc.writeMem(0x1c99, { 0xb6 });
        gbc.writeMem(0xb83c, { 0xdb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdd70, gbc.sp());
        EXPECT(0x1c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xb83c));
        // B6 0356
        gbc.setState(0x819f, 0x1ea3, 0xe0c0, 0x4a6a, 0xb6af, 0xd87c, 0x1, 0x0);
        gbc.writeMem(0x819f, { 0xb6 });
        gbc.writeMem(0xd87c, { 0x52 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1ea3, gbc.sp());
        EXPECT(0x81a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x819f));
        EXPECT(0x52, gbc.readMem(0xd87c));
        // B6 0357
        gbc.setState(0xc015, 0x6c1d, 0xe4b0, 0xffae, 0x99f7, 0x5ed1, 0x0, 0x1);
        gbc.writeMem(0x5ed1, { 0x33 });
        gbc.writeMem(0xc015, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6c1d, gbc.sp());
        EXPECT(0xc016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc015));
        // B6 0358
        gbc.setState(0x659b, 0xc7bb, 0xbe20, 0xf535, 0x6826, 0x55c5, 0x0, 0x1);
        gbc.writeMem(0x55c5, { 0x71 });
        gbc.writeMem(0x659b, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc7bb, gbc.sp());
        EXPECT(0x659c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0359
        gbc.setState(0xb57, 0x5bdb, 0x45c0, 0x5cf9, 0x4aa2, 0x87df, 0x0, 0x0);
        gbc.writeMem(0xb57, { 0xb6 });
        gbc.writeMem(0x87df, { 0x9c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5bdb, gbc.sp());
        EXPECT(0xb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x87df));
        // B6 035A
        gbc.setState(0x95c0, 0x53c4, 0x9d80, 0x18, 0x88e1, 0xb616, 0x0, 0x1);
        gbc.writeMem(0x95c0, { 0xb6 });
        gbc.writeMem(0xb616, { 0x42 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x53c4, gbc.sp());
        EXPECT(0x95c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x95c0));
        EXPECT(0x42, gbc.readMem(0xb616));
        // B6 035B
        gbc.setState(0x197, 0xc831, 0xa1b0, 0xe2bc, 0xd417, 0x48d5, 0x1, 0x0);
        gbc.writeMem(0x197, { 0xb6 });
        gbc.writeMem(0x48d5, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc831, gbc.sp());
        EXPECT(0x198, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 035C
        gbc.setState(0xc5a, 0x7da8, 0xbc30, 0xfb0c, 0x4fbf, 0x9128, 0x0, 0x0);
        gbc.writeMem(0xc5a, { 0xb6 });
        gbc.writeMem(0x9128, { 0xb5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7da8, gbc.sp());
        EXPECT(0xc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9128));
        // B6 035D
        gbc.setState(0xc9ca, 0xd285, 0xc0e0, 0x93ef, 0xcfa6, 0xded9, 0x0, 0x1);
        gbc.writeMem(0xc9ca, { 0xb6 });
        gbc.writeMem(0xded9, { 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd285, gbc.sp());
        EXPECT(0xc9cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc9ca));
        EXPECT(0xef, gbc.readMem(0xded9));
        // B6 035E
        gbc.setState(0x1ecd, 0x2b, 0x8130, 0xb856, 0xd213, 0x97af, 0x0, 0x0);
        gbc.writeMem(0x1ecd, { 0xb6 });
        gbc.writeMem(0x97af, { 0x88 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2b, gbc.sp());
        EXPECT(0x1ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x97af));
        // B6 035F
        gbc.setState(0xb4ac, 0x941c, 0x6df0, 0xec3a, 0x5627, 0xd516, 0x1, 0x1);
        gbc.writeMem(0xb4ac, { 0xb6 });
        gbc.writeMem(0xd516, { 0x9f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x941c, gbc.sp());
        EXPECT(0xb4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb4ac));
        EXPECT(0x9f, gbc.readMem(0xd516));
        // B6 0360
        gbc.setState(0x4012, 0xb3b5, 0x46c0, 0x17e5, 0xa63b, 0x855c, 0x1, 0x1);
        gbc.writeMem(0x4012, { 0xb6 });
        gbc.writeMem(0x855c, { 0x38 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb3b5, gbc.sp());
        EXPECT(0x4013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x855c));
        // B6 0361
        gbc.setState(0x1939, 0x5a8a, 0x2bf0, 0x3539, 0xa034, 0x396a, 0x0, 0x1);
        gbc.writeMem(0x1939, { 0xb6 });
        gbc.writeMem(0x396a, { 0x6b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5a8a, gbc.sp());
        EXPECT(0x193a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0362
        gbc.setState(0x47ec, 0x8932, 0xa480, 0x379c, 0x6ab5, 0x6c77, 0x0, 0x0);
        gbc.writeMem(0x47ec, { 0xb6 });
        gbc.writeMem(0x6c77, { 0x76 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8932, gbc.sp());
        EXPECT(0x47ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0363
        gbc.setState(0x532c, 0x5def, 0x58e0, 0x82da, 0xf394, 0x813b, 0x0, 0x0);
        gbc.writeMem(0x532c, { 0xb6 });
        gbc.writeMem(0x813b, { 0x3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5def, gbc.sp());
        EXPECT(0x532d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x813b));
        // B6 0364
        gbc.setState(0x7fc6, 0xd8b3, 0xd310, 0x4140, 0x55e1, 0x1359, 0x1, 0x1);
        gbc.writeMem(0x1359, { 0x87 });
        gbc.writeMem(0x7fc6, { 0xb6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd8b3, gbc.sp());
        EXPECT(0x7fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0365
        gbc.setState(0x41e8, 0xcefd, 0x5840, 0xdb1d, 0x3995, 0xb801, 0x0, 0x1);
        gbc.writeMem(0x41e8, { 0xb6 });
        gbc.writeMem(0xb801, { 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcefd, gbc.sp());
        EXPECT(0x41e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xb801));
        // B6 0366
        gbc.setState(0xa512, 0xced0, 0x6cd0, 0x56a3, 0xff7a, 0xc599, 0x0, 0x1);
        gbc.writeMem(0xa512, { 0xb6 });
        gbc.writeMem(0xc599, { 0x78 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xced0, gbc.sp());
        EXPECT(0xa513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa512));
        EXPECT(0x78, gbc.readMem(0xc599));
        // B6 0367
        gbc.setState(0xe782, 0xca4e, 0x4c10, 0x6606, 0xe3c5, 0x840f, 0x0, 0x0);
        gbc.writeMem(0x840f, { 0x33 });
        gbc.writeMem(0xe782, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xca4e, gbc.sp());
        EXPECT(0xe783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x840f));
        EXPECT(0xb6, gbc.readMem(0xe782));
        // B6 0368
        gbc.setState(0x356d, 0x9f66, 0xf130, 0xe183, 0x13e4, 0xf2f0, 0x1, 0x1);
        gbc.writeMem(0x356d, { 0xb6 });
        gbc.writeMem(0xf2f0, { 0x52 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9f66, gbc.sp());
        EXPECT(0x356e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xf2f0));
        // B6 0369
        gbc.setState(0xca49, 0x6820, 0xeee0, 0xa664, 0xf734, 0x2fcb, 0x0, 0x0);
        gbc.writeMem(0x2fcb, { 0xdc });
        gbc.writeMem(0xca49, { 0xb6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6820, gbc.sp());
        EXPECT(0xca4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xca49));
        // B6 036A
        gbc.setState(0x27d4, 0x666d, 0xf160, 0x840, 0xdc8c, 0x74be, 0x0, 0x0);
        gbc.writeMem(0x27d4, { 0xb6 });
        gbc.writeMem(0x74be, { 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x666d, gbc.sp());
        EXPECT(0x27d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 036B
        gbc.setState(0xdce4, 0x180, 0x4470, 0x412a, 0x24d0, 0xcf4a, 0x0, 0x0);
        gbc.writeMem(0xcf4a, { 0x21 });
        gbc.writeMem(0xdce4, { 0xb6 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x180, gbc.sp());
        EXPECT(0xdce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xcf4a));
        EXPECT(0xb6, gbc.readMem(0xdce4));
        // B6 036C
        gbc.setState(0xdd8f, 0x2cc3, 0x76c0, 0x6634, 0x3eab, 0x5f89, 0x1, 0x1);
        gbc.writeMem(0x5f89, { 0xe });
        gbc.writeMem(0xdd8f, { 0xb6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2cc3, gbc.sp());
        EXPECT(0xdd90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdd8f));
        // B6 036D
        gbc.setState(0x8b38, 0xa319, 0x3b0, 0x59e4, 0x44ed, 0xc384, 0x0, 0x1);
        gbc.writeMem(0x8b38, { 0xb6 });
        gbc.writeMem(0xc384, { 0xae });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa319, gbc.sp());
        EXPECT(0x8b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8b38));
        EXPECT(0xae, gbc.readMem(0xc384));
        // B6 036E
        gbc.setState(0xd5e, 0x2b14, 0x570, 0xe421, 0x5b0d, 0xd794, 0x0, 0x0);
        gbc.writeMem(0xd5e, { 0xb6 });
        gbc.writeMem(0xd794, { 0x4b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2b14, gbc.sp());
        EXPECT(0xd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd794));
        // B6 036F
        gbc.setState(0x88a9, 0x9ad4, 0xf270, 0x6e16, 0x7364, 0xfcaf, 0x1, 0x0);
        gbc.writeMem(0x88a9, { 0xb6 });
        gbc.writeMem(0xfcaf, { 0xbb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0x88aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x88a9));
        EXPECT(0xbb, gbc.readMem(0xfcaf));
        // B6 0370
        gbc.setState(0xa820, 0xd091, 0x5030, 0x1bcc, 0xe15a, 0x65b3, 0x1, 0x1);
        gbc.writeMem(0x65b3, { 0xf5 });
        gbc.writeMem(0xa820, { 0xb6 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd091, gbc.sp());
        EXPECT(0xa821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa820));
        // B6 0371
        gbc.setState(0xaff4, 0x187b, 0xae20, 0xebde, 0x3efd, 0x48cc, 0x1, 0x0);
        gbc.writeMem(0x48cc, { 0x2 });
        gbc.writeMem(0xaff4, { 0xb6 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x187b, gbc.sp());
        EXPECT(0xaff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xaff4));
        // B6 0372
        gbc.setState(0xb312, 0x5b98, 0x8c10, 0x2d3c, 0x2252, 0x1fd7, 0x0, 0x1);
        gbc.writeMem(0x1fd7, { 0x3b });
        gbc.writeMem(0xb312, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5b98, gbc.sp());
        EXPECT(0xb313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb312));
        // B6 0373
        gbc.setState(0xc870, 0xbbbd, 0x60b0, 0x8ae3, 0xa05b, 0x1d09, 0x0, 0x1);
        gbc.writeMem(0x1d09, { 0x59 });
        gbc.writeMem(0xc870, { 0xb6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbbbd, gbc.sp());
        EXPECT(0xc871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc870));
        // B6 0374
        gbc.setState(0x52fd, 0xbf36, 0xe660, 0x9568, 0x5557, 0xde95, 0x1, 0x1);
        gbc.writeMem(0x52fd, { 0xb6 });
        gbc.writeMem(0xde95, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbf36, gbc.sp());
        EXPECT(0x52fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xde95));
        // B6 0375
        gbc.setState(0x4912, 0xc71, 0xfb00, 0xd01c, 0x80d4, 0x33ae, 0x0, 0x0);
        gbc.writeMem(0x33ae, { 0xc1 });
        gbc.writeMem(0x4912, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc71, gbc.sp());
        EXPECT(0x4913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0376
        gbc.setState(0x3bbd, 0xb78, 0x7d10, 0xe71d, 0x7a1a, 0x66db, 0x1, 0x1);
        gbc.writeMem(0x3bbd, { 0xb6 });
        gbc.writeMem(0x66db, { 0xc2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb78, gbc.sp());
        EXPECT(0x3bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0377
        gbc.setState(0xa448, 0x189c, 0x82d0, 0xbfda, 0x3d33, 0x3e66, 0x1, 0x1);
        gbc.writeMem(0x3e66, { 0x55 });
        gbc.writeMem(0xa448, { 0xb6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x189c, gbc.sp());
        EXPECT(0xa449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa448));
        // B6 0378
        gbc.setState(0x6995, 0x9f9f, 0xb210, 0x5309, 0xaaa5, 0x2087, 0x0, 0x1);
        gbc.writeMem(0x2087, { 0x85 });
        gbc.writeMem(0x6995, { 0xb6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9f9f, gbc.sp());
        EXPECT(0x6996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0379
        gbc.setState(0xf8e, 0xe190, 0x8920, 0x151b, 0xc590, 0x597, 0x1, 0x0);
        gbc.writeMem(0x597, { 0x87 });
        gbc.writeMem(0xf8e, { 0xb6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0xf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 037A
        gbc.setState(0x3be0, 0x9691, 0xa560, 0x296d, 0x5a9, 0x9102, 0x1, 0x1);
        gbc.writeMem(0x3be0, { 0xb6 });
        gbc.writeMem(0x9102, { 0x5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9691, gbc.sp());
        EXPECT(0x3be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x9102));
        // B6 037C
        gbc.setState(0xc49, 0x4e64, 0x59d0, 0x2a17, 0xb6bb, 0x8139, 0x1, 0x0);
        gbc.writeMem(0xc49, { 0xb6 });
        gbc.writeMem(0x8139, { 0x3e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4e64, gbc.sp());
        EXPECT(0xc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x8139));
        // B6 037D
        gbc.setState(0xa623, 0x864e, 0x160, 0x42c5, 0x7688, 0x326f, 0x0, 0x1);
        gbc.writeMem(0x326f, { 0x7a });
        gbc.writeMem(0xa623, { 0xb6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x864e, gbc.sp());
        EXPECT(0xa624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa623));
        // B6 037E
        gbc.setState(0xc4d, 0xdb9f, 0x1a00, 0x3107, 0xf236, 0x59b1, 0x0, 0x1);
        gbc.writeMem(0xc4d, { 0xb6 });
        gbc.writeMem(0x59b1, { 0xc });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdb9f, gbc.sp());
        EXPECT(0xc4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 037F
        gbc.setState(0x6fb7, 0x491b, 0xeac0, 0xf367, 0x51ae, 0x148, 0x0, 0x1);
        gbc.writeMem(0x148, { 0x4d });
        gbc.writeMem(0x6fb7, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x491b, gbc.sp());
        EXPECT(0x6fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0380
        gbc.setState(0xcfb, 0x1380, 0x1120, 0x1491, 0x13dc, 0x34a8, 0x0, 0x0);
        gbc.writeMem(0xcfb, { 0xb6 });
        gbc.writeMem(0x34a8, { 0x93 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1380, gbc.sp());
        EXPECT(0xcfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0381
        gbc.setState(0x5a01, 0x8b73, 0x890, 0x5801, 0x8759, 0x9ea2, 0x1, 0x0);
        gbc.writeMem(0x5a01, { 0xb6 });
        gbc.writeMem(0x9ea2, { 0xf0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8b73, gbc.sp());
        EXPECT(0x5a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x9ea2));
        // B6 0382
        gbc.setState(0x922b, 0x8493, 0x6120, 0x21bd, 0x2f8b, 0x323, 0x1, 0x1);
        gbc.writeMem(0x323, { 0x80 });
        gbc.writeMem(0x922b, { 0xb6 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8493, gbc.sp());
        EXPECT(0x922c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x922b));
        // B6 0383
        gbc.setState(0x9d01, 0x9f5c, 0x7870, 0xc6d7, 0x8aa8, 0x5d33, 0x0, 0x1);
        gbc.writeMem(0x5d33, { 0x6e });
        gbc.writeMem(0x9d01, { 0xb6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9f5c, gbc.sp());
        EXPECT(0x9d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9d01));
        // B6 0385
        gbc.setState(0x169a, 0xbd27, 0x84c0, 0xe46, 0x9bb5, 0xf3, 0x1, 0x1);
        gbc.writeMem(0xf3, { 0x6c });
        gbc.writeMem(0x169a, { 0xb6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbd27, gbc.sp());
        EXPECT(0x169b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0387
        gbc.setState(0xdb1f, 0x2d2b, 0x7f10, 0x4720, 0xf02a, 0x763a, 0x0, 0x0);
        gbc.writeMem(0x763a, { 0x85 });
        gbc.writeMem(0xdb1f, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2d2b, gbc.sp());
        EXPECT(0xdb20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdb1f));
        // B6 0388
        gbc.setState(0x4bfe, 0x16b7, 0x4fd0, 0x1e03, 0xcf39, 0x150b, 0x1, 0x1);
        gbc.writeMem(0x150b, { 0xc2 });
        gbc.writeMem(0x4bfe, { 0xb6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x16b7, gbc.sp());
        EXPECT(0x4bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0389
        gbc.setState(0x8a96, 0x92c5, 0x1110, 0x10cb, 0xb4c8, 0xac73, 0x0, 0x0);
        gbc.writeMem(0x8a96, { 0xb6 });
        gbc.writeMem(0xac73, { 0x3e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x92c5, gbc.sp());
        EXPECT(0x8a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8a96));
        EXPECT(0x3e, gbc.readMem(0xac73));
        // B6 038B
        gbc.setState(0x9f2a, 0xa4ab, 0xb290, 0x56eb, 0x70eb, 0xbc64, 0x0, 0x1);
        gbc.writeMem(0x9f2a, { 0xb6 });
        gbc.writeMem(0xbc64, { 0x53 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa4ab, gbc.sp());
        EXPECT(0x9f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9f2a));
        EXPECT(0x53, gbc.readMem(0xbc64));
        // B6 038C
        gbc.setState(0xc7ba, 0x95f0, 0x3340, 0xd8a, 0x8b45, 0x6b34, 0x0, 0x0);
        gbc.writeMem(0x6b34, { 0x5e });
        gbc.writeMem(0xc7ba, { 0xb6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x95f0, gbc.sp());
        EXPECT(0xc7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc7ba));
        // B6 038D
        gbc.setState(0xb065, 0xc2a9, 0xf260, 0x6e76, 0x1f5d, 0xe9ed, 0x0, 0x0);
        gbc.writeMem(0xb065, { 0xb6 });
        gbc.writeMem(0xe9ed, { 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc2a9, gbc.sp());
        EXPECT(0xb066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb065));
        EXPECT(0x9b, gbc.readMem(0xe9ed));
        // B6 038E
        gbc.setState(0x4e9b, 0xbb83, 0xb6e0, 0xc551, 0xcd56, 0xd1d3, 0x1, 0x1);
        gbc.writeMem(0x4e9b, { 0xb6 });
        gbc.writeMem(0xd1d3, { 0x64 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbb83, gbc.sp());
        EXPECT(0x4e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xd1d3));
        // B6 0390
        gbc.setState(0x2d03, 0x754a, 0x54e0, 0x806a, 0x49bc, 0x8b3, 0x0, 0x0);
        gbc.writeMem(0x8b3, { 0x66 });
        gbc.writeMem(0x2d03, { 0xb6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x754a, gbc.sp());
        EXPECT(0x2d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0391
        gbc.setState(0xe86c, 0x44c4, 0x96c0, 0xb13c, 0x28ee, 0x6a7c, 0x0, 0x0);
        gbc.writeMem(0x6a7c, { 0x34 });
        gbc.writeMem(0xe86c, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x44c4, gbc.sp());
        EXPECT(0xe86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe86c));
        // B6 0392
        gbc.setState(0xeed8, 0xcb7a, 0x9710, 0xecdd, 0x9bad, 0x9730, 0x1, 0x0);
        gbc.writeMem(0x9730, { 0xd4 });
        gbc.writeMem(0xeed8, { 0xb6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcb7a, gbc.sp());
        EXPECT(0xeed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9730));
        EXPECT(0xb6, gbc.readMem(0xeed8));
        // B6 0393
        gbc.setState(0x9261, 0x8e49, 0x6fc0, 0xd8c, 0x49df, 0xab20, 0x1, 0x0);
        gbc.writeMem(0x9261, { 0xb6 });
        gbc.writeMem(0xab20, { 0x6b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8e49, gbc.sp());
        EXPECT(0x9262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9261));
        EXPECT(0x6b, gbc.readMem(0xab20));
        // B6 0394
        gbc.setState(0x7f23, 0x2edd, 0x4fa0, 0xf392, 0x7ef6, 0xfdf9, 0x1, 0x1);
        gbc.writeMem(0x7f23, { 0xb6 });
        gbc.writeMem(0xfdf9, { 0x74 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2edd, gbc.sp());
        EXPECT(0x7f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xfdf9));
        // B6 0395
        gbc.setState(0x316e, 0x2a9, 0x4bf0, 0x9b9e, 0xb4, 0xcb1, 0x1, 0x0);
        gbc.writeMem(0xcb1, { 0x5b });
        gbc.writeMem(0x316e, { 0xb6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2a9, gbc.sp());
        EXPECT(0x316f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0396
        gbc.setState(0x40c1, 0x79f5, 0x8b20, 0x4bc3, 0x69c7, 0x1b08, 0x1, 0x1);
        gbc.writeMem(0x1b08, { 0x22 });
        gbc.writeMem(0x40c1, { 0xb6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x79f5, gbc.sp());
        EXPECT(0x40c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0397
        gbc.setState(0x609e, 0xa60e, 0xefb0, 0xbd6d, 0x14cd, 0x649d, 0x0, 0x1);
        gbc.writeMem(0x609e, { 0xb6 });
        gbc.writeMem(0x649d, { 0x45 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa60e, gbc.sp());
        EXPECT(0x609f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 0399
        gbc.setState(0x6003, 0x1bca, 0x38b0, 0x2f0, 0x8235, 0xc21d, 0x1, 0x0);
        gbc.writeMem(0x6003, { 0xb6 });
        gbc.writeMem(0xc21d, { 0xad });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1bca, gbc.sp());
        EXPECT(0x6004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xc21d));
        // B6 039A
        gbc.setState(0xb8f, 0xbe9, 0x1640, 0x94a, 0xab0a, 0x3b7c, 0x0, 0x0);
        gbc.writeMem(0xb8f, { 0xb6 });
        gbc.writeMem(0x3b7c, { 0x22 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbe9, gbc.sp());
        EXPECT(0xb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 039C
        gbc.setState(0x7c9, 0x6570, 0xf320, 0xffc8, 0xba82, 0x8676, 0x1, 0x0);
        gbc.writeMem(0x7c9, { 0xb6 });
        gbc.writeMem(0x8676, { 0xf2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6570, gbc.sp());
        EXPECT(0x7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x8676));
        // B6 039D
        gbc.setState(0x5e04, 0x7292, 0x2290, 0x31e8, 0x8a28, 0xf675, 0x0, 0x1);
        gbc.writeMem(0x5e04, { 0xb6 });
        gbc.writeMem(0xf675, { 0xac });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7292, gbc.sp());
        EXPECT(0x5e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xf675));
        // B6 039E
        gbc.setState(0x7496, 0x5899, 0x8ce0, 0xe10, 0x85d8, 0x7039, 0x0, 0x1);
        gbc.writeMem(0x7039, { 0xb6 });
        gbc.writeMem(0x7496, { 0xb6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5899, gbc.sp());
        EXPECT(0x7497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 039F
        gbc.setState(0x22e8, 0x5dfa, 0xcf00, 0x34e2, 0xf0dc, 0x163d, 0x0, 0x1);
        gbc.writeMem(0x163d, { 0x45 });
        gbc.writeMem(0x22e8, { 0xb6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5dfa, gbc.sp());
        EXPECT(0x22e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03A0
        gbc.setState(0xef3f, 0xb2ea, 0x3020, 0xd8, 0x1609, 0xae0c, 0x0, 0x1);
        gbc.writeMem(0xae0c, { 0x11 });
        gbc.writeMem(0xef3f, { 0xb6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb2ea, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xae0c));
        EXPECT(0xb6, gbc.readMem(0xef3f));
        // B6 03A1
        gbc.setState(0xe433, 0x6c85, 0x3f90, 0xa40d, 0xee22, 0x4134, 0x0, 0x0);
        gbc.writeMem(0x4134, { 0x17 });
        gbc.writeMem(0xe433, { 0xb6 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6c85, gbc.sp());
        EXPECT(0xe434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xe433));
        // B6 03A4
        gbc.setState(0x6d02, 0x762c, 0xc7e0, 0x8fb6, 0x3fb2, 0x4a0c, 0x1, 0x0);
        gbc.writeMem(0x4a0c, { 0x5a });
        gbc.writeMem(0x6d02, { 0xb6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x762c, gbc.sp());
        EXPECT(0x6d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03A5
        gbc.setState(0xda6f, 0xc22f, 0x5f70, 0xef89, 0x7355, 0xf6fe, 0x1, 0x1);
        gbc.writeMem(0xda6f, { 0xb6 });
        gbc.writeMem(0xf6fe, { 0xaf });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc22f, gbc.sp());
        EXPECT(0xda70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xda6f));
        EXPECT(0xaf, gbc.readMem(0xf6fe));
        // B6 03A6
        gbc.setState(0x3d6a, 0x4ef8, 0xcb00, 0x433c, 0xb1c, 0xb45b, 0x0, 0x0);
        gbc.writeMem(0x3d6a, { 0xb6 });
        gbc.writeMem(0xb45b, { 0x3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4ef8, gbc.sp());
        EXPECT(0x3d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xb45b));
        // B6 03A7
        gbc.setState(0x6af6, 0x16c1, 0x50, 0xf77c, 0x8734, 0xbef, 0x1, 0x1);
        gbc.writeMem(0xbef, { 0xad });
        gbc.writeMem(0x6af6, { 0xb6 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x16c1, gbc.sp());
        EXPECT(0x6af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03A8
        gbc.setState(0xc5ce, 0xe170, 0x5760, 0xb0ec, 0x3967, 0xef5f, 0x1, 0x1);
        gbc.writeMem(0xc5ce, { 0xb6 });
        gbc.writeMem(0xef5f, { 0xb4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe170, gbc.sp());
        EXPECT(0xc5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc5ce));
        EXPECT(0xb4, gbc.readMem(0xef5f));
        // B6 03A9
        gbc.setState(0x47b2, 0x2ca6, 0x7330, 0x6e04, 0x6bd8, 0x15c9, 0x1, 0x1);
        gbc.writeMem(0x15c9, { 0xe5 });
        gbc.writeMem(0x47b2, { 0xb6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2ca6, gbc.sp());
        EXPECT(0x47b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03AA
        gbc.setState(0x9ae4, 0x704f, 0xd770, 0x94c3, 0x1db, 0xb61b, 0x0, 0x1);
        gbc.writeMem(0x9ae4, { 0xb6 });
        gbc.writeMem(0xb61b, { 0xa5 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x704f, gbc.sp());
        EXPECT(0x9ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9ae4));
        EXPECT(0xa5, gbc.readMem(0xb61b));
        // B6 03AB
        gbc.setState(0xa5ad, 0x9fd8, 0xea20, 0x4375, 0x938b, 0x6fcc, 0x0, 0x0);
        gbc.writeMem(0x6fcc, { 0x85 });
        gbc.writeMem(0xa5ad, { 0xb6 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9fd8, gbc.sp());
        EXPECT(0xa5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa5ad));
        // B6 03AC
        gbc.setState(0xeb8d, 0x2f2e, 0x7970, 0x11bd, 0x8622, 0x2e6, 0x0, 0x0);
        gbc.writeMem(0x2e6, { 0x4b });
        gbc.writeMem(0xeb8d, { 0xb6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2f2e, gbc.sp());
        EXPECT(0xeb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xeb8d));
        // B6 03AD
        gbc.setState(0x3043, 0xca5a, 0x7400, 0xc946, 0x61a2, 0x7739, 0x0, 0x1);
        gbc.writeMem(0x3043, { 0xb6 });
        gbc.writeMem(0x7739, { 0x3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xca5a, gbc.sp());
        EXPECT(0x3044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03AE
        gbc.setState(0x3e0f, 0x8900, 0x15c0, 0x159e, 0xe238, 0xc196, 0x0, 0x0);
        gbc.writeMem(0x3e0f, { 0xb6 });
        gbc.writeMem(0xc196, { 0xac });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8900, gbc.sp());
        EXPECT(0x3e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc196));
        // B6 03AF
        gbc.setState(0x531b, 0xe037, 0x6950, 0x8ecb, 0xfad2, 0xb999, 0x0, 0x0);
        gbc.writeMem(0x531b, { 0xb6 });
        gbc.writeMem(0xb999, { 0xb3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe037, gbc.sp());
        EXPECT(0x531c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xb999));
        // B6 03B0
        gbc.setState(0x6dac, 0xcb32, 0xcbc0, 0xc95, 0x2713, 0x6725, 0x0, 0x1);
        gbc.writeMem(0x6725, { 0x36 });
        gbc.writeMem(0x6dac, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcb32, gbc.sp());
        EXPECT(0x6dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03B1
        gbc.setState(0x93c6, 0xceee, 0x3c90, 0xde3a, 0xb23f, 0x9432, 0x1, 0x0);
        gbc.writeMem(0x93c6, { 0xb6 });
        gbc.writeMem(0x9432, { 0xc2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xceee, gbc.sp());
        EXPECT(0x93c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x93c6));
        EXPECT(0xc2, gbc.readMem(0x9432));
        // B6 03B2
        gbc.setState(0xf45, 0x55c4, 0x8320, 0xbcec, 0x9a75, 0xbc86, 0x0, 0x1);
        gbc.writeMem(0xf45, { 0xb6 });
        gbc.writeMem(0xbc86, { 0xa4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x55c4, gbc.sp());
        EXPECT(0xf46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbc86));
        // B6 03B3
        gbc.setState(0x9a95, 0xbfce, 0x2c30, 0xf238, 0x7d0f, 0x41c7, 0x0, 0x0);
        gbc.writeMem(0x41c7, { 0x3e });
        gbc.writeMem(0x9a95, { 0xb6 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbfce, gbc.sp());
        EXPECT(0x9a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x9a95));
        // B6 03B4
        gbc.setState(0x41cf, 0xf169, 0x850, 0x1096, 0x309f, 0x397d, 0x1, 0x1);
        gbc.writeMem(0x397d, { 0xf3 });
        gbc.writeMem(0x41cf, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf169, gbc.sp());
        EXPECT(0x41d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03B5
        gbc.setState(0x409c, 0x9846, 0x9f20, 0xe7ee, 0xf0ac, 0xfdb9, 0x1, 0x1);
        gbc.writeMem(0x409c, { 0xb6 });
        gbc.writeMem(0xfdb9, { 0xd6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9846, gbc.sp());
        EXPECT(0x409d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xfdb9));
        // B6 03B6
        gbc.setState(0x61f0, 0x13ac, 0x5fe0, 0x2567, 0x1ecd, 0x26ee, 0x0, 0x1);
        gbc.writeMem(0x26ee, { 0xd });
        gbc.writeMem(0x61f0, { 0xb6 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x13ac, gbc.sp());
        EXPECT(0x61f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03B7
        gbc.setState(0xd1d4, 0x9554, 0xb510, 0x294b, 0x4349, 0xead, 0x1, 0x1);
        gbc.writeMem(0xead, { 0xd5 });
        gbc.writeMem(0xd1d4, { 0xb6 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9554, gbc.sp());
        EXPECT(0xd1d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd1d4));
        // B6 03B8
        gbc.setState(0x8605, 0x1a57, 0x5010, 0xed48, 0x64c2, 0x762, 0x0, 0x0);
        gbc.writeMem(0x762, { 0x91 });
        gbc.writeMem(0x8605, { 0xb6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1a57, gbc.sp());
        EXPECT(0x8606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8605));
        // B6 03B9
        gbc.setState(0xa8a7, 0x8c4, 0x9c10, 0xe8c2, 0xc73d, 0xd83b, 0x0, 0x1);
        gbc.writeMem(0xa8a7, { 0xb6 });
        gbc.writeMem(0xd83b, { 0xa6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8c4, gbc.sp());
        EXPECT(0xa8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa8a7));
        EXPECT(0xa6, gbc.readMem(0xd83b));
        // B6 03BA
        gbc.setState(0x85be, 0x29ea, 0xf170, 0xc991, 0x521, 0xac76, 0x0, 0x0);
        gbc.writeMem(0x85be, { 0xb6 });
        gbc.writeMem(0xac76, { 0x1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x29ea, gbc.sp());
        EXPECT(0x85bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x85be));
        EXPECT(0x1, gbc.readMem(0xac76));
        // B6 03BB
        gbc.setState(0x3fa, 0x1939, 0x7490, 0xb718, 0x40de, 0x7e8b, 0x0, 0x1);
        gbc.writeMem(0x3fa, { 0xb6 });
        gbc.writeMem(0x7e8b, { 0xf8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1939, gbc.sp());
        EXPECT(0x3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03BD
        gbc.setState(0xef4a, 0x9046, 0x2830, 0x3592, 0xd72c, 0x7590, 0x1, 0x1);
        gbc.writeMem(0x7590, { 0xd });
        gbc.writeMem(0xef4a, { 0xb6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9046, gbc.sp());
        EXPECT(0xef4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xef4a));
        // B6 03BE
        gbc.setState(0x403, 0x4cb, 0xd450, 0xa214, 0x6b47, 0x9e90, 0x0, 0x0);
        gbc.writeMem(0x403, { 0xb6 });
        gbc.writeMem(0x9e90, { 0x56 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4cb, gbc.sp());
        EXPECT(0x404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9e90));
        // B6 03BF
        gbc.setState(0xb4cd, 0x95a2, 0x7860, 0xbd91, 0xc511, 0xe33, 0x0, 0x1);
        gbc.writeMem(0xe33, { 0x76 });
        gbc.writeMem(0xb4cd, { 0xb6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x95a2, gbc.sp());
        EXPECT(0xb4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xb4cd));
        // B6 03C0
        gbc.setState(0xa252, 0x3905, 0x610, 0xdfb4, 0x5760, 0x8311, 0x1, 0x1);
        gbc.writeMem(0x8311, { 0x36 });
        gbc.writeMem(0xa252, { 0xb6 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3905, gbc.sp());
        EXPECT(0xa253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8311));
        EXPECT(0xb6, gbc.readMem(0xa252));
        // B6 03C1
        gbc.setState(0xa99, 0x8c0d, 0x7070, 0xe529, 0x6d97, 0x399, 0x1, 0x0);
        gbc.writeMem(0x399, { 0xcb });
        gbc.writeMem(0xa99, { 0xb6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8c0d, gbc.sp());
        EXPECT(0xa9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03C2
        gbc.setState(0x236e, 0xbfd, 0xbcf0, 0x4494, 0xfad8, 0xba78, 0x1, 0x0);
        gbc.writeMem(0x236e, { 0xb6 });
        gbc.writeMem(0xba78, { 0xa1 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbfd, gbc.sp());
        EXPECT(0x236f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xba78));
        // B6 03C3
        gbc.setState(0x4668, 0x40d0, 0x15e0, 0x3c26, 0xd58a, 0x7e47, 0x0, 0x1);
        gbc.writeMem(0x4668, { 0xb6 });
        gbc.writeMem(0x7e47, { 0xe6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x40d0, gbc.sp());
        EXPECT(0x4669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03C4
        gbc.setState(0xdbf0, 0xe5b7, 0x3340, 0xb316, 0xce7, 0x6d04, 0x0, 0x0);
        gbc.writeMem(0x6d04, { 0xd });
        gbc.writeMem(0xdbf0, { 0xb6 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe5b7, gbc.sp());
        EXPECT(0xdbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdbf0));
        // B6 03C5
        gbc.setState(0xef7d, 0xd515, 0xd610, 0xa352, 0x5b65, 0x7922, 0x0, 0x1);
        gbc.writeMem(0x7922, { 0xe });
        gbc.writeMem(0xef7d, { 0xb6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd515, gbc.sp());
        EXPECT(0xef7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xef7d));
        // B6 03C6
        gbc.setState(0x4372, 0x610b, 0x4a80, 0x1012, 0x7c85, 0xc940, 0x0, 0x0);
        gbc.writeMem(0x4372, { 0xb6 });
        gbc.writeMem(0xc940, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x610b, gbc.sp());
        EXPECT(0x4373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xc940));
        // B6 03C7
        gbc.setState(0xce1d, 0xdfe7, 0x1850, 0xb329, 0xef9b, 0x610a, 0x0, 0x1);
        gbc.writeMem(0x610a, { 0xc3 });
        gbc.writeMem(0xce1d, { 0xb6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdfe7, gbc.sp());
        EXPECT(0xce1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xce1d));
        // B6 03C8
        gbc.setState(0xde93, 0x55b3, 0xec30, 0xfbb2, 0xdc1b, 0x4471, 0x1, 0x0);
        gbc.writeMem(0x4471, { 0xa0 });
        gbc.writeMem(0xde93, { 0xb6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x55b3, gbc.sp());
        EXPECT(0xde94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xde93));
        // B6 03C9
        gbc.setState(0x4ace, 0x3bd7, 0xa750, 0xcefe, 0xd5e7, 0xc4db, 0x1, 0x0);
        gbc.writeMem(0x4ace, { 0xb6 });
        gbc.writeMem(0xc4db, { 0x1e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3bd7, gbc.sp());
        EXPECT(0x4acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xc4db));
        // B6 03CA
        gbc.setState(0xe797, 0x361f, 0xe2e0, 0x95d9, 0x122d, 0xc2bf, 0x1, 0x1);
        gbc.writeMem(0xc2bf, { 0xdd });
        gbc.writeMem(0xe797, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x361f, gbc.sp());
        EXPECT(0xe798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xc2bf));
        EXPECT(0xb6, gbc.readMem(0xe797));
        // B6 03CC
        gbc.setState(0x5900, 0xa845, 0x4810, 0x1838, 0x5ed1, 0x25ec, 0x1, 0x0);
        gbc.writeMem(0x25ec, { 0x4f });
        gbc.writeMem(0x5900, { 0xb6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa845, gbc.sp());
        EXPECT(0x5901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03CD
        gbc.setState(0xdec2, 0xbde7, 0x1f20, 0xa140, 0x260b, 0x1a2a, 0x0, 0x0);
        gbc.writeMem(0x1a2a, { 0x91 });
        gbc.writeMem(0xdec2, { 0xb6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbde7, gbc.sp());
        EXPECT(0xdec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xdec2));
        // B6 03CF
        gbc.setState(0x1459, 0x82ca, 0xe840, 0xb797, 0x871d, 0x7c41, 0x0, 0x0);
        gbc.writeMem(0x1459, { 0xb6 });
        gbc.writeMem(0x7c41, { 0x4b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x82ca, gbc.sp());
        EXPECT(0x145a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03D0
        gbc.setState(0x8334, 0x7e12, 0x4320, 0xc837, 0x27d9, 0x7c40, 0x1, 0x1);
        gbc.writeMem(0x7c40, { 0x29 });
        gbc.writeMem(0x8334, { 0xb6 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7e12, gbc.sp());
        EXPECT(0x8335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8334));
        // B6 03D1
        gbc.setState(0x685a, 0xecd7, 0x23b0, 0xa7c1, 0x54ad, 0x5b65, 0x0, 0x0);
        gbc.writeMem(0x5b65, { 0xcb });
        gbc.writeMem(0x685a, { 0xb6 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xecd7, gbc.sp());
        EXPECT(0x685b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03D3
        gbc.setState(0x2cde, 0x6468, 0x6410, 0xbc36, 0xeb4a, 0xc2e, 0x1, 0x1);
        gbc.writeMem(0xc2e, { 0x89 });
        gbc.writeMem(0x2cde, { 0xb6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6468, gbc.sp());
        EXPECT(0x2cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03D4
        gbc.setState(0x468, 0x3390, 0x2eb0, 0xfea4, 0xf59d, 0xc255, 0x0, 0x1);
        gbc.writeMem(0x468, { 0xb6 });
        gbc.writeMem(0xc255, { 0xc0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3390, gbc.sp());
        EXPECT(0x469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xc255));
        // B6 03D5
        gbc.setState(0x35dd, 0x4079, 0x7bd0, 0x9fe1, 0xe2c5, 0x3b2, 0x0, 0x0);
        gbc.writeMem(0x3b2, { 0xa6 });
        gbc.writeMem(0x35dd, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4079, gbc.sp());
        EXPECT(0x35de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03D6
        gbc.setState(0x23bb, 0x70dd, 0xd7e0, 0x3155, 0xd26c, 0x9278, 0x1, 0x0);
        gbc.writeMem(0x23bb, { 0xb6 });
        gbc.writeMem(0x9278, { 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x70dd, gbc.sp());
        EXPECT(0x23bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x9278));
        // B6 03D8
        gbc.setState(0x18b2, 0xd948, 0xe1b0, 0x13cd, 0xbaac, 0xb6f0, 0x1, 0x1);
        gbc.writeMem(0x18b2, { 0xb6 });
        gbc.writeMem(0xb6f0, { 0x21 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd948, gbc.sp());
        EXPECT(0x18b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb6f0));
        // B6 03D9
        gbc.setState(0xb744, 0x472e, 0x3010, 0x5b9d, 0x4b00, 0xaa3f, 0x0, 0x1);
        gbc.writeMem(0xaa3f, { 0x76 });
        gbc.writeMem(0xb744, { 0xb6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x472e, gbc.sp());
        EXPECT(0xb745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaa3f));
        EXPECT(0xb6, gbc.readMem(0xb744));
        // B6 03DA
        gbc.setState(0x94e, 0x2908, 0x9020, 0xf34a, 0x1198, 0xbe24, 0x1, 0x1);
        gbc.writeMem(0x94e, { 0xb6 });
        gbc.writeMem(0xbe24, { 0xcf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2908, gbc.sp());
        EXPECT(0x94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xbe24));
        // B6 03DB
        gbc.setState(0x8ade, 0x8bf7, 0xa420, 0xa50, 0xa15, 0xee97, 0x0, 0x1);
        gbc.writeMem(0x8ade, { 0xb6 });
        gbc.writeMem(0xee97, { 0x23 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8bf7, gbc.sp());
        EXPECT(0x8adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8ade));
        EXPECT(0x23, gbc.readMem(0xee97));
        // B6 03DC
        gbc.setState(0x306c, 0x6561, 0x9f30, 0x2124, 0x1d4d, 0x42ac, 0x0, 0x0);
        gbc.writeMem(0x306c, { 0xb6 });
        gbc.writeMem(0x42ac, { 0x61 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6561, gbc.sp());
        EXPECT(0x306d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03DD
        gbc.setState(0x3ed0, 0x89d9, 0xc800, 0x8167, 0x4b81, 0x1eb6, 0x1, 0x0);
        gbc.writeMem(0x1eb6, { 0x8c });
        gbc.writeMem(0x3ed0, { 0xb6 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x89d9, gbc.sp());
        EXPECT(0x3ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03DE
        gbc.setState(0x391, 0xc15b, 0xa5a0, 0x41b5, 0xda2e, 0x794e, 0x0, 0x1);
        gbc.writeMem(0x391, { 0xb6 });
        gbc.writeMem(0x794e, { 0x75 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc15b, gbc.sp());
        EXPECT(0x392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // B6 03DF
        gbc.setState(0x8711, 0x26a3, 0x3ba0, 0x8b80, 0x36ea, 0xf58a, 0x0, 0x0);
        gbc.writeMem(0x8711, { 0xb6 });
        gbc.writeMem(0xf58a, { 0x2a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x26a3, gbc.sp());
        EXPECT(0x8712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8711));
        EXPECT(0x2a, gbc.readMem(0xf58a));
        // B6 03E0
        gbc.setState(0xd548, 0x32d, 0xb380, 0xb3b4, 0xc1d6, 0xa30c, 0x0, 0x0);
        gbc.writeMem(0xa30c, { 0x1e });
        gbc.writeMem(0xd548, { 0xb6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x32d, gbc.sp());
        EXPECT(0xd549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa30c));
        EXPECT(0xb6, gbc.readMem(0xd548));
        // B6 03E1
        gbc.setState(0xcc8f, 0xbd3d, 0x31f0, 0x4ad2, 0xa3b2, 0x2ce, 0x1, 0x1);
        gbc.writeMem(0x2ce, { 0xee });
        gbc.writeMem(0xcc8f, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbd3d, gbc.sp());
        EXPECT(0xcc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xcc8f));
        // B6 03E2
        gbc.setState(0xa0f0, 0x896, 0x89f0, 0x19ce, 0xbaa8, 0x7188, 0x1, 0x1);
        gbc.writeMem(0x7188, { 0x2 });
        gbc.writeMem(0xa0f0, { 0xb6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x896, gbc.sp());
        EXPECT(0xa0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa0f0));
        // B6 03E3
        gbc.setState(0xad55, 0x2258, 0xe910, 0xf4cb, 0x51ed, 0x250a, 0x0, 0x0);
        gbc.writeMem(0x250a, { 0x55 });
        gbc.writeMem(0xad55, { 0xb6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2258, gbc.sp());
        EXPECT(0xad56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xad55));
        // B6 03E4
        gbc.setState(0xd3ac, 0x498b, 0xf650, 0x1acf, 0x95b5, 0x4e07, 0x0, 0x1);
        gbc.writeMem(0x4e07, { 0x9b });
        gbc.writeMem(0xd3ac, { 0xb6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x498b, gbc.sp());
        EXPECT(0xd3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xd3ac));
        // B6 03E5
        gbc.setState(0x30ce, 0x7428, 0x5e00, 0x8201, 0x5718, 0x982b, 0x0, 0x0);
        gbc.writeMem(0x30ce, { 0xb6 });
        gbc.writeMem(0x982b, { 0x6b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7428, gbc.sp());
        EXPECT(0x30cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x982b));
        // B6 03E6
        gbc.setState(0xd7df, 0x84e6, 0x33d0, 0xa123, 0xa8ed, 0xc10d, 0x1, 0x0);
        gbc.writeMem(0xc10d, { 0x39 });
        gbc.writeMem(0xd7df, { 0xb6 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x84e6, gbc.sp());
        EXPECT(0xd7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xc10d));
        EXPECT(0xb6, gbc.readMem(0xd7df));
        // B6 03E7
        gbc.setState(0x74c7, 0xdf3d, 0x6e30, 0xd560, 0x22b4, 0x85a4, 0x1, 0x1);
        gbc.writeMem(0x74c7, { 0xb6 });
        gbc.writeMem(0x85a4, { 0x1b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdf3d, gbc.sp());
        EXPECT(0x74c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x85a4));
    }
