    TEST(gbcemu, opcode_cb_52) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 52 0000
        gbc.setState(0xd06a, 0x1dc7, 0x5c00, 0x85ea, 0x7bf6, 0xa902, 0x1, 0x1);
        gbc.writeMem(0xd06a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1dc7);
        EXPECT(gbc.pc(), 0xd06c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd06a), 0xcb);
        EXPECT(gbc.readMem(0xd06b), 0x52);
        // CB 52 0001
        gbc.setState(0x5384, 0x69f, 0x2f40, 0x94e9, 0x2a3b, 0xf307, 0x1, 0x1);
        gbc.writeMem(0x5384, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x69f);
        EXPECT(gbc.pc(), 0x5386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0002
        gbc.setState(0x56ca, 0xb654, 0xca0, 0x7bbe, 0x457f, 0x8dfd, 0x1, 0x1);
        gbc.writeMem(0x56ca, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb654);
        EXPECT(gbc.pc(), 0x56cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0003
        gbc.setState(0x3d07, 0x5b29, 0x9bf0, 0x96cc, 0xf035, 0x6d62, 0x1, 0x1);
        gbc.writeMem(0x3d07, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5b29);
        EXPECT(gbc.pc(), 0x3d09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0004
        gbc.setState(0x4866, 0xfa79, 0x7c90, 0x5fdf, 0xc916, 0x88c0, 0x0, 0x1);
        gbc.writeMem(0x4866, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfa79);
        EXPECT(gbc.pc(), 0x4868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0005
        gbc.setState(0x7834, 0x2d5d, 0x3bf0, 0x9934, 0xf214, 0xe0e7, 0x1, 0x1);
        gbc.writeMem(0x7834, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2d5d);
        EXPECT(gbc.pc(), 0x7836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0006
        gbc.setState(0xed5d, 0x58e5, 0x13e0, 0x73b2, 0xb338, 0xf2f6, 0x1, 0x0);
        gbc.writeMem(0xed5d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x58e5);
        EXPECT(gbc.pc(), 0xed5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed5d), 0xcb);
        EXPECT(gbc.readMem(0xed5e), 0x52);
        // CB 52 0007
        gbc.setState(0x2260, 0x917c, 0x7350, 0xbced, 0xead, 0x186d, 0x0, 0x1);
        gbc.writeMem(0x2260, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x917c);
        EXPECT(gbc.pc(), 0x2262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0008
        gbc.setState(0xe47d, 0x84fa, 0xbb60, 0xcaf2, 0xd6f, 0xe190, 0x0, 0x0);
        gbc.writeMem(0xe47d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x84fa);
        EXPECT(gbc.pc(), 0xe47f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe47d), 0xcb);
        EXPECT(gbc.readMem(0xe47e), 0x52);
        // CB 52 0009
        gbc.setState(0x22b5, 0xffc9, 0xa7c0, 0xd44, 0xdc97, 0xb84a, 0x1, 0x1);
        gbc.writeMem(0x22b5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xffc9);
        EXPECT(gbc.pc(), 0x22b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 000A
        gbc.setState(0x4994, 0x2e5f, 0x8480, 0xce37, 0x2208, 0x7c2f, 0x1, 0x0);
        gbc.writeMem(0x4994, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2e5f);
        EXPECT(gbc.pc(), 0x4996);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 000B
        gbc.setState(0x9def, 0xf796, 0xb3f0, 0x460, 0xad94, 0xe83a, 0x1, 0x0);
        gbc.writeMem(0x9def, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf796);
        EXPECT(gbc.pc(), 0x9df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9def), 0xcb);
        EXPECT(gbc.readMem(0x9df0), 0x52);
        // CB 52 000C
        gbc.setState(0x8f08, 0xaf12, 0x1910, 0xefc1, 0x820a, 0xa837, 0x1, 0x0);
        gbc.writeMem(0x8f08, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xaf12);
        EXPECT(gbc.pc(), 0x8f0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f08), 0xcb);
        EXPECT(gbc.readMem(0x8f09), 0x52);
        // CB 52 000D
        gbc.setState(0x50ba, 0x2cfb, 0x3f90, 0x1566, 0x5c85, 0x9cf7, 0x0, 0x1);
        gbc.writeMem(0x50ba, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2cfb);
        EXPECT(gbc.pc(), 0x50bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 000E
        gbc.setState(0x2a19, 0xbbd, 0x4530, 0x9087, 0xcb98, 0x7d0c, 0x1, 0x0);
        gbc.writeMem(0x2a19, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbbd);
        EXPECT(gbc.pc(), 0x2a1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 000F
        gbc.setState(0x452e, 0xe334, 0xc5d0, 0xbcf8, 0xbcdb, 0x7df5, 0x1, 0x1);
        gbc.writeMem(0x452e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe334);
        EXPECT(gbc.pc(), 0x4530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0010
        gbc.setState(0xcfe8, 0x87d0, 0xb00, 0x34eb, 0x2531, 0x5556, 0x1, 0x0);
        gbc.writeMem(0xcfe8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x87d0);
        EXPECT(gbc.pc(), 0xcfea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe8), 0xcb);
        EXPECT(gbc.readMem(0xcfe9), 0x52);
        // CB 52 0011
        gbc.setState(0xe4a0, 0x7a55, 0x9ca0, 0x9f51, 0x70a8, 0xdafd, 0x0, 0x1);
        gbc.writeMem(0xe4a0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x7a55);
        EXPECT(gbc.pc(), 0xe4a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4a0), 0xcb);
        EXPECT(gbc.readMem(0xe4a1), 0x52);
        // CB 52 0012
        gbc.setState(0x5778, 0xed75, 0x8550, 0x9c40, 0x5061, 0xba7b, 0x1, 0x0);
        gbc.writeMem(0x5778, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xed75);
        EXPECT(gbc.pc(), 0x577a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0013
        gbc.setState(0xdd6b, 0x58e2, 0x9d90, 0x2fd5, 0x2e8b, 0x1451, 0x0, 0x1);
        gbc.writeMem(0xdd6b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x58e2);
        EXPECT(gbc.pc(), 0xdd6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd6b), 0xcb);
        EXPECT(gbc.readMem(0xdd6c), 0x52);
        // CB 52 0014
        gbc.setState(0x4ece, 0xc3be, 0x440, 0xfa92, 0xe823, 0xd18f, 0x1, 0x0);
        gbc.writeMem(0x4ece, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc3be);
        EXPECT(gbc.pc(), 0x4ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0015
        gbc.setState(0x37c7, 0xd6b3, 0x1b20, 0x6633, 0x5003, 0x6aeb, 0x0, 0x1);
        gbc.writeMem(0x37c7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd6b3);
        EXPECT(gbc.pc(), 0x37c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0017
        gbc.setState(0x3185, 0x41ab, 0x3a10, 0x70b1, 0x38c1, 0xfd3d, 0x0, 0x1);
        gbc.writeMem(0x3185, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x41ab);
        EXPECT(gbc.pc(), 0x3187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0018
        gbc.setState(0x460, 0x6008, 0xf420, 0x1c79, 0x6936, 0x4ab5, 0x1, 0x1);
        gbc.writeMem(0x460, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6008);
        EXPECT(gbc.pc(), 0x462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0019
        gbc.setState(0xd0ec, 0x5127, 0xa8b0, 0x7930, 0x1094, 0xfe79, 0x0, 0x0);
        gbc.writeMem(0xd0ec, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5127);
        EXPECT(gbc.pc(), 0xd0ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ec), 0xcb);
        EXPECT(gbc.readMem(0xd0ed), 0x52);
        // CB 52 001A
        gbc.setState(0x6b87, 0xa063, 0x2b80, 0xed6f, 0xec27, 0x80cd, 0x1, 0x1);
        gbc.writeMem(0x6b87, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa063);
        EXPECT(gbc.pc(), 0x6b89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 001B
        gbc.setState(0xa977, 0xc39a, 0xf340, 0x3ff1, 0xd7d8, 0xb5be, 0x0, 0x0);
        gbc.writeMem(0xa977, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc39a);
        EXPECT(gbc.pc(), 0xa979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa977), 0xcb);
        EXPECT(gbc.readMem(0xa978), 0x52);
        // CB 52 001C
        gbc.setState(0x6e3d, 0x14da, 0xbef0, 0x3b58, 0x1819, 0xda8b, 0x1, 0x1);
        gbc.writeMem(0x6e3d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x14da);
        EXPECT(gbc.pc(), 0x6e3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 001D
        gbc.setState(0x523c, 0x63d8, 0xd4a0, 0x50cb, 0x17b3, 0x7ed8, 0x0, 0x0);
        gbc.writeMem(0x523c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x63d8);
        EXPECT(gbc.pc(), 0x523e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 001E
        gbc.setState(0x4024, 0x505c, 0x2ad0, 0x61c6, 0x28af, 0xc8f1, 0x0, 0x1);
        gbc.writeMem(0x4024, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x505c);
        EXPECT(gbc.pc(), 0x4026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 001F
        gbc.setState(0x3cba, 0x46, 0x50, 0x2e91, 0x2aa4, 0x8e7f, 0x0, 0x1);
        gbc.writeMem(0x3cba, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x46);
        EXPECT(gbc.pc(), 0x3cbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0020
        gbc.setState(0xe564, 0x5444, 0xb620, 0x2ab9, 0xdad4, 0xadf1, 0x1, 0x0);
        gbc.writeMem(0xe564, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5444);
        EXPECT(gbc.pc(), 0xe566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe564), 0xcb);
        EXPECT(gbc.readMem(0xe565), 0x52);
        // CB 52 0021
        gbc.setState(0xa088, 0xa20d, 0x8bb0, 0x81dc, 0xc4b4, 0x1163, 0x1, 0x1);
        gbc.writeMem(0xa088, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa20d);
        EXPECT(gbc.pc(), 0xa08a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa088), 0xcb);
        EXPECT(gbc.readMem(0xa089), 0x52);
        // CB 52 0022
        gbc.setState(0x2eb5, 0x161a, 0x3c00, 0xca1d, 0xdbc, 0x9b25, 0x0, 0x1);
        gbc.writeMem(0x2eb5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x161a);
        EXPECT(gbc.pc(), 0x2eb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0023
        gbc.setState(0x4d8c, 0xb09f, 0xb7a0, 0xabde, 0x7311, 0x67b3, 0x0, 0x1);
        gbc.writeMem(0x4d8c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb09f);
        EXPECT(gbc.pc(), 0x4d8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0024
        gbc.setState(0x32ed, 0xb0b2, 0x3f30, 0x4eaa, 0x6d78, 0xd39c, 0x1, 0x1);
        gbc.writeMem(0x32ed, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb0b2);
        EXPECT(gbc.pc(), 0x32ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0025
        gbc.setState(0x1cbf, 0x97ca, 0xaa40, 0x2942, 0x89ee, 0xe112, 0x1, 0x1);
        gbc.writeMem(0x1cbf, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x97ca);
        EXPECT(gbc.pc(), 0x1cc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0026
        gbc.setState(0x83a4, 0xf984, 0xb340, 0x5e66, 0x1413, 0xc1e9, 0x0, 0x0);
        gbc.writeMem(0x83a4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf984);
        EXPECT(gbc.pc(), 0x83a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a4), 0xcb);
        EXPECT(gbc.readMem(0x83a5), 0x52);
        // CB 52 0027
        gbc.setState(0xe29c, 0x7457, 0x60d0, 0x6e4a, 0x8129, 0x5f1c, 0x1, 0x1);
        gbc.writeMem(0xe29c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7457);
        EXPECT(gbc.pc(), 0xe29e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe29c), 0xcb);
        EXPECT(gbc.readMem(0xe29d), 0x52);
        // CB 52 0028
        gbc.setState(0xec90, 0xad2e, 0x3660, 0x4e02, 0xa8b5, 0xc8a0, 0x1, 0x1);
        gbc.writeMem(0xec90, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xad2e);
        EXPECT(gbc.pc(), 0xec92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec90), 0xcb);
        EXPECT(gbc.readMem(0xec91), 0x52);
        // CB 52 0029
        gbc.setState(0x45ef, 0x7576, 0x5ac0, 0x50f4, 0x215e, 0x93e9, 0x0, 0x1);
        gbc.writeMem(0x45ef, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7576);
        EXPECT(gbc.pc(), 0x45f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 002A
        gbc.setState(0x131e, 0xd66d, 0xa190, 0xa51e, 0x2c2f, 0xc6d5, 0x1, 0x1);
        gbc.writeMem(0x131e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd66d);
        EXPECT(gbc.pc(), 0x1320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 002B
        gbc.setState(0x4c09, 0xc77a, 0x6e70, 0xb04, 0xa4fd, 0xb05d, 0x1, 0x1);
        gbc.writeMem(0x4c09, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc77a);
        EXPECT(gbc.pc(), 0x4c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 002C
        gbc.setState(0x11f2, 0x2839, 0x8360, 0x76e3, 0x2880, 0x6634, 0x0, 0x1);
        gbc.writeMem(0x11f2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2839);
        EXPECT(gbc.pc(), 0x11f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 002D
        gbc.setState(0xca15, 0x27d6, 0x7880, 0xbd45, 0x44e1, 0xa95f, 0x0, 0x0);
        gbc.writeMem(0xca15, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x27d6);
        EXPECT(gbc.pc(), 0xca17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca15), 0xcb);
        EXPECT(gbc.readMem(0xca16), 0x52);
        // CB 52 002E
        gbc.setState(0x5e70, 0xf3ee, 0x7ea0, 0x190f, 0x3bad, 0x28ab, 0x0, 0x1);
        gbc.writeMem(0x5e70, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf3ee);
        EXPECT(gbc.pc(), 0x5e72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 002F
        gbc.setState(0xe863, 0x6f4, 0x2740, 0xfbad, 0x8813, 0x6a9, 0x0, 0x1);
        gbc.writeMem(0xe863, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6f4);
        EXPECT(gbc.pc(), 0xe865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe863), 0xcb);
        EXPECT(gbc.readMem(0xe864), 0x52);
        // CB 52 0030
        gbc.setState(0xb96, 0x89, 0x7690, 0xdf47, 0xe063, 0xe473, 0x1, 0x0);
        gbc.writeMem(0xb96, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x89);
        EXPECT(gbc.pc(), 0xb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0031
        gbc.setState(0x8d2f, 0x9679, 0x3600, 0xfacc, 0x7028, 0xbcf6, 0x1, 0x1);
        gbc.writeMem(0x8d2f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9679);
        EXPECT(gbc.pc(), 0x8d31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d2f), 0xcb);
        EXPECT(gbc.readMem(0x8d30), 0x52);
        // CB 52 0032
        gbc.setState(0x85f0, 0x3cc9, 0x8340, 0xd574, 0x91ba, 0x419d, 0x1, 0x1);
        gbc.writeMem(0x85f0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3cc9);
        EXPECT(gbc.pc(), 0x85f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85f0), 0xcb);
        EXPECT(gbc.readMem(0x85f1), 0x52);
        // CB 52 0033
        gbc.setState(0x6f72, 0xa2eb, 0x11e0, 0x9783, 0x73d, 0x2c5c, 0x1, 0x0);
        gbc.writeMem(0x6f72, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa2eb);
        EXPECT(gbc.pc(), 0x6f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0034
        gbc.setState(0xbf93, 0x8d30, 0x52b0, 0x45da, 0xd151, 0x538f, 0x1, 0x0);
        gbc.writeMem(0xbf93, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8d30);
        EXPECT(gbc.pc(), 0xbf95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf93), 0xcb);
        EXPECT(gbc.readMem(0xbf94), 0x52);
        // CB 52 0035
        gbc.setState(0x17c1, 0xfcdd, 0x3460, 0x8089, 0x9509, 0x3d8c, 0x0, 0x1);
        gbc.writeMem(0x17c1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfcdd);
        EXPECT(gbc.pc(), 0x17c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0036
        gbc.setState(0xe05e, 0x5d2a, 0x9e60, 0x9f2, 0xc5a4, 0x6e4e, 0x1, 0x1);
        gbc.writeMem(0xe05e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5d2a);
        EXPECT(gbc.pc(), 0xe060);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe05e), 0xcb);
        EXPECT(gbc.readMem(0xe05f), 0x52);
        // CB 52 0037
        gbc.setState(0x977a, 0xe2bc, 0x93f0, 0x6e8c, 0x9205, 0xad7c, 0x1, 0x1);
        gbc.writeMem(0x977a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe2bc);
        EXPECT(gbc.pc(), 0x977c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x977a), 0xcb);
        EXPECT(gbc.readMem(0x977b), 0x52);
        // CB 52 0038
        gbc.setState(0xb49a, 0x2368, 0x1c50, 0x85d5, 0x94c0, 0xf1da, 0x1, 0x1);
        gbc.writeMem(0xb49a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2368);
        EXPECT(gbc.pc(), 0xb49c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb49a), 0xcb);
        EXPECT(gbc.readMem(0xb49b), 0x52);
        // CB 52 0039
        gbc.setState(0x2912, 0x80aa, 0x290, 0xc825, 0x98bc, 0x84ea, 0x1, 0x0);
        gbc.writeMem(0x2912, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x80aa);
        EXPECT(gbc.pc(), 0x2914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 003A
        gbc.setState(0xbca2, 0xb53e, 0x4210, 0x8d01, 0xacb5, 0x441, 0x1, 0x1);
        gbc.writeMem(0xbca2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb53e);
        EXPECT(gbc.pc(), 0xbca4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbca2), 0xcb);
        EXPECT(gbc.readMem(0xbca3), 0x52);
        // CB 52 003B
        gbc.setState(0x2b70, 0x900b, 0x5d60, 0xd1e, 0x7c64, 0x8720, 0x1, 0x1);
        gbc.writeMem(0x2b70, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x900b);
        EXPECT(gbc.pc(), 0x2b72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 003C
        gbc.setState(0x2b3a, 0x2dda, 0xd750, 0x8459, 0x4dac, 0x9bee, 0x1, 0x0);
        gbc.writeMem(0x2b3a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2dda);
        EXPECT(gbc.pc(), 0x2b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 003D
        gbc.setState(0x4212, 0xe844, 0x9c00, 0x133d, 0x9bb8, 0xd198, 0x0, 0x1);
        gbc.writeMem(0x4212, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe844);
        EXPECT(gbc.pc(), 0x4214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 003E
        gbc.setState(0xc2fc, 0xa2, 0x9130, 0xdf8d, 0xd077, 0x7741, 0x1, 0x1);
        gbc.writeMem(0xc2fc, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa2);
        EXPECT(gbc.pc(), 0xc2fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2fc), 0xcb);
        EXPECT(gbc.readMem(0xc2fd), 0x52);
        // CB 52 003F
        gbc.setState(0x2484, 0xdb49, 0x24a0, 0xdbd9, 0x154e, 0x22f4, 0x0, 0x1);
        gbc.writeMem(0x2484, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdb49);
        EXPECT(gbc.pc(), 0x2486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0040
        gbc.setState(0x30cb, 0x5f01, 0x1330, 0xf057, 0x970, 0x11a2, 0x0, 0x0);
        gbc.writeMem(0x30cb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5f01);
        EXPECT(gbc.pc(), 0x30cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0041
        gbc.setState(0x282f, 0x5019, 0x2b00, 0xb848, 0x11e3, 0x1903, 0x0, 0x0);
        gbc.writeMem(0x282f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5019);
        EXPECT(gbc.pc(), 0x2831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0042
        gbc.setState(0x4146, 0x26ca, 0x2430, 0x7ace, 0x39c1, 0x8e14, 0x0, 0x0);
        gbc.writeMem(0x4146, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x26ca);
        EXPECT(gbc.pc(), 0x4148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0043
        gbc.setState(0x1e3f, 0xd2a8, 0x6760, 0xbd96, 0xa4f9, 0x39c, 0x1, 0x1);
        gbc.writeMem(0x1e3f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd2a8);
        EXPECT(gbc.pc(), 0x1e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0044
        gbc.setState(0x8cd, 0x73d0, 0xe430, 0x2f1a, 0x93d5, 0x5fe9, 0x0, 0x0);
        gbc.writeMem(0x8cd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x73d0);
        EXPECT(gbc.pc(), 0x8cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0045
        gbc.setState(0xb6cf, 0x65ac, 0x9960, 0xff41, 0x8be6, 0xb4b4, 0x0, 0x0);
        gbc.writeMem(0xb6cf, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x65ac);
        EXPECT(gbc.pc(), 0xb6d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6cf), 0xcb);
        EXPECT(gbc.readMem(0xb6d0), 0x52);
        // CB 52 0046
        gbc.setState(0xeb47, 0x4d47, 0x9770, 0xf0c8, 0x1153, 0xc373, 0x1, 0x1);
        gbc.writeMem(0xeb47, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4d47);
        EXPECT(gbc.pc(), 0xeb49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb47), 0xcb);
        EXPECT(gbc.readMem(0xeb48), 0x52);
        // CB 52 0047
        gbc.setState(0xdf00, 0x888b, 0x37a0, 0x6f09, 0xed91, 0x68e2, 0x0, 0x0);
        gbc.writeMem(0xdf00, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x888b);
        EXPECT(gbc.pc(), 0xdf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf00), 0xcb);
        EXPECT(gbc.readMem(0xdf01), 0x52);
        // CB 52 0048
        gbc.setState(0xbea1, 0x5e06, 0x7d50, 0xede9, 0x6d21, 0x70bf, 0x0, 0x1);
        gbc.writeMem(0xbea1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5e06);
        EXPECT(gbc.pc(), 0xbea3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea1), 0xcb);
        EXPECT(gbc.readMem(0xbea2), 0x52);
        // CB 52 0049
        gbc.setState(0x2711, 0xba64, 0x11f0, 0xfeed, 0xab0b, 0x15aa, 0x0, 0x1);
        gbc.writeMem(0x2711, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xba64);
        EXPECT(gbc.pc(), 0x2713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 004A
        gbc.setState(0x7a3f, 0x754f, 0x23e0, 0x6588, 0x3614, 0xf4eb, 0x1, 0x0);
        gbc.writeMem(0x7a3f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x754f);
        EXPECT(gbc.pc(), 0x7a41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 004B
        gbc.setState(0xa160, 0x57ae, 0xf450, 0xd496, 0xcaf7, 0xd361, 0x1, 0x1);
        gbc.writeMem(0xa160, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x57ae);
        EXPECT(gbc.pc(), 0xa162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa160), 0xcb);
        EXPECT(gbc.readMem(0xa161), 0x52);
        // CB 52 004C
        gbc.setState(0xce1a, 0x3d96, 0xc1e0, 0x8a5c, 0x274e, 0xf786, 0x0, 0x1);
        gbc.writeMem(0xce1a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3d96);
        EXPECT(gbc.pc(), 0xce1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1a), 0xcb);
        EXPECT(gbc.readMem(0xce1b), 0x52);
        // CB 52 004D
        gbc.setState(0x1ec9, 0x98c3, 0x5480, 0x25fc, 0xaa1a, 0xffde, 0x1, 0x1);
        gbc.writeMem(0x1ec9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x98c3);
        EXPECT(gbc.pc(), 0x1ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 004E
        gbc.setState(0x3a5, 0x9b03, 0x7ee0, 0x814, 0xb132, 0x9268, 0x1, 0x0);
        gbc.writeMem(0x3a5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9b03);
        EXPECT(gbc.pc(), 0x3a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 004F
        gbc.setState(0xdb25, 0xbf22, 0x41f0, 0x4e16, 0xd01e, 0x76a, 0x1, 0x1);
        gbc.writeMem(0xdb25, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbf22);
        EXPECT(gbc.pc(), 0xdb27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb25), 0xcb);
        EXPECT(gbc.readMem(0xdb26), 0x52);
        // CB 52 0050
        gbc.setState(0xec77, 0x1bce, 0x1740, 0xe88b, 0x44a4, 0x5c30, 0x0, 0x1);
        gbc.writeMem(0xec77, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1bce);
        EXPECT(gbc.pc(), 0xec79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec77), 0xcb);
        EXPECT(gbc.readMem(0xec78), 0x52);
        // CB 52 0051
        gbc.setState(0xd07c, 0x7546, 0x47f0, 0x2d5e, 0x98c2, 0xea28, 0x0, 0x0);
        gbc.writeMem(0xd07c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7546);
        EXPECT(gbc.pc(), 0xd07e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd07c), 0xcb);
        EXPECT(gbc.readMem(0xd07d), 0x52);
        // CB 52 0052
        gbc.setState(0xdb7c, 0xf501, 0xb620, 0x1fab, 0xa1e8, 0xc088, 0x0, 0x0);
        gbc.writeMem(0xdb7c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf501);
        EXPECT(gbc.pc(), 0xdb7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb7c), 0xcb);
        EXPECT(gbc.readMem(0xdb7d), 0x52);
        // CB 52 0053
        gbc.setState(0x4223, 0x1d01, 0x380, 0xb8f2, 0x98b4, 0xde49, 0x1, 0x1);
        gbc.writeMem(0x4223, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1d01);
        EXPECT(gbc.pc(), 0x4225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0054
        gbc.setState(0x9230, 0x6ad4, 0x3f90, 0xef2b, 0xac89, 0x9bd6, 0x0, 0x1);
        gbc.writeMem(0x9230, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6ad4);
        EXPECT(gbc.pc(), 0x9232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9230), 0xcb);
        EXPECT(gbc.readMem(0x9231), 0x52);
        // CB 52 0055
        gbc.setState(0xa278, 0xaf2, 0xf120, 0x731f, 0x7eaa, 0x50b2, 0x1, 0x0);
        gbc.writeMem(0xa278, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xaf2);
        EXPECT(gbc.pc(), 0xa27a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa278), 0xcb);
        EXPECT(gbc.readMem(0xa279), 0x52);
        // CB 52 0056
        gbc.setState(0x1e39, 0xbdc3, 0x94d0, 0xb24d, 0x413e, 0xbc60, 0x0, 0x1);
        gbc.writeMem(0x1e39, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbdc3);
        EXPECT(gbc.pc(), 0x1e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0057
        gbc.setState(0x5515, 0x445d, 0xd650, 0x8823, 0xe86a, 0x2efe, 0x1, 0x1);
        gbc.writeMem(0x5515, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x445d);
        EXPECT(gbc.pc(), 0x5517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0058
        gbc.setState(0x5277, 0xdb02, 0x690, 0x7f6d, 0xb3e5, 0xc48a, 0x1, 0x1);
        gbc.writeMem(0x5277, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdb02);
        EXPECT(gbc.pc(), 0x5279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0059
        gbc.setState(0xdbb6, 0x973f, 0x230, 0x6da3, 0x153b, 0x96ec, 0x0, 0x0);
        gbc.writeMem(0xdbb6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x973f);
        EXPECT(gbc.pc(), 0xdbb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb6), 0xcb);
        EXPECT(gbc.readMem(0xdbb7), 0x52);
        // CB 52 005A
        gbc.setState(0x36dd, 0xae73, 0xe3d0, 0xfd2c, 0x9d20, 0xb66e, 0x1, 0x0);
        gbc.writeMem(0x36dd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xae73);
        EXPECT(gbc.pc(), 0x36df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 005B
        gbc.setState(0x468c, 0xd2d0, 0xb0e0, 0xd0b1, 0x0, 0x7f5e, 0x0, 0x0);
        gbc.writeMem(0x468c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd2d0);
        EXPECT(gbc.pc(), 0x468e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 005D
        gbc.setState(0x598d, 0xd402, 0x82e0, 0x19bd, 0x7cf8, 0x59f2, 0x1, 0x0);
        gbc.writeMem(0x598d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd402);
        EXPECT(gbc.pc(), 0x598f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 005E
        gbc.setState(0x428d, 0x6d1a, 0x83d0, 0xc273, 0x75f4, 0xdf33, 0x0, 0x0);
        gbc.writeMem(0x428d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6d1a);
        EXPECT(gbc.pc(), 0x428f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 005F
        gbc.setState(0x180d, 0xc9b2, 0x61c0, 0xa6d0, 0x200d, 0x1dbe, 0x1, 0x1);
        gbc.writeMem(0x180d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc9b2);
        EXPECT(gbc.pc(), 0x180f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0062
        gbc.setState(0x70d0, 0x546b, 0x5c20, 0x6ecc, 0xc342, 0x1f95, 0x0, 0x0);
        gbc.writeMem(0x70d0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x546b);
        EXPECT(gbc.pc(), 0x70d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0063
        gbc.setState(0x95a, 0x48b6, 0x2cc0, 0x8409, 0xb8ea, 0x831b, 0x1, 0x1);
        gbc.writeMem(0x95a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x48b6);
        EXPECT(gbc.pc(), 0x95c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0064
        gbc.setState(0xce49, 0xdb6b, 0x9ff0, 0x667, 0x5be4, 0x7d8b, 0x1, 0x1);
        gbc.writeMem(0xce49, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdb6b);
        EXPECT(gbc.pc(), 0xce4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce49), 0xcb);
        EXPECT(gbc.readMem(0xce4a), 0x52);
        // CB 52 0065
        gbc.setState(0x6ae6, 0x307c, 0x9670, 0x9489, 0x68bd, 0xeac4, 0x1, 0x1);
        gbc.writeMem(0x6ae6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x307c);
        EXPECT(gbc.pc(), 0x6ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0066
        gbc.setState(0xd1f, 0xb66e, 0x6830, 0xd48d, 0x31c8, 0xd139, 0x1, 0x0);
        gbc.writeMem(0xd1f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb66e);
        EXPECT(gbc.pc(), 0xd21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0067
        gbc.setState(0xd068, 0xcb14, 0x25e0, 0x915f, 0x9b48, 0x6fcb, 0x0, 0x0);
        gbc.writeMem(0xd068, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcb14);
        EXPECT(gbc.pc(), 0xd06a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd068), 0xcb);
        EXPECT(gbc.readMem(0xd069), 0x52);
        // CB 52 0068
        gbc.setState(0x1189, 0x610b, 0x7d70, 0x5e08, 0x221, 0x7f17, 0x1, 0x1);
        gbc.writeMem(0x1189, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x610b);
        EXPECT(gbc.pc(), 0x118b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0069
        gbc.setState(0x8f6d, 0x3c6b, 0x8d30, 0x8ad7, 0xb340, 0xfe5e, 0x1, 0x0);
        gbc.writeMem(0x8f6d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3c6b);
        EXPECT(gbc.pc(), 0x8f6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f6d), 0xcb);
        EXPECT(gbc.readMem(0x8f6e), 0x52);
        // CB 52 006A
        gbc.setState(0x9a55, 0xe4c2, 0x4820, 0x5788, 0xe7d5, 0x1d93, 0x1, 0x0);
        gbc.writeMem(0x9a55, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe4c2);
        EXPECT(gbc.pc(), 0x9a57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a55), 0xcb);
        EXPECT(gbc.readMem(0x9a56), 0x52);
        // CB 52 006B
        gbc.setState(0x11b8, 0x2d4, 0xf8d0, 0xfdd5, 0xf9fa, 0x6973, 0x1, 0x0);
        gbc.writeMem(0x11b8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2d4);
        EXPECT(gbc.pc(), 0x11ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 006C
        gbc.setState(0x7082, 0xffa, 0xc050, 0x8abc, 0x6ba1, 0x91d3, 0x1, 0x0);
        gbc.writeMem(0x7082, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xffa);
        EXPECT(gbc.pc(), 0x7084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 006D
        gbc.setState(0xc4c, 0x5cce, 0x4bd0, 0xb59b, 0x6b42, 0x936c, 0x0, 0x1);
        gbc.writeMem(0xc4c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5cce);
        EXPECT(gbc.pc(), 0xc4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 006E
        gbc.setState(0x5a9d, 0x5a8, 0x4190, 0x17c, 0xde45, 0x7e1f, 0x1, 0x0);
        gbc.writeMem(0x5a9d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5a8);
        EXPECT(gbc.pc(), 0x5a9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 006F
        gbc.setState(0x122a, 0x51a5, 0x5ad0, 0xe04f, 0xfe5b, 0xac5f, 0x1, 0x0);
        gbc.writeMem(0x122a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x51a5);
        EXPECT(gbc.pc(), 0x122c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0070
        gbc.setState(0x4cc3, 0x3f2, 0xdd00, 0xb8eb, 0x244d, 0xe635, 0x1, 0x0);
        gbc.writeMem(0x4cc3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3f2);
        EXPECT(gbc.pc(), 0x4cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0071
        gbc.setState(0xe64a, 0x6b19, 0xae50, 0x7db2, 0x52dc, 0x158c, 0x0, 0x1);
        gbc.writeMem(0xe64a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6b19);
        EXPECT(gbc.pc(), 0xe64c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe64a), 0xcb);
        EXPECT(gbc.readMem(0xe64b), 0x52);
        // CB 52 0072
        gbc.setState(0x9dec, 0x2e09, 0x5450, 0x7045, 0xd92c, 0xb83d, 0x0, 0x1);
        gbc.writeMem(0x9dec, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2e09);
        EXPECT(gbc.pc(), 0x9dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dec), 0xcb);
        EXPECT(gbc.readMem(0x9ded), 0x52);
        // CB 52 0073
        gbc.setState(0xabef, 0xf608, 0x2790, 0x99c5, 0x1608, 0xc9a6, 0x1, 0x0);
        gbc.writeMem(0xabef, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf608);
        EXPECT(gbc.pc(), 0xabf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabef), 0xcb);
        EXPECT(gbc.readMem(0xabf0), 0x52);
        // CB 52 0074
        gbc.setState(0x9da4, 0x519b, 0xde30, 0xa7cb, 0xc154, 0x8dc9, 0x0, 0x0);
        gbc.writeMem(0x9da4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x519b);
        EXPECT(gbc.pc(), 0x9da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da4), 0xcb);
        EXPECT(gbc.readMem(0x9da5), 0x52);
        // CB 52 0075
        gbc.setState(0x7a80, 0xc604, 0x7160, 0x6f1b, 0x702b, 0xf03f, 0x0, 0x0);
        gbc.writeMem(0x7a80, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xc604);
        EXPECT(gbc.pc(), 0x7a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0076
        gbc.setState(0xb1de, 0x2de0, 0x8200, 0x9919, 0xe379, 0xdc8d, 0x0, 0x1);
        gbc.writeMem(0xb1de, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2de0);
        EXPECT(gbc.pc(), 0xb1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1de), 0xcb);
        EXPECT(gbc.readMem(0xb1df), 0x52);
        // CB 52 0078
        gbc.setState(0xa862, 0x6443, 0x13d0, 0x445, 0x4d0f, 0x7c5, 0x1, 0x0);
        gbc.writeMem(0xa862, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6443);
        EXPECT(gbc.pc(), 0xa864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa862), 0xcb);
        EXPECT(gbc.readMem(0xa863), 0x52);
        // CB 52 0079
        gbc.setState(0x3c03, 0xefe9, 0x6010, 0x1d6, 0x2477, 0x5194, 0x1, 0x0);
        gbc.writeMem(0x3c03, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xefe9);
        EXPECT(gbc.pc(), 0x3c05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 007A
        gbc.setState(0xa3f1, 0x521a, 0xa120, 0x4b6b, 0x444e, 0xddb8, 0x1, 0x1);
        gbc.writeMem(0xa3f1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x521a);
        EXPECT(gbc.pc(), 0xa3f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f1), 0xcb);
        EXPECT(gbc.readMem(0xa3f2), 0x52);
        // CB 52 007B
        gbc.setState(0x6e08, 0x9646, 0x4510, 0x5005, 0xaec4, 0xfe7, 0x1, 0x0);
        gbc.writeMem(0x6e08, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9646);
        EXPECT(gbc.pc(), 0x6e0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 007C
        gbc.setState(0x9c8a, 0xe619, 0xaaf0, 0x7f8b, 0x30a1, 0x7ce8, 0x1, 0x1);
        gbc.writeMem(0x9c8a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe619);
        EXPECT(gbc.pc(), 0x9c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c8a), 0xcb);
        EXPECT(gbc.readMem(0x9c8b), 0x52);
        // CB 52 007D
        gbc.setState(0xafa1, 0xc68f, 0x4570, 0x2edc, 0xe43d, 0x8578, 0x0, 0x0);
        gbc.writeMem(0xafa1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc68f);
        EXPECT(gbc.pc(), 0xafa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa1), 0xcb);
        EXPECT(gbc.readMem(0xafa2), 0x52);
        // CB 52 007E
        gbc.setState(0xeed0, 0x1d39, 0x7370, 0x783f, 0xe456, 0x301a, 0x0, 0x0);
        gbc.writeMem(0xeed0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1d39);
        EXPECT(gbc.pc(), 0xeed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed0), 0xcb);
        EXPECT(gbc.readMem(0xeed1), 0x52);
        // CB 52 007F
        gbc.setState(0x8fd6, 0x5777, 0x1f00, 0x5285, 0x84b1, 0xcf61, 0x1, 0x0);
        gbc.writeMem(0x8fd6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5777);
        EXPECT(gbc.pc(), 0x8fd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd6), 0xcb);
        EXPECT(gbc.readMem(0x8fd7), 0x52);
        // CB 52 0080
        gbc.setState(0x38b4, 0xb16f, 0x7af0, 0x503f, 0xd727, 0xcd35, 0x1, 0x1);
        gbc.writeMem(0x38b4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xb16f);
        EXPECT(gbc.pc(), 0x38b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0081
        gbc.setState(0x7294, 0x3d5f, 0x79f0, 0x2ec6, 0xde8b, 0x36bd, 0x1, 0x1);
        gbc.writeMem(0x7294, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3d5f);
        EXPECT(gbc.pc(), 0x7296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0082
        gbc.setState(0xacfb, 0xe4cd, 0xa320, 0x7541, 0x412a, 0x41e3, 0x1, 0x1);
        gbc.writeMem(0xacfb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe4cd);
        EXPECT(gbc.pc(), 0xacfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacfb), 0xcb);
        EXPECT(gbc.readMem(0xacfc), 0x52);
        // CB 52 0083
        gbc.setState(0xa653, 0x6afa, 0x6a50, 0x6b3d, 0x1aec, 0x18f3, 0x1, 0x0);
        gbc.writeMem(0xa653, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6afa);
        EXPECT(gbc.pc(), 0xa655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa653), 0xcb);
        EXPECT(gbc.readMem(0xa654), 0x52);
        // CB 52 0086
        gbc.setState(0xb67b, 0xa69b, 0x44b0, 0x938, 0x3f85, 0xe9a, 0x1, 0x0);
        gbc.writeMem(0xb67b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa69b);
        EXPECT(gbc.pc(), 0xb67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb67b), 0xcb);
        EXPECT(gbc.readMem(0xb67c), 0x52);
        // CB 52 0087
        gbc.setState(0x4601, 0xcf02, 0x62a0, 0x2e6f, 0xb386, 0x4b39, 0x1, 0x0);
        gbc.writeMem(0x4601, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcf02);
        EXPECT(gbc.pc(), 0x4603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0088
        gbc.setState(0x6c4c, 0x1582, 0xedd0, 0x2b30, 0x5289, 0xf625, 0x1, 0x0);
        gbc.writeMem(0x6c4c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1582);
        EXPECT(gbc.pc(), 0x6c4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0089
        gbc.setState(0x3d41, 0x37f4, 0x7a20, 0xf3f3, 0x6441, 0x3e1b, 0x1, 0x0);
        gbc.writeMem(0x3d41, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x37f4);
        EXPECT(gbc.pc(), 0x3d43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 008A
        gbc.setState(0x3738, 0x6376, 0x6570, 0xdbd6, 0xab09, 0xaf11, 0x0, 0x0);
        gbc.writeMem(0x3738, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6376);
        EXPECT(gbc.pc(), 0x373a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 008B
        gbc.setState(0x23f3, 0xc39d, 0xe8c0, 0x1816, 0xe4d6, 0x17a3, 0x0, 0x0);
        gbc.writeMem(0x23f3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc39d);
        EXPECT(gbc.pc(), 0x23f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 008C
        gbc.setState(0x8384, 0xfca, 0xe060, 0xb13, 0xccca, 0xf99f, 0x1, 0x0);
        gbc.writeMem(0x8384, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfca);
        EXPECT(gbc.pc(), 0x8386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8384), 0xcb);
        EXPECT(gbc.readMem(0x8385), 0x52);
        // CB 52 008D
        gbc.setState(0x9269, 0x61e0, 0xd680, 0xc52, 0x87d6, 0x2ef3, 0x1, 0x1);
        gbc.writeMem(0x9269, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x61e0);
        EXPECT(gbc.pc(), 0x926b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9269), 0xcb);
        EXPECT(gbc.readMem(0x926a), 0x52);
        // CB 52 008E
        gbc.setState(0xdb66, 0x85d3, 0x8bf0, 0xfdc, 0x5f71, 0x2f17, 0x1, 0x1);
        gbc.writeMem(0xdb66, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x85d3);
        EXPECT(gbc.pc(), 0xdb68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb66), 0xcb);
        EXPECT(gbc.readMem(0xdb67), 0x52);
        // CB 52 008F
        gbc.setState(0x67ee, 0xc95a, 0x88b0, 0x2c1d, 0xd666, 0xee16, 0x0, 0x1);
        gbc.writeMem(0x67ee, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc95a);
        EXPECT(gbc.pc(), 0x67f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0090
        gbc.setState(0x1d03, 0xe45a, 0x9350, 0x8fd1, 0x3f41, 0xaeb2, 0x0, 0x0);
        gbc.writeMem(0x1d03, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe45a);
        EXPECT(gbc.pc(), 0x1d05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0091
        gbc.setState(0x4efb, 0xb861, 0x5de0, 0xe9ef, 0x8597, 0x2d1d, 0x0, 0x1);
        gbc.writeMem(0x4efb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb861);
        EXPECT(gbc.pc(), 0x4efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0092
        gbc.setState(0xa186, 0x3834, 0xdf70, 0xf297, 0x4c5f, 0x45e7, 0x1, 0x1);
        gbc.writeMem(0xa186, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3834);
        EXPECT(gbc.pc(), 0xa188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa186), 0xcb);
        EXPECT(gbc.readMem(0xa187), 0x52);
        // CB 52 0093
        gbc.setState(0x6f5f, 0x8fce, 0xbf20, 0xef0a, 0xc0ee, 0x718, 0x0, 0x0);
        gbc.writeMem(0x6f5f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8fce);
        EXPECT(gbc.pc(), 0x6f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0094
        gbc.setState(0xd59d, 0x6186, 0xc880, 0x3f23, 0x5d1, 0x70cf, 0x0, 0x1);
        gbc.writeMem(0xd59d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6186);
        EXPECT(gbc.pc(), 0xd59f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd59d), 0xcb);
        EXPECT(gbc.readMem(0xd59e), 0x52);
        // CB 52 0095
        gbc.setState(0x974, 0x12a2, 0x460, 0xd006, 0xc863, 0x8e3e, 0x0, 0x1);
        gbc.writeMem(0x974, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x12a2);
        EXPECT(gbc.pc(), 0x976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0099
        gbc.setState(0x407c, 0x5b33, 0xdf30, 0xef6c, 0xf3cf, 0xe69a, 0x0, 0x0);
        gbc.writeMem(0x407c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5b33);
        EXPECT(gbc.pc(), 0x407e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 009A
        gbc.setState(0x5bdb, 0xfcfc, 0xd300, 0x5cf, 0x1f23, 0x9f55, 0x0, 0x0);
        gbc.writeMem(0x5bdb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfcfc);
        EXPECT(gbc.pc(), 0x5bdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 009B
        gbc.setState(0xac0a, 0x35ad, 0xded0, 0x397b, 0xdff1, 0x3478, 0x0, 0x0);
        gbc.writeMem(0xac0a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x35ad);
        EXPECT(gbc.pc(), 0xac0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0a), 0xcb);
        EXPECT(gbc.readMem(0xac0b), 0x52);
        // CB 52 009C
        gbc.setState(0x8c6e, 0x4a2e, 0x99e0, 0xef4d, 0x3485, 0xcca0, 0x1, 0x0);
        gbc.writeMem(0x8c6e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x4a2e);
        EXPECT(gbc.pc(), 0x8c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c6e), 0xcb);
        EXPECT(gbc.readMem(0x8c6f), 0x52);
        // CB 52 009D
        gbc.setState(0x6c7a, 0xc9c2, 0x6060, 0x27f4, 0xaf03, 0xf3f5, 0x1, 0x1);
        gbc.writeMem(0x6c7a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc9c2);
        EXPECT(gbc.pc(), 0x6c7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 009E
        gbc.setState(0xa919, 0x344d, 0xa40, 0xb72e, 0x7688, 0xbc1a, 0x1, 0x0);
        gbc.writeMem(0xa919, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x344d);
        EXPECT(gbc.pc(), 0xa91b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa919), 0xcb);
        EXPECT(gbc.readMem(0xa91a), 0x52);
        // CB 52 009F
        gbc.setState(0x1428, 0x4dba, 0x1f50, 0xff17, 0x90e8, 0x75a3, 0x1, 0x1);
        gbc.writeMem(0x1428, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4dba);
        EXPECT(gbc.pc(), 0x142a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00A0
        gbc.setState(0xd710, 0x58cd, 0xbf50, 0x9b3b, 0x12a7, 0xd3ec, 0x0, 0x1);
        gbc.writeMem(0xd710, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x58cd);
        EXPECT(gbc.pc(), 0xd712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd710), 0xcb);
        EXPECT(gbc.readMem(0xd711), 0x52);
        // CB 52 00A1
        gbc.setState(0xb4f7, 0x5757, 0xaf0, 0x95ad, 0x33b8, 0x9bb1, 0x1, 0x1);
        gbc.writeMem(0xb4f7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5757);
        EXPECT(gbc.pc(), 0xb4f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f7), 0xcb);
        EXPECT(gbc.readMem(0xb4f8), 0x52);
        // CB 52 00A2
        gbc.setState(0x55a5, 0x48e4, 0x1570, 0x469, 0x234b, 0xc58f, 0x1, 0x1);
        gbc.writeMem(0x55a5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x48e4);
        EXPECT(gbc.pc(), 0x55a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00A3
        gbc.setState(0x43c0, 0x3fd0, 0xe440, 0xd815, 0x9201, 0xc3c3, 0x1, 0x0);
        gbc.writeMem(0x43c0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3fd0);
        EXPECT(gbc.pc(), 0x43c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00A4
        gbc.setState(0x5ab0, 0x6e93, 0x3b30, 0x79a7, 0xa16d, 0xe8f9, 0x1, 0x1);
        gbc.writeMem(0x5ab0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6e93);
        EXPECT(gbc.pc(), 0x5ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00A5
        gbc.setState(0x44fa, 0xf75d, 0x6ec0, 0x9143, 0x635c, 0x32ba, 0x0, 0x1);
        gbc.writeMem(0x44fa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf75d);
        EXPECT(gbc.pc(), 0x44fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00A6
        gbc.setState(0xeb71, 0xa522, 0xf7f0, 0xcc88, 0x3ca4, 0x927f, 0x0, 0x0);
        gbc.writeMem(0xeb71, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa522);
        EXPECT(gbc.pc(), 0xeb73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb71), 0xcb);
        EXPECT(gbc.readMem(0xeb72), 0x52);
        // CB 52 00A7
        gbc.setState(0xaf43, 0xb9fa, 0x4010, 0xc51e, 0x6fbb, 0xb9d3, 0x1, 0x0);
        gbc.writeMem(0xaf43, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb9fa);
        EXPECT(gbc.pc(), 0xaf45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf43), 0xcb);
        EXPECT(gbc.readMem(0xaf44), 0x52);
        // CB 52 00A8
        gbc.setState(0xd8b0, 0xb31d, 0x3af0, 0xffe4, 0x58da, 0x8c, 0x0, 0x1);
        gbc.writeMem(0xd8b0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb31d);
        EXPECT(gbc.pc(), 0xd8b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8b0), 0xcb);
        EXPECT(gbc.readMem(0xd8b1), 0x52);
        // CB 52 00A9
        gbc.setState(0x67f8, 0x1241, 0x96b0, 0x408e, 0x3636, 0x7569, 0x0, 0x1);
        gbc.writeMem(0x67f8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1241);
        EXPECT(gbc.pc(), 0x67fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00AA
        gbc.setState(0x4e3, 0x6734, 0x8210, 0xf76e, 0xcf20, 0x906e, 0x0, 0x1);
        gbc.writeMem(0x4e3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6734);
        EXPECT(gbc.pc(), 0x4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00AB
        gbc.setState(0x3524, 0xcb42, 0xb760, 0x2516, 0xea90, 0x101a, 0x1, 0x0);
        gbc.writeMem(0x3524, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcb42);
        EXPECT(gbc.pc(), 0x3526);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00AC
        gbc.setState(0xa9e8, 0x7256, 0x4c20, 0x6abc, 0xc26f, 0x2a65, 0x0, 0x0);
        gbc.writeMem(0xa9e8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7256);
        EXPECT(gbc.pc(), 0xa9ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e8), 0xcb);
        EXPECT(gbc.readMem(0xa9e9), 0x52);
        // CB 52 00AD
        gbc.setState(0x8ea5, 0xfd8d, 0x7bf0, 0x5505, 0x614b, 0xa9af, 0x1, 0x0);
        gbc.writeMem(0x8ea5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfd8d);
        EXPECT(gbc.pc(), 0x8ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea5), 0xcb);
        EXPECT(gbc.readMem(0x8ea6), 0x52);
        // CB 52 00AE
        gbc.setState(0xb0d5, 0xc489, 0xa300, 0x29b3, 0x75e1, 0xc1ef, 0x0, 0x1);
        gbc.writeMem(0xb0d5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc489);
        EXPECT(gbc.pc(), 0xb0d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d5), 0xcb);
        EXPECT(gbc.readMem(0xb0d6), 0x52);
        // CB 52 00AF
        gbc.setState(0x4d7a, 0x4287, 0x85c0, 0x9f47, 0x3488, 0x3809, 0x0, 0x0);
        gbc.writeMem(0x4d7a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4287);
        EXPECT(gbc.pc(), 0x4d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00B0
        gbc.setState(0xc5d9, 0x1efe, 0x3250, 0x8fc, 0xe8ab, 0x1291, 0x1, 0x1);
        gbc.writeMem(0xc5d9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1efe);
        EXPECT(gbc.pc(), 0xc5db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d9), 0xcb);
        EXPECT(gbc.readMem(0xc5da), 0x52);
        // CB 52 00B2
        gbc.setState(0x2f5f, 0x638b, 0xa080, 0x53ee, 0x8e27, 0x91ef, 0x0, 0x1);
        gbc.writeMem(0x2f5f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x638b);
        EXPECT(gbc.pc(), 0x2f61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00B3
        gbc.setState(0x3cd4, 0x4bb9, 0xf600, 0xe91d, 0x92a8, 0x7853, 0x0, 0x0);
        gbc.writeMem(0x3cd4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4bb9);
        EXPECT(gbc.pc(), 0x3cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00B4
        gbc.setState(0x6961, 0x1d2, 0x9a40, 0x7623, 0x5cb4, 0xaf86, 0x1, 0x1);
        gbc.writeMem(0x6961, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1d2);
        EXPECT(gbc.pc(), 0x6963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00B5
        gbc.setState(0x3baf, 0x4869, 0xc7d0, 0xfb8c, 0x19a3, 0xabc6, 0x0, 0x1);
        gbc.writeMem(0x3baf, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4869);
        EXPECT(gbc.pc(), 0x3bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00B6
        gbc.setState(0x9dfe, 0xb1f, 0x5480, 0xddee, 0x553f, 0xbf04, 0x0, 0x0);
        gbc.writeMem(0x9dfe, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb1f);
        EXPECT(gbc.pc(), 0x9e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfe), 0xcb);
        EXPECT(gbc.readMem(0x9dff), 0x52);
        // CB 52 00B7
        gbc.setState(0x8ce, 0x7be2, 0xc2a0, 0xe398, 0x1b9f, 0xd0ec, 0x0, 0x0);
        gbc.writeMem(0x8ce, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7be2);
        EXPECT(gbc.pc(), 0x8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00B8
        gbc.setState(0xc497, 0x9651, 0x37b0, 0x724e, 0xf1fe, 0xa331, 0x0, 0x1);
        gbc.writeMem(0xc497, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9651);
        EXPECT(gbc.pc(), 0xc499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc497), 0xcb);
        EXPECT(gbc.readMem(0xc498), 0x52);
        // CB 52 00B9
        gbc.setState(0xa728, 0xc7f3, 0xd590, 0x7f1c, 0x6b7f, 0x55fa, 0x1, 0x1);
        gbc.writeMem(0xa728, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc7f3);
        EXPECT(gbc.pc(), 0xa72a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa728), 0xcb);
        EXPECT(gbc.readMem(0xa729), 0x52);
        // CB 52 00BA
        gbc.setState(0x929b, 0x329f, 0xd610, 0x1372, 0xfd10, 0x42dc, 0x1, 0x1);
        gbc.writeMem(0x929b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x329f);
        EXPECT(gbc.pc(), 0x929d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x929b), 0xcb);
        EXPECT(gbc.readMem(0x929c), 0x52);
        // CB 52 00BB
        gbc.setState(0x14e3, 0x61a6, 0x200, 0x588b, 0x9337, 0xf398, 0x0, 0x0);
        gbc.writeMem(0x14e3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x61a6);
        EXPECT(gbc.pc(), 0x14e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00BC
        gbc.setState(0x1abd, 0xf181, 0xb3e0, 0xcde6, 0x3541, 0x2ffb, 0x1, 0x1);
        gbc.writeMem(0x1abd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf181);
        EXPECT(gbc.pc(), 0x1abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00BD
        gbc.setState(0x7156, 0xf4db, 0xa3a0, 0x6e4, 0x539e, 0xdd55, 0x1, 0x0);
        gbc.writeMem(0x7156, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf4db);
        EXPECT(gbc.pc(), 0x7158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00BE
        gbc.setState(0xe30e, 0x6d1a, 0xc560, 0xd21, 0x495b, 0xe198, 0x1, 0x0);
        gbc.writeMem(0xe30e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6d1a);
        EXPECT(gbc.pc(), 0xe310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe30e), 0xcb);
        EXPECT(gbc.readMem(0xe30f), 0x52);
        // CB 52 00BF
        gbc.setState(0x2981, 0x3113, 0x7530, 0x278a, 0xd428, 0x6d6c, 0x1, 0x0);
        gbc.writeMem(0x2981, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3113);
        EXPECT(gbc.pc(), 0x2983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00C0
        gbc.setState(0xedf1, 0xcbfe, 0x7a80, 0x9fd8, 0x710b, 0x220e, 0x1, 0x1);
        gbc.writeMem(0xedf1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xcbfe);
        EXPECT(gbc.pc(), 0xedf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf1), 0xcb);
        EXPECT(gbc.readMem(0xedf2), 0x52);
        // CB 52 00C1
        gbc.setState(0xc1d9, 0x36ce, 0x3380, 0x602e, 0x1b07, 0x2359, 0x1, 0x0);
        gbc.writeMem(0xc1d9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x36ce);
        EXPECT(gbc.pc(), 0xc1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d9), 0xcb);
        EXPECT(gbc.readMem(0xc1da), 0x52);
        // CB 52 00C2
        gbc.setState(0x4598, 0x9ac8, 0x8f30, 0x7646, 0x9ece, 0x172e, 0x0, 0x0);
        gbc.writeMem(0x4598, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9ac8);
        EXPECT(gbc.pc(), 0x459a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00C3
        gbc.setState(0x9a70, 0x3a7c, 0xfe80, 0x2f78, 0x7d1b, 0x2aa5, 0x0, 0x1);
        gbc.writeMem(0x9a70, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3a7c);
        EXPECT(gbc.pc(), 0x9a72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a70), 0xcb);
        EXPECT(gbc.readMem(0x9a71), 0x52);
        // CB 52 00C4
        gbc.setState(0x6e05, 0x57f6, 0x3b20, 0x2d10, 0x57b9, 0xc351, 0x0, 0x0);
        gbc.writeMem(0x6e05, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x57f6);
        EXPECT(gbc.pc(), 0x6e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00C5
        gbc.setState(0x8a50, 0x2a26, 0xc7b0, 0xe845, 0xf97c, 0x7bad, 0x1, 0x1);
        gbc.writeMem(0x8a50, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2a26);
        EXPECT(gbc.pc(), 0x8a52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a50), 0xcb);
        EXPECT(gbc.readMem(0x8a51), 0x52);
        // CB 52 00C6
        gbc.setState(0x8d72, 0xee0b, 0x94a0, 0xaceb, 0xe19, 0xc5f, 0x1, 0x0);
        gbc.writeMem(0x8d72, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xee0b);
        EXPECT(gbc.pc(), 0x8d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d72), 0xcb);
        EXPECT(gbc.readMem(0x8d73), 0x52);
        // CB 52 00C7
        gbc.setState(0x247f, 0x495c, 0x2210, 0x5768, 0x5c97, 0x5d99, 0x1, 0x1);
        gbc.writeMem(0x247f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x495c);
        EXPECT(gbc.pc(), 0x2481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00C8
        gbc.setState(0xe2bb, 0x89ee, 0x3eb0, 0x7b31, 0x6050, 0x39c6, 0x0, 0x0);
        gbc.writeMem(0xe2bb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x89ee);
        EXPECT(gbc.pc(), 0xe2bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2bb), 0xcb);
        EXPECT(gbc.readMem(0xe2bc), 0x52);
        // CB 52 00C9
        gbc.setState(0xddec, 0xf1fb, 0x21a0, 0x623e, 0xdc27, 0x496a, 0x1, 0x0);
        gbc.writeMem(0xddec, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf1fb);
        EXPECT(gbc.pc(), 0xddee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddec), 0xcb);
        EXPECT(gbc.readMem(0xdded), 0x52);
        // CB 52 00CA
        gbc.setState(0x6a7a, 0x37f0, 0x8200, 0xcf3f, 0x2639, 0x53c9, 0x0, 0x0);
        gbc.writeMem(0x6a7a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x37f0);
        EXPECT(gbc.pc(), 0x6a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00CB
        gbc.setState(0x5b91, 0xb1b2, 0x4f00, 0xefff, 0x1081, 0x1519, 0x1, 0x0);
        gbc.writeMem(0x5b91, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb1b2);
        EXPECT(gbc.pc(), 0x5b93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00CD
        gbc.setState(0x9c13, 0x1ddf, 0x98b0, 0x33ad, 0xbb82, 0xf4de, 0x0, 0x0);
        gbc.writeMem(0x9c13, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1ddf);
        EXPECT(gbc.pc(), 0x9c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c13), 0xcb);
        EXPECT(gbc.readMem(0x9c14), 0x52);
        // CB 52 00CF
        gbc.setState(0x92d5, 0x1e12, 0x3a30, 0x37be, 0x8d46, 0x9162, 0x0, 0x0);
        gbc.writeMem(0x92d5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1e12);
        EXPECT(gbc.pc(), 0x92d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d5), 0xcb);
        EXPECT(gbc.readMem(0x92d6), 0x52);
        // CB 52 00D0
        gbc.setState(0xc0a5, 0xfcc1, 0x4f90, 0xc275, 0xf5b, 0xd981, 0x0, 0x1);
        gbc.writeMem(0xc0a5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfcc1);
        EXPECT(gbc.pc(), 0xc0a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a5), 0xcb);
        EXPECT(gbc.readMem(0xc0a6), 0x52);
        // CB 52 00D1
        gbc.setState(0x8532, 0x394b, 0x3bf0, 0x8d04, 0xd3a6, 0x335a, 0x0, 0x1);
        gbc.writeMem(0x8532, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x394b);
        EXPECT(gbc.pc(), 0x8534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8532), 0xcb);
        EXPECT(gbc.readMem(0x8533), 0x52);
        // CB 52 00D2
        gbc.setState(0x4a6d, 0x83ab, 0xca0, 0x6f5e, 0x5605, 0x7e03, 0x1, 0x1);
        gbc.writeMem(0x4a6d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x83ab);
        EXPECT(gbc.pc(), 0x4a6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00D3
        gbc.setState(0xbcb0, 0x18bc, 0xeb50, 0xea85, 0x9fe3, 0x2701, 0x0, 0x1);
        gbc.writeMem(0xbcb0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x18bc);
        EXPECT(gbc.pc(), 0xbcb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb0), 0xcb);
        EXPECT(gbc.readMem(0xbcb1), 0x52);
        // CB 52 00D4
        gbc.setState(0xbe09, 0x23e2, 0x20e0, 0x3771, 0x1a17, 0xa252, 0x1, 0x1);
        gbc.writeMem(0xbe09, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x23e2);
        EXPECT(gbc.pc(), 0xbe0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe09), 0xcb);
        EXPECT(gbc.readMem(0xbe0a), 0x52);
        // CB 52 00D5
        gbc.setState(0x2df7, 0xfa78, 0xe10, 0x85cd, 0xfcbb, 0x936d, 0x0, 0x0);
        gbc.writeMem(0x2df7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfa78);
        EXPECT(gbc.pc(), 0x2df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00D6
        gbc.setState(0x1aa7, 0x7d86, 0xa440, 0xf4f, 0x3fc6, 0xc940, 0x1, 0x1);
        gbc.writeMem(0x1aa7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7d86);
        EXPECT(gbc.pc(), 0x1aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00D7
        gbc.setState(0x61fc, 0x685d, 0xd390, 0xbdbd, 0x68e8, 0x444b, 0x1, 0x1);
        gbc.writeMem(0x61fc, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x685d);
        EXPECT(gbc.pc(), 0x61fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00D8
        gbc.setState(0xa4d6, 0x432f, 0xf9f0, 0x1db8, 0x44e, 0xac38, 0x0, 0x0);
        gbc.writeMem(0xa4d6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x432f);
        EXPECT(gbc.pc(), 0xa4d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d6), 0xcb);
        EXPECT(gbc.readMem(0xa4d7), 0x52);
        // CB 52 00D9
        gbc.setState(0x4a43, 0x9779, 0x52e0, 0x28eb, 0xc6e, 0x8e4a, 0x0, 0x0);
        gbc.writeMem(0x4a43, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9779);
        EXPECT(gbc.pc(), 0x4a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00DA
        gbc.setState(0xe49b, 0xee52, 0xe980, 0xb451, 0xc2ee, 0x7135, 0x1, 0x0);
        gbc.writeMem(0xe49b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xee52);
        EXPECT(gbc.pc(), 0xe49d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe49b), 0xcb);
        EXPECT(gbc.readMem(0xe49c), 0x52);
        // CB 52 00DB
        gbc.setState(0x64a4, 0x8613, 0x8b50, 0x73fa, 0xf7a2, 0xdf7d, 0x0, 0x0);
        gbc.writeMem(0x64a4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8613);
        EXPECT(gbc.pc(), 0x64a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00DC
        gbc.setState(0xd57b, 0x255d, 0xb2d0, 0x331b, 0x30d4, 0xfb58, 0x0, 0x1);
        gbc.writeMem(0xd57b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x255d);
        EXPECT(gbc.pc(), 0xd57d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd57b), 0xcb);
        EXPECT(gbc.readMem(0xd57c), 0x52);
        // CB 52 00DD
        gbc.setState(0x960d, 0xd8c, 0x5810, 0x178a, 0xa8a2, 0x82cd, 0x0, 0x1);
        gbc.writeMem(0x960d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd8c);
        EXPECT(gbc.pc(), 0x960f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x960d), 0xcb);
        EXPECT(gbc.readMem(0x960e), 0x52);
        // CB 52 00DE
        gbc.setState(0xc050, 0xe68, 0xd1b0, 0x32bd, 0xa10c, 0x1998, 0x1, 0x1);
        gbc.writeMem(0xc050, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe68);
        EXPECT(gbc.pc(), 0xc052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc050), 0xcb);
        EXPECT(gbc.readMem(0xc051), 0x52);
        // CB 52 00DF
        gbc.setState(0x1297, 0xd197, 0x78a0, 0x8fe8, 0xf9a8, 0xa84e, 0x1, 0x0);
        gbc.writeMem(0x1297, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd197);
        EXPECT(gbc.pc(), 0x1299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00E0
        gbc.setState(0x4b56, 0xcb7a, 0x2ff0, 0xd104, 0x7cc0, 0x52d6, 0x1, 0x1);
        gbc.writeMem(0x4b56, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xcb7a);
        EXPECT(gbc.pc(), 0x4b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00E1
        gbc.setState(0xe85d, 0x577, 0x6550, 0x2ad1, 0x486b, 0x5ef9, 0x0, 0x1);
        gbc.writeMem(0xe85d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x577);
        EXPECT(gbc.pc(), 0xe85f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe85d), 0xcb);
        EXPECT(gbc.readMem(0xe85e), 0x52);
        // CB 52 00E2
        gbc.setState(0x7414, 0x74c0, 0xd910, 0xa8da, 0x8b5c, 0xeb79, 0x0, 0x0);
        gbc.writeMem(0x7414, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x74c0);
        EXPECT(gbc.pc(), 0x7416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00E3
        gbc.setState(0x101f, 0x77c6, 0x4e0, 0x4028, 0x2f00, 0xda32, 0x0, 0x1);
        gbc.writeMem(0x101f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x77c6);
        EXPECT(gbc.pc(), 0x1021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00E4
        gbc.setState(0xc09d, 0x31bf, 0x4fd0, 0x2cba, 0x491c, 0x4cfa, 0x1, 0x0);
        gbc.writeMem(0xc09d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x31bf);
        EXPECT(gbc.pc(), 0xc09f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc09d), 0xcb);
        EXPECT(gbc.readMem(0xc09e), 0x52);
        // CB 52 00E5
        gbc.setState(0x9918, 0x8e0e, 0xe330, 0xd8dd, 0x882e, 0x8f8c, 0x0, 0x1);
        gbc.writeMem(0x9918, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8e0e);
        EXPECT(gbc.pc(), 0x991a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9918), 0xcb);
        EXPECT(gbc.readMem(0x9919), 0x52);
        // CB 52 00E6
        gbc.setState(0xb0a5, 0x34b8, 0x980, 0xed4, 0x168, 0x3a18, 0x0, 0x1);
        gbc.writeMem(0xb0a5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x34b8);
        EXPECT(gbc.pc(), 0xb0a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a5), 0xcb);
        EXPECT(gbc.readMem(0xb0a6), 0x52);
        // CB 52 00E7
        gbc.setState(0x9303, 0xed0d, 0x8ce0, 0xf183, 0xb6e9, 0xeab8, 0x1, 0x1);
        gbc.writeMem(0x9303, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xed0d);
        EXPECT(gbc.pc(), 0x9305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9303), 0xcb);
        EXPECT(gbc.readMem(0x9304), 0x52);
        // CB 52 00E8
        gbc.setState(0x44fa, 0x747b, 0xe360, 0x336e, 0x5b98, 0xb174, 0x0, 0x0);
        gbc.writeMem(0x44fa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x747b);
        EXPECT(gbc.pc(), 0x44fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00E9
        gbc.setState(0xbd96, 0xca32, 0x8d40, 0x3ce, 0xc350, 0xe65f, 0x0, 0x0);
        gbc.writeMem(0xbd96, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xca32);
        EXPECT(gbc.pc(), 0xbd98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd96), 0xcb);
        EXPECT(gbc.readMem(0xbd97), 0x52);
        // CB 52 00EA
        gbc.setState(0x4be2, 0x963f, 0x4790, 0xd86e, 0xb034, 0x10e7, 0x0, 0x1);
        gbc.writeMem(0x4be2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x963f);
        EXPECT(gbc.pc(), 0x4be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00EB
        gbc.setState(0x1770, 0x64cd, 0xf310, 0xb9ff, 0xd3fd, 0x40c2, 0x0, 0x1);
        gbc.writeMem(0x1770, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x64cd);
        EXPECT(gbc.pc(), 0x1772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00EC
        gbc.setState(0xe139, 0xff03, 0xdbd0, 0xa36a, 0x249a, 0xfde7, 0x1, 0x1);
        gbc.writeMem(0xe139, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xff03);
        EXPECT(gbc.pc(), 0xe13b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe139), 0xcb);
        EXPECT(gbc.readMem(0xe13a), 0x52);
        // CB 52 00ED
        gbc.setState(0xaac5, 0x2b4a, 0xbea0, 0x1d89, 0x14e5, 0xf35b, 0x0, 0x0);
        gbc.writeMem(0xaac5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2b4a);
        EXPECT(gbc.pc(), 0xaac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac5), 0xcb);
        EXPECT(gbc.readMem(0xaac6), 0x52);
        // CB 52 00EE
        gbc.setState(0x1bd, 0x7529, 0x77f0, 0x8d69, 0x6f8, 0xab0, 0x0, 0x1);
        gbc.writeMem(0x1bd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7529);
        EXPECT(gbc.pc(), 0x1bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00EF
        gbc.setState(0x5128, 0x5a73, 0xba40, 0x1ff2, 0x4977, 0x75bb, 0x1, 0x1);
        gbc.writeMem(0x5128, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5a73);
        EXPECT(gbc.pc(), 0x512a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00F0
        gbc.setState(0x7c9b, 0x3de5, 0x5520, 0x7029, 0xee0a, 0xe917, 0x1, 0x1);
        gbc.writeMem(0x7c9b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3de5);
        EXPECT(gbc.pc(), 0x7c9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00F1
        gbc.setState(0xd4c2, 0x51ef, 0xb380, 0xb616, 0xd048, 0xfed8, 0x0, 0x0);
        gbc.writeMem(0xd4c2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x51ef);
        EXPECT(gbc.pc(), 0xd4c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c2), 0xcb);
        EXPECT(gbc.readMem(0xd4c3), 0x52);
        // CB 52 00F2
        gbc.setState(0x6896, 0x5417, 0x9210, 0xbfcd, 0x8c7, 0x8368, 0x1, 0x0);
        gbc.writeMem(0x6896, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5417);
        EXPECT(gbc.pc(), 0x6898);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00F4
        gbc.setState(0x6044, 0x5d0c, 0x44f0, 0x6cdc, 0x1a0d, 0xadc6, 0x0, 0x0);
        gbc.writeMem(0x6044, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5d0c);
        EXPECT(gbc.pc(), 0x6046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00F5
        gbc.setState(0x4f0f, 0x633, 0x9ad0, 0xb609, 0xa29a, 0x97cf, 0x0, 0x1);
        gbc.writeMem(0x4f0f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x633);
        EXPECT(gbc.pc(), 0x4f11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00F6
        gbc.setState(0xc337, 0x4361, 0x4660, 0xe168, 0x99a4, 0xeebc, 0x0, 0x1);
        gbc.writeMem(0xc337, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4361);
        EXPECT(gbc.pc(), 0xc339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc337), 0xcb);
        EXPECT(gbc.readMem(0xc338), 0x52);
        // CB 52 00F7
        gbc.setState(0x4bd2, 0x3ae4, 0x57b0, 0xb7af, 0x6869, 0x5e2f, 0x1, 0x1);
        gbc.writeMem(0x4bd2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3ae4);
        EXPECT(gbc.pc(), 0x4bd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00F8
        gbc.setState(0x83d1, 0x1896, 0x5f40, 0x1727, 0x6415, 0xb9a5, 0x0, 0x0);
        gbc.writeMem(0x83d1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1896);
        EXPECT(gbc.pc(), 0x83d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83d1), 0xcb);
        EXPECT(gbc.readMem(0x83d2), 0x52);
        // CB 52 00F9
        gbc.setState(0xb8ee, 0xf3d4, 0x1550, 0xb02b, 0x7d8a, 0x3153, 0x1, 0x1);
        gbc.writeMem(0xb8ee, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf3d4);
        EXPECT(gbc.pc(), 0xb8f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ee), 0xcb);
        EXPECT(gbc.readMem(0xb8ef), 0x52);
        // CB 52 00FA
        gbc.setState(0x97de, 0x9951, 0x31c0, 0xdf4f, 0xc10, 0xc17c, 0x0, 0x0);
        gbc.writeMem(0x97de, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9951);
        EXPECT(gbc.pc(), 0x97e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97de), 0xcb);
        EXPECT(gbc.readMem(0x97df), 0x52);
        // CB 52 00FB
        gbc.setState(0xe314, 0xd7d7, 0x69b0, 0xa42d, 0x61ab, 0xc4fa, 0x1, 0x0);
        gbc.writeMem(0xe314, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd7d7);
        EXPECT(gbc.pc(), 0xe316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe314), 0xcb);
        EXPECT(gbc.readMem(0xe315), 0x52);
        // CB 52 00FC
        gbc.setState(0x7a1a, 0xb30d, 0xf4e0, 0x2e8b, 0x524, 0x1f99, 0x1, 0x0);
        gbc.writeMem(0x7a1a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb30d);
        EXPECT(gbc.pc(), 0x7a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 00FD
        gbc.setState(0x4306, 0x5ef9, 0xded0, 0xabcc, 0xee86, 0xd52e, 0x0, 0x0);
        gbc.writeMem(0x4306, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5ef9);
        EXPECT(gbc.pc(), 0x4308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00FE
        gbc.setState(0x3a25, 0xc4f6, 0x9350, 0x8c21, 0xcafc, 0x6c54, 0x1, 0x0);
        gbc.writeMem(0x3a25, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc4f6);
        EXPECT(gbc.pc(), 0x3a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 00FF
        gbc.setState(0xbd7f, 0x1bb, 0x1e20, 0xa0c3, 0xc15e, 0xb87c, 0x1, 0x0);
        gbc.writeMem(0xbd7f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1bb);
        EXPECT(gbc.pc(), 0xbd81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7f), 0xcb);
        EXPECT(gbc.readMem(0xbd80), 0x52);
        // CB 52 0100
        gbc.setState(0x1078, 0xc483, 0xda60, 0x43ce, 0xa01d, 0x5183, 0x0, 0x1);
        gbc.writeMem(0x1078, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc483);
        EXPECT(gbc.pc(), 0x107a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0101
        gbc.setState(0xddb8, 0xd9f, 0x52f0, 0x2a0a, 0x30bd, 0xc70a, 0x0, 0x1);
        gbc.writeMem(0xddb8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd9f);
        EXPECT(gbc.pc(), 0xddba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddb8), 0xcb);
        EXPECT(gbc.readMem(0xddb9), 0x52);
        // CB 52 0102
        gbc.setState(0x230f, 0x1dd4, 0x6bb0, 0xef4f, 0x6eff, 0xbe05, 0x0, 0x0);
        gbc.writeMem(0x230f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1dd4);
        EXPECT(gbc.pc(), 0x2311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0103
        gbc.setState(0x87d9, 0x80de, 0xaac0, 0x600c, 0x3297, 0xeb0e, 0x1, 0x0);
        gbc.writeMem(0x87d9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x80de);
        EXPECT(gbc.pc(), 0x87db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87d9), 0xcb);
        EXPECT(gbc.readMem(0x87da), 0x52);
        // CB 52 0104
        gbc.setState(0x3e9c, 0xd4cb, 0xbfa0, 0xf1f6, 0xeb60, 0xe09f, 0x0, 0x1);
        gbc.writeMem(0x3e9c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd4cb);
        EXPECT(gbc.pc(), 0x3e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0105
        gbc.setState(0x643e, 0x328b, 0x4040, 0xbe8f, 0x7883, 0x3460, 0x1, 0x1);
        gbc.writeMem(0x643e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x328b);
        EXPECT(gbc.pc(), 0x6440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0106
        gbc.setState(0xd976, 0x1cc5, 0x33f0, 0xa51b, 0x79c0, 0xee9, 0x0, 0x1);
        gbc.writeMem(0xd976, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1cc5);
        EXPECT(gbc.pc(), 0xd978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd976), 0xcb);
        EXPECT(gbc.readMem(0xd977), 0x52);
        // CB 52 0108
        gbc.setState(0xdc15, 0x4e48, 0x5280, 0x7cfd, 0xda85, 0xc6df, 0x1, 0x0);
        gbc.writeMem(0xdc15, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4e48);
        EXPECT(gbc.pc(), 0xdc17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc15), 0xcb);
        EXPECT(gbc.readMem(0xdc16), 0x52);
        // CB 52 0109
        gbc.setState(0x771f, 0xc688, 0x4b70, 0xc66, 0x4d3c, 0x5e8f, 0x0, 0x0);
        gbc.writeMem(0x771f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc688);
        EXPECT(gbc.pc(), 0x7721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 010A
        gbc.setState(0xf4f, 0xaf7, 0x7d20, 0x6042, 0xad4e, 0x931e, 0x0, 0x1);
        gbc.writeMem(0xf4f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xaf7);
        EXPECT(gbc.pc(), 0xf51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 010B
        gbc.setState(0x1250, 0x3923, 0x4330, 0xbfbb, 0x143e, 0xf269, 0x0, 0x1);
        gbc.writeMem(0x1250, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3923);
        EXPECT(gbc.pc(), 0x1252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 010C
        gbc.setState(0xeb50, 0x31e2, 0x4260, 0xb657, 0x51d6, 0x5b79, 0x0, 0x0);
        gbc.writeMem(0xeb50, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x31e2);
        EXPECT(gbc.pc(), 0xeb52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb50), 0xcb);
        EXPECT(gbc.readMem(0xeb51), 0x52);
        // CB 52 010D
        gbc.setState(0x5c71, 0x2f16, 0x8b0, 0x6ac4, 0x8a1a, 0xf8d1, 0x1, 0x0);
        gbc.writeMem(0x5c71, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2f16);
        EXPECT(gbc.pc(), 0x5c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 010E
        gbc.setState(0xca30, 0x8b12, 0x8530, 0x54a1, 0x4004, 0x760c, 0x1, 0x1);
        gbc.writeMem(0xca30, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8b12);
        EXPECT(gbc.pc(), 0xca32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca30), 0xcb);
        EXPECT(gbc.readMem(0xca31), 0x52);
        // CB 52 010F
        gbc.setState(0x8a57, 0x1592, 0x8120, 0x707a, 0x37c, 0x77dc, 0x0, 0x1);
        gbc.writeMem(0x8a57, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1592);
        EXPECT(gbc.pc(), 0x8a59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a57), 0xcb);
        EXPECT(gbc.readMem(0x8a58), 0x52);
        // CB 52 0110
        gbc.setState(0xe7fd, 0x8c47, 0xd0, 0x8813, 0x77a3, 0x6e18, 0x0, 0x1);
        gbc.writeMem(0xe7fd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8c47);
        EXPECT(gbc.pc(), 0xe7ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7fd), 0xcb);
        EXPECT(gbc.readMem(0xe7fe), 0x52);
        // CB 52 0111
        gbc.setState(0x3508, 0xd478, 0xf4c0, 0x1ed6, 0x28db, 0x5c6, 0x1, 0x1);
        gbc.writeMem(0x3508, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd478);
        EXPECT(gbc.pc(), 0x350a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0112
        gbc.setState(0xeded, 0x4f6c, 0xe550, 0xfbf8, 0x4674, 0xc20b, 0x0, 0x1);
        gbc.writeMem(0xeded, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4f6c);
        EXPECT(gbc.pc(), 0xedef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeded), 0xcb);
        EXPECT(gbc.readMem(0xedee), 0x52);
        // CB 52 0113
        gbc.setState(0x7946, 0x982a, 0x3c80, 0x7501, 0x2c80, 0xf428, 0x0, 0x0);
        gbc.writeMem(0x7946, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x982a);
        EXPECT(gbc.pc(), 0x7948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0114
        gbc.setState(0x77f6, 0xaace, 0x7a40, 0x5676, 0xb06a, 0x76c, 0x1, 0x0);
        gbc.writeMem(0x77f6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xaace);
        EXPECT(gbc.pc(), 0x77f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0115
        gbc.setState(0x980d, 0x6f75, 0x6180, 0x26f2, 0x414f, 0xf19c, 0x0, 0x0);
        gbc.writeMem(0x980d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6f75);
        EXPECT(gbc.pc(), 0x980f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x980d), 0xcb);
        EXPECT(gbc.readMem(0x980e), 0x52);
        // CB 52 0116
        gbc.setState(0x716f, 0x3680, 0xdf10, 0x7e81, 0x97a7, 0x8246, 0x1, 0x1);
        gbc.writeMem(0x716f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3680);
        EXPECT(gbc.pc(), 0x7171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0117
        gbc.setState(0x832, 0x7161, 0x8f00, 0xf42d, 0x7831, 0xfe86, 0x1, 0x0);
        gbc.writeMem(0x832, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7161);
        EXPECT(gbc.pc(), 0x834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0118
        gbc.setState(0xbb2, 0xa6b4, 0x1a30, 0xe7ef, 0x54bf, 0x5dcb, 0x0, 0x1);
        gbc.writeMem(0xbb2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa6b4);
        EXPECT(gbc.pc(), 0xbb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0119
        gbc.setState(0x4565, 0xeb3c, 0xd8a0, 0x2895, 0xa10d, 0xa25a, 0x1, 0x0);
        gbc.writeMem(0x4565, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xeb3c);
        EXPECT(gbc.pc(), 0x4567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 011A
        gbc.setState(0x522e, 0x864a, 0xdf50, 0x2e23, 0x5e73, 0x9fed, 0x1, 0x0);
        gbc.writeMem(0x522e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x864a);
        EXPECT(gbc.pc(), 0x5230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 011B
        gbc.setState(0x8b80, 0x232d, 0xf800, 0xece0, 0xbf43, 0xb520, 0x0, 0x1);
        gbc.writeMem(0x8b80, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x232d);
        EXPECT(gbc.pc(), 0x8b82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b80), 0xcb);
        EXPECT(gbc.readMem(0x8b81), 0x52);
        // CB 52 011C
        gbc.setState(0x388e, 0x74ad, 0x1f80, 0x541, 0xa06e, 0xf0a6, 0x1, 0x0);
        gbc.writeMem(0x388e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x74ad);
        EXPECT(gbc.pc(), 0x3890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 011D
        gbc.setState(0xbe8d, 0x56b2, 0x2630, 0xfa51, 0xba54, 0x832f, 0x0, 0x0);
        gbc.writeMem(0xbe8d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x56b2);
        EXPECT(gbc.pc(), 0xbe8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe8d), 0xcb);
        EXPECT(gbc.readMem(0xbe8e), 0x52);
        // CB 52 011E
        gbc.setState(0x435c, 0x89b3, 0x5390, 0x5db0, 0x1e2f, 0xcafd, 0x1, 0x1);
        gbc.writeMem(0x435c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x89b3);
        EXPECT(gbc.pc(), 0x435e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0121
        gbc.setState(0x2845, 0xf32d, 0x22b0, 0x3954, 0xa83c, 0x6894, 0x0, 0x0);
        gbc.writeMem(0x2845, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf32d);
        EXPECT(gbc.pc(), 0x2847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0122
        gbc.setState(0xed59, 0xea44, 0x9320, 0x9c4f, 0xe6c3, 0x3824, 0x0, 0x1);
        gbc.writeMem(0xed59, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xea44);
        EXPECT(gbc.pc(), 0xed5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed59), 0xcb);
        EXPECT(gbc.readMem(0xed5a), 0x52);
        // CB 52 0123
        gbc.setState(0x7d4, 0xb5a8, 0xb850, 0x1fb7, 0xcbe5, 0xbefa, 0x1, 0x0);
        gbc.writeMem(0x7d4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb5a8);
        EXPECT(gbc.pc(), 0x7d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0124
        gbc.setState(0x4005, 0xc719, 0x8530, 0x92d6, 0x2a7b, 0xe0dd, 0x1, 0x1);
        gbc.writeMem(0x4005, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc719);
        EXPECT(gbc.pc(), 0x4007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0125
        gbc.setState(0x550, 0x38db, 0x8bc0, 0x2d18, 0x967e, 0x7337, 0x1, 0x0);
        gbc.writeMem(0x550, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x38db);
        EXPECT(gbc.pc(), 0x552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0126
        gbc.setState(0x15a9, 0x5598, 0x39e0, 0x62d1, 0x557c, 0x6682, 0x1, 0x1);
        gbc.writeMem(0x15a9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5598);
        EXPECT(gbc.pc(), 0x15ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0127
        gbc.setState(0x7d29, 0x4a42, 0x80d0, 0x5fa, 0xdd5a, 0xac2e, 0x1, 0x1);
        gbc.writeMem(0x7d29, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4a42);
        EXPECT(gbc.pc(), 0x7d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0128
        gbc.setState(0xbf9b, 0x4bdb, 0x3450, 0xae81, 0xc579, 0x7c72, 0x0, 0x0);
        gbc.writeMem(0xbf9b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4bdb);
        EXPECT(gbc.pc(), 0xbf9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf9b), 0xcb);
        EXPECT(gbc.readMem(0xbf9c), 0x52);
        // CB 52 012A
        gbc.setState(0x43f0, 0xf982, 0x7e50, 0x2cba, 0xc671, 0x6781, 0x1, 0x1);
        gbc.writeMem(0x43f0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf982);
        EXPECT(gbc.pc(), 0x43f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 012B
        gbc.setState(0xa243, 0xa395, 0x7e60, 0x7c9b, 0x35a4, 0x39c6, 0x0, 0x0);
        gbc.writeMem(0xa243, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa395);
        EXPECT(gbc.pc(), 0xa245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa243), 0xcb);
        EXPECT(gbc.readMem(0xa244), 0x52);
        // CB 52 012C
        gbc.setState(0x6b26, 0xf1e0, 0x1a30, 0x9ed1, 0xc34a, 0x8ba7, 0x0, 0x0);
        gbc.writeMem(0x6b26, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf1e0);
        EXPECT(gbc.pc(), 0x6b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 012D
        gbc.setState(0x7c7d, 0x69f3, 0xffc0, 0xc369, 0x35d3, 0x381b, 0x1, 0x0);
        gbc.writeMem(0x7c7d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x69f3);
        EXPECT(gbc.pc(), 0x7c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 012E
        gbc.setState(0xd464, 0x68f5, 0x8a60, 0x96fb, 0x69b7, 0x77a6, 0x1, 0x1);
        gbc.writeMem(0xd464, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x68f5);
        EXPECT(gbc.pc(), 0xd466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd464), 0xcb);
        EXPECT(gbc.readMem(0xd465), 0x52);
        // CB 52 012F
        gbc.setState(0x230f, 0xb179, 0xd7a0, 0xb066, 0x836f, 0xc5f6, 0x0, 0x1);
        gbc.writeMem(0x230f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb179);
        EXPECT(gbc.pc(), 0x2311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0130
        gbc.setState(0x78f8, 0xbded, 0xd0b0, 0xcca0, 0x90cb, 0x167, 0x0, 0x1);
        gbc.writeMem(0x78f8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbded);
        EXPECT(gbc.pc(), 0x78fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0131
        gbc.setState(0x2577, 0xf3f8, 0xd2a0, 0xe22f, 0xdb79, 0xe95e, 0x1, 0x0);
        gbc.writeMem(0x2577, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf3f8);
        EXPECT(gbc.pc(), 0x2579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0132
        gbc.setState(0x781, 0x89d7, 0xb7c0, 0x9518, 0x110c, 0xa61, 0x1, 0x1);
        gbc.writeMem(0x781, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x89d7);
        EXPECT(gbc.pc(), 0x783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0133
        gbc.setState(0x64f3, 0x67cb, 0x2200, 0xbfb3, 0x2c87, 0xe394, 0x1, 0x0);
        gbc.writeMem(0x64f3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x67cb);
        EXPECT(gbc.pc(), 0x64f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0134
        gbc.setState(0x75b2, 0x596f, 0x5d0, 0xb4a5, 0x4f43, 0xf5c3, 0x0, 0x1);
        gbc.writeMem(0x75b2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x596f);
        EXPECT(gbc.pc(), 0x75b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0135
        gbc.setState(0x61db, 0xf5c7, 0x5b50, 0x7446, 0x55ed, 0xf6b0, 0x1, 0x1);
        gbc.writeMem(0x61db, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf5c7);
        EXPECT(gbc.pc(), 0x61dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0137
        gbc.setState(0x287b, 0x69ca, 0x50c0, 0x2789, 0x85fd, 0x981f, 0x1, 0x1);
        gbc.writeMem(0x287b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x69ca);
        EXPECT(gbc.pc(), 0x287d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0138
        gbc.setState(0xad84, 0x3473, 0x20a0, 0x39b2, 0x77f9, 0x785f, 0x0, 0x0);
        gbc.writeMem(0xad84, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3473);
        EXPECT(gbc.pc(), 0xad86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad84), 0xcb);
        EXPECT(gbc.readMem(0xad85), 0x52);
        // CB 52 0139
        gbc.setState(0xb102, 0x747b, 0xad00, 0x1da1, 0xe804, 0xfb8e, 0x1, 0x1);
        gbc.writeMem(0xb102, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x747b);
        EXPECT(gbc.pc(), 0xb104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb102), 0xcb);
        EXPECT(gbc.readMem(0xb103), 0x52);
        // CB 52 013A
        gbc.setState(0x6dab, 0xdfc0, 0x5210, 0x2f49, 0x5234, 0x7fb6, 0x0, 0x0);
        gbc.writeMem(0x6dab, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdfc0);
        EXPECT(gbc.pc(), 0x6dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 013B
        gbc.setState(0xc22c, 0xdfe9, 0x4930, 0x2855, 0xaf69, 0xea8f, 0x0, 0x0);
        gbc.writeMem(0xc22c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xdfe9);
        EXPECT(gbc.pc(), 0xc22e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc22c), 0xcb);
        EXPECT(gbc.readMem(0xc22d), 0x52);
        // CB 52 013C
        gbc.setState(0xa00c, 0x260c, 0x2e70, 0x45f0, 0xa829, 0xbb21, 0x1, 0x1);
        gbc.writeMem(0xa00c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x260c);
        EXPECT(gbc.pc(), 0xa00e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa00c), 0xcb);
        EXPECT(gbc.readMem(0xa00d), 0x52);
        // CB 52 013D
        gbc.setState(0xb253, 0x6a33, 0x47c0, 0x6c80, 0x91a4, 0x16fc, 0x0, 0x1);
        gbc.writeMem(0xb253, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6a33);
        EXPECT(gbc.pc(), 0xb255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb253), 0xcb);
        EXPECT(gbc.readMem(0xb254), 0x52);
        // CB 52 013E
        gbc.setState(0x785c, 0x4ce8, 0xfba0, 0xa3de, 0x7865, 0xe14f, 0x1, 0x1);
        gbc.writeMem(0x785c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4ce8);
        EXPECT(gbc.pc(), 0x785e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 013F
        gbc.setState(0xeee4, 0xd1d8, 0xb9e0, 0x64ec, 0x8717, 0xd0cb, 0x1, 0x0);
        gbc.writeMem(0xeee4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd1d8);
        EXPECT(gbc.pc(), 0xeee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeee4), 0xcb);
        EXPECT(gbc.readMem(0xeee5), 0x52);
        // CB 52 0140
        gbc.setState(0xce0b, 0x45d4, 0x9c70, 0xded4, 0x4abf, 0x8b7c, 0x0, 0x1);
        gbc.writeMem(0xce0b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x45d4);
        EXPECT(gbc.pc(), 0xce0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce0b), 0xcb);
        EXPECT(gbc.readMem(0xce0c), 0x52);
        // CB 52 0141
        gbc.setState(0xa7cb, 0xa10b, 0xc770, 0xf0d5, 0x6bd0, 0x74e1, 0x0, 0x1);
        gbc.writeMem(0xa7cb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa10b);
        EXPECT(gbc.pc(), 0xa7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7cb), 0xcb);
        EXPECT(gbc.readMem(0xa7cc), 0x52);
        // CB 52 0142
        gbc.setState(0x764f, 0x9d4a, 0x8fe0, 0xe1d, 0x1f4f, 0x591d, 0x1, 0x1);
        gbc.writeMem(0x764f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9d4a);
        EXPECT(gbc.pc(), 0x7651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0143
        gbc.setState(0xc247, 0x8127, 0xbbf0, 0xb3d9, 0x8450, 0x6199, 0x0, 0x1);
        gbc.writeMem(0xc247, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8127);
        EXPECT(gbc.pc(), 0xc249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc247), 0xcb);
        EXPECT(gbc.readMem(0xc248), 0x52);
        // CB 52 0144
        gbc.setState(0x760a, 0x1ff6, 0xed90, 0x139a, 0xbf8b, 0xd510, 0x0, 0x1);
        gbc.writeMem(0x760a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1ff6);
        EXPECT(gbc.pc(), 0x760c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0145
        gbc.setState(0x15bc, 0x6d9f, 0x19c0, 0x9c04, 0x84cc, 0xf998, 0x1, 0x1);
        gbc.writeMem(0x15bc, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6d9f);
        EXPECT(gbc.pc(), 0x15be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0146
        gbc.setState(0x35d4, 0xd8f, 0xf6c0, 0xd50d, 0xec66, 0x791f, 0x0, 0x0);
        gbc.writeMem(0x35d4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd8f);
        EXPECT(gbc.pc(), 0x35d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0147
        gbc.setState(0x6b55, 0x6222, 0xd8c0, 0x283b, 0x7dcc, 0xdbb5, 0x0, 0x1);
        gbc.writeMem(0x6b55, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6222);
        EXPECT(gbc.pc(), 0x6b57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0148
        gbc.setState(0xbaa7, 0xc545, 0xa0, 0xdf75, 0xb977, 0xc84, 0x1, 0x0);
        gbc.writeMem(0xbaa7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc545);
        EXPECT(gbc.pc(), 0xbaa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa7), 0xcb);
        EXPECT(gbc.readMem(0xbaa8), 0x52);
        // CB 52 0149
        gbc.setState(0x301d, 0x5ca, 0xa00, 0x2db7, 0xfece, 0xadf1, 0x0, 0x0);
        gbc.writeMem(0x301d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5ca);
        EXPECT(gbc.pc(), 0x301f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 014A
        gbc.setState(0x5b30, 0xd1e2, 0xb740, 0x2049, 0xe684, 0x32f7, 0x0, 0x1);
        gbc.writeMem(0x5b30, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd1e2);
        EXPECT(gbc.pc(), 0x5b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 014B
        gbc.setState(0x8925, 0xfb3e, 0x3620, 0xf56b, 0xb643, 0xf079, 0x0, 0x1);
        gbc.writeMem(0x8925, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfb3e);
        EXPECT(gbc.pc(), 0x8927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8925), 0xcb);
        EXPECT(gbc.readMem(0x8926), 0x52);
        // CB 52 014C
        gbc.setState(0x6ba4, 0xf280, 0x93c0, 0xca7c, 0x429b, 0xd172, 0x0, 0x0);
        gbc.writeMem(0x6ba4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf280);
        EXPECT(gbc.pc(), 0x6ba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 014E
        gbc.setState(0x81f7, 0xc691, 0xa160, 0xe56b, 0x2de3, 0x3af7, 0x0, 0x1);
        gbc.writeMem(0x81f7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc691);
        EXPECT(gbc.pc(), 0x81f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f7), 0xcb);
        EXPECT(gbc.readMem(0x81f8), 0x52);
        // CB 52 014F
        gbc.setState(0x97df, 0x910e, 0xb8f0, 0xb0f, 0x7ef, 0x8d46, 0x0, 0x0);
        gbc.writeMem(0x97df, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x910e);
        EXPECT(gbc.pc(), 0x97e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97df), 0xcb);
        EXPECT(gbc.readMem(0x97e0), 0x52);
        // CB 52 0150
        gbc.setState(0xd740, 0x570d, 0xefd0, 0xb34c, 0x9655, 0xcf6b, 0x1, 0x1);
        gbc.writeMem(0xd740, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x570d);
        EXPECT(gbc.pc(), 0xd742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd740), 0xcb);
        EXPECT(gbc.readMem(0xd741), 0x52);
        // CB 52 0151
        gbc.setState(0x25c9, 0xd746, 0xef30, 0x467c, 0xc4a2, 0xa3a1, 0x0, 0x0);
        gbc.writeMem(0x25c9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd746);
        EXPECT(gbc.pc(), 0x25cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0153
        gbc.setState(0xcfe2, 0x734c, 0x20f0, 0xb619, 0x43f, 0x519c, 0x0, 0x1);
        gbc.writeMem(0xcfe2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x734c);
        EXPECT(gbc.pc(), 0xcfe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe2), 0xcb);
        EXPECT(gbc.readMem(0xcfe3), 0x52);
        // CB 52 0155
        gbc.setState(0x19c5, 0x6366, 0xebd0, 0xd1b3, 0xe29b, 0x89ef, 0x1, 0x1);
        gbc.writeMem(0x19c5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6366);
        EXPECT(gbc.pc(), 0x19c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0156
        gbc.setState(0x2531, 0xf727, 0x19a0, 0x6eb7, 0xdd6f, 0xb849, 0x1, 0x1);
        gbc.writeMem(0x2531, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf727);
        EXPECT(gbc.pc(), 0x2533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0157
        gbc.setState(0x150, 0xd94, 0xcb90, 0x8f5, 0x193a, 0x2c2e, 0x1, 0x0);
        gbc.writeMem(0x150, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd94);
        EXPECT(gbc.pc(), 0x152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0158
        gbc.setState(0x98cb, 0x81d5, 0x5d70, 0xfe60, 0x8b19, 0x3319, 0x1, 0x1);
        gbc.writeMem(0x98cb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x81d5);
        EXPECT(gbc.pc(), 0x98cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98cb), 0xcb);
        EXPECT(gbc.readMem(0x98cc), 0x52);
        // CB 52 0159
        gbc.setState(0x6f4e, 0x5dc6, 0x1480, 0x3dd9, 0xa469, 0xd263, 0x1, 0x0);
        gbc.writeMem(0x6f4e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5dc6);
        EXPECT(gbc.pc(), 0x6f50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 015A
        gbc.setState(0xa259, 0xea53, 0x90d0, 0x6e37, 0xfd4e, 0x1f98, 0x0, 0x0);
        gbc.writeMem(0xa259, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xea53);
        EXPECT(gbc.pc(), 0xa25b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa259), 0xcb);
        EXPECT(gbc.readMem(0xa25a), 0x52);
        // CB 52 015B
        gbc.setState(0x75b, 0xec33, 0x3880, 0x8560, 0xb8be, 0x3ed, 0x1, 0x1);
        gbc.writeMem(0x75b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xec33);
        EXPECT(gbc.pc(), 0x75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 015C
        gbc.setState(0xca32, 0x1298, 0xc460, 0x2579, 0xee29, 0xd112, 0x1, 0x1);
        gbc.writeMem(0xca32, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1298);
        EXPECT(gbc.pc(), 0xca34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca32), 0xcb);
        EXPECT(gbc.readMem(0xca33), 0x52);
        // CB 52 015E
        gbc.setState(0x5f69, 0x1432, 0xeaa0, 0x5a10, 0x2bad, 0x8118, 0x0, 0x1);
        gbc.writeMem(0x5f69, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1432);
        EXPECT(gbc.pc(), 0x5f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0160
        gbc.setState(0xa375, 0x1001, 0x21c0, 0xc3cf, 0x7d95, 0x725a, 0x0, 0x0);
        gbc.writeMem(0xa375, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1001);
        EXPECT(gbc.pc(), 0xa377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa375), 0xcb);
        EXPECT(gbc.readMem(0xa376), 0x52);
        // CB 52 0161
        gbc.setState(0xa509, 0x3ad2, 0x71e0, 0x8c9a, 0xd677, 0x799, 0x0, 0x1);
        gbc.writeMem(0xa509, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3ad2);
        EXPECT(gbc.pc(), 0xa50b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa509), 0xcb);
        EXPECT(gbc.readMem(0xa50a), 0x52);
        // CB 52 0162
        gbc.setState(0x98aa, 0x2f33, 0x69c0, 0xd9c9, 0xbf5, 0x610f, 0x1, 0x1);
        gbc.writeMem(0x98aa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2f33);
        EXPECT(gbc.pc(), 0x98ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98aa), 0xcb);
        EXPECT(gbc.readMem(0x98ab), 0x52);
        // CB 52 0163
        gbc.setState(0x1cc4, 0xdf0f, 0xbe10, 0x2ce7, 0x2791, 0x9030, 0x1, 0x0);
        gbc.writeMem(0x1cc4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdf0f);
        EXPECT(gbc.pc(), 0x1cc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0164
        gbc.setState(0x2c6, 0xce23, 0xe5d0, 0x43ce, 0x60fb, 0xeb33, 0x0, 0x1);
        gbc.writeMem(0x2c6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xce23);
        EXPECT(gbc.pc(), 0x2c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0165
        gbc.setState(0x71ca, 0x85c1, 0x5e50, 0xaff6, 0x63c8, 0x34f6, 0x1, 0x1);
        gbc.writeMem(0x71ca, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x85c1);
        EXPECT(gbc.pc(), 0x71cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0166
        gbc.setState(0xc1d1, 0xca71, 0x5240, 0x8605, 0x3fce, 0x9841, 0x1, 0x0);
        gbc.writeMem(0xc1d1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xca71);
        EXPECT(gbc.pc(), 0xc1d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d1), 0xcb);
        EXPECT(gbc.readMem(0xc1d2), 0x52);
        // CB 52 0167
        gbc.setState(0xb2a3, 0x5821, 0x4970, 0x5319, 0xc1f1, 0x7b0f, 0x1, 0x0);
        gbc.writeMem(0xb2a3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5821);
        EXPECT(gbc.pc(), 0xb2a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2a3), 0xcb);
        EXPECT(gbc.readMem(0xb2a4), 0x52);
        // CB 52 0168
        gbc.setState(0x51df, 0xfa3a, 0x6990, 0xea21, 0x4572, 0x99fa, 0x0, 0x0);
        gbc.writeMem(0x51df, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfa3a);
        EXPECT(gbc.pc(), 0x51e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0169
        gbc.setState(0xdfa0, 0xede6, 0xec90, 0x26f1, 0xdf35, 0x92e3, 0x1, 0x1);
        gbc.writeMem(0xdfa0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xede6);
        EXPECT(gbc.pc(), 0xdfa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfa0), 0xcb);
        EXPECT(gbc.readMem(0xdfa1), 0x52);
        // CB 52 016A
        gbc.setState(0xc217, 0x8879, 0x7420, 0x6b1f, 0x9a3c, 0x61df, 0x1, 0x1);
        gbc.writeMem(0xc217, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8879);
        EXPECT(gbc.pc(), 0xc219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc217), 0xcb);
        EXPECT(gbc.readMem(0xc218), 0x52);
        // CB 52 016B
        gbc.setState(0x94a1, 0x4730, 0xdef0, 0xbf96, 0xb839, 0x9d7f, 0x0, 0x1);
        gbc.writeMem(0x94a1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4730);
        EXPECT(gbc.pc(), 0x94a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94a1), 0xcb);
        EXPECT(gbc.readMem(0x94a2), 0x52);
        // CB 52 016C
        gbc.setState(0x551c, 0x4fe, 0xece0, 0x748, 0x25c0, 0x959d, 0x0, 0x0);
        gbc.writeMem(0x551c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4fe);
        EXPECT(gbc.pc(), 0x551e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 016D
        gbc.setState(0xe9fa, 0x306f, 0x5ee0, 0x4a29, 0x7d5e, 0xfd38, 0x1, 0x0);
        gbc.writeMem(0xe9fa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x306f);
        EXPECT(gbc.pc(), 0xe9fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9fa), 0xcb);
        EXPECT(gbc.readMem(0xe9fb), 0x52);
        // CB 52 016E
        gbc.setState(0xa808, 0xe853, 0xd640, 0xa6c7, 0x6a11, 0xb636, 0x1, 0x1);
        gbc.writeMem(0xa808, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe853);
        EXPECT(gbc.pc(), 0xa80a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa808), 0xcb);
        EXPECT(gbc.readMem(0xa809), 0x52);
        // CB 52 016F
        gbc.setState(0xae54, 0xb59, 0x64b0, 0xdeaa, 0xe670, 0xd5c6, 0x1, 0x0);
        gbc.writeMem(0xae54, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb59);
        EXPECT(gbc.pc(), 0xae56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae54), 0xcb);
        EXPECT(gbc.readMem(0xae55), 0x52);
        // CB 52 0170
        gbc.setState(0xa1f5, 0x3077, 0x3e30, 0x6405, 0x806e, 0x1941, 0x0, 0x0);
        gbc.writeMem(0xa1f5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3077);
        EXPECT(gbc.pc(), 0xa1f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f5), 0xcb);
        EXPECT(gbc.readMem(0xa1f6), 0x52);
        // CB 52 0171
        gbc.setState(0x3536, 0xeb9c, 0xdf30, 0x2e4b, 0x9635, 0x4455, 0x0, 0x0);
        gbc.writeMem(0x3536, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xeb9c);
        EXPECT(gbc.pc(), 0x3538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0172
        gbc.setState(0x6b63, 0xbd89, 0x5360, 0xea82, 0xd549, 0xee48, 0x0, 0x0);
        gbc.writeMem(0x6b63, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbd89);
        EXPECT(gbc.pc(), 0x6b65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0173
        gbc.setState(0xa700, 0xe776, 0x2290, 0x7177, 0xb0e7, 0x6a9f, 0x0, 0x1);
        gbc.writeMem(0xa700, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe776);
        EXPECT(gbc.pc(), 0xa702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa700), 0xcb);
        EXPECT(gbc.readMem(0xa701), 0x52);
        // CB 52 0174
        gbc.setState(0x62aa, 0xe25e, 0xc440, 0xca33, 0x4b0e, 0x911b, 0x0, 0x0);
        gbc.writeMem(0x62aa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe25e);
        EXPECT(gbc.pc(), 0x62ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0175
        gbc.setState(0xa368, 0xec53, 0x7a70, 0xc25, 0x6ad6, 0x4e9f, 0x0, 0x0);
        gbc.writeMem(0xa368, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xec53);
        EXPECT(gbc.pc(), 0xa36a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa368), 0xcb);
        EXPECT(gbc.readMem(0xa369), 0x52);
        // CB 52 0176
        gbc.setState(0xe7d8, 0x82c5, 0xed60, 0xbf8, 0xd1ca, 0xc84, 0x1, 0x0);
        gbc.writeMem(0xe7d8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x82c5);
        EXPECT(gbc.pc(), 0xe7da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d8), 0xcb);
        EXPECT(gbc.readMem(0xe7d9), 0x52);
        // CB 52 0178
        gbc.setState(0x183d, 0xb30b, 0x1780, 0x25a5, 0xaf81, 0xf94e, 0x1, 0x1);
        gbc.writeMem(0x183d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb30b);
        EXPECT(gbc.pc(), 0x183f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0179
        gbc.setState(0x48da, 0xb6cb, 0xefa0, 0x82f0, 0x38f9, 0xd648, 0x1, 0x0);
        gbc.writeMem(0x48da, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb6cb);
        EXPECT(gbc.pc(), 0x48dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 017A
        gbc.setState(0x377b, 0x9757, 0x11c0, 0x1d73, 0xb2f7, 0x405, 0x0, 0x0);
        gbc.writeMem(0x377b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9757);
        EXPECT(gbc.pc(), 0x377d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 017B
        gbc.setState(0x3594, 0xbb10, 0xca20, 0xba3, 0xa056, 0xa2f9, 0x0, 0x0);
        gbc.writeMem(0x3594, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbb10);
        EXPECT(gbc.pc(), 0x3596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 017C
        gbc.setState(0x144c, 0x317f, 0xac0, 0xdd0c, 0x4027, 0x25e7, 0x0, 0x1);
        gbc.writeMem(0x144c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x317f);
        EXPECT(gbc.pc(), 0x144e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 017D
        gbc.setState(0x549c, 0xb968, 0x3620, 0x84c, 0x2c69, 0xec5d, 0x0, 0x1);
        gbc.writeMem(0x549c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb968);
        EXPECT(gbc.pc(), 0x549e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 017E
        gbc.setState(0x7bc, 0x696c, 0x36a0, 0x93ae, 0xc434, 0xdb1c, 0x0, 0x0);
        gbc.writeMem(0x7bc, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x696c);
        EXPECT(gbc.pc(), 0x7be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 017F
        gbc.setState(0x102b, 0x744a, 0x5cd0, 0xf15a, 0x44a7, 0x459e, 0x1, 0x1);
        gbc.writeMem(0x102b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x744a);
        EXPECT(gbc.pc(), 0x102d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0181
        gbc.setState(0x1942, 0x4a6b, 0x7890, 0xd092, 0xae08, 0x6b3b, 0x0, 0x0);
        gbc.writeMem(0x1942, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4a6b);
        EXPECT(gbc.pc(), 0x1944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0182
        gbc.setState(0x5421, 0xe568, 0x15d0, 0xe1e8, 0x968b, 0x3927, 0x1, 0x1);
        gbc.writeMem(0x5421, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe568);
        EXPECT(gbc.pc(), 0x5423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0183
        gbc.setState(0xdc8e, 0x90da, 0xfcc0, 0xd220, 0x7653, 0x1737, 0x0, 0x0);
        gbc.writeMem(0xdc8e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x90da);
        EXPECT(gbc.pc(), 0xdc90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc8e), 0xcb);
        EXPECT(gbc.readMem(0xdc8f), 0x52);
        // CB 52 0184
        gbc.setState(0x2114, 0xa067, 0xf5b0, 0x5272, 0xfb63, 0x9dc, 0x0, 0x1);
        gbc.writeMem(0x2114, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa067);
        EXPECT(gbc.pc(), 0x2116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0185
        gbc.setState(0x3039, 0x6747, 0x8a60, 0x84db, 0x2eed, 0x1e99, 0x0, 0x1);
        gbc.writeMem(0x3039, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6747);
        EXPECT(gbc.pc(), 0x303b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0186
        gbc.setState(0xbab4, 0x494c, 0xe790, 0x726d, 0x1cd8, 0x657, 0x1, 0x1);
        gbc.writeMem(0xbab4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x494c);
        EXPECT(gbc.pc(), 0xbab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab4), 0xcb);
        EXPECT(gbc.readMem(0xbab5), 0x52);
        // CB 52 0187
        gbc.setState(0xa152, 0xa073, 0xc090, 0xf338, 0x25e2, 0x1533, 0x0, 0x1);
        gbc.writeMem(0xa152, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa073);
        EXPECT(gbc.pc(), 0xa154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa152), 0xcb);
        EXPECT(gbc.readMem(0xa153), 0x52);
        // CB 52 0188
        gbc.setState(0x2f80, 0xde94, 0xfea0, 0xaa6e, 0xfb82, 0xd230, 0x1, 0x1);
        gbc.writeMem(0x2f80, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xde94);
        EXPECT(gbc.pc(), 0x2f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0189
        gbc.setState(0x29da, 0x2fa4, 0xbf70, 0x7187, 0x130b, 0xdf78, 0x0, 0x0);
        gbc.writeMem(0x29da, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2fa4);
        EXPECT(gbc.pc(), 0x29dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 018A
        gbc.setState(0x56b7, 0x4023, 0x1060, 0xaa10, 0x9695, 0xec1e, 0x0, 0x0);
        gbc.writeMem(0x56b7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4023);
        EXPECT(gbc.pc(), 0x56b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 018B
        gbc.setState(0x403f, 0xc9d1, 0xb1b0, 0x7327, 0x269, 0x54c2, 0x1, 0x0);
        gbc.writeMem(0x403f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc9d1);
        EXPECT(gbc.pc(), 0x4041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 018D
        gbc.setState(0x82a0, 0xcf7d, 0x6f70, 0x682a, 0x13ea, 0x1f84, 0x0, 0x1);
        gbc.writeMem(0x82a0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xcf7d);
        EXPECT(gbc.pc(), 0x82a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a0), 0xcb);
        EXPECT(gbc.readMem(0x82a1), 0x52);
        // CB 52 018E
        gbc.setState(0xce28, 0xd233, 0x6fb0, 0x500d, 0xeb29, 0x1d37, 0x1, 0x0);
        gbc.writeMem(0xce28, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd233);
        EXPECT(gbc.pc(), 0xce2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce28), 0xcb);
        EXPECT(gbc.readMem(0xce29), 0x52);
        // CB 52 018F
        gbc.setState(0x8bc5, 0xe2d3, 0x5510, 0x8710, 0xa632, 0x2362, 0x0, 0x1);
        gbc.writeMem(0x8bc5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe2d3);
        EXPECT(gbc.pc(), 0x8bc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc5), 0xcb);
        EXPECT(gbc.readMem(0x8bc6), 0x52);
        // CB 52 0190
        gbc.setState(0x72b7, 0xe051, 0xad0, 0x609f, 0x340a, 0xe5c5, 0x0, 0x1);
        gbc.writeMem(0x72b7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe051);
        EXPECT(gbc.pc(), 0x72b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0191
        gbc.setState(0xbc34, 0xaa15, 0xf1f0, 0x70e0, 0x66a5, 0x4fc5, 0x0, 0x1);
        gbc.writeMem(0xbc34, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xaa15);
        EXPECT(gbc.pc(), 0xbc36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc34), 0xcb);
        EXPECT(gbc.readMem(0xbc35), 0x52);
        // CB 52 0192
        gbc.setState(0x5079, 0x382, 0x1cc0, 0x1edb, 0xb9ea, 0x4b9a, 0x1, 0x1);
        gbc.writeMem(0x5079, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x382);
        EXPECT(gbc.pc(), 0x507b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0193
        gbc.setState(0x1a7, 0x39a7, 0xf520, 0x1430, 0x9e2d, 0x1d35, 0x1, 0x1);
        gbc.writeMem(0x1a7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x39a7);
        EXPECT(gbc.pc(), 0x1a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0194
        gbc.setState(0xae43, 0xbe81, 0x2e60, 0x19ff, 0xb61a, 0x3c0b, 0x1, 0x0);
        gbc.writeMem(0xae43, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbe81);
        EXPECT(gbc.pc(), 0xae45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae43), 0xcb);
        EXPECT(gbc.readMem(0xae44), 0x52);
        // CB 52 0195
        gbc.setState(0x63b3, 0x5475, 0x6b40, 0x458f, 0xc4df, 0x4bf9, 0x1, 0x1);
        gbc.writeMem(0x63b3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5475);
        EXPECT(gbc.pc(), 0x63b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0196
        gbc.setState(0x9697, 0x3d22, 0x23f0, 0xf69f, 0xe5d7, 0x3d50, 0x0, 0x1);
        gbc.writeMem(0x9697, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3d22);
        EXPECT(gbc.pc(), 0x9699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9697), 0xcb);
        EXPECT(gbc.readMem(0x9698), 0x52);
        // CB 52 0197
        gbc.setState(0xe9b1, 0xeca5, 0x6730, 0xe729, 0x7ad, 0x6083, 0x1, 0x0);
        gbc.writeMem(0xe9b1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xeca5);
        EXPECT(gbc.pc(), 0xe9b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b1), 0xcb);
        EXPECT(gbc.readMem(0xe9b2), 0x52);
        // CB 52 0199
        gbc.setState(0xc96a, 0x32ad, 0x9650, 0x28c3, 0xa9a4, 0x4a8a, 0x1, 0x0);
        gbc.writeMem(0xc96a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x32ad);
        EXPECT(gbc.pc(), 0xc96c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96a), 0xcb);
        EXPECT(gbc.readMem(0xc96b), 0x52);
        // CB 52 019A
        gbc.setState(0xc838, 0xff23, 0x1120, 0x74fb, 0x78df, 0x209f, 0x1, 0x0);
        gbc.writeMem(0xc838, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xff23);
        EXPECT(gbc.pc(), 0xc83a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc838), 0xcb);
        EXPECT(gbc.readMem(0xc839), 0x52);
        // CB 52 019B
        gbc.setState(0x3460, 0x9d94, 0x81e0, 0xb078, 0x79c8, 0x4e20, 0x1, 0x1);
        gbc.writeMem(0x3460, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9d94);
        EXPECT(gbc.pc(), 0x3462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 019C
        gbc.setState(0x1a3, 0xe15b, 0x2ab0, 0xd4d4, 0xd7f8, 0x262d, 0x1, 0x0);
        gbc.writeMem(0x1a3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe15b);
        EXPECT(gbc.pc(), 0x1a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 019D
        gbc.setState(0x8104, 0xe719, 0x38d0, 0x6c02, 0x696f, 0xd963, 0x0, 0x1);
        gbc.writeMem(0x8104, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe719);
        EXPECT(gbc.pc(), 0x8106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8104), 0xcb);
        EXPECT(gbc.readMem(0x8105), 0x52);
        // CB 52 019E
        gbc.setState(0x7f2d, 0xf3da, 0xe630, 0xe098, 0x1565, 0x568d, 0x1, 0x0);
        gbc.writeMem(0x7f2d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf3da);
        EXPECT(gbc.pc(), 0x7f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 019F
        gbc.setState(0xc385, 0x644, 0x4370, 0xabb3, 0xa41c, 0xfa83, 0x1, 0x0);
        gbc.writeMem(0xc385, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x644);
        EXPECT(gbc.pc(), 0xc387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc385), 0xcb);
        EXPECT(gbc.readMem(0xc386), 0x52);
        // CB 52 01A0
        gbc.setState(0x5aab, 0x5ff6, 0x1590, 0xe31d, 0xeb11, 0xd88, 0x0, 0x1);
        gbc.writeMem(0x5aab, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5ff6);
        EXPECT(gbc.pc(), 0x5aad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01A1
        gbc.setState(0x94fe, 0x64c, 0x3880, 0x31d3, 0x4082, 0x7f02, 0x0, 0x1);
        gbc.writeMem(0x94fe, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x64c);
        EXPECT(gbc.pc(), 0x9500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94fe), 0xcb);
        EXPECT(gbc.readMem(0x94ff), 0x52);
        // CB 52 01A2
        gbc.setState(0xbe12, 0x430d, 0xdd00, 0x9c17, 0x337e, 0xdc7f, 0x1, 0x0);
        gbc.writeMem(0xbe12, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x430d);
        EXPECT(gbc.pc(), 0xbe14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe12), 0xcb);
        EXPECT(gbc.readMem(0xbe13), 0x52);
        // CB 52 01A3
        gbc.setState(0xa9ae, 0xcb9, 0xaf90, 0x1e2, 0xb18e, 0x3996, 0x1, 0x1);
        gbc.writeMem(0xa9ae, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xcb9);
        EXPECT(gbc.pc(), 0xa9b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ae), 0xcb);
        EXPECT(gbc.readMem(0xa9af), 0x52);
        // CB 52 01A4
        gbc.setState(0x4562, 0xf28c, 0xe530, 0xdc8f, 0x9689, 0x4b0, 0x1, 0x0);
        gbc.writeMem(0x4562, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf28c);
        EXPECT(gbc.pc(), 0x4564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01A5
        gbc.setState(0xe027, 0x56e9, 0xebf0, 0x7c56, 0x48c0, 0xfdab, 0x1, 0x0);
        gbc.writeMem(0xe027, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x56e9);
        EXPECT(gbc.pc(), 0xe029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe027), 0xcb);
        EXPECT(gbc.readMem(0xe028), 0x52);
        // CB 52 01A6
        gbc.setState(0xad5e, 0x27aa, 0x1e0, 0x1f1f, 0xfc1f, 0xc38e, 0x1, 0x1);
        gbc.writeMem(0xad5e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x27aa);
        EXPECT(gbc.pc(), 0xad60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad5e), 0xcb);
        EXPECT(gbc.readMem(0xad5f), 0x52);
        // CB 52 01A7
        gbc.setState(0xacd2, 0x94db, 0xca90, 0xefb1, 0x7ea0, 0xea2b, 0x0, 0x0);
        gbc.writeMem(0xacd2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x94db);
        EXPECT(gbc.pc(), 0xacd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacd2), 0xcb);
        EXPECT(gbc.readMem(0xacd3), 0x52);
        // CB 52 01A8
        gbc.setState(0x88f6, 0x6c69, 0xee80, 0x480c, 0x1358, 0x8a19, 0x0, 0x1);
        gbc.writeMem(0x88f6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6c69);
        EXPECT(gbc.pc(), 0x88f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f6), 0xcb);
        EXPECT(gbc.readMem(0x88f7), 0x52);
        // CB 52 01A9
        gbc.setState(0x61d8, 0x8313, 0xb6d0, 0xc0e4, 0xa9e, 0xdf96, 0x0, 0x1);
        gbc.writeMem(0x61d8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8313);
        EXPECT(gbc.pc(), 0x61da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01AA
        gbc.setState(0x59c3, 0x37a7, 0xdb70, 0xee01, 0x3ab3, 0x36d, 0x1, 0x1);
        gbc.writeMem(0x59c3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x37a7);
        EXPECT(gbc.pc(), 0x59c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01AB
        gbc.setState(0xbd5d, 0xadfe, 0x9e70, 0x72c8, 0xc9c2, 0xe045, 0x0, 0x0);
        gbc.writeMem(0xbd5d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xadfe);
        EXPECT(gbc.pc(), 0xbd5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5d), 0xcb);
        EXPECT(gbc.readMem(0xbd5e), 0x52);
        // CB 52 01AC
        gbc.setState(0x72c4, 0x5f0f, 0x3470, 0x34cb, 0x601a, 0x7810, 0x0, 0x1);
        gbc.writeMem(0x72c4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5f0f);
        EXPECT(gbc.pc(), 0x72c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01AD
        gbc.setState(0x67f, 0x9c4b, 0x90a0, 0x56ba, 0xe5b7, 0x3258, 0x1, 0x0);
        gbc.writeMem(0x67f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9c4b);
        EXPECT(gbc.pc(), 0x681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01AE
        gbc.setState(0x615b, 0x6367, 0xc830, 0x2e20, 0x21ec, 0xac3f, 0x0, 0x1);
        gbc.writeMem(0x615b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6367);
        EXPECT(gbc.pc(), 0x615d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01AF
        gbc.setState(0x6faa, 0x72f3, 0xa250, 0x3e4d, 0x40ef, 0x7345, 0x0, 0x0);
        gbc.writeMem(0x6faa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x72f3);
        EXPECT(gbc.pc(), 0x6fac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01B0
        gbc.setState(0xd122, 0x776e, 0xd970, 0x7029, 0x83d6, 0x7f4c, 0x0, 0x1);
        gbc.writeMem(0xd122, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x776e);
        EXPECT(gbc.pc(), 0xd124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd122), 0xcb);
        EXPECT(gbc.readMem(0xd123), 0x52);
        // CB 52 01B1
        gbc.setState(0xa071, 0x94f8, 0xd690, 0x6eef, 0x66b8, 0x45c8, 0x0, 0x0);
        gbc.writeMem(0xa071, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x94f8);
        EXPECT(gbc.pc(), 0xa073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa071), 0xcb);
        EXPECT(gbc.readMem(0xa072), 0x52);
        // CB 52 01B3
        gbc.setState(0x386a, 0x5319, 0x8a40, 0xeb4a, 0x6470, 0xe47c, 0x1, 0x1);
        gbc.writeMem(0x386a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5319);
        EXPECT(gbc.pc(), 0x386c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01B4
        gbc.setState(0x5ab7, 0xf6ca, 0x8910, 0xbf26, 0x95ff, 0x6c72, 0x1, 0x1);
        gbc.writeMem(0x5ab7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf6ca);
        EXPECT(gbc.pc(), 0x5ab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01B5
        gbc.setState(0x76ae, 0x5a13, 0xaa60, 0xdda7, 0xfa0c, 0x8231, 0x1, 0x0);
        gbc.writeMem(0x76ae, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5a13);
        EXPECT(gbc.pc(), 0x76b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01B6
        gbc.setState(0xde05, 0x64cb, 0x68d0, 0x730f, 0x99df, 0xc9b2, 0x0, 0x0);
        gbc.writeMem(0xde05, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x64cb);
        EXPECT(gbc.pc(), 0xde07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde05), 0xcb);
        EXPECT(gbc.readMem(0xde06), 0x52);
        // CB 52 01B7
        gbc.setState(0x139b, 0xb24b, 0xc60, 0x3fc2, 0xab43, 0x8cb2, 0x1, 0x0);
        gbc.writeMem(0x139b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb24b);
        EXPECT(gbc.pc(), 0x139d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01B8
        gbc.setState(0xea9, 0xe583, 0x9b50, 0x2d9a, 0x3e8b, 0x8652, 0x1, 0x0);
        gbc.writeMem(0xea9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe583);
        EXPECT(gbc.pc(), 0xeab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01B9
        gbc.setState(0x95ce, 0x74ba, 0x8dd0, 0x3e5, 0xcbde, 0x4187, 0x0, 0x1);
        gbc.writeMem(0x95ce, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x74ba);
        EXPECT(gbc.pc(), 0x95d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ce), 0xcb);
        EXPECT(gbc.readMem(0x95cf), 0x52);
        // CB 52 01BB
        gbc.setState(0x4d53, 0x301d, 0xbaa0, 0x3839, 0x652d, 0xfdf7, 0x1, 0x1);
        gbc.writeMem(0x4d53, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x301d);
        EXPECT(gbc.pc(), 0x4d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01BC
        gbc.setState(0xabe5, 0xeeb3, 0x2610, 0x9125, 0x9c3c, 0xb8e0, 0x1, 0x1);
        gbc.writeMem(0xabe5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xeeb3);
        EXPECT(gbc.pc(), 0xabe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabe5), 0xcb);
        EXPECT(gbc.readMem(0xabe6), 0x52);
        // CB 52 01BD
        gbc.setState(0xd9a0, 0xfba7, 0xfea0, 0xdaa4, 0x2fce, 0xda17, 0x0, 0x0);
        gbc.writeMem(0xd9a0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xfba7);
        EXPECT(gbc.pc(), 0xd9a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a0), 0xcb);
        EXPECT(gbc.readMem(0xd9a1), 0x52);
        // CB 52 01BE
        gbc.setState(0x583d, 0x85d5, 0x4bc0, 0x3016, 0xac06, 0x1e13, 0x1, 0x0);
        gbc.writeMem(0x583d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x85d5);
        EXPECT(gbc.pc(), 0x583f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01BF
        gbc.setState(0xa85b, 0x3baf, 0xdbd0, 0x5012, 0x258a, 0xf1ea, 0x0, 0x0);
        gbc.writeMem(0xa85b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3baf);
        EXPECT(gbc.pc(), 0xa85d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa85b), 0xcb);
        EXPECT(gbc.readMem(0xa85c), 0x52);
        // CB 52 01C0
        gbc.setState(0x37e9, 0x99b7, 0x1430, 0xbdf7, 0xb810, 0x6651, 0x1, 0x0);
        gbc.writeMem(0x37e9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x99b7);
        EXPECT(gbc.pc(), 0x37eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01C1
        gbc.setState(0xd32c, 0xb8a1, 0x80, 0x55b, 0xab75, 0x8ab5, 0x1, 0x1);
        gbc.writeMem(0xd32c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb8a1);
        EXPECT(gbc.pc(), 0xd32e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd32c), 0xcb);
        EXPECT(gbc.readMem(0xd32d), 0x52);
        // CB 52 01C2
        gbc.setState(0x4b2, 0x67e6, 0x27a0, 0x5e97, 0x3950, 0xb2d5, 0x0, 0x1);
        gbc.writeMem(0x4b2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x67e6);
        EXPECT(gbc.pc(), 0x4b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01C3
        gbc.setState(0xc913, 0x28aa, 0x1370, 0xcdd7, 0x3a2a, 0x7542, 0x0, 0x1);
        gbc.writeMem(0xc913, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x28aa);
        EXPECT(gbc.pc(), 0xc915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc913), 0xcb);
        EXPECT(gbc.readMem(0xc914), 0x52);
        // CB 52 01C4
        gbc.setState(0xc00c, 0xda41, 0xcde0, 0x97ac, 0xd43d, 0x1412, 0x1, 0x1);
        gbc.writeMem(0xc00c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xda41);
        EXPECT(gbc.pc(), 0xc00e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc00c), 0xcb);
        EXPECT(gbc.readMem(0xc00d), 0x52);
        // CB 52 01C5
        gbc.setState(0x90e5, 0x1950, 0x6460, 0x1ebb, 0xc866, 0xf19b, 0x0, 0x0);
        gbc.writeMem(0x90e5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1950);
        EXPECT(gbc.pc(), 0x90e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e5), 0xcb);
        EXPECT(gbc.readMem(0x90e6), 0x52);
        // CB 52 01C6
        gbc.setState(0x1f99, 0x8c69, 0x7c10, 0xc3c5, 0x331d, 0x3922, 0x1, 0x0);
        gbc.writeMem(0x1f99, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8c69);
        EXPECT(gbc.pc(), 0x1f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01C7
        gbc.setState(0x99, 0x964f, 0x6250, 0x7f6d, 0x8494, 0x9534, 0x1, 0x1);
        gbc.writeMem(0x99, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x964f);
        EXPECT(gbc.pc(), 0x9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01C8
        gbc.setState(0x195, 0x8ac, 0x4060, 0xaa4d, 0xe140, 0xa595, 0x1, 0x1);
        gbc.writeMem(0x195, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8ac);
        EXPECT(gbc.pc(), 0x197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01C9
        gbc.setState(0x800f, 0xf09e, 0x4bb0, 0xe4ca, 0x4fc, 0xa907, 0x1, 0x0);
        gbc.writeMem(0x800f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf09e);
        EXPECT(gbc.pc(), 0x8011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x800f), 0xcb);
        EXPECT(gbc.readMem(0x8010), 0x52);
        // CB 52 01CA
        gbc.setState(0xdc21, 0xa00b, 0x52a0, 0x9681, 0x1873, 0xa24, 0x0, 0x0);
        gbc.writeMem(0xdc21, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa00b);
        EXPECT(gbc.pc(), 0xdc23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc21), 0xcb);
        EXPECT(gbc.readMem(0xdc22), 0x52);
        // CB 52 01CB
        gbc.setState(0x604d, 0x513c, 0x7820, 0x66a6, 0x9f7e, 0x6051, 0x1, 0x0);
        gbc.writeMem(0x604d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x513c);
        EXPECT(gbc.pc(), 0x604f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01CC
        gbc.setState(0x8b31, 0xcbad, 0x6b10, 0x13c, 0x6f5a, 0xcd66, 0x1, 0x0);
        gbc.writeMem(0x8b31, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcbad);
        EXPECT(gbc.pc(), 0x8b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b31), 0xcb);
        EXPECT(gbc.readMem(0x8b32), 0x52);
        // CB 52 01CD
        gbc.setState(0xf58, 0x26a0, 0xdf40, 0x4618, 0x1d0e, 0xde2e, 0x1, 0x1);
        gbc.writeMem(0xf58, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x26a0);
        EXPECT(gbc.pc(), 0xf5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01CE
        gbc.setState(0x5eba, 0xb7a9, 0x6390, 0x3bf7, 0x5cd9, 0xf460, 0x0, 0x1);
        gbc.writeMem(0x5eba, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb7a9);
        EXPECT(gbc.pc(), 0x5ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01CF
        gbc.setState(0xede8, 0x5845, 0xe7c0, 0x3145, 0x1f73, 0x727a, 0x0, 0x1);
        gbc.writeMem(0xede8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5845);
        EXPECT(gbc.pc(), 0xedea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede8), 0xcb);
        EXPECT(gbc.readMem(0xede9), 0x52);
        // CB 52 01D0
        gbc.setState(0xe588, 0x2c64, 0x2b00, 0x1a77, 0x25ba, 0xf515, 0x1, 0x0);
        gbc.writeMem(0xe588, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2c64);
        EXPECT(gbc.pc(), 0xe58a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe588), 0xcb);
        EXPECT(gbc.readMem(0xe589), 0x52);
        // CB 52 01D1
        gbc.setState(0x2af0, 0xf247, 0xcee0, 0xc075, 0x54aa, 0x3e29, 0x1, 0x0);
        gbc.writeMem(0x2af0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf247);
        EXPECT(gbc.pc(), 0x2af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01D2
        gbc.setState(0x2c9f, 0x8891, 0x7050, 0xe735, 0xde2e, 0xfb48, 0x1, 0x1);
        gbc.writeMem(0x2c9f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8891);
        EXPECT(gbc.pc(), 0x2ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01D3
        gbc.setState(0x54d3, 0x2eb3, 0x1300, 0xbe6c, 0xc865, 0x345f, 0x1, 0x0);
        gbc.writeMem(0x54d3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2eb3);
        EXPECT(gbc.pc(), 0x54d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01D4
        gbc.setState(0x2dac, 0x130d, 0x7530, 0xa851, 0x76f8, 0x8dd2, 0x0, 0x1);
        gbc.writeMem(0x2dac, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x130d);
        EXPECT(gbc.pc(), 0x2dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01D5
        gbc.setState(0xa2bb, 0xd880, 0x4e20, 0xe3e, 0x8e66, 0xbfcc, 0x1, 0x1);
        gbc.writeMem(0xa2bb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd880);
        EXPECT(gbc.pc(), 0xa2bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2bb), 0xcb);
        EXPECT(gbc.readMem(0xa2bc), 0x52);
        // CB 52 01D6
        gbc.setState(0x50e4, 0x20ef, 0xaf20, 0x4311, 0xd1da, 0x67bb, 0x1, 0x1);
        gbc.writeMem(0x50e4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x20ef);
        EXPECT(gbc.pc(), 0x50e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01D7
        gbc.setState(0x37d5, 0x6cf, 0xf320, 0x3387, 0xcba0, 0xaf02, 0x0, 0x1);
        gbc.writeMem(0x37d5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6cf);
        EXPECT(gbc.pc(), 0x37d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01D8
        gbc.setState(0x2f04, 0x11e8, 0x2700, 0x8255, 0xa9a, 0x6e7a, 0x1, 0x1);
        gbc.writeMem(0x2f04, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x11e8);
        EXPECT(gbc.pc(), 0x2f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01D9
        gbc.setState(0xe192, 0xb1ca, 0xb8b0, 0x1425, 0x353, 0x5246, 0x1, 0x0);
        gbc.writeMem(0xe192, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb1ca);
        EXPECT(gbc.pc(), 0xe194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe192), 0xcb);
        EXPECT(gbc.readMem(0xe193), 0x52);
        // CB 52 01DA
        gbc.setState(0x7fd, 0xc51, 0x7780, 0x46d9, 0x8c68, 0x7d64, 0x1, 0x1);
        gbc.writeMem(0x7fd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc51);
        EXPECT(gbc.pc(), 0x7ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01DC
        gbc.setState(0x1350, 0x230f, 0xe740, 0x9aa3, 0x5826, 0xde07, 0x1, 0x0);
        gbc.writeMem(0x1350, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x230f);
        EXPECT(gbc.pc(), 0x1352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01DD
        gbc.setState(0x7efe, 0xf38d, 0x6500, 0x4402, 0x1094, 0x3a34, 0x1, 0x1);
        gbc.writeMem(0x7efe, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf38d);
        EXPECT(gbc.pc(), 0x7f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01DE
        gbc.setState(0xe6b6, 0xab9d, 0xef0, 0x13cb, 0xe7c8, 0x79f1, 0x0, 0x0);
        gbc.writeMem(0xe6b6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xab9d);
        EXPECT(gbc.pc(), 0xe6b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6b6), 0xcb);
        EXPECT(gbc.readMem(0xe6b7), 0x52);
        // CB 52 01DF
        gbc.setState(0x6102, 0xc164, 0xd450, 0x347, 0xd223, 0xf6d7, 0x1, 0x0);
        gbc.writeMem(0x6102, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc164);
        EXPECT(gbc.pc(), 0x6104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01E0
        gbc.setState(0xd7da, 0x4487, 0xf1b0, 0x802f, 0x303b, 0x2f3e, 0x0, 0x1);
        gbc.writeMem(0xd7da, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4487);
        EXPECT(gbc.pc(), 0xd7dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7da), 0xcb);
        EXPECT(gbc.readMem(0xd7db), 0x52);
        // CB 52 01E1
        gbc.setState(0x7af3, 0xe0a2, 0x9760, 0x9030, 0x70d3, 0x289, 0x0, 0x0);
        gbc.writeMem(0x7af3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe0a2);
        EXPECT(gbc.pc(), 0x7af5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01E3
        gbc.setState(0x2eec, 0xdc68, 0x3730, 0xcd0f, 0x2348, 0x15b8, 0x0, 0x0);
        gbc.writeMem(0x2eec, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xdc68);
        EXPECT(gbc.pc(), 0x2eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01E4
        gbc.setState(0xc08d, 0x7464, 0x3050, 0x1b31, 0xebab, 0x1d0d, 0x0, 0x1);
        gbc.writeMem(0xc08d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7464);
        EXPECT(gbc.pc(), 0xc08f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc08d), 0xcb);
        EXPECT(gbc.readMem(0xc08e), 0x52);
        // CB 52 01E5
        gbc.setState(0xcdff, 0x1ca, 0xe8f0, 0xbbe0, 0x434b, 0x243, 0x1, 0x0);
        gbc.writeMem(0xcdff, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1ca);
        EXPECT(gbc.pc(), 0xce01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdff), 0xcb);
        EXPECT(gbc.readMem(0xce00), 0x52);
        // CB 52 01E6
        gbc.setState(0xa9d1, 0x5c5d, 0xb810, 0xf143, 0x416b, 0x49cf, 0x1, 0x1);
        gbc.writeMem(0xa9d1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5c5d);
        EXPECT(gbc.pc(), 0xa9d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d1), 0xcb);
        EXPECT(gbc.readMem(0xa9d2), 0x52);
        // CB 52 01E7
        gbc.setState(0xafd1, 0x8084, 0x9e30, 0x41b8, 0x62f3, 0xf315, 0x0, 0x1);
        gbc.writeMem(0xafd1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8084);
        EXPECT(gbc.pc(), 0xafd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd1), 0xcb);
        EXPECT(gbc.readMem(0xafd2), 0x52);
        // CB 52 01E8
        gbc.setState(0x512, 0xd6d1, 0xc320, 0x12a9, 0xd431, 0x6b88, 0x1, 0x1);
        gbc.writeMem(0x512, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd6d1);
        EXPECT(gbc.pc(), 0x514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01E9
        gbc.setState(0xc9b6, 0xb59d, 0x7200, 0x1b84, 0x6e88, 0x53f8, 0x0, 0x0);
        gbc.writeMem(0xc9b6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb59d);
        EXPECT(gbc.pc(), 0xc9b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b6), 0xcb);
        EXPECT(gbc.readMem(0xc9b7), 0x52);
        // CB 52 01EA
        gbc.setState(0x68f9, 0xbda0, 0x67d0, 0xd65, 0xa592, 0x21dc, 0x1, 0x0);
        gbc.writeMem(0x68f9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbda0);
        EXPECT(gbc.pc(), 0x68fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01EB
        gbc.setState(0x4fdd, 0x9378, 0x91a0, 0x96cb, 0x139b, 0x1e91, 0x1, 0x0);
        gbc.writeMem(0x4fdd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9378);
        EXPECT(gbc.pc(), 0x4fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01EC
        gbc.setState(0xee3f, 0xa0fa, 0xd640, 0x8690, 0xf10c, 0xe70f, 0x0, 0x0);
        gbc.writeMem(0xee3f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa0fa);
        EXPECT(gbc.pc(), 0xee41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee3f), 0xcb);
        EXPECT(gbc.readMem(0xee40), 0x52);
        // CB 52 01ED
        gbc.setState(0x20ac, 0xbd09, 0x26b0, 0x4b78, 0x991b, 0x271e, 0x0, 0x0);
        gbc.writeMem(0x20ac, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xbd09);
        EXPECT(gbc.pc(), 0x20ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01EE
        gbc.setState(0xd463, 0xa29a, 0x210, 0xb4f0, 0xb770, 0x7a8, 0x0, 0x1);
        gbc.writeMem(0xd463, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa29a);
        EXPECT(gbc.pc(), 0xd465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd463), 0xcb);
        EXPECT(gbc.readMem(0xd464), 0x52);
        // CB 52 01EF
        gbc.setState(0x848a, 0xb7a4, 0x3820, 0x2780, 0xad9e, 0xc190, 0x1, 0x1);
        gbc.writeMem(0x848a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb7a4);
        EXPECT(gbc.pc(), 0x848c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x848a), 0xcb);
        EXPECT(gbc.readMem(0x848b), 0x52);
        // CB 52 01F0
        gbc.setState(0xd4b3, 0x897e, 0xd2a0, 0xc214, 0xdcab, 0x2909, 0x1, 0x1);
        gbc.writeMem(0xd4b3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x897e);
        EXPECT(gbc.pc(), 0xd4b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b3), 0xcb);
        EXPECT(gbc.readMem(0xd4b4), 0x52);
        // CB 52 01F1
        gbc.setState(0x93b4, 0xfe0e, 0x4370, 0x9318, 0x9f76, 0xe251, 0x0, 0x0);
        gbc.writeMem(0x93b4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xfe0e);
        EXPECT(gbc.pc(), 0x93b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93b4), 0xcb);
        EXPECT(gbc.readMem(0x93b5), 0x52);
        // CB 52 01F2
        gbc.setState(0x64a, 0xb3b0, 0xf050, 0xbb17, 0x86ab, 0x88c5, 0x0, 0x0);
        gbc.writeMem(0x64a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb3b0);
        EXPECT(gbc.pc(), 0x64c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01F3
        gbc.setState(0xa6d3, 0x702, 0xe120, 0xfb86, 0xc767, 0x7355, 0x0, 0x0);
        gbc.writeMem(0xa6d3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x702);
        EXPECT(gbc.pc(), 0xa6d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d3), 0xcb);
        EXPECT(gbc.readMem(0xa6d4), 0x52);
        // CB 52 01F4
        gbc.setState(0x865a, 0xa7a0, 0x6610, 0x2bf3, 0x92ea, 0xcb84, 0x0, 0x1);
        gbc.writeMem(0x865a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa7a0);
        EXPECT(gbc.pc(), 0x865c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x865a), 0xcb);
        EXPECT(gbc.readMem(0x865b), 0x52);
        // CB 52 01F5
        gbc.setState(0x9e5a, 0x29d7, 0xc5d0, 0xd75, 0x1ae2, 0x58a3, 0x1, 0x1);
        gbc.writeMem(0x9e5a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x29d7);
        EXPECT(gbc.pc(), 0x9e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e5a), 0xcb);
        EXPECT(gbc.readMem(0x9e5b), 0x52);
        // CB 52 01F6
        gbc.setState(0x45cc, 0xc2ce, 0x6a90, 0xb64, 0xf883, 0x1258, 0x0, 0x0);
        gbc.writeMem(0x45cc, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc2ce);
        EXPECT(gbc.pc(), 0x45ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01F7
        gbc.setState(0xa7bf, 0x35fd, 0xc910, 0xc716, 0xcd4b, 0x5892, 0x0, 0x0);
        gbc.writeMem(0xa7bf, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x35fd);
        EXPECT(gbc.pc(), 0xa7c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7bf), 0xcb);
        EXPECT(gbc.readMem(0xa7c0), 0x52);
        // CB 52 01F8
        gbc.setState(0xba27, 0x7c58, 0x2480, 0xe006, 0xd260, 0x862d, 0x1, 0x0);
        gbc.writeMem(0xba27, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7c58);
        EXPECT(gbc.pc(), 0xba29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba27), 0xcb);
        EXPECT(gbc.readMem(0xba28), 0x52);
        // CB 52 01F9
        gbc.setState(0x67cd, 0x1043, 0x25a0, 0xa6d8, 0xe5ba, 0x8fba, 0x1, 0x0);
        gbc.writeMem(0x67cd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1043);
        EXPECT(gbc.pc(), 0x67cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 01FA
        gbc.setState(0x2ab8, 0xe70d, 0x5510, 0x6732, 0x3856, 0x8a01, 0x1, 0x1);
        gbc.writeMem(0x2ab8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe70d);
        EXPECT(gbc.pc(), 0x2aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01FB
        gbc.setState(0x79b6, 0x88e, 0x2230, 0xdbe2, 0x7d93, 0x59ac, 0x1, 0x0);
        gbc.writeMem(0x79b6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x88e);
        EXPECT(gbc.pc(), 0x79b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 01FC
        gbc.setState(0xceee, 0xce26, 0xc470, 0xf37e, 0xa62f, 0xc4be, 0x0, 0x1);
        gbc.writeMem(0xceee, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xce26);
        EXPECT(gbc.pc(), 0xcef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceee), 0xcb);
        EXPECT(gbc.readMem(0xceef), 0x52);
        // CB 52 01FD
        gbc.setState(0xb6ba, 0x5efd, 0x92b0, 0x5b8f, 0x6183, 0x25f5, 0x1, 0x1);
        gbc.writeMem(0xb6ba, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5efd);
        EXPECT(gbc.pc(), 0xb6bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ba), 0xcb);
        EXPECT(gbc.readMem(0xb6bb), 0x52);
        // CB 52 01FE
        gbc.setState(0xc56b, 0x9a22, 0x21d0, 0x931d, 0xd847, 0xe36, 0x0, 0x1);
        gbc.writeMem(0xc56b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9a22);
        EXPECT(gbc.pc(), 0xc56d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc56b), 0xcb);
        EXPECT(gbc.readMem(0xc56c), 0x52);
        // CB 52 01FF
        gbc.setState(0x4670, 0x6f7b, 0x1630, 0x9af5, 0x1dc1, 0x3ce7, 0x0, 0x0);
        gbc.writeMem(0x4670, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6f7b);
        EXPECT(gbc.pc(), 0x4672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0200
        gbc.setState(0x13b, 0x606b, 0x5820, 0xb7ab, 0x44ac, 0x8525, 0x0, 0x0);
        gbc.writeMem(0x13b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x606b);
        EXPECT(gbc.pc(), 0x13d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0201
        gbc.setState(0x6813, 0xd054, 0x6a30, 0x5cb5, 0x80f2, 0x83a6, 0x1, 0x0);
        gbc.writeMem(0x6813, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd054);
        EXPECT(gbc.pc(), 0x6815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0202
        gbc.setState(0xc821, 0x2f6b, 0x3420, 0x47af, 0xc79a, 0x745, 0x0, 0x1);
        gbc.writeMem(0xc821, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2f6b);
        EXPECT(gbc.pc(), 0xc823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc821), 0xcb);
        EXPECT(gbc.readMem(0xc822), 0x52);
        // CB 52 0203
        gbc.setState(0xced9, 0xe67b, 0x6f10, 0xd967, 0xc019, 0x1784, 0x1, 0x1);
        gbc.writeMem(0xced9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe67b);
        EXPECT(gbc.pc(), 0xcedb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced9), 0xcb);
        EXPECT(gbc.readMem(0xceda), 0x52);
        // CB 52 0204
        gbc.setState(0x1440, 0xd192, 0x2c40, 0xd465, 0xd630, 0x1e3e, 0x0, 0x0);
        gbc.writeMem(0x1440, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd192);
        EXPECT(gbc.pc(), 0x1442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0205
        gbc.setState(0x47cd, 0xcbe, 0xd830, 0x610d, 0xf092, 0x88f5, 0x1, 0x0);
        gbc.writeMem(0x47cd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcbe);
        EXPECT(gbc.pc(), 0x47cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0207
        gbc.setState(0x3002, 0x4fb2, 0x9de0, 0xb782, 0x3550, 0x4d27, 0x1, 0x1);
        gbc.writeMem(0x3002, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4fb2);
        EXPECT(gbc.pc(), 0x3004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0208
        gbc.setState(0x2f3d, 0x745a, 0xa810, 0x557c, 0xb5b, 0x8cb1, 0x1, 0x1);
        gbc.writeMem(0x2f3d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x745a);
        EXPECT(gbc.pc(), 0x2f3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0209
        gbc.setState(0x5c81, 0x833e, 0xb6b0, 0x7696, 0x46d6, 0x4998, 0x1, 0x0);
        gbc.writeMem(0x5c81, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x833e);
        EXPECT(gbc.pc(), 0x5c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 020A
        gbc.setState(0x46df, 0xdeaf, 0xa3b0, 0xbb89, 0xaa29, 0x248, 0x1, 0x0);
        gbc.writeMem(0x46df, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdeaf);
        EXPECT(gbc.pc(), 0x46e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 020B
        gbc.setState(0x7605, 0x83e, 0x1610, 0xc40d, 0xbf14, 0xe341, 0x1, 0x1);
        gbc.writeMem(0x7605, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x83e);
        EXPECT(gbc.pc(), 0x7607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 020C
        gbc.setState(0x5bb0, 0xc80f, 0x12f0, 0xa9e1, 0xe407, 0x928d, 0x1, 0x0);
        gbc.writeMem(0x5bb0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc80f);
        EXPECT(gbc.pc(), 0x5bb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 020E
        gbc.setState(0x2dc9, 0xf740, 0x1be0, 0xf5a5, 0xa285, 0xa3ac, 0x0, 0x0);
        gbc.writeMem(0x2dc9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf740);
        EXPECT(gbc.pc(), 0x2dcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 020F
        gbc.setState(0x7a5e, 0xb1ed, 0xbf90, 0xfc14, 0xac21, 0x8885, 0x0, 0x0);
        gbc.writeMem(0x7a5e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb1ed);
        EXPECT(gbc.pc(), 0x7a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0210
        gbc.setState(0xd133, 0xa699, 0xadf0, 0x916a, 0x9818, 0xce91, 0x0, 0x0);
        gbc.writeMem(0xd133, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa699);
        EXPECT(gbc.pc(), 0xd135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd133), 0xcb);
        EXPECT(gbc.readMem(0xd134), 0x52);
        // CB 52 0211
        gbc.setState(0xe7f0, 0x1b7d, 0xf3c0, 0x62eb, 0x8c81, 0xbf70, 0x0, 0x1);
        gbc.writeMem(0xe7f0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1b7d);
        EXPECT(gbc.pc(), 0xe7f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f0), 0xcb);
        EXPECT(gbc.readMem(0xe7f1), 0x52);
        // CB 52 0212
        gbc.setState(0x292e, 0x9d02, 0x46a0, 0x2820, 0x3836, 0x9a2e, 0x0, 0x1);
        gbc.writeMem(0x292e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9d02);
        EXPECT(gbc.pc(), 0x2930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0213
        gbc.setState(0xe093, 0x6a07, 0x6470, 0x55a2, 0x9149, 0x87b4, 0x1, 0x0);
        gbc.writeMem(0xe093, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6a07);
        EXPECT(gbc.pc(), 0xe095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe093), 0xcb);
        EXPECT(gbc.readMem(0xe094), 0x52);
        // CB 52 0214
        gbc.setState(0x1579, 0x4353, 0x8890, 0xb67e, 0x6a5a, 0xb4d0, 0x1, 0x1);
        gbc.writeMem(0x1579, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4353);
        EXPECT(gbc.pc(), 0x157b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0215
        gbc.setState(0xb27, 0x17bc, 0x7890, 0x4078, 0xf584, 0x9ddc, 0x1, 0x0);
        gbc.writeMem(0xb27, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x17bc);
        EXPECT(gbc.pc(), 0xb29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0216
        gbc.setState(0x88a5, 0xf6ca, 0xd160, 0xa31, 0x459, 0x9f37, 0x0, 0x0);
        gbc.writeMem(0x88a5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf6ca);
        EXPECT(gbc.pc(), 0x88a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a5), 0xcb);
        EXPECT(gbc.readMem(0x88a6), 0x52);
        // CB 52 0217
        gbc.setState(0x36d4, 0xbd96, 0x13b0, 0x3908, 0xa3b2, 0x18dd, 0x0, 0x0);
        gbc.writeMem(0x36d4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xbd96);
        EXPECT(gbc.pc(), 0x36d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0218
        gbc.setState(0xebbb, 0x4364, 0x8600, 0xbd6d, 0xe38a, 0xf633, 0x1, 0x0);
        gbc.writeMem(0xebbb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4364);
        EXPECT(gbc.pc(), 0xebbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebbb), 0xcb);
        EXPECT(gbc.readMem(0xebbc), 0x52);
        // CB 52 0219
        gbc.setState(0xe1cf, 0xf247, 0x3410, 0xda89, 0x7ce1, 0x1422, 0x1, 0x0);
        gbc.writeMem(0xe1cf, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf247);
        EXPECT(gbc.pc(), 0xe1d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1cf), 0xcb);
        EXPECT(gbc.readMem(0xe1d0), 0x52);
        // CB 52 021A
        gbc.setState(0x2078, 0xdf5d, 0x40, 0x8099, 0x123f, 0xf74d, 0x1, 0x0);
        gbc.writeMem(0x2078, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xdf5d);
        EXPECT(gbc.pc(), 0x207a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 021D
        gbc.setState(0xcc49, 0x8a59, 0x7bd0, 0x973f, 0x624c, 0xf227, 0x0, 0x0);
        gbc.writeMem(0xcc49, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8a59);
        EXPECT(gbc.pc(), 0xcc4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc49), 0xcb);
        EXPECT(gbc.readMem(0xcc4a), 0x52);
        // CB 52 021E
        gbc.setState(0x3583, 0x1c48, 0xaa40, 0xd540, 0x8ef1, 0x9a27, 0x0, 0x1);
        gbc.writeMem(0x3583, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1c48);
        EXPECT(gbc.pc(), 0x3585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 021F
        gbc.setState(0x6b72, 0xd28, 0x6e0, 0x8981, 0x6430, 0x2d18, 0x0, 0x0);
        gbc.writeMem(0x6b72, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd28);
        EXPECT(gbc.pc(), 0x6b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0220
        gbc.setState(0xbd2b, 0x1ec9, 0x6480, 0xa385, 0x45af, 0x1ae6, 0x0, 0x0);
        gbc.writeMem(0xbd2b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1ec9);
        EXPECT(gbc.pc(), 0xbd2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd2b), 0xcb);
        EXPECT(gbc.readMem(0xbd2c), 0x52);
        // CB 52 0221
        gbc.setState(0x1c68, 0x4e8b, 0x2b70, 0xd72f, 0xb8ad, 0xc153, 0x1, 0x0);
        gbc.writeMem(0x1c68, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4e8b);
        EXPECT(gbc.pc(), 0x1c6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0222
        gbc.setState(0x77b2, 0xae61, 0x8b20, 0x950a, 0x9f7, 0x8123, 0x1, 0x1);
        gbc.writeMem(0x77b2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xae61);
        EXPECT(gbc.pc(), 0x77b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0223
        gbc.setState(0x809e, 0x4684, 0xafa0, 0xb21c, 0x87ff, 0xc036, 0x0, 0x0);
        gbc.writeMem(0x809e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4684);
        EXPECT(gbc.pc(), 0x80a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x809e), 0xcb);
        EXPECT(gbc.readMem(0x809f), 0x52);
        // CB 52 0224
        gbc.setState(0x2102, 0xbf1a, 0x9a00, 0xed07, 0x5a63, 0xe60b, 0x1, 0x1);
        gbc.writeMem(0x2102, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbf1a);
        EXPECT(gbc.pc(), 0x2104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0225
        gbc.setState(0xbbc5, 0xc1ce, 0x1200, 0x96be, 0x40a2, 0x40be, 0x1, 0x0);
        gbc.writeMem(0xbbc5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc1ce);
        EXPECT(gbc.pc(), 0xbbc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc5), 0xcb);
        EXPECT(gbc.readMem(0xbbc6), 0x52);
        // CB 52 0226
        gbc.setState(0x60a3, 0xe1d, 0x9220, 0x167f, 0x77ae, 0x2539, 0x0, 0x0);
        gbc.writeMem(0x60a3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe1d);
        EXPECT(gbc.pc(), 0x60a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0227
        gbc.setState(0x2301, 0xdeee, 0x23d0, 0x4d80, 0x3d3, 0x13, 0x1, 0x0);
        gbc.writeMem(0x2301, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xdeee);
        EXPECT(gbc.pc(), 0x2303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0228
        gbc.setState(0x137c, 0xe435, 0x2a80, 0xb94b, 0xbb1d, 0x8e4, 0x1, 0x1);
        gbc.writeMem(0x137c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe435);
        EXPECT(gbc.pc(), 0x137e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0229
        gbc.setState(0x6cc3, 0x916d, 0x9170, 0xd2b9, 0x3c1b, 0x415b, 0x0, 0x1);
        gbc.writeMem(0x6cc3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x916d);
        EXPECT(gbc.pc(), 0x6cc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 022A
        gbc.setState(0xc76, 0x3205, 0xe030, 0x49fe, 0x8c01, 0x7485, 0x1, 0x0);
        gbc.writeMem(0xc76, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3205);
        EXPECT(gbc.pc(), 0xc78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 022B
        gbc.setState(0x2679, 0xcd05, 0x63c0, 0x5550, 0xb7d5, 0x4fb9, 0x0, 0x1);
        gbc.writeMem(0x2679, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcd05);
        EXPECT(gbc.pc(), 0x267b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 022C
        gbc.setState(0xd3b2, 0x96a7, 0x5b20, 0x6c9d, 0x627f, 0xf28c, 0x0, 0x0);
        gbc.writeMem(0xd3b2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x96a7);
        EXPECT(gbc.pc(), 0xd3b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b2), 0xcb);
        EXPECT(gbc.readMem(0xd3b3), 0x52);
        // CB 52 022D
        gbc.setState(0xa641, 0x22fd, 0x3d00, 0xdca1, 0x2b34, 0xa466, 0x0, 0x1);
        gbc.writeMem(0xa641, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x22fd);
        EXPECT(gbc.pc(), 0xa643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa641), 0xcb);
        EXPECT(gbc.readMem(0xa642), 0x52);
        // CB 52 022E
        gbc.setState(0x28fa, 0x11d5, 0xb510, 0xac4e, 0x3cac, 0x3b96, 0x0, 0x0);
        gbc.writeMem(0x28fa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x11d5);
        EXPECT(gbc.pc(), 0x28fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 022F
        gbc.setState(0xd454, 0xc543, 0x250, 0xb44e, 0x60e7, 0x7b9f, 0x1, 0x0);
        gbc.writeMem(0xd454, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc543);
        EXPECT(gbc.pc(), 0xd456);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd454), 0xcb);
        EXPECT(gbc.readMem(0xd455), 0x52);
        // CB 52 0230
        gbc.setState(0xef7, 0x96ad, 0x5190, 0xdb3b, 0xeb, 0xde0c, 0x0, 0x1);
        gbc.writeMem(0xef7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x96ad);
        EXPECT(gbc.pc(), 0xef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0231
        gbc.setState(0x14d1, 0x6893, 0x4420, 0x43be, 0x4fd5, 0xfa85, 0x1, 0x1);
        gbc.writeMem(0x14d1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6893);
        EXPECT(gbc.pc(), 0x14d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0232
        gbc.setState(0x9159, 0x96d4, 0x5890, 0x47b, 0x34e7, 0xa7e7, 0x0, 0x0);
        gbc.writeMem(0x9159, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x96d4);
        EXPECT(gbc.pc(), 0x915b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9159), 0xcb);
        EXPECT(gbc.readMem(0x915a), 0x52);
        // CB 52 0233
        gbc.setState(0xdd8c, 0x1fa, 0xeed0, 0x424f, 0xc26b, 0x3116, 0x0, 0x0);
        gbc.writeMem(0xdd8c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1fa);
        EXPECT(gbc.pc(), 0xdd8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd8c), 0xcb);
        EXPECT(gbc.readMem(0xdd8d), 0x52);
        // CB 52 0234
        gbc.setState(0x2c20, 0x84b4, 0xb3b0, 0xa32c, 0x92f0, 0xad4f, 0x0, 0x0);
        gbc.writeMem(0x2c20, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x84b4);
        EXPECT(gbc.pc(), 0x2c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0235
        gbc.setState(0xe96a, 0x12f4, 0x3a10, 0x2346, 0x959a, 0xecee, 0x1, 0x1);
        gbc.writeMem(0xe96a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x12f4);
        EXPECT(gbc.pc(), 0xe96c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe96a), 0xcb);
        EXPECT(gbc.readMem(0xe96b), 0x52);
        // CB 52 0236
        gbc.setState(0xce4a, 0x5ba6, 0x3ee0, 0x5876, 0x192c, 0x3fb2, 0x0, 0x0);
        gbc.writeMem(0xce4a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5ba6);
        EXPECT(gbc.pc(), 0xce4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce4a), 0xcb);
        EXPECT(gbc.readMem(0xce4b), 0x52);
        // CB 52 0237
        gbc.setState(0xb13d, 0x15be, 0xaa40, 0x3347, 0x41f9, 0x206b, 0x1, 0x1);
        gbc.writeMem(0xb13d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x15be);
        EXPECT(gbc.pc(), 0xb13f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb13d), 0xcb);
        EXPECT(gbc.readMem(0xb13e), 0x52);
        // CB 52 0238
        gbc.setState(0x53c3, 0x6724, 0x7fc0, 0x7813, 0xdd19, 0xdda3, 0x0, 0x0);
        gbc.writeMem(0x53c3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6724);
        EXPECT(gbc.pc(), 0x53c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0239
        gbc.setState(0x925f, 0xc230, 0xf460, 0x117b, 0xf5fd, 0xaa5b, 0x1, 0x0);
        gbc.writeMem(0x925f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc230);
        EXPECT(gbc.pc(), 0x9261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x925f), 0xcb);
        EXPECT(gbc.readMem(0x9260), 0x52);
        // CB 52 023A
        gbc.setState(0x130f, 0x3df6, 0xc8d0, 0x131d, 0x834a, 0xe5b8, 0x0, 0x0);
        gbc.writeMem(0x130f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3df6);
        EXPECT(gbc.pc(), 0x1311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 023B
        gbc.setState(0xa2c2, 0xa1ab, 0x8dc0, 0x25fc, 0x3c37, 0xe3cc, 0x1, 0x0);
        gbc.writeMem(0xa2c2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa1ab);
        EXPECT(gbc.pc(), 0xa2c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c2), 0xcb);
        EXPECT(gbc.readMem(0xa2c3), 0x52);
        // CB 52 023C
        gbc.setState(0x3b0, 0x7939, 0xdaf0, 0x636e, 0x60ed, 0xc02e, 0x1, 0x0);
        gbc.writeMem(0x3b0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7939);
        EXPECT(gbc.pc(), 0x3b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 023D
        gbc.setState(0xb7c6, 0x243, 0x7c80, 0x482f, 0xc251, 0xaa84, 0x1, 0x1);
        gbc.writeMem(0xb7c6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x243);
        EXPECT(gbc.pc(), 0xb7c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c6), 0xcb);
        EXPECT(gbc.readMem(0xb7c7), 0x52);
        // CB 52 023E
        gbc.setState(0x55a9, 0xa06c, 0x9920, 0x786e, 0xefc8, 0xd2a0, 0x0, 0x0);
        gbc.writeMem(0x55a9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa06c);
        EXPECT(gbc.pc(), 0x55ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 023F
        gbc.setState(0x88e9, 0xbd8, 0x2b00, 0xacda, 0x717, 0x659f, 0x0, 0x1);
        gbc.writeMem(0x88e9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbd8);
        EXPECT(gbc.pc(), 0x88eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e9), 0xcb);
        EXPECT(gbc.readMem(0x88ea), 0x52);
        // CB 52 0240
        gbc.setState(0x1ff3, 0x5662, 0xc250, 0xb596, 0x3b8e, 0xe64e, 0x0, 0x0);
        gbc.writeMem(0x1ff3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5662);
        EXPECT(gbc.pc(), 0x1ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0241
        gbc.setState(0xbe41, 0x3eea, 0xd5c0, 0x7451, 0xec9f, 0x32c3, 0x1, 0x0);
        gbc.writeMem(0xbe41, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3eea);
        EXPECT(gbc.pc(), 0xbe43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe41), 0xcb);
        EXPECT(gbc.readMem(0xbe42), 0x52);
        // CB 52 0242
        gbc.setState(0x61bd, 0xd804, 0xb610, 0xc83e, 0x24b0, 0xb66c, 0x1, 0x0);
        gbc.writeMem(0x61bd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd804);
        EXPECT(gbc.pc(), 0x61bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0243
        gbc.setState(0x9300, 0x97d4, 0xc130, 0xf7e4, 0xbe5c, 0x123a, 0x0, 0x1);
        gbc.writeMem(0x9300, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x97d4);
        EXPECT(gbc.pc(), 0x9302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9300), 0xcb);
        EXPECT(gbc.readMem(0x9301), 0x52);
        // CB 52 0244
        gbc.setState(0x407d, 0x3e46, 0x2530, 0xfc5f, 0xf558, 0xfc0c, 0x1, 0x0);
        gbc.writeMem(0x407d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3e46);
        EXPECT(gbc.pc(), 0x407f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0245
        gbc.setState(0xd25d, 0x6e9f, 0x9b20, 0x627, 0xcce6, 0x8cda, 0x1, 0x1);
        gbc.writeMem(0xd25d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6e9f);
        EXPECT(gbc.pc(), 0xd25f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd25d), 0xcb);
        EXPECT(gbc.readMem(0xd25e), 0x52);
        // CB 52 0246
        gbc.setState(0x40cb, 0xd7a, 0x35c0, 0xf0d, 0xab83, 0x21e7, 0x1, 0x1);
        gbc.writeMem(0x40cb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd7a);
        EXPECT(gbc.pc(), 0x40cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0249
        gbc.setState(0x34bf, 0xce12, 0x25a0, 0xd22, 0xa0c, 0x6c35, 0x0, 0x0);
        gbc.writeMem(0x34bf, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xce12);
        EXPECT(gbc.pc(), 0x34c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 024A
        gbc.setState(0x31b8, 0xd510, 0x18c0, 0xd2b2, 0x5f39, 0xe466, 0x0, 0x1);
        gbc.writeMem(0x31b8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd510);
        EXPECT(gbc.pc(), 0x31ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 024B
        gbc.setState(0x8aa5, 0x1dc7, 0x6050, 0x294f, 0x72fe, 0xf98, 0x0, 0x1);
        gbc.writeMem(0x8aa5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1dc7);
        EXPECT(gbc.pc(), 0x8aa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aa5), 0xcb);
        EXPECT(gbc.readMem(0x8aa6), 0x52);
        // CB 52 024C
        gbc.setState(0xea0f, 0x1650, 0xf4b0, 0x6aad, 0x6a3e, 0x6b25, 0x1, 0x1);
        gbc.writeMem(0xea0f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1650);
        EXPECT(gbc.pc(), 0xea11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea0f), 0xcb);
        EXPECT(gbc.readMem(0xea10), 0x52);
        // CB 52 024D
        gbc.setState(0xc409, 0x3d45, 0xbd60, 0x8c, 0xe76e, 0xfa87, 0x1, 0x1);
        gbc.writeMem(0xc409, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3d45);
        EXPECT(gbc.pc(), 0xc40b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc409), 0xcb);
        EXPECT(gbc.readMem(0xc40a), 0x52);
        // CB 52 024E
        gbc.setState(0x201d, 0xdea0, 0x58f0, 0x3a7c, 0x530e, 0xd1cf, 0x1, 0x1);
        gbc.writeMem(0x201d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xdea0);
        EXPECT(gbc.pc(), 0x201f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 024F
        gbc.setState(0xb2a, 0xa190, 0xa620, 0xb6e6, 0xae64, 0xabdc, 0x0, 0x1);
        gbc.writeMem(0xb2a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa190);
        EXPECT(gbc.pc(), 0xb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0250
        gbc.setState(0x899a, 0x2618, 0xc6e0, 0x8fa3, 0x8b55, 0x46b3, 0x0, 0x1);
        gbc.writeMem(0x899a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2618);
        EXPECT(gbc.pc(), 0x899c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x899a), 0xcb);
        EXPECT(gbc.readMem(0x899b), 0x52);
        // CB 52 0251
        gbc.setState(0x353, 0xb832, 0xa600, 0x747e, 0xc582, 0xf42c, 0x1, 0x0);
        gbc.writeMem(0x353, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb832);
        EXPECT(gbc.pc(), 0x355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0252
        gbc.setState(0x533c, 0xa807, 0x3850, 0xd3d4, 0x5704, 0x4449, 0x0, 0x1);
        gbc.writeMem(0x533c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa807);
        EXPECT(gbc.pc(), 0x533e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0253
        gbc.setState(0xb01b, 0x7e94, 0xf8c0, 0x4ae4, 0xbe5f, 0x635d, 0x0, 0x1);
        gbc.writeMem(0xb01b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7e94);
        EXPECT(gbc.pc(), 0xb01d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01b), 0xcb);
        EXPECT(gbc.readMem(0xb01c), 0x52);
        // CB 52 0254
        gbc.setState(0xebf0, 0x2f9, 0x6d80, 0x9840, 0x2fbc, 0xeff5, 0x0, 0x1);
        gbc.writeMem(0xebf0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2f9);
        EXPECT(gbc.pc(), 0xebf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf0), 0xcb);
        EXPECT(gbc.readMem(0xebf1), 0x52);
        // CB 52 0255
        gbc.setState(0xc370, 0xf4c5, 0x9ae0, 0xd8f2, 0x7f20, 0x3879, 0x1, 0x0);
        gbc.writeMem(0xc370, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf4c5);
        EXPECT(gbc.pc(), 0xc372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc370), 0xcb);
        EXPECT(gbc.readMem(0xc371), 0x52);
        // CB 52 0256
        gbc.setState(0x59dc, 0x41d4, 0x3fe0, 0x1285, 0xfa06, 0xf6e6, 0x1, 0x1);
        gbc.writeMem(0x59dc, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x41d4);
        EXPECT(gbc.pc(), 0x59de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0257
        gbc.setState(0xba93, 0x276f, 0x52f0, 0xad02, 0xe5b8, 0x64a9, 0x0, 0x0);
        gbc.writeMem(0xba93, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x276f);
        EXPECT(gbc.pc(), 0xba95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba93), 0xcb);
        EXPECT(gbc.readMem(0xba94), 0x52);
        // CB 52 0258
        gbc.setState(0x9edf, 0x18ce, 0xee00, 0x6091, 0xd461, 0x994d, 0x0, 0x0);
        gbc.writeMem(0x9edf, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x18ce);
        EXPECT(gbc.pc(), 0x9ee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9edf), 0xcb);
        EXPECT(gbc.readMem(0x9ee0), 0x52);
        // CB 52 0259
        gbc.setState(0xec46, 0xf939, 0x84a0, 0x33e9, 0x662b, 0xd257, 0x1, 0x1);
        gbc.writeMem(0xec46, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf939);
        EXPECT(gbc.pc(), 0xec48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec46), 0xcb);
        EXPECT(gbc.readMem(0xec47), 0x52);
        // CB 52 025A
        gbc.setState(0xe168, 0x658d, 0xeb70, 0x7507, 0x1f62, 0x8ffb, 0x0, 0x1);
        gbc.writeMem(0xe168, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x658d);
        EXPECT(gbc.pc(), 0xe16a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe168), 0xcb);
        EXPECT(gbc.readMem(0xe169), 0x52);
        // CB 52 025B
        gbc.setState(0x2b2, 0xdf12, 0x380, 0x90f3, 0x497c, 0x3b72, 0x1, 0x1);
        gbc.writeMem(0x2b2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdf12);
        EXPECT(gbc.pc(), 0x2b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 025C
        gbc.setState(0x5618, 0xda0b, 0x5a20, 0x353, 0xe159, 0x796f, 0x0, 0x1);
        gbc.writeMem(0x5618, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xda0b);
        EXPECT(gbc.pc(), 0x561a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 025D
        gbc.setState(0xda8e, 0xa4df, 0x9e00, 0x92e6, 0x2b34, 0xccb7, 0x0, 0x0);
        gbc.writeMem(0xda8e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa4df);
        EXPECT(gbc.pc(), 0xda90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8e), 0xcb);
        EXPECT(gbc.readMem(0xda8f), 0x52);
        // CB 52 025E
        gbc.setState(0x2735, 0xff48, 0x4e10, 0xb8e4, 0xfc94, 0x2fd0, 0x0, 0x1);
        gbc.writeMem(0x2735, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xff48);
        EXPECT(gbc.pc(), 0x2737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0260
        gbc.setState(0xd734, 0xbb4d, 0xd2d0, 0xbc59, 0x35fd, 0x747, 0x0, 0x1);
        gbc.writeMem(0xd734, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbb4d);
        EXPECT(gbc.pc(), 0xd736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd734), 0xcb);
        EXPECT(gbc.readMem(0xd735), 0x52);
        // CB 52 0261
        gbc.setState(0x2047, 0xd0a7, 0xe1e0, 0x49c7, 0x64ee, 0xb392, 0x0, 0x0);
        gbc.writeMem(0x2047, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd0a7);
        EXPECT(gbc.pc(), 0x2049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0262
        gbc.setState(0x5df8, 0x502, 0x5210, 0x1b08, 0xd01, 0xe7ce, 0x1, 0x1);
        gbc.writeMem(0x5df8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x502);
        EXPECT(gbc.pc(), 0x5dfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0263
        gbc.setState(0xee00, 0x5705, 0xcd20, 0x11cf, 0x630c, 0xa83f, 0x1, 0x1);
        gbc.writeMem(0xee00, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5705);
        EXPECT(gbc.pc(), 0xee02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee00), 0xcb);
        EXPECT(gbc.readMem(0xee01), 0x52);
        // CB 52 0264
        gbc.setState(0x3ee8, 0xcb04, 0xb8b0, 0x9ed7, 0xafa6, 0xbd51, 0x0, 0x0);
        gbc.writeMem(0x3ee8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcb04);
        EXPECT(gbc.pc(), 0x3eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0265
        gbc.setState(0xdf43, 0xd149, 0x4270, 0xdac9, 0x46a3, 0xe6ce, 0x0, 0x0);
        gbc.writeMem(0xdf43, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd149);
        EXPECT(gbc.pc(), 0xdf45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf43), 0xcb);
        EXPECT(gbc.readMem(0xdf44), 0x52);
        // CB 52 0267
        gbc.setState(0x602a, 0xda9a, 0x47b0, 0x5a7b, 0xc56b, 0x6fa8, 0x0, 0x1);
        gbc.writeMem(0x602a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xda9a);
        EXPECT(gbc.pc(), 0x602c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0269
        gbc.setState(0x5c8d, 0xcfde, 0xa880, 0x60ba, 0xb704, 0xb8e, 0x1, 0x1);
        gbc.writeMem(0x5c8d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xcfde);
        EXPECT(gbc.pc(), 0x5c8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 026A
        gbc.setState(0x9278, 0x95d9, 0x680, 0xe54c, 0x786c, 0x541c, 0x1, 0x0);
        gbc.writeMem(0x9278, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x95d9);
        EXPECT(gbc.pc(), 0x927a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9278), 0xcb);
        EXPECT(gbc.readMem(0x9279), 0x52);
        // CB 52 026B
        gbc.setState(0xdc21, 0x1444, 0x5fe0, 0x77e1, 0x7614, 0xbae1, 0x1, 0x0);
        gbc.writeMem(0xdc21, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1444);
        EXPECT(gbc.pc(), 0xdc23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc21), 0xcb);
        EXPECT(gbc.readMem(0xdc22), 0x52);
        // CB 52 026C
        gbc.setState(0xbfe, 0x30f5, 0x83a0, 0x42c4, 0x4065, 0x8094, 0x1, 0x0);
        gbc.writeMem(0xbfe, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x30f5);
        EXPECT(gbc.pc(), 0xc00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 026D
        gbc.setState(0x80ad, 0xfe40, 0xfd80, 0x2a17, 0xeb76, 0x4e95, 0x0, 0x0);
        gbc.writeMem(0x80ad, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfe40);
        EXPECT(gbc.pc(), 0x80af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ad), 0xcb);
        EXPECT(gbc.readMem(0x80ae), 0x52);
        // CB 52 026E
        gbc.setState(0x833, 0x82da, 0x2e90, 0xc2f4, 0x5021, 0x23a, 0x0, 0x0);
        gbc.writeMem(0x833, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x82da);
        EXPECT(gbc.pc(), 0x835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 026F
        gbc.setState(0xaa8e, 0x3723, 0xed30, 0xa4a1, 0xb24a, 0x13a5, 0x1, 0x0);
        gbc.writeMem(0xaa8e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3723);
        EXPECT(gbc.pc(), 0xaa90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa8e), 0xcb);
        EXPECT(gbc.readMem(0xaa8f), 0x52);
        // CB 52 0270
        gbc.setState(0x4168, 0xec1b, 0x8360, 0xc8fa, 0x1dd1, 0xed48, 0x0, 0x1);
        gbc.writeMem(0x4168, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xec1b);
        EXPECT(gbc.pc(), 0x416a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0271
        gbc.setState(0x8616, 0x527d, 0x1610, 0xb967, 0x6f9d, 0xfae2, 0x1, 0x1);
        gbc.writeMem(0x8616, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x527d);
        EXPECT(gbc.pc(), 0x8618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8616), 0xcb);
        EXPECT(gbc.readMem(0x8617), 0x52);
        // CB 52 0272
        gbc.setState(0xa928, 0x65, 0x1550, 0xa9e6, 0xec9f, 0x385a, 0x1, 0x1);
        gbc.writeMem(0xa928, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x65);
        EXPECT(gbc.pc(), 0xa92a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa928), 0xcb);
        EXPECT(gbc.readMem(0xa929), 0x52);
        // CB 52 0273
        gbc.setState(0x65ed, 0x5370, 0xde60, 0x5786, 0xe264, 0x3f99, 0x1, 0x0);
        gbc.writeMem(0x65ed, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5370);
        EXPECT(gbc.pc(), 0x65ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0274
        gbc.setState(0x82c3, 0x23a1, 0xb270, 0xb4c5, 0xd071, 0x8067, 0x1, 0x0);
        gbc.writeMem(0x82c3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x23a1);
        EXPECT(gbc.pc(), 0x82c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c3), 0xcb);
        EXPECT(gbc.readMem(0x82c4), 0x52);
        // CB 52 0275
        gbc.setState(0xedfa, 0x6eda, 0x3480, 0x647a, 0x72dd, 0xd8cd, 0x1, 0x0);
        gbc.writeMem(0xedfa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6eda);
        EXPECT(gbc.pc(), 0xedfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedfa), 0xcb);
        EXPECT(gbc.readMem(0xedfb), 0x52);
        // CB 52 0276
        gbc.setState(0x71e0, 0x1b6d, 0x3690, 0x52d7, 0xcc61, 0x28f9, 0x0, 0x1);
        gbc.writeMem(0x71e0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1b6d);
        EXPECT(gbc.pc(), 0x71e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0278
        gbc.setState(0x1ac4, 0x409, 0x6330, 0xf632, 0xb1, 0xf042, 0x1, 0x1);
        gbc.writeMem(0x1ac4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x409);
        EXPECT(gbc.pc(), 0x1ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0279
        gbc.setState(0x1a62, 0xbdd9, 0xe0d0, 0x5415, 0x65d2, 0x806c, 0x0, 0x1);
        gbc.writeMem(0x1a62, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbdd9);
        EXPECT(gbc.pc(), 0x1a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 027A
        gbc.setState(0x9cf, 0xe213, 0x7400, 0xdf25, 0x9b8f, 0xbf9, 0x0, 0x0);
        gbc.writeMem(0x9cf, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe213);
        EXPECT(gbc.pc(), 0x9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 027B
        gbc.setState(0x382, 0x5bb1, 0xbe40, 0x1261, 0xe04a, 0x5342, 0x1, 0x1);
        gbc.writeMem(0x382, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5bb1);
        EXPECT(gbc.pc(), 0x384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 027C
        gbc.setState(0x2aea, 0xff33, 0xbc60, 0x6f92, 0xaa7e, 0x7f01, 0x1, 0x1);
        gbc.writeMem(0x2aea, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xff33);
        EXPECT(gbc.pc(), 0x2aec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 027D
        gbc.setState(0x5cf4, 0xc033, 0x6bf0, 0x5228, 0xea5f, 0x4dc3, 0x1, 0x0);
        gbc.writeMem(0x5cf4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc033);
        EXPECT(gbc.pc(), 0x5cf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 027E
        gbc.setState(0x1e22, 0x7f3, 0xe3c0, 0x42db, 0x7f43, 0xf8fe, 0x1, 0x1);
        gbc.writeMem(0x1e22, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7f3);
        EXPECT(gbc.pc(), 0x1e24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 027F
        gbc.setState(0x1031, 0x8f2c, 0xc0b0, 0xc903, 0x2410, 0x964, 0x0, 0x0);
        gbc.writeMem(0x1031, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8f2c);
        EXPECT(gbc.pc(), 0x1033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0280
        gbc.setState(0x74d, 0x8cec, 0x93c0, 0xa00c, 0x6598, 0x44d6, 0x0, 0x1);
        gbc.writeMem(0x74d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8cec);
        EXPECT(gbc.pc(), 0x74f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0281
        gbc.setState(0x229f, 0x9e0e, 0x71b0, 0xdf6f, 0xb3ea, 0xea6d, 0x1, 0x0);
        gbc.writeMem(0x229f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9e0e);
        EXPECT(gbc.pc(), 0x22a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0282
        gbc.setState(0x570d, 0x1bb4, 0xfa20, 0xdcc5, 0xc7b4, 0x3ca9, 0x0, 0x0);
        gbc.writeMem(0x570d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1bb4);
        EXPECT(gbc.pc(), 0x570f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0283
        gbc.setState(0xb27, 0xb673, 0x4dc0, 0x25b5, 0x2e58, 0x7a40, 0x1, 0x0);
        gbc.writeMem(0xb27, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb673);
        EXPECT(gbc.pc(), 0xb29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0284
        gbc.setState(0xe838, 0xb0c7, 0xe6e0, 0x5540, 0xc38c, 0xbb2b, 0x0, 0x1);
        gbc.writeMem(0xe838, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb0c7);
        EXPECT(gbc.pc(), 0xe83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe838), 0xcb);
        EXPECT(gbc.readMem(0xe839), 0x52);
        // CB 52 0285
        gbc.setState(0x4031, 0x9538, 0xca60, 0xe897, 0x2bf2, 0x44c6, 0x1, 0x1);
        gbc.writeMem(0x4031, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9538);
        EXPECT(gbc.pc(), 0x4033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0286
        gbc.setState(0xc0aa, 0xa35f, 0x4100, 0x7f7e, 0x659b, 0x9f5d, 0x1, 0x0);
        gbc.writeMem(0xc0aa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa35f);
        EXPECT(gbc.pc(), 0xc0ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0aa), 0xcb);
        EXPECT(gbc.readMem(0xc0ab), 0x52);
        // CB 52 0288
        gbc.setState(0x1664, 0xfbb9, 0xc0e0, 0xab0b, 0x1d9, 0x307f, 0x0, 0x0);
        gbc.writeMem(0x1664, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfbb9);
        EXPECT(gbc.pc(), 0x1666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0289
        gbc.setState(0x75d6, 0x5438, 0xd5d0, 0x498, 0x19eb, 0x15f0, 0x0, 0x0);
        gbc.writeMem(0x75d6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5438);
        EXPECT(gbc.pc(), 0x75d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 028A
        gbc.setState(0x8044, 0xd5ce, 0x67c0, 0xfb47, 0x6100, 0x9e4d, 0x1, 0x1);
        gbc.writeMem(0x8044, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd5ce);
        EXPECT(gbc.pc(), 0x8046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8044), 0xcb);
        EXPECT(gbc.readMem(0x8045), 0x52);
        // CB 52 028B
        gbc.setState(0x664e, 0xc4ff, 0xf1c0, 0x59a2, 0x7ceb, 0xa021, 0x0, 0x1);
        gbc.writeMem(0x664e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc4ff);
        EXPECT(gbc.pc(), 0x6650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 028C
        gbc.setState(0xf45, 0x3679, 0x1bd0, 0x25c0, 0x5dc8, 0xb721, 0x1, 0x1);
        gbc.writeMem(0xf45, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3679);
        EXPECT(gbc.pc(), 0xf47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 028D
        gbc.setState(0x446e, 0x3dc1, 0x9080, 0xdd84, 0xa645, 0x8380, 0x0, 0x0);
        gbc.writeMem(0x446e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3dc1);
        EXPECT(gbc.pc(), 0x4470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 028E
        gbc.setState(0xd5dd, 0xf068, 0x3320, 0xa0bb, 0x5507, 0xd7a4, 0x0, 0x0);
        gbc.writeMem(0xd5dd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf068);
        EXPECT(gbc.pc(), 0xd5df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5dd), 0xcb);
        EXPECT(gbc.readMem(0xd5de), 0x52);
        // CB 52 028F
        gbc.setState(0xe215, 0x5d34, 0xaf90, 0xc26c, 0x4b5b, 0x11a1, 0x0, 0x1);
        gbc.writeMem(0xe215, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5d34);
        EXPECT(gbc.pc(), 0xe217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe215), 0xcb);
        EXPECT(gbc.readMem(0xe216), 0x52);
        // CB 52 0290
        gbc.setState(0x85ae, 0xc2cc, 0x6860, 0x338c, 0xdc9b, 0xb5e0, 0x0, 0x0);
        gbc.writeMem(0x85ae, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc2cc);
        EXPECT(gbc.pc(), 0x85b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ae), 0xcb);
        EXPECT(gbc.readMem(0x85af), 0x52);
        // CB 52 0291
        gbc.setState(0xe907, 0xc92a, 0xf4d0, 0x856c, 0x3d2, 0xf652, 0x0, 0x1);
        gbc.writeMem(0xe907, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc92a);
        EXPECT(gbc.pc(), 0xe909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe907), 0xcb);
        EXPECT(gbc.readMem(0xe908), 0x52);
        // CB 52 0292
        gbc.setState(0x167, 0x4231, 0x7d50, 0xaa11, 0xd34c, 0x2fab, 0x1, 0x0);
        gbc.writeMem(0x167, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4231);
        EXPECT(gbc.pc(), 0x169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0293
        gbc.setState(0xe653, 0x5fff, 0x20e0, 0xb2ae, 0x6b67, 0x2e1b, 0x1, 0x0);
        gbc.writeMem(0xe653, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5fff);
        EXPECT(gbc.pc(), 0xe655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe653), 0xcb);
        EXPECT(gbc.readMem(0xe654), 0x52);
        // CB 52 0294
        gbc.setState(0x138b, 0xa76d, 0x3140, 0x68b0, 0x6be4, 0x4790, 0x1, 0x1);
        gbc.writeMem(0x138b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa76d);
        EXPECT(gbc.pc(), 0x138d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0295
        gbc.setState(0x3c53, 0xd70b, 0x6a50, 0x80e9, 0x46d8, 0x16e9, 0x1, 0x1);
        gbc.writeMem(0x3c53, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd70b);
        EXPECT(gbc.pc(), 0x3c55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0296
        gbc.setState(0x4adc, 0xf7a1, 0xe2f0, 0x91fa, 0xa74f, 0xdfce, 0x1, 0x1);
        gbc.writeMem(0x4adc, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf7a1);
        EXPECT(gbc.pc(), 0x4ade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0297
        gbc.setState(0x2bc2, 0x2cae, 0x1610, 0x4788, 0x850b, 0xad26, 0x1, 0x0);
        gbc.writeMem(0x2bc2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2cae);
        EXPECT(gbc.pc(), 0x2bc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0298
        gbc.setState(0xd5e0, 0x12fc, 0x6a0, 0x30d4, 0x9611, 0x220d, 0x0, 0x1);
        gbc.writeMem(0xd5e0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x12fc);
        EXPECT(gbc.pc(), 0xd5e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e0), 0xcb);
        EXPECT(gbc.readMem(0xd5e1), 0x52);
        // CB 52 0299
        gbc.setState(0xcb3a, 0x88c0, 0x5c00, 0x5771, 0x9c8, 0xe687, 0x0, 0x1);
        gbc.writeMem(0xcb3a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x88c0);
        EXPECT(gbc.pc(), 0xcb3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3a), 0xcb);
        EXPECT(gbc.readMem(0xcb3b), 0x52);
        // CB 52 029A
        gbc.setState(0x7967, 0x62e4, 0x62e0, 0xe2cc, 0xa7d9, 0xda93, 0x1, 0x1);
        gbc.writeMem(0x7967, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x62e4);
        EXPECT(gbc.pc(), 0x7969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 029B
        gbc.setState(0x4dcc, 0xce74, 0x6480, 0xb0ad, 0xc0d7, 0x39c9, 0x0, 0x1);
        gbc.writeMem(0x4dcc, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xce74);
        EXPECT(gbc.pc(), 0x4dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 029C
        gbc.setState(0x5780, 0xf6ee, 0xd100, 0xce16, 0xf982, 0x71c3, 0x0, 0x1);
        gbc.writeMem(0x5780, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf6ee);
        EXPECT(gbc.pc(), 0x5782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 029D
        gbc.setState(0x3813, 0x4045, 0xa900, 0x859a, 0x4773, 0xfec5, 0x0, 0x0);
        gbc.writeMem(0x3813, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4045);
        EXPECT(gbc.pc(), 0x3815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 029E
        gbc.setState(0x7fa3, 0x592f, 0xbb30, 0x5c6c, 0xc731, 0x53c7, 0x0, 0x1);
        gbc.writeMem(0x7fa3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x592f);
        EXPECT(gbc.pc(), 0x7fa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 029F
        gbc.setState(0x3cb7, 0xc159, 0xff50, 0x8b7, 0x399f, 0x3ac4, 0x0, 0x0);
        gbc.writeMem(0x3cb7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc159);
        EXPECT(gbc.pc(), 0x3cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02A0
        gbc.setState(0xeb90, 0x1177, 0x2a00, 0xa2fa, 0xd2d5, 0xcc5, 0x1, 0x1);
        gbc.writeMem(0xeb90, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1177);
        EXPECT(gbc.pc(), 0xeb92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb90), 0xcb);
        EXPECT(gbc.readMem(0xeb91), 0x52);
        // CB 52 02A1
        gbc.setState(0x5060, 0x754, 0x3f0, 0xdb03, 0x5112, 0x1d87, 0x0, 0x0);
        gbc.writeMem(0x5060, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x754);
        EXPECT(gbc.pc(), 0x5062);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02A2
        gbc.setState(0xf6e, 0xb2b9, 0xab00, 0x3a57, 0x39dc, 0xa0e4, 0x0, 0x1);
        gbc.writeMem(0xf6e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb2b9);
        EXPECT(gbc.pc(), 0xf70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02A3
        gbc.setState(0x9c95, 0x1d93, 0x1dc0, 0x49cc, 0xa46c, 0xea3c, 0x1, 0x0);
        gbc.writeMem(0x9c95, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1d93);
        EXPECT(gbc.pc(), 0x9c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c95), 0xcb);
        EXPECT(gbc.readMem(0x9c96), 0x52);
        // CB 52 02A4
        gbc.setState(0xe063, 0xf150, 0x3330, 0x7a9a, 0x90a8, 0xaf7e, 0x1, 0x0);
        gbc.writeMem(0xe063, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf150);
        EXPECT(gbc.pc(), 0xe065);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe063), 0xcb);
        EXPECT(gbc.readMem(0xe064), 0x52);
        // CB 52 02A5
        gbc.setState(0x9ec7, 0x923, 0x5c40, 0x1ac3, 0x9769, 0xf673, 0x1, 0x0);
        gbc.writeMem(0x9ec7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x923);
        EXPECT(gbc.pc(), 0x9ec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec7), 0xcb);
        EXPECT(gbc.readMem(0x9ec8), 0x52);
        // CB 52 02A6
        gbc.setState(0x575b, 0x8cb8, 0xd820, 0x2be9, 0x1c83, 0xd92d, 0x1, 0x0);
        gbc.writeMem(0x575b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8cb8);
        EXPECT(gbc.pc(), 0x575d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02A7
        gbc.setState(0x67bd, 0x3ca3, 0x8740, 0x973, 0xd437, 0xe580, 0x1, 0x0);
        gbc.writeMem(0x67bd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3ca3);
        EXPECT(gbc.pc(), 0x67bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02A8
        gbc.setState(0xb9ed, 0xe2c8, 0xce80, 0x2c7f, 0xc34c, 0xc83e, 0x0, 0x1);
        gbc.writeMem(0xb9ed, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe2c8);
        EXPECT(gbc.pc(), 0xb9ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ed), 0xcb);
        EXPECT(gbc.readMem(0xb9ee), 0x52);
        // CB 52 02A9
        gbc.setState(0xce7d, 0x500a, 0x2b20, 0x77ef, 0x9575, 0xdc9c, 0x1, 0x0);
        gbc.writeMem(0xce7d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x500a);
        EXPECT(gbc.pc(), 0xce7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce7d), 0xcb);
        EXPECT(gbc.readMem(0xce7e), 0x52);
        // CB 52 02AA
        gbc.setState(0x5931, 0x8d9f, 0xafe0, 0x26d5, 0xf0ff, 0xa363, 0x0, 0x0);
        gbc.writeMem(0x5931, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8d9f);
        EXPECT(gbc.pc(), 0x5933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02AB
        gbc.setState(0x9b4f, 0x3553, 0x3e30, 0x42dc, 0x7f19, 0x70c0, 0x0, 0x0);
        gbc.writeMem(0x9b4f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3553);
        EXPECT(gbc.pc(), 0x9b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b4f), 0xcb);
        EXPECT(gbc.readMem(0x9b50), 0x52);
        // CB 52 02AC
        gbc.setState(0xc43e, 0xa536, 0x1c30, 0x34c0, 0xa41d, 0x1f0a, 0x0, 0x0);
        gbc.writeMem(0xc43e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa536);
        EXPECT(gbc.pc(), 0xc440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc43e), 0xcb);
        EXPECT(gbc.readMem(0xc43f), 0x52);
        // CB 52 02AD
        gbc.setState(0x6b0, 0x3135, 0x7cd0, 0x55cb, 0x30ef, 0x3ea3, 0x1, 0x0);
        gbc.writeMem(0x6b0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3135);
        EXPECT(gbc.pc(), 0x6b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02AE
        gbc.setState(0x1425, 0x8ad9, 0x69e0, 0x57f7, 0x7db2, 0x6e35, 0x1, 0x0);
        gbc.writeMem(0x1425, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8ad9);
        EXPECT(gbc.pc(), 0x1427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02AF
        gbc.setState(0x569c, 0xec0f, 0x7210, 0x88d8, 0x3da3, 0xdbeb, 0x1, 0x0);
        gbc.writeMem(0x569c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xec0f);
        EXPECT(gbc.pc(), 0x569e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02B1
        gbc.setState(0x4f71, 0x71d9, 0x1830, 0xf9f3, 0x1fa3, 0x19cf, 0x0, 0x0);
        gbc.writeMem(0x4f71, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x71d9);
        EXPECT(gbc.pc(), 0x4f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02B2
        gbc.setState(0xd874, 0x90f9, 0x8e70, 0x2ef5, 0xb48c, 0x8ed, 0x0, 0x1);
        gbc.writeMem(0xd874, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x90f9);
        EXPECT(gbc.pc(), 0xd876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd874), 0xcb);
        EXPECT(gbc.readMem(0xd875), 0x52);
        // CB 52 02B3
        gbc.setState(0xc697, 0x423, 0xa30, 0x6e31, 0xa8c4, 0xc470, 0x1, 0x1);
        gbc.writeMem(0xc697, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x423);
        EXPECT(gbc.pc(), 0xc699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc697), 0xcb);
        EXPECT(gbc.readMem(0xc698), 0x52);
        // CB 52 02B4
        gbc.setState(0x9da5, 0x1bdb, 0xd280, 0x2f2, 0x2282, 0x11e4, 0x0, 0x0);
        gbc.writeMem(0x9da5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1bdb);
        EXPECT(gbc.pc(), 0x9da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da5), 0xcb);
        EXPECT(gbc.readMem(0x9da6), 0x52);
        // CB 52 02B5
        gbc.setState(0xad24, 0xf62a, 0x65d0, 0x581d, 0x96a6, 0x5bb8, 0x1, 0x0);
        gbc.writeMem(0xad24, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf62a);
        EXPECT(gbc.pc(), 0xad26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad24), 0xcb);
        EXPECT(gbc.readMem(0xad25), 0x52);
        // CB 52 02B6
        gbc.setState(0x3f3e, 0xbd88, 0xcba0, 0xb019, 0x7772, 0xc332, 0x1, 0x1);
        gbc.writeMem(0x3f3e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbd88);
        EXPECT(gbc.pc(), 0x3f40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02B7
        gbc.setState(0x3ecd, 0x4497, 0x8570, 0xb9df, 0xc785, 0x2767, 0x0, 0x1);
        gbc.writeMem(0x3ecd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4497);
        EXPECT(gbc.pc(), 0x3ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02B8
        gbc.setState(0x72be, 0x41d3, 0x5550, 0x6479, 0xb986, 0x89e4, 0x0, 0x1);
        gbc.writeMem(0x72be, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x41d3);
        EXPECT(gbc.pc(), 0x72c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02B9
        gbc.setState(0xc6a8, 0x7f61, 0x50c0, 0x78b1, 0x90b3, 0xa79a, 0x1, 0x1);
        gbc.writeMem(0xc6a8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7f61);
        EXPECT(gbc.pc(), 0xc6aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a8), 0xcb);
        EXPECT(gbc.readMem(0xc6a9), 0x52);
        // CB 52 02BC
        gbc.setState(0x3fc5, 0xd10c, 0x9dc0, 0x5fdb, 0x1124, 0xb21e, 0x0, 0x0);
        gbc.writeMem(0x3fc5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd10c);
        EXPECT(gbc.pc(), 0x3fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02BD
        gbc.setState(0xd1f7, 0x6b37, 0x4670, 0xd933, 0xfb2c, 0xe0d4, 0x1, 0x1);
        gbc.writeMem(0xd1f7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6b37);
        EXPECT(gbc.pc(), 0xd1f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f7), 0xcb);
        EXPECT(gbc.readMem(0xd1f8), 0x52);
        // CB 52 02BE
        gbc.setState(0x29ac, 0xf751, 0xac50, 0xf34e, 0xea40, 0x257a, 0x0, 0x0);
        gbc.writeMem(0x29ac, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf751);
        EXPECT(gbc.pc(), 0x29ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02BF
        gbc.setState(0x572, 0x9cb5, 0xd570, 0x9cf8, 0x5bdb, 0xc4da, 0x0, 0x1);
        gbc.writeMem(0x572, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9cb5);
        EXPECT(gbc.pc(), 0x574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02C0
        gbc.setState(0x650f, 0x89d0, 0x2030, 0xe34c, 0x9da3, 0x3e16, 0x1, 0x0);
        gbc.writeMem(0x650f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x89d0);
        EXPECT(gbc.pc(), 0x6511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02C1
        gbc.setState(0x53b, 0x9244, 0xb480, 0x9845, 0xa59e, 0xa553, 0x1, 0x0);
        gbc.writeMem(0x53b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9244);
        EXPECT(gbc.pc(), 0x53d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02C3
        gbc.setState(0xb8c5, 0x9400, 0xcdb0, 0x387f, 0x9100, 0x2d46, 0x1, 0x1);
        gbc.writeMem(0xb8c5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9400);
        EXPECT(gbc.pc(), 0xb8c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c5), 0xcb);
        EXPECT(gbc.readMem(0xb8c6), 0x52);
        // CB 52 02C4
        gbc.setState(0xdd42, 0xb49d, 0x81c0, 0xfa63, 0x7f5c, 0x5284, 0x0, 0x0);
        gbc.writeMem(0xdd42, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb49d);
        EXPECT(gbc.pc(), 0xdd44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd42), 0xcb);
        EXPECT(gbc.readMem(0xdd43), 0x52);
        // CB 52 02C5
        gbc.setState(0x749e, 0xf7fc, 0x81c0, 0x74c0, 0x65ee, 0x42c, 0x0, 0x0);
        gbc.writeMem(0x749e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf7fc);
        EXPECT(gbc.pc(), 0x74a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02C6
        gbc.setState(0x2af2, 0x7a4, 0x1970, 0x4a99, 0xe41c, 0x3718, 0x0, 0x1);
        gbc.writeMem(0x2af2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7a4);
        EXPECT(gbc.pc(), 0x2af4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02C7
        gbc.setState(0xcd3, 0x2056, 0x24b0, 0x1b91, 0x896e, 0x220d, 0x1, 0x0);
        gbc.writeMem(0xcd3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2056);
        EXPECT(gbc.pc(), 0xcd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02C8
        gbc.setState(0x36f8, 0xa18e, 0x6360, 0x8970, 0x9e74, 0x257d, 0x0, 0x1);
        gbc.writeMem(0x36f8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa18e);
        EXPECT(gbc.pc(), 0x36fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02CA
        gbc.setState(0x6a80, 0x5b64, 0x1520, 0x9028, 0x829c, 0x4e11, 0x0, 0x1);
        gbc.writeMem(0x6a80, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5b64);
        EXPECT(gbc.pc(), 0x6a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02CB
        gbc.setState(0x752e, 0x62a7, 0x9ba0, 0xd12b, 0x29c2, 0x9949, 0x1, 0x1);
        gbc.writeMem(0x752e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x62a7);
        EXPECT(gbc.pc(), 0x7530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02CC
        gbc.setState(0xb802, 0xd0be, 0x6530, 0x24a9, 0x352, 0xca49, 0x1, 0x1);
        gbc.writeMem(0xb802, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd0be);
        EXPECT(gbc.pc(), 0xb804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb802), 0xcb);
        EXPECT(gbc.readMem(0xb803), 0x52);
        // CB 52 02CD
        gbc.setState(0x2874, 0x7f8a, 0x3270, 0x68d6, 0x1ec8, 0x85ec, 0x1, 0x1);
        gbc.writeMem(0x2874, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7f8a);
        EXPECT(gbc.pc(), 0x2876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02CE
        gbc.setState(0xc8d3, 0x96d3, 0x3990, 0x39d6, 0xc431, 0x626e, 0x0, 0x0);
        gbc.writeMem(0xc8d3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x96d3);
        EXPECT(gbc.pc(), 0xc8d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d3), 0xcb);
        EXPECT(gbc.readMem(0xc8d4), 0x52);
        // CB 52 02CF
        gbc.setState(0x296, 0x55ae, 0x2be0, 0xa2cc, 0x8192, 0xfd2f, 0x1, 0x0);
        gbc.writeMem(0x296, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x55ae);
        EXPECT(gbc.pc(), 0x298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02D0
        gbc.setState(0x1ec7, 0x19c9, 0xf810, 0x779c, 0x2199, 0xe7bb, 0x0, 0x0);
        gbc.writeMem(0x1ec7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x19c9);
        EXPECT(gbc.pc(), 0x1ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02D1
        gbc.setState(0x8ad2, 0x8d19, 0x38d0, 0xf952, 0x451a, 0x217d, 0x0, 0x0);
        gbc.writeMem(0x8ad2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8d19);
        EXPECT(gbc.pc(), 0x8ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad2), 0xcb);
        EXPECT(gbc.readMem(0x8ad3), 0x52);
        // CB 52 02D2
        gbc.setState(0xac3c, 0x2a7c, 0x1f30, 0x5295, 0xe66f, 0x2916, 0x1, 0x0);
        gbc.writeMem(0xac3c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x2a7c);
        EXPECT(gbc.pc(), 0xac3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac3c), 0xcb);
        EXPECT(gbc.readMem(0xac3d), 0x52);
        // CB 52 02D3
        gbc.setState(0x9491, 0x6b91, 0x5d0, 0x83c7, 0xffb4, 0xe14e, 0x0, 0x0);
        gbc.writeMem(0x9491, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6b91);
        EXPECT(gbc.pc(), 0x9493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9491), 0xcb);
        EXPECT(gbc.readMem(0x9492), 0x52);
        // CB 52 02D4
        gbc.setState(0x62d8, 0xebba, 0xe2a0, 0x91ce, 0xdd14, 0x1e96, 0x1, 0x1);
        gbc.writeMem(0x62d8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xebba);
        EXPECT(gbc.pc(), 0x62da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02D5
        gbc.setState(0x3e7c, 0x1f36, 0xe6a0, 0x77c1, 0x1dde, 0x466b, 0x0, 0x1);
        gbc.writeMem(0x3e7c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1f36);
        EXPECT(gbc.pc(), 0x3e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02D6
        gbc.setState(0x1deb, 0xe4b, 0xb460, 0xf854, 0x8d26, 0x8c5b, 0x0, 0x0);
        gbc.writeMem(0x1deb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe4b);
        EXPECT(gbc.pc(), 0x1ded);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02D7
        gbc.setState(0xe5b3, 0x48e5, 0xa9c0, 0x9f1, 0x3638, 0xb2ae, 0x1, 0x1);
        gbc.writeMem(0xe5b3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x48e5);
        EXPECT(gbc.pc(), 0xe5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b3), 0xcb);
        EXPECT(gbc.readMem(0xe5b4), 0x52);
        // CB 52 02D8
        gbc.setState(0x36a7, 0x69aa, 0xb510, 0x2c33, 0xa9cc, 0x27d7, 0x1, 0x0);
        gbc.writeMem(0x36a7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x69aa);
        EXPECT(gbc.pc(), 0x36a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02D9
        gbc.setState(0xbcf4, 0x5c3, 0x5a90, 0x4d8e, 0x58c, 0xe49f, 0x0, 0x0);
        gbc.writeMem(0xbcf4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5c3);
        EXPECT(gbc.pc(), 0xbcf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcf4), 0xcb);
        EXPECT(gbc.readMem(0xbcf5), 0x52);
        // CB 52 02DA
        gbc.setState(0x9200, 0xdf3e, 0xa020, 0xc713, 0x4151, 0xad14, 0x1, 0x0);
        gbc.writeMem(0x9200, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdf3e);
        EXPECT(gbc.pc(), 0x9202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9200), 0xcb);
        EXPECT(gbc.readMem(0x9201), 0x52);
        // CB 52 02DB
        gbc.setState(0xd070, 0x4b3b, 0x440, 0x3343, 0xd71, 0x8247, 0x1, 0x1);
        gbc.writeMem(0xd070, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4b3b);
        EXPECT(gbc.pc(), 0xd072);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd070), 0xcb);
        EXPECT(gbc.readMem(0xd071), 0x52);
        // CB 52 02DC
        gbc.setState(0xe03c, 0x5b51, 0x6f60, 0x1889, 0x995b, 0x94df, 0x1, 0x1);
        gbc.writeMem(0xe03c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5b51);
        EXPECT(gbc.pc(), 0xe03e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe03c), 0xcb);
        EXPECT(gbc.readMem(0xe03d), 0x52);
        // CB 52 02DD
        gbc.setState(0x8a1, 0x392a, 0x7b0, 0x33ed, 0x5fe, 0xf59b, 0x1, 0x0);
        gbc.writeMem(0x8a1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x392a);
        EXPECT(gbc.pc(), 0x8a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02DE
        gbc.setState(0xd881, 0x56e, 0xedf0, 0xf0ea, 0xb133, 0xd61f, 0x1, 0x0);
        gbc.writeMem(0xd881, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x56e);
        EXPECT(gbc.pc(), 0xd883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd881), 0xcb);
        EXPECT(gbc.readMem(0xd882), 0x52);
        // CB 52 02DF
        gbc.setState(0x301c, 0xf292, 0x4010, 0x515c, 0xd1b7, 0x7109, 0x1, 0x1);
        gbc.writeMem(0x301c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf292);
        EXPECT(gbc.pc(), 0x301e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02E0
        gbc.setState(0x1de, 0xc29f, 0x6680, 0x2c8b, 0x1d5, 0x4fb7, 0x0, 0x1);
        gbc.writeMem(0x1de, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc29f);
        EXPECT(gbc.pc(), 0x1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02E1
        gbc.setState(0x6bee, 0xb792, 0x9a0, 0x7c7b, 0x4401, 0xaa8a, 0x1, 0x1);
        gbc.writeMem(0x6bee, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb792);
        EXPECT(gbc.pc(), 0x6bf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02E2
        gbc.setState(0x376e, 0x6a52, 0x5b0, 0xe845, 0x90e1, 0x5fe, 0x0, 0x0);
        gbc.writeMem(0x376e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6a52);
        EXPECT(gbc.pc(), 0x3770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02E3
        gbc.setState(0x45bf, 0x2aea, 0x99e0, 0x1509, 0x7b84, 0x203e, 0x1, 0x1);
        gbc.writeMem(0x45bf, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2aea);
        EXPECT(gbc.pc(), 0x45c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02E4
        gbc.setState(0x87c, 0xde7, 0xf7f0, 0x24cf, 0xcb48, 0x80dc, 0x0, 0x1);
        gbc.writeMem(0x87c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xde7);
        EXPECT(gbc.pc(), 0x87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02E5
        gbc.setState(0x79a1, 0xe9a2, 0x5870, 0x8964, 0xf320, 0x56a7, 0x0, 0x1);
        gbc.writeMem(0x79a1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe9a2);
        EXPECT(gbc.pc(), 0x79a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02E6
        gbc.setState(0x5228, 0x881a, 0x16f0, 0x976f, 0x3ed4, 0xadad, 0x1, 0x1);
        gbc.writeMem(0x5228, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x881a);
        EXPECT(gbc.pc(), 0x522a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02E7
        gbc.setState(0xe670, 0x72c9, 0x19a0, 0xc45d, 0x398c, 0x7587, 0x1, 0x0);
        gbc.writeMem(0xe670, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x72c9);
        EXPECT(gbc.pc(), 0xe672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe670), 0xcb);
        EXPECT(gbc.readMem(0xe671), 0x52);
        // CB 52 02E8
        gbc.setState(0xc9, 0xe4e7, 0xb410, 0x728d, 0x5a59, 0xb804, 0x0, 0x0);
        gbc.writeMem(0xc9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe4e7);
        EXPECT(gbc.pc(), 0xcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02E9
        gbc.setState(0xdb4, 0x92e, 0x8200, 0x49ad, 0xf5fe, 0xa251, 0x1, 0x0);
        gbc.writeMem(0xdb4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x92e);
        EXPECT(gbc.pc(), 0xdb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02EA
        gbc.setState(0x12f7, 0xc3fe, 0x8e20, 0x37d5, 0xfa6c, 0x7366, 0x1, 0x0);
        gbc.writeMem(0x12f7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc3fe);
        EXPECT(gbc.pc(), 0x12f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02EB
        gbc.setState(0xc84c, 0x6f35, 0xb450, 0x9f0a, 0x4cd5, 0xb789, 0x1, 0x0);
        gbc.writeMem(0xc84c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6f35);
        EXPECT(gbc.pc(), 0xc84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc84c), 0xcb);
        EXPECT(gbc.readMem(0xc84d), 0x52);
        // CB 52 02EC
        gbc.setState(0xce39, 0x29ea, 0x4750, 0xa766, 0x1ba8, 0xf3ee, 0x1, 0x1);
        gbc.writeMem(0xce39, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x29ea);
        EXPECT(gbc.pc(), 0xce3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce39), 0xcb);
        EXPECT(gbc.readMem(0xce3a), 0x52);
        // CB 52 02ED
        gbc.setState(0xcab6, 0x1e7e, 0xafe0, 0x9c54, 0xc9fc, 0x9e05, 0x1, 0x0);
        gbc.writeMem(0xcab6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1e7e);
        EXPECT(gbc.pc(), 0xcab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab6), 0xcb);
        EXPECT(gbc.readMem(0xcab7), 0x52);
        // CB 52 02EE
        gbc.setState(0xa26a, 0xcc23, 0xccf0, 0x606, 0xfa7d, 0xe8bd, 0x0, 0x0);
        gbc.writeMem(0xa26a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcc23);
        EXPECT(gbc.pc(), 0xa26c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa26a), 0xcb);
        EXPECT(gbc.readMem(0xa26b), 0x52);
        // CB 52 02EF
        gbc.setState(0x3b43, 0x7031, 0x5e70, 0x3e85, 0xb182, 0xfd13, 0x1, 0x1);
        gbc.writeMem(0x3b43, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7031);
        EXPECT(gbc.pc(), 0x3b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02F0
        gbc.setState(0x71c8, 0xcd47, 0x230, 0xf8e7, 0xc8bc, 0x9786, 0x0, 0x1);
        gbc.writeMem(0x71c8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xcd47);
        EXPECT(gbc.pc(), 0x71ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02F1
        gbc.setState(0x785d, 0x74e9, 0xc850, 0x3cdb, 0x7b5, 0x7b38, 0x1, 0x1);
        gbc.writeMem(0x785d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x74e9);
        EXPECT(gbc.pc(), 0x785f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02F2
        gbc.setState(0xeead, 0x4c66, 0x7b70, 0xfb98, 0xd495, 0xae36, 0x1, 0x1);
        gbc.writeMem(0xeead, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4c66);
        EXPECT(gbc.pc(), 0xeeaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeead), 0xcb);
        EXPECT(gbc.readMem(0xeeae), 0x52);
        // CB 52 02F3
        gbc.setState(0x8695, 0x2e37, 0x5020, 0xabad, 0xf693, 0x1bba, 0x0, 0x1);
        gbc.writeMem(0x8695, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2e37);
        EXPECT(gbc.pc(), 0x8697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8695), 0xcb);
        EXPECT(gbc.readMem(0x8696), 0x52);
        // CB 52 02F4
        gbc.setState(0xe640, 0x4f68, 0x6390, 0x7b47, 0x59e4, 0x9715, 0x1, 0x1);
        gbc.writeMem(0xe640, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4f68);
        EXPECT(gbc.pc(), 0xe642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe640), 0xcb);
        EXPECT(gbc.readMem(0xe641), 0x52);
        // CB 52 02F5
        gbc.setState(0x4258, 0x6c6b, 0x5270, 0x83ab, 0x7a90, 0xe1ae, 0x1, 0x1);
        gbc.writeMem(0x4258, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6c6b);
        EXPECT(gbc.pc(), 0x425a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02F6
        gbc.setState(0x4332, 0x492b, 0xa970, 0xfa9d, 0xea20, 0x111e, 0x0, 0x1);
        gbc.writeMem(0x4332, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x492b);
        EXPECT(gbc.pc(), 0x4334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02F7
        gbc.setState(0xe6ee, 0x9cac, 0xc2c0, 0xd057, 0xfd22, 0xe0df, 0x0, 0x1);
        gbc.writeMem(0xe6ee, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9cac);
        EXPECT(gbc.pc(), 0xe6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ee), 0xcb);
        EXPECT(gbc.readMem(0xe6ef), 0x52);
        // CB 52 02F8
        gbc.setState(0x1f4, 0xd247, 0x71d0, 0x866f, 0xa549, 0x994e, 0x1, 0x1);
        gbc.writeMem(0x1f4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd247);
        EXPECT(gbc.pc(), 0x1f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02FA
        gbc.setState(0x738a, 0x456b, 0x1290, 0xf6f2, 0xd1db, 0xb062, 0x0, 0x0);
        gbc.writeMem(0x738a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x456b);
        EXPECT(gbc.pc(), 0x738c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02FB
        gbc.setState(0x68aa, 0x98b7, 0x8170, 0x86d5, 0xbd1d, 0x8f35, 0x0, 0x1);
        gbc.writeMem(0x68aa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x98b7);
        EXPECT(gbc.pc(), 0x68ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 02FC
        gbc.setState(0x6e67, 0x20c2, 0x1f60, 0xe9bf, 0x8853, 0xe884, 0x1, 0x0);
        gbc.writeMem(0x6e67, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x20c2);
        EXPECT(gbc.pc(), 0x6e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02FD
        gbc.setState(0x79ca, 0x1c13, 0x4f20, 0xa983, 0x2e61, 0xfb5, 0x0, 0x0);
        gbc.writeMem(0x79ca, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1c13);
        EXPECT(gbc.pc(), 0x79cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02FE
        gbc.setState(0x3e0e, 0xe3ab, 0xfa60, 0x3c55, 0xc392, 0xc030, 0x1, 0x0);
        gbc.writeMem(0x3e0e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe3ab);
        EXPECT(gbc.pc(), 0x3e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 02FF
        gbc.setState(0x3371, 0xa879, 0x9710, 0x1a06, 0x1c03, 0x1e9, 0x0, 0x0);
        gbc.writeMem(0x3371, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa879);
        EXPECT(gbc.pc(), 0x3373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0300
        gbc.setState(0x8357, 0x49, 0x6a20, 0xba7d, 0x8f70, 0x2002, 0x0, 0x0);
        gbc.writeMem(0x8357, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x49);
        EXPECT(gbc.pc(), 0x8359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8357), 0xcb);
        EXPECT(gbc.readMem(0x8358), 0x52);
        // CB 52 0301
        gbc.setState(0x8773, 0x1fa1, 0xf6b0, 0x76f1, 0xc063, 0x84ed, 0x1, 0x1);
        gbc.writeMem(0x8773, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1fa1);
        EXPECT(gbc.pc(), 0x8775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8773), 0xcb);
        EXPECT(gbc.readMem(0x8774), 0x52);
        // CB 52 0302
        gbc.setState(0x8dd0, 0x6fc0, 0x16e0, 0x17b, 0x9d9c, 0x2c17, 0x1, 0x0);
        gbc.writeMem(0x8dd0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6fc0);
        EXPECT(gbc.pc(), 0x8dd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd0), 0xcb);
        EXPECT(gbc.readMem(0x8dd1), 0x52);
        // CB 52 0303
        gbc.setState(0xd796, 0xd0bf, 0xd3b0, 0xba44, 0xc0da, 0x1d05, 0x1, 0x0);
        gbc.writeMem(0xd796, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd0bf);
        EXPECT(gbc.pc(), 0xd798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd796), 0xcb);
        EXPECT(gbc.readMem(0xd797), 0x52);
        // CB 52 0304
        gbc.setState(0xe8f2, 0x7149, 0xd700, 0xacf8, 0xea9b, 0xa3c8, 0x1, 0x1);
        gbc.writeMem(0xe8f2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7149);
        EXPECT(gbc.pc(), 0xe8f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8f2), 0xcb);
        EXPECT(gbc.readMem(0xe8f3), 0x52);
        // CB 52 0305
        gbc.setState(0xe11b, 0xbbff, 0xe040, 0xc27c, 0x415c, 0x8802, 0x1, 0x1);
        gbc.writeMem(0xe11b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbbff);
        EXPECT(gbc.pc(), 0xe11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe11b), 0xcb);
        EXPECT(gbc.readMem(0xe11c), 0x52);
        // CB 52 0306
        gbc.setState(0xb681, 0xb4b, 0xf3e0, 0xff56, 0x2b49, 0xf7e4, 0x1, 0x1);
        gbc.writeMem(0xb681, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb4b);
        EXPECT(gbc.pc(), 0xb683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb681), 0xcb);
        EXPECT(gbc.readMem(0xb682), 0x52);
        // CB 52 0307
        gbc.setState(0x8dfb, 0x954c, 0xe920, 0x4fd7, 0xf813, 0x512f, 0x1, 0x1);
        gbc.writeMem(0x8dfb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x954c);
        EXPECT(gbc.pc(), 0x8dfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dfb), 0xcb);
        EXPECT(gbc.readMem(0x8dfc), 0x52);
        // CB 52 0309
        gbc.setState(0xcc97, 0xe05b, 0x3780, 0x77, 0x654e, 0x30b0, 0x1, 0x1);
        gbc.writeMem(0xcc97, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe05b);
        EXPECT(gbc.pc(), 0xcc99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc97), 0xcb);
        EXPECT(gbc.readMem(0xcc98), 0x52);
        // CB 52 030B
        gbc.setState(0x1bdf, 0xfc29, 0x97f0, 0xc6b2, 0x45ec, 0x3d1a, 0x1, 0x0);
        gbc.writeMem(0x1bdf, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfc29);
        EXPECT(gbc.pc(), 0x1be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 030C
        gbc.setState(0x5c1c, 0xd274, 0xdac0, 0xf726, 0xa20d, 0xb71, 0x1, 0x0);
        gbc.writeMem(0x5c1c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd274);
        EXPECT(gbc.pc(), 0x5c1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 030D
        gbc.setState(0x72e4, 0x9c75, 0x4a30, 0x6367, 0x5f7, 0x474c, 0x1, 0x0);
        gbc.writeMem(0x72e4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9c75);
        EXPECT(gbc.pc(), 0x72e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 030E
        gbc.setState(0x816e, 0x50b2, 0x4cf0, 0xd69f, 0x27d, 0xab0e, 0x0, 0x1);
        gbc.writeMem(0x816e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x50b2);
        EXPECT(gbc.pc(), 0x8170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x816e), 0xcb);
        EXPECT(gbc.readMem(0x816f), 0x52);
        // CB 52 030F
        gbc.setState(0xee3c, 0x86eb, 0x3ee0, 0x9e1, 0x53fd, 0x6f5a, 0x0, 0x1);
        gbc.writeMem(0xee3c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x86eb);
        EXPECT(gbc.pc(), 0xee3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee3c), 0xcb);
        EXPECT(gbc.readMem(0xee3d), 0x52);
        // CB 52 0310
        gbc.setState(0xd203, 0xf0bd, 0xdb40, 0x382e, 0x108a, 0xb687, 0x0, 0x1);
        gbc.writeMem(0xd203, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf0bd);
        EXPECT(gbc.pc(), 0xd205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd203), 0xcb);
        EXPECT(gbc.readMem(0xd204), 0x52);
        // CB 52 0311
        gbc.setState(0x87ec, 0x1cc4, 0x2350, 0xa64, 0x1c22, 0x7e8c, 0x0, 0x1);
        gbc.writeMem(0x87ec, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1cc4);
        EXPECT(gbc.pc(), 0x87ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ec), 0xcb);
        EXPECT(gbc.readMem(0x87ed), 0x52);
        // CB 52 0313
        gbc.setState(0xe168, 0xeb0b, 0x38b0, 0x3474, 0x5d5a, 0x6c19, 0x0, 0x1);
        gbc.writeMem(0xe168, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xeb0b);
        EXPECT(gbc.pc(), 0xe16a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe168), 0xcb);
        EXPECT(gbc.readMem(0xe169), 0x52);
        // CB 52 0314
        gbc.setState(0x9796, 0xb7d5, 0x67d0, 0x8890, 0x62c9, 0x7c81, 0x0, 0x1);
        gbc.writeMem(0x9796, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb7d5);
        EXPECT(gbc.pc(), 0x9798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9796), 0xcb);
        EXPECT(gbc.readMem(0x9797), 0x52);
        // CB 52 0315
        gbc.setState(0x5d0f, 0xe2cb, 0x4dc0, 0x9843, 0xfd27, 0x17fd, 0x0, 0x0);
        gbc.writeMem(0x5d0f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe2cb);
        EXPECT(gbc.pc(), 0x5d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0316
        gbc.setState(0x9f14, 0x1f16, 0x8920, 0x495c, 0x88da, 0xb731, 0x1, 0x1);
        gbc.writeMem(0x9f14, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1f16);
        EXPECT(gbc.pc(), 0x9f16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f14), 0xcb);
        EXPECT(gbc.readMem(0x9f15), 0x52);
        // CB 52 0317
        gbc.setState(0x4009, 0xe40f, 0xc000, 0xbddb, 0xefc6, 0xa324, 0x1, 0x1);
        gbc.writeMem(0x4009, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe40f);
        EXPECT(gbc.pc(), 0x400b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0318
        gbc.setState(0xce86, 0x66e6, 0x8a10, 0x3a6a, 0x8fe, 0x30af, 0x1, 0x1);
        gbc.writeMem(0xce86, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x66e6);
        EXPECT(gbc.pc(), 0xce88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce86), 0xcb);
        EXPECT(gbc.readMem(0xce87), 0x52);
        // CB 52 0319
        gbc.setState(0x3410, 0xf12a, 0xe3e0, 0xb681, 0x278c, 0xc346, 0x0, 0x1);
        gbc.writeMem(0x3410, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf12a);
        EXPECT(gbc.pc(), 0x3412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 031A
        gbc.setState(0x2b8a, 0xff36, 0x39a0, 0x3ed9, 0xd647, 0xe6c6, 0x0, 0x1);
        gbc.writeMem(0x2b8a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xff36);
        EXPECT(gbc.pc(), 0x2b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 031B
        gbc.setState(0x87b9, 0x4b1b, 0x86f0, 0x235d, 0x4352, 0x54a1, 0x1, 0x1);
        gbc.writeMem(0x87b9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4b1b);
        EXPECT(gbc.pc(), 0x87bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87b9), 0xcb);
        EXPECT(gbc.readMem(0x87ba), 0x52);
        // CB 52 031C
        gbc.setState(0x2853, 0x57f0, 0x2210, 0xa3be, 0x99cc, 0xc88f, 0x0, 0x0);
        gbc.writeMem(0x2853, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x57f0);
        EXPECT(gbc.pc(), 0x2855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 031D
        gbc.setState(0xa679, 0x52d9, 0x9d10, 0x2836, 0x8a97, 0x8464, 0x0, 0x0);
        gbc.writeMem(0xa679, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x52d9);
        EXPECT(gbc.pc(), 0xa67b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa679), 0xcb);
        EXPECT(gbc.readMem(0xa67a), 0x52);
        // CB 52 031E
        gbc.setState(0x131b, 0x16ae, 0x9310, 0x3b67, 0x3ae1, 0xc45, 0x0, 0x0);
        gbc.writeMem(0x131b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x16ae);
        EXPECT(gbc.pc(), 0x131d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 031F
        gbc.setState(0x52a4, 0x4a61, 0x63c0, 0x940c, 0x79a, 0xe0e7, 0x1, 0x1);
        gbc.writeMem(0x52a4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4a61);
        EXPECT(gbc.pc(), 0x52a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0320
        gbc.setState(0x898b, 0xbd85, 0x3c00, 0x8545, 0x5a98, 0x6371, 0x1, 0x1);
        gbc.writeMem(0x898b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbd85);
        EXPECT(gbc.pc(), 0x898d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x898b), 0xcb);
        EXPECT(gbc.readMem(0x898c), 0x52);
        // CB 52 0321
        gbc.setState(0xacee, 0xcdca, 0xa110, 0x9e2a, 0x5b32, 0xd419, 0x0, 0x1);
        gbc.writeMem(0xacee, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcdca);
        EXPECT(gbc.pc(), 0xacf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacee), 0xcb);
        EXPECT(gbc.readMem(0xacef), 0x52);
        // CB 52 0323
        gbc.setState(0xbd59, 0x7b9, 0xd440, 0xa7f1, 0x7780, 0x72b1, 0x0, 0x0);
        gbc.writeMem(0xbd59, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7b9);
        EXPECT(gbc.pc(), 0xbd5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd59), 0xcb);
        EXPECT(gbc.readMem(0xbd5a), 0x52);
        // CB 52 0324
        gbc.setState(0xd728, 0xc297, 0x9be0, 0x92bd, 0xa01d, 0x43bd, 0x0, 0x1);
        gbc.writeMem(0xd728, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc297);
        EXPECT(gbc.pc(), 0xd72a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd728), 0xcb);
        EXPECT(gbc.readMem(0xd729), 0x52);
        // CB 52 0325
        gbc.setState(0x261d, 0xc72d, 0x7380, 0x323c, 0xf080, 0x4a54, 0x1, 0x0);
        gbc.writeMem(0x261d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc72d);
        EXPECT(gbc.pc(), 0x261f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0326
        gbc.setState(0xecf1, 0x103d, 0x6de0, 0x780b, 0x3254, 0x7f5a, 0x0, 0x0);
        gbc.writeMem(0xecf1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x103d);
        EXPECT(gbc.pc(), 0xecf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecf1), 0xcb);
        EXPECT(gbc.readMem(0xecf2), 0x52);
        // CB 52 0327
        gbc.setState(0x6a91, 0xea1c, 0xdf00, 0xbbba, 0xb64e, 0x2dd9, 0x1, 0x1);
        gbc.writeMem(0x6a91, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xea1c);
        EXPECT(gbc.pc(), 0x6a93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0328
        gbc.setState(0x386e, 0x3de6, 0x78e0, 0x9632, 0x8d10, 0xf4f7, 0x1, 0x1);
        gbc.writeMem(0x386e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3de6);
        EXPECT(gbc.pc(), 0x3870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0329
        gbc.setState(0x9c9f, 0x8e9a, 0x4ca0, 0xafa2, 0x2679, 0xa7ea, 0x1, 0x1);
        gbc.writeMem(0x9c9f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8e9a);
        EXPECT(gbc.pc(), 0x9ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c9f), 0xcb);
        EXPECT(gbc.readMem(0x9ca0), 0x52);
        // CB 52 032A
        gbc.setState(0xe85, 0x7205, 0xa500, 0xea65, 0x4014, 0x196a, 0x0, 0x0);
        gbc.writeMem(0xe85, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7205);
        EXPECT(gbc.pc(), 0xe87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 032B
        gbc.setState(0xebbb, 0x5b09, 0x27c0, 0xda17, 0xa520, 0xf049, 0x1, 0x1);
        gbc.writeMem(0xebbb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5b09);
        EXPECT(gbc.pc(), 0xebbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebbb), 0xcb);
        EXPECT(gbc.readMem(0xebbc), 0x52);
        // CB 52 032C
        gbc.setState(0xef12, 0xfab7, 0xc740, 0x9a3f, 0x8b2, 0xf319, 0x0, 0x1);
        gbc.writeMem(0xef12, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfab7);
        EXPECT(gbc.pc(), 0xef14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef12), 0xcb);
        EXPECT(gbc.readMem(0xef13), 0x52);
        // CB 52 032D
        gbc.setState(0xdc52, 0xc396, 0x38e0, 0x15c5, 0x55cb, 0xb1ab, 0x0, 0x1);
        gbc.writeMem(0xdc52, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc396);
        EXPECT(gbc.pc(), 0xdc54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc52), 0xcb);
        EXPECT(gbc.readMem(0xdc53), 0x52);
        // CB 52 032E
        gbc.setState(0x3c3e, 0x33f1, 0x2620, 0xe416, 0xe7f8, 0xb832, 0x1, 0x1);
        gbc.writeMem(0x3c3e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x33f1);
        EXPECT(gbc.pc(), 0x3c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 032F
        gbc.setState(0xa6c9, 0x60e, 0x33e0, 0x6a97, 0xe695, 0x438f, 0x1, 0x1);
        gbc.writeMem(0xa6c9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x60e);
        EXPECT(gbc.pc(), 0xa6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c9), 0xcb);
        EXPECT(gbc.readMem(0xa6ca), 0x52);
        // CB 52 0330
        gbc.setState(0x1506, 0x5f23, 0x5b90, 0x3094, 0x5561, 0x787a, 0x1, 0x0);
        gbc.writeMem(0x1506, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5f23);
        EXPECT(gbc.pc(), 0x1508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0331
        gbc.setState(0x32d7, 0x9277, 0xb900, 0xc523, 0x8783, 0x3b76, 0x1, 0x1);
        gbc.writeMem(0x32d7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9277);
        EXPECT(gbc.pc(), 0x32d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0332
        gbc.setState(0x2b51, 0xad16, 0x4f00, 0x9884, 0x883c, 0x671d, 0x0, 0x0);
        gbc.writeMem(0x2b51, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xad16);
        EXPECT(gbc.pc(), 0x2b53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0333
        gbc.setState(0xc0a9, 0xac1e, 0x3b0, 0x7f06, 0xfba6, 0x12e8, 0x0, 0x0);
        gbc.writeMem(0xc0a9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xac1e);
        EXPECT(gbc.pc(), 0xc0ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0a9), 0xcb);
        EXPECT(gbc.readMem(0xc0aa), 0x52);
        // CB 52 0334
        gbc.setState(0x958b, 0x6524, 0x6250, 0x7ebf, 0xb162, 0x2628, 0x0, 0x1);
        gbc.writeMem(0x958b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6524);
        EXPECT(gbc.pc(), 0x958d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x958b), 0xcb);
        EXPECT(gbc.readMem(0x958c), 0x52);
        // CB 52 0335
        gbc.setState(0xaf7, 0x97f3, 0x23c0, 0x2791, 0x41e9, 0x4aec, 0x0, 0x0);
        gbc.writeMem(0xaf7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x97f3);
        EXPECT(gbc.pc(), 0xaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0336
        gbc.setState(0xe06e, 0xe9b0, 0xba50, 0xd2b5, 0x3cbf, 0x88c9, 0x0, 0x1);
        gbc.writeMem(0xe06e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe9b0);
        EXPECT(gbc.pc(), 0xe070);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe06e), 0xcb);
        EXPECT(gbc.readMem(0xe06f), 0x52);
        // CB 52 0337
        gbc.setState(0xaaa7, 0xd8f1, 0x8bc0, 0xe196, 0x2764, 0x7d08, 0x0, 0x1);
        gbc.writeMem(0xaaa7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd8f1);
        EXPECT(gbc.pc(), 0xaaa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa7), 0xcb);
        EXPECT(gbc.readMem(0xaaa8), 0x52);
        // CB 52 0338
        gbc.setState(0xb355, 0x6caa, 0xb9c0, 0x95d3, 0xf638, 0x73b3, 0x1, 0x0);
        gbc.writeMem(0xb355, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6caa);
        EXPECT(gbc.pc(), 0xb357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb355), 0xcb);
        EXPECT(gbc.readMem(0xb356), 0x52);
        // CB 52 0339
        gbc.setState(0x4b1c, 0xf0a4, 0xa230, 0x7cfe, 0xcddc, 0xa35c, 0x1, 0x0);
        gbc.writeMem(0x4b1c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf0a4);
        EXPECT(gbc.pc(), 0x4b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 033A
        gbc.setState(0x82d7, 0x232c, 0x1450, 0xbde8, 0x7dc4, 0x65d3, 0x0, 0x1);
        gbc.writeMem(0x82d7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x232c);
        EXPECT(gbc.pc(), 0x82d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d7), 0xcb);
        EXPECT(gbc.readMem(0x82d8), 0x52);
        // CB 52 033B
        gbc.setState(0x97b4, 0xfb4d, 0x64b0, 0x2592, 0xeb8d, 0x1a56, 0x0, 0x0);
        gbc.writeMem(0x97b4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfb4d);
        EXPECT(gbc.pc(), 0x97b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b4), 0xcb);
        EXPECT(gbc.readMem(0x97b5), 0x52);
        // CB 52 033C
        gbc.setState(0x50ac, 0xaee, 0x6730, 0xf1b3, 0x85a3, 0x6eca, 0x1, 0x0);
        gbc.writeMem(0x50ac, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xaee);
        EXPECT(gbc.pc(), 0x50ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 033D
        gbc.setState(0xb3b7, 0x21c4, 0x140, 0xcdaa, 0x920f, 0x8ea6, 0x1, 0x0);
        gbc.writeMem(0xb3b7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x21c4);
        EXPECT(gbc.pc(), 0xb3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3b7), 0xcb);
        EXPECT(gbc.readMem(0xb3b8), 0x52);
        // CB 52 033E
        gbc.setState(0x119f, 0x5dd2, 0x8090, 0x80a1, 0x44e1, 0x8f71, 0x0, 0x0);
        gbc.writeMem(0x119f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5dd2);
        EXPECT(gbc.pc(), 0x11a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 033F
        gbc.setState(0x1b1e, 0x73b, 0xe200, 0x96a8, 0x3a25, 0x1a73, 0x0, 0x0);
        gbc.writeMem(0x1b1e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x73b);
        EXPECT(gbc.pc(), 0x1b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0340
        gbc.setState(0xe79, 0xcda3, 0x4990, 0xd12d, 0x95de, 0x41e1, 0x0, 0x0);
        gbc.writeMem(0xe79, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xcda3);
        EXPECT(gbc.pc(), 0xe7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0341
        gbc.setState(0x9679, 0x1e9d, 0xb6a0, 0x961a, 0x7d76, 0xe37, 0x0, 0x0);
        gbc.writeMem(0x9679, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1e9d);
        EXPECT(gbc.pc(), 0x967b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9679), 0xcb);
        EXPECT(gbc.readMem(0x967a), 0x52);
        // CB 52 0343
        gbc.setState(0x4b99, 0x35e3, 0xf770, 0x701e, 0xb6d1, 0x40ea, 0x1, 0x0);
        gbc.writeMem(0x4b99, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x35e3);
        EXPECT(gbc.pc(), 0x4b9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0344
        gbc.setState(0x9e81, 0x563a, 0x7380, 0xc522, 0xb3a3, 0xb1bc, 0x1, 0x0);
        gbc.writeMem(0x9e81, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x563a);
        EXPECT(gbc.pc(), 0x9e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e81), 0xcb);
        EXPECT(gbc.readMem(0x9e82), 0x52);
        // CB 52 0345
        gbc.setState(0x47ef, 0x3b0e, 0x8d0, 0x8d2d, 0xc1ff, 0x324, 0x0, 0x0);
        gbc.writeMem(0x47ef, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3b0e);
        EXPECT(gbc.pc(), 0x47f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0346
        gbc.setState(0x8b4a, 0xe75, 0x8c50, 0x7ed7, 0xdc63, 0x3be5, 0x0, 0x1);
        gbc.writeMem(0x8b4a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe75);
        EXPECT(gbc.pc(), 0x8b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b4a), 0xcb);
        EXPECT(gbc.readMem(0x8b4b), 0x52);
        // CB 52 0347
        gbc.setState(0x8701, 0x6819, 0x7050, 0x2d9b, 0x4bb7, 0xabf1, 0x1, 0x1);
        gbc.writeMem(0x8701, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6819);
        EXPECT(gbc.pc(), 0x8703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8701), 0xcb);
        EXPECT(gbc.readMem(0x8702), 0x52);
        // CB 52 0348
        gbc.setState(0xcd6c, 0x8768, 0xfef0, 0xa171, 0x12a4, 0x5ea7, 0x1, 0x0);
        gbc.writeMem(0xcd6c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8768);
        EXPECT(gbc.pc(), 0xcd6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd6c), 0xcb);
        EXPECT(gbc.readMem(0xcd6d), 0x52);
        // CB 52 0349
        gbc.setState(0xa13e, 0xf0e4, 0x9fd0, 0x7110, 0xbe4, 0x75ed, 0x0, 0x1);
        gbc.writeMem(0xa13e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf0e4);
        EXPECT(gbc.pc(), 0xa140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa13e), 0xcb);
        EXPECT(gbc.readMem(0xa13f), 0x52);
        // CB 52 034A
        gbc.setState(0x4271, 0x37c6, 0x940, 0x6b5f, 0xd92e, 0x4686, 0x1, 0x1);
        gbc.writeMem(0x4271, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x37c6);
        EXPECT(gbc.pc(), 0x4273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 034B
        gbc.setState(0xd79b, 0x5949, 0x63a0, 0x66a7, 0xf730, 0x5a62, 0x1, 0x1);
        gbc.writeMem(0xd79b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5949);
        EXPECT(gbc.pc(), 0xd79d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79b), 0xcb);
        EXPECT(gbc.readMem(0xd79c), 0x52);
        // CB 52 034C
        gbc.setState(0xe25d, 0x24bb, 0xa2f0, 0x615d, 0x59a9, 0xc54, 0x0, 0x1);
        gbc.writeMem(0xe25d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x24bb);
        EXPECT(gbc.pc(), 0xe25f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe25d), 0xcb);
        EXPECT(gbc.readMem(0xe25e), 0x52);
        // CB 52 034D
        gbc.setState(0x128d, 0xa5da, 0x9500, 0xad88, 0x8098, 0xae88, 0x0, 0x0);
        gbc.writeMem(0x128d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa5da);
        EXPECT(gbc.pc(), 0x128f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 034F
        gbc.setState(0xec2c, 0x799, 0x8c30, 0x64de, 0xd145, 0x87de, 0x1, 0x0);
        gbc.writeMem(0xec2c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x799);
        EXPECT(gbc.pc(), 0xec2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2c), 0xcb);
        EXPECT(gbc.readMem(0xec2d), 0x52);
        // CB 52 0350
        gbc.setState(0x515, 0xb779, 0x6510, 0xceea, 0xa7bd, 0xbba9, 0x1, 0x1);
        gbc.writeMem(0x515, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xb779);
        EXPECT(gbc.pc(), 0x517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0351
        gbc.setState(0x148d, 0xf1a8, 0x2b70, 0x93a4, 0x6cc3, 0x3550, 0x1, 0x1);
        gbc.writeMem(0x148d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf1a8);
        EXPECT(gbc.pc(), 0x148f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0352
        gbc.setState(0x1d0b, 0xcf0b, 0xcdf0, 0x6486, 0xdcde, 0x19a9, 0x0, 0x1);
        gbc.writeMem(0x1d0b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xcf0b);
        EXPECT(gbc.pc(), 0x1d0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0353
        gbc.setState(0x4479, 0x6609, 0x8d40, 0xfccf, 0xbe92, 0x56de, 0x0, 0x0);
        gbc.writeMem(0x4479, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6609);
        EXPECT(gbc.pc(), 0x447b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0354
        gbc.setState(0xaf84, 0xf94, 0x9880, 0x7733, 0x88c1, 0x4443, 0x0, 0x1);
        gbc.writeMem(0xaf84, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf94);
        EXPECT(gbc.pc(), 0xaf86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf84), 0xcb);
        EXPECT(gbc.readMem(0xaf85), 0x52);
        // CB 52 0355
        gbc.setState(0x87f7, 0x5bba, 0xa270, 0xc61c, 0x6ba3, 0x8f4f, 0x1, 0x1);
        gbc.writeMem(0x87f7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5bba);
        EXPECT(gbc.pc(), 0x87f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f7), 0xcb);
        EXPECT(gbc.readMem(0x87f8), 0x52);
        // CB 52 0356
        gbc.setState(0xb46c, 0x30cd, 0x17c0, 0x5365, 0x6c33, 0x98bf, 0x0, 0x0);
        gbc.writeMem(0xb46c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x30cd);
        EXPECT(gbc.pc(), 0xb46e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb46c), 0xcb);
        EXPECT(gbc.readMem(0xb46d), 0x52);
        // CB 52 0357
        gbc.setState(0x1fe3, 0xeb84, 0xc3a0, 0xc96d, 0xc220, 0x5fb5, 0x0, 0x0);
        gbc.writeMem(0x1fe3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xeb84);
        EXPECT(gbc.pc(), 0x1fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0358
        gbc.setState(0x390d, 0x73ab, 0xfd90, 0x4f7, 0xdef4, 0x6f23, 0x1, 0x0);
        gbc.writeMem(0x390d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x73ab);
        EXPECT(gbc.pc(), 0x390f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0359
        gbc.setState(0xb093, 0xa75e, 0xb280, 0x5866, 0xdb05, 0xcd81, 0x1, 0x1);
        gbc.writeMem(0xb093, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa75e);
        EXPECT(gbc.pc(), 0xb095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb093), 0xcb);
        EXPECT(gbc.readMem(0xb094), 0x52);
        // CB 52 035A
        gbc.setState(0x59fb, 0xb54c, 0x3ec0, 0xa2f8, 0xbdca, 0x7b9b, 0x1, 0x1);
        gbc.writeMem(0x59fb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb54c);
        EXPECT(gbc.pc(), 0x59fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 035B
        gbc.setState(0x8180, 0x39d6, 0x3a60, 0xdcef, 0xd674, 0x9c95, 0x1, 0x0);
        gbc.writeMem(0x8180, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x39d6);
        EXPECT(gbc.pc(), 0x8182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8180), 0xcb);
        EXPECT(gbc.readMem(0x8181), 0x52);
        // CB 52 035C
        gbc.setState(0x7a46, 0x905c, 0x73b0, 0x89fb, 0xd6ea, 0xac8e, 0x0, 0x1);
        gbc.writeMem(0x7a46, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x905c);
        EXPECT(gbc.pc(), 0x7a48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 035D
        gbc.setState(0x2098, 0xc391, 0xfbd0, 0x4fad, 0xe0f7, 0x8bc6, 0x0, 0x1);
        gbc.writeMem(0x2098, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc391);
        EXPECT(gbc.pc(), 0x209a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 035E
        gbc.setState(0x5379, 0x5738, 0x4790, 0xc95, 0x7a8d, 0x2e52, 0x1, 0x0);
        gbc.writeMem(0x5379, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5738);
        EXPECT(gbc.pc(), 0x537b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 035F
        gbc.setState(0xa714, 0xcd06, 0xf990, 0x46bb, 0x4890, 0x11b0, 0x1, 0x1);
        gbc.writeMem(0xa714, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcd06);
        EXPECT(gbc.pc(), 0xa716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa714), 0xcb);
        EXPECT(gbc.readMem(0xa715), 0x52);
        // CB 52 0360
        gbc.setState(0xee7a, 0xb1a8, 0xdf80, 0x5696, 0x7a2e, 0x2a08, 0x1, 0x1);
        gbc.writeMem(0xee7a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb1a8);
        EXPECT(gbc.pc(), 0xee7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee7a), 0xcb);
        EXPECT(gbc.readMem(0xee7b), 0x52);
        // CB 52 0361
        gbc.setState(0x45a9, 0x23a4, 0x2b40, 0xb5d, 0x5954, 0x5bd0, 0x1, 0x0);
        gbc.writeMem(0x45a9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x23a4);
        EXPECT(gbc.pc(), 0x45ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0364
        gbc.setState(0xa467, 0x57f4, 0xa470, 0xeddd, 0x9c3b, 0x67c4, 0x1, 0x0);
        gbc.writeMem(0xa467, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x57f4);
        EXPECT(gbc.pc(), 0xa469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa467), 0xcb);
        EXPECT(gbc.readMem(0xa468), 0x52);
        // CB 52 0365
        gbc.setState(0xbedc, 0xf80d, 0xcf10, 0xf024, 0x79c6, 0x6c7d, 0x0, 0x0);
        gbc.writeMem(0xbedc, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf80d);
        EXPECT(gbc.pc(), 0xbede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbedc), 0xcb);
        EXPECT(gbc.readMem(0xbedd), 0x52);
        // CB 52 0366
        gbc.setState(0x11aa, 0x8c94, 0x1950, 0xc9a5, 0x8420, 0xd7b4, 0x1, 0x0);
        gbc.writeMem(0x11aa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8c94);
        EXPECT(gbc.pc(), 0x11ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0367
        gbc.setState(0xc63d, 0xd889, 0x8dd0, 0xe61f, 0xacf3, 0xe1b0, 0x0, 0x1);
        gbc.writeMem(0xc63d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd889);
        EXPECT(gbc.pc(), 0xc63f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc63d), 0xcb);
        EXPECT(gbc.readMem(0xc63e), 0x52);
        // CB 52 0368
        gbc.setState(0xa1db, 0xd5a, 0x1770, 0x55fa, 0x9098, 0xb145, 0x0, 0x0);
        gbc.writeMem(0xa1db, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd5a);
        EXPECT(gbc.pc(), 0xa1dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1db), 0xcb);
        EXPECT(gbc.readMem(0xa1dc), 0x52);
        // CB 52 0369
        gbc.setState(0x81ce, 0xbedd, 0x3ac0, 0xe264, 0xd68b, 0x8fe8, 0x1, 0x0);
        gbc.writeMem(0x81ce, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbedd);
        EXPECT(gbc.pc(), 0x81d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ce), 0xcb);
        EXPECT(gbc.readMem(0x81cf), 0x52);
        // CB 52 036A
        gbc.setState(0x61d4, 0x319d, 0x7c60, 0x1a33, 0xa5e6, 0x44fc, 0x1, 0x0);
        gbc.writeMem(0x61d4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x319d);
        EXPECT(gbc.pc(), 0x61d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 036B
        gbc.setState(0xe0e6, 0x4b4b, 0x5da0, 0x5693, 0x38ab, 0x4a14, 0x1, 0x0);
        gbc.writeMem(0xe0e6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4b4b);
        EXPECT(gbc.pc(), 0xe0e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e6), 0xcb);
        EXPECT(gbc.readMem(0xe0e7), 0x52);
        // CB 52 036C
        gbc.setState(0x7290, 0x5436, 0xa780, 0x70dd, 0xb5cc, 0xe82d, 0x0, 0x1);
        gbc.writeMem(0x7290, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5436);
        EXPECT(gbc.pc(), 0x7292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 036D
        gbc.setState(0xc7e7, 0x1df8, 0x920, 0xf498, 0xafbc, 0x7d9f, 0x0, 0x1);
        gbc.writeMem(0xc7e7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1df8);
        EXPECT(gbc.pc(), 0xc7e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e7), 0xcb);
        EXPECT(gbc.readMem(0xc7e8), 0x52);
        // CB 52 036E
        gbc.setState(0xe643, 0xeb63, 0x2bf0, 0xc67f, 0x6e01, 0x48a9, 0x1, 0x1);
        gbc.writeMem(0xe643, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xeb63);
        EXPECT(gbc.pc(), 0xe645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe643), 0xcb);
        EXPECT(gbc.readMem(0xe644), 0x52);
        // CB 52 036F
        gbc.setState(0xe8fd, 0xa7db, 0x48d0, 0x442e, 0x798d, 0xf8d, 0x0, 0x1);
        gbc.writeMem(0xe8fd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa7db);
        EXPECT(gbc.pc(), 0xe8ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8fd), 0xcb);
        EXPECT(gbc.readMem(0xe8fe), 0x52);
        // CB 52 0370
        gbc.setState(0xad0e, 0x19ae, 0x170, 0x9aed, 0xdf81, 0xcba5, 0x1, 0x0);
        gbc.writeMem(0xad0e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x19ae);
        EXPECT(gbc.pc(), 0xad10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad0e), 0xcb);
        EXPECT(gbc.readMem(0xad0f), 0x52);
        // CB 52 0371
        gbc.setState(0x922b, 0xf682, 0x48e0, 0x9ba3, 0x283e, 0x9c75, 0x1, 0x0);
        gbc.writeMem(0x922b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf682);
        EXPECT(gbc.pc(), 0x922d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x922b), 0xcb);
        EXPECT(gbc.readMem(0x922c), 0x52);
        // CB 52 0373
        gbc.setState(0x1c96, 0xeeb, 0x4420, 0x1b87, 0xc7ce, 0xfebb, 0x0, 0x0);
        gbc.writeMem(0x1c96, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xeeb);
        EXPECT(gbc.pc(), 0x1c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0374
        gbc.setState(0x27f2, 0xbbf9, 0x77d0, 0x8c8e, 0x56b7, 0x15ce, 0x1, 0x1);
        gbc.writeMem(0x27f2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbbf9);
        EXPECT(gbc.pc(), 0x27f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0375
        gbc.setState(0xc1ed, 0xaa9f, 0xfbf0, 0x4b7f, 0x449d, 0xc46e, 0x0, 0x1);
        gbc.writeMem(0xc1ed, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xaa9f);
        EXPECT(gbc.pc(), 0xc1ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ed), 0xcb);
        EXPECT(gbc.readMem(0xc1ee), 0x52);
        // CB 52 0376
        gbc.setState(0x6651, 0x5af7, 0x30f0, 0xcbab, 0x2903, 0x9764, 0x0, 0x0);
        gbc.writeMem(0x6651, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5af7);
        EXPECT(gbc.pc(), 0x6653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0377
        gbc.setState(0x1126, 0x2b7c, 0xcb80, 0x6b82, 0xadb4, 0xf056, 0x1, 0x1);
        gbc.writeMem(0x1126, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2b7c);
        EXPECT(gbc.pc(), 0x1128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0378
        gbc.setState(0x9d25, 0xcbda, 0x42b0, 0x5ccf, 0x219f, 0x89df, 0x1, 0x0);
        gbc.writeMem(0x9d25, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xcbda);
        EXPECT(gbc.pc(), 0x9d27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d25), 0xcb);
        EXPECT(gbc.readMem(0x9d26), 0x52);
        // CB 52 0379
        gbc.setState(0x861, 0x6bd1, 0x5930, 0xef1b, 0x42b1, 0x132c, 0x1, 0x1);
        gbc.writeMem(0x861, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6bd1);
        EXPECT(gbc.pc(), 0x863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 037A
        gbc.setState(0xf7, 0xa6f5, 0xf730, 0x9bd5, 0xdb24, 0xf471, 0x1, 0x0);
        gbc.writeMem(0xf7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa6f5);
        EXPECT(gbc.pc(), 0xf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 037C
        gbc.setState(0xb3c4, 0x23ec, 0x7750, 0xbc9a, 0xe2ca, 0xdd14, 0x0, 0x0);
        gbc.writeMem(0xb3c4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x23ec);
        EXPECT(gbc.pc(), 0xb3c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c4), 0xcb);
        EXPECT(gbc.readMem(0xb3c5), 0x52);
        // CB 52 037D
        gbc.setState(0xdfd9, 0xa1d7, 0xffc0, 0x8956, 0x971b, 0x28b6, 0x0, 0x1);
        gbc.writeMem(0xdfd9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa1d7);
        EXPECT(gbc.pc(), 0xdfdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfd9), 0xcb);
        EXPECT(gbc.readMem(0xdfda), 0x52);
        // CB 52 037E
        gbc.setState(0xb10c, 0x41a7, 0x76e0, 0x11ea, 0x1d2f, 0xaeb9, 0x0, 0x0);
        gbc.writeMem(0xb10c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x41a7);
        EXPECT(gbc.pc(), 0xb10e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb10c), 0xcb);
        EXPECT(gbc.readMem(0xb10d), 0x52);
        // CB 52 037F
        gbc.setState(0xa569, 0x4760, 0x6400, 0xf218, 0xb9c4, 0x7238, 0x1, 0x0);
        gbc.writeMem(0xa569, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4760);
        EXPECT(gbc.pc(), 0xa56b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa569), 0xcb);
        EXPECT(gbc.readMem(0xa56a), 0x52);
        // CB 52 0380
        gbc.setState(0x523f, 0x64b, 0xa730, 0xe1cd, 0x20b, 0x9ef4, 0x1, 0x1);
        gbc.writeMem(0x523f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x64b);
        EXPECT(gbc.pc(), 0x5241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0381
        gbc.setState(0x2fb4, 0xfaf0, 0xafb0, 0x5c7e, 0x4f03, 0x4f5, 0x0, 0x0);
        gbc.writeMem(0x2fb4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfaf0);
        EXPECT(gbc.pc(), 0x2fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0382
        gbc.setState(0xad57, 0x33e0, 0xb060, 0x6525, 0xafe6, 0xd1f3, 0x1, 0x1);
        gbc.writeMem(0xad57, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x33e0);
        EXPECT(gbc.pc(), 0xad59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad57), 0xcb);
        EXPECT(gbc.readMem(0xad58), 0x52);
        // CB 52 0383
        gbc.setState(0x1dba, 0x403, 0xb0e0, 0x9c5f, 0xdb27, 0xa420, 0x1, 0x0);
        gbc.writeMem(0x1dba, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x403);
        EXPECT(gbc.pc(), 0x1dbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0384
        gbc.setState(0xcc, 0x1373, 0x2450, 0x25ee, 0x751, 0x23e8, 0x0, 0x0);
        gbc.writeMem(0xcc, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1373);
        EXPECT(gbc.pc(), 0xce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0386
        gbc.setState(0xb901, 0x4d2b, 0xf4d0, 0x2832, 0x420a, 0x5fc9, 0x1, 0x0);
        gbc.writeMem(0xb901, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4d2b);
        EXPECT(gbc.pc(), 0xb903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb901), 0xcb);
        EXPECT(gbc.readMem(0xb902), 0x52);
        // CB 52 0387
        gbc.setState(0xed2f, 0x4828, 0x9990, 0x79f8, 0xe34f, 0x651b, 0x1, 0x0);
        gbc.writeMem(0xed2f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4828);
        EXPECT(gbc.pc(), 0xed31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed2f), 0xcb);
        EXPECT(gbc.readMem(0xed30), 0x52);
        // CB 52 0388
        gbc.setState(0x43f, 0xfcb2, 0xfbf0, 0xc04c, 0x7634, 0xd0ef, 0x1, 0x0);
        gbc.writeMem(0x43f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xfcb2);
        EXPECT(gbc.pc(), 0x441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0389
        gbc.setState(0x1fe8, 0x1e75, 0x55d0, 0x4b28, 0x61e2, 0x6bda, 0x1, 0x1);
        gbc.writeMem(0x1fe8, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1e75);
        EXPECT(gbc.pc(), 0x1fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 038B
        gbc.setState(0x4eb1, 0x1f0f, 0x5490, 0x3243, 0xe361, 0x7104, 0x0, 0x0);
        gbc.writeMem(0x4eb1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1f0f);
        EXPECT(gbc.pc(), 0x4eb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 038C
        gbc.setState(0xc2aa, 0xadfc, 0x7bd0, 0x2070, 0xf3f5, 0x87a6, 0x0, 0x1);
        gbc.writeMem(0xc2aa, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xadfc);
        EXPECT(gbc.pc(), 0xc2ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2aa), 0xcb);
        EXPECT(gbc.readMem(0xc2ab), 0x52);
        // CB 52 038D
        gbc.setState(0x1cd6, 0x492a, 0xd730, 0x7204, 0x5f8e, 0xc897, 0x0, 0x1);
        gbc.writeMem(0x1cd6, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x492a);
        EXPECT(gbc.pc(), 0x1cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 038E
        gbc.setState(0x1f50, 0xf2f1, 0x8220, 0xfa27, 0xab88, 0x9914, 0x1, 0x0);
        gbc.writeMem(0x1f50, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf2f1);
        EXPECT(gbc.pc(), 0x1f52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 038F
        gbc.setState(0xe87c, 0xc8de, 0x96d0, 0x442f, 0x7b0e, 0x2049, 0x0, 0x1);
        gbc.writeMem(0xe87c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc8de);
        EXPECT(gbc.pc(), 0xe87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe87c), 0xcb);
        EXPECT(gbc.readMem(0xe87d), 0x52);
        // CB 52 0390
        gbc.setState(0x64e9, 0x22cc, 0xec50, 0xeb1a, 0xc52f, 0x1520, 0x0, 0x0);
        gbc.writeMem(0x64e9, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x22cc);
        EXPECT(gbc.pc(), 0x64eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0391
        gbc.setState(0xe029, 0xa4da, 0x3890, 0x6a96, 0xfbac, 0x9c5a, 0x0, 0x0);
        gbc.writeMem(0xe029, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa4da);
        EXPECT(gbc.pc(), 0xe02b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe029), 0xcb);
        EXPECT(gbc.readMem(0xe02a), 0x52);
        // CB 52 0392
        gbc.setState(0xdd89, 0xc587, 0x8280, 0x86a2, 0xc2, 0x19fa, 0x0, 0x1);
        gbc.writeMem(0xdd89, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc587);
        EXPECT(gbc.pc(), 0xdd8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd89), 0xcb);
        EXPECT(gbc.readMem(0xdd8a), 0x52);
        // CB 52 0393
        gbc.setState(0xcdee, 0x4aae, 0xc7e0, 0xd5a1, 0xd09f, 0xf6a3, 0x0, 0x1);
        gbc.writeMem(0xcdee, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4aae);
        EXPECT(gbc.pc(), 0xcdf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdee), 0xcb);
        EXPECT(gbc.readMem(0xcdef), 0x52);
        // CB 52 0394
        gbc.setState(0xee1f, 0x5800, 0x51c0, 0x473e, 0x92c2, 0x84f6, 0x1, 0x1);
        gbc.writeMem(0xee1f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5800);
        EXPECT(gbc.pc(), 0xee21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee1f), 0xcb);
        EXPECT(gbc.readMem(0xee20), 0x52);
        // CB 52 0395
        gbc.setState(0x9317, 0xbf27, 0x1c10, 0xc621, 0xe854, 0x3d, 0x0, 0x0);
        gbc.writeMem(0x9317, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbf27);
        EXPECT(gbc.pc(), 0x9319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9317), 0xcb);
        EXPECT(gbc.readMem(0x9318), 0x52);
        // CB 52 0396
        gbc.setState(0x49c1, 0xdc36, 0xb850, 0xfd0c, 0x3fd, 0x737f, 0x1, 0x1);
        gbc.writeMem(0x49c1, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdc36);
        EXPECT(gbc.pc(), 0x49c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 0397
        gbc.setState(0xb278, 0xaf48, 0x7520, 0x1cc3, 0xca94, 0x7ecb, 0x1, 0x0);
        gbc.writeMem(0xb278, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xaf48);
        EXPECT(gbc.pc(), 0xb27a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb278), 0xcb);
        EXPECT(gbc.readMem(0xb279), 0x52);
        // CB 52 0398
        gbc.setState(0x14ec, 0xc6fc, 0x4a60, 0x1254, 0x927f, 0x96a0, 0x0, 0x1);
        gbc.writeMem(0x14ec, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc6fc);
        EXPECT(gbc.pc(), 0x14ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 0399
        gbc.setState(0x32a7, 0xb1a0, 0x3730, 0xf7c4, 0x36e2, 0x63b0, 0x0, 0x0);
        gbc.writeMem(0x32a7, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb1a0);
        EXPECT(gbc.pc(), 0x32a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 039A
        gbc.setState(0x3fec, 0x4aae, 0xa0a0, 0xf821, 0xae4f, 0xc758, 0x0, 0x0);
        gbc.writeMem(0x3fec, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4aae);
        EXPECT(gbc.pc(), 0x3fee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 039B
        gbc.setState(0x6f8a, 0xe6cf, 0xbe0, 0xed1d, 0xd5b3, 0x3ecf, 0x0, 0x0);
        gbc.writeMem(0x6f8a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe6cf);
        EXPECT(gbc.pc(), 0x6f8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 039C
        gbc.setState(0xe9c2, 0x98b6, 0xd2d0, 0xc631, 0xb0cc, 0x2669, 0x0, 0x0);
        gbc.writeMem(0xe9c2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x98b6);
        EXPECT(gbc.pc(), 0xe9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c2), 0xcb);
        EXPECT(gbc.readMem(0xe9c3), 0x52);
        // CB 52 039D
        gbc.setState(0x896, 0x7818, 0x8e00, 0xb848, 0x148b, 0x3f91, 0x0, 0x1);
        gbc.writeMem(0x896, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7818);
        EXPECT(gbc.pc(), 0x898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 039E
        gbc.setState(0xdd61, 0x50a8, 0x3d30, 0x882d, 0x34e3, 0x39a9, 0x1, 0x0);
        gbc.writeMem(0xdd61, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x50a8);
        EXPECT(gbc.pc(), 0xdd63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd61), 0xcb);
        EXPECT(gbc.readMem(0xdd62), 0x52);
        // CB 52 039F
        gbc.setState(0x817e, 0xd0a2, 0x2530, 0x1307, 0xa8e1, 0x2ee5, 0x1, 0x0);
        gbc.writeMem(0x817e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd0a2);
        EXPECT(gbc.pc(), 0x8180);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x817e), 0xcb);
        EXPECT(gbc.readMem(0x817f), 0x52);
        // CB 52 03A0
        gbc.setState(0x49ed, 0x1664, 0x3c70, 0xeae0, 0x69d, 0xc1dd, 0x1, 0x1);
        gbc.writeMem(0x49ed, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1664);
        EXPECT(gbc.pc(), 0x49ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03A1
        gbc.setState(0x413, 0xac88, 0xb650, 0x7021, 0x4535, 0x4e82, 0x1, 0x0);
        gbc.writeMem(0x413, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xac88);
        EXPECT(gbc.pc(), 0x415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03A2
        gbc.setState(0x295, 0xb792, 0x8e0, 0xd7ea, 0x3914, 0x4071, 0x0, 0x1);
        gbc.writeMem(0x295, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb792);
        EXPECT(gbc.pc(), 0x297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03A3
        gbc.setState(0x62ea, 0x918e, 0xe740, 0xcb5a, 0x9588, 0x4bc3, 0x1, 0x1);
        gbc.writeMem(0x62ea, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x918e);
        EXPECT(gbc.pc(), 0x62ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03A4
        gbc.setState(0x3d12, 0x96e1, 0xfc70, 0x1d3f, 0x6f6, 0xa068, 0x1, 0x1);
        gbc.writeMem(0x3d12, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x96e1);
        EXPECT(gbc.pc(), 0x3d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03A5
        gbc.setState(0x25ff, 0x285f, 0x44c0, 0xb0df, 0xf341, 0x17d5, 0x1, 0x0);
        gbc.writeMem(0x25ff, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x285f);
        EXPECT(gbc.pc(), 0x2601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03A7
        gbc.setState(0xd00e, 0x2f8d, 0x9100, 0x55cc, 0x9d15, 0xa9ca, 0x1, 0x1);
        gbc.writeMem(0xd00e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2f8d);
        EXPECT(gbc.pc(), 0xd010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd00e), 0xcb);
        EXPECT(gbc.readMem(0xd00f), 0x52);
        // CB 52 03A8
        gbc.setState(0x7b31, 0x314e, 0xbb10, 0x73fb, 0x4f47, 0xad3d, 0x1, 0x0);
        gbc.writeMem(0x7b31, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x314e);
        EXPECT(gbc.pc(), 0x7b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03A9
        gbc.setState(0xd4d4, 0xe990, 0x1b00, 0xff82, 0x7c9d, 0x7896, 0x1, 0x1);
        gbc.writeMem(0xd4d4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe990);
        EXPECT(gbc.pc(), 0xd4d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d4), 0xcb);
        EXPECT(gbc.readMem(0xd4d5), 0x52);
        // CB 52 03AA
        gbc.setState(0x1c1b, 0x9e2a, 0x14c0, 0x88bf, 0xed08, 0x1b55, 0x0, 0x1);
        gbc.writeMem(0x1c1b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9e2a);
        EXPECT(gbc.pc(), 0x1c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03AC
        gbc.setState(0x6422, 0x6551, 0xa810, 0x2db2, 0x231b, 0x870d, 0x1, 0x1);
        gbc.writeMem(0x6422, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6551);
        EXPECT(gbc.pc(), 0x6424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03AD
        gbc.setState(0x7041, 0x932a, 0x7b70, 0x13d9, 0xf971, 0x2d18, 0x0, 0x0);
        gbc.writeMem(0x7041, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x932a);
        EXPECT(gbc.pc(), 0x7043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03AE
        gbc.setState(0xe753, 0xe8bf, 0x93f0, 0xf900, 0xee9, 0x3974, 0x1, 0x0);
        gbc.writeMem(0xe753, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe8bf);
        EXPECT(gbc.pc(), 0xe755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe753), 0xcb);
        EXPECT(gbc.readMem(0xe754), 0x52);
        // CB 52 03AF
        gbc.setState(0xd4e4, 0xd3e, 0xd010, 0x83de, 0xc6fa, 0x6353, 0x1, 0x1);
        gbc.writeMem(0xd4e4, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd3e);
        EXPECT(gbc.pc(), 0xd4e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4e4), 0xcb);
        EXPECT(gbc.readMem(0xd4e5), 0x52);
        // CB 52 03B0
        gbc.setState(0xcc34, 0xf3bb, 0x9660, 0x2251, 0x8c75, 0xafd0, 0x0, 0x1);
        gbc.writeMem(0xcc34, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf3bb);
        EXPECT(gbc.pc(), 0xcc36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc34), 0xcb);
        EXPECT(gbc.readMem(0xcc35), 0x52);
        // CB 52 03B1
        gbc.setState(0xbbb5, 0xb3bd, 0x1a30, 0x4022, 0x265c, 0x2292, 0x0, 0x1);
        gbc.writeMem(0xbbb5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb3bd);
        EXPECT(gbc.pc(), 0xbbb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb5), 0xcb);
        EXPECT(gbc.readMem(0xbbb6), 0x52);
        // CB 52 03B2
        gbc.setState(0xb037, 0x8379, 0xd6a0, 0xb39e, 0xf70b, 0x13ee, 0x0, 0x0);
        gbc.writeMem(0xb037, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8379);
        EXPECT(gbc.pc(), 0xb039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb037), 0xcb);
        EXPECT(gbc.readMem(0xb038), 0x52);
        // CB 52 03B3
        gbc.setState(0x310b, 0x85ad, 0x86f0, 0x4007, 0x61d8, 0xba28, 0x1, 0x1);
        gbc.writeMem(0x310b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x85ad);
        EXPECT(gbc.pc(), 0x310d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03B4
        gbc.setState(0x8f60, 0xb3c, 0xab50, 0xc544, 0xd0f3, 0x482d, 0x1, 0x1);
        gbc.writeMem(0x8f60, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb3c);
        EXPECT(gbc.pc(), 0x8f62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f60), 0xcb);
        EXPECT(gbc.readMem(0x8f61), 0x52);
        // CB 52 03B5
        gbc.setState(0x2be5, 0xe5d3, 0xf770, 0x5048, 0x7b80, 0xc704, 0x0, 0x0);
        gbc.writeMem(0x2be5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe5d3);
        EXPECT(gbc.pc(), 0x2be7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03B6
        gbc.setState(0xc671, 0xefb8, 0x11b0, 0xa362, 0x7d1a, 0xc1c4, 0x1, 0x1);
        gbc.writeMem(0xc671, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xefb8);
        EXPECT(gbc.pc(), 0xc673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc671), 0xcb);
        EXPECT(gbc.readMem(0xc672), 0x52);
        // CB 52 03B7
        gbc.setState(0x5447, 0xf225, 0xd000, 0x9aa2, 0xea8b, 0x3f4e, 0x0, 0x0);
        gbc.writeMem(0x5447, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf225);
        EXPECT(gbc.pc(), 0x5449);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03B8
        gbc.setState(0x118, 0x62d6, 0x27d0, 0x519, 0x342a, 0xa5e1, 0x0, 0x1);
        gbc.writeMem(0x118, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x62d6);
        EXPECT(gbc.pc(), 0x11a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03B9
        gbc.setState(0xabdb, 0x8645, 0x9350, 0xdb83, 0xeadf, 0xa91e, 0x0, 0x1);
        gbc.writeMem(0xabdb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8645);
        EXPECT(gbc.pc(), 0xabdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabdb), 0xcb);
        EXPECT(gbc.readMem(0xabdc), 0x52);
        // CB 52 03BA
        gbc.setState(0x511c, 0x479e, 0x2310, 0x78ae, 0x5272, 0xae63, 0x1, 0x1);
        gbc.writeMem(0x511c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x479e);
        EXPECT(gbc.pc(), 0x511e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03BB
        gbc.setState(0x158a, 0x83ab, 0xc5a0, 0x20d3, 0xbede, 0xc4f9, 0x0, 0x1);
        gbc.writeMem(0x158a, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x83ab);
        EXPECT(gbc.pc(), 0x158c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03BC
        gbc.setState(0x526c, 0x6c44, 0xbd50, 0xe308, 0xe65, 0x7fdd, 0x1, 0x1);
        gbc.writeMem(0x526c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6c44);
        EXPECT(gbc.pc(), 0x526e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03BD
        gbc.setState(0xb2eb, 0x1eca, 0x1a0, 0x7198, 0xc62a, 0x5233, 0x1, 0x0);
        gbc.writeMem(0xb2eb, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1eca);
        EXPECT(gbc.pc(), 0xb2ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2eb), 0xcb);
        EXPECT(gbc.readMem(0xb2ec), 0x52);
        // CB 52 03BE
        gbc.setState(0x2de0, 0xae5b, 0x4bb0, 0x36e5, 0x5a54, 0x4ae1, 0x1, 0x0);
        gbc.writeMem(0x2de0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xae5b);
        EXPECT(gbc.pc(), 0x2de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03BF
        gbc.setState(0xbde0, 0xcbb, 0x2900, 0x7b3c, 0xf153, 0x9090, 0x0, 0x1);
        gbc.writeMem(0xbde0, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xcbb);
        EXPECT(gbc.pc(), 0xbde2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde0), 0xcb);
        EXPECT(gbc.readMem(0xbde1), 0x52);
        // CB 52 03C0
        gbc.setState(0x1cf2, 0xa818, 0xe1d0, 0x93ba, 0x1c3, 0xa588, 0x1, 0x0);
        gbc.writeMem(0x1cf2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa818);
        EXPECT(gbc.pc(), 0x1cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03C1
        gbc.setState(0xa773, 0x1420, 0x62b0, 0x5ac8, 0xd417, 0xc41e, 0x1, 0x1);
        gbc.writeMem(0xa773, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1420);
        EXPECT(gbc.pc(), 0xa775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa773), 0xcb);
        EXPECT(gbc.readMem(0xa774), 0x52);
        // CB 52 03C2
        gbc.setState(0x7d8c, 0x56cf, 0x33d0, 0x6154, 0xe049, 0xdfdf, 0x0, 0x0);
        gbc.writeMem(0x7d8c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x56cf);
        EXPECT(gbc.pc(), 0x7d8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03C3
        gbc.setState(0x681d, 0x1efa, 0x7fa0, 0xa432, 0xa119, 0x2e54, 0x0, 0x1);
        gbc.writeMem(0x681d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1efa);
        EXPECT(gbc.pc(), 0x681f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03C4
        gbc.setState(0xd9cd, 0x552f, 0xec90, 0x1f15, 0xab9c, 0xd23a, 0x0, 0x0);
        gbc.writeMem(0xd9cd, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x552f);
        EXPECT(gbc.pc(), 0xd9cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9cd), 0xcb);
        EXPECT(gbc.readMem(0xd9ce), 0x52);
        // CB 52 03C5
        gbc.setState(0xa7bf, 0x6aae, 0x9910, 0xc77e, 0x9f2e, 0x491e, 0x1, 0x0);
        gbc.writeMem(0xa7bf, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6aae);
        EXPECT(gbc.pc(), 0xa7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7bf), 0xcb);
        EXPECT(gbc.readMem(0xa7c0), 0x52);
        // CB 52 03C6
        gbc.setState(0xe13, 0x61a9, 0xfdd0, 0x35ef, 0x1308, 0x27bd, 0x0, 0x1);
        gbc.writeMem(0xe13, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x61a9);
        EXPECT(gbc.pc(), 0xe15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03C7
        gbc.setState(0x1946, 0xd07, 0x4d60, 0xeacc, 0xe3b6, 0xe9a, 0x1, 0x1);
        gbc.writeMem(0x1946, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd07);
        EXPECT(gbc.pc(), 0x1948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03C8
        gbc.setState(0x2d4c, 0x246a, 0x8e60, 0xd8ad, 0x449c, 0x7137, 0x0, 0x1);
        gbc.writeMem(0x2d4c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x246a);
        EXPECT(gbc.pc(), 0x2d4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03C9
        gbc.setState(0x128e, 0xad67, 0x3a50, 0xc71c, 0x7efc, 0x8a50, 0x1, 0x1);
        gbc.writeMem(0x128e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xad67);
        EXPECT(gbc.pc(), 0x1290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03CA
        gbc.setState(0x690d, 0xaa30, 0x64e0, 0x45c8, 0xf6c5, 0xebcb, 0x0, 0x0);
        gbc.writeMem(0x690d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xaa30);
        EXPECT(gbc.pc(), 0x690f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03CB
        gbc.setState(0xb98d, 0xab96, 0xa9a0, 0x5ad7, 0xd7e3, 0x53a6, 0x0, 0x0);
        gbc.writeMem(0xb98d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xab96);
        EXPECT(gbc.pc(), 0xb98f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb98d), 0xcb);
        EXPECT(gbc.readMem(0xb98e), 0x52);
        // CB 52 03CC
        gbc.setState(0x9785, 0x5e19, 0xf480, 0x20bd, 0xd091, 0x1860, 0x0, 0x0);
        gbc.writeMem(0x9785, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5e19);
        EXPECT(gbc.pc(), 0x9787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9785), 0xcb);
        EXPECT(gbc.readMem(0x9786), 0x52);
        // CB 52 03CD
        gbc.setState(0x41fe, 0x6c72, 0x9280, 0xcce5, 0x6217, 0x8af6, 0x1, 0x1);
        gbc.writeMem(0x41fe, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6c72);
        EXPECT(gbc.pc(), 0x4200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03CE
        gbc.setState(0x674c, 0xea16, 0x75c0, 0xf4ab, 0xe8a3, 0xed7e, 0x1, 0x1);
        gbc.writeMem(0x674c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xea16);
        EXPECT(gbc.pc(), 0x674e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03CF
        gbc.setState(0x8cbe, 0xce0c, 0x9dd0, 0xc61b, 0xb60c, 0xf57b, 0x1, 0x1);
        gbc.writeMem(0x8cbe, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xce0c);
        EXPECT(gbc.pc(), 0x8cc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cbe), 0xcb);
        EXPECT(gbc.readMem(0x8cbf), 0x52);
        // CB 52 03D0
        gbc.setState(0x201d, 0xd425, 0xe1d0, 0x6c7d, 0x811b, 0xd86a, 0x1, 0x1);
        gbc.writeMem(0x201d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd425);
        EXPECT(gbc.pc(), 0x201f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03D2
        gbc.setState(0x3918, 0xa876, 0x10c0, 0xe98b, 0x84c8, 0x3e4d, 0x0, 0x1);
        gbc.writeMem(0x3918, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa876);
        EXPECT(gbc.pc(), 0x391a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03D3
        gbc.setState(0xb858, 0x3491, 0x93f0, 0x15c5, 0x4422, 0xab25, 0x0, 0x1);
        gbc.writeMem(0xb858, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3491);
        EXPECT(gbc.pc(), 0xb85a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb858), 0xcb);
        EXPECT(gbc.readMem(0xb859), 0x52);
        // CB 52 03D4
        gbc.setState(0x5065, 0x3761, 0x8c20, 0x753f, 0xd604, 0x1363, 0x1, 0x1);
        gbc.writeMem(0x5065, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3761);
        EXPECT(gbc.pc(), 0x5067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03D5
        gbc.setState(0x374d, 0xdcfb, 0x9760, 0x5172, 0x9e38, 0xa4cd, 0x1, 0x0);
        gbc.writeMem(0x374d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xdcfb);
        EXPECT(gbc.pc(), 0x374f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03D6
        gbc.setState(0x45d5, 0xd947, 0xa6f0, 0x8cd6, 0x5088, 0xe485, 0x0, 0x1);
        gbc.writeMem(0x45d5, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd947);
        EXPECT(gbc.pc(), 0x45d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03D7
        gbc.setState(0x5532, 0xdc27, 0x1c40, 0xe7e7, 0xeb6d, 0x2f47, 0x1, 0x1);
        gbc.writeMem(0x5532, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdc27);
        EXPECT(gbc.pc(), 0x5534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03D8
        gbc.setState(0x435e, 0x4729, 0x7c40, 0xbefb, 0x163c, 0xeba8, 0x1, 0x0);
        gbc.writeMem(0x435e, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4729);
        EXPECT(gbc.pc(), 0x4360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03D9
        gbc.setState(0x9d7d, 0xff5a, 0xc380, 0x246e, 0x58bf, 0xe9bb, 0x0, 0x1);
        gbc.writeMem(0x9d7d, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xff5a);
        EXPECT(gbc.pc(), 0x9d7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d7d), 0xcb);
        EXPECT(gbc.readMem(0x9d7e), 0x52);
        // CB 52 03DA
        gbc.setState(0x7c70, 0x3bde, 0x4ff0, 0x38ed, 0x329c, 0x6c68, 0x0, 0x0);
        gbc.writeMem(0x7c70, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3bde);
        EXPECT(gbc.pc(), 0x7c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03DB
        gbc.setState(0x2e91, 0x8bd9, 0xf260, 0x36b, 0xff29, 0x9776, 0x0, 0x1);
        gbc.writeMem(0x2e91, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8bd9);
        EXPECT(gbc.pc(), 0x2e93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03DC
        gbc.setState(0x5eee, 0x2b86, 0xd8b0, 0x2fde, 0x94f6, 0xe51f, 0x1, 0x0);
        gbc.writeMem(0x5eee, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2b86);
        EXPECT(gbc.pc(), 0x5ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03DD
        gbc.setState(0xca33, 0xcd84, 0xae80, 0xb0fc, 0x5b2d, 0x73d6, 0x0, 0x0);
        gbc.writeMem(0xca33, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xcd84);
        EXPECT(gbc.pc(), 0xca35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca33), 0xcb);
        EXPECT(gbc.readMem(0xca34), 0x52);
        // CB 52 03DE
        gbc.setState(0x4cad, 0x4b0f, 0xd350, 0xdbd, 0x8084, 0xfad1, 0x1, 0x1);
        gbc.writeMem(0x4cad, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4b0f);
        EXPECT(gbc.pc(), 0x4caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03DF
        gbc.setState(0x4b4f, 0xa10a, 0x8f60, 0x27ab, 0xa852, 0x1ae5, 0x1, 0x0);
        gbc.writeMem(0x4b4f, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa10a);
        EXPECT(gbc.pc(), 0x4b51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03E0
        gbc.setState(0xecb3, 0x1722, 0xf560, 0xf648, 0x74a, 0xd0bc, 0x0, 0x1);
        gbc.writeMem(0xecb3, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1722);
        EXPECT(gbc.pc(), 0xecb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecb3), 0xcb);
        EXPECT(gbc.readMem(0xecb4), 0x52);
        // CB 52 03E1
        gbc.setState(0x6086, 0x27a6, 0xc20, 0xde3e, 0x9ed6, 0x1855, 0x1, 0x1);
        gbc.writeMem(0x6086, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x27a6);
        EXPECT(gbc.pc(), 0x6088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03E3
        gbc.setState(0x76f2, 0xe420, 0x71b0, 0x9cb4, 0x15d1, 0x2757, 0x1, 0x0);
        gbc.writeMem(0x76f2, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe420);
        EXPECT(gbc.pc(), 0x76f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 52 03E4
        gbc.setState(0x21db, 0x6d13, 0xd7c0, 0xb9e9, 0xfff7, 0x9cf, 0x0, 0x0);
        gbc.writeMem(0x21db, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6d13);
        EXPECT(gbc.pc(), 0x21dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 52 03E5
        gbc.setState(0x855c, 0x9909, 0x2eb0, 0x298d, 0xa98d, 0xc458, 0x0, 0x0);
        gbc.writeMem(0x855c, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9909);
        EXPECT(gbc.pc(), 0x855e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x855c), 0xcb);
        EXPECT(gbc.readMem(0x855d), 0x52);
        // CB 52 03E6
        gbc.setState(0x843b, 0x1853, 0xc710, 0x4637, 0x5a31, 0x859, 0x0, 0x0);
        gbc.writeMem(0x843b, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1853);
        EXPECT(gbc.pc(), 0x843d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x843b), 0xcb);
        EXPECT(gbc.readMem(0x843c), 0x52);
        // CB 52 03E7
        gbc.setState(0x3580, 0xe027, 0xfc40, 0x2c7a, 0x7605, 0xb10a, 0x0, 0x0);
        gbc.writeMem(0x3580, { 0xcb, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe027);
        EXPECT(gbc.pc(), 0x3582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
