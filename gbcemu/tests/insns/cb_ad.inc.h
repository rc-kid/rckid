    TEST(gbcemu, opcode_cb_ad) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB AD 0000
        gbc.setState(0x1de1, 0xca33, 0xa300, 0x6e2a, 0x3fd9, 0x33ac, 0x1, 0x1);
        gbc.writeMem(0x1de1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xca33, gbc.sp());
        EXPECT(0x1de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0002
        gbc.setState(0x2ada, 0x2fd3, 0x2690, 0x1b1f, 0xdadf, 0xae55, 0x1, 0x0);
        gbc.writeMem(0x2ada, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2fd3, gbc.sp());
        EXPECT(0x2adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0003
        gbc.setState(0xa98c, 0x639b, 0x45b0, 0x108, 0x97f7, 0xc490, 0x0, 0x0);
        gbc.writeMem(0xa98c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x639b, gbc.sp());
        EXPECT(0xa98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa98c));
        EXPECT(0xad, gbc.readMem(0xa98d));
        // CB AD 0005
        gbc.setState(0x9de1, 0xcc8f, 0x9c50, 0x8b44, 0xecf7, 0x6d56, 0x0, 0x0);
        gbc.writeMem(0x9de1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcc8f, gbc.sp());
        EXPECT(0x9de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de1));
        EXPECT(0xad, gbc.readMem(0x9de2));
        // CB AD 0006
        gbc.setState(0xd4ab, 0x69ad, 0x6d60, 0x3ed7, 0x89a1, 0x5d37, 0x1, 0x0);
        gbc.writeMem(0xd4ab, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x69ad, gbc.sp());
        EXPECT(0xd4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ab));
        EXPECT(0xad, gbc.readMem(0xd4ac));
        // CB AD 0007
        gbc.setState(0xec79, 0x1620, 0xcdb0, 0xba6, 0xac13, 0x21e, 0x1, 0x1);
        gbc.writeMem(0xec79, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1620, gbc.sp());
        EXPECT(0xec7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec79));
        EXPECT(0xad, gbc.readMem(0xec7a));
        // CB AD 0008
        gbc.setState(0x2276, 0x4ed6, 0x3bb0, 0xa3fe, 0x8ae6, 0x7397, 0x1, 0x1);
        gbc.writeMem(0x2276, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4ed6, gbc.sp());
        EXPECT(0x2278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0009
        gbc.setState(0x69ba, 0x1e4a, 0x6050, 0xc4ca, 0xdb69, 0xb0ba, 0x1, 0x1);
        gbc.writeMem(0x69ba, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1e4a, gbc.sp());
        EXPECT(0x69bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 000A
        gbc.setState(0xad40, 0xc21, 0xb480, 0xcd9c, 0x6744, 0xb3e0, 0x0, 0x1);
        gbc.writeMem(0xad40, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc21, gbc.sp());
        EXPECT(0xad42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad40));
        EXPECT(0xad, gbc.readMem(0xad41));
        // CB AD 000B
        gbc.setState(0xa70e, 0xb941, 0x4b50, 0x6dd4, 0x41a9, 0xa3ae, 0x1, 0x1);
        gbc.writeMem(0xa70e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb941, gbc.sp());
        EXPECT(0xa710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70e));
        EXPECT(0xad, gbc.readMem(0xa70f));
        // CB AD 000C
        gbc.setState(0xb636, 0x4f81, 0x8230, 0x6ac8, 0x8d0f, 0xba94, 0x1, 0x0);
        gbc.writeMem(0xb636, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4f81, gbc.sp());
        EXPECT(0xb638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb636));
        EXPECT(0xad, gbc.readMem(0xb637));
        // CB AD 000D
        gbc.setState(0xb985, 0xc62e, 0xb600, 0x4778, 0x467f, 0xf507, 0x0, 0x0);
        gbc.writeMem(0xb985, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc62e, gbc.sp());
        EXPECT(0xb987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb985));
        EXPECT(0xad, gbc.readMem(0xb986));
        // CB AD 000E
        gbc.setState(0xa416, 0x393e, 0xafd0, 0x2ab6, 0xad9b, 0xcd87, 0x1, 0x1);
        gbc.writeMem(0xa416, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x393e, gbc.sp());
        EXPECT(0xa418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa416));
        EXPECT(0xad, gbc.readMem(0xa417));
        // CB AD 000F
        gbc.setState(0x9352, 0xd87, 0xeb50, 0xf120, 0x9eeb, 0x497e, 0x1, 0x0);
        gbc.writeMem(0x9352, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd87, gbc.sp());
        EXPECT(0x9354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9352));
        EXPECT(0xad, gbc.readMem(0x9353));
        // CB AD 0010
        gbc.setState(0x3e7a, 0x335e, 0x1340, 0x7209, 0x59d4, 0x54ad, 0x0, 0x0);
        gbc.writeMem(0x3e7a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x335e, gbc.sp());
        EXPECT(0x3e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0011
        gbc.setState(0x4712, 0x6f2f, 0xe860, 0x8cdd, 0xc2b1, 0x6ecf, 0x0, 0x1);
        gbc.writeMem(0x4712, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6f2f, gbc.sp());
        EXPECT(0x4714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0012
        gbc.setState(0x68d8, 0x94c6, 0x7a70, 0x6a1d, 0x7b96, 0x5c21, 0x1, 0x1);
        gbc.writeMem(0x68d8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x94c6, gbc.sp());
        EXPECT(0x68da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0013
        gbc.setState(0x2f1b, 0xe5dd, 0x7c70, 0xfd, 0x9019, 0xa3b8, 0x0, 0x0);
        gbc.writeMem(0x2f1b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe5dd, gbc.sp());
        EXPECT(0x2f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0014
        gbc.setState(0x1aab, 0x7ccc, 0x6830, 0xc24e, 0xcec3, 0xf64a, 0x1, 0x0);
        gbc.writeMem(0x1aab, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7ccc, gbc.sp());
        EXPECT(0x1aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0015
        gbc.setState(0x8172, 0xa3ce, 0x9840, 0x7914, 0x19a2, 0x1abc, 0x1, 0x1);
        gbc.writeMem(0x8172, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa3ce, gbc.sp());
        EXPECT(0x8174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8172));
        EXPECT(0xad, gbc.readMem(0x8173));
        // CB AD 0016
        gbc.setState(0xbfca, 0x3ea3, 0x84e0, 0x73af, 0x6e16, 0x255a, 0x1, 0x1);
        gbc.writeMem(0xbfca, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3ea3, gbc.sp());
        EXPECT(0xbfcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfca));
        EXPECT(0xad, gbc.readMem(0xbfcb));
        // CB AD 0017
        gbc.setState(0xb2ba, 0x2de7, 0x6ba0, 0xb298, 0x7742, 0xbdf5, 0x0, 0x1);
        gbc.writeMem(0xb2ba, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2de7, gbc.sp());
        EXPECT(0xb2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ba));
        EXPECT(0xad, gbc.readMem(0xb2bb));
        // CB AD 0018
        gbc.setState(0x9446, 0x7dad, 0xd5f0, 0xade6, 0xa87a, 0xb7d4, 0x1, 0x0);
        gbc.writeMem(0x9446, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7dad, gbc.sp());
        EXPECT(0x9448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9446));
        EXPECT(0xad, gbc.readMem(0x9447));
        // CB AD 0019
        gbc.setState(0x2ca, 0xe7d4, 0x2b40, 0x6166, 0x90d2, 0xe9, 0x0, 0x1);
        gbc.writeMem(0x2ca, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe7d4, gbc.sp());
        EXPECT(0x2cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 001B
        gbc.setState(0xef4c, 0xc2f8, 0x9f70, 0x91fe, 0x4241, 0x5b01, 0x1, 0x1);
        gbc.writeMem(0xef4c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc2f8, gbc.sp());
        EXPECT(0xef4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4c));
        EXPECT(0xad, gbc.readMem(0xef4d));
        // CB AD 001C
        gbc.setState(0x99f4, 0x80b1, 0x4b20, 0xeeee, 0x9ed6, 0x9450, 0x1, 0x0);
        gbc.writeMem(0x99f4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x80b1, gbc.sp());
        EXPECT(0x99f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f4));
        EXPECT(0xad, gbc.readMem(0x99f5));
        // CB AD 001D
        gbc.setState(0x9fb1, 0x4da8, 0xf970, 0xe39, 0x31b, 0x2670, 0x1, 0x0);
        gbc.writeMem(0x9fb1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4da8, gbc.sp());
        EXPECT(0x9fb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb1));
        EXPECT(0xad, gbc.readMem(0x9fb2));
        // CB AD 001E
        gbc.setState(0xbc87, 0x5d27, 0x4570, 0x511b, 0x494d, 0xc85a, 0x0, 0x1);
        gbc.writeMem(0xbc87, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5d27, gbc.sp());
        EXPECT(0xbc89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc87));
        EXPECT(0xad, gbc.readMem(0xbc88));
        // CB AD 001F
        gbc.setState(0xb78, 0xcb9f, 0x3c30, 0xf584, 0x2778, 0xf3aa, 0x0, 0x0);
        gbc.writeMem(0xb78, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcb9f, gbc.sp());
        EXPECT(0xb7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0020
        gbc.setState(0x26fe, 0x8938, 0x59a0, 0x89b3, 0x77df, 0x3e7a, 0x1, 0x0);
        gbc.writeMem(0x26fe, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8938, gbc.sp());
        EXPECT(0x2700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0021
        gbc.setState(0x9c2e, 0xe451, 0x76d0, 0x8d39, 0xae0a, 0x9591, 0x1, 0x0);
        gbc.writeMem(0x9c2e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe451, gbc.sp());
        EXPECT(0x9c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2e));
        EXPECT(0xad, gbc.readMem(0x9c2f));
        // CB AD 0022
        gbc.setState(0x2d0c, 0x1bad, 0x6590, 0xef6e, 0xb32e, 0xc0d8, 0x0, 0x0);
        gbc.writeMem(0x2d0c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1bad, gbc.sp());
        EXPECT(0x2d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0023
        gbc.setState(0x477b, 0x3950, 0xc290, 0xb568, 0x8806, 0x7114, 0x0, 0x1);
        gbc.writeMem(0x477b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3950, gbc.sp());
        EXPECT(0x477d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0024
        gbc.setState(0x75a8, 0xf469, 0xfc80, 0x39ca, 0x246f, 0x9bb1, 0x1, 0x1);
        gbc.writeMem(0x75a8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf469, gbc.sp());
        EXPECT(0x75aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0025
        gbc.setState(0xe6a8, 0x55bc, 0x6040, 0x8203, 0x1d61, 0xe521, 0x0, 0x0);
        gbc.writeMem(0xe6a8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x55bc, gbc.sp());
        EXPECT(0xe6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a8));
        EXPECT(0xad, gbc.readMem(0xe6a9));
        // CB AD 0026
        gbc.setState(0x19f7, 0x5db, 0x1ac0, 0x62c6, 0x5b1d, 0x2d3e, 0x1, 0x0);
        gbc.writeMem(0x19f7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5db, gbc.sp());
        EXPECT(0x19f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0027
        gbc.setState(0xbed, 0x34a1, 0xc3a0, 0xde61, 0x12a2, 0xa6e8, 0x1, 0x1);
        gbc.writeMem(0xbed, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x34a1, gbc.sp());
        EXPECT(0xbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0028
        gbc.setState(0xc695, 0x258b, 0x9c0, 0xc6b9, 0xafaf, 0x4d5a, 0x0, 0x0);
        gbc.writeMem(0xc695, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x258b, gbc.sp());
        EXPECT(0xc697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc695));
        EXPECT(0xad, gbc.readMem(0xc696));
        // CB AD 0029
        gbc.setState(0xb97e, 0x9f22, 0xb500, 0x5240, 0x9343, 0x3961, 0x1, 0x1);
        gbc.writeMem(0xb97e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9f22, gbc.sp());
        EXPECT(0xb980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97e));
        EXPECT(0xad, gbc.readMem(0xb97f));
        // CB AD 002A
        gbc.setState(0xd14, 0x5206, 0x2f90, 0x1da6, 0xdcfc, 0x5771, 0x1, 0x0);
        gbc.writeMem(0xd14, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5206, gbc.sp());
        EXPECT(0xd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 002B
        gbc.setState(0xe22c, 0xb88e, 0xe5e0, 0x3214, 0xf4b9, 0x1d9a, 0x1, 0x1);
        gbc.writeMem(0xe22c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb88e, gbc.sp());
        EXPECT(0xe22e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22c));
        EXPECT(0xad, gbc.readMem(0xe22d));
        // CB AD 002C
        gbc.setState(0x7b01, 0x1837, 0x9970, 0x5e26, 0x2f5a, 0x57b, 0x1, 0x0);
        gbc.writeMem(0x7b01, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1837, gbc.sp());
        EXPECT(0x7b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 002D
        gbc.setState(0x734, 0x7fff, 0xc50, 0xede4, 0xb2b4, 0x2d5a, 0x0, 0x1);
        gbc.writeMem(0x734, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7fff, gbc.sp());
        EXPECT(0x736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 002E
        gbc.setState(0x851f, 0x3aaf, 0xc020, 0x7ba7, 0x9a9d, 0xf4a8, 0x1, 0x1);
        gbc.writeMem(0x851f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3aaf, gbc.sp());
        EXPECT(0x8521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851f));
        EXPECT(0xad, gbc.readMem(0x8520));
        // CB AD 002F
        gbc.setState(0x3491, 0xe18e, 0xea70, 0xce7, 0x47ac, 0x2b31, 0x1, 0x0);
        gbc.writeMem(0x3491, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe18e, gbc.sp());
        EXPECT(0x3493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0030
        gbc.setState(0x8f19, 0x607a, 0x380, 0x82bd, 0x46a5, 0xf2ab, 0x0, 0x0);
        gbc.writeMem(0x8f19, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x607a, gbc.sp());
        EXPECT(0x8f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f19));
        EXPECT(0xad, gbc.readMem(0x8f1a));
        // CB AD 0031
        gbc.setState(0x34d2, 0xcb9b, 0x7a20, 0xc162, 0xd042, 0x77da, 0x0, 0x0);
        gbc.writeMem(0x34d2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcb9b, gbc.sp());
        EXPECT(0x34d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0032
        gbc.setState(0x7846, 0x80bd, 0xb6a0, 0x840f, 0x90a4, 0x628b, 0x1, 0x1);
        gbc.writeMem(0x7846, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x80bd, gbc.sp());
        EXPECT(0x7848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0033
        gbc.setState(0xa5e6, 0x2118, 0x85b0, 0xeb90, 0xe295, 0xbd89, 0x1, 0x1);
        gbc.writeMem(0xa5e6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2118, gbc.sp());
        EXPECT(0xa5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e6));
        EXPECT(0xad, gbc.readMem(0xa5e7));
        // CB AD 0034
        gbc.setState(0x181b, 0x76d6, 0x8110, 0xb14c, 0x1dae, 0x9ac3, 0x0, 0x0);
        gbc.writeMem(0x181b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x76d6, gbc.sp());
        EXPECT(0x181d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0035
        gbc.setState(0x34ec, 0xd940, 0x3490, 0x72d1, 0xe0b7, 0x33b0, 0x0, 0x0);
        gbc.writeMem(0x34ec, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd940, gbc.sp());
        EXPECT(0x34ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0036
        gbc.setState(0x2bc, 0xce2f, 0x9ac0, 0x6db3, 0x60e8, 0xa4b, 0x1, 0x1);
        gbc.writeMem(0x2bc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xce2f, gbc.sp());
        EXPECT(0x2be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0038
        gbc.setState(0x660f, 0xc2f1, 0xa320, 0x977, 0xdddf, 0x4504, 0x0, 0x1);
        gbc.writeMem(0x660f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc2f1, gbc.sp());
        EXPECT(0x6611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0039
        gbc.setState(0xc20d, 0x6a9, 0xec0, 0xbbbc, 0xdb0a, 0x30cb, 0x0, 0x1);
        gbc.writeMem(0xc20d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6a9, gbc.sp());
        EXPECT(0xc20f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20d));
        EXPECT(0xad, gbc.readMem(0xc20e));
        // CB AD 003A
        gbc.setState(0x8afe, 0x3e35, 0xb290, 0x371c, 0x9dec, 0x6e2, 0x0, 0x0);
        gbc.writeMem(0x8afe, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3e35, gbc.sp());
        EXPECT(0x8b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afe));
        EXPECT(0xad, gbc.readMem(0x8aff));
        // CB AD 003B
        gbc.setState(0xbac5, 0x93c1, 0x2360, 0x3124, 0xf085, 0x1ada, 0x1, 0x1);
        gbc.writeMem(0xbac5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x93c1, gbc.sp());
        EXPECT(0xbac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac5));
        EXPECT(0xad, gbc.readMem(0xbac6));
        // CB AD 003C
        gbc.setState(0xcb96, 0x32cd, 0xe5b0, 0xe780, 0x9536, 0x259c, 0x1, 0x0);
        gbc.writeMem(0xcb96, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x32cd, gbc.sp());
        EXPECT(0xcb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb96));
        EXPECT(0xad, gbc.readMem(0xcb97));
        // CB AD 003D
        gbc.setState(0x1389, 0xdb7b, 0xfed0, 0x6a91, 0xdad2, 0xd284, 0x0, 0x0);
        gbc.writeMem(0x1389, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdb7b, gbc.sp());
        EXPECT(0x138b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 003E
        gbc.setState(0x7720, 0x23e3, 0x9b90, 0x248c, 0x86f7, 0x4a73, 0x1, 0x1);
        gbc.writeMem(0x7720, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x23e3, gbc.sp());
        EXPECT(0x7722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 003F
        gbc.setState(0x38f, 0x3830, 0xb420, 0xd9fa, 0x18a7, 0x1942, 0x1, 0x0);
        gbc.writeMem(0x38f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3830, gbc.sp());
        EXPECT(0x391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0040
        gbc.setState(0xeadb, 0xad9, 0xea20, 0xd262, 0x5941, 0x4835, 0x1, 0x1);
        gbc.writeMem(0xeadb, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xad9, gbc.sp());
        EXPECT(0xeadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeadb));
        EXPECT(0xad, gbc.readMem(0xeadc));
        // CB AD 0041
        gbc.setState(0x754, 0x7b1c, 0x9960, 0x725b, 0x124f, 0x3e35, 0x1, 0x1);
        gbc.writeMem(0x754, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7b1c, gbc.sp());
        EXPECT(0x756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0042
        gbc.setState(0x1b4c, 0xaeb9, 0xf3b0, 0x24d5, 0xbd2a, 0xa5d4, 0x0, 0x1);
        gbc.writeMem(0x1b4c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xaeb9, gbc.sp());
        EXPECT(0x1b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0043
        gbc.setState(0x98f3, 0x7372, 0xf890, 0x42c4, 0x74ca, 0xdc50, 0x0, 0x0);
        gbc.writeMem(0x98f3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7372, gbc.sp());
        EXPECT(0x98f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f3));
        EXPECT(0xad, gbc.readMem(0x98f4));
        // CB AD 0044
        gbc.setState(0x221e, 0x88e2, 0x3bd0, 0xc085, 0x3504, 0xdfdd, 0x1, 0x1);
        gbc.writeMem(0x221e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x88e2, gbc.sp());
        EXPECT(0x2220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0045
        gbc.setState(0xb839, 0xa71f, 0x8420, 0xa7e, 0x7c61, 0xd80f, 0x1, 0x0);
        gbc.writeMem(0xb839, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa71f, gbc.sp());
        EXPECT(0xb83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb839));
        EXPECT(0xad, gbc.readMem(0xb83a));
        // CB AD 0046
        gbc.setState(0x1d99, 0x3350, 0x2760, 0xbaf, 0x659e, 0xbf33, 0x1, 0x1);
        gbc.writeMem(0x1d99, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3350, gbc.sp());
        EXPECT(0x1d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0047
        gbc.setState(0x5522, 0xfef2, 0x7590, 0x9625, 0x36c4, 0x486, 0x0, 0x1);
        gbc.writeMem(0x5522, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xfef2, gbc.sp());
        EXPECT(0x5524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0048
        gbc.setState(0xe390, 0x69eb, 0xced0, 0xd188, 0xaef3, 0x235d, 0x1, 0x0);
        gbc.writeMem(0xe390, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x69eb, gbc.sp());
        EXPECT(0xe392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe390));
        EXPECT(0xad, gbc.readMem(0xe391));
        // CB AD 0049
        gbc.setState(0x4485, 0x8ed4, 0x4a80, 0xf60f, 0x9430, 0x3881, 0x0, 0x0);
        gbc.writeMem(0x4485, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8ed4, gbc.sp());
        EXPECT(0x4487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 004A
        gbc.setState(0x5a8c, 0x607a, 0xf70, 0x57bf, 0xbf36, 0xd102, 0x1, 0x1);
        gbc.writeMem(0x5a8c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x607a, gbc.sp());
        EXPECT(0x5a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 004B
        gbc.setState(0x3613, 0xca0b, 0xa7f0, 0x25d9, 0x6465, 0x59e2, 0x1, 0x0);
        gbc.writeMem(0x3613, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xca0b, gbc.sp());
        EXPECT(0x3615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 004C
        gbc.setState(0xd2fd, 0x1fa2, 0x80, 0x16ea, 0x1ec3, 0x2cb4, 0x1, 0x0);
        gbc.writeMem(0xd2fd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1fa2, gbc.sp());
        EXPECT(0xd2ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fd));
        EXPECT(0xad, gbc.readMem(0xd2fe));
        // CB AD 004D
        gbc.setState(0x4f0a, 0x77ad, 0xac00, 0x3607, 0xad3c, 0xaf55, 0x0, 0x1);
        gbc.writeMem(0x4f0a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x77ad, gbc.sp());
        EXPECT(0x4f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 004E
        gbc.setState(0x8705, 0xdaeb, 0xa900, 0x5fc7, 0x50ba, 0x7e0d, 0x1, 0x1);
        gbc.writeMem(0x8705, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdaeb, gbc.sp());
        EXPECT(0x8707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8705));
        EXPECT(0xad, gbc.readMem(0x8706));
        // CB AD 004F
        gbc.setState(0xbd5a, 0x851a, 0xb9a0, 0x6c2a, 0xaa11, 0x98c9, 0x0, 0x1);
        gbc.writeMem(0xbd5a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x851a, gbc.sp());
        EXPECT(0xbd5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5a));
        EXPECT(0xad, gbc.readMem(0xbd5b));
        // CB AD 0050
        gbc.setState(0xeeda, 0xeda1, 0xe730, 0x21fd, 0x61bd, 0xa15f, 0x1, 0x1);
        gbc.writeMem(0xeeda, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xeda1, gbc.sp());
        EXPECT(0xeedc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeda));
        EXPECT(0xad, gbc.readMem(0xeedb));
        // CB AD 0051
        gbc.setState(0x91dc, 0x802f, 0xdd40, 0xaf03, 0xab8d, 0x24ca, 0x0, 0x0);
        gbc.writeMem(0x91dc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x802f, gbc.sp());
        EXPECT(0x91de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91dc));
        EXPECT(0xad, gbc.readMem(0x91dd));
        // CB AD 0052
        gbc.setState(0x5af0, 0x347a, 0x410, 0x6f95, 0x3364, 0xd83, 0x0, 0x0);
        gbc.writeMem(0x5af0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x347a, gbc.sp());
        EXPECT(0x5af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0053
        gbc.setState(0x65a1, 0x4ea5, 0x13e0, 0xd404, 0x4853, 0x3583, 0x0, 0x1);
        gbc.writeMem(0x65a1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4ea5, gbc.sp());
        EXPECT(0x65a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0054
        gbc.setState(0x243, 0xdcf5, 0xa5a0, 0xc34a, 0x5f26, 0xc4a, 0x0, 0x1);
        gbc.writeMem(0x243, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdcf5, gbc.sp());
        EXPECT(0x245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0055
        gbc.setState(0xefbd, 0xcb2a, 0xcef0, 0xe7dc, 0x382b, 0xd5c3, 0x0, 0x0);
        gbc.writeMem(0xefbd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcb2a, gbc.sp());
        EXPECT(0xefbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbd));
        EXPECT(0xad, gbc.readMem(0xefbe));
        // CB AD 0056
        gbc.setState(0x569a, 0x24cb, 0xba70, 0xec4f, 0xe5ec, 0xe07a, 0x1, 0x0);
        gbc.writeMem(0x569a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x24cb, gbc.sp());
        EXPECT(0x569c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0057
        gbc.setState(0x6720, 0x14a3, 0xb460, 0xbeee, 0x15c6, 0xea93, 0x0, 0x1);
        gbc.writeMem(0x6720, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x14a3, gbc.sp());
        EXPECT(0x6722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0058
        gbc.setState(0x59e7, 0x449b, 0x3dd0, 0xbcd8, 0x5202, 0xcb75, 0x0, 0x1);
        gbc.writeMem(0x59e7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x449b, gbc.sp());
        EXPECT(0x59e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0059
        gbc.setState(0xe04c, 0x2bf1, 0xca60, 0x6ece, 0x2c9d, 0x80f4, 0x1, 0x0);
        gbc.writeMem(0xe04c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2bf1, gbc.sp());
        EXPECT(0xe04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04c));
        EXPECT(0xad, gbc.readMem(0xe04d));
        // CB AD 005A
        gbc.setState(0x6427, 0x337a, 0x2430, 0x2660, 0x680e, 0x8df8, 0x0, 0x1);
        gbc.writeMem(0x6427, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x337a, gbc.sp());
        EXPECT(0x6429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 005B
        gbc.setState(0x60ca, 0xf202, 0x38b0, 0x15fd, 0xdf0, 0x339d, 0x0, 0x0);
        gbc.writeMem(0x60ca, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf202, gbc.sp());
        EXPECT(0x60cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 005C
        gbc.setState(0x4495, 0x4f1, 0xe760, 0x156d, 0x615, 0x73dd, 0x1, 0x1);
        gbc.writeMem(0x4495, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4f1, gbc.sp());
        EXPECT(0x4497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 005D
        gbc.setState(0xecff, 0x99ab, 0xf750, 0xc19d, 0xda5d, 0x94d0, 0x1, 0x1);
        gbc.writeMem(0xecff, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x99ab, gbc.sp());
        EXPECT(0xed01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecff));
        EXPECT(0xad, gbc.readMem(0xed00));
        // CB AD 005E
        gbc.setState(0x8849, 0xf05a, 0xbd00, 0x9587, 0x1493, 0x5cb, 0x1, 0x1);
        gbc.writeMem(0x8849, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf05a, gbc.sp());
        EXPECT(0x884b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8849));
        EXPECT(0xad, gbc.readMem(0x884a));
        // CB AD 005F
        gbc.setState(0x209e, 0x9049, 0x5740, 0x26aa, 0x1ff0, 0x1248, 0x0, 0x1);
        gbc.writeMem(0x209e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9049, gbc.sp());
        EXPECT(0x20a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0060
        gbc.setState(0xb352, 0x8a85, 0x8f30, 0x6c3b, 0x3c4a, 0xdd18, 0x0, 0x0);
        gbc.writeMem(0xb352, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8a85, gbc.sp());
        EXPECT(0xb354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb352));
        EXPECT(0xad, gbc.readMem(0xb353));
        // CB AD 0061
        gbc.setState(0x9bec, 0xf387, 0x9c40, 0x82f5, 0xb7a4, 0x3876, 0x1, 0x0);
        gbc.writeMem(0x9bec, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf387, gbc.sp());
        EXPECT(0x9bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bec));
        EXPECT(0xad, gbc.readMem(0x9bed));
        // CB AD 0062
        gbc.setState(0xb003, 0xb3d2, 0xcb50, 0xe66d, 0x6a1e, 0x789b, 0x0, 0x0);
        gbc.writeMem(0xb003, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb3d2, gbc.sp());
        EXPECT(0xb005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb003));
        EXPECT(0xad, gbc.readMem(0xb004));
        // CB AD 0063
        gbc.setState(0xb59b, 0xb2cb, 0x4fb0, 0x1ca, 0xa39a, 0x88b9, 0x1, 0x0);
        gbc.writeMem(0xb59b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb2cb, gbc.sp());
        EXPECT(0xb59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59b));
        EXPECT(0xad, gbc.readMem(0xb59c));
        // CB AD 0064
        gbc.setState(0x3042, 0x2171, 0xf680, 0xb99c, 0x666a, 0x95a5, 0x0, 0x1);
        gbc.writeMem(0x3042, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2171, gbc.sp());
        EXPECT(0x3044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0065
        gbc.setState(0x3f24, 0x39d9, 0xd470, 0x653d, 0xe429, 0xdfd3, 0x1, 0x1);
        gbc.writeMem(0x3f24, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x39d9, gbc.sp());
        EXPECT(0x3f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0067
        gbc.setState(0x194a, 0x26d3, 0x6080, 0xf45, 0x306f, 0x31e0, 0x1, 0x0);
        gbc.writeMem(0x194a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x26d3, gbc.sp());
        EXPECT(0x194c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0068
        gbc.setState(0xa43e, 0x5c03, 0x2990, 0x939e, 0x423c, 0xcf38, 0x1, 0x1);
        gbc.writeMem(0xa43e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5c03, gbc.sp());
        EXPECT(0xa440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43e));
        EXPECT(0xad, gbc.readMem(0xa43f));
        // CB AD 0069
        gbc.setState(0x8763, 0x3a3f, 0xf720, 0x3734, 0x9734, 0x1763, 0x0, 0x0);
        gbc.writeMem(0x8763, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3a3f, gbc.sp());
        EXPECT(0x8765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8763));
        EXPECT(0xad, gbc.readMem(0x8764));
        // CB AD 006A
        gbc.setState(0x7695, 0x2ecf, 0xb270, 0x4525, 0x8294, 0x7d21, 0x1, 0x1);
        gbc.writeMem(0x7695, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2ecf, gbc.sp());
        EXPECT(0x7697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 006B
        gbc.setState(0x1d79, 0xf625, 0x8470, 0x82d6, 0x699d, 0x20f9, 0x0, 0x1);
        gbc.writeMem(0x1d79, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf625, gbc.sp());
        EXPECT(0x1d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 006C
        gbc.setState(0x6523, 0x4f00, 0x59e0, 0x7401, 0xe408, 0xae25, 0x0, 0x1);
        gbc.writeMem(0x6523, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4f00, gbc.sp());
        EXPECT(0x6525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 006D
        gbc.setState(0xd8a, 0x10d4, 0xac10, 0x4c6, 0xdeea, 0x3bc6, 0x0, 0x0);
        gbc.writeMem(0xd8a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x10d4, gbc.sp());
        EXPECT(0xd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 006E
        gbc.setState(0x315, 0xcbf3, 0x4610, 0xc048, 0xe2e8, 0xb86b, 0x1, 0x0);
        gbc.writeMem(0x315, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcbf3, gbc.sp());
        EXPECT(0x317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 006F
        gbc.setState(0x304, 0x9bc0, 0x5b80, 0x24d8, 0x68ac, 0x400f, 0x0, 0x1);
        gbc.writeMem(0x304, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9bc0, gbc.sp());
        EXPECT(0x306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0070
        gbc.setState(0xa267, 0xee2c, 0xbb90, 0xe792, 0xafca, 0x1e90, 0x1, 0x0);
        gbc.writeMem(0xa267, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xee2c, gbc.sp());
        EXPECT(0xa269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa267));
        EXPECT(0xad, gbc.readMem(0xa268));
        // CB AD 0071
        gbc.setState(0x5de0, 0x8025, 0x6c00, 0x7831, 0x6e64, 0x670f, 0x0, 0x1);
        gbc.writeMem(0x5de0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8025, gbc.sp());
        EXPECT(0x5de2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0072
        gbc.setState(0x52ed, 0x92d7, 0x40e0, 0x29d6, 0xb448, 0x3dee, 0x0, 0x1);
        gbc.writeMem(0x52ed, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x92d7, gbc.sp());
        EXPECT(0x52ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0073
        gbc.setState(0x9af7, 0xf43, 0x5ea0, 0xcd8a, 0x815d, 0x23a7, 0x1, 0x0);
        gbc.writeMem(0x9af7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf43, gbc.sp());
        EXPECT(0x9af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af7));
        EXPECT(0xad, gbc.readMem(0x9af8));
        // CB AD 0074
        gbc.setState(0x52da, 0x410d, 0x5760, 0x53e2, 0xc0f3, 0xc3f6, 0x1, 0x0);
        gbc.writeMem(0x52da, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x410d, gbc.sp());
        EXPECT(0x52dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0075
        gbc.setState(0xf90, 0x10ed, 0x17d0, 0xca67, 0x5c5f, 0xac5d, 0x0, 0x1);
        gbc.writeMem(0xf90, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x10ed, gbc.sp());
        EXPECT(0xf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0076
        gbc.setState(0x15cc, 0xa600, 0x6150, 0x1aaa, 0xcc26, 0xb595, 0x1, 0x1);
        gbc.writeMem(0x15cc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa600, gbc.sp());
        EXPECT(0x15ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0077
        gbc.setState(0x711b, 0xe16a, 0x7580, 0x70db, 0xa762, 0x2fe1, 0x1, 0x1);
        gbc.writeMem(0x711b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe16a, gbc.sp());
        EXPECT(0x711d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0078
        gbc.setState(0x6a5c, 0xd799, 0xea0, 0x7f6d, 0xe326, 0xda20, 0x0, 0x0);
        gbc.writeMem(0x6a5c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd799, gbc.sp());
        EXPECT(0x6a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0079
        gbc.setState(0x6f9, 0x3524, 0xde30, 0xf56d, 0xdd25, 0x8467, 0x1, 0x0);
        gbc.writeMem(0x6f9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3524, gbc.sp());
        EXPECT(0x6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 007A
        gbc.setState(0xe29c, 0x65bc, 0xbfd0, 0x23d7, 0x66af, 0x6157, 0x1, 0x1);
        gbc.writeMem(0xe29c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x65bc, gbc.sp());
        EXPECT(0xe29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29c));
        EXPECT(0xad, gbc.readMem(0xe29d));
        // CB AD 007B
        gbc.setState(0xdd48, 0x10bc, 0x2f00, 0xef5e, 0x77, 0xe8c6, 0x1, 0x0);
        gbc.writeMem(0xdd48, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x10bc, gbc.sp());
        EXPECT(0xdd4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd48));
        EXPECT(0xad, gbc.readMem(0xdd49));
        // CB AD 007C
        gbc.setState(0xa994, 0x3782, 0x74a0, 0x340c, 0x34d5, 0x8fc2, 0x0, 0x0);
        gbc.writeMem(0xa994, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3782, gbc.sp());
        EXPECT(0xa996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa994));
        EXPECT(0xad, gbc.readMem(0xa995));
        // CB AD 007D
        gbc.setState(0x1762, 0x2dcd, 0xff50, 0x7146, 0x2b63, 0x972b, 0x1, 0x0);
        gbc.writeMem(0x1762, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2dcd, gbc.sp());
        EXPECT(0x1764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 007E
        gbc.setState(0x6a35, 0xc7f9, 0xb3b0, 0xc84, 0x2735, 0xe379, 0x0, 0x1);
        gbc.writeMem(0x6a35, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc7f9, gbc.sp());
        EXPECT(0x6a37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 007F
        gbc.setState(0x449b, 0x520, 0x2f20, 0x44dc, 0xe3b0, 0xdacb, 0x0, 0x0);
        gbc.writeMem(0x449b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x520, gbc.sp());
        EXPECT(0x449d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0080
        gbc.setState(0xe54b, 0x74f7, 0xc020, 0xd18b, 0xd14, 0xb434, 0x0, 0x0);
        gbc.writeMem(0xe54b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x74f7, gbc.sp());
        EXPECT(0xe54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe54b));
        EXPECT(0xad, gbc.readMem(0xe54c));
        // CB AD 0081
        gbc.setState(0x2e84, 0x29a1, 0x6110, 0x5400, 0xd5aa, 0x16f4, 0x0, 0x0);
        gbc.writeMem(0x2e84, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x29a1, gbc.sp());
        EXPECT(0x2e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0082
        gbc.setState(0xee04, 0xd7bc, 0x7ec0, 0x32e8, 0xaa38, 0x7086, 0x1, 0x0);
        gbc.writeMem(0xee04, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd7bc, gbc.sp());
        EXPECT(0xee06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee04));
        EXPECT(0xad, gbc.readMem(0xee05));
        // CB AD 0083
        gbc.setState(0x18c9, 0x88c3, 0xedc0, 0x439c, 0xca29, 0x711e, 0x0, 0x1);
        gbc.writeMem(0x18c9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x88c3, gbc.sp());
        EXPECT(0x18cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0085
        gbc.setState(0xaf70, 0x16b0, 0x6370, 0xdae2, 0x6184, 0xac2a, 0x0, 0x1);
        gbc.writeMem(0xaf70, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x16b0, gbc.sp());
        EXPECT(0xaf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf70));
        EXPECT(0xad, gbc.readMem(0xaf71));
        // CB AD 0086
        gbc.setState(0xcf9b, 0x6c8, 0x1490, 0x7b50, 0x11d1, 0x8f6c, 0x1, 0x0);
        gbc.writeMem(0xcf9b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6c8, gbc.sp());
        EXPECT(0xcf9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9b));
        EXPECT(0xad, gbc.readMem(0xcf9c));
        // CB AD 0087
        gbc.setState(0x1f0c, 0x7ff6, 0x5940, 0xb8c7, 0x6c91, 0x3629, 0x0, 0x0);
        gbc.writeMem(0x1f0c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7ff6, gbc.sp());
        EXPECT(0x1f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0088
        gbc.setState(0xc9a7, 0xb9b5, 0xae60, 0xebef, 0xcf0b, 0x517, 0x0, 0x1);
        gbc.writeMem(0xc9a7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb9b5, gbc.sp());
        EXPECT(0xc9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a7));
        EXPECT(0xad, gbc.readMem(0xc9a8));
        // CB AD 0089
        gbc.setState(0xbfa2, 0x45c2, 0x8fd0, 0x4170, 0x2012, 0x5d23, 0x1, 0x1);
        gbc.writeMem(0xbfa2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x45c2, gbc.sp());
        EXPECT(0xbfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa2));
        EXPECT(0xad, gbc.readMem(0xbfa3));
        // CB AD 008A
        gbc.setState(0x62b5, 0x2b0, 0xf7f0, 0x795b, 0x893d, 0xcf80, 0x0, 0x0);
        gbc.writeMem(0x62b5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2b0, gbc.sp());
        EXPECT(0x62b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 008B
        gbc.setState(0x5616, 0xa0ee, 0xaf50, 0x7a0, 0x9f26, 0x9409, 0x1, 0x0);
        gbc.writeMem(0x5616, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa0ee, gbc.sp());
        EXPECT(0x5618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 008C
        gbc.setState(0xbb38, 0x6b59, 0x2d10, 0x3c94, 0xf537, 0x83f2, 0x0, 0x0);
        gbc.writeMem(0xbb38, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6b59, gbc.sp());
        EXPECT(0xbb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb38));
        EXPECT(0xad, gbc.readMem(0xbb39));
        // CB AD 008D
        gbc.setState(0x3780, 0x3897, 0x9c60, 0xd77b, 0x31c3, 0x1811, 0x0, 0x0);
        gbc.writeMem(0x3780, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3897, gbc.sp());
        EXPECT(0x3782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 008F
        gbc.setState(0xd73e, 0x1448, 0xfe90, 0xc99e, 0x573, 0x1449, 0x1, 0x1);
        gbc.writeMem(0xd73e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1448, gbc.sp());
        EXPECT(0xd740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73e));
        EXPECT(0xad, gbc.readMem(0xd73f));
        // CB AD 0090
        gbc.setState(0x31b7, 0x902c, 0x1b90, 0x5407, 0x1194, 0xdb9d, 0x1, 0x0);
        gbc.writeMem(0x31b7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x902c, gbc.sp());
        EXPECT(0x31b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0091
        gbc.setState(0xd456, 0xb7e8, 0xa060, 0xffd8, 0xce70, 0x500c, 0x1, 0x0);
        gbc.writeMem(0xd456, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb7e8, gbc.sp());
        EXPECT(0xd458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd456));
        EXPECT(0xad, gbc.readMem(0xd457));
        // CB AD 0092
        gbc.setState(0xd961, 0xc86, 0x4090, 0x5eaa, 0x128a, 0xe18d, 0x0, 0x0);
        gbc.writeMem(0xd961, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc86, gbc.sp());
        EXPECT(0xd963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd961));
        EXPECT(0xad, gbc.readMem(0xd962));
        // CB AD 0093
        gbc.setState(0x456c, 0x7dd1, 0x1c80, 0x6feb, 0xd473, 0xa742, 0x1, 0x0);
        gbc.writeMem(0x456c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7dd1, gbc.sp());
        EXPECT(0x456e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0094
        gbc.setState(0x61ca, 0x4448, 0xdca0, 0x4405, 0x5bb5, 0xe4c0, 0x1, 0x0);
        gbc.writeMem(0x61ca, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x4448, gbc.sp());
        EXPECT(0x61cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0095
        gbc.setState(0x3eba, 0x5029, 0xd020, 0xeca1, 0x1f9b, 0x1e8b, 0x0, 0x0);
        gbc.writeMem(0x3eba, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5029, gbc.sp());
        EXPECT(0x3ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0096
        gbc.setState(0x3ef, 0x12c0, 0xef30, 0x4459, 0xb2f8, 0x3476, 0x1, 0x1);
        gbc.writeMem(0x3ef, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x12c0, gbc.sp());
        EXPECT(0x3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0097
        gbc.setState(0x86c8, 0x7813, 0xa390, 0xbddf, 0xd8f6, 0xad49, 0x1, 0x0);
        gbc.writeMem(0x86c8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7813, gbc.sp());
        EXPECT(0x86ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c8));
        EXPECT(0xad, gbc.readMem(0x86c9));
        // CB AD 0099
        gbc.setState(0x446, 0xd20d, 0xaa30, 0xedcf, 0x7c68, 0x2737, 0x1, 0x0);
        gbc.writeMem(0x446, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd20d, gbc.sp());
        EXPECT(0x448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 009A
        gbc.setState(0x98d5, 0xaf79, 0x8300, 0x64c7, 0xfd03, 0x976c, 0x0, 0x1);
        gbc.writeMem(0x98d5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xaf79, gbc.sp());
        EXPECT(0x98d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d5));
        EXPECT(0xad, gbc.readMem(0x98d6));
        // CB AD 009B
        gbc.setState(0x3cd0, 0xc366, 0x6a60, 0xed3d, 0x6dfb, 0x54c5, 0x0, 0x0);
        gbc.writeMem(0x3cd0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc366, gbc.sp());
        EXPECT(0x3cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 009C
        gbc.setState(0x5adf, 0xb2e0, 0x8430, 0x742a, 0xf51c, 0x442e, 0x0, 0x0);
        gbc.writeMem(0x5adf, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb2e0, gbc.sp());
        EXPECT(0x5ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 009D
        gbc.setState(0x23a2, 0xa136, 0xeb60, 0xb290, 0xc1c6, 0x6146, 0x0, 0x0);
        gbc.writeMem(0x23a2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa136, gbc.sp());
        EXPECT(0x23a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 009E
        gbc.setState(0x4043, 0xbf4e, 0x17c0, 0xfc19, 0xb87f, 0x36f9, 0x1, 0x0);
        gbc.writeMem(0x4043, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbf4e, gbc.sp());
        EXPECT(0x4045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 009F
        gbc.setState(0x25ba, 0xc856, 0xeab0, 0x2a84, 0x6f47, 0xce42, 0x1, 0x1);
        gbc.writeMem(0x25ba, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc856, gbc.sp());
        EXPECT(0x25bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00A0
        gbc.setState(0x65af, 0x4791, 0xcd10, 0xf929, 0xf46, 0xda5e, 0x1, 0x1);
        gbc.writeMem(0x65af, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4791, gbc.sp());
        EXPECT(0x65b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00A1
        gbc.setState(0x7a9a, 0x269b, 0x9e50, 0x9e7a, 0xf2a6, 0x1760, 0x0, 0x1);
        gbc.writeMem(0x7a9a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x269b, gbc.sp());
        EXPECT(0x7a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00A3
        gbc.setState(0xe3dd, 0xded1, 0x7810, 0x7bad, 0xe02d, 0x8892, 0x1, 0x1);
        gbc.writeMem(0xe3dd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xded1, gbc.sp());
        EXPECT(0xe3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3dd));
        EXPECT(0xad, gbc.readMem(0xe3de));
        // CB AD 00A4
        gbc.setState(0x2b1e, 0xd81b, 0x490, 0x169, 0xea52, 0x8692, 0x1, 0x0);
        gbc.writeMem(0x2b1e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd81b, gbc.sp());
        EXPECT(0x2b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00A5
        gbc.setState(0x6508, 0x3c9d, 0x7ca0, 0xba52, 0xf6a4, 0x1da4, 0x0, 0x0);
        gbc.writeMem(0x6508, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3c9d, gbc.sp());
        EXPECT(0x650a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00A6
        gbc.setState(0x9b35, 0xc3ee, 0x44b0, 0xad36, 0xea, 0x88, 0x0, 0x1);
        gbc.writeMem(0x9b35, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc3ee, gbc.sp());
        EXPECT(0x9b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b35));
        EXPECT(0xad, gbc.readMem(0x9b36));
        // CB AD 00A7
        gbc.setState(0x5295, 0x5a4b, 0xe7e0, 0x5224, 0x145c, 0x3ae5, 0x1, 0x1);
        gbc.writeMem(0x5295, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5a4b, gbc.sp());
        EXPECT(0x5297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00A8
        gbc.setState(0xb98e, 0x80d6, 0x35f0, 0x8dbe, 0xa08d, 0x30dd, 0x0, 0x1);
        gbc.writeMem(0xb98e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x80d6, gbc.sp());
        EXPECT(0xb990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98e));
        EXPECT(0xad, gbc.readMem(0xb98f));
        // CB AD 00A9
        gbc.setState(0x178d, 0xb382, 0xa0a0, 0x18f7, 0x104, 0x39e6, 0x1, 0x0);
        gbc.writeMem(0x178d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb382, gbc.sp());
        EXPECT(0x178f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00AA
        gbc.setState(0x89be, 0xe914, 0xec20, 0xd41c, 0xddc4, 0xe66d, 0x0, 0x0);
        gbc.writeMem(0x89be, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe914, gbc.sp());
        EXPECT(0x89c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89be));
        EXPECT(0xad, gbc.readMem(0x89bf));
        // CB AD 00AB
        gbc.setState(0xded, 0x80cb, 0xdd20, 0xcc4f, 0xa91a, 0xe930, 0x1, 0x1);
        gbc.writeMem(0xded, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x80cb, gbc.sp());
        EXPECT(0xdef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00AC
        gbc.setState(0x87e0, 0x729e, 0xf450, 0x10e5, 0x787a, 0x6bee, 0x1, 0x0);
        gbc.writeMem(0x87e0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x729e, gbc.sp());
        EXPECT(0x87e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e0));
        EXPECT(0xad, gbc.readMem(0x87e1));
        // CB AD 00AD
        gbc.setState(0xa1ce, 0x7489, 0xbd00, 0x224a, 0x82f2, 0xd15f, 0x0, 0x0);
        gbc.writeMem(0xa1ce, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7489, gbc.sp());
        EXPECT(0xa1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ce));
        EXPECT(0xad, gbc.readMem(0xa1cf));
        // CB AD 00AE
        gbc.setState(0xe5b7, 0x8a3a, 0xcc20, 0x69d1, 0x20f7, 0x9f2d, 0x0, 0x1);
        gbc.writeMem(0xe5b7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8a3a, gbc.sp());
        EXPECT(0xe5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b7));
        EXPECT(0xad, gbc.readMem(0xe5b8));
        // CB AD 00AF
        gbc.setState(0x840a, 0x7bed, 0x3aa0, 0xf35c, 0x8753, 0x2375, 0x0, 0x1);
        gbc.writeMem(0x840a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7bed, gbc.sp());
        EXPECT(0x840c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840a));
        EXPECT(0xad, gbc.readMem(0x840b));
        // CB AD 00B0
        gbc.setState(0x1f6b, 0xd0c8, 0x7290, 0xa9fd, 0x651f, 0x9ca2, 0x1, 0x1);
        gbc.writeMem(0x1f6b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd0c8, gbc.sp());
        EXPECT(0x1f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00B1
        gbc.setState(0xf0a, 0x7029, 0xa6d0, 0xb9e7, 0x42, 0xe7cb, 0x0, 0x1);
        gbc.writeMem(0xf0a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7029, gbc.sp());
        EXPECT(0xf0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00B2
        gbc.setState(0xa524, 0x2e92, 0xf3a0, 0x8ddb, 0x16ef, 0x623e, 0x1, 0x1);
        gbc.writeMem(0xa524, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2e92, gbc.sp());
        EXPECT(0xa526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa524));
        EXPECT(0xad, gbc.readMem(0xa525));
        // CB AD 00B3
        gbc.setState(0x7bf4, 0x5856, 0xe400, 0xc0f2, 0x4699, 0x2df3, 0x0, 0x1);
        gbc.writeMem(0x7bf4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5856, gbc.sp());
        EXPECT(0x7bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00B4
        gbc.setState(0x371c, 0x94ca, 0x6240, 0x262e, 0x4650, 0x55fb, 0x0, 0x1);
        gbc.writeMem(0x371c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x94ca, gbc.sp());
        EXPECT(0x371e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00B5
        gbc.setState(0x2f3, 0xcd68, 0xc500, 0xb24e, 0x7cf9, 0x5404, 0x0, 0x0);
        gbc.writeMem(0x2f3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcd68, gbc.sp());
        EXPECT(0x2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00B6
        gbc.setState(0xdde2, 0xed5d, 0xb210, 0x33eb, 0x309d, 0x5078, 0x1, 0x1);
        gbc.writeMem(0xdde2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xed5d, gbc.sp());
        EXPECT(0xdde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde2));
        EXPECT(0xad, gbc.readMem(0xdde3));
        // CB AD 00B9
        gbc.setState(0x5716, 0x50ab, 0xe720, 0x6193, 0x1fbb, 0x863b, 0x0, 0x0);
        gbc.writeMem(0x5716, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x50ab, gbc.sp());
        EXPECT(0x5718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00BA
        gbc.setState(0x791b, 0xf20b, 0x15a0, 0x4528, 0xf657, 0x73d9, 0x0, 0x1);
        gbc.writeMem(0x791b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf20b, gbc.sp());
        EXPECT(0x791d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00BB
        gbc.setState(0x21cc, 0xb52f, 0x9eb0, 0x28de, 0xb15c, 0x739d, 0x1, 0x0);
        gbc.writeMem(0x21cc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb52f, gbc.sp());
        EXPECT(0x21ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00BC
        gbc.setState(0x6087, 0xc21e, 0x87b0, 0xc977, 0x359d, 0xc521, 0x0, 0x1);
        gbc.writeMem(0x6087, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc21e, gbc.sp());
        EXPECT(0x6089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00BD
        gbc.setState(0x7154, 0x27a1, 0x9a40, 0xd89a, 0x2b97, 0xb977, 0x1, 0x1);
        gbc.writeMem(0x7154, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x27a1, gbc.sp());
        EXPECT(0x7156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00BE
        gbc.setState(0x23f3, 0xf2e4, 0x4320, 0x7c1c, 0x3916, 0x9331, 0x0, 0x1);
        gbc.writeMem(0x23f3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf2e4, gbc.sp());
        EXPECT(0x23f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00BF
        gbc.setState(0xdfe3, 0x428a, 0x4140, 0xb4d9, 0xb26c, 0x522b, 0x1, 0x1);
        gbc.writeMem(0xdfe3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x428a, gbc.sp());
        EXPECT(0xdfe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe3));
        EXPECT(0xad, gbc.readMem(0xdfe4));
        // CB AD 00C0
        gbc.setState(0x8292, 0xdea9, 0x8800, 0xaa, 0x24de, 0x1f97, 0x0, 0x0);
        gbc.writeMem(0x8292, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdea9, gbc.sp());
        EXPECT(0x8294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8292));
        EXPECT(0xad, gbc.readMem(0x8293));
        // CB AD 00C1
        gbc.setState(0xe8e9, 0x35ed, 0x94b0, 0x65d8, 0x3384, 0x7aee, 0x1, 0x1);
        gbc.writeMem(0xe8e9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x35ed, gbc.sp());
        EXPECT(0xe8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e9));
        EXPECT(0xad, gbc.readMem(0xe8ea));
        // CB AD 00C2
        gbc.setState(0xc4c8, 0x9554, 0x2fb0, 0xac58, 0xeb6, 0x5e57, 0x0, 0x0);
        gbc.writeMem(0xc4c8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9554, gbc.sp());
        EXPECT(0xc4ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c8));
        EXPECT(0xad, gbc.readMem(0xc4c9));
        // CB AD 00C3
        gbc.setState(0x743a, 0x98c0, 0xf180, 0xb5bd, 0x256a, 0xb7bc, 0x0, 0x0);
        gbc.writeMem(0x743a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x98c0, gbc.sp());
        EXPECT(0x743c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00C4
        gbc.setState(0x2089, 0xbd0c, 0xf770, 0xd63c, 0xcfad, 0x9b43, 0x0, 0x1);
        gbc.writeMem(0x2089, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbd0c, gbc.sp());
        EXPECT(0x208b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00C7
        gbc.setState(0xc968, 0x8e96, 0xcd50, 0x8908, 0x2a89, 0x80da, 0x0, 0x1);
        gbc.writeMem(0xc968, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8e96, gbc.sp());
        EXPECT(0xc96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc968));
        EXPECT(0xad, gbc.readMem(0xc969));
        // CB AD 00C8
        gbc.setState(0xd11a, 0xaf0f, 0x8cb0, 0x4e9a, 0xe18c, 0x5a27, 0x1, 0x1);
        gbc.writeMem(0xd11a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xaf0f, gbc.sp());
        EXPECT(0xd11c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11a));
        EXPECT(0xad, gbc.readMem(0xd11b));
        // CB AD 00C9
        gbc.setState(0x1bd9, 0xffe, 0x8a10, 0xdd33, 0xab1e, 0x3b53, 0x1, 0x1);
        gbc.writeMem(0x1bd9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xffe, gbc.sp());
        EXPECT(0x1bdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00CA
        gbc.setState(0x42a5, 0x1257, 0xa880, 0x4a80, 0x5ded, 0x8946, 0x1, 0x1);
        gbc.writeMem(0x42a5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1257, gbc.sp());
        EXPECT(0x42a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00CB
        gbc.setState(0x4790, 0x50e5, 0x3e70, 0xa665, 0x1029, 0x25b9, 0x0, 0x0);
        gbc.writeMem(0x4790, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x50e5, gbc.sp());
        EXPECT(0x4792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00CC
        gbc.setState(0x8da3, 0x4bfe, 0x94b0, 0xb0fb, 0xdf5c, 0x4754, 0x1, 0x1);
        gbc.writeMem(0x8da3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4bfe, gbc.sp());
        EXPECT(0x8da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da3));
        EXPECT(0xad, gbc.readMem(0x8da4));
        // CB AD 00CD
        gbc.setState(0x4387, 0xbf05, 0xbe50, 0xf687, 0x7b31, 0x8d18, 0x1, 0x1);
        gbc.writeMem(0x4387, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbf05, gbc.sp());
        EXPECT(0x4389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00CE
        gbc.setState(0x7920, 0x84be, 0x8a40, 0x762c, 0xe318, 0x72cc, 0x1, 0x1);
        gbc.writeMem(0x7920, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x84be, gbc.sp());
        EXPECT(0x7922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00CF
        gbc.setState(0xc816, 0xf613, 0x4050, 0xf78a, 0xc1cd, 0x4296, 0x1, 0x0);
        gbc.writeMem(0xc816, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf613, gbc.sp());
        EXPECT(0xc818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc816));
        EXPECT(0xad, gbc.readMem(0xc817));
        // CB AD 00D0
        gbc.setState(0x36c4, 0x159a, 0xfc0, 0x4d67, 0xf06e, 0xe289, 0x1, 0x1);
        gbc.writeMem(0x36c4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0x36c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00D1
        gbc.setState(0x326a, 0x511a, 0xe650, 0x78fe, 0x629d, 0x39f5, 0x1, 0x1);
        gbc.writeMem(0x326a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x511a, gbc.sp());
        EXPECT(0x326c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00D2
        gbc.setState(0x66db, 0x172d, 0x80f0, 0x2412, 0xe0ce, 0xe104, 0x1, 0x0);
        gbc.writeMem(0x66db, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x172d, gbc.sp());
        EXPECT(0x66dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00D3
        gbc.setState(0x309, 0xe3a4, 0x2580, 0x5b3b, 0x1213, 0x7ebf, 0x1, 0x1);
        gbc.writeMem(0x309, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe3a4, gbc.sp());
        EXPECT(0x30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00D4
        gbc.setState(0xded1, 0xae53, 0x1270, 0xb8c4, 0x7120, 0x1e31, 0x0, 0x0);
        gbc.writeMem(0xded1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xae53, gbc.sp());
        EXPECT(0xded3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded1));
        EXPECT(0xad, gbc.readMem(0xded2));
        // CB AD 00D5
        gbc.setState(0xab0f, 0x36da, 0xb590, 0x565f, 0x6e99, 0x6a15, 0x0, 0x1);
        gbc.writeMem(0xab0f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x36da, gbc.sp());
        EXPECT(0xab11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab0f));
        EXPECT(0xad, gbc.readMem(0xab10));
        // CB AD 00D6
        gbc.setState(0xc137, 0x7b7d, 0x2dc0, 0xdb1, 0xaa73, 0x599d, 0x1, 0x0);
        gbc.writeMem(0xc137, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7b7d, gbc.sp());
        EXPECT(0xc139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc137));
        EXPECT(0xad, gbc.readMem(0xc138));
        // CB AD 00D7
        gbc.setState(0x2e43, 0x6f37, 0x8ea0, 0xe46d, 0xc79a, 0x24cb, 0x0, 0x0);
        gbc.writeMem(0x2e43, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6f37, gbc.sp());
        EXPECT(0x2e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00D8
        gbc.setState(0x27c4, 0x21ea, 0x8550, 0xf55a, 0x604a, 0x9601, 0x1, 0x1);
        gbc.writeMem(0x27c4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x21ea, gbc.sp());
        EXPECT(0x27c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00D9
        gbc.setState(0x6d37, 0x9cd1, 0xf240, 0xfc5b, 0x4bec, 0x4d7e, 0x1, 0x0);
        gbc.writeMem(0x6d37, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9cd1, gbc.sp());
        EXPECT(0x6d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00DA
        gbc.setState(0x1375, 0x88d7, 0x6060, 0x2860, 0x180c, 0xa198, 0x1, 0x0);
        gbc.writeMem(0x1375, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x88d7, gbc.sp());
        EXPECT(0x1377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00DB
        gbc.setState(0x5bbc, 0xf4af, 0xe240, 0xabec, 0x1b27, 0x9750, 0x1, 0x1);
        gbc.writeMem(0x5bbc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf4af, gbc.sp());
        EXPECT(0x5bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00DC
        gbc.setState(0x520b, 0x7e10, 0x6460, 0xdbdd, 0xf55c, 0x4d06, 0x1, 0x0);
        gbc.writeMem(0x520b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7e10, gbc.sp());
        EXPECT(0x520d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00DE
        gbc.setState(0x70cd, 0xffe9, 0x1620, 0xf08, 0xaa36, 0xa97e, 0x0, 0x1);
        gbc.writeMem(0x70cd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xffe9, gbc.sp());
        EXPECT(0x70cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00DF
        gbc.setState(0xd67e, 0x2791, 0x1ea0, 0x97b2, 0x7964, 0x6872, 0x0, 0x0);
        gbc.writeMem(0xd67e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2791, gbc.sp());
        EXPECT(0xd680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67e));
        EXPECT(0xad, gbc.readMem(0xd67f));
        // CB AD 00E0
        gbc.setState(0x6479, 0xe77f, 0xabb0, 0xb089, 0xcca9, 0x8ed8, 0x0, 0x0);
        gbc.writeMem(0x6479, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe77f, gbc.sp());
        EXPECT(0x647b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00E1
        gbc.setState(0xbd9a, 0xc241, 0xd500, 0x8373, 0x6756, 0xd9cd, 0x0, 0x0);
        gbc.writeMem(0xbd9a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc241, gbc.sp());
        EXPECT(0xbd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9a));
        EXPECT(0xad, gbc.readMem(0xbd9b));
        // CB AD 00E2
        gbc.setState(0x71bd, 0x52ce, 0x9f10, 0xa531, 0xeae, 0x53ca, 0x0, 0x0);
        gbc.writeMem(0x71bd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x52ce, gbc.sp());
        EXPECT(0x71bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00E3
        gbc.setState(0x2c3a, 0x68df, 0x3c70, 0xec26, 0x4020, 0xfe2b, 0x1, 0x0);
        gbc.writeMem(0x2c3a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x68df, gbc.sp());
        EXPECT(0x2c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00E4
        gbc.setState(0x186a, 0x8701, 0x5e00, 0x9649, 0xec87, 0x6d7a, 0x1, 0x1);
        gbc.writeMem(0x186a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8701, gbc.sp());
        EXPECT(0x186c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00E5
        gbc.setState(0xbb07, 0x7376, 0x9100, 0x7cb1, 0xa6d9, 0x3495, 0x0, 0x1);
        gbc.writeMem(0xbb07, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7376, gbc.sp());
        EXPECT(0xbb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb07));
        EXPECT(0xad, gbc.readMem(0xbb08));
        // CB AD 00E6
        gbc.setState(0xadf8, 0x923b, 0x500, 0x3cc3, 0xe864, 0x1057, 0x1, 0x1);
        gbc.writeMem(0xadf8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x923b, gbc.sp());
        EXPECT(0xadfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf8));
        EXPECT(0xad, gbc.readMem(0xadf9));
        // CB AD 00E7
        gbc.setState(0xcb4, 0xc93b, 0x1d10, 0x48a, 0x6e9b, 0x440e, 0x0, 0x0);
        gbc.writeMem(0xcb4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc93b, gbc.sp());
        EXPECT(0xcb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00E8
        gbc.setState(0x6e93, 0xebee, 0x4700, 0xc908, 0x1e68, 0x5a99, 0x0, 0x0);
        gbc.writeMem(0x6e93, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xebee, gbc.sp());
        EXPECT(0x6e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00E9
        gbc.setState(0x8ad1, 0x5a36, 0x9eb0, 0x116e, 0x23c7, 0xda68, 0x1, 0x1);
        gbc.writeMem(0x8ad1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5a36, gbc.sp());
        EXPECT(0x8ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad1));
        EXPECT(0xad, gbc.readMem(0x8ad2));
        // CB AD 00EA
        gbc.setState(0x5f98, 0x1445, 0x8db0, 0x73e4, 0xede5, 0x57cb, 0x1, 0x0);
        gbc.writeMem(0x5f98, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1445, gbc.sp());
        EXPECT(0x5f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00EB
        gbc.setState(0x2019, 0xd97b, 0xeb20, 0x245d, 0x6773, 0x83e7, 0x0, 0x1);
        gbc.writeMem(0x2019, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd97b, gbc.sp());
        EXPECT(0x201b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00EC
        gbc.setState(0xd439, 0x55fc, 0x9370, 0xc2f8, 0x7fa6, 0xf83a, 0x1, 0x1);
        gbc.writeMem(0xd439, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x55fc, gbc.sp());
        EXPECT(0xd43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd439));
        EXPECT(0xad, gbc.readMem(0xd43a));
        // CB AD 00ED
        gbc.setState(0x5c79, 0xf6a5, 0x5010, 0xfc89, 0x2271, 0x4f71, 0x1, 0x1);
        gbc.writeMem(0x5c79, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf6a5, gbc.sp());
        EXPECT(0x5c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00EE
        gbc.setState(0xcca5, 0x51a4, 0x1a90, 0x220e, 0x504d, 0xf4c0, 0x0, 0x1);
        gbc.writeMem(0xcca5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x51a4, gbc.sp());
        EXPECT(0xcca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca5));
        EXPECT(0xad, gbc.readMem(0xcca6));
        // CB AD 00EF
        gbc.setState(0xc9f0, 0x28ec, 0x2590, 0x3d98, 0xb9da, 0xe887, 0x1, 0x1);
        gbc.writeMem(0xc9f0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x28ec, gbc.sp());
        EXPECT(0xc9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f0));
        EXPECT(0xad, gbc.readMem(0xc9f1));
        // CB AD 00F0
        gbc.setState(0xd5aa, 0x3ea5, 0x6a40, 0x6247, 0x2fcf, 0x10d4, 0x1, 0x0);
        gbc.writeMem(0xd5aa, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3ea5, gbc.sp());
        EXPECT(0xd5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5aa));
        EXPECT(0xad, gbc.readMem(0xd5ab));
        // CB AD 00F1
        gbc.setState(0x600b, 0xe719, 0x1cb0, 0x594, 0xaa75, 0xb1da, 0x1, 0x0);
        gbc.writeMem(0x600b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe719, gbc.sp());
        EXPECT(0x600d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00F3
        gbc.setState(0xeb1f, 0xf628, 0x3e10, 0x2fd6, 0xfcc5, 0x9575, 0x0, 0x1);
        gbc.writeMem(0xeb1f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf628, gbc.sp());
        EXPECT(0xeb21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1f));
        EXPECT(0xad, gbc.readMem(0xeb20));
        // CB AD 00F4
        gbc.setState(0x2c9c, 0xa969, 0x7570, 0xc095, 0xf9c0, 0x1522, 0x1, 0x0);
        gbc.writeMem(0x2c9c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa969, gbc.sp());
        EXPECT(0x2c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00F5
        gbc.setState(0x64db, 0xcf55, 0x5f30, 0x9a23, 0x5882, 0x6642, 0x0, 0x1);
        gbc.writeMem(0x64db, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xcf55, gbc.sp());
        EXPECT(0x64dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00F7
        gbc.setState(0x2ac6, 0xd3c7, 0x4a30, 0x64d5, 0xf31e, 0xbbc2, 0x0, 0x0);
        gbc.writeMem(0x2ac6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd3c7, gbc.sp());
        EXPECT(0x2ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 00F8
        gbc.setState(0x97bd, 0xa32e, 0xa0b0, 0x8be1, 0xd086, 0x608f, 0x0, 0x0);
        gbc.writeMem(0x97bd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa32e, gbc.sp());
        EXPECT(0x97bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97bd));
        EXPECT(0xad, gbc.readMem(0x97be));
        // CB AD 00F9
        gbc.setState(0xaccf, 0x5985, 0xa5f0, 0xd2ad, 0x7548, 0x5ca2, 0x1, 0x1);
        gbc.writeMem(0xaccf, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5985, gbc.sp());
        EXPECT(0xacd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaccf));
        EXPECT(0xad, gbc.readMem(0xacd0));
        // CB AD 00FA
        gbc.setState(0x96dc, 0xcd07, 0x6050, 0x9dcc, 0x6e77, 0xc51f, 0x0, 0x1);
        gbc.writeMem(0x96dc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcd07, gbc.sp());
        EXPECT(0x96de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96dc));
        EXPECT(0xad, gbc.readMem(0x96dd));
        // CB AD 00FB
        gbc.setState(0xc809, 0x5ef3, 0x82d0, 0xa3c7, 0x75fc, 0xbe30, 0x0, 0x0);
        gbc.writeMem(0xc809, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5ef3, gbc.sp());
        EXPECT(0xc80b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc809));
        EXPECT(0xad, gbc.readMem(0xc80a));
        // CB AD 00FC
        gbc.setState(0x7cff, 0x702e, 0x2740, 0x4cf7, 0x5aaf, 0x86be, 0x0, 0x1);
        gbc.writeMem(0x7cff, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x702e, gbc.sp());
        EXPECT(0x7d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00FD
        gbc.setState(0xdfb6, 0x88e0, 0xb710, 0xc5bc, 0x2454, 0xa13f, 0x0, 0x0);
        gbc.writeMem(0xdfb6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x88e0, gbc.sp());
        EXPECT(0xdfb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb6));
        EXPECT(0xad, gbc.readMem(0xdfb7));
        // CB AD 00FE
        gbc.setState(0x4144, 0x46e8, 0xbd60, 0x79fc, 0x96aa, 0x10d6, 0x0, 0x1);
        gbc.writeMem(0x4144, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x46e8, gbc.sp());
        EXPECT(0x4146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 00FF
        gbc.setState(0xd42, 0x65aa, 0x57d0, 0x1b3c, 0x1b5b, 0x1180, 0x0, 0x0);
        gbc.writeMem(0xd42, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x65aa, gbc.sp());
        EXPECT(0xd44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0100
        gbc.setState(0x856b, 0xe9c2, 0x25f0, 0xb5c3, 0x3777, 0xf8cb, 0x0, 0x1);
        gbc.writeMem(0x856b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe9c2, gbc.sp());
        EXPECT(0x856d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856b));
        EXPECT(0xad, gbc.readMem(0x856c));
        // CB AD 0101
        gbc.setState(0xa498, 0xaee5, 0x4d40, 0xba4e, 0xc0a1, 0x432d, 0x1, 0x1);
        gbc.writeMem(0xa498, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaee5, gbc.sp());
        EXPECT(0xa49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa498));
        EXPECT(0xad, gbc.readMem(0xa499));
        // CB AD 0102
        gbc.setState(0x62ec, 0x430b, 0x3040, 0xd1ef, 0x1706, 0xe10c, 0x1, 0x1);
        gbc.writeMem(0x62ec, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x430b, gbc.sp());
        EXPECT(0x62ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0103
        gbc.setState(0x88a4, 0xab07, 0xdcb0, 0x20c4, 0xb567, 0x2097, 0x0, 0x0);
        gbc.writeMem(0x88a4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xab07, gbc.sp());
        EXPECT(0x88a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a4));
        EXPECT(0xad, gbc.readMem(0x88a5));
        // CB AD 0104
        gbc.setState(0x3d5d, 0x29a5, 0x12c0, 0x8a03, 0x86f, 0x22bc, 0x0, 0x0);
        gbc.writeMem(0x3d5d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x29a5, gbc.sp());
        EXPECT(0x3d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0105
        gbc.setState(0xccc4, 0x84d8, 0x5df0, 0x1a9c, 0x1ae7, 0x40e9, 0x0, 0x0);
        gbc.writeMem(0xccc4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x84d8, gbc.sp());
        EXPECT(0xccc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc4));
        EXPECT(0xad, gbc.readMem(0xccc5));
        // CB AD 0106
        gbc.setState(0x8b59, 0xc6b0, 0xd1c0, 0x6450, 0x7636, 0x22ec, 0x0, 0x1);
        gbc.writeMem(0x8b59, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc6b0, gbc.sp());
        EXPECT(0x8b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b59));
        EXPECT(0xad, gbc.readMem(0x8b5a));
        // CB AD 0107
        gbc.setState(0xc2f6, 0x3818, 0x68a0, 0xa90, 0x20cd, 0x3bd5, 0x1, 0x1);
        gbc.writeMem(0xc2f6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3818, gbc.sp());
        EXPECT(0xc2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f6));
        EXPECT(0xad, gbc.readMem(0xc2f7));
        // CB AD 0108
        gbc.setState(0x4d57, 0x4852, 0x4ec0, 0xb505, 0x75a5, 0xaaae, 0x1, 0x0);
        gbc.writeMem(0x4d57, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4852, gbc.sp());
        EXPECT(0x4d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0109
        gbc.setState(0x4b99, 0x3d83, 0x2320, 0x93af, 0xa0c4, 0xbe95, 0x0, 0x1);
        gbc.writeMem(0x4b99, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3d83, gbc.sp());
        EXPECT(0x4b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 010A
        gbc.setState(0x5d09, 0xb2c3, 0x9b90, 0xc14e, 0x3c25, 0x5e5, 0x0, 0x0);
        gbc.writeMem(0x5d09, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb2c3, gbc.sp());
        EXPECT(0x5d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 010B
        gbc.setState(0x5e81, 0x3167, 0x50e0, 0xd92c, 0x245d, 0x67fb, 0x1, 0x1);
        gbc.writeMem(0x5e81, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3167, gbc.sp());
        EXPECT(0x5e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 010C
        gbc.setState(0x8f8d, 0x9036, 0x44f0, 0xa282, 0x78b1, 0xe97f, 0x0, 0x0);
        gbc.writeMem(0x8f8d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9036, gbc.sp());
        EXPECT(0x8f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8d));
        EXPECT(0xad, gbc.readMem(0x8f8e));
        // CB AD 010D
        gbc.setState(0x6f0e, 0xc703, 0x2610, 0x4955, 0xe07, 0x7642, 0x0, 0x1);
        gbc.writeMem(0x6f0e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc703, gbc.sp());
        EXPECT(0x6f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 010E
        gbc.setState(0x358a, 0x2e80, 0x1f0, 0xd244, 0x5cce, 0xcc16, 0x1, 0x0);
        gbc.writeMem(0x358a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2e80, gbc.sp());
        EXPECT(0x358c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 010F
        gbc.setState(0xc5ac, 0xe5d, 0x7310, 0xfaad, 0xf555, 0xc1a1, 0x1, 0x0);
        gbc.writeMem(0xc5ac, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe5d, gbc.sp());
        EXPECT(0xc5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ac));
        EXPECT(0xad, gbc.readMem(0xc5ad));
        // CB AD 0110
        gbc.setState(0x575a, 0xdd28, 0x1100, 0xe5c2, 0x6733, 0x1908, 0x1, 0x1);
        gbc.writeMem(0x575a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xdd28, gbc.sp());
        EXPECT(0x575c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0111
        gbc.setState(0x4d7e, 0xa6df, 0x7250, 0x5609, 0xa113, 0xe266, 0x0, 0x1);
        gbc.writeMem(0x4d7e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa6df, gbc.sp());
        EXPECT(0x4d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0112
        gbc.setState(0x2e04, 0x21d2, 0x9140, 0x1d1c, 0x9ac0, 0x1985, 0x0, 0x1);
        gbc.writeMem(0x2e04, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x21d2, gbc.sp());
        EXPECT(0x2e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0113
        gbc.setState(0x905c, 0x9010, 0xc680, 0x4474, 0x74c2, 0xb177, 0x0, 0x1);
        gbc.writeMem(0x905c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9010, gbc.sp());
        EXPECT(0x905e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905c));
        EXPECT(0xad, gbc.readMem(0x905d));
        // CB AD 0114
        gbc.setState(0x6df0, 0x57e9, 0x8210, 0x51be, 0x38ab, 0xf0f4, 0x0, 0x1);
        gbc.writeMem(0x6df0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x57e9, gbc.sp());
        EXPECT(0x6df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0115
        gbc.setState(0x67f9, 0x89d7, 0xd3a0, 0x1b2, 0x34e7, 0x8921, 0x0, 0x1);
        gbc.writeMem(0x67f9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x89d7, gbc.sp());
        EXPECT(0x67fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0116
        gbc.setState(0xcba3, 0x195a, 0x82c0, 0x4809, 0xd991, 0x6c59, 0x1, 0x1);
        gbc.writeMem(0xcba3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x195a, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba3));
        EXPECT(0xad, gbc.readMem(0xcba4));
        // CB AD 0117
        gbc.setState(0x7422, 0xb032, 0xe4f0, 0x5ed6, 0x70ef, 0xe9c5, 0x0, 0x1);
        gbc.writeMem(0x7422, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb032, gbc.sp());
        EXPECT(0x7424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0118
        gbc.setState(0xee33, 0x638c, 0xa400, 0xdd62, 0xcc97, 0x6ff8, 0x1, 0x0);
        gbc.writeMem(0xee33, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x638c, gbc.sp());
        EXPECT(0xee35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee33));
        EXPECT(0xad, gbc.readMem(0xee34));
        // CB AD 0119
        gbc.setState(0x4650, 0xe415, 0x9b00, 0xbd04, 0x81, 0x9f57, 0x1, 0x0);
        gbc.writeMem(0x4650, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe415, gbc.sp());
        EXPECT(0x4652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 011B
        gbc.setState(0x3dc5, 0x5ce8, 0xebc0, 0xaca8, 0x5b77, 0xdc3c, 0x0, 0x0);
        gbc.writeMem(0x3dc5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5ce8, gbc.sp());
        EXPECT(0x3dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 011C
        gbc.setState(0xbb6e, 0x4afd, 0x8fe0, 0x499c, 0x2d6, 0xeb0d, 0x0, 0x1);
        gbc.writeMem(0xbb6e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4afd, gbc.sp());
        EXPECT(0xbb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6e));
        EXPECT(0xad, gbc.readMem(0xbb6f));
        // CB AD 011D
        gbc.setState(0x2f5c, 0x80c7, 0x6fd0, 0x7ef7, 0xb4ee, 0x5f22, 0x0, 0x1);
        gbc.writeMem(0x2f5c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x80c7, gbc.sp());
        EXPECT(0x2f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 011E
        gbc.setState(0xe92e, 0xbf8f, 0xaff0, 0x1c30, 0x5736, 0xe829, 0x0, 0x0);
        gbc.writeMem(0xe92e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbf8f, gbc.sp());
        EXPECT(0xe930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92e));
        EXPECT(0xad, gbc.readMem(0xe92f));
        // CB AD 011F
        gbc.setState(0x7cb1, 0x6305, 0xed40, 0x68d1, 0xac64, 0x487d, 0x1, 0x0);
        gbc.writeMem(0x7cb1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6305, gbc.sp());
        EXPECT(0x7cb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0120
        gbc.setState(0x7d9f, 0x49a5, 0x6560, 0x371a, 0x35e7, 0xf5a1, 0x1, 0x1);
        gbc.writeMem(0x7d9f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x49a5, gbc.sp());
        EXPECT(0x7da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0121
        gbc.setState(0x7ee2, 0x721, 0xbbd0, 0xe410, 0xd533, 0xde8e, 0x1, 0x0);
        gbc.writeMem(0x7ee2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x721, gbc.sp());
        EXPECT(0x7ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0122
        gbc.setState(0x9843, 0xcd39, 0x56c0, 0x6467, 0xe635, 0xdbd1, 0x0, 0x0);
        gbc.writeMem(0x9843, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcd39, gbc.sp());
        EXPECT(0x9845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9843));
        EXPECT(0xad, gbc.readMem(0x9844));
        // CB AD 0123
        gbc.setState(0x884d, 0xf914, 0xd550, 0x3960, 0xcf99, 0x5b4b, 0x1, 0x1);
        gbc.writeMem(0x884d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf914, gbc.sp());
        EXPECT(0x884f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884d));
        EXPECT(0xad, gbc.readMem(0x884e));
        // CB AD 0124
        gbc.setState(0xd445, 0x8138, 0x2d0, 0x311a, 0x7802, 0x1aa2, 0x0, 0x1);
        gbc.writeMem(0xd445, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8138, gbc.sp());
        EXPECT(0xd447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd445));
        EXPECT(0xad, gbc.readMem(0xd446));
        // CB AD 0125
        gbc.setState(0x74cf, 0xf0a6, 0x6d80, 0xa5d4, 0xade8, 0x90bb, 0x1, 0x0);
        gbc.writeMem(0x74cf, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf0a6, gbc.sp());
        EXPECT(0x74d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0126
        gbc.setState(0x972c, 0xafaf, 0x5e10, 0x9646, 0xebe4, 0x2fed, 0x1, 0x1);
        gbc.writeMem(0x972c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xafaf, gbc.sp());
        EXPECT(0x972e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x972c));
        EXPECT(0xad, gbc.readMem(0x972d));
        // CB AD 0127
        gbc.setState(0x3ca2, 0xdba, 0x47b0, 0x5fee, 0x2c25, 0x58e9, 0x1, 0x1);
        gbc.writeMem(0x3ca2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdba, gbc.sp());
        EXPECT(0x3ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0128
        gbc.setState(0x410c, 0x2b33, 0xd6f0, 0x3901, 0x8536, 0x8a91, 0x0, 0x0);
        gbc.writeMem(0x410c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2b33, gbc.sp());
        EXPECT(0x410e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0129
        gbc.setState(0xb27e, 0x473f, 0x6bd0, 0x969e, 0xa8b0, 0xe8fb, 0x1, 0x0);
        gbc.writeMem(0xb27e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x473f, gbc.sp());
        EXPECT(0xb280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb27e));
        EXPECT(0xad, gbc.readMem(0xb27f));
        // CB AD 012B
        gbc.setState(0xa830, 0x3f98, 0xc4c0, 0x6490, 0x4425, 0x2e53, 0x1, 0x1);
        gbc.writeMem(0xa830, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3f98, gbc.sp());
        EXPECT(0xa832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa830));
        EXPECT(0xad, gbc.readMem(0xa831));
        // CB AD 012C
        gbc.setState(0xa3cb, 0xa8be, 0x2b0, 0x525f, 0x6c78, 0x9e48, 0x1, 0x1);
        gbc.writeMem(0xa3cb, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa8be, gbc.sp());
        EXPECT(0xa3cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3cb));
        EXPECT(0xad, gbc.readMem(0xa3cc));
        // CB AD 012D
        gbc.setState(0x7597, 0xd017, 0x3e20, 0xbb9, 0x9e63, 0x7a7e, 0x0, 0x0);
        gbc.writeMem(0x7597, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd017, gbc.sp());
        EXPECT(0x7599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 012F
        gbc.setState(0x310c, 0xa89d, 0x11b0, 0x3b87, 0xf88e, 0x9f, 0x1, 0x1);
        gbc.writeMem(0x310c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa89d, gbc.sp());
        EXPECT(0x310e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0130
        gbc.setState(0x364e, 0x3179, 0x9c30, 0x1064, 0xb1c9, 0x3b79, 0x1, 0x0);
        gbc.writeMem(0x364e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3179, gbc.sp());
        EXPECT(0x3650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0131
        gbc.setState(0x753f, 0xaf71, 0x2220, 0x2be8, 0x85eb, 0xefa7, 0x1, 0x1);
        gbc.writeMem(0x753f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xaf71, gbc.sp());
        EXPECT(0x7541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0132
        gbc.setState(0x9d70, 0x19ba, 0x8f90, 0x5da3, 0x6606, 0x7002, 0x0, 0x1);
        gbc.writeMem(0x9d70, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x19ba, gbc.sp());
        EXPECT(0x9d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d70));
        EXPECT(0xad, gbc.readMem(0x9d71));
        // CB AD 0133
        gbc.setState(0xdb4e, 0xab24, 0x10a0, 0xf533, 0xd3d1, 0x38c, 0x0, 0x1);
        gbc.writeMem(0xdb4e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xab24, gbc.sp());
        EXPECT(0xdb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4e));
        EXPECT(0xad, gbc.readMem(0xdb4f));
        // CB AD 0134
        gbc.setState(0x7968, 0x402, 0x5240, 0x29db, 0xe7fe, 0xa013, 0x0, 0x1);
        gbc.writeMem(0x7968, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x402, gbc.sp());
        EXPECT(0x796a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0135
        gbc.setState(0xe076, 0xadb3, 0x5b50, 0x90e8, 0x9996, 0xca9, 0x0, 0x0);
        gbc.writeMem(0xe076, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xadb3, gbc.sp());
        EXPECT(0xe078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe076));
        EXPECT(0xad, gbc.readMem(0xe077));
        // CB AD 0136
        gbc.setState(0x95b3, 0xb9a5, 0x4500, 0x6af1, 0x4d34, 0x9a15, 0x0, 0x1);
        gbc.writeMem(0x95b3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb9a5, gbc.sp());
        EXPECT(0x95b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b3));
        EXPECT(0xad, gbc.readMem(0x95b4));
        // CB AD 0137
        gbc.setState(0x9d80, 0x3ed9, 0xf2a0, 0xa219, 0x6fbb, 0xc4e2, 0x0, 0x0);
        gbc.writeMem(0x9d80, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3ed9, gbc.sp());
        EXPECT(0x9d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d80));
        EXPECT(0xad, gbc.readMem(0x9d81));
        // CB AD 0138
        gbc.setState(0x6487, 0x2a12, 0x2880, 0x8c25, 0x4452, 0x6147, 0x0, 0x0);
        gbc.writeMem(0x6487, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2a12, gbc.sp());
        EXPECT(0x6489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 013A
        gbc.setState(0x69de, 0x6e80, 0xdc40, 0x3577, 0xec53, 0x1e3c, 0x1, 0x0);
        gbc.writeMem(0x69de, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6e80, gbc.sp());
        EXPECT(0x69e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 013B
        gbc.setState(0xca0e, 0x5e08, 0xc510, 0xcfd5, 0xcbae, 0x10db, 0x0, 0x1);
        gbc.writeMem(0xca0e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5e08, gbc.sp());
        EXPECT(0xca10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca0e));
        EXPECT(0xad, gbc.readMem(0xca0f));
        // CB AD 013C
        gbc.setState(0x9eb8, 0x67c0, 0x34a0, 0xd590, 0xdd76, 0x7c45, 0x0, 0x0);
        gbc.writeMem(0x9eb8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x67c0, gbc.sp());
        EXPECT(0x9eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb8));
        EXPECT(0xad, gbc.readMem(0x9eb9));
        // CB AD 013D
        gbc.setState(0xa6a2, 0xdd2c, 0xb620, 0xda9a, 0x41f5, 0xdd53, 0x1, 0x1);
        gbc.writeMem(0xa6a2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdd2c, gbc.sp());
        EXPECT(0xa6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a2));
        EXPECT(0xad, gbc.readMem(0xa6a3));
        // CB AD 013E
        gbc.setState(0xc29, 0xa759, 0x3170, 0x8927, 0xb4aa, 0x6479, 0x1, 0x1);
        gbc.writeMem(0xc29, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa759, gbc.sp());
        EXPECT(0xc2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 013F
        gbc.setState(0x7d21, 0x8bbd, 0x1b70, 0xffc8, 0x4cbb, 0xe42e, 0x1, 0x1);
        gbc.writeMem(0x7d21, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8bbd, gbc.sp());
        EXPECT(0x7d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0140
        gbc.setState(0x60d5, 0xc9cf, 0x8680, 0xf9b5, 0x9ce7, 0x53b4, 0x1, 0x1);
        gbc.writeMem(0x60d5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc9cf, gbc.sp());
        EXPECT(0x60d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0141
        gbc.setState(0xa4d9, 0x759a, 0xafd0, 0x8c8, 0x5056, 0xb0c1, 0x1, 0x1);
        gbc.writeMem(0xa4d9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x759a, gbc.sp());
        EXPECT(0xa4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d9));
        EXPECT(0xad, gbc.readMem(0xa4da));
        // CB AD 0142
        gbc.setState(0x1037, 0xe442, 0x8fd0, 0x21e4, 0xb836, 0xdee3, 0x1, 0x1);
        gbc.writeMem(0x1037, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe442, gbc.sp());
        EXPECT(0x1039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0143
        gbc.setState(0xe576, 0xcec4, 0x1f0, 0xe029, 0x48bb, 0xdb87, 0x1, 0x0);
        gbc.writeMem(0xe576, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcec4, gbc.sp());
        EXPECT(0xe578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe576));
        EXPECT(0xad, gbc.readMem(0xe577));
        // CB AD 0144
        gbc.setState(0x99be, 0x9de4, 0xe3e0, 0xaf4c, 0x8b90, 0xc417, 0x0, 0x1);
        gbc.writeMem(0x99be, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9de4, gbc.sp());
        EXPECT(0x99c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99be));
        EXPECT(0xad, gbc.readMem(0x99bf));
        // CB AD 0145
        gbc.setState(0xcb4f, 0xa76e, 0xf8d0, 0x8f3f, 0xd6dc, 0xd3ed, 0x0, 0x1);
        gbc.writeMem(0xcb4f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa76e, gbc.sp());
        EXPECT(0xcb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4f));
        EXPECT(0xad, gbc.readMem(0xcb50));
        // CB AD 0146
        gbc.setState(0x9721, 0xe76d, 0x5c30, 0xe51c, 0xae73, 0xb0c, 0x0, 0x1);
        gbc.writeMem(0x9721, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe76d, gbc.sp());
        EXPECT(0x9723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9721));
        EXPECT(0xad, gbc.readMem(0x9722));
        // CB AD 0147
        gbc.setState(0xd525, 0x9925, 0x2380, 0x2010, 0xfd7, 0x68ce, 0x0, 0x1);
        gbc.writeMem(0xd525, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9925, gbc.sp());
        EXPECT(0xd527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd525));
        EXPECT(0xad, gbc.readMem(0xd526));
        // CB AD 0148
        gbc.setState(0x9847, 0x4aea, 0xc30, 0x42b4, 0x1dc1, 0x2092, 0x1, 0x1);
        gbc.writeMem(0x9847, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4aea, gbc.sp());
        EXPECT(0x9849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9847));
        EXPECT(0xad, gbc.readMem(0x9848));
        // CB AD 0149
        gbc.setState(0x1615, 0x6fc7, 0x19a0, 0xdbce, 0x48f5, 0xac7d, 0x0, 0x0);
        gbc.writeMem(0x1615, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6fc7, gbc.sp());
        EXPECT(0x1617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 014A
        gbc.setState(0xded6, 0x628b, 0x840, 0x611e, 0x91d8, 0x3b5, 0x1, 0x0);
        gbc.writeMem(0xded6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x628b, gbc.sp());
        EXPECT(0xded8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded6));
        EXPECT(0xad, gbc.readMem(0xded7));
        // CB AD 014B
        gbc.setState(0x90be, 0x3572, 0x1c50, 0x6c3c, 0x5954, 0x2b6e, 0x0, 0x1);
        gbc.writeMem(0x90be, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3572, gbc.sp());
        EXPECT(0x90c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90be));
        EXPECT(0xad, gbc.readMem(0x90bf));
        // CB AD 014C
        gbc.setState(0xb274, 0x253f, 0x37f0, 0xf940, 0x513c, 0xb318, 0x0, 0x0);
        gbc.writeMem(0xb274, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x253f, gbc.sp());
        EXPECT(0xb276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb274));
        EXPECT(0xad, gbc.readMem(0xb275));
        // CB AD 014D
        gbc.setState(0xe0d3, 0xf483, 0x4fa0, 0xf908, 0xf394, 0x1795, 0x1, 0x0);
        gbc.writeMem(0xe0d3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf483, gbc.sp());
        EXPECT(0xe0d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d3));
        EXPECT(0xad, gbc.readMem(0xe0d4));
        // CB AD 014E
        gbc.setState(0x33b1, 0x3b78, 0x4690, 0x6fb3, 0x1d6e, 0xba43, 0x1, 0x0);
        gbc.writeMem(0x33b1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3b78, gbc.sp());
        EXPECT(0x33b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 014F
        gbc.setState(0x2118, 0xb174, 0xae10, 0xf54f, 0xcf13, 0x116b, 0x0, 0x1);
        gbc.writeMem(0x2118, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb174, gbc.sp());
        EXPECT(0x211a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0150
        gbc.setState(0xb615, 0xc859, 0xe1c0, 0x22c3, 0x1816, 0xa9a5, 0x0, 0x1);
        gbc.writeMem(0xb615, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc859, gbc.sp());
        EXPECT(0xb617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb615));
        EXPECT(0xad, gbc.readMem(0xb616));
        // CB AD 0151
        gbc.setState(0x106f, 0x32dd, 0x3df0, 0x4218, 0x790d, 0x2e5e, 0x0, 0x1);
        gbc.writeMem(0x106f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x32dd, gbc.sp());
        EXPECT(0x1071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0153
        gbc.setState(0xbef2, 0x5d3d, 0x27f0, 0x473b, 0x8cfe, 0xbd70, 0x0, 0x0);
        gbc.writeMem(0xbef2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5d3d, gbc.sp());
        EXPECT(0xbef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef2));
        EXPECT(0xad, gbc.readMem(0xbef3));
        // CB AD 0154
        gbc.setState(0x914f, 0x6407, 0x4ad0, 0x8c17, 0x6a29, 0x45d9, 0x0, 0x0);
        gbc.writeMem(0x914f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6407, gbc.sp());
        EXPECT(0x9151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x914f));
        EXPECT(0xad, gbc.readMem(0x9150));
        // CB AD 0156
        gbc.setState(0x2fe0, 0x1550, 0xd150, 0xd702, 0x161, 0xc092, 0x1, 0x1);
        gbc.writeMem(0x2fe0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1550, gbc.sp());
        EXPECT(0x2fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0157
        gbc.setState(0xbd0d, 0xc737, 0xb3d0, 0xd46, 0x51b0, 0x9a19, 0x1, 0x1);
        gbc.writeMem(0xbd0d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc737, gbc.sp());
        EXPECT(0xbd0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd0d));
        EXPECT(0xad, gbc.readMem(0xbd0e));
        // CB AD 0159
        gbc.setState(0x8279, 0xbdb3, 0x76d0, 0xd574, 0x52a, 0x910c, 0x1, 0x1);
        gbc.writeMem(0x8279, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbdb3, gbc.sp());
        EXPECT(0x827b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8279));
        EXPECT(0xad, gbc.readMem(0x827a));
        // CB AD 015A
        gbc.setState(0x53d4, 0x420f, 0x2440, 0x44c3, 0xf53e, 0x10ab, 0x1, 0x0);
        gbc.writeMem(0x53d4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x420f, gbc.sp());
        EXPECT(0x53d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 015B
        gbc.setState(0xa1a2, 0x5dc8, 0x9b70, 0xa5a1, 0x1c51, 0x7b6a, 0x1, 0x1);
        gbc.writeMem(0xa1a2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5dc8, gbc.sp());
        EXPECT(0xa1a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a2));
        EXPECT(0xad, gbc.readMem(0xa1a3));
        // CB AD 015C
        gbc.setState(0x27aa, 0x209f, 0x170, 0x672a, 0x3b85, 0x2e0e, 0x0, 0x1);
        gbc.writeMem(0x27aa, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x209f, gbc.sp());
        EXPECT(0x27ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 015D
        gbc.setState(0x144, 0x145, 0xecc0, 0xfb0, 0xb17b, 0xcf6a, 0x1, 0x1);
        gbc.writeMem(0x144, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x145, gbc.sp());
        EXPECT(0x146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 015E
        gbc.setState(0xd9a6, 0x7c74, 0xf6d0, 0x5272, 0xb5b2, 0x2c1, 0x0, 0x0);
        gbc.writeMem(0xd9a6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7c74, gbc.sp());
        EXPECT(0xd9a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a6));
        EXPECT(0xad, gbc.readMem(0xd9a7));
        // CB AD 015F
        gbc.setState(0xd81f, 0x6a29, 0xb7c0, 0x80be, 0xa92c, 0x1a5d, 0x0, 0x1);
        gbc.writeMem(0xd81f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6a29, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81f));
        EXPECT(0xad, gbc.readMem(0xd820));
        // CB AD 0160
        gbc.setState(0x285c, 0xbf2, 0xe9b0, 0xc124, 0x6369, 0xa881, 0x1, 0x0);
        gbc.writeMem(0x285c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbf2, gbc.sp());
        EXPECT(0x285e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0161
        gbc.setState(0x98e0, 0x2b75, 0x25c0, 0x65a5, 0x78e3, 0xabed, 0x0, 0x0);
        gbc.writeMem(0x98e0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2b75, gbc.sp());
        EXPECT(0x98e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e0));
        EXPECT(0xad, gbc.readMem(0x98e1));
        // CB AD 0162
        gbc.setState(0xa261, 0x5b0c, 0x5740, 0xd7e3, 0x9fb0, 0x91ed, 0x1, 0x1);
        gbc.writeMem(0xa261, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5b0c, gbc.sp());
        EXPECT(0xa263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa261));
        EXPECT(0xad, gbc.readMem(0xa262));
        // CB AD 0163
        gbc.setState(0x6e34, 0xbdcb, 0x1460, 0xe006, 0x446e, 0x9cb1, 0x1, 0x1);
        gbc.writeMem(0x6e34, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbdcb, gbc.sp());
        EXPECT(0x6e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0164
        gbc.setState(0x4cb6, 0x7a71, 0xdbd0, 0xb94e, 0xf26c, 0x87e8, 0x0, 0x1);
        gbc.writeMem(0x4cb6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7a71, gbc.sp());
        EXPECT(0x4cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0165
        gbc.setState(0x797e, 0xbba7, 0x6360, 0xee9c, 0x58f9, 0x5e30, 0x1, 0x0);
        gbc.writeMem(0x797e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbba7, gbc.sp());
        EXPECT(0x7980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0166
        gbc.setState(0xbadb, 0xeb5d, 0xda00, 0x699c, 0xc77b, 0xab0, 0x1, 0x0);
        gbc.writeMem(0xbadb, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeb5d, gbc.sp());
        EXPECT(0xbadd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadb));
        EXPECT(0xad, gbc.readMem(0xbadc));
        // CB AD 0167
        gbc.setState(0xc6, 0xb407, 0x17e0, 0x28da, 0x46db, 0x571, 0x1, 0x0);
        gbc.writeMem(0xc6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb407, gbc.sp());
        EXPECT(0xc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0168
        gbc.setState(0xc6a4, 0xac60, 0x9eb0, 0x170c, 0x918e, 0x76f1, 0x0, 0x0);
        gbc.writeMem(0xc6a4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xac60, gbc.sp());
        EXPECT(0xc6a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a4));
        EXPECT(0xad, gbc.readMem(0xc6a5));
        // CB AD 0169
        gbc.setState(0x705c, 0x7334, 0x7a90, 0xbfbc, 0xea9f, 0xe7ad, 0x1, 0x1);
        gbc.writeMem(0x705c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7334, gbc.sp());
        EXPECT(0x705e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 016A
        gbc.setState(0x53ed, 0x6741, 0xbb20, 0x52e5, 0x6d6b, 0x1cb0, 0x0, 0x0);
        gbc.writeMem(0x53ed, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6741, gbc.sp());
        EXPECT(0x53ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 016B
        gbc.setState(0xfed, 0x6ef, 0x2810, 0x65fd, 0x4ea1, 0x94e2, 0x0, 0x1);
        gbc.writeMem(0xfed, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6ef, gbc.sp());
        EXPECT(0xfef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 016C
        gbc.setState(0x15ea, 0x7614, 0xde60, 0xb7c3, 0x78b, 0x9357, 0x1, 0x1);
        gbc.writeMem(0x15ea, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7614, gbc.sp());
        EXPECT(0x15ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 016D
        gbc.setState(0x79e0, 0x174d, 0x6c90, 0xeb24, 0x75cd, 0x5616, 0x1, 0x0);
        gbc.writeMem(0x79e0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x174d, gbc.sp());
        EXPECT(0x79e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 016E
        gbc.setState(0x501f, 0x269e, 0x93c0, 0x2b21, 0x5a31, 0x752e, 0x1, 0x1);
        gbc.writeMem(0x501f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x269e, gbc.sp());
        EXPECT(0x5021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 016F
        gbc.setState(0x82ca, 0x9bc7, 0xde70, 0xf7ee, 0x49d0, 0x2a5c, 0x1, 0x0);
        gbc.writeMem(0x82ca, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9bc7, gbc.sp());
        EXPECT(0x82cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ca));
        EXPECT(0xad, gbc.readMem(0x82cb));
        // CB AD 0170
        gbc.setState(0x5f78, 0xf24d, 0xac50, 0xc1a, 0x7a35, 0xa11e, 0x1, 0x0);
        gbc.writeMem(0x5f78, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf24d, gbc.sp());
        EXPECT(0x5f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0171
        gbc.setState(0x7601, 0xa1f7, 0x96c0, 0x5136, 0x193a, 0xa8bf, 0x1, 0x1);
        gbc.writeMem(0x7601, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa1f7, gbc.sp());
        EXPECT(0x7603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0172
        gbc.setState(0x2ff3, 0xed75, 0x28c0, 0x7b2, 0xd4cd, 0x1caa, 0x1, 0x0);
        gbc.writeMem(0x2ff3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xed75, gbc.sp());
        EXPECT(0x2ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0173
        gbc.setState(0xad31, 0xf8fb, 0x9d30, 0xe4cd, 0x1207, 0x75dd, 0x0, 0x1);
        gbc.writeMem(0xad31, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf8fb, gbc.sp());
        EXPECT(0xad33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad31));
        EXPECT(0xad, gbc.readMem(0xad32));
        // CB AD 0174
        gbc.setState(0xeb6a, 0xedd8, 0x5060, 0xca8f, 0x4a64, 0xa6c7, 0x1, 0x0);
        gbc.writeMem(0xeb6a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xedd8, gbc.sp());
        EXPECT(0xeb6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6a));
        EXPECT(0xad, gbc.readMem(0xeb6b));
        // CB AD 0175
        gbc.setState(0xff5, 0x5bfc, 0xecc0, 0x5e8, 0x73ec, 0x879a, 0x1, 0x0);
        gbc.writeMem(0xff5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5bfc, gbc.sp());
        EXPECT(0xff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0176
        gbc.setState(0x19a, 0x5887, 0xf920, 0x1d9a, 0x91e0, 0x34c9, 0x1, 0x1);
        gbc.writeMem(0x19a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5887, gbc.sp());
        EXPECT(0x19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0177
        gbc.setState(0x41fe, 0x7356, 0xf910, 0x58a4, 0xf37d, 0xc5af, 0x0, 0x1);
        gbc.writeMem(0x41fe, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7356, gbc.sp());
        EXPECT(0x4200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0178
        gbc.setState(0x8dab, 0x5f1b, 0x2790, 0x484c, 0xc18d, 0x6f5d, 0x0, 0x0);
        gbc.writeMem(0x8dab, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5f1b, gbc.sp());
        EXPECT(0x8dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dab));
        EXPECT(0xad, gbc.readMem(0x8dac));
        // CB AD 0179
        gbc.setState(0x2957, 0x21e7, 0xec80, 0x1460, 0x3ae2, 0x3e37, 0x1, 0x0);
        gbc.writeMem(0x2957, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x21e7, gbc.sp());
        EXPECT(0x2959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 017A
        gbc.setState(0x9cba, 0x97de, 0x5bc0, 0x2d99, 0xc4d5, 0x299, 0x0, 0x1);
        gbc.writeMem(0x9cba, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x97de, gbc.sp());
        EXPECT(0x9cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cba));
        EXPECT(0xad, gbc.readMem(0x9cbb));
        // CB AD 017B
        gbc.setState(0x2216, 0x95dd, 0x8c10, 0x7d3b, 0xb9a, 0x63c9, 0x1, 0x1);
        gbc.writeMem(0x2216, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x95dd, gbc.sp());
        EXPECT(0x2218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 017C
        gbc.setState(0x5dbe, 0x7660, 0x7830, 0xa301, 0x8d1e, 0x1402, 0x1, 0x0);
        gbc.writeMem(0x5dbe, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7660, gbc.sp());
        EXPECT(0x5dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 017D
        gbc.setState(0x364e, 0x4ea9, 0xe9e0, 0x566c, 0xf028, 0x5d43, 0x0, 0x1);
        gbc.writeMem(0x364e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4ea9, gbc.sp());
        EXPECT(0x3650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 017E
        gbc.setState(0x4e25, 0x9529, 0xc010, 0xb7c9, 0xccee, 0x3469, 0x0, 0x1);
        gbc.writeMem(0x4e25, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9529, gbc.sp());
        EXPECT(0x4e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 017F
        gbc.setState(0x8924, 0xbb3b, 0x6350, 0xfd4e, 0x6f06, 0xa45a, 0x1, 0x0);
        gbc.writeMem(0x8924, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbb3b, gbc.sp());
        EXPECT(0x8926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8924));
        EXPECT(0xad, gbc.readMem(0x8925));
        // CB AD 0180
        gbc.setState(0x8d55, 0xbb6b, 0x7340, 0x4b59, 0x1085, 0x607a, 0x1, 0x0);
        gbc.writeMem(0x8d55, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbb6b, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d55));
        EXPECT(0xad, gbc.readMem(0x8d56));
        // CB AD 0181
        gbc.setState(0x9f61, 0x655d, 0xf1d0, 0xbef2, 0x8e58, 0xcc37, 0x0, 0x1);
        gbc.writeMem(0x9f61, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x655d, gbc.sp());
        EXPECT(0x9f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f61));
        EXPECT(0xad, gbc.readMem(0x9f62));
        // CB AD 0182
        gbc.setState(0x4206, 0x7877, 0x6870, 0x326c, 0xfd66, 0xe62, 0x1, 0x0);
        gbc.writeMem(0x4206, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7877, gbc.sp());
        EXPECT(0x4208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0183
        gbc.setState(0x1add, 0xe4ad, 0x3e60, 0x9f46, 0x4621, 0xf88a, 0x0, 0x0);
        gbc.writeMem(0x1add, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe4ad, gbc.sp());
        EXPECT(0x1adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0184
        gbc.setState(0xe9f7, 0x955, 0x4830, 0xb063, 0xccf3, 0xd3e3, 0x0, 0x1);
        gbc.writeMem(0xe9f7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x955, gbc.sp());
        EXPECT(0xe9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f7));
        EXPECT(0xad, gbc.readMem(0xe9f8));
        // CB AD 0185
        gbc.setState(0x15e3, 0x1c56, 0xaa30, 0x3213, 0xf370, 0xe39c, 0x0, 0x0);
        gbc.writeMem(0x15e3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1c56, gbc.sp());
        EXPECT(0x15e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0186
        gbc.setState(0x8917, 0x3db4, 0x3ec0, 0xa30a, 0x1e94, 0xeaab, 0x0, 0x1);
        gbc.writeMem(0x8917, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3db4, gbc.sp());
        EXPECT(0x8919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8917));
        EXPECT(0xad, gbc.readMem(0x8918));
        // CB AD 0187
        gbc.setState(0x87a5, 0x9f3, 0x5d90, 0xeb3b, 0xa89e, 0x20d0, 0x1, 0x1);
        gbc.writeMem(0x87a5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9f3, gbc.sp());
        EXPECT(0x87a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87a5));
        EXPECT(0xad, gbc.readMem(0x87a6));
        // CB AD 0188
        gbc.setState(0xae0f, 0x9009, 0x98e0, 0x4259, 0x1e9f, 0x567d, 0x1, 0x1);
        gbc.writeMem(0xae0f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9009, gbc.sp());
        EXPECT(0xae11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0f));
        EXPECT(0xad, gbc.readMem(0xae10));
        // CB AD 0189
        gbc.setState(0xade8, 0x62be, 0x6ae0, 0x2959, 0x59af, 0xe4b2, 0x0, 0x0);
        gbc.writeMem(0xade8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x62be, gbc.sp());
        EXPECT(0xadea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade8));
        EXPECT(0xad, gbc.readMem(0xade9));
        // CB AD 018A
        gbc.setState(0x3300, 0x35e9, 0xd7c0, 0xe17, 0x2722, 0x8a5a, 0x1, 0x0);
        gbc.writeMem(0x3300, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x35e9, gbc.sp());
        EXPECT(0x3302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 018B
        gbc.setState(0xbfa1, 0x78f5, 0x7bf0, 0x5e3c, 0x3669, 0xf54b, 0x1, 0x0);
        gbc.writeMem(0xbfa1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x78f5, gbc.sp());
        EXPECT(0xbfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa1));
        EXPECT(0xad, gbc.readMem(0xbfa2));
        // CB AD 018C
        gbc.setState(0xa709, 0x311, 0x3d50, 0xe050, 0xf2b, 0x8cb4, 0x0, 0x0);
        gbc.writeMem(0xa709, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x311, gbc.sp());
        EXPECT(0xa70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa709));
        EXPECT(0xad, gbc.readMem(0xa70a));
        // CB AD 018D
        gbc.setState(0x246e, 0x3491, 0x75c0, 0x5fcd, 0xaa75, 0xb0e8, 0x0, 0x0);
        gbc.writeMem(0x246e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3491, gbc.sp());
        EXPECT(0x2470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 018E
        gbc.setState(0xede6, 0xd3e2, 0xf310, 0x8da2, 0x4681, 0x94d3, 0x0, 0x1);
        gbc.writeMem(0xede6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd3e2, gbc.sp());
        EXPECT(0xede8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede6));
        EXPECT(0xad, gbc.readMem(0xede7));
        // CB AD 018F
        gbc.setState(0x25f5, 0x215d, 0x94c0, 0xbc38, 0x9dc7, 0x3045, 0x0, 0x1);
        gbc.writeMem(0x25f5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x215d, gbc.sp());
        EXPECT(0x25f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0190
        gbc.setState(0x7630, 0x69e8, 0xa750, 0x9cf9, 0xc9b7, 0xd865, 0x1, 0x0);
        gbc.writeMem(0x7630, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x69e8, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0191
        gbc.setState(0x807d, 0x31b6, 0x5af0, 0x896f, 0xd76c, 0x6092, 0x0, 0x1);
        gbc.writeMem(0x807d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x31b6, gbc.sp());
        EXPECT(0x807f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807d));
        EXPECT(0xad, gbc.readMem(0x807e));
        // CB AD 0192
        gbc.setState(0x8884, 0xde19, 0x28f0, 0xe64c, 0xb3e3, 0x3a56, 0x1, 0x0);
        gbc.writeMem(0x8884, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xde19, gbc.sp());
        EXPECT(0x8886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8884));
        EXPECT(0xad, gbc.readMem(0x8885));
        // CB AD 0193
        gbc.setState(0xe9ad, 0xbd04, 0x1f10, 0xdd62, 0xa3da, 0xe958, 0x0, 0x0);
        gbc.writeMem(0xe9ad, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbd04, gbc.sp());
        EXPECT(0xe9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ad));
        EXPECT(0xad, gbc.readMem(0xe9ae));
        // CB AD 0194
        gbc.setState(0x417d, 0x7452, 0xfcc0, 0x214, 0x7d77, 0x67b5, 0x0, 0x0);
        gbc.writeMem(0x417d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7452, gbc.sp());
        EXPECT(0x417f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0195
        gbc.setState(0x87d8, 0x4d8, 0xae0, 0x9d96, 0xb3bd, 0x1386, 0x1, 0x0);
        gbc.writeMem(0x87d8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4d8, gbc.sp());
        EXPECT(0x87da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d8));
        EXPECT(0xad, gbc.readMem(0x87d9));
        // CB AD 0196
        gbc.setState(0x57fb, 0x6bef, 0xdd50, 0x877a, 0xf400, 0x3202, 0x1, 0x0);
        gbc.writeMem(0x57fb, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6bef, gbc.sp());
        EXPECT(0x57fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0197
        gbc.setState(0x1ef4, 0x2616, 0x94e0, 0x75b4, 0x7d3f, 0xeb6e, 0x0, 0x1);
        gbc.writeMem(0x1ef4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2616, gbc.sp());
        EXPECT(0x1ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0198
        gbc.setState(0x952b, 0xd581, 0xd9c0, 0xf8a2, 0xf46f, 0x457f, 0x1, 0x0);
        gbc.writeMem(0x952b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd581, gbc.sp());
        EXPECT(0x952d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952b));
        EXPECT(0xad, gbc.readMem(0x952c));
        // CB AD 0199
        gbc.setState(0x8ba9, 0x5a7a, 0x9550, 0x2575, 0xa07d, 0x2477, 0x1, 0x0);
        gbc.writeMem(0x8ba9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5a7a, gbc.sp());
        EXPECT(0x8bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba9));
        EXPECT(0xad, gbc.readMem(0x8baa));
        // CB AD 019A
        gbc.setState(0x5f50, 0x7fa6, 0x2790, 0x5003, 0xdd33, 0x2f58, 0x1, 0x1);
        gbc.writeMem(0x5f50, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7fa6, gbc.sp());
        EXPECT(0x5f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 019B
        gbc.setState(0xdb10, 0xf643, 0x8fc0, 0x907f, 0xbb9a, 0xedb3, 0x1, 0x1);
        gbc.writeMem(0xdb10, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf643, gbc.sp());
        EXPECT(0xdb12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb10));
        EXPECT(0xad, gbc.readMem(0xdb11));
        // CB AD 019C
        gbc.setState(0x79c5, 0xd036, 0x5370, 0x2600, 0xc525, 0x40dc, 0x0, 0x0);
        gbc.writeMem(0x79c5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd036, gbc.sp());
        EXPECT(0x79c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 019D
        gbc.setState(0x2d3e, 0x1a70, 0xb90, 0xb25e, 0x7df0, 0xd1cb, 0x0, 0x1);
        gbc.writeMem(0x2d3e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1a70, gbc.sp());
        EXPECT(0x2d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 019E
        gbc.setState(0x70ef, 0x7e6b, 0x8ba0, 0xdddb, 0xe4ab, 0xed31, 0x1, 0x0);
        gbc.writeMem(0x70ef, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7e6b, gbc.sp());
        EXPECT(0x70f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 019F
        gbc.setState(0x30ff, 0xac2f, 0x2f50, 0xe1d6, 0x2ffe, 0x5fd3, 0x0, 0x1);
        gbc.writeMem(0x30ff, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xac2f, gbc.sp());
        EXPECT(0x3101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01A0
        gbc.setState(0x6e15, 0xa616, 0x5310, 0x7fcf, 0xa94b, 0x5e1, 0x1, 0x0);
        gbc.writeMem(0x6e15, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa616, gbc.sp());
        EXPECT(0x6e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01A1
        gbc.setState(0x589e, 0xfd8d, 0x28e0, 0x9baf, 0xe0b2, 0x8fd7, 0x1, 0x0);
        gbc.writeMem(0x589e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfd8d, gbc.sp());
        EXPECT(0x58a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01A2
        gbc.setState(0x6d6c, 0xc532, 0xaf20, 0x6f83, 0xcba9, 0x55c0, 0x1, 0x0);
        gbc.writeMem(0x6d6c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc532, gbc.sp());
        EXPECT(0x6d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01A4
        gbc.setState(0xc587, 0x2faf, 0x4490, 0x45f5, 0xf463, 0x4f4c, 0x0, 0x0);
        gbc.writeMem(0xc587, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2faf, gbc.sp());
        EXPECT(0xc589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc587));
        EXPECT(0xad, gbc.readMem(0xc588));
        // CB AD 01A5
        gbc.setState(0xa423, 0xc97, 0x4c10, 0x5d55, 0x3e3f, 0xc560, 0x0, 0x0);
        gbc.writeMem(0xa423, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc97, gbc.sp());
        EXPECT(0xa425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa423));
        EXPECT(0xad, gbc.readMem(0xa424));
        // CB AD 01A6
        gbc.setState(0x5e19, 0xae8f, 0xe390, 0x1, 0xad58, 0x476e, 0x1, 0x1);
        gbc.writeMem(0x5e19, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xae8f, gbc.sp());
        EXPECT(0x5e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01A8
        gbc.setState(0xe43f, 0x5843, 0x3a20, 0x5aeb, 0x7b15, 0xfc32, 0x0, 0x0);
        gbc.writeMem(0xe43f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5843, gbc.sp());
        EXPECT(0xe441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43f));
        EXPECT(0xad, gbc.readMem(0xe440));
        // CB AD 01A9
        gbc.setState(0x3b58, 0x6286, 0x3610, 0x8d2e, 0xb0a6, 0xf62d, 0x1, 0x1);
        gbc.writeMem(0x3b58, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6286, gbc.sp());
        EXPECT(0x3b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01AA
        gbc.setState(0x5516, 0x637e, 0xc370, 0xf7fc, 0x80e1, 0x1ee7, 0x0, 0x0);
        gbc.writeMem(0x5516, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x637e, gbc.sp());
        EXPECT(0x5518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01AB
        gbc.setState(0xd05b, 0xd0fe, 0xbcb0, 0x7e3, 0xd79a, 0x99b5, 0x0, 0x0);
        gbc.writeMem(0xd05b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd0fe, gbc.sp());
        EXPECT(0xd05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05b));
        EXPECT(0xad, gbc.readMem(0xd05c));
        // CB AD 01AC
        gbc.setState(0x627c, 0x26be, 0x6c80, 0x7467, 0xa295, 0xef59, 0x0, 0x0);
        gbc.writeMem(0x627c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x26be, gbc.sp());
        EXPECT(0x627e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01AD
        gbc.setState(0x924f, 0xeb5b, 0xa920, 0xfb9f, 0x10a7, 0x1883, 0x0, 0x1);
        gbc.writeMem(0x924f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xeb5b, gbc.sp());
        EXPECT(0x9251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924f));
        EXPECT(0xad, gbc.readMem(0x9250));
        // CB AD 01AE
        gbc.setState(0x1f1, 0x46e0, 0xd30, 0x33bf, 0x233c, 0x75, 0x0, 0x1);
        gbc.writeMem(0x1f1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x46e0, gbc.sp());
        EXPECT(0x1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01AF
        gbc.setState(0x501b, 0xf4dc, 0xa820, 0xc73f, 0x4541, 0xbec9, 0x1, 0x0);
        gbc.writeMem(0x501b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf4dc, gbc.sp());
        EXPECT(0x501d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01B0
        gbc.setState(0xbdc5, 0x8cd2, 0xff70, 0x574b, 0x362a, 0xbde9, 0x0, 0x1);
        gbc.writeMem(0xbdc5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8cd2, gbc.sp());
        EXPECT(0xbdc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc5));
        EXPECT(0xad, gbc.readMem(0xbdc6));
        // CB AD 01B1
        gbc.setState(0x3f69, 0xbc31, 0xf750, 0x680b, 0xc8c7, 0x125c, 0x0, 0x1);
        gbc.writeMem(0x3f69, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbc31, gbc.sp());
        EXPECT(0x3f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01B3
        gbc.setState(0xcbf9, 0x4e12, 0x3c70, 0xd0c4, 0x74ca, 0x8f3f, 0x1, 0x1);
        gbc.writeMem(0xcbf9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4e12, gbc.sp());
        EXPECT(0xcbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf9));
        EXPECT(0xad, gbc.readMem(0xcbfa));
        // CB AD 01B4
        gbc.setState(0x8d6f, 0xb48d, 0x63c0, 0xe925, 0xa7c2, 0x99b3, 0x1, 0x1);
        gbc.writeMem(0x8d6f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb48d, gbc.sp());
        EXPECT(0x8d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d6f));
        EXPECT(0xad, gbc.readMem(0x8d70));
        // CB AD 01B5
        gbc.setState(0xcec, 0xe31b, 0xdac0, 0xcb05, 0x3652, 0x43b2, 0x0, 0x1);
        gbc.writeMem(0xcec, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe31b, gbc.sp());
        EXPECT(0xcee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01B6
        gbc.setState(0x3e51, 0x2ee0, 0xc200, 0xd37b, 0x9be2, 0x5774, 0x0, 0x0);
        gbc.writeMem(0x3e51, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2ee0, gbc.sp());
        EXPECT(0x3e53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01B7
        gbc.setState(0x4cce, 0xa21c, 0xa3a0, 0x52c1, 0x9e84, 0xa670, 0x1, 0x0);
        gbc.writeMem(0x4cce, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa21c, gbc.sp());
        EXPECT(0x4cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01B8
        gbc.setState(0xb971, 0x3ed5, 0x6a30, 0xecf3, 0x19d9, 0xbc44, 0x1, 0x1);
        gbc.writeMem(0xb971, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3ed5, gbc.sp());
        EXPECT(0xb973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb971));
        EXPECT(0xad, gbc.readMem(0xb972));
        // CB AD 01B9
        gbc.setState(0x4fa9, 0x30d6, 0x4e40, 0x926e, 0xf4cb, 0xd99d, 0x1, 0x1);
        gbc.writeMem(0x4fa9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x30d6, gbc.sp());
        EXPECT(0x4fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01BA
        gbc.setState(0xb749, 0xe0a3, 0x4d50, 0x3efe, 0xf944, 0xe019, 0x1, 0x1);
        gbc.writeMem(0xb749, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe0a3, gbc.sp());
        EXPECT(0xb74b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb749));
        EXPECT(0xad, gbc.readMem(0xb74a));
        // CB AD 01BB
        gbc.setState(0xd41a, 0xefb4, 0x43c0, 0xd94d, 0xbfbe, 0xbc92, 0x0, 0x0);
        gbc.writeMem(0xd41a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0xd41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41a));
        EXPECT(0xad, gbc.readMem(0xd41b));
        // CB AD 01BC
        gbc.setState(0x201b, 0xab21, 0xe680, 0x89a5, 0x8d77, 0x6e87, 0x1, 0x1);
        gbc.writeMem(0x201b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xab21, gbc.sp());
        EXPECT(0x201d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01BD
        gbc.setState(0xcef0, 0x12f, 0x4f30, 0x83c8, 0xffd5, 0xcea7, 0x1, 0x0);
        gbc.writeMem(0xcef0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x12f, gbc.sp());
        EXPECT(0xcef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef0));
        EXPECT(0xad, gbc.readMem(0xcef1));
        // CB AD 01BE
        gbc.setState(0xb78e, 0xd1be, 0xa370, 0x541e, 0x716f, 0x2e2b, 0x0, 0x0);
        gbc.writeMem(0xb78e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd1be, gbc.sp());
        EXPECT(0xb790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78e));
        EXPECT(0xad, gbc.readMem(0xb78f));
        // CB AD 01BF
        gbc.setState(0x8dec, 0xd9ed, 0xe700, 0x9672, 0x127d, 0x2022, 0x1, 0x1);
        gbc.writeMem(0x8dec, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd9ed, gbc.sp());
        EXPECT(0x8dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dec));
        EXPECT(0xad, gbc.readMem(0x8ded));
        // CB AD 01C0
        gbc.setState(0x636c, 0xbfcb, 0x7cc0, 0x4187, 0x1f53, 0x2ccc, 0x0, 0x0);
        gbc.writeMem(0x636c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbfcb, gbc.sp());
        EXPECT(0x636e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01C1
        gbc.setState(0x77e, 0x7767, 0xd950, 0x726b, 0xaa92, 0xa528, 0x1, 0x0);
        gbc.writeMem(0x77e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7767, gbc.sp());
        EXPECT(0x780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01C3
        gbc.setState(0xad40, 0x5d43, 0x1cd0, 0xb7e4, 0x582b, 0x5c51, 0x1, 0x0);
        gbc.writeMem(0xad40, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5d43, gbc.sp());
        EXPECT(0xad42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad40));
        EXPECT(0xad, gbc.readMem(0xad41));
        // CB AD 01C4
        gbc.setState(0x8288, 0x4f4c, 0x40c0, 0xdb58, 0xcfe6, 0x1c28, 0x0, 0x1);
        gbc.writeMem(0x8288, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4f4c, gbc.sp());
        EXPECT(0x828a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8288));
        EXPECT(0xad, gbc.readMem(0x8289));
        // CB AD 01C6
        gbc.setState(0x5913, 0x2a95, 0xfd90, 0xc, 0x1d85, 0x5f27, 0x0, 0x0);
        gbc.writeMem(0x5913, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2a95, gbc.sp());
        EXPECT(0x5915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01C7
        gbc.setState(0x8cd8, 0x5148, 0x5a0, 0x7044, 0xab8e, 0xbfa7, 0x0, 0x0);
        gbc.writeMem(0x8cd8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5148, gbc.sp());
        EXPECT(0x8cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd8));
        EXPECT(0xad, gbc.readMem(0x8cd9));
        // CB AD 01C8
        gbc.setState(0x98ce, 0xc64f, 0x6dd0, 0xa610, 0x1fb5, 0xec1b, 0x0, 0x0);
        gbc.writeMem(0x98ce, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc64f, gbc.sp());
        EXPECT(0x98d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ce));
        EXPECT(0xad, gbc.readMem(0x98cf));
        // CB AD 01C9
        gbc.setState(0xb1d7, 0x57cc, 0x4c20, 0xb9f4, 0xf3ab, 0x48, 0x0, 0x1);
        gbc.writeMem(0xb1d7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x57cc, gbc.sp());
        EXPECT(0xb1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d7));
        EXPECT(0xad, gbc.readMem(0xb1d8));
        // CB AD 01CA
        gbc.setState(0x5cdf, 0x3fe1, 0xf320, 0x195f, 0x8da5, 0x10fd, 0x0, 0x0);
        gbc.writeMem(0x5cdf, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3fe1, gbc.sp());
        EXPECT(0x5ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01CB
        gbc.setState(0x79eb, 0x70f4, 0xa900, 0xd47f, 0xcac7, 0x939a, 0x1, 0x0);
        gbc.writeMem(0x79eb, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x70f4, gbc.sp());
        EXPECT(0x79ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01CC
        gbc.setState(0x1c2f, 0xed0, 0xb220, 0x2e6, 0x880a, 0xb94c, 0x0, 0x1);
        gbc.writeMem(0x1c2f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xed0, gbc.sp());
        EXPECT(0x1c31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01CD
        gbc.setState(0x97af, 0xc98e, 0x55c0, 0xc2ef, 0xbd13, 0xdf20, 0x0, 0x0);
        gbc.writeMem(0x97af, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc98e, gbc.sp());
        EXPECT(0x97b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97af));
        EXPECT(0xad, gbc.readMem(0x97b0));
        // CB AD 01CE
        gbc.setState(0x34e2, 0x88d4, 0x2290, 0xb19d, 0xebc2, 0xf358, 0x0, 0x0);
        gbc.writeMem(0x34e2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x88d4, gbc.sp());
        EXPECT(0x34e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01CF
        gbc.setState(0x55ac, 0x6540, 0xab50, 0x62b0, 0x542, 0x8cc, 0x1, 0x0);
        gbc.writeMem(0x55ac, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6540, gbc.sp());
        EXPECT(0x55ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01D0
        gbc.setState(0x6b87, 0x5d8a, 0x4ce0, 0x2055, 0x8c51, 0x8900, 0x0, 0x1);
        gbc.writeMem(0x6b87, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5d8a, gbc.sp());
        EXPECT(0x6b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01D1
        gbc.setState(0x429d, 0xab9f, 0x7d90, 0x7246, 0x4057, 0xef6c, 0x1, 0x1);
        gbc.writeMem(0x429d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xab9f, gbc.sp());
        EXPECT(0x429f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01D2
        gbc.setState(0xb784, 0xc4b, 0x4f50, 0xfc40, 0xe8a1, 0x4da6, 0x1, 0x0);
        gbc.writeMem(0xb784, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc4b, gbc.sp());
        EXPECT(0xb786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb784));
        EXPECT(0xad, gbc.readMem(0xb785));
        // CB AD 01D3
        gbc.setState(0x6703, 0x6d00, 0x1bd0, 0xb9d, 0x81d1, 0x12a1, 0x1, 0x1);
        gbc.writeMem(0x6703, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6d00, gbc.sp());
        EXPECT(0x6705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01D4
        gbc.setState(0x3844, 0xc38e, 0xe9a0, 0x9e33, 0xf541, 0x290e, 0x1, 0x0);
        gbc.writeMem(0x3844, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc38e, gbc.sp());
        EXPECT(0x3846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01D5
        gbc.setState(0x45dc, 0x1dc, 0xb9c0, 0xa34e, 0x255, 0xaa2, 0x1, 0x1);
        gbc.writeMem(0x45dc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1dc, gbc.sp());
        EXPECT(0x45de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01D6
        gbc.setState(0x59c4, 0xb6d0, 0x5a60, 0xf6d4, 0xd951, 0x6c48, 0x1, 0x0);
        gbc.writeMem(0x59c4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb6d0, gbc.sp());
        EXPECT(0x59c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01D7
        gbc.setState(0x6c6e, 0x1815, 0x9330, 0xd8c, 0x3671, 0xdce8, 0x0, 0x0);
        gbc.writeMem(0x6c6e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1815, gbc.sp());
        EXPECT(0x6c70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01D8
        gbc.setState(0xd3, 0x6f7c, 0xe150, 0x8707, 0x3ddf, 0x9434, 0x0, 0x1);
        gbc.writeMem(0xd3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6f7c, gbc.sp());
        EXPECT(0xd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01D9
        gbc.setState(0x572, 0x2a58, 0x4430, 0xab02, 0x5112, 0x39, 0x1, 0x1);
        gbc.writeMem(0x572, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2a58, gbc.sp());
        EXPECT(0x574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01DA
        gbc.setState(0xdc9c, 0x3073, 0xaf40, 0x4bb8, 0xe56b, 0x5262, 0x1, 0x0);
        gbc.writeMem(0xdc9c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3073, gbc.sp());
        EXPECT(0xdc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9c));
        EXPECT(0xad, gbc.readMem(0xdc9d));
        // CB AD 01DB
        gbc.setState(0xd10c, 0x6b4a, 0x95b0, 0x7ed1, 0xffdf, 0xfd42, 0x1, 0x0);
        gbc.writeMem(0xd10c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6b4a, gbc.sp());
        EXPECT(0xd10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10c));
        EXPECT(0xad, gbc.readMem(0xd10d));
        // CB AD 01DC
        gbc.setState(0x6f55, 0xf33f, 0x9a20, 0x5594, 0xdfdb, 0x2f95, 0x0, 0x1);
        gbc.writeMem(0x6f55, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf33f, gbc.sp());
        EXPECT(0x6f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01DD
        gbc.setState(0xdeb, 0xb032, 0x8e60, 0x9faa, 0x1ca9, 0x830b, 0x1, 0x0);
        gbc.writeMem(0xdeb, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb032, gbc.sp());
        EXPECT(0xded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01DF
        gbc.setState(0xb26a, 0xa819, 0x4c00, 0x25a, 0x9c19, 0xbfc3, 0x0, 0x1);
        gbc.writeMem(0xb26a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa819, gbc.sp());
        EXPECT(0xb26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26a));
        EXPECT(0xad, gbc.readMem(0xb26b));
        // CB AD 01E0
        gbc.setState(0x7fbe, 0x9e9f, 0xf30, 0xe5c8, 0x2ef6, 0x770, 0x1, 0x0);
        gbc.writeMem(0x7fbe, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9e9f, gbc.sp());
        EXPECT(0x7fc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01E1
        gbc.setState(0x60f9, 0x3671, 0xc3a0, 0xb9fb, 0x1fbc, 0xd419, 0x1, 0x1);
        gbc.writeMem(0x60f9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3671, gbc.sp());
        EXPECT(0x60fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01E2
        gbc.setState(0x8513, 0xb1a5, 0x8bb0, 0xe177, 0x98b8, 0xf3c9, 0x1, 0x0);
        gbc.writeMem(0x8513, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb1a5, gbc.sp());
        EXPECT(0x8515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8513));
        EXPECT(0xad, gbc.readMem(0x8514));
        // CB AD 01E3
        gbc.setState(0x7942, 0xb8d6, 0x2ab0, 0xf669, 0x31b5, 0xeb9b, 0x0, 0x0);
        gbc.writeMem(0x7942, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb8d6, gbc.sp());
        EXPECT(0x7944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01E4
        gbc.setState(0xe4e6, 0xfe92, 0x9200, 0x56bd, 0x5953, 0xb99f, 0x0, 0x0);
        gbc.writeMem(0xe4e6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfe92, gbc.sp());
        EXPECT(0xe4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e6));
        EXPECT(0xad, gbc.readMem(0xe4e7));
        // CB AD 01E5
        gbc.setState(0x9aad, 0xbb77, 0x7da0, 0x6cfc, 0xb389, 0x340f, 0x1, 0x0);
        gbc.writeMem(0x9aad, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbb77, gbc.sp());
        EXPECT(0x9aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aad));
        EXPECT(0xad, gbc.readMem(0x9aae));
        // CB AD 01E6
        gbc.setState(0x7a83, 0xf943, 0xedc0, 0xe285, 0x8d11, 0x68aa, 0x1, 0x1);
        gbc.writeMem(0x7a83, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf943, gbc.sp());
        EXPECT(0x7a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01E9
        gbc.setState(0xdcb5, 0x90ad, 0xc3e0, 0xa853, 0x8557, 0xe1bd, 0x1, 0x0);
        gbc.writeMem(0xdcb5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x90ad, gbc.sp());
        EXPECT(0xdcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb5));
        EXPECT(0xad, gbc.readMem(0xdcb6));
        // CB AD 01EA
        gbc.setState(0xed2f, 0x6c1a, 0x2930, 0x9586, 0xcc3e, 0xb71, 0x0, 0x0);
        gbc.writeMem(0xed2f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6c1a, gbc.sp());
        EXPECT(0xed31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2f));
        EXPECT(0xad, gbc.readMem(0xed30));
        // CB AD 01EB
        gbc.setState(0x7169, 0x3b4f, 0xd6d0, 0x56e2, 0xcd12, 0xefab, 0x0, 0x1);
        gbc.writeMem(0x7169, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3b4f, gbc.sp());
        EXPECT(0x716b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01EC
        gbc.setState(0xbf23, 0xc71b, 0x7100, 0x319b, 0x153, 0x6931, 0x1, 0x1);
        gbc.writeMem(0xbf23, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc71b, gbc.sp());
        EXPECT(0xbf25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf23));
        EXPECT(0xad, gbc.readMem(0xbf24));
        // CB AD 01ED
        gbc.setState(0xaeb6, 0x8bc6, 0x9030, 0xeff3, 0xef4b, 0xdb43, 0x0, 0x1);
        gbc.writeMem(0xaeb6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8bc6, gbc.sp());
        EXPECT(0xaeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb6));
        EXPECT(0xad, gbc.readMem(0xaeb7));
        // CB AD 01EE
        gbc.setState(0xa5e7, 0x7224, 0x60, 0x1dd0, 0x7b71, 0x2066, 0x1, 0x0);
        gbc.writeMem(0xa5e7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7224, gbc.sp());
        EXPECT(0xa5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e7));
        EXPECT(0xad, gbc.readMem(0xa5e8));
        // CB AD 01EF
        gbc.setState(0x9d63, 0x6c16, 0x10c0, 0xc753, 0xbe4b, 0xa024, 0x0, 0x0);
        gbc.writeMem(0x9d63, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6c16, gbc.sp());
        EXPECT(0x9d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d63));
        EXPECT(0xad, gbc.readMem(0x9d64));
        // CB AD 01F0
        gbc.setState(0xcd0b, 0x483d, 0x77e0, 0x8bf2, 0x524e, 0xd3d7, 0x0, 0x0);
        gbc.writeMem(0xcd0b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x483d, gbc.sp());
        EXPECT(0xcd0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0b));
        EXPECT(0xad, gbc.readMem(0xcd0c));
        // CB AD 01F1
        gbc.setState(0x9c43, 0x327f, 0x3d00, 0x3163, 0x2efd, 0xa3d4, 0x1, 0x1);
        gbc.writeMem(0x9c43, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x327f, gbc.sp());
        EXPECT(0x9c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c43));
        EXPECT(0xad, gbc.readMem(0x9c44));
        // CB AD 01F2
        gbc.setState(0xabd5, 0xb0d8, 0x4870, 0xef85, 0x14b4, 0x11d, 0x0, 0x0);
        gbc.writeMem(0xabd5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb0d8, gbc.sp());
        EXPECT(0xabd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd5));
        EXPECT(0xad, gbc.readMem(0xabd6));
        // CB AD 01F3
        gbc.setState(0x221a, 0x9154, 0xce00, 0xec7d, 0x87c0, 0xefba, 0x0, 0x0);
        gbc.writeMem(0x221a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9154, gbc.sp());
        EXPECT(0x221c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01F4
        gbc.setState(0x2cf6, 0xe525, 0xe920, 0xeeca, 0xbed7, 0xae83, 0x0, 0x1);
        gbc.writeMem(0x2cf6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe525, gbc.sp());
        EXPECT(0x2cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01F5
        gbc.setState(0x92ed, 0xce25, 0x48f0, 0xe4e0, 0x95f8, 0x49b3, 0x0, 0x0);
        gbc.writeMem(0x92ed, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xce25, gbc.sp());
        EXPECT(0x92ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ed));
        EXPECT(0xad, gbc.readMem(0x92ee));
        // CB AD 01F6
        gbc.setState(0x679e, 0xaeb9, 0xbf80, 0x1ff0, 0x2bdf, 0x1152, 0x0, 0x0);
        gbc.writeMem(0x679e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xaeb9, gbc.sp());
        EXPECT(0x67a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01F7
        gbc.setState(0xacbf, 0x77a9, 0x9c50, 0x9001, 0x66e9, 0xbd7a, 0x0, 0x0);
        gbc.writeMem(0xacbf, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x77a9, gbc.sp());
        EXPECT(0xacc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacbf));
        EXPECT(0xad, gbc.readMem(0xacc0));
        // CB AD 01F8
        gbc.setState(0x8dfe, 0x1c9a, 0xd3c0, 0xa30e, 0xf653, 0x232b, 0x0, 0x0);
        gbc.writeMem(0x8dfe, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1c9a, gbc.sp());
        EXPECT(0x8e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfe));
        EXPECT(0xad, gbc.readMem(0x8dff));
        // CB AD 01F9
        gbc.setState(0x4471, 0x58bb, 0xaa70, 0x4b2a, 0xd832, 0x6bed, 0x1, 0x1);
        gbc.writeMem(0x4471, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x58bb, gbc.sp());
        EXPECT(0x4473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01FA
        gbc.setState(0x1966, 0x3d5c, 0xbbe0, 0x6452, 0xa773, 0xf59, 0x0, 0x0);
        gbc.writeMem(0x1966, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3d5c, gbc.sp());
        EXPECT(0x1968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01FB
        gbc.setState(0x14c7, 0x7007, 0x8680, 0xb810, 0xb9c3, 0x4228, 0x0, 0x1);
        gbc.writeMem(0x14c7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7007, gbc.sp());
        EXPECT(0x14c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01FC
        gbc.setState(0x203f, 0x4664, 0x500, 0x51ed, 0x535a, 0xab3f, 0x0, 0x0);
        gbc.writeMem(0x203f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4664, gbc.sp());
        EXPECT(0x2041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 01FD
        gbc.setState(0x58fa, 0x539f, 0x2c30, 0x8cc9, 0xc347, 0x7984, 0x0, 0x1);
        gbc.writeMem(0x58fa, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x539f, gbc.sp());
        EXPECT(0x58fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 01FE
        gbc.setState(0x909f, 0xbcef, 0x6f00, 0x1b5, 0x88a5, 0x3c51, 0x1, 0x0);
        gbc.writeMem(0x909f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbcef, gbc.sp());
        EXPECT(0x90a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909f));
        EXPECT(0xad, gbc.readMem(0x90a0));
        // CB AD 01FF
        gbc.setState(0xe51d, 0x33e8, 0x1fd0, 0xf9b3, 0xc604, 0x2586, 0x0, 0x1);
        gbc.writeMem(0xe51d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x33e8, gbc.sp());
        EXPECT(0xe51f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51d));
        EXPECT(0xad, gbc.readMem(0xe51e));
        // CB AD 0201
        gbc.setState(0x48ea, 0x78f6, 0xf980, 0x1f0b, 0x493, 0xcd48, 0x1, 0x1);
        gbc.writeMem(0x48ea, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x78f6, gbc.sp());
        EXPECT(0x48ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0202
        gbc.setState(0x8e4c, 0xeb59, 0x32c0, 0x16b7, 0x649b, 0xcaa3, 0x0, 0x1);
        gbc.writeMem(0x8e4c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xeb59, gbc.sp());
        EXPECT(0x8e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e4c));
        EXPECT(0xad, gbc.readMem(0x8e4d));
        // CB AD 0203
        gbc.setState(0x9a15, 0xbc49, 0x5bb0, 0x860f, 0xda52, 0x4433, 0x0, 0x0);
        gbc.writeMem(0x9a15, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbc49, gbc.sp());
        EXPECT(0x9a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a15));
        EXPECT(0xad, gbc.readMem(0x9a16));
        // CB AD 0204
        gbc.setState(0x65d1, 0x9e8, 0x23b0, 0xd54f, 0x4b5b, 0xfec0, 0x0, 0x1);
        gbc.writeMem(0x65d1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9e8, gbc.sp());
        EXPECT(0x65d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0205
        gbc.setState(0x868f, 0x56c5, 0x5640, 0x7830, 0x4c77, 0x260b, 0x1, 0x0);
        gbc.writeMem(0x868f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x56c5, gbc.sp());
        EXPECT(0x8691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868f));
        EXPECT(0xad, gbc.readMem(0x8690));
        // CB AD 0206
        gbc.setState(0x24ee, 0x8074, 0x740, 0x78e1, 0xa298, 0x525f, 0x0, 0x0);
        gbc.writeMem(0x24ee, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8074, gbc.sp());
        EXPECT(0x24f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0207
        gbc.setState(0x19d7, 0x481a, 0x7810, 0xee2e, 0x57c3, 0x8e57, 0x1, 0x1);
        gbc.writeMem(0x19d7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x481a, gbc.sp());
        EXPECT(0x19d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0208
        gbc.setState(0x10e1, 0x23f7, 0x7600, 0xcad2, 0xa0d2, 0xe3f1, 0x1, 0x1);
        gbc.writeMem(0x10e1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x23f7, gbc.sp());
        EXPECT(0x10e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0209
        gbc.setState(0x4732, 0x8194, 0xb9c0, 0x375c, 0x8812, 0x9e9c, 0x0, 0x1);
        gbc.writeMem(0x4732, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8194, gbc.sp());
        EXPECT(0x4734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 020A
        gbc.setState(0xa16d, 0xbbb4, 0xa7d0, 0xaec7, 0xb6d1, 0x1768, 0x1, 0x0);
        gbc.writeMem(0xa16d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbbb4, gbc.sp());
        EXPECT(0xa16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16d));
        EXPECT(0xad, gbc.readMem(0xa16e));
        // CB AD 020C
        gbc.setState(0x7000, 0xf27f, 0x7670, 0xe4fc, 0x294f, 0x94e4, 0x1, 0x0);
        gbc.writeMem(0x7000, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf27f, gbc.sp());
        EXPECT(0x7002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 020D
        gbc.setState(0x699, 0xa797, 0xf330, 0xf6fc, 0x6f3a, 0x48bc, 0x1, 0x1);
        gbc.writeMem(0x699, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa797, gbc.sp());
        EXPECT(0x69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 020E
        gbc.setState(0x3354, 0xf5ab, 0x8d20, 0x95f9, 0xb608, 0xa8de, 0x0, 0x0);
        gbc.writeMem(0x3354, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf5ab, gbc.sp());
        EXPECT(0x3356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 020F
        gbc.setState(0x982a, 0xecff, 0xf090, 0x8ad9, 0x60e6, 0x7a2a, 0x0, 0x1);
        gbc.writeMem(0x982a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xecff, gbc.sp());
        EXPECT(0x982c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x982a));
        EXPECT(0xad, gbc.readMem(0x982b));
        // CB AD 0210
        gbc.setState(0xe148, 0x8d78, 0xa650, 0xe17, 0xf4ca, 0xe85d, 0x1, 0x1);
        gbc.writeMem(0xe148, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8d78, gbc.sp());
        EXPECT(0xe14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe148));
        EXPECT(0xad, gbc.readMem(0xe149));
        // CB AD 0211
        gbc.setState(0xa4b4, 0x2a87, 0x9990, 0x83f, 0x68f1, 0xa89a, 0x0, 0x1);
        gbc.writeMem(0xa4b4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2a87, gbc.sp());
        EXPECT(0xa4b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b4));
        EXPECT(0xad, gbc.readMem(0xa4b5));
        // CB AD 0212
        gbc.setState(0xd497, 0xa6f9, 0x8b0, 0xd703, 0x8707, 0x278f, 0x0, 0x1);
        gbc.writeMem(0xd497, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa6f9, gbc.sp());
        EXPECT(0xd499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd497));
        EXPECT(0xad, gbc.readMem(0xd498));
        // CB AD 0213
        gbc.setState(0xcbe8, 0x85fb, 0xc190, 0x2fd3, 0xbb8d, 0x2eb5, 0x1, 0x0);
        gbc.writeMem(0xcbe8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x85fb, gbc.sp());
        EXPECT(0xcbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe8));
        EXPECT(0xad, gbc.readMem(0xcbe9));
        // CB AD 0214
        gbc.setState(0x4cce, 0xc63, 0xf990, 0x89f1, 0x8a4b, 0xa774, 0x1, 0x0);
        gbc.writeMem(0x4cce, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc63, gbc.sp());
        EXPECT(0x4cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0215
        gbc.setState(0x52f5, 0xbb02, 0x37a0, 0xf045, 0x239a, 0x1dc2, 0x1, 0x0);
        gbc.writeMem(0x52f5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbb02, gbc.sp());
        EXPECT(0x52f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0216
        gbc.setState(0x4b53, 0xa91a, 0xe380, 0x4afc, 0x16f5, 0xaa35, 0x0, 0x1);
        gbc.writeMem(0x4b53, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa91a, gbc.sp());
        EXPECT(0x4b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0217
        gbc.setState(0xaec0, 0xa5a4, 0x5a00, 0x2da4, 0x85b2, 0x5842, 0x0, 0x1);
        gbc.writeMem(0xaec0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa5a4, gbc.sp());
        EXPECT(0xaec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec0));
        EXPECT(0xad, gbc.readMem(0xaec1));
        // CB AD 0218
        gbc.setState(0xab92, 0xac2e, 0x6450, 0x958f, 0x67b7, 0x23e5, 0x0, 0x1);
        gbc.writeMem(0xab92, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xac2e, gbc.sp());
        EXPECT(0xab94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab92));
        EXPECT(0xad, gbc.readMem(0xab93));
        // CB AD 0219
        gbc.setState(0x87fc, 0x2bd0, 0xdaa0, 0x6f7d, 0xf3c4, 0xbc3, 0x0, 0x0);
        gbc.writeMem(0x87fc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2bd0, gbc.sp());
        EXPECT(0x87fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fc));
        EXPECT(0xad, gbc.readMem(0x87fd));
        // CB AD 021A
        gbc.setState(0x2ee2, 0xe8b2, 0xac70, 0x61e1, 0x9fb5, 0xb9bd, 0x0, 0x1);
        gbc.writeMem(0x2ee2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe8b2, gbc.sp());
        EXPECT(0x2ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 021B
        gbc.setState(0x10e6, 0x8fdf, 0xbc00, 0xf10b, 0x2546, 0x6934, 0x0, 0x1);
        gbc.writeMem(0x10e6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8fdf, gbc.sp());
        EXPECT(0x10e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 021C
        gbc.setState(0x7502, 0xb295, 0xcf10, 0xbd8e, 0xa928, 0xdbd1, 0x0, 0x1);
        gbc.writeMem(0x7502, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb295, gbc.sp());
        EXPECT(0x7504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 021D
        gbc.setState(0x7873, 0xee0f, 0x8240, 0x9c1, 0xe121, 0x8f72, 0x1, 0x0);
        gbc.writeMem(0x7873, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xee0f, gbc.sp());
        EXPECT(0x7875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 021E
        gbc.setState(0x6697, 0xcde2, 0x99e0, 0x3553, 0xa04e, 0x9306, 0x0, 0x1);
        gbc.writeMem(0x6697, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcde2, gbc.sp());
        EXPECT(0x6699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 021F
        gbc.setState(0xcc3f, 0xfa58, 0xfff0, 0xad8d, 0xc38a, 0xbac9, 0x0, 0x1);
        gbc.writeMem(0xcc3f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfa58, gbc.sp());
        EXPECT(0xcc41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3f));
        EXPECT(0xad, gbc.readMem(0xcc40));
        // CB AD 0220
        gbc.setState(0x9122, 0x6cd, 0x4420, 0x534a, 0xb8da, 0xbe93, 0x1, 0x0);
        gbc.writeMem(0x9122, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6cd, gbc.sp());
        EXPECT(0x9124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9122));
        EXPECT(0xad, gbc.readMem(0x9123));
        // CB AD 0222
        gbc.setState(0x874f, 0xb66b, 0xafb0, 0x4c43, 0x643c, 0xcb51, 0x0, 0x0);
        gbc.writeMem(0x874f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb66b, gbc.sp());
        EXPECT(0x8751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x874f));
        EXPECT(0xad, gbc.readMem(0x8750));
        // CB AD 0223
        gbc.setState(0x74dd, 0x2a46, 0xfe30, 0x3be1, 0x2040, 0x444, 0x1, 0x1);
        gbc.writeMem(0x74dd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2a46, gbc.sp());
        EXPECT(0x74df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0224
        gbc.setState(0x6920, 0x94a4, 0xf0a0, 0x9424, 0x319c, 0xffef, 0x0, 0x1);
        gbc.writeMem(0x6920, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x94a4, gbc.sp());
        EXPECT(0x6922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0225
        gbc.setState(0x72f9, 0x4712, 0x4800, 0x343b, 0x8d53, 0xd96f, 0x1, 0x0);
        gbc.writeMem(0x72f9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4712, gbc.sp());
        EXPECT(0x72fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0226
        gbc.setState(0x3fff, 0x965e, 0xf020, 0xcbc3, 0xce34, 0x3db5, 0x1, 0x0);
        gbc.writeMem(0x3fff, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x965e, gbc.sp());
        EXPECT(0x4001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0227
        gbc.setState(0x198d, 0x226c, 0xe090, 0x899c, 0x275c, 0x7832, 0x1, 0x1);
        gbc.writeMem(0x198d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x226c, gbc.sp());
        EXPECT(0x198f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0228
        gbc.setState(0xcac, 0xadc9, 0x72c0, 0x728, 0x237f, 0x9565, 0x0, 0x1);
        gbc.writeMem(0xcac, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xadc9, gbc.sp());
        EXPECT(0xcae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0229
        gbc.setState(0xcfeb, 0x793, 0x9210, 0x23a5, 0xb080, 0xa648, 0x0, 0x0);
        gbc.writeMem(0xcfeb, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x793, gbc.sp());
        EXPECT(0xcfed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfeb));
        EXPECT(0xad, gbc.readMem(0xcfec));
        // CB AD 022B
        gbc.setState(0xb842, 0xf94, 0x61c0, 0xc47, 0xf314, 0xa22e, 0x0, 0x1);
        gbc.writeMem(0xb842, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf94, gbc.sp());
        EXPECT(0xb844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb842));
        EXPECT(0xad, gbc.readMem(0xb843));
        // CB AD 022C
        gbc.setState(0xa104, 0x527, 0x4c60, 0xae0c, 0xbd16, 0xcaf7, 0x1, 0x1);
        gbc.writeMem(0xa104, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x527, gbc.sp());
        EXPECT(0xa106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa104));
        EXPECT(0xad, gbc.readMem(0xa105));
        // CB AD 022D
        gbc.setState(0xe5ce, 0x1ea9, 0x7800, 0xbb8d, 0xe135, 0x3e1, 0x0, 0x1);
        gbc.writeMem(0xe5ce, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1ea9, gbc.sp());
        EXPECT(0xe5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ce));
        EXPECT(0xad, gbc.readMem(0xe5cf));
        // CB AD 022E
        gbc.setState(0x23a7, 0x174, 0x85f0, 0x3c47, 0x5aff, 0xc588, 0x0, 0x1);
        gbc.writeMem(0x23a7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x174, gbc.sp());
        EXPECT(0x23a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 022F
        gbc.setState(0xb0fb, 0xb1eb, 0x13b0, 0xca8a, 0xe7eb, 0x454a, 0x0, 0x1);
        gbc.writeMem(0xb0fb, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb1eb, gbc.sp());
        EXPECT(0xb0fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fb));
        EXPECT(0xad, gbc.readMem(0xb0fc));
        // CB AD 0230
        gbc.setState(0xd8e5, 0x83b4, 0x18c0, 0x81e7, 0xc974, 0x12c2, 0x0, 0x1);
        gbc.writeMem(0xd8e5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x83b4, gbc.sp());
        EXPECT(0xd8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e5));
        EXPECT(0xad, gbc.readMem(0xd8e6));
        // CB AD 0231
        gbc.setState(0x8351, 0x7dd5, 0xfe40, 0xb7e5, 0x796c, 0xc4b9, 0x0, 0x1);
        gbc.writeMem(0x8351, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7dd5, gbc.sp());
        EXPECT(0x8353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8351));
        EXPECT(0xad, gbc.readMem(0x8352));
        // CB AD 0232
        gbc.setState(0xb44b, 0xfa85, 0x3bb0, 0xa816, 0xa9a4, 0xc13d, 0x1, 0x0);
        gbc.writeMem(0xb44b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfa85, gbc.sp());
        EXPECT(0xb44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb44b));
        EXPECT(0xad, gbc.readMem(0xb44c));
        // CB AD 0233
        gbc.setState(0x97e7, 0x7350, 0x7920, 0x5943, 0x60f9, 0xb1c7, 0x1, 0x1);
        gbc.writeMem(0x97e7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7350, gbc.sp());
        EXPECT(0x97e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e7));
        EXPECT(0xad, gbc.readMem(0x97e8));
        // CB AD 0234
        gbc.setState(0x7a73, 0x2baf, 0x55e0, 0xfd2f, 0xd02e, 0xd406, 0x0, 0x1);
        gbc.writeMem(0x7a73, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2baf, gbc.sp());
        EXPECT(0x7a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0235
        gbc.setState(0x6be4, 0x6673, 0x5140, 0x6b95, 0x81e5, 0x4ef8, 0x0, 0x1);
        gbc.writeMem(0x6be4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6673, gbc.sp());
        EXPECT(0x6be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0236
        gbc.setState(0x4d4d, 0x50ce, 0x4610, 0xf558, 0xc00c, 0xff11, 0x1, 0x0);
        gbc.writeMem(0x4d4d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x50ce, gbc.sp());
        EXPECT(0x4d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0237
        gbc.setState(0xd8b2, 0x60c8, 0x4d0, 0x6d55, 0x69cc, 0x2706, 0x1, 0x0);
        gbc.writeMem(0xd8b2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x60c8, gbc.sp());
        EXPECT(0xd8b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b2));
        EXPECT(0xad, gbc.readMem(0xd8b3));
        // CB AD 0238
        gbc.setState(0xa3fc, 0x2598, 0xce10, 0x5663, 0xb91f, 0x4055, 0x0, 0x0);
        gbc.writeMem(0xa3fc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2598, gbc.sp());
        EXPECT(0xa3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fc));
        EXPECT(0xad, gbc.readMem(0xa3fd));
        // CB AD 0239
        gbc.setState(0xaa5, 0x83de, 0x5130, 0x2347, 0xd665, 0xc75e, 0x1, 0x1);
        gbc.writeMem(0xaa5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x83de, gbc.sp());
        EXPECT(0xaa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 023A
        gbc.setState(0xe371, 0x3a82, 0xa230, 0xc68e, 0x841b, 0xe33b, 0x0, 0x0);
        gbc.writeMem(0xe371, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3a82, gbc.sp());
        EXPECT(0xe373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe371));
        EXPECT(0xad, gbc.readMem(0xe372));
        // CB AD 023B
        gbc.setState(0x5c70, 0x4e0e, 0xfde0, 0x647, 0xb586, 0x185, 0x0, 0x0);
        gbc.writeMem(0x5c70, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4e0e, gbc.sp());
        EXPECT(0x5c72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 023C
        gbc.setState(0xc7, 0x958, 0x52d0, 0x1d07, 0xb91b, 0xedc6, 0x0, 0x0);
        gbc.writeMem(0xc7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x958, gbc.sp());
        EXPECT(0xc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 023D
        gbc.setState(0x8a9b, 0x49c5, 0x3360, 0x5ab1, 0x6539, 0xa41a, 0x1, 0x1);
        gbc.writeMem(0x8a9b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x49c5, gbc.sp());
        EXPECT(0x8a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a9b));
        EXPECT(0xad, gbc.readMem(0x8a9c));
        // CB AD 023E
        gbc.setState(0x565, 0x937a, 0x90, 0x780e, 0x5937, 0x4a66, 0x0, 0x1);
        gbc.writeMem(0x565, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x937a, gbc.sp());
        EXPECT(0x567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 023F
        gbc.setState(0x17ec, 0x6aa2, 0x51f0, 0x2675, 0xf257, 0xb662, 0x0, 0x1);
        gbc.writeMem(0x17ec, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6aa2, gbc.sp());
        EXPECT(0x17ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0240
        gbc.setState(0x1f9f, 0x251a, 0x98e0, 0xfba7, 0x9b10, 0x23b8, 0x1, 0x0);
        gbc.writeMem(0x1f9f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x251a, gbc.sp());
        EXPECT(0x1fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0241
        gbc.setState(0x844a, 0x281f, 0x49c0, 0xaf75, 0x7e74, 0xfb74, 0x1, 0x1);
        gbc.writeMem(0x844a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x281f, gbc.sp());
        EXPECT(0x844c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x844a));
        EXPECT(0xad, gbc.readMem(0x844b));
        // CB AD 0242
        gbc.setState(0x6afc, 0x1c75, 0x1a90, 0x99e, 0xfc17, 0x6927, 0x0, 0x1);
        gbc.writeMem(0x6afc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1c75, gbc.sp());
        EXPECT(0x6afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0243
        gbc.setState(0xe035, 0x88f0, 0xaf40, 0x12e5, 0xbe40, 0xb413, 0x1, 0x1);
        gbc.writeMem(0xe035, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x88f0, gbc.sp());
        EXPECT(0xe037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe035));
        EXPECT(0xad, gbc.readMem(0xe036));
        // CB AD 0245
        gbc.setState(0x3262, 0x91a8, 0x9a20, 0xe1ff, 0xa0d6, 0x2ec, 0x0, 0x0);
        gbc.writeMem(0x3262, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x91a8, gbc.sp());
        EXPECT(0x3264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0246
        gbc.setState(0xcbb1, 0x4951, 0xa450, 0x6a9a, 0x9bf9, 0xb964, 0x0, 0x1);
        gbc.writeMem(0xcbb1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4951, gbc.sp());
        EXPECT(0xcbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb1));
        EXPECT(0xad, gbc.readMem(0xcbb2));
        // CB AD 0247
        gbc.setState(0x63b9, 0xe72e, 0x54c0, 0xe1c0, 0xc6fe, 0x9045, 0x0, 0x1);
        gbc.writeMem(0x63b9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe72e, gbc.sp());
        EXPECT(0x63bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0248
        gbc.setState(0x55ce, 0xa372, 0x1750, 0x58bb, 0x7495, 0x184d, 0x1, 0x1);
        gbc.writeMem(0x55ce, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa372, gbc.sp());
        EXPECT(0x55d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0249
        gbc.setState(0x32cd, 0x5954, 0xbff0, 0xed83, 0x352b, 0x3ce5, 0x1, 0x0);
        gbc.writeMem(0x32cd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5954, gbc.sp());
        EXPECT(0x32cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 024A
        gbc.setState(0x588e, 0xe887, 0x82f0, 0x3069, 0x265a, 0x4aa7, 0x0, 0x0);
        gbc.writeMem(0x588e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe887, gbc.sp());
        EXPECT(0x5890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 024B
        gbc.setState(0x17b6, 0x9586, 0xfda0, 0xc50e, 0x6b86, 0x6644, 0x0, 0x0);
        gbc.writeMem(0x17b6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9586, gbc.sp());
        EXPECT(0x17b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 024C
        gbc.setState(0x9135, 0x3c75, 0x6c80, 0xd839, 0x3708, 0x6ab5, 0x1, 0x0);
        gbc.writeMem(0x9135, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3c75, gbc.sp());
        EXPECT(0x9137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9135));
        EXPECT(0xad, gbc.readMem(0x9136));
        // CB AD 024D
        gbc.setState(0x16d2, 0x2654, 0xdfe0, 0xed6, 0x84f0, 0x7a0c, 0x1, 0x1);
        gbc.writeMem(0x16d2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2654, gbc.sp());
        EXPECT(0x16d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 024E
        gbc.setState(0x1b4a, 0x45b8, 0x9f60, 0x5023, 0x692a, 0xe499, 0x0, 0x0);
        gbc.writeMem(0x1b4a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x45b8, gbc.sp());
        EXPECT(0x1b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 024F
        gbc.setState(0x8116, 0xe748, 0x2a50, 0x2349, 0x3e8b, 0xbb55, 0x1, 0x0);
        gbc.writeMem(0x8116, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe748, gbc.sp());
        EXPECT(0x8118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8116));
        EXPECT(0xad, gbc.readMem(0x8117));
        // CB AD 0250
        gbc.setState(0x1d69, 0xa9a6, 0x8270, 0x5b, 0xa5b8, 0xa3ed, 0x1, 0x0);
        gbc.writeMem(0x1d69, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa9a6, gbc.sp());
        EXPECT(0x1d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0251
        gbc.setState(0x7519, 0x3c92, 0x3450, 0xf39e, 0x667d, 0x1c5c, 0x0, 0x0);
        gbc.writeMem(0x7519, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3c92, gbc.sp());
        EXPECT(0x751b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0252
        gbc.setState(0x5d0e, 0x2b24, 0xd0d0, 0x4f66, 0xbfc3, 0x96a2, 0x1, 0x1);
        gbc.writeMem(0x5d0e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2b24, gbc.sp());
        EXPECT(0x5d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0253
        gbc.setState(0x2af0, 0x84b2, 0xb930, 0x8dbf, 0xf777, 0xd8e6, 0x0, 0x0);
        gbc.writeMem(0x2af0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x84b2, gbc.sp());
        EXPECT(0x2af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0254
        gbc.setState(0xa79d, 0xab24, 0xad0, 0x4f76, 0x2de0, 0xb8d1, 0x1, 0x0);
        gbc.writeMem(0xa79d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xab24, gbc.sp());
        EXPECT(0xa79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79d));
        EXPECT(0xad, gbc.readMem(0xa79e));
        // CB AD 0255
        gbc.setState(0x5bf2, 0x28ee, 0x65d0, 0x23ea, 0xf9e8, 0x5c7c, 0x1, 0x1);
        gbc.writeMem(0x5bf2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x28ee, gbc.sp());
        EXPECT(0x5bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0256
        gbc.setState(0x71da, 0x3fac, 0x7d30, 0xb43d, 0x1f73, 0xd40d, 0x1, 0x1);
        gbc.writeMem(0x71da, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3fac, gbc.sp());
        EXPECT(0x71dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0257
        gbc.setState(0x2cad, 0x4753, 0xb280, 0x2eff, 0x772d, 0xe626, 0x1, 0x0);
        gbc.writeMem(0x2cad, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4753, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0258
        gbc.setState(0xd43a, 0x6ff2, 0xd990, 0x7cb7, 0xde95, 0xdbf3, 0x0, 0x1);
        gbc.writeMem(0xd43a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6ff2, gbc.sp());
        EXPECT(0xd43c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43a));
        EXPECT(0xad, gbc.readMem(0xd43b));
        // CB AD 0259
        gbc.setState(0x64b, 0x9657, 0x8330, 0x62ea, 0xa227, 0x3492, 0x1, 0x1);
        gbc.writeMem(0x64b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9657, gbc.sp());
        EXPECT(0x64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 025A
        gbc.setState(0x9556, 0x36c2, 0x2da0, 0x2943, 0xf56a, 0xd473, 0x1, 0x1);
        gbc.writeMem(0x9556, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x36c2, gbc.sp());
        EXPECT(0x9558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9556));
        EXPECT(0xad, gbc.readMem(0x9557));
        // CB AD 025B
        gbc.setState(0xec5a, 0xf46b, 0xe600, 0x4884, 0xc93e, 0x70ff, 0x1, 0x0);
        gbc.writeMem(0xec5a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf46b, gbc.sp());
        EXPECT(0xec5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5a));
        EXPECT(0xad, gbc.readMem(0xec5b));
        // CB AD 025C
        gbc.setState(0x1ad5, 0x205a, 0x4860, 0xfe6e, 0x196, 0x4d94, 0x0, 0x1);
        gbc.writeMem(0x1ad5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x205a, gbc.sp());
        EXPECT(0x1ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 025D
        gbc.setState(0xe4e4, 0x22a, 0x120, 0xc759, 0x2617, 0x2757, 0x0, 0x1);
        gbc.writeMem(0xe4e4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x22a, gbc.sp());
        EXPECT(0xe4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e4));
        EXPECT(0xad, gbc.readMem(0xe4e5));
        // CB AD 025E
        gbc.setState(0x4864, 0x5bc0, 0xf8a0, 0x6997, 0x1608, 0x5a67, 0x0, 0x1);
        gbc.writeMem(0x4864, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5bc0, gbc.sp());
        EXPECT(0x4866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 025F
        gbc.setState(0xbab8, 0xa1a1, 0x5e30, 0xad43, 0xb67, 0xff11, 0x1, 0x0);
        gbc.writeMem(0xbab8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa1a1, gbc.sp());
        EXPECT(0xbaba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab8));
        EXPECT(0xad, gbc.readMem(0xbab9));
        // CB AD 0260
        gbc.setState(0x6073, 0xb0, 0xd830, 0x1c6, 0xcf35, 0x4e2e, 0x1, 0x1);
        gbc.writeMem(0x6073, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb0, gbc.sp());
        EXPECT(0x6075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0261
        gbc.setState(0x2732, 0xf885, 0x89e0, 0x63a, 0x9211, 0x96fc, 0x0, 0x0);
        gbc.writeMem(0x2732, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf885, gbc.sp());
        EXPECT(0x2734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0262
        gbc.setState(0xd080, 0xfd83, 0xf270, 0x6280, 0xeb21, 0x70c6, 0x0, 0x0);
        gbc.writeMem(0xd080, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfd83, gbc.sp());
        EXPECT(0xd082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd080));
        EXPECT(0xad, gbc.readMem(0xd081));
        // CB AD 0263
        gbc.setState(0xde8d, 0x3df7, 0x4790, 0xce4b, 0x5859, 0xecb1, 0x0, 0x1);
        gbc.writeMem(0xde8d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3df7, gbc.sp());
        EXPECT(0xde8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8d));
        EXPECT(0xad, gbc.readMem(0xde8e));
        // CB AD 0264
        gbc.setState(0x86c1, 0xd4f4, 0xffd0, 0xd31c, 0xc402, 0xa3f0, 0x0, 0x0);
        gbc.writeMem(0x86c1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd4f4, gbc.sp());
        EXPECT(0x86c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c1));
        EXPECT(0xad, gbc.readMem(0x86c2));
        // CB AD 0265
        gbc.setState(0x818f, 0x195, 0xf820, 0xd25e, 0x8c41, 0xa2c4, 0x0, 0x1);
        gbc.writeMem(0x818f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x195, gbc.sp());
        EXPECT(0x8191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818f));
        EXPECT(0xad, gbc.readMem(0x8190));
        // CB AD 0266
        gbc.setState(0x9e79, 0x80a3, 0x3b20, 0x8369, 0x580b, 0xc622, 0x1, 0x0);
        gbc.writeMem(0x9e79, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x80a3, gbc.sp());
        EXPECT(0x9e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e79));
        EXPECT(0xad, gbc.readMem(0x9e7a));
        // CB AD 0267
        gbc.setState(0x2230, 0x357d, 0x7890, 0x45e, 0xce86, 0x9599, 0x1, 0x0);
        gbc.writeMem(0x2230, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x357d, gbc.sp());
        EXPECT(0x2232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0268
        gbc.setState(0x2b0d, 0xada0, 0x3440, 0x84be, 0xb8c, 0x5bf5, 0x1, 0x1);
        gbc.writeMem(0x2b0d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xada0, gbc.sp());
        EXPECT(0x2b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0269
        gbc.setState(0xa6c0, 0x7ab8, 0x89e0, 0x3098, 0x2027, 0x2a9b, 0x1, 0x0);
        gbc.writeMem(0xa6c0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7ab8, gbc.sp());
        EXPECT(0xa6c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c0));
        EXPECT(0xad, gbc.readMem(0xa6c1));
        // CB AD 026A
        gbc.setState(0x7871, 0xa65d, 0xe490, 0x555c, 0x646, 0x3993, 0x0, 0x0);
        gbc.writeMem(0x7871, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa65d, gbc.sp());
        EXPECT(0x7873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 026B
        gbc.setState(0x1785, 0x7b21, 0x80c0, 0x2f0b, 0xa8a1, 0x38a1, 0x1, 0x0);
        gbc.writeMem(0x1785, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7b21, gbc.sp());
        EXPECT(0x1787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 026C
        gbc.setState(0xc9c5, 0x3608, 0x3ac0, 0xa3c8, 0x2a52, 0x90a0, 0x0, 0x1);
        gbc.writeMem(0xc9c5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3608, gbc.sp());
        EXPECT(0xc9c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c5));
        EXPECT(0xad, gbc.readMem(0xc9c6));
        // CB AD 026D
        gbc.setState(0x578d, 0xe0e5, 0xed10, 0xc1af, 0x19ba, 0xc4ab, 0x0, 0x0);
        gbc.writeMem(0x578d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe0e5, gbc.sp());
        EXPECT(0x578f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 026E
        gbc.setState(0x1344, 0x8a8f, 0x9650, 0xd458, 0x8d96, 0x61da, 0x0, 0x1);
        gbc.writeMem(0x1344, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8a8f, gbc.sp());
        EXPECT(0x1346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 026F
        gbc.setState(0x9df3, 0xb5e, 0x1b0, 0x6d3d, 0x3138, 0xdb1, 0x0, 0x1);
        gbc.writeMem(0x9df3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb5e, gbc.sp());
        EXPECT(0x9df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df3));
        EXPECT(0xad, gbc.readMem(0x9df4));
        // CB AD 0270
        gbc.setState(0xee6, 0x4fd6, 0x27f0, 0x6477, 0xbb7e, 0x84a8, 0x1, 0x1);
        gbc.writeMem(0xee6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4fd6, gbc.sp());
        EXPECT(0xee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0271
        gbc.setState(0x60df, 0xb1a9, 0xac0, 0x9501, 0x41f4, 0x6f39, 0x1, 0x1);
        gbc.writeMem(0x60df, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb1a9, gbc.sp());
        EXPECT(0x60e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0272
        gbc.setState(0xb1c4, 0x82e2, 0x2160, 0x5e60, 0xf599, 0xcab8, 0x1, 0x1);
        gbc.writeMem(0xb1c4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x82e2, gbc.sp());
        EXPECT(0xb1c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c4));
        EXPECT(0xad, gbc.readMem(0xb1c5));
        // CB AD 0273
        gbc.setState(0x7aa7, 0xb8b7, 0x2f50, 0x7c76, 0x8d7a, 0xccf5, 0x1, 0x1);
        gbc.writeMem(0x7aa7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb8b7, gbc.sp());
        EXPECT(0x7aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0274
        gbc.setState(0x7540, 0xf6b3, 0xefb0, 0x3ec3, 0xa2a0, 0xcf39, 0x0, 0x1);
        gbc.writeMem(0x7540, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf6b3, gbc.sp());
        EXPECT(0x7542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0275
        gbc.setState(0xde55, 0xfcec, 0x7310, 0x1380, 0xbafc, 0x9fdf, 0x0, 0x0);
        gbc.writeMem(0xde55, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfcec, gbc.sp());
        EXPECT(0xde57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde55));
        EXPECT(0xad, gbc.readMem(0xde56));
        // CB AD 0276
        gbc.setState(0x1174, 0x4c05, 0x2900, 0xdf43, 0x658a, 0xfebb, 0x1, 0x0);
        gbc.writeMem(0x1174, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4c05, gbc.sp());
        EXPECT(0x1176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0277
        gbc.setState(0x3f3a, 0xa2bb, 0x5300, 0x408d, 0xba5a, 0x70fb, 0x0, 0x1);
        gbc.writeMem(0x3f3a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa2bb, gbc.sp());
        EXPECT(0x3f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0278
        gbc.setState(0x136b, 0x73d5, 0x1a70, 0xae6, 0xed2b, 0x1fc0, 0x1, 0x1);
        gbc.writeMem(0x136b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x73d5, gbc.sp());
        EXPECT(0x136d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0279
        gbc.setState(0x83c1, 0x8250, 0xeb60, 0xf599, 0x2a39, 0x5670, 0x1, 0x1);
        gbc.writeMem(0x83c1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8250, gbc.sp());
        EXPECT(0x83c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c1));
        EXPECT(0xad, gbc.readMem(0x83c2));
        // CB AD 027B
        gbc.setState(0xb70b, 0xb66c, 0x20a0, 0xdfc2, 0x7bbe, 0x6bc0, 0x1, 0x1);
        gbc.writeMem(0xb70b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb66c, gbc.sp());
        EXPECT(0xb70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70b));
        EXPECT(0xad, gbc.readMem(0xb70c));
        // CB AD 027C
        gbc.setState(0x6203, 0xdcef, 0x1080, 0x720a, 0xddcf, 0x574f, 0x1, 0x1);
        gbc.writeMem(0x6203, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdcef, gbc.sp());
        EXPECT(0x6205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 027D
        gbc.setState(0x8421, 0xd5a0, 0xb0a0, 0x1425, 0xf2a, 0xa6a8, 0x0, 0x0);
        gbc.writeMem(0x8421, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd5a0, gbc.sp());
        EXPECT(0x8423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8421));
        EXPECT(0xad, gbc.readMem(0x8422));
        // CB AD 027E
        gbc.setState(0xb268, 0xe, 0x3c60, 0xbadb, 0x1f83, 0x947e, 0x1, 0x0);
        gbc.writeMem(0xb268, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe, gbc.sp());
        EXPECT(0xb26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb268));
        EXPECT(0xad, gbc.readMem(0xb269));
        // CB AD 027F
        gbc.setState(0x19fe, 0xc8a, 0xe650, 0xcec4, 0x829c, 0x6489, 0x1, 0x0);
        gbc.writeMem(0x19fe, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc8a, gbc.sp());
        EXPECT(0x1a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0280
        gbc.setState(0x116d, 0x839c, 0x5260, 0xcd4b, 0x6ab9, 0x9c4d, 0x0, 0x0);
        gbc.writeMem(0x116d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x839c, gbc.sp());
        EXPECT(0x116f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0281
        gbc.setState(0x445b, 0x9989, 0x8db0, 0x3580, 0x65bc, 0xb60, 0x0, 0x0);
        gbc.writeMem(0x445b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9989, gbc.sp());
        EXPECT(0x445d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0282
        gbc.setState(0x7d4, 0xfd10, 0xa320, 0xa8ca, 0xa3ef, 0xe419, 0x0, 0x1);
        gbc.writeMem(0x7d4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfd10, gbc.sp());
        EXPECT(0x7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0283
        gbc.setState(0x2d45, 0x9fe0, 0xed40, 0x8c36, 0x29e5, 0xbc2f, 0x1, 0x0);
        gbc.writeMem(0x2d45, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9fe0, gbc.sp());
        EXPECT(0x2d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0284
        gbc.setState(0xd110, 0xf9ff, 0x3490, 0xb89b, 0x6b27, 0xe6b0, 0x1, 0x1);
        gbc.writeMem(0xd110, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf9ff, gbc.sp());
        EXPECT(0xd112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd110));
        EXPECT(0xad, gbc.readMem(0xd111));
        // CB AD 0285
        gbc.setState(0xc45f, 0x59bd, 0x3220, 0xd9de, 0x2a65, 0x8751, 0x1, 0x1);
        gbc.writeMem(0xc45f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x59bd, gbc.sp());
        EXPECT(0xc461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45f));
        EXPECT(0xad, gbc.readMem(0xc460));
        // CB AD 0286
        gbc.setState(0xd2fe, 0x4d63, 0x61b0, 0xe7f0, 0x70e6, 0x997b, 0x0, 0x0);
        gbc.writeMem(0xd2fe, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4d63, gbc.sp());
        EXPECT(0xd300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2fe));
        EXPECT(0xad, gbc.readMem(0xd2ff));
        // CB AD 0287
        gbc.setState(0xd8f3, 0xe654, 0x9000, 0xfa1a, 0x2d40, 0xd1e8, 0x1, 0x1);
        gbc.writeMem(0xd8f3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe654, gbc.sp());
        EXPECT(0xd8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f3));
        EXPECT(0xad, gbc.readMem(0xd8f4));
        // CB AD 0288
        gbc.setState(0x2167, 0xf720, 0x2b10, 0xf55f, 0x209c, 0x7243, 0x1, 0x0);
        gbc.writeMem(0x2167, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf720, gbc.sp());
        EXPECT(0x2169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0289
        gbc.setState(0xb11f, 0xe7b2, 0xc7c0, 0x711d, 0x6a30, 0xd298, 0x1, 0x0);
        gbc.writeMem(0xb11f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe7b2, gbc.sp());
        EXPECT(0xb121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11f));
        EXPECT(0xad, gbc.readMem(0xb120));
        // CB AD 028A
        gbc.setState(0x5295, 0xf51d, 0xe3e0, 0x9104, 0xb2d5, 0x3f12, 0x0, 0x0);
        gbc.writeMem(0x5295, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf51d, gbc.sp());
        EXPECT(0x5297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 028B
        gbc.setState(0x70c3, 0xea69, 0xc610, 0x2142, 0x5e3a, 0x7c8c, 0x1, 0x1);
        gbc.writeMem(0x70c3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xea69, gbc.sp());
        EXPECT(0x70c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 028D
        gbc.setState(0x551b, 0x8b6d, 0xf5a0, 0x3c7f, 0xf1cb, 0x2025, 0x1, 0x0);
        gbc.writeMem(0x551b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8b6d, gbc.sp());
        EXPECT(0x551d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 028E
        gbc.setState(0x163a, 0xd915, 0xb1f0, 0xea49, 0x5ca, 0x8ca6, 0x1, 0x0);
        gbc.writeMem(0x163a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd915, gbc.sp());
        EXPECT(0x163c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 028F
        gbc.setState(0xe849, 0x3db2, 0xe7b0, 0x9f0a, 0xbedb, 0x751, 0x1, 0x1);
        gbc.writeMem(0xe849, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3db2, gbc.sp());
        EXPECT(0xe84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe849));
        EXPECT(0xad, gbc.readMem(0xe84a));
        // CB AD 0290
        gbc.setState(0x6dd1, 0xfbb0, 0xc080, 0x355b, 0x8c2b, 0xfaf2, 0x1, 0x0);
        gbc.writeMem(0x6dd1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfbb0, gbc.sp());
        EXPECT(0x6dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0291
        gbc.setState(0x95d5, 0x5667, 0x5170, 0x5f12, 0x3748, 0xbff0, 0x0, 0x1);
        gbc.writeMem(0x95d5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5667, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d5));
        EXPECT(0xad, gbc.readMem(0x95d6));
        // CB AD 0292
        gbc.setState(0x4a3, 0xa39d, 0x1ae0, 0x21a9, 0xca9f, 0xce8a, 0x0, 0x1);
        gbc.writeMem(0x4a3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa39d, gbc.sp());
        EXPECT(0x4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0293
        gbc.setState(0x37a9, 0x6ece, 0x7a10, 0xad2, 0xabcb, 0x3e5f, 0x1, 0x0);
        gbc.writeMem(0x37a9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6ece, gbc.sp());
        EXPECT(0x37ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0294
        gbc.setState(0x2b61, 0x503, 0x6b00, 0xc391, 0x2462, 0xe79a, 0x0, 0x1);
        gbc.writeMem(0x2b61, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x503, gbc.sp());
        EXPECT(0x2b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0295
        gbc.setState(0x7b01, 0xbb62, 0xa530, 0x64de, 0xcf77, 0xd0e0, 0x1, 0x1);
        gbc.writeMem(0x7b01, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbb62, gbc.sp());
        EXPECT(0x7b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0296
        gbc.setState(0x5532, 0x1ed9, 0x6aa0, 0xdc3e, 0x186b, 0xdc77, 0x0, 0x1);
        gbc.writeMem(0x5532, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1ed9, gbc.sp());
        EXPECT(0x5534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0297
        gbc.setState(0x239b, 0xbe62, 0x6060, 0xf4f9, 0x2cbe, 0xa4d0, 0x1, 0x0);
        gbc.writeMem(0x239b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbe62, gbc.sp());
        EXPECT(0x239d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0298
        gbc.setState(0xaf61, 0x729e, 0x9ca0, 0xd2a5, 0xac86, 0x7da3, 0x1, 0x0);
        gbc.writeMem(0xaf61, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x729e, gbc.sp());
        EXPECT(0xaf63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf61));
        EXPECT(0xad, gbc.readMem(0xaf62));
        // CB AD 0299
        gbc.setState(0x9612, 0xc63, 0xe1a0, 0x2598, 0x20b5, 0xa790, 0x0, 0x1);
        gbc.writeMem(0x9612, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc63, gbc.sp());
        EXPECT(0x9614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9612));
        EXPECT(0xad, gbc.readMem(0x9613));
        // CB AD 029A
        gbc.setState(0x6d41, 0x64bf, 0x3940, 0x19a6, 0x4d23, 0x293d, 0x1, 0x1);
        gbc.writeMem(0x6d41, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x64bf, gbc.sp());
        EXPECT(0x6d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 029B
        gbc.setState(0xd92, 0xecd3, 0x6530, 0x135a, 0x2e09, 0xb7d, 0x1, 0x1);
        gbc.writeMem(0xd92, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xecd3, gbc.sp());
        EXPECT(0xd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 029C
        gbc.setState(0x5164, 0x8f82, 0xcb50, 0x4943, 0x8136, 0x33ee, 0x0, 0x0);
        gbc.writeMem(0x5164, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8f82, gbc.sp());
        EXPECT(0x5166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 029D
        gbc.setState(0x7822, 0x7d5e, 0xcd50, 0xfa6, 0x91ca, 0xabde, 0x0, 0x0);
        gbc.writeMem(0x7822, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7d5e, gbc.sp());
        EXPECT(0x7824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 029E
        gbc.setState(0xbef7, 0x7621, 0x8f70, 0x2986, 0x9594, 0xd653, 0x1, 0x0);
        gbc.writeMem(0xbef7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7621, gbc.sp());
        EXPECT(0xbef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef7));
        EXPECT(0xad, gbc.readMem(0xbef8));
        // CB AD 029F
        gbc.setState(0xa291, 0x661d, 0xd0b0, 0xc134, 0x784f, 0xe730, 0x0, 0x0);
        gbc.writeMem(0xa291, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x661d, gbc.sp());
        EXPECT(0xa293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa291));
        EXPECT(0xad, gbc.readMem(0xa292));
        // CB AD 02A0
        gbc.setState(0xd784, 0x8b0, 0x8190, 0x26fa, 0x3372, 0x25d4, 0x0, 0x1);
        gbc.writeMem(0xd784, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8b0, gbc.sp());
        EXPECT(0xd786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd784));
        EXPECT(0xad, gbc.readMem(0xd785));
        // CB AD 02A1
        gbc.setState(0x4424, 0xc52f, 0x7180, 0xf9f9, 0x5eab, 0xebfa, 0x0, 0x0);
        gbc.writeMem(0x4424, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc52f, gbc.sp());
        EXPECT(0x4426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02A2
        gbc.setState(0x9554, 0x1686, 0x7a80, 0xc056, 0xd24c, 0x8392, 0x1, 0x1);
        gbc.writeMem(0x9554, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1686, gbc.sp());
        EXPECT(0x9556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9554));
        EXPECT(0xad, gbc.readMem(0x9555));
        // CB AD 02A3
        gbc.setState(0x6fff, 0x6160, 0x3360, 0xf270, 0x122, 0x28c8, 0x1, 0x0);
        gbc.writeMem(0x6fff, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6160, gbc.sp());
        EXPECT(0x7001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02A4
        gbc.setState(0xd753, 0x15d3, 0xe200, 0x1b6c, 0xc7ff, 0xda4e, 0x1, 0x1);
        gbc.writeMem(0xd753, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x15d3, gbc.sp());
        EXPECT(0xd755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd753));
        EXPECT(0xad, gbc.readMem(0xd754));
        // CB AD 02A5
        gbc.setState(0x5fdf, 0x6ee7, 0x1290, 0x7ff4, 0x6893, 0xe546, 0x0, 0x1);
        gbc.writeMem(0x5fdf, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6ee7, gbc.sp());
        EXPECT(0x5fe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02A6
        gbc.setState(0xd232, 0x1fa3, 0x1de0, 0xbf3b, 0x3f4, 0x56c6, 0x1, 0x0);
        gbc.writeMem(0xd232, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1fa3, gbc.sp());
        EXPECT(0xd234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd232));
        EXPECT(0xad, gbc.readMem(0xd233));
        // CB AD 02A7
        gbc.setState(0x1aac, 0x1456, 0x1200, 0x66e4, 0xa306, 0x9f31, 0x0, 0x0);
        gbc.writeMem(0x1aac, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1456, gbc.sp());
        EXPECT(0x1aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02A8
        gbc.setState(0x1543, 0xc96d, 0x94d0, 0xcc5c, 0x32b, 0xaa88, 0x0, 0x0);
        gbc.writeMem(0x1543, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc96d, gbc.sp());
        EXPECT(0x1545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02A9
        gbc.setState(0x96d3, 0x2fd3, 0xfea0, 0x595e, 0xb014, 0xc93d, 0x1, 0x1);
        gbc.writeMem(0x96d3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2fd3, gbc.sp());
        EXPECT(0x96d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d3));
        EXPECT(0xad, gbc.readMem(0x96d4));
        // CB AD 02AA
        gbc.setState(0x171, 0xc22b, 0xd0e0, 0x6e67, 0xb2ea, 0xaf69, 0x0, 0x0);
        gbc.writeMem(0x171, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc22b, gbc.sp());
        EXPECT(0x173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02AB
        gbc.setState(0x741f, 0x5809, 0x6e40, 0x4d75, 0xd7c5, 0x5bca, 0x1, 0x1);
        gbc.writeMem(0x741f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5809, gbc.sp());
        EXPECT(0x7421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02AC
        gbc.setState(0x1179, 0x44e5, 0xb260, 0x4901, 0x24da, 0xe967, 0x0, 0x0);
        gbc.writeMem(0x1179, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x44e5, gbc.sp());
        EXPECT(0x117b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02AD
        gbc.setState(0x2d1b, 0x29e0, 0xfc20, 0xc441, 0x908f, 0x1f89, 0x0, 0x1);
        gbc.writeMem(0x2d1b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x29e0, gbc.sp());
        EXPECT(0x2d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02AE
        gbc.setState(0xe9b9, 0xfd4b, 0x3790, 0xa08e, 0xd769, 0x6461, 0x0, 0x1);
        gbc.writeMem(0xe9b9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xfd4b, gbc.sp());
        EXPECT(0xe9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b9));
        EXPECT(0xad, gbc.readMem(0xe9ba));
        // CB AD 02AF
        gbc.setState(0x8fa5, 0xcad8, 0x9570, 0x567e, 0xd8b7, 0x4235, 0x1, 0x1);
        gbc.writeMem(0x8fa5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcad8, gbc.sp());
        EXPECT(0x8fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa5));
        EXPECT(0xad, gbc.readMem(0x8fa6));
        // CB AD 02B0
        gbc.setState(0x7592, 0x465c, 0x6a80, 0x38ba, 0xf397, 0x2587, 0x1, 0x1);
        gbc.writeMem(0x7592, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0x7594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02B1
        gbc.setState(0x9a2f, 0xeec1, 0xb1d0, 0x377e, 0x7497, 0xf663, 0x1, 0x1);
        gbc.writeMem(0x9a2f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xeec1, gbc.sp());
        EXPECT(0x9a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2f));
        EXPECT(0xad, gbc.readMem(0x9a30));
        // CB AD 02B2
        gbc.setState(0x9f4f, 0xabc6, 0xf960, 0xf4ec, 0xb15a, 0x15d4, 0x1, 0x1);
        gbc.writeMem(0x9f4f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xabc6, gbc.sp());
        EXPECT(0x9f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4f));
        EXPECT(0xad, gbc.readMem(0x9f50));
        // CB AD 02B3
        gbc.setState(0x3db5, 0x47e5, 0x9570, 0x6610, 0xbb06, 0x78d5, 0x0, 0x1);
        gbc.writeMem(0x3db5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x47e5, gbc.sp());
        EXPECT(0x3db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02B4
        gbc.setState(0xa0e, 0x55be, 0xa1f0, 0xe37e, 0x565e, 0x7a4, 0x1, 0x0);
        gbc.writeMem(0xa0e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x55be, gbc.sp());
        EXPECT(0xa10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02B7
        gbc.setState(0x7677, 0x6112, 0x56c0, 0x7594, 0x4538, 0xfb82, 0x0, 0x0);
        gbc.writeMem(0x7677, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6112, gbc.sp());
        EXPECT(0x7679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02B8
        gbc.setState(0x2e0f, 0x7deb, 0x7ae0, 0x93c7, 0x84c, 0x15d5, 0x1, 0x0);
        gbc.writeMem(0x2e0f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7deb, gbc.sp());
        EXPECT(0x2e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02B9
        gbc.setState(0xe616, 0x3980, 0x5ef0, 0x56dd, 0xf58f, 0xeb9, 0x1, 0x1);
        gbc.writeMem(0xe616, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3980, gbc.sp());
        EXPECT(0xe618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe616));
        EXPECT(0xad, gbc.readMem(0xe617));
        // CB AD 02BA
        gbc.setState(0x8a6d, 0xd961, 0x40a0, 0xab97, 0xe97e, 0x8721, 0x1, 0x1);
        gbc.writeMem(0x8a6d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd961, gbc.sp());
        EXPECT(0x8a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6d));
        EXPECT(0xad, gbc.readMem(0x8a6e));
        // CB AD 02BB
        gbc.setState(0xef99, 0x5450, 0xed70, 0x35f3, 0x7c8b, 0xcbe7, 0x0, 0x0);
        gbc.writeMem(0xef99, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5450, gbc.sp());
        EXPECT(0xef9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef99));
        EXPECT(0xad, gbc.readMem(0xef9a));
        // CB AD 02BD
        gbc.setState(0x9f0a, 0x96ec, 0xfc10, 0xea08, 0xad77, 0x3eb2, 0x0, 0x0);
        gbc.writeMem(0x9f0a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x96ec, gbc.sp());
        EXPECT(0x9f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f0a));
        EXPECT(0xad, gbc.readMem(0x9f0b));
        // CB AD 02BE
        gbc.setState(0xa6c1, 0xc7d3, 0x230, 0x9f6e, 0x4675, 0x7720, 0x1, 0x1);
        gbc.writeMem(0xa6c1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc7d3, gbc.sp());
        EXPECT(0xa6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c1));
        EXPECT(0xad, gbc.readMem(0xa6c2));
        // CB AD 02BF
        gbc.setState(0x43f2, 0xbc17, 0x2f40, 0x45d6, 0x5544, 0x8c1d, 0x0, 0x0);
        gbc.writeMem(0x43f2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbc17, gbc.sp());
        EXPECT(0x43f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02C0
        gbc.setState(0x82c, 0x15ad, 0xe560, 0x1e28, 0x106b, 0x50b1, 0x0, 0x1);
        gbc.writeMem(0x82c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x15ad, gbc.sp());
        EXPECT(0x82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02C1
        gbc.setState(0x2035, 0x95d5, 0x4280, 0x417, 0xe77c, 0xde69, 0x0, 0x0);
        gbc.writeMem(0x2035, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x95d5, gbc.sp());
        EXPECT(0x2037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02C2
        gbc.setState(0x7bcd, 0x11ca, 0xfb70, 0xf7ce, 0x72c, 0x3425, 0x1, 0x0);
        gbc.writeMem(0x7bcd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x11ca, gbc.sp());
        EXPECT(0x7bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02C3
        gbc.setState(0x58a2, 0x7a07, 0x5aa0, 0x367a, 0x7b1d, 0xc24b, 0x0, 0x0);
        gbc.writeMem(0x58a2, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7a07, gbc.sp());
        EXPECT(0x58a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02C4
        gbc.setState(0xee17, 0x32a8, 0x10c0, 0xac02, 0x2d83, 0xa1f6, 0x0, 0x1);
        gbc.writeMem(0xee17, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x32a8, gbc.sp());
        EXPECT(0xee19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee17));
        EXPECT(0xad, gbc.readMem(0xee18));
        // CB AD 02C5
        gbc.setState(0x4dd8, 0x98a1, 0x9f90, 0x30cd, 0xed6f, 0xca57, 0x1, 0x1);
        gbc.writeMem(0x4dd8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x98a1, gbc.sp());
        EXPECT(0x4dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02C6
        gbc.setState(0x6cf6, 0xacce, 0x2dd0, 0x69c, 0x7f99, 0x2898, 0x0, 0x0);
        gbc.writeMem(0x6cf6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xacce, gbc.sp());
        EXPECT(0x6cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02C8
        gbc.setState(0x7023, 0xf10d, 0xcbd0, 0xbd28, 0xed47, 0x78f4, 0x1, 0x1);
        gbc.writeMem(0x7023, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf10d, gbc.sp());
        EXPECT(0x7025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02C9
        gbc.setState(0x8339, 0xe4e2, 0x7a00, 0x424b, 0x9a86, 0x7ff5, 0x1, 0x0);
        gbc.writeMem(0x8339, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe4e2, gbc.sp());
        EXPECT(0x833b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8339));
        EXPECT(0xad, gbc.readMem(0x833a));
        // CB AD 02CA
        gbc.setState(0x9085, 0xf347, 0x840, 0x225d, 0x8273, 0x236, 0x0, 0x0);
        gbc.writeMem(0x9085, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf347, gbc.sp());
        EXPECT(0x9087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9085));
        EXPECT(0xad, gbc.readMem(0x9086));
        // CB AD 02CB
        gbc.setState(0x76dc, 0x2850, 0x7f60, 0x3493, 0x5657, 0xd15d, 0x1, 0x1);
        gbc.writeMem(0x76dc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2850, gbc.sp());
        EXPECT(0x76de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02CC
        gbc.setState(0x96b1, 0xbe78, 0x6980, 0xf28b, 0x116f, 0xf00, 0x1, 0x1);
        gbc.writeMem(0x96b1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbe78, gbc.sp());
        EXPECT(0x96b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b1));
        EXPECT(0xad, gbc.readMem(0x96b2));
        // CB AD 02CD
        gbc.setState(0xb15, 0x411e, 0x9240, 0x4d05, 0xb8ec, 0x59fd, 0x0, 0x1);
        gbc.writeMem(0xb15, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x411e, gbc.sp());
        EXPECT(0xb17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02CE
        gbc.setState(0x2b3a, 0x1766, 0x6fa0, 0x1880, 0xf96a, 0xe0c4, 0x0, 0x0);
        gbc.writeMem(0x2b3a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1766, gbc.sp());
        EXPECT(0x2b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02CF
        gbc.setState(0x1bd8, 0x544a, 0x8d80, 0xf416, 0x393c, 0x316e, 0x1, 0x1);
        gbc.writeMem(0x1bd8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x544a, gbc.sp());
        EXPECT(0x1bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02D0
        gbc.setState(0x2ef1, 0x2564, 0x2490, 0x88b3, 0x21e9, 0x1a6a, 0x0, 0x0);
        gbc.writeMem(0x2ef1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2564, gbc.sp());
        EXPECT(0x2ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02D1
        gbc.setState(0x3909, 0xb405, 0xb860, 0x6acc, 0x94e6, 0x6eef, 0x1, 0x1);
        gbc.writeMem(0x3909, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb405, gbc.sp());
        EXPECT(0x390b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02D3
        gbc.setState(0x2b67, 0xe6d6, 0xfa90, 0x3d36, 0xb016, 0xc562, 0x1, 0x0);
        gbc.writeMem(0x2b67, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe6d6, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02D4
        gbc.setState(0xb010, 0x3bff, 0x4a00, 0xe957, 0xb032, 0xdabf, 0x1, 0x1);
        gbc.writeMem(0xb010, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3bff, gbc.sp());
        EXPECT(0xb012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb010));
        EXPECT(0xad, gbc.readMem(0xb011));
        // CB AD 02D5
        gbc.setState(0x6cf4, 0xc31c, 0x28c0, 0xd517, 0xe43f, 0x89f5, 0x1, 0x0);
        gbc.writeMem(0x6cf4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc31c, gbc.sp());
        EXPECT(0x6cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02D6
        gbc.setState(0x4ec0, 0x8ad, 0xde40, 0xf8a1, 0x1710, 0x6f4f, 0x1, 0x1);
        gbc.writeMem(0x4ec0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8ad, gbc.sp());
        EXPECT(0x4ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02D7
        gbc.setState(0xd86d, 0xa7a3, 0xb0a0, 0xfa21, 0xf1d7, 0xa434, 0x0, 0x0);
        gbc.writeMem(0xd86d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa7a3, gbc.sp());
        EXPECT(0xd86f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd86d));
        EXPECT(0xad, gbc.readMem(0xd86e));
        // CB AD 02D8
        gbc.setState(0xd416, 0xc69d, 0xccf0, 0xdb4d, 0x9173, 0xea63, 0x0, 0x0);
        gbc.writeMem(0xd416, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc69d, gbc.sp());
        EXPECT(0xd418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd416));
        EXPECT(0xad, gbc.readMem(0xd417));
        // CB AD 02D9
        gbc.setState(0xc0a0, 0xef03, 0xf680, 0x5955, 0xf7b1, 0x4a54, 0x0, 0x1);
        gbc.writeMem(0xc0a0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xef03, gbc.sp());
        EXPECT(0xc0a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a0));
        EXPECT(0xad, gbc.readMem(0xc0a1));
        // CB AD 02DA
        gbc.setState(0xe895, 0xe1bf, 0x3280, 0x255d, 0x4420, 0x826c, 0x0, 0x0);
        gbc.writeMem(0xe895, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe1bf, gbc.sp());
        EXPECT(0xe897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe895));
        EXPECT(0xad, gbc.readMem(0xe896));
        // CB AD 02DB
        gbc.setState(0xa072, 0x8591, 0x4ff0, 0xfbca, 0x598e, 0xe57, 0x1, 0x0);
        gbc.writeMem(0xa072, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8591, gbc.sp());
        EXPECT(0xa074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa072));
        EXPECT(0xad, gbc.readMem(0xa073));
        // CB AD 02DC
        gbc.setState(0xc991, 0x5ade, 0xddc0, 0x5d0b, 0x1cf2, 0xadc1, 0x0, 0x1);
        gbc.writeMem(0xc991, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5ade, gbc.sp());
        EXPECT(0xc993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc991));
        EXPECT(0xad, gbc.readMem(0xc992));
        // CB AD 02DD
        gbc.setState(0x91fd, 0xa5a9, 0x8610, 0x4625, 0x909a, 0xe62f, 0x1, 0x0);
        gbc.writeMem(0x91fd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa5a9, gbc.sp());
        EXPECT(0x91ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fd));
        EXPECT(0xad, gbc.readMem(0x91fe));
        // CB AD 02DE
        gbc.setState(0xbb8e, 0x207a, 0x2aa0, 0x1e9b, 0x53d1, 0xea5a, 0x1, 0x0);
        gbc.writeMem(0xbb8e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x207a, gbc.sp());
        EXPECT(0xbb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb8e));
        EXPECT(0xad, gbc.readMem(0xbb8f));
        // CB AD 02DF
        gbc.setState(0x8e75, 0x366e, 0xdba0, 0xfa18, 0xbcb4, 0x6fd8, 0x0, 0x1);
        gbc.writeMem(0x8e75, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x366e, gbc.sp());
        EXPECT(0x8e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e75));
        EXPECT(0xad, gbc.readMem(0x8e76));
        // CB AD 02E0
        gbc.setState(0x907e, 0x6e2e, 0x7100, 0x63e3, 0xa056, 0x7e35, 0x1, 0x1);
        gbc.writeMem(0x907e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6e2e, gbc.sp());
        EXPECT(0x9080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x907e));
        EXPECT(0xad, gbc.readMem(0x907f));
        // CB AD 02E1
        gbc.setState(0x7b7d, 0xce44, 0x2810, 0x6be1, 0xc3f1, 0x5527, 0x1, 0x1);
        gbc.writeMem(0x7b7d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xce44, gbc.sp());
        EXPECT(0x7b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02E3
        gbc.setState(0xca1a, 0x8bd2, 0x6dc0, 0xc64b, 0xb6d7, 0x98f, 0x0, 0x0);
        gbc.writeMem(0xca1a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8bd2, gbc.sp());
        EXPECT(0xca1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca1a));
        EXPECT(0xad, gbc.readMem(0xca1b));
        // CB AD 02E5
        gbc.setState(0x6dc, 0x362d, 0x6320, 0x3c95, 0x82e9, 0x2f3e, 0x0, 0x1);
        gbc.writeMem(0x6dc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x362d, gbc.sp());
        EXPECT(0x6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02E6
        gbc.setState(0xa5a3, 0x8e63, 0xafa0, 0x37c5, 0x99c, 0x9ff5, 0x1, 0x0);
        gbc.writeMem(0xa5a3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8e63, gbc.sp());
        EXPECT(0xa5a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a3));
        EXPECT(0xad, gbc.readMem(0xa5a4));
        // CB AD 02E7
        gbc.setState(0xc10b, 0x7ae8, 0x3b50, 0xfeb4, 0x3af3, 0xb02, 0x1, 0x0);
        gbc.writeMem(0xc10b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7ae8, gbc.sp());
        EXPECT(0xc10d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc10b));
        EXPECT(0xad, gbc.readMem(0xc10c));
        // CB AD 02E9
        gbc.setState(0x3d2c, 0xc2d9, 0x7e60, 0x2265, 0x67e7, 0xa4b2, 0x1, 0x0);
        gbc.writeMem(0x3d2c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc2d9, gbc.sp());
        EXPECT(0x3d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02EA
        gbc.setState(0xe4d6, 0xa5c1, 0x7930, 0x5ec5, 0x47b0, 0x1d93, 0x0, 0x1);
        gbc.writeMem(0xe4d6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa5c1, gbc.sp());
        EXPECT(0xe4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d6));
        EXPECT(0xad, gbc.readMem(0xe4d7));
        // CB AD 02EB
        gbc.setState(0x1fbd, 0x39bd, 0x52a0, 0xe326, 0xba15, 0xc2a0, 0x1, 0x1);
        gbc.writeMem(0x1fbd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x39bd, gbc.sp());
        EXPECT(0x1fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02EC
        gbc.setState(0x1326, 0x7ed0, 0xfee0, 0x2ff3, 0x6ea5, 0x2b8d, 0x1, 0x0);
        gbc.writeMem(0x1326, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7ed0, gbc.sp());
        EXPECT(0x1328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02ED
        gbc.setState(0xb2ac, 0xe3a, 0x8d70, 0x809f, 0xe507, 0xa7ed, 0x1, 0x0);
        gbc.writeMem(0xb2ac, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe3a, gbc.sp());
        EXPECT(0xb2ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ac));
        EXPECT(0xad, gbc.readMem(0xb2ad));
        // CB AD 02EE
        gbc.setState(0xa83d, 0x5501, 0x5140, 0x5cd1, 0x6790, 0xd3e7, 0x1, 0x1);
        gbc.writeMem(0xa83d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5501, gbc.sp());
        EXPECT(0xa83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa83d));
        EXPECT(0xad, gbc.readMem(0xa83e));
        // CB AD 02EF
        gbc.setState(0xe826, 0x8578, 0x77f0, 0x53cb, 0xabb1, 0xc7af, 0x1, 0x0);
        gbc.writeMem(0xe826, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8578, gbc.sp());
        EXPECT(0xe828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe826));
        EXPECT(0xad, gbc.readMem(0xe827));
        // CB AD 02F0
        gbc.setState(0x8981, 0x2950, 0xea10, 0xdd08, 0xba6c, 0x700a, 0x0, 0x1);
        gbc.writeMem(0x8981, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2950, gbc.sp());
        EXPECT(0x8983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8981));
        EXPECT(0xad, gbc.readMem(0x8982));
        // CB AD 02F1
        gbc.setState(0x3ac9, 0xe209, 0x5780, 0xad0, 0x7ab5, 0x2adf, 0x1, 0x0);
        gbc.writeMem(0x3ac9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe209, gbc.sp());
        EXPECT(0x3acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 02F3
        gbc.setState(0xaf31, 0x4ff2, 0xe050, 0xb3f4, 0xdd72, 0xcfed, 0x0, 0x1);
        gbc.writeMem(0xaf31, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4ff2, gbc.sp());
        EXPECT(0xaf33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf31));
        EXPECT(0xad, gbc.readMem(0xaf32));
        // CB AD 02F4
        gbc.setState(0xa41c, 0x360a, 0x6230, 0x22c5, 0xa3e3, 0xf0aa, 0x1, 0x1);
        gbc.writeMem(0xa41c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x360a, gbc.sp());
        EXPECT(0xa41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41c));
        EXPECT(0xad, gbc.readMem(0xa41d));
        // CB AD 02F6
        gbc.setState(0x9167, 0xaf3, 0x57b0, 0x8280, 0x2882, 0xc23c, 0x1, 0x1);
        gbc.writeMem(0x9167, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaf3, gbc.sp());
        EXPECT(0x9169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9167));
        EXPECT(0xad, gbc.readMem(0x9168));
        // CB AD 02F7
        gbc.setState(0xb3d4, 0xb9e1, 0x3f50, 0x848a, 0xc044, 0xb022, 0x1, 0x1);
        gbc.writeMem(0xb3d4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb9e1, gbc.sp());
        EXPECT(0xb3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d4));
        EXPECT(0xad, gbc.readMem(0xb3d5));
        // CB AD 02F8
        gbc.setState(0xc7a6, 0xcf33, 0xbf90, 0xdff, 0xe85e, 0xe279, 0x0, 0x0);
        gbc.writeMem(0xc7a6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcf33, gbc.sp());
        EXPECT(0xc7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a6));
        EXPECT(0xad, gbc.readMem(0xc7a7));
        // CB AD 02F9
        gbc.setState(0x8d0b, 0xf440, 0xbf20, 0x6d0b, 0xd587, 0xd3ab, 0x0, 0x0);
        gbc.writeMem(0x8d0b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf440, gbc.sp());
        EXPECT(0x8d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0b));
        EXPECT(0xad, gbc.readMem(0x8d0c));
        // CB AD 02FA
        gbc.setState(0x9828, 0xb666, 0x9150, 0x4e0d, 0x84a2, 0x7995, 0x0, 0x0);
        gbc.writeMem(0x9828, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb666, gbc.sp());
        EXPECT(0x982a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9828));
        EXPECT(0xad, gbc.readMem(0x9829));
        // CB AD 02FB
        gbc.setState(0xcd39, 0x3817, 0xf70, 0xf279, 0xb60, 0xb935, 0x0, 0x0);
        gbc.writeMem(0xcd39, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3817, gbc.sp());
        EXPECT(0xcd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd39));
        EXPECT(0xad, gbc.readMem(0xcd3a));
        // CB AD 02FC
        gbc.setState(0x457e, 0x703d, 0x16f0, 0x42ae, 0xfc8a, 0x3a9d, 0x0, 0x1);
        gbc.writeMem(0x457e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x703d, gbc.sp());
        EXPECT(0x4580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02FD
        gbc.setState(0x6418, 0x8aab, 0xc150, 0x7656, 0x23aa, 0x2b76, 0x1, 0x0);
        gbc.writeMem(0x6418, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8aab, gbc.sp());
        EXPECT(0x641a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02FE
        gbc.setState(0x55ee, 0x4af3, 0x8b10, 0x2465, 0x5f16, 0x8075, 0x1, 0x0);
        gbc.writeMem(0x55ee, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4af3, gbc.sp());
        EXPECT(0x55f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 02FF
        gbc.setState(0x13cc, 0xe4c2, 0xbae0, 0x96a6, 0x8adf, 0x3825, 0x1, 0x1);
        gbc.writeMem(0x13cc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe4c2, gbc.sp());
        EXPECT(0x13ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0300
        gbc.setState(0xe2ee, 0xa952, 0xa380, 0x5055, 0xf088, 0xed90, 0x0, 0x1);
        gbc.writeMem(0xe2ee, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa952, gbc.sp());
        EXPECT(0xe2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ee));
        EXPECT(0xad, gbc.readMem(0xe2ef));
        // CB AD 0301
        gbc.setState(0x8b17, 0xfdfd, 0x94d0, 0x32dc, 0xbe8e, 0x2650, 0x1, 0x0);
        gbc.writeMem(0x8b17, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfdfd, gbc.sp());
        EXPECT(0x8b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b17));
        EXPECT(0xad, gbc.readMem(0x8b18));
        // CB AD 0302
        gbc.setState(0x8140, 0xc03c, 0xad80, 0x37d7, 0x3be3, 0x7b48, 0x1, 0x1);
        gbc.writeMem(0x8140, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc03c, gbc.sp());
        EXPECT(0x8142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8140));
        EXPECT(0xad, gbc.readMem(0x8141));
        // CB AD 0303
        gbc.setState(0x237d, 0x32c1, 0x2730, 0x6a79, 0xbfef, 0x6932, 0x1, 0x0);
        gbc.writeMem(0x237d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x32c1, gbc.sp());
        EXPECT(0x237f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0304
        gbc.setState(0x59f4, 0x2c24, 0x1af0, 0xeb2a, 0xcb2, 0x4403, 0x1, 0x1);
        gbc.writeMem(0x59f4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2c24, gbc.sp());
        EXPECT(0x59f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0306
        gbc.setState(0x74, 0x554f, 0xe700, 0x1aea, 0xacc2, 0xe6c0, 0x0, 0x1);
        gbc.writeMem(0x74, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x554f, gbc.sp());
        EXPECT(0x76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0307
        gbc.setState(0xc51a, 0xed72, 0xca80, 0x3d07, 0xa610, 0x8f7, 0x0, 0x0);
        gbc.writeMem(0xc51a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xed72, gbc.sp());
        EXPECT(0xc51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51a));
        EXPECT(0xad, gbc.readMem(0xc51b));
        // CB AD 0308
        gbc.setState(0x556c, 0x6f10, 0x9690, 0x4370, 0xfd9, 0xa6d4, 0x0, 0x1);
        gbc.writeMem(0x556c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6f10, gbc.sp());
        EXPECT(0x556e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0309
        gbc.setState(0x69f7, 0xd27c, 0x41e0, 0xbb88, 0x6672, 0x64e9, 0x1, 0x0);
        gbc.writeMem(0x69f7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd27c, gbc.sp());
        EXPECT(0x69f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 030A
        gbc.setState(0x718b, 0xb3d8, 0x7620, 0xc542, 0x32b2, 0xca8c, 0x0, 0x0);
        gbc.writeMem(0x718b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb3d8, gbc.sp());
        EXPECT(0x718d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 030B
        gbc.setState(0xcd42, 0xd9d7, 0x2a50, 0x853f, 0xaad, 0x6eee, 0x0, 0x0);
        gbc.writeMem(0xcd42, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd9d7, gbc.sp());
        EXPECT(0xcd44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd42));
        EXPECT(0xad, gbc.readMem(0xcd43));
        // CB AD 030C
        gbc.setState(0xb54f, 0xa0dc, 0x1d10, 0xd48c, 0xb4eb, 0xf577, 0x0, 0x0);
        gbc.writeMem(0xb54f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa0dc, gbc.sp());
        EXPECT(0xb551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54f));
        EXPECT(0xad, gbc.readMem(0xb550));
        // CB AD 030D
        gbc.setState(0xade4, 0x39ce, 0xbc20, 0xaa31, 0x3da1, 0xb2ea, 0x0, 0x0);
        gbc.writeMem(0xade4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x39ce, gbc.sp());
        EXPECT(0xade6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xade4));
        EXPECT(0xad, gbc.readMem(0xade5));
        // CB AD 030E
        gbc.setState(0x931a, 0xab2c, 0xd840, 0xdc2a, 0xe394, 0xad38, 0x1, 0x1);
        gbc.writeMem(0x931a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xab2c, gbc.sp());
        EXPECT(0x931c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x931a));
        EXPECT(0xad, gbc.readMem(0x931b));
        // CB AD 030F
        gbc.setState(0x150f, 0x764e, 0xa070, 0xc552, 0xbe73, 0xa17b, 0x0, 0x0);
        gbc.writeMem(0x150f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x764e, gbc.sp());
        EXPECT(0x1511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0310
        gbc.setState(0x777b, 0x1421, 0xe460, 0x186, 0x60a9, 0x82a7, 0x1, 0x0);
        gbc.writeMem(0x777b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1421, gbc.sp());
        EXPECT(0x777d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0311
        gbc.setState(0xbec9, 0xd28c, 0x23c0, 0x4961, 0x54fd, 0x8647, 0x0, 0x1);
        gbc.writeMem(0xbec9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd28c, gbc.sp());
        EXPECT(0xbecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec9));
        EXPECT(0xad, gbc.readMem(0xbeca));
        // CB AD 0312
        gbc.setState(0x8c96, 0x4eb8, 0xfa10, 0x7bf4, 0x2474, 0x7769, 0x1, 0x1);
        gbc.writeMem(0x8c96, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4eb8, gbc.sp());
        EXPECT(0x8c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c96));
        EXPECT(0xad, gbc.readMem(0x8c97));
        // CB AD 0313
        gbc.setState(0xa34a, 0xe3b9, 0x3ac0, 0x28e0, 0x3cdc, 0x8772, 0x0, 0x1);
        gbc.writeMem(0xa34a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe3b9, gbc.sp());
        EXPECT(0xa34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34a));
        EXPECT(0xad, gbc.readMem(0xa34b));
        // CB AD 0314
        gbc.setState(0xd1d1, 0x5818, 0xc810, 0x9432, 0xc7b3, 0xf1d, 0x0, 0x1);
        gbc.writeMem(0xd1d1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5818, gbc.sp());
        EXPECT(0xd1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d1));
        EXPECT(0xad, gbc.readMem(0xd1d2));
        // CB AD 0315
        gbc.setState(0x9a51, 0xe49b, 0xd370, 0xc2eb, 0x68ad, 0x6bfe, 0x0, 0x0);
        gbc.writeMem(0x9a51, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe49b, gbc.sp());
        EXPECT(0x9a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a51));
        EXPECT(0xad, gbc.readMem(0x9a52));
        // CB AD 0316
        gbc.setState(0xd952, 0xc9de, 0x62e0, 0xfe64, 0xe660, 0x3fb5, 0x0, 0x0);
        gbc.writeMem(0xd952, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc9de, gbc.sp());
        EXPECT(0xd954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd952));
        EXPECT(0xad, gbc.readMem(0xd953));
        // CB AD 0317
        gbc.setState(0x7cc4, 0x1bc9, 0xe510, 0xdfc7, 0xbc0c, 0xe510, 0x0, 0x1);
        gbc.writeMem(0x7cc4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1bc9, gbc.sp());
        EXPECT(0x7cc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0318
        gbc.setState(0x8405, 0x92d5, 0x1440, 0xff80, 0x8233, 0x65d6, 0x0, 0x1);
        gbc.writeMem(0x8405, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x92d5, gbc.sp());
        EXPECT(0x8407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8405));
        EXPECT(0xad, gbc.readMem(0x8406));
        // CB AD 0319
        gbc.setState(0x57ea, 0x3094, 0xccc0, 0xd054, 0x14f, 0x245d, 0x0, 0x1);
        gbc.writeMem(0x57ea, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3094, gbc.sp());
        EXPECT(0x57ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 031B
        gbc.setState(0xe704, 0x968e, 0x9610, 0xdc9b, 0x6119, 0x3f45, 0x1, 0x1);
        gbc.writeMem(0xe704, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x968e, gbc.sp());
        EXPECT(0xe706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe704));
        EXPECT(0xad, gbc.readMem(0xe705));
        // CB AD 031C
        gbc.setState(0x1c45, 0xf642, 0x2680, 0x93b2, 0x460, 0x1b9b, 0x1, 0x1);
        gbc.writeMem(0x1c45, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf642, gbc.sp());
        EXPECT(0x1c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 031D
        gbc.setState(0xc50c, 0xa3ae, 0x97c0, 0xcf6, 0x1911, 0xb2e7, 0x0, 0x0);
        gbc.writeMem(0xc50c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa3ae, gbc.sp());
        EXPECT(0xc50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50c));
        EXPECT(0xad, gbc.readMem(0xc50d));
        // CB AD 031E
        gbc.setState(0xe8ea, 0xc91f, 0x7ff0, 0x2c92, 0x538d, 0xe817, 0x1, 0x0);
        gbc.writeMem(0xe8ea, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc91f, gbc.sp());
        EXPECT(0xe8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ea));
        EXPECT(0xad, gbc.readMem(0xe8eb));
        // CB AD 031F
        gbc.setState(0x8fe3, 0x4934, 0x39c0, 0x9914, 0x2916, 0x6f9, 0x1, 0x0);
        gbc.writeMem(0x8fe3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4934, gbc.sp());
        EXPECT(0x8fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe3));
        EXPECT(0xad, gbc.readMem(0x8fe4));
        // CB AD 0320
        gbc.setState(0x2199, 0x17fb, 0x1c00, 0xf874, 0x95bd, 0x7a78, 0x1, 0x1);
        gbc.writeMem(0x2199, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x17fb, gbc.sp());
        EXPECT(0x219b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0321
        gbc.setState(0xa87, 0x8df9, 0x5e20, 0x6549, 0x29df, 0x5346, 0x0, 0x1);
        gbc.writeMem(0xa87, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8df9, gbc.sp());
        EXPECT(0xa89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0322
        gbc.setState(0xb17b, 0xc358, 0xde10, 0xbec1, 0x2b6a, 0x7bde, 0x1, 0x1);
        gbc.writeMem(0xb17b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc358, gbc.sp());
        EXPECT(0xb17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17b));
        EXPECT(0xad, gbc.readMem(0xb17c));
        // CB AD 0323
        gbc.setState(0x2616, 0xea74, 0xc010, 0xc026, 0xeac0, 0x69f1, 0x1, 0x1);
        gbc.writeMem(0x2616, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xea74, gbc.sp());
        EXPECT(0x2618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0324
        gbc.setState(0xbb5d, 0xf87a, 0x6e90, 0xb5d8, 0x2ad4, 0x36fe, 0x0, 0x1);
        gbc.writeMem(0xbb5d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf87a, gbc.sp());
        EXPECT(0xbb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb5d));
        EXPECT(0xad, gbc.readMem(0xbb5e));
        // CB AD 0325
        gbc.setState(0x3492, 0xe05e, 0x5700, 0x333f, 0x896, 0x3c83, 0x0, 0x0);
        gbc.writeMem(0x3492, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe05e, gbc.sp());
        EXPECT(0x3494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0326
        gbc.setState(0x15d8, 0x21b9, 0x6640, 0x6419, 0x693a, 0xc434, 0x0, 0x0);
        gbc.writeMem(0x15d8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x21b9, gbc.sp());
        EXPECT(0x15da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0327
        gbc.setState(0xe878, 0x79d7, 0xc740, 0xd086, 0x3469, 0x817f, 0x0, 0x1);
        gbc.writeMem(0xe878, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x79d7, gbc.sp());
        EXPECT(0xe87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe878));
        EXPECT(0xad, gbc.readMem(0xe879));
        // CB AD 0329
        gbc.setState(0x54a3, 0xb219, 0x82c0, 0x4152, 0xc3d7, 0xcbfe, 0x0, 0x1);
        gbc.writeMem(0x54a3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb219, gbc.sp());
        EXPECT(0x54a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 032A
        gbc.setState(0x7fc4, 0xbf55, 0x8770, 0x88a, 0x9d81, 0x97e6, 0x1, 0x0);
        gbc.writeMem(0x7fc4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbf55, gbc.sp());
        EXPECT(0x7fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 032B
        gbc.setState(0x67b, 0x236d, 0xea30, 0x4690, 0x9867, 0x6a45, 0x0, 0x1);
        gbc.writeMem(0x67b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x236d, gbc.sp());
        EXPECT(0x67d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 032C
        gbc.setState(0xa133, 0x894f, 0xfcb0, 0xdd34, 0x49b4, 0x525d, 0x0, 0x1);
        gbc.writeMem(0xa133, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x894f, gbc.sp());
        EXPECT(0xa135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa133));
        EXPECT(0xad, gbc.readMem(0xa134));
        // CB AD 032D
        gbc.setState(0x46eb, 0x6584, 0x72a0, 0xc4a2, 0x1018, 0x68df, 0x1, 0x0);
        gbc.writeMem(0x46eb, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6584, gbc.sp());
        EXPECT(0x46ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 032E
        gbc.setState(0x879a, 0x8581, 0x31a0, 0x802a, 0xe8dd, 0x6b2a, 0x0, 0x1);
        gbc.writeMem(0x879a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8581, gbc.sp());
        EXPECT(0x879c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x879a));
        EXPECT(0xad, gbc.readMem(0x879b));
        // CB AD 0330
        gbc.setState(0xe566, 0x2677, 0xb310, 0x6138, 0x5815, 0x4e25, 0x0, 0x1);
        gbc.writeMem(0xe566, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0xe568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe566));
        EXPECT(0xad, gbc.readMem(0xe567));
        // CB AD 0331
        gbc.setState(0xdcb1, 0xe59a, 0x6d20, 0xc43d, 0x44e2, 0x39eb, 0x1, 0x1);
        gbc.writeMem(0xdcb1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe59a, gbc.sp());
        EXPECT(0xdcb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcb1));
        EXPECT(0xad, gbc.readMem(0xdcb2));
        // CB AD 0332
        gbc.setState(0x3649, 0x1a1c, 0xce40, 0x445e, 0xf260, 0x64aa, 0x0, 0x0);
        gbc.writeMem(0x3649, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1a1c, gbc.sp());
        EXPECT(0x364b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0333
        gbc.setState(0x3bfd, 0x5de8, 0x6ed0, 0xb949, 0x590a, 0x7e22, 0x1, 0x0);
        gbc.writeMem(0x3bfd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5de8, gbc.sp());
        EXPECT(0x3bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0335
        gbc.setState(0xd694, 0x2c82, 0x66e0, 0x4975, 0xf4d2, 0x750b, 0x0, 0x1);
        gbc.writeMem(0xd694, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2c82, gbc.sp());
        EXPECT(0xd696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd694));
        EXPECT(0xad, gbc.readMem(0xd695));
        // CB AD 0336
        gbc.setState(0x4a65, 0xc1ac, 0x27d0, 0xdedf, 0xc9c3, 0x7616, 0x1, 0x0);
        gbc.writeMem(0x4a65, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc1ac, gbc.sp());
        EXPECT(0x4a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0337
        gbc.setState(0x861e, 0xb679, 0x430, 0x94c0, 0xd32d, 0x5818, 0x1, 0x0);
        gbc.writeMem(0x861e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb679, gbc.sp());
        EXPECT(0x8620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861e));
        EXPECT(0xad, gbc.readMem(0x861f));
        // CB AD 0338
        gbc.setState(0x5a93, 0x9fd7, 0xa090, 0x76c, 0xc2b0, 0x81f4, 0x1, 0x0);
        gbc.writeMem(0x5a93, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9fd7, gbc.sp());
        EXPECT(0x5a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0339
        gbc.setState(0x277b, 0x4620, 0x54a0, 0x7fe5, 0xc946, 0x62a4, 0x0, 0x1);
        gbc.writeMem(0x277b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4620, gbc.sp());
        EXPECT(0x277d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 033B
        gbc.setState(0xa914, 0x8351, 0xf860, 0x1653, 0xc0a1, 0x8f2e, 0x0, 0x0);
        gbc.writeMem(0xa914, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8351, gbc.sp());
        EXPECT(0xa916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa914));
        EXPECT(0xad, gbc.readMem(0xa915));
        // CB AD 033C
        gbc.setState(0x5234, 0xd290, 0x180, 0x6339, 0xb208, 0x9511, 0x0, 0x0);
        gbc.writeMem(0x5234, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd290, gbc.sp());
        EXPECT(0x5236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 033D
        gbc.setState(0xe093, 0x5dec, 0xe960, 0x1d24, 0xdeaa, 0x983f, 0x0, 0x0);
        gbc.writeMem(0xe093, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5dec, gbc.sp());
        EXPECT(0xe095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe093));
        EXPECT(0xad, gbc.readMem(0xe094));
        // CB AD 033E
        gbc.setState(0xc2c, 0xdf00, 0x80e0, 0x29d5, 0x6825, 0x7c59, 0x0, 0x0);
        gbc.writeMem(0xc2c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdf00, gbc.sp());
        EXPECT(0xc2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 033F
        gbc.setState(0xba94, 0xef9d, 0x9170, 0x6375, 0x615d, 0x7243, 0x0, 0x0);
        gbc.writeMem(0xba94, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xef9d, gbc.sp());
        EXPECT(0xba96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba94));
        EXPECT(0xad, gbc.readMem(0xba95));
        // CB AD 0340
        gbc.setState(0x7a02, 0x4e1, 0x5c20, 0x8736, 0x64fb, 0xb501, 0x0, 0x0);
        gbc.writeMem(0x7a02, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4e1, gbc.sp());
        EXPECT(0x7a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0342
        gbc.setState(0x105f, 0xd4d7, 0x19f0, 0x4f89, 0xc871, 0x207f, 0x1, 0x0);
        gbc.writeMem(0x105f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd4d7, gbc.sp());
        EXPECT(0x1061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0343
        gbc.setState(0xa53c, 0x9af4, 0x80f0, 0xebfb, 0x6784, 0x410d, 0x1, 0x0);
        gbc.writeMem(0xa53c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9af4, gbc.sp());
        EXPECT(0xa53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53c));
        EXPECT(0xad, gbc.readMem(0xa53d));
        // CB AD 0344
        gbc.setState(0x6645, 0x2b52, 0xaa80, 0xd5ea, 0x5574, 0x8896, 0x1, 0x0);
        gbc.writeMem(0x6645, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2b52, gbc.sp());
        EXPECT(0x6647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0345
        gbc.setState(0x69f8, 0x9e51, 0x8aa0, 0x2527, 0xfd81, 0xeee2, 0x1, 0x0);
        gbc.writeMem(0x69f8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9e51, gbc.sp());
        EXPECT(0x69fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0346
        gbc.setState(0x6cb3, 0xb286, 0xc120, 0x4230, 0xfbf7, 0x1713, 0x0, 0x0);
        gbc.writeMem(0x6cb3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb286, gbc.sp());
        EXPECT(0x6cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0347
        gbc.setState(0x2cc9, 0x86a3, 0x1b20, 0x57eb, 0xcc2a, 0x3791, 0x1, 0x0);
        gbc.writeMem(0x2cc9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x86a3, gbc.sp());
        EXPECT(0x2ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0348
        gbc.setState(0x104f, 0x7c08, 0x6f70, 0x326f, 0x6826, 0x8e7, 0x0, 0x0);
        gbc.writeMem(0x104f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7c08, gbc.sp());
        EXPECT(0x1051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0349
        gbc.setState(0x1745, 0xf004, 0x2480, 0x6caa, 0xc804, 0x4567, 0x0, 0x0);
        gbc.writeMem(0x1745, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf004, gbc.sp());
        EXPECT(0x1747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 034A
        gbc.setState(0x98ee, 0xa9b0, 0xf850, 0x7aac, 0x2e5f, 0x3f18, 0x0, 0x0);
        gbc.writeMem(0x98ee, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa9b0, gbc.sp());
        EXPECT(0x98f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ee));
        EXPECT(0xad, gbc.readMem(0x98ef));
        // CB AD 034B
        gbc.setState(0x59e6, 0x2f6, 0x9310, 0xf738, 0x7286, 0x9aaa, 0x1, 0x0);
        gbc.writeMem(0x59e6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2f6, gbc.sp());
        EXPECT(0x59e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 034C
        gbc.setState(0x2337, 0x5838, 0x62d0, 0x1f97, 0xbb87, 0x4de6, 0x1, 0x0);
        gbc.writeMem(0x2337, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5838, gbc.sp());
        EXPECT(0x2339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 034D
        gbc.setState(0x2061, 0x1652, 0x4490, 0xeb45, 0xf307, 0xe52d, 0x1, 0x1);
        gbc.writeMem(0x2061, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1652, gbc.sp());
        EXPECT(0x2063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 034E
        gbc.setState(0xa8e7, 0x3567, 0x1bc0, 0xaa5, 0x7c1, 0xe555, 0x1, 0x1);
        gbc.writeMem(0xa8e7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3567, gbc.sp());
        EXPECT(0xa8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e7));
        EXPECT(0xad, gbc.readMem(0xa8e8));
        // CB AD 034F
        gbc.setState(0xbd2a, 0x6b3, 0x8300, 0x9107, 0xb9f7, 0x2204, 0x0, 0x0);
        gbc.writeMem(0xbd2a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6b3, gbc.sp());
        EXPECT(0xbd2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2a));
        EXPECT(0xad, gbc.readMem(0xbd2b));
        // CB AD 0350
        gbc.setState(0x8347, 0x1553, 0x88b0, 0x4e3f, 0x1052, 0xa26e, 0x0, 0x1);
        gbc.writeMem(0x8347, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1553, gbc.sp());
        EXPECT(0x8349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8347));
        EXPECT(0xad, gbc.readMem(0x8348));
        // CB AD 0351
        gbc.setState(0xd6ac, 0xaee2, 0x9d10, 0x1a00, 0xe460, 0x47b5, 0x0, 0x1);
        gbc.writeMem(0xd6ac, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xaee2, gbc.sp());
        EXPECT(0xd6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ac));
        EXPECT(0xad, gbc.readMem(0xd6ad));
        // CB AD 0352
        gbc.setState(0x866a, 0xc98d, 0xb4b0, 0xd005, 0x628e, 0x6bbe, 0x0, 0x1);
        gbc.writeMem(0x866a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc98d, gbc.sp());
        EXPECT(0x866c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x866a));
        EXPECT(0xad, gbc.readMem(0x866b));
        // CB AD 0353
        gbc.setState(0x2d22, 0x4867, 0xae10, 0x8eba, 0x2a95, 0xb59b, 0x1, 0x0);
        gbc.writeMem(0x2d22, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4867, gbc.sp());
        EXPECT(0x2d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0354
        gbc.setState(0x6dcb, 0x9829, 0x8120, 0x3f94, 0xdc09, 0x69b1, 0x1, 0x1);
        gbc.writeMem(0x6dcb, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9829, gbc.sp());
        EXPECT(0x6dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0355
        gbc.setState(0xc78d, 0xe139, 0xcec0, 0xa7f4, 0xfbbe, 0x74f5, 0x1, 0x0);
        gbc.writeMem(0xc78d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe139, gbc.sp());
        EXPECT(0xc78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78d));
        EXPECT(0xad, gbc.readMem(0xc78e));
        // CB AD 0356
        gbc.setState(0xc508, 0x3db9, 0x7cf0, 0x7511, 0x5045, 0x22f9, 0x1, 0x1);
        gbc.writeMem(0xc508, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3db9, gbc.sp());
        EXPECT(0xc50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc508));
        EXPECT(0xad, gbc.readMem(0xc509));
        // CB AD 0357
        gbc.setState(0xa573, 0xd9c0, 0x3e10, 0x6fd3, 0xfa43, 0x930a, 0x1, 0x1);
        gbc.writeMem(0xa573, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd9c0, gbc.sp());
        EXPECT(0xa575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa573));
        EXPECT(0xad, gbc.readMem(0xa574));
        // CB AD 0359
        gbc.setState(0x23ec, 0x2787, 0x5520, 0xa2a1, 0x65fa, 0x5ad9, 0x0, 0x1);
        gbc.writeMem(0x23ec, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2787, gbc.sp());
        EXPECT(0x23ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 035A
        gbc.setState(0xb2d4, 0xc34b, 0xd3e0, 0xff9a, 0x1348, 0x6654, 0x1, 0x0);
        gbc.writeMem(0xb2d4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc34b, gbc.sp());
        EXPECT(0xb2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d4));
        EXPECT(0xad, gbc.readMem(0xb2d5));
        // CB AD 035B
        gbc.setState(0x5b54, 0xd2fb, 0x8710, 0x2127, 0xb299, 0xd305, 0x1, 0x0);
        gbc.writeMem(0x5b54, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd2fb, gbc.sp());
        EXPECT(0x5b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 035C
        gbc.setState(0x68b4, 0xa11f, 0x1a30, 0xd526, 0x2db8, 0x89f9, 0x0, 0x0);
        gbc.writeMem(0x68b4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa11f, gbc.sp());
        EXPECT(0x68b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 035D
        gbc.setState(0x5567, 0x749f, 0x2010, 0xd2b9, 0x6f1b, 0x1068, 0x1, 0x0);
        gbc.writeMem(0x5567, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x749f, gbc.sp());
        EXPECT(0x5569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 035E
        gbc.setState(0x2cbc, 0xb457, 0x5a00, 0xf4de, 0x767c, 0xbc47, 0x1, 0x0);
        gbc.writeMem(0x2cbc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb457, gbc.sp());
        EXPECT(0x2cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 035F
        gbc.setState(0xdb34, 0x8cbb, 0xaf10, 0xd3be, 0x8319, 0x632b, 0x1, 0x0);
        gbc.writeMem(0xdb34, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8cbb, gbc.sp());
        EXPECT(0xdb36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb34));
        EXPECT(0xad, gbc.readMem(0xdb35));
        // CB AD 0360
        gbc.setState(0xdd04, 0x98bb, 0x8760, 0x2351, 0x2af, 0xd12e, 0x1, 0x1);
        gbc.writeMem(0xdd04, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x98bb, gbc.sp());
        EXPECT(0xdd06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd04));
        EXPECT(0xad, gbc.readMem(0xdd05));
        // CB AD 0361
        gbc.setState(0x4266, 0x1e26, 0xf9e0, 0xd13b, 0x24f4, 0xd457, 0x0, 0x1);
        gbc.writeMem(0x4266, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1e26, gbc.sp());
        EXPECT(0x4268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0362
        gbc.setState(0x87e5, 0x4002, 0xd60, 0x3ed5, 0x8bb8, 0x288a, 0x1, 0x0);
        gbc.writeMem(0x87e5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4002, gbc.sp());
        EXPECT(0x87e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e5));
        EXPECT(0xad, gbc.readMem(0x87e6));
        // CB AD 0363
        gbc.setState(0x14d4, 0x9d95, 0xd220, 0x4720, 0xdffa, 0x78e5, 0x0, 0x1);
        gbc.writeMem(0x14d4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9d95, gbc.sp());
        EXPECT(0x14d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0364
        gbc.setState(0x2328, 0xcd46, 0xc1f0, 0x1abb, 0x92da, 0x4bf3, 0x0, 0x1);
        gbc.writeMem(0x2328, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcd46, gbc.sp());
        EXPECT(0x232a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0365
        gbc.setState(0xdf79, 0x5a75, 0x8f70, 0xe3e3, 0x44d4, 0x94ea, 0x0, 0x0);
        gbc.writeMem(0xdf79, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5a75, gbc.sp());
        EXPECT(0xdf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf79));
        EXPECT(0xad, gbc.readMem(0xdf7a));
        // CB AD 0366
        gbc.setState(0xcdaa, 0xf76a, 0x2750, 0x4c31, 0x25bb, 0xfe23, 0x1, 0x1);
        gbc.writeMem(0xcdaa, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf76a, gbc.sp());
        EXPECT(0xcdac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdaa));
        EXPECT(0xad, gbc.readMem(0xcdab));
        // CB AD 0367
        gbc.setState(0x8b35, 0xa3c9, 0x80d0, 0x6efd, 0x632b, 0xc6f, 0x0, 0x1);
        gbc.writeMem(0x8b35, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa3c9, gbc.sp());
        EXPECT(0x8b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b35));
        EXPECT(0xad, gbc.readMem(0x8b36));
        // CB AD 0369
        gbc.setState(0x90e5, 0x42a5, 0x620, 0xec68, 0xd24f, 0xd43e, 0x0, 0x1);
        gbc.writeMem(0x90e5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x42a5, gbc.sp());
        EXPECT(0x90e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e5));
        EXPECT(0xad, gbc.readMem(0x90e6));
        // CB AD 036A
        gbc.setState(0x876, 0x4125, 0x1340, 0x5db7, 0x217c, 0x1f11, 0x0, 0x1);
        gbc.writeMem(0x876, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4125, gbc.sp());
        EXPECT(0x878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 036B
        gbc.setState(0xa09, 0x200d, 0x6250, 0x433e, 0xe684, 0x1c49, 0x1, 0x1);
        gbc.writeMem(0xa09, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x200d, gbc.sp());
        EXPECT(0xa0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 036C
        gbc.setState(0x5f8f, 0xf24f, 0xdde0, 0xe2e0, 0xa8f2, 0x61be, 0x1, 0x1);
        gbc.writeMem(0x5f8f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf24f, gbc.sp());
        EXPECT(0x5f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 036E
        gbc.setState(0xa2f7, 0x211, 0xcbc0, 0xaa20, 0xf664, 0xa1f8, 0x0, 0x1);
        gbc.writeMem(0xa2f7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x211, gbc.sp());
        EXPECT(0xa2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2f7));
        EXPECT(0xad, gbc.readMem(0xa2f8));
        // CB AD 036F
        gbc.setState(0x76f0, 0x7bf8, 0x8080, 0xe4a1, 0xb9ed, 0x1652, 0x1, 0x1);
        gbc.writeMem(0x76f0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7bf8, gbc.sp());
        EXPECT(0x76f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0370
        gbc.setState(0x8ee5, 0x5307, 0xde90, 0x4874, 0x2c62, 0xed65, 0x1, 0x1);
        gbc.writeMem(0x8ee5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5307, gbc.sp());
        EXPECT(0x8ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee5));
        EXPECT(0xad, gbc.readMem(0x8ee6));
        // CB AD 0371
        gbc.setState(0x531a, 0x9473, 0x8b80, 0x6685, 0x82dc, 0xa82c, 0x0, 0x1);
        gbc.writeMem(0x531a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9473, gbc.sp());
        EXPECT(0x531c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0372
        gbc.setState(0xd0e3, 0xa40d, 0x1930, 0xe995, 0x93ab, 0x6b8f, 0x1, 0x1);
        gbc.writeMem(0xd0e3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa40d, gbc.sp());
        EXPECT(0xd0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e3));
        EXPECT(0xad, gbc.readMem(0xd0e4));
        // CB AD 0373
        gbc.setState(0x4fce, 0x5a44, 0xbe20, 0xab5e, 0xd44c, 0xebc3, 0x0, 0x1);
        gbc.writeMem(0x4fce, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5a44, gbc.sp());
        EXPECT(0x4fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0374
        gbc.setState(0xe30f, 0xe190, 0x7260, 0x8969, 0xa8f0, 0x66e3, 0x1, 0x0);
        gbc.writeMem(0xe30f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0xe311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe30f));
        EXPECT(0xad, gbc.readMem(0xe310));
        // CB AD 0375
        gbc.setState(0x64fc, 0xfb66, 0x8c00, 0xcfbd, 0x4c5a, 0xcee6, 0x1, 0x0);
        gbc.writeMem(0x64fc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfb66, gbc.sp());
        EXPECT(0x64fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0376
        gbc.setState(0x5af1, 0x53e1, 0x5460, 0xd183, 0x26ea, 0x6977, 0x0, 0x1);
        gbc.writeMem(0x5af1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x53e1, gbc.sp());
        EXPECT(0x5af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0377
        gbc.setState(0xd663, 0x1955, 0xb9b0, 0xba3a, 0xa168, 0xd9aa, 0x1, 0x0);
        gbc.writeMem(0xd663, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1955, gbc.sp());
        EXPECT(0xd665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd663));
        EXPECT(0xad, gbc.readMem(0xd664));
        // CB AD 0378
        gbc.setState(0xad13, 0x78ad, 0x4710, 0xc003, 0xae7a, 0xfb56, 0x1, 0x1);
        gbc.writeMem(0xad13, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x78ad, gbc.sp());
        EXPECT(0xad15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad13));
        EXPECT(0xad, gbc.readMem(0xad14));
        // CB AD 0379
        gbc.setState(0xb8c4, 0x516d, 0x7b70, 0x8767, 0x3e64, 0xc54e, 0x0, 0x1);
        gbc.writeMem(0xb8c4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x516d, gbc.sp());
        EXPECT(0xb8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c4));
        EXPECT(0xad, gbc.readMem(0xb8c5));
        // CB AD 037A
        gbc.setState(0x597e, 0x11c4, 0xc550, 0x256a, 0xfa87, 0x192f, 0x0, 0x0);
        gbc.writeMem(0x597e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x11c4, gbc.sp());
        EXPECT(0x5980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 037B
        gbc.setState(0xe400, 0x379e, 0x6740, 0x878a, 0xbeed, 0xd0ea, 0x1, 0x0);
        gbc.writeMem(0xe400, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x379e, gbc.sp());
        EXPECT(0xe402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe400));
        EXPECT(0xad, gbc.readMem(0xe401));
        // CB AD 037C
        gbc.setState(0x5a1d, 0x9d39, 0xeb80, 0x43dd, 0xb5f9, 0xfc86, 0x0, 0x1);
        gbc.writeMem(0x5a1d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9d39, gbc.sp());
        EXPECT(0x5a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 037E
        gbc.setState(0x6734, 0xca97, 0x6be0, 0x92b5, 0x7678, 0x6c19, 0x1, 0x1);
        gbc.writeMem(0x6734, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xca97, gbc.sp());
        EXPECT(0x6736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 037F
        gbc.setState(0x9a82, 0x9ff6, 0x6400, 0x437, 0xfbcf, 0x87d, 0x1, 0x1);
        gbc.writeMem(0x9a82, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9ff6, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a82));
        EXPECT(0xad, gbc.readMem(0x9a83));
        // CB AD 0380
        gbc.setState(0x410f, 0x9ded, 0x1e90, 0x99d8, 0xd395, 0x37ef, 0x1, 0x0);
        gbc.writeMem(0x410f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9ded, gbc.sp());
        EXPECT(0x4111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0381
        gbc.setState(0x2e, 0xd1a3, 0x6ea0, 0x5888, 0x841c, 0x85d3, 0x1, 0x0);
        gbc.writeMem(0x2e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd1a3, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0382
        gbc.setState(0x6746, 0x533a, 0x3400, 0xe832, 0x1d31, 0xc91, 0x1, 0x0);
        gbc.writeMem(0x6746, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x533a, gbc.sp());
        EXPECT(0x6748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0383
        gbc.setState(0xe6e5, 0x344b, 0x93b0, 0xdf5e, 0xc1f3, 0xe14, 0x1, 0x0);
        gbc.writeMem(0xe6e5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x344b, gbc.sp());
        EXPECT(0xe6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e5));
        EXPECT(0xad, gbc.readMem(0xe6e6));
        // CB AD 0384
        gbc.setState(0x4204, 0x8ba3, 0x8aa0, 0xa022, 0xbe04, 0x2c2a, 0x1, 0x0);
        gbc.writeMem(0x4204, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8ba3, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0385
        gbc.setState(0x4f45, 0x50bc, 0xa0b0, 0x83aa, 0x2734, 0x131f, 0x1, 0x0);
        gbc.writeMem(0x4f45, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x50bc, gbc.sp());
        EXPECT(0x4f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0386
        gbc.setState(0x8210, 0xca6d, 0x6fc0, 0x6989, 0x1dc8, 0x763d, 0x1, 0x0);
        gbc.writeMem(0x8210, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xca6d, gbc.sp());
        EXPECT(0x8212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8210));
        EXPECT(0xad, gbc.readMem(0x8211));
        // CB AD 0387
        gbc.setState(0x5d0c, 0xe0d9, 0x19e0, 0xfde1, 0x9ec0, 0x9e50, 0x0, 0x1);
        gbc.writeMem(0x5d0c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe0d9, gbc.sp());
        EXPECT(0x5d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0388
        gbc.setState(0x1c3f, 0xea1f, 0x570, 0xdadc, 0xae3b, 0xcd55, 0x0, 0x1);
        gbc.writeMem(0x1c3f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xea1f, gbc.sp());
        EXPECT(0x1c41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0389
        gbc.setState(0x6657, 0x8992, 0xb5e0, 0xa95b, 0x939d, 0x8109, 0x1, 0x1);
        gbc.writeMem(0x6657, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8992, gbc.sp());
        EXPECT(0x6659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 038A
        gbc.setState(0x443e, 0xb2dc, 0xcfd0, 0x98d4, 0x4ed7, 0x4b5f, 0x0, 0x0);
        gbc.writeMem(0x443e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb2dc, gbc.sp());
        EXPECT(0x4440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 038B
        gbc.setState(0xe982, 0xc82c, 0xc880, 0x8b14, 0xd254, 0xd3d4, 0x0, 0x0);
        gbc.writeMem(0xe982, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc82c, gbc.sp());
        EXPECT(0xe984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe982));
        EXPECT(0xad, gbc.readMem(0xe983));
        // CB AD 038C
        gbc.setState(0x6042, 0x17f1, 0x2f00, 0x7789, 0x7acf, 0x5b60, 0x1, 0x0);
        gbc.writeMem(0x6042, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x17f1, gbc.sp());
        EXPECT(0x6044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 038D
        gbc.setState(0x1186, 0x80ae, 0xd390, 0x98d3, 0x973e, 0xbaa3, 0x0, 0x1);
        gbc.writeMem(0x1186, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x80ae, gbc.sp());
        EXPECT(0x1188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 038E
        gbc.setState(0x52b7, 0x8c05, 0x67d0, 0x469e, 0x3334, 0xee24, 0x0, 0x1);
        gbc.writeMem(0x52b7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8c05, gbc.sp());
        EXPECT(0x52b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 038F
        gbc.setState(0x6ad6, 0x24a5, 0x9410, 0x9494, 0x46a1, 0xe7c7, 0x1, 0x0);
        gbc.writeMem(0x6ad6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x24a5, gbc.sp());
        EXPECT(0x6ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0390
        gbc.setState(0xe6b, 0x1bc7, 0x7080, 0x6814, 0x21c0, 0x363b, 0x0, 0x1);
        gbc.writeMem(0xe6b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1bc7, gbc.sp());
        EXPECT(0xe6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0391
        gbc.setState(0x84c5, 0xa88, 0x3040, 0x9ff7, 0xc05, 0x13a1, 0x1, 0x1);
        gbc.writeMem(0x84c5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa88, gbc.sp());
        EXPECT(0x84c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c5));
        EXPECT(0xad, gbc.readMem(0x84c6));
        // CB AD 0392
        gbc.setState(0x2212, 0x4a41, 0x8e40, 0x7fca, 0xb5b2, 0xcdcb, 0x1, 0x0);
        gbc.writeMem(0x2212, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4a41, gbc.sp());
        EXPECT(0x2214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0393
        gbc.setState(0x4369, 0x9eaf, 0x6f90, 0x312d, 0x2e5a, 0x8073, 0x1, 0x0);
        gbc.writeMem(0x4369, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9eaf, gbc.sp());
        EXPECT(0x436b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 0394
        gbc.setState(0xc311, 0x9a4a, 0xeb10, 0x58c6, 0xbd7a, 0x44ff, 0x0, 0x1);
        gbc.writeMem(0xc311, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9a4a, gbc.sp());
        EXPECT(0xc313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc311));
        EXPECT(0xad, gbc.readMem(0xc312));
        // CB AD 0395
        gbc.setState(0x2b0c, 0x2103, 0x1ae0, 0x7cdf, 0x1f25, 0x7463, 0x0, 0x0);
        gbc.writeMem(0x2b0c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2103, gbc.sp());
        EXPECT(0x2b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0396
        gbc.setState(0x6822, 0xb1b2, 0x4ba0, 0x127c, 0xc843, 0x901f, 0x0, 0x0);
        gbc.writeMem(0x6822, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb1b2, gbc.sp());
        EXPECT(0x6824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0397
        gbc.setState(0xda5, 0xf0aa, 0x7da0, 0x451e, 0x6500, 0xb49d, 0x0, 0x1);
        gbc.writeMem(0xda5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf0aa, gbc.sp());
        EXPECT(0xda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0398
        gbc.setState(0x5b40, 0x15d2, 0xa0e0, 0x430, 0xe6f2, 0x9cfd, 0x1, 0x0);
        gbc.writeMem(0x5b40, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x15d2, gbc.sp());
        EXPECT(0x5b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 0399
        gbc.setState(0x3dc6, 0xf3c2, 0xf630, 0x5971, 0x56e7, 0x95f0, 0x0, 0x0);
        gbc.writeMem(0x3dc6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf3c2, gbc.sp());
        EXPECT(0x3dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 039A
        gbc.setState(0x2838, 0xe914, 0x3130, 0x8644, 0x3753, 0xa13c, 0x0, 0x0);
        gbc.writeMem(0x2838, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe914, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 039B
        gbc.setState(0x76f5, 0x127, 0xb290, 0x65b2, 0xc39a, 0x2eaa, 0x1, 0x1);
        gbc.writeMem(0x76f5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x127, gbc.sp());
        EXPECT(0x76f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 039C
        gbc.setState(0x639c, 0x66a2, 0xfb80, 0xf0aa, 0x56bf, 0xd909, 0x1, 0x1);
        gbc.writeMem(0x639c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x66a2, gbc.sp());
        EXPECT(0x639e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 039D
        gbc.setState(0x5c39, 0xe91f, 0xa250, 0x7175, 0x178, 0xd3a4, 0x0, 0x0);
        gbc.writeMem(0x5c39, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe91f, gbc.sp());
        EXPECT(0x5c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 039E
        gbc.setState(0x52bc, 0xe939, 0x8c70, 0x4762, 0xf294, 0xd152, 0x0, 0x0);
        gbc.writeMem(0x52bc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe939, gbc.sp());
        EXPECT(0x52be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 039F
        gbc.setState(0x78d, 0x1da3, 0xdd30, 0xaa8a, 0xdd30, 0xe5e9, 0x1, 0x1);
        gbc.writeMem(0x78d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1da3, gbc.sp());
        EXPECT(0x78f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03A0
        gbc.setState(0x3542, 0xc309, 0x1620, 0xcc45, 0x5888, 0x16ce, 0x0, 0x0);
        gbc.writeMem(0x3542, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc309, gbc.sp());
        EXPECT(0x3544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03A1
        gbc.setState(0x517e, 0x51b7, 0x95a0, 0x2dd9, 0x626c, 0x7f2f, 0x0, 0x0);
        gbc.writeMem(0x517e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x51b7, gbc.sp());
        EXPECT(0x5180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03A2
        gbc.setState(0x4ce, 0x5de3, 0x6cb0, 0x36b6, 0xb872, 0x454a, 0x0, 0x0);
        gbc.writeMem(0x4ce, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5de3, gbc.sp());
        EXPECT(0x4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03A3
        gbc.setState(0xc262, 0x1232, 0x99f0, 0x652f, 0x6742, 0x7d15, 0x1, 0x1);
        gbc.writeMem(0xc262, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1232, gbc.sp());
        EXPECT(0xc264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc262));
        EXPECT(0xad, gbc.readMem(0xc263));
        // CB AD 03A4
        gbc.setState(0x50ec, 0xc9e1, 0x2e00, 0x36f, 0x8645, 0xde89, 0x1, 0x0);
        gbc.writeMem(0x50ec, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc9e1, gbc.sp());
        EXPECT(0x50ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03A5
        gbc.setState(0xcbc4, 0xea94, 0x4280, 0x6a4d, 0xed12, 0xa1a8, 0x0, 0x1);
        gbc.writeMem(0xcbc4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xea94, gbc.sp());
        EXPECT(0xcbc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc4));
        EXPECT(0xad, gbc.readMem(0xcbc5));
        // CB AD 03A7
        gbc.setState(0x22e, 0xb5e5, 0xeca0, 0x8add, 0xc97, 0x798e, 0x1, 0x1);
        gbc.writeMem(0x22e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb5e5, gbc.sp());
        EXPECT(0x230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03A8
        gbc.setState(0xb68, 0x41ed, 0xbec0, 0x5e74, 0x13e0, 0x8d03, 0x0, 0x1);
        gbc.writeMem(0xb68, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x41ed, gbc.sp());
        EXPECT(0xb6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03A9
        gbc.setState(0xd61d, 0x5cac, 0xecb0, 0x9507, 0x3515, 0x3767, 0x0, 0x0);
        gbc.writeMem(0xd61d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5cac, gbc.sp());
        EXPECT(0xd61f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61d));
        EXPECT(0xad, gbc.readMem(0xd61e));
        // CB AD 03AA
        gbc.setState(0xe2af, 0x262f, 0x1470, 0x1e61, 0x35d4, 0xcc0a, 0x0, 0x0);
        gbc.writeMem(0xe2af, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x262f, gbc.sp());
        EXPECT(0xe2b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2af));
        EXPECT(0xad, gbc.readMem(0xe2b0));
        // CB AD 03AB
        gbc.setState(0xea25, 0xed9d, 0x2c0, 0xed47, 0xf8f6, 0x89d9, 0x1, 0x1);
        gbc.writeMem(0xea25, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xed9d, gbc.sp());
        EXPECT(0xea27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea25));
        EXPECT(0xad, gbc.readMem(0xea26));
        // CB AD 03AC
        gbc.setState(0x3b8e, 0x8f7e, 0x7f40, 0xcf7d, 0x80bd, 0x9b8f, 0x1, 0x0);
        gbc.writeMem(0x3b8e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8f7e, gbc.sp());
        EXPECT(0x3b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03AD
        gbc.setState(0xdaf1, 0xcff3, 0x7e60, 0x53bc, 0xcf1f, 0xec12, 0x1, 0x1);
        gbc.writeMem(0xdaf1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcff3, gbc.sp());
        EXPECT(0xdaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf1));
        EXPECT(0xad, gbc.readMem(0xdaf2));
        // CB AD 03AE
        gbc.setState(0x3e6f, 0x6756, 0x6160, 0xef28, 0xfa9b, 0x6f45, 0x1, 0x0);
        gbc.writeMem(0x3e6f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6756, gbc.sp());
        EXPECT(0x3e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03AF
        gbc.setState(0x6621, 0x7872, 0xf4c0, 0x5c10, 0xe136, 0x99ad, 0x0, 0x0);
        gbc.writeMem(0x6621, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7872, gbc.sp());
        EXPECT(0x6623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03B0
        gbc.setState(0x6300, 0x2116, 0x87d0, 0xdfe6, 0x9983, 0x2655, 0x0, 0x0);
        gbc.writeMem(0x6300, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2116, gbc.sp());
        EXPECT(0x6302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03B1
        gbc.setState(0x4f73, 0x1466, 0xb6d0, 0x59de, 0x296, 0x4a2c, 0x0, 0x1);
        gbc.writeMem(0x4f73, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1466, gbc.sp());
        EXPECT(0x4f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03B2
        gbc.setState(0xa674, 0x22d, 0xa920, 0x65a, 0xe6d3, 0x3103, 0x0, 0x0);
        gbc.writeMem(0xa674, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x22d, gbc.sp());
        EXPECT(0xa676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa674));
        EXPECT(0xad, gbc.readMem(0xa675));
        // CB AD 03B3
        gbc.setState(0x640d, 0xe28d, 0xe890, 0x9eb4, 0x3773, 0xe7fc, 0x1, 0x1);
        gbc.writeMem(0x640d, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe28d, gbc.sp());
        EXPECT(0x640f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03B5
        gbc.setState(0x49fc, 0xb57b, 0x5c20, 0xe2d6, 0x5c54, 0xc67e, 0x1, 0x0);
        gbc.writeMem(0x49fc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb57b, gbc.sp());
        EXPECT(0x49fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03B7
        gbc.setState(0xdacc, 0x2475, 0xcbd0, 0x2e2e, 0x4972, 0x49ac, 0x0, 0x0);
        gbc.writeMem(0xdacc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2475, gbc.sp());
        EXPECT(0xdace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdacc));
        EXPECT(0xad, gbc.readMem(0xdacd));
        // CB AD 03B8
        gbc.setState(0x96d6, 0x1366, 0x1be0, 0xced0, 0xca1, 0xf9d7, 0x0, 0x0);
        gbc.writeMem(0x96d6, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1366, gbc.sp());
        EXPECT(0x96d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d6));
        EXPECT(0xad, gbc.readMem(0x96d7));
        // CB AD 03B9
        gbc.setState(0x7258, 0xb6a4, 0xac60, 0xc72e, 0x4739, 0xde5a, 0x1, 0x0);
        gbc.writeMem(0x7258, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb6a4, gbc.sp());
        EXPECT(0x725a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03BA
        gbc.setState(0x3bf, 0x3d9b, 0x9da0, 0xde7e, 0x6a65, 0x5e26, 0x1, 0x1);
        gbc.writeMem(0x3bf, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3d9b, gbc.sp());
        EXPECT(0x3c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03BB
        gbc.setState(0x3217, 0xb664, 0x2730, 0xe684, 0xc610, 0xb79b, 0x1, 0x0);
        gbc.writeMem(0x3217, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb664, gbc.sp());
        EXPECT(0x3219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03BC
        gbc.setState(0xba0f, 0x279d, 0x7f40, 0x3152, 0x807b, 0x8b25, 0x1, 0x0);
        gbc.writeMem(0xba0f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x279d, gbc.sp());
        EXPECT(0xba11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0f));
        EXPECT(0xad, gbc.readMem(0xba10));
        // CB AD 03BD
        gbc.setState(0x5052, 0xb8d5, 0xeec0, 0x6261, 0x4319, 0x4f73, 0x1, 0x0);
        gbc.writeMem(0x5052, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb8d5, gbc.sp());
        EXPECT(0x5054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03BE
        gbc.setState(0x2d7a, 0x9e23, 0xba60, 0x4229, 0x7d51, 0xcf80, 0x0, 0x1);
        gbc.writeMem(0x2d7a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9e23, gbc.sp());
        EXPECT(0x2d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03BF
        gbc.setState(0x9c6c, 0xcca6, 0x1370, 0x79ca, 0xab6c, 0xc87e, 0x1, 0x0);
        gbc.writeMem(0x9c6c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcca6, gbc.sp());
        EXPECT(0x9c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c6c));
        EXPECT(0xad, gbc.readMem(0x9c6d));
        // CB AD 03C0
        gbc.setState(0xc91b, 0x8c40, 0x1d50, 0xf019, 0x1551, 0x25b2, 0x0, 0x1);
        gbc.writeMem(0xc91b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8c40, gbc.sp());
        EXPECT(0xc91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91b));
        EXPECT(0xad, gbc.readMem(0xc91c));
        // CB AD 03C1
        gbc.setState(0xc4b7, 0x7011, 0xa220, 0x2d60, 0x32d, 0x22d8, 0x0, 0x0);
        gbc.writeMem(0xc4b7, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7011, gbc.sp());
        EXPECT(0xc4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b7));
        EXPECT(0xad, gbc.readMem(0xc4b8));
        // CB AD 03C2
        gbc.setState(0x6d36, 0x568d, 0xa5b0, 0xfba2, 0x659c, 0x7037, 0x0, 0x1);
        gbc.writeMem(0x6d36, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x568d, gbc.sp());
        EXPECT(0x6d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03C3
        gbc.setState(0x661c, 0x9193, 0xcd10, 0xfcc4, 0x9870, 0xbb91, 0x0, 0x1);
        gbc.writeMem(0x661c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9193, gbc.sp());
        EXPECT(0x661e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03C4
        gbc.setState(0x199b, 0xe3c6, 0x990, 0x3a96, 0x90cb, 0xee92, 0x0, 0x1);
        gbc.writeMem(0x199b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe3c6, gbc.sp());
        EXPECT(0x199d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03C5
        gbc.setState(0xdd98, 0xd3c9, 0xab0, 0xb165, 0xf642, 0xfb29, 0x1, 0x0);
        gbc.writeMem(0xdd98, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd3c9, gbc.sp());
        EXPECT(0xdd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd98));
        EXPECT(0xad, gbc.readMem(0xdd99));
        // CB AD 03C6
        gbc.setState(0x9a0b, 0xe27b, 0x4360, 0x5588, 0x967f, 0xa7f1, 0x0, 0x1);
        gbc.writeMem(0x9a0b, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe27b, gbc.sp());
        EXPECT(0x9a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a0b));
        EXPECT(0xad, gbc.readMem(0x9a0c));
        // CB AD 03C7
        gbc.setState(0x5e1, 0x7c83, 0x870, 0xca35, 0xccee, 0xb07b, 0x1, 0x0);
        gbc.writeMem(0x5e1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7c83, gbc.sp());
        EXPECT(0x5e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03C8
        gbc.setState(0xa51, 0x55a6, 0x88b0, 0x8952, 0x4cf3, 0x21a8, 0x0, 0x1);
        gbc.writeMem(0xa51, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x55a6, gbc.sp());
        EXPECT(0xa53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03C9
        gbc.setState(0x3226, 0x304d, 0xe9c0, 0xc05e, 0x1628, 0x2c87, 0x0, 0x1);
        gbc.writeMem(0x3226, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x304d, gbc.sp());
        EXPECT(0x3228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03CA
        gbc.setState(0x2ab0, 0xb700, 0x74f0, 0xfa09, 0x10cd, 0x849d, 0x0, 0x0);
        gbc.writeMem(0x2ab0, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb700, gbc.sp());
        EXPECT(0x2ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03CB
        gbc.setState(0xcbd8, 0x106, 0xfa70, 0xd8b3, 0xc472, 0x5842, 0x0, 0x1);
        gbc.writeMem(0xcbd8, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x106, gbc.sp());
        EXPECT(0xcbda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd8));
        EXPECT(0xad, gbc.readMem(0xcbd9));
        // CB AD 03CC
        gbc.setState(0x7b43, 0xb8a9, 0x5450, 0x47da, 0x86ab, 0xdf6b, 0x1, 0x1);
        gbc.writeMem(0x7b43, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb8a9, gbc.sp());
        EXPECT(0x7b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03CD
        gbc.setState(0x9f97, 0x9794, 0x9510, 0xbfc6, 0x6a75, 0x25f, 0x0, 0x1);
        gbc.writeMem(0x9f97, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9794, gbc.sp());
        EXPECT(0x9f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f97));
        EXPECT(0xad, gbc.readMem(0x9f98));
        // CB AD 03CE
        gbc.setState(0xd9e, 0x8799, 0xff10, 0x1fbf, 0xeec0, 0x2bcd, 0x0, 0x0);
        gbc.writeMem(0xd9e, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8799, gbc.sp());
        EXPECT(0xda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03D0
        gbc.setState(0x31bc, 0x344f, 0x1920, 0xfdd3, 0xb352, 0x4346, 0x0, 0x0);
        gbc.writeMem(0x31bc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x344f, gbc.sp());
        EXPECT(0x31be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03D1
        gbc.setState(0xa533, 0x71e5, 0xea80, 0x66b5, 0x798b, 0x6746, 0x0, 0x1);
        gbc.writeMem(0xa533, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x71e5, gbc.sp());
        EXPECT(0xa535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa533));
        EXPECT(0xad, gbc.readMem(0xa534));
        // CB AD 03D2
        gbc.setState(0x3420, 0x45ef, 0xa4a0, 0xc5e6, 0xc3d7, 0xd6bf, 0x0, 0x0);
        gbc.writeMem(0x3420, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x45ef, gbc.sp());
        EXPECT(0x3422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03D3
        gbc.setState(0x76a3, 0x8f54, 0x5ff0, 0x1b90, 0x47f6, 0xb144, 0x1, 0x0);
        gbc.writeMem(0x76a3, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8f54, gbc.sp());
        EXPECT(0x76a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03D4
        gbc.setState(0xecf4, 0xac6a, 0x6950, 0x1d16, 0xb1b0, 0x912d, 0x1, 0x1);
        gbc.writeMem(0xecf4, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xac6a, gbc.sp());
        EXPECT(0xecf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf4));
        EXPECT(0xad, gbc.readMem(0xecf5));
        // CB AD 03D5
        gbc.setState(0x5319, 0xedef, 0xf550, 0xd1e7, 0xaafc, 0x554a, 0x0, 0x1);
        gbc.writeMem(0x5319, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xedef, gbc.sp());
        EXPECT(0x531b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03D6
        gbc.setState(0x4fef, 0xd51e, 0x4b70, 0x7c30, 0x12d2, 0xe6bd, 0x0, 0x1);
        gbc.writeMem(0x4fef, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd51e, gbc.sp());
        EXPECT(0x4ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03D7
        gbc.setState(0xe696, 0x7f59, 0x3900, 0xe9b1, 0xbe6c, 0x70f3, 0x1, 0x0);
        gbc.writeMem(0xe696, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7f59, gbc.sp());
        EXPECT(0xe698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe696));
        EXPECT(0xad, gbc.readMem(0xe697));
        // CB AD 03D9
        gbc.setState(0xb88a, 0xd655, 0x4e40, 0x1c9a, 0x116c, 0x5e21, 0x0, 0x0);
        gbc.writeMem(0xb88a, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd655, gbc.sp());
        EXPECT(0xb88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88a));
        EXPECT(0xad, gbc.readMem(0xb88b));
        // CB AD 03DA
        gbc.setState(0xcaae, 0xe047, 0x78d0, 0x847a, 0x2749, 0x2f59, 0x0, 0x0);
        gbc.writeMem(0xcaae, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe047, gbc.sp());
        EXPECT(0xcab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaae));
        EXPECT(0xad, gbc.readMem(0xcaaf));
        // CB AD 03DB
        gbc.setState(0x2a9f, 0x7a08, 0x7380, 0xd09c, 0x5d4b, 0xc42c, 0x0, 0x0);
        gbc.writeMem(0x2a9f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7a08, gbc.sp());
        EXPECT(0x2aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03DC
        gbc.setState(0x5a28, 0x52fe, 0x6b00, 0x295d, 0xe05e, 0x4c16, 0x0, 0x1);
        gbc.writeMem(0x5a28, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x52fe, gbc.sp());
        EXPECT(0x5a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03DD
        gbc.setState(0xd3cc, 0x1193, 0x20f0, 0xdc6, 0xdc2b, 0x46a, 0x1, 0x0);
        gbc.writeMem(0xd3cc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1193, gbc.sp());
        EXPECT(0xd3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3cc));
        EXPECT(0xad, gbc.readMem(0xd3cd));
        // CB AD 03DE
        gbc.setState(0xe8a1, 0x9aa8, 0xae50, 0xbc3e, 0x6eff, 0xc49b, 0x0, 0x0);
        gbc.writeMem(0xe8a1, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9aa8, gbc.sp());
        EXPECT(0xe8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a1));
        EXPECT(0xad, gbc.readMem(0xe8a2));
        // CB AD 03DF
        gbc.setState(0xa742, 0xddf0, 0x990, 0x5afc, 0x9ebb, 0x68e4, 0x0, 0x1);
        gbc.writeMem(0xa742, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xddf0, gbc.sp());
        EXPECT(0xa744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa742));
        EXPECT(0xad, gbc.readMem(0xa743));
        // CB AD 03E0
        gbc.setState(0x4823, 0xb2a6, 0xf210, 0x104a, 0xf40a, 0x6451, 0x0, 0x1);
        gbc.writeMem(0x4823, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb2a6, gbc.sp());
        EXPECT(0x4825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03E1
        gbc.setState(0x79d5, 0x6b78, 0xf000, 0xea11, 0xa41e, 0x780f, 0x0, 0x0);
        gbc.writeMem(0x79d5, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6b78, gbc.sp());
        EXPECT(0x79d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03E2
        gbc.setState(0x77dc, 0x6052, 0x13f0, 0x9666, 0xce7b, 0x741, 0x1, 0x0);
        gbc.writeMem(0x77dc, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6052, gbc.sp());
        EXPECT(0x77de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03E3
        gbc.setState(0x295c, 0x9679, 0x2950, 0xe966, 0x28d, 0x6860, 0x0, 0x1);
        gbc.writeMem(0x295c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9679, gbc.sp());
        EXPECT(0x295e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03E4
        gbc.setState(0x3d1f, 0x781, 0x1a40, 0x734f, 0xc6df, 0xfaa1, 0x1, 0x1);
        gbc.writeMem(0x3d1f, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x781, gbc.sp());
        EXPECT(0x3d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AD 03E5
        gbc.setState(0x307c, 0xa916, 0x4cb0, 0xa01c, 0xc3c8, 0x5d94, 0x0, 0x0);
        gbc.writeMem(0x307c, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa916, gbc.sp());
        EXPECT(0x307e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AD 03E6
        gbc.setState(0xd8fd, 0x6425, 0x6500, 0x2195, 0x864e, 0xa31, 0x1, 0x1);
        gbc.writeMem(0xd8fd, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6425, gbc.sp());
        EXPECT(0xd8ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8fd));
        EXPECT(0xad, gbc.readMem(0xd8fe));
        // CB AD 03E7
        gbc.setState(0x6d9, 0xef9d, 0xf910, 0x196a, 0x3a0f, 0xc95f, 0x0, 0x1);
        gbc.writeMem(0x6d9, { 0xcb, 0xad });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xef9d, gbc.sp());
        EXPECT(0x6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
