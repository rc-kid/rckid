#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_72)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_72) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 72 0000
        gbc.setState(0x7d52, 0xbf4e, 0xfd30, 0x5c8, 0x6a27, 0xf965, 0x1, 0x1);
        gbc.writeMem(0x7d52, { 0x72 });
        gbc.writeMem(0xf965, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xbf4e);
        EXPECT(gbc.pc(), 0x7d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf965), 0x6a);
        // 72 0001
        gbc.setState(0x6e32, 0x33f5, 0x65a0, 0xa5ee, 0x6a28, 0xb8f1, 0x0, 0x0);
        gbc.writeMem(0x6e32, { 0x72 });
        gbc.writeMem(0xb8f1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x33f5);
        EXPECT(gbc.pc(), 0x6e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f1), 0x6a);
        // 72 0004
        gbc.setState(0x99e7, 0x7cc3, 0xf870, 0xb117, 0x69c1, 0xa950, 0x0, 0x0);
        gbc.writeMem(0x99e7, { 0x72 });
        gbc.writeMem(0xa950, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7cc3);
        EXPECT(gbc.pc(), 0x99e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e7), 0x72);
        EXPECT(gbc.readMem(0xa950), 0x69);
        // 72 0007
        gbc.setState(0x5940, 0x637c, 0x450, 0x6a4, 0x4802, 0xa35e, 0x1, 0x1);
        gbc.writeMem(0x5940, { 0x72 });
        gbc.writeMem(0xa35e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x637c);
        EXPECT(gbc.pc(), 0x5941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa35e), 0x48);
        // 72 000C
        gbc.setState(0xc80f, 0x47e8, 0xccd0, 0xdcd8, 0xeb88, 0xa78c, 0x0, 0x0);
        gbc.writeMem(0xa78c, { 0x0 });
        gbc.writeMem(0xc80f, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x47e8);
        EXPECT(gbc.pc(), 0xc810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa78c), 0xeb);
        EXPECT(gbc.readMem(0xc80f), 0x72);
        // 72 000D
        gbc.setState(0x108b, 0xdc0, 0xd90, 0x1a8c, 0x1130, 0xf74d, 0x0, 0x1);
        gbc.writeMem(0x108b, { 0x72 });
        gbc.writeMem(0xf74d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xdc0);
        EXPECT(gbc.pc(), 0x108c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf74d), 0x11);
        // 72 0013
        gbc.setState(0x5a2e, 0x15f8, 0x9710, 0x25, 0x5121, 0xd6be, 0x0, 0x0);
        gbc.writeMem(0x5a2e, { 0x72 });
        gbc.writeMem(0xd6be, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x15f8);
        EXPECT(gbc.pc(), 0x5a2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6be), 0x51);
        // 72 0014
        gbc.setState(0x552a, 0x841e, 0x74a0, 0xeae4, 0x314f, 0x96be, 0x0, 0x1);
        gbc.writeMem(0x552a, { 0x72 });
        gbc.writeMem(0x96be, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x841e);
        EXPECT(gbc.pc(), 0x552b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96be), 0x31);
        // 72 0015
        gbc.setState(0x9fae, 0xa132, 0xc070, 0xae1f, 0xdd8a, 0xf89e, 0x1, 0x1);
        gbc.writeMem(0x9fae, { 0x72 });
        gbc.writeMem(0xf89e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa132);
        EXPECT(gbc.pc(), 0x9faf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fae), 0x72);
        EXPECT(gbc.readMem(0xf89e), 0xdd);
        // 72 0018
        gbc.setState(0x5, 0xe131, 0xe0a0, 0x2686, 0xd738, 0xfc92, 0x1, 0x0);
        gbc.writeMem(0x5, { 0x72 });
        gbc.writeMem(0xfc92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe131);
        EXPECT(gbc.pc(), 0x6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc92), 0xd7);
        // 72 001B
        gbc.setState(0x7ecb, 0xed67, 0x1430, 0xbf43, 0xddb5, 0xe5fd, 0x1, 0x0);
        gbc.writeMem(0x7ecb, { 0x72 });
        gbc.writeMem(0xe5fd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xed67);
        EXPECT(gbc.pc(), 0x7ecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5fd), 0xdd);
        // 72 001C
        gbc.setState(0xec77, 0xf0b4, 0xcaf0, 0xe0b9, 0x5155, 0xcb40, 0x0, 0x0);
        gbc.writeMem(0xcb40, { 0x0 });
        gbc.writeMem(0xec77, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf0b4);
        EXPECT(gbc.pc(), 0xec78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb40), 0x51);
        EXPECT(gbc.readMem(0xec77), 0x72);
        // 72 001D
        gbc.setState(0x9bbd, 0xab43, 0x9590, 0x4db, 0x9d81, 0xeae7, 0x0, 0x1);
        gbc.writeMem(0x9bbd, { 0x72 });
        gbc.writeMem(0xeae7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xab43);
        EXPECT(gbc.pc(), 0x9bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bbd), 0x72);
        EXPECT(gbc.readMem(0xeae7), 0x9d);
        // 72 001E
        gbc.setState(0x7fd7, 0xff78, 0x54f0, 0x4ae8, 0xff7a, 0xd7f7, 0x0, 0x0);
        gbc.writeMem(0x7fd7, { 0x72 });
        gbc.writeMem(0xd7f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xff78);
        EXPECT(gbc.pc(), 0x7fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f7), 0xff);
        // 72 0020
        gbc.setState(0x8c0f, 0x9bde, 0x79b0, 0x8438, 0xcb13, 0xc361, 0x1, 0x0);
        gbc.writeMem(0x8c0f, { 0x72 });
        gbc.writeMem(0xc361, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9bde);
        EXPECT(gbc.pc(), 0x8c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c0f), 0x72);
        EXPECT(gbc.readMem(0xc361), 0xcb);
        // 72 0025
        gbc.setState(0x760, 0x1d56, 0x3a90, 0x8b81, 0x6d8c, 0xe91b, 0x1, 0x1);
        gbc.writeMem(0x760, { 0x72 });
        gbc.writeMem(0xe91b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1d56);
        EXPECT(gbc.pc(), 0x761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe91b), 0x6d);
        // 72 0026
        gbc.setState(0x8148, 0xc444, 0xa6f0, 0x984, 0x6669, 0xed63, 0x1, 0x0);
        gbc.writeMem(0x8148, { 0x72 });
        gbc.writeMem(0xed63, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc444);
        EXPECT(gbc.pc(), 0x8149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8148), 0x72);
        EXPECT(gbc.readMem(0xed63), 0x66);
        // 72 002A
        gbc.setState(0x405a, 0x2b9, 0xdb70, 0xe0ab, 0x5beb, 0xd0fd, 0x0, 0x0);
        gbc.writeMem(0x405a, { 0x72 });
        gbc.writeMem(0xd0fd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2b9);
        EXPECT(gbc.pc(), 0x405b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0fd), 0x5b);
        // 72 002B
        gbc.setState(0xc618, 0xa567, 0xc910, 0x97c9, 0x9387, 0xa5d0, 0x1, 0x0);
        gbc.writeMem(0xa5d0, { 0x0 });
        gbc.writeMem(0xc618, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa567);
        EXPECT(gbc.pc(), 0xc619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d0), 0x93);
        EXPECT(gbc.readMem(0xc618), 0x72);
        // 72 002F
        gbc.setState(0xbb39, 0x25fe, 0x3aa0, 0x7f1, 0x6f3a, 0xad07, 0x1, 0x1);
        gbc.writeMem(0xad07, { 0x0 });
        gbc.writeMem(0xbb39, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x25fe);
        EXPECT(gbc.pc(), 0xbb3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad07), 0x6f);
        EXPECT(gbc.readMem(0xbb39), 0x72);
        // 72 0030
        gbc.setState(0x2ca3, 0xdb63, 0x8fd0, 0xa69a, 0x3fcf, 0x9964, 0x0, 0x1);
        gbc.writeMem(0x2ca3, { 0x72 });
        gbc.writeMem(0x9964, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xdb63);
        EXPECT(gbc.pc(), 0x2ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9964), 0x3f);
        // 72 0032
        gbc.setState(0x25da, 0xae7f, 0xa4f0, 0x8374, 0x44f0, 0xd112, 0x0, 0x0);
        gbc.writeMem(0x25da, { 0x72 });
        gbc.writeMem(0xd112, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xae7f);
        EXPECT(gbc.pc(), 0x25db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd112), 0x44);
        // 72 0034
        gbc.setState(0xa74c, 0x8633, 0x2260, 0x1ee4, 0xaa94, 0xd857, 0x0, 0x0);
        gbc.writeMem(0xa74c, { 0x72 });
        gbc.writeMem(0xd857, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8633);
        EXPECT(gbc.pc(), 0xa74d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa74c), 0x72);
        EXPECT(gbc.readMem(0xd857), 0xaa);
        // 72 0035
        gbc.setState(0xc639, 0xe50d, 0x8350, 0x61da, 0x1695, 0xc9ee, 0x0, 0x0);
        gbc.writeMem(0xc639, { 0x72 });
        gbc.writeMem(0xc9ee, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe50d);
        EXPECT(gbc.pc(), 0xc63a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc639), 0x72);
        EXPECT(gbc.readMem(0xc9ee), 0x16);
        // 72 0037
        gbc.setState(0xbe04, 0xcb7e, 0x6e0, 0x58d5, 0x5e75, 0xf86c, 0x0, 0x0);
        gbc.writeMem(0xbe04, { 0x72 });
        gbc.writeMem(0xf86c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcb7e);
        EXPECT(gbc.pc(), 0xbe05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe04), 0x72);
        EXPECT(gbc.readMem(0xf86c), 0x5e);
        // 72 0039
        gbc.setState(0xac85, 0x8e7b, 0x5910, 0x2c63, 0x4b5a, 0xe53c, 0x1, 0x1);
        gbc.writeMem(0xac85, { 0x72 });
        gbc.writeMem(0xe53c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8e7b);
        EXPECT(gbc.pc(), 0xac86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac85), 0x72);
        EXPECT(gbc.readMem(0xe53c), 0x4b);
        // 72 003A
        gbc.setState(0x4eb9, 0x709c, 0xc060, 0xe69c, 0x1ce9, 0x9484, 0x0, 0x0);
        gbc.writeMem(0x4eb9, { 0x72 });
        gbc.writeMem(0x9484, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x709c);
        EXPECT(gbc.pc(), 0x4eba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9484), 0x1c);
        // 72 003C
        gbc.setState(0xecd7, 0xd7ca, 0xd80, 0xe46d, 0x68, 0xa9c1, 0x0, 0x1);
        gbc.writeMem(0xa9c1, { 0x0 });
        gbc.writeMem(0xecd7, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd7ca);
        EXPECT(gbc.pc(), 0xecd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9c1), 0x0);
        EXPECT(gbc.readMem(0xecd7), 0x72);
        // 72 0041
        gbc.setState(0x48ef, 0xb17c, 0x3ad0, 0xc592, 0x5a43, 0xe300, 0x0, 0x0);
        gbc.writeMem(0x48ef, { 0x72 });
        gbc.writeMem(0xe300, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb17c);
        EXPECT(gbc.pc(), 0x48f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe300), 0x5a);
        // 72 0042
        gbc.setState(0xc9b7, 0xa6a5, 0x6b90, 0x4a29, 0x75c5, 0xe060, 0x1, 0x1);
        gbc.writeMem(0xc9b7, { 0x72 });
        gbc.writeMem(0xe060, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa6a5);
        EXPECT(gbc.pc(), 0xc9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b7), 0x72);
        EXPECT(gbc.readMem(0xe060), 0x75);
        // 72 0044
        gbc.setState(0x4a66, 0xa5e4, 0x7bc0, 0xdd3c, 0x49f, 0xc4c5, 0x1, 0x1);
        gbc.writeMem(0x4a66, { 0x72 });
        gbc.writeMem(0xc4c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa5e4);
        EXPECT(gbc.pc(), 0x4a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4c5), 0x4);
        // 72 0045
        gbc.setState(0xe4e4, 0x5596, 0x130, 0x8335, 0x7fc1, 0xf2b6, 0x0, 0x0);
        gbc.writeMem(0xe4e4, { 0x72 });
        gbc.writeMem(0xf2b6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5596);
        EXPECT(gbc.pc(), 0xe4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4e4), 0x72);
        EXPECT(gbc.readMem(0xf2b6), 0x7f);
        // 72 0046
        gbc.setState(0x930, 0x45d1, 0x97c0, 0xa3a, 0xba7a, 0xc02b, 0x0, 0x0);
        gbc.writeMem(0x930, { 0x72 });
        gbc.writeMem(0xc02b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x45d1);
        EXPECT(gbc.pc(), 0x931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02b), 0xba);
        // 72 0048
        gbc.setState(0x78c6, 0xfd93, 0x1be0, 0x58b, 0xe2d5, 0x98b0, 0x1, 0x1);
        gbc.writeMem(0x78c6, { 0x72 });
        gbc.writeMem(0x98b0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xfd93);
        EXPECT(gbc.pc(), 0x78c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b0), 0xe2);
        // 72 004B
        gbc.setState(0xc744, 0xe013, 0x9890, 0xd730, 0x3bda, 0x9ce5, 0x1, 0x1);
        gbc.writeMem(0x9ce5, { 0x0 });
        gbc.writeMem(0xc744, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe013);
        EXPECT(gbc.pc(), 0xc745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce5), 0x3b);
        EXPECT(gbc.readMem(0xc744), 0x72);
        // 72 004D
        gbc.setState(0x8597, 0x793b, 0xfae0, 0xf5d2, 0xb4f7, 0xda66, 0x0, 0x1);
        gbc.writeMem(0x8597, { 0x72 });
        gbc.writeMem(0xda66, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x793b);
        EXPECT(gbc.pc(), 0x8598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8597), 0x72);
        EXPECT(gbc.readMem(0xda66), 0xb4);
        // 72 004E
        gbc.setState(0x6612, 0x2a85, 0xa510, 0x62e4, 0x4b0b, 0xf5ce, 0x0, 0x0);
        gbc.writeMem(0x6612, { 0x72 });
        gbc.writeMem(0xf5ce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2a85);
        EXPECT(gbc.pc(), 0x6613);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5ce), 0x4b);
        // 72 0050
        gbc.setState(0x3dcc, 0x25a6, 0x2610, 0x4302, 0xeb9d, 0x9f86, 0x1, 0x0);
        gbc.writeMem(0x3dcc, { 0x72 });
        gbc.writeMem(0x9f86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x25a6);
        EXPECT(gbc.pc(), 0x3dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f86), 0xeb);
        // 72 0051
        gbc.setState(0x4605, 0xe546, 0xbc70, 0x451c, 0x1c41, 0xcc55, 0x0, 0x1);
        gbc.writeMem(0x4605, { 0x72 });
        gbc.writeMem(0xcc55, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe546);
        EXPECT(gbc.pc(), 0x4606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc55), 0x1c);
        // 72 0052
        gbc.setState(0x8c83, 0x6abb, 0x7c60, 0xdc18, 0xbd97, 0xc78a, 0x0, 0x0);
        gbc.writeMem(0x8c83, { 0x72 });
        gbc.writeMem(0xc78a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6abb);
        EXPECT(gbc.pc(), 0x8c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c83), 0x72);
        EXPECT(gbc.readMem(0xc78a), 0xbd);
        // 72 0053
        gbc.setState(0xb638, 0x25f1, 0x1da0, 0x1c86, 0xa7ce, 0xd1be, 0x1, 0x1);
        gbc.writeMem(0xb638, { 0x72 });
        gbc.writeMem(0xd1be, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x25f1);
        EXPECT(gbc.pc(), 0xb639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb638), 0x72);
        EXPECT(gbc.readMem(0xd1be), 0xa7);
        // 72 0055
        gbc.setState(0xa894, 0xc19c, 0xf900, 0xd74b, 0x15c4, 0xfdf9, 0x1, 0x0);
        gbc.writeMem(0xa894, { 0x72 });
        gbc.writeMem(0xfdf9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc19c);
        EXPECT(gbc.pc(), 0xa895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa894), 0x72);
        EXPECT(gbc.readMem(0xfdf9), 0x15);
        // 72 0057
        gbc.setState(0x21, 0xcc26, 0x6c60, 0x3888, 0x998d, 0xdd1a, 0x0, 0x0);
        gbc.writeMem(0x21, { 0x72 });
        gbc.writeMem(0xdd1a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xcc26);
        EXPECT(gbc.pc(), 0x22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd1a), 0x99);
        // 72 0058
        gbc.setState(0xe8a1, 0x7931, 0xed60, 0x9c64, 0xe324, 0xc0da, 0x1, 0x0);
        gbc.writeMem(0xc0da, { 0x0 });
        gbc.writeMem(0xe8a1, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7931);
        EXPECT(gbc.pc(), 0xe8a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0da), 0xe3);
        EXPECT(gbc.readMem(0xe8a1), 0x72);
        // 72 0059
        gbc.setState(0x3921, 0xc0fd, 0x1a60, 0xbda2, 0x81f8, 0x80cc, 0x1, 0x1);
        gbc.writeMem(0x3921, { 0x72 });
        gbc.writeMem(0x80cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc0fd);
        EXPECT(gbc.pc(), 0x3922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80cc), 0x81);
        // 72 005A
        gbc.setState(0x8fd4, 0x7e89, 0x8700, 0xbea7, 0x8c1d, 0x972e, 0x0, 0x0);
        gbc.writeMem(0x8fd4, { 0x72 });
        gbc.writeMem(0x972e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7e89);
        EXPECT(gbc.pc(), 0x8fd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd4), 0x72);
        EXPECT(gbc.readMem(0x972e), 0x8c);
        // 72 005B
        gbc.setState(0x2297, 0x1339, 0x6730, 0x481f, 0x44cf, 0x8f5b, 0x1, 0x1);
        gbc.writeMem(0x2297, { 0x72 });
        gbc.writeMem(0x8f5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1339);
        EXPECT(gbc.pc(), 0x2298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f5b), 0x44);
        // 72 005E
        gbc.setState(0x1d82, 0x8edf, 0xdf20, 0xea98, 0x3559, 0x907d, 0x1, 0x1);
        gbc.writeMem(0x1d82, { 0x72 });
        gbc.writeMem(0x907d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8edf);
        EXPECT(gbc.pc(), 0x1d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x907d), 0x35);
        // 72 005F
        gbc.setState(0x2e0, 0xea0f, 0x87a0, 0x419f, 0x4c2c, 0xfe31, 0x0, 0x1);
        gbc.writeMem(0x2e0, { 0x72 });
        gbc.writeMem(0xfe31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xea0f);
        EXPECT(gbc.pc(), 0x2e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe31), 0x4c);
        // 72 0060
        gbc.setState(0x72d8, 0x1c86, 0x6570, 0x6c16, 0xb3d6, 0x8ff6, 0x0, 0x0);
        gbc.writeMem(0x72d8, { 0x72 });
        gbc.writeMem(0x8ff6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1c86);
        EXPECT(gbc.pc(), 0x72d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff6), 0xb3);
        // 72 0061
        gbc.setState(0x2dc9, 0x2d3d, 0x2c60, 0xdf7a, 0x2c34, 0x9357, 0x1, 0x1);
        gbc.writeMem(0x2dc9, { 0x72 });
        gbc.writeMem(0x9357, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2d3d);
        EXPECT(gbc.pc(), 0x2dca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9357), 0x2c);
        // 72 0063
        gbc.setState(0x3aee, 0x4f46, 0x4ac0, 0x259c, 0x246b, 0x9cc5, 0x1, 0x1);
        gbc.writeMem(0x3aee, { 0x72 });
        gbc.writeMem(0x9cc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4f46);
        EXPECT(gbc.pc(), 0x3aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc5), 0x24);
        // 72 0064
        gbc.setState(0x5ed, 0x771d, 0x8cd0, 0x35f5, 0xc609, 0xf483, 0x1, 0x0);
        gbc.writeMem(0x5ed, { 0x72 });
        gbc.writeMem(0xf483, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x771d);
        EXPECT(gbc.pc(), 0x5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf483), 0xc6);
        // 72 0065
        gbc.setState(0xb482, 0x88ed, 0xfff0, 0xdde5, 0x167, 0x9522, 0x1, 0x0);
        gbc.writeMem(0x9522, { 0x0 });
        gbc.writeMem(0xb482, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x88ed);
        EXPECT(gbc.pc(), 0xb483);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9522), 0x1);
        EXPECT(gbc.readMem(0xb482), 0x72);
        // 72 0068
        gbc.setState(0x22d3, 0x6e5e, 0xc050, 0xc23f, 0xf5e6, 0xd604, 0x0, 0x1);
        gbc.writeMem(0x22d3, { 0x72 });
        gbc.writeMem(0xd604, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6e5e);
        EXPECT(gbc.pc(), 0x22d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd604), 0xf5);
        // 72 006C
        gbc.setState(0x1841, 0x5707, 0x8450, 0xd6a0, 0xc844, 0x9e74, 0x1, 0x1);
        gbc.writeMem(0x1841, { 0x72 });
        gbc.writeMem(0x9e74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5707);
        EXPECT(gbc.pc(), 0x1842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e74), 0xc8);
        // 72 006E
        gbc.setState(0x8638, 0xd8ee, 0xd810, 0xc2bb, 0x43b8, 0xe3f9, 0x0, 0x1);
        gbc.writeMem(0x8638, { 0x72 });
        gbc.writeMem(0xe3f9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd8ee);
        EXPECT(gbc.pc(), 0x8639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8638), 0x72);
        EXPECT(gbc.readMem(0xe3f9), 0x43);
        // 72 0071
        gbc.setState(0x9ef2, 0x40e8, 0x4230, 0xfdb3, 0xc8ad, 0x87c2, 0x1, 0x0);
        gbc.writeMem(0x87c2, { 0x0 });
        gbc.writeMem(0x9ef2, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x40e8);
        EXPECT(gbc.pc(), 0x9ef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c2), 0xc8);
        EXPECT(gbc.readMem(0x9ef2), 0x72);
        // 72 0073
        gbc.setState(0x6cf7, 0xfa95, 0x60c0, 0x3c70, 0xfa89, 0x9a14, 0x1, 0x1);
        gbc.writeMem(0x6cf7, { 0x72 });
        gbc.writeMem(0x9a14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfa95);
        EXPECT(gbc.pc(), 0x6cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a14), 0xfa);
        // 72 0075
        gbc.setState(0x8784, 0x60a7, 0x8a0, 0x1403, 0x76c, 0xb53f, 0x0, 0x1);
        gbc.writeMem(0x8784, { 0x72 });
        gbc.writeMem(0xb53f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x60a7);
        EXPECT(gbc.pc(), 0x8785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8784), 0x72);
        EXPECT(gbc.readMem(0xb53f), 0x7);
        // 72 0077
        gbc.setState(0xc9d1, 0x511, 0xc280, 0xbf0d, 0x915, 0x9399, 0x0, 0x1);
        gbc.writeMem(0x9399, { 0x0 });
        gbc.writeMem(0xc9d1, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x511);
        EXPECT(gbc.pc(), 0xc9d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9399), 0x9);
        EXPECT(gbc.readMem(0xc9d1), 0x72);
        // 72 0078
        gbc.setState(0x20cf, 0x54e1, 0x8cc0, 0x39e6, 0x649a, 0xc3ce, 0x1, 0x0);
        gbc.writeMem(0x20cf, { 0x72 });
        gbc.writeMem(0xc3ce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x54e1);
        EXPECT(gbc.pc(), 0x20d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ce), 0x64);
        // 72 0079
        gbc.setState(0xeac3, 0x7e45, 0x89e0, 0x8c77, 0xac0f, 0x8c24, 0x1, 0x1);
        gbc.writeMem(0x8c24, { 0x0 });
        gbc.writeMem(0xeac3, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7e45);
        EXPECT(gbc.pc(), 0xeac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c24), 0xac);
        EXPECT(gbc.readMem(0xeac3), 0x72);
        // 72 007A
        gbc.setState(0x4723, 0x7c7d, 0x79c0, 0xafd1, 0x3683, 0xd9ab, 0x0, 0x1);
        gbc.writeMem(0x4723, { 0x72 });
        gbc.writeMem(0xd9ab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7c7d);
        EXPECT(gbc.pc(), 0x4724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ab), 0x36);
        // 72 007B
        gbc.setState(0x3848, 0xd042, 0xc0f0, 0xfecc, 0x64fb, 0xd3b1, 0x1, 0x0);
        gbc.writeMem(0x3848, { 0x72 });
        gbc.writeMem(0xd3b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd042);
        EXPECT(gbc.pc(), 0x3849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b1), 0x64);
        // 72 007C
        gbc.setState(0x6f7a, 0xe372, 0x1da0, 0x1559, 0x110d, 0xfc88, 0x1, 0x0);
        gbc.writeMem(0x6f7a, { 0x72 });
        gbc.writeMem(0xfc88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe372);
        EXPECT(gbc.pc(), 0x6f7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc88), 0x11);
        // 72 007D
        gbc.setState(0x2af2, 0x2956, 0x4030, 0x1106, 0xaf47, 0xb111, 0x0, 0x0);
        gbc.writeMem(0x2af2, { 0x72 });
        gbc.writeMem(0xb111, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2956);
        EXPECT(gbc.pc(), 0x2af3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb111), 0xaf);
        // 72 007E
        gbc.setState(0xb1ac, 0x1aff, 0xb200, 0x215d, 0xc53f, 0xaeaa, 0x0, 0x1);
        gbc.writeMem(0xaeaa, { 0x0 });
        gbc.writeMem(0xb1ac, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1aff);
        EXPECT(gbc.pc(), 0xb1ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeaa), 0xc5);
        EXPECT(gbc.readMem(0xb1ac), 0x72);
        // 72 007F
        gbc.setState(0xc477, 0x3de1, 0xc70, 0x3e26, 0xc2fa, 0x89f3, 0x0, 0x1);
        gbc.writeMem(0x89f3, { 0x0 });
        gbc.writeMem(0xc477, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3de1);
        EXPECT(gbc.pc(), 0xc478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89f3), 0xc2);
        EXPECT(gbc.readMem(0xc477), 0x72);
        // 72 0081
        gbc.setState(0x714e, 0xe786, 0x7a0, 0xb141, 0x43ac, 0xa71a, 0x1, 0x1);
        gbc.writeMem(0x714e, { 0x72 });
        gbc.writeMem(0xa71a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe786);
        EXPECT(gbc.pc(), 0x714f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa71a), 0x43);
        // 72 0088
        gbc.setState(0x73ab, 0xb1c4, 0xe8c0, 0x669, 0xc478, 0xcd9b, 0x0, 0x0);
        gbc.writeMem(0x73ab, { 0x72 });
        gbc.writeMem(0xcd9b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb1c4);
        EXPECT(gbc.pc(), 0x73ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd9b), 0xc4);
        // 72 0089
        gbc.setState(0xc82b, 0xf4bb, 0x1110, 0x9ca8, 0x23a7, 0xe4b3, 0x0, 0x0);
        gbc.writeMem(0xc82b, { 0x72 });
        gbc.writeMem(0xe4b3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf4bb);
        EXPECT(gbc.pc(), 0xc82c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc82b), 0x72);
        EXPECT(gbc.readMem(0xe4b3), 0x23);
        // 72 008A
        gbc.setState(0x741c, 0x6a6a, 0xd920, 0x60a7, 0x3409, 0xef03, 0x0, 0x1);
        gbc.writeMem(0x741c, { 0x72 });
        gbc.writeMem(0xef03, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6a6a);
        EXPECT(gbc.pc(), 0x741d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef03), 0x34);
        // 72 008D
        gbc.setState(0x912b, 0xaec2, 0x3e20, 0x4cda, 0x795, 0xd556, 0x1, 0x0);
        gbc.writeMem(0x912b, { 0x72 });
        gbc.writeMem(0xd556, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xaec2);
        EXPECT(gbc.pc(), 0x912c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x912b), 0x72);
        EXPECT(gbc.readMem(0xd556), 0x7);
        // 72 008F
        gbc.setState(0x9ceb, 0x228d, 0x6730, 0xfbc3, 0x5631, 0xc1f0, 0x0, 0x0);
        gbc.writeMem(0x9ceb, { 0x72 });
        gbc.writeMem(0xc1f0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x228d);
        EXPECT(gbc.pc(), 0x9cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ceb), 0x72);
        EXPECT(gbc.readMem(0xc1f0), 0x56);
        // 72 0090
        gbc.setState(0x4e27, 0x5002, 0xb900, 0xbf13, 0x7320, 0xc304, 0x0, 0x1);
        gbc.writeMem(0x4e27, { 0x72 });
        gbc.writeMem(0xc304, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5002);
        EXPECT(gbc.pc(), 0x4e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc304), 0x73);
        // 72 0091
        gbc.setState(0xd1d, 0x9dd3, 0x1400, 0xc26e, 0xb05a, 0xdb21, 0x1, 0x1);
        gbc.writeMem(0xd1d, { 0x72 });
        gbc.writeMem(0xdb21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9dd3);
        EXPECT(gbc.pc(), 0xd1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb21), 0xb0);
        // 72 0093
        gbc.setState(0x6ca7, 0x2bef, 0x4b10, 0xafc5, 0xe7b0, 0xd469, 0x0, 0x0);
        gbc.writeMem(0x6ca7, { 0x72 });
        gbc.writeMem(0xd469, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2bef);
        EXPECT(gbc.pc(), 0x6ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd469), 0xe7);
        // 72 0098
        gbc.setState(0x4043, 0x4e51, 0x1130, 0xa6bf, 0x3449, 0x999d, 0x1, 0x0);
        gbc.writeMem(0x4043, { 0x72 });
        gbc.writeMem(0x999d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4e51);
        EXPECT(gbc.pc(), 0x4044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x999d), 0x34);
        // 72 0099
        gbc.setState(0xa9bf, 0xf793, 0xd610, 0x46ee, 0x7f6c, 0xa8cd, 0x0, 0x0);
        gbc.writeMem(0xa8cd, { 0x0 });
        gbc.writeMem(0xa9bf, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf793);
        EXPECT(gbc.pc(), 0xa9c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8cd), 0x7f);
        EXPECT(gbc.readMem(0xa9bf), 0x72);
        // 72 009D
        gbc.setState(0xc2ca, 0xbae1, 0x48c0, 0x4250, 0xcb05, 0xde3a, 0x1, 0x0);
        gbc.writeMem(0xc2ca, { 0x72 });
        gbc.writeMem(0xde3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xbae1);
        EXPECT(gbc.pc(), 0xc2cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ca), 0x72);
        EXPECT(gbc.readMem(0xde3a), 0xcb);
        // 72 009E
        gbc.setState(0x950e, 0xcf77, 0x5b0, 0x49d6, 0x567f, 0xdf6e, 0x0, 0x1);
        gbc.writeMem(0x950e, { 0x72 });
        gbc.writeMem(0xdf6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xcf77);
        EXPECT(gbc.pc(), 0x950f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x950e), 0x72);
        EXPECT(gbc.readMem(0xdf6e), 0x56);
        // 72 00A2
        gbc.setState(0x6fe3, 0x374d, 0x70b0, 0xa913, 0xfe96, 0xcc6d, 0x0, 0x1);
        gbc.writeMem(0x6fe3, { 0x72 });
        gbc.writeMem(0xcc6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x374d);
        EXPECT(gbc.pc(), 0x6fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc6d), 0xfe);
        // 72 00A4
        gbc.setState(0xa54c, 0x33fe, 0xa830, 0x72b9, 0xa1cb, 0xf907, 0x1, 0x0);
        gbc.writeMem(0xa54c, { 0x72 });
        gbc.writeMem(0xf907, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x33fe);
        EXPECT(gbc.pc(), 0xa54d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa54c), 0x72);
        EXPECT(gbc.readMem(0xf907), 0xa1);
        // 72 00A5
        gbc.setState(0x768, 0x6997, 0x5a60, 0xe83, 0xde87, 0x8bb0, 0x1, 0x0);
        gbc.writeMem(0x768, { 0x72 });
        gbc.writeMem(0x8bb0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6997);
        EXPECT(gbc.pc(), 0x769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb0), 0xde);
        // 72 00A9
        gbc.setState(0x5ff6, 0x7509, 0xe1c0, 0xfa26, 0x25cf, 0x8571, 0x0, 0x1);
        gbc.writeMem(0x5ff6, { 0x72 });
        gbc.writeMem(0x8571, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7509);
        EXPECT(gbc.pc(), 0x5ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8571), 0x25);
        // 72 00AA
        gbc.setState(0x8ebe, 0xe024, 0x3b10, 0xc2e2, 0x9528, 0xdb17, 0x1, 0x0);
        gbc.writeMem(0x8ebe, { 0x72 });
        gbc.writeMem(0xdb17, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe024);
        EXPECT(gbc.pc(), 0x8ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ebe), 0x72);
        EXPECT(gbc.readMem(0xdb17), 0x95);
        // 72 00AB
        gbc.setState(0xc82c, 0x6714, 0x6960, 0xaf89, 0xe580, 0xe56f, 0x0, 0x0);
        gbc.writeMem(0xc82c, { 0x72 });
        gbc.writeMem(0xe56f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6714);
        EXPECT(gbc.pc(), 0xc82d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc82c), 0x72);
        EXPECT(gbc.readMem(0xe56f), 0xe5);
        // 72 00AC
        gbc.setState(0x4c3c, 0xae23, 0x4700, 0xf10a, 0x6e6d, 0x8a32, 0x1, 0x0);
        gbc.writeMem(0x4c3c, { 0x72 });
        gbc.writeMem(0x8a32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xae23);
        EXPECT(gbc.pc(), 0x4c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a32), 0x6e);
        // 72 00B0
        gbc.setState(0xdcfc, 0x84f0, 0x4770, 0xe031, 0x8492, 0xb549, 0x0, 0x1);
        gbc.writeMem(0xb549, { 0x0 });
        gbc.writeMem(0xdcfc, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x84f0);
        EXPECT(gbc.pc(), 0xdcfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb549), 0x84);
        EXPECT(gbc.readMem(0xdcfc), 0x72);
        // 72 00B1
        gbc.setState(0xd3ad, 0xc019, 0xf010, 0x959a, 0x8263, 0xae74, 0x0, 0x1);
        gbc.writeMem(0xae74, { 0x0 });
        gbc.writeMem(0xd3ad, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc019);
        EXPECT(gbc.pc(), 0xd3ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae74), 0x82);
        EXPECT(gbc.readMem(0xd3ad), 0x72);
        // 72 00B3
        gbc.setState(0xc15b, 0x4797, 0xaaa0, 0xc371, 0x2902, 0xbdff, 0x1, 0x0);
        gbc.writeMem(0xbdff, { 0x0 });
        gbc.writeMem(0xc15b, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4797);
        EXPECT(gbc.pc(), 0xc15c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdff), 0x29);
        EXPECT(gbc.readMem(0xc15b), 0x72);
        // 72 00B4
        gbc.setState(0x9604, 0x8d00, 0x92f0, 0xbe74, 0xacb, 0xc5a1, 0x0, 0x0);
        gbc.writeMem(0x9604, { 0x72 });
        gbc.writeMem(0xc5a1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8d00);
        EXPECT(gbc.pc(), 0x9605);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9604), 0x72);
        EXPECT(gbc.readMem(0xc5a1), 0xa);
        // 72 00B6
        gbc.setState(0xbc5e, 0x7b22, 0x9eb0, 0x92c, 0x5ab6, 0x818c, 0x0, 0x1);
        gbc.writeMem(0x818c, { 0x0 });
        gbc.writeMem(0xbc5e, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7b22);
        EXPECT(gbc.pc(), 0xbc5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x818c), 0x5a);
        EXPECT(gbc.readMem(0xbc5e), 0x72);
        // 72 00B8
        gbc.setState(0x996c, 0x2637, 0xd980, 0xd8a5, 0x276a, 0xf235, 0x0, 0x1);
        gbc.writeMem(0x996c, { 0x72 });
        gbc.writeMem(0xf235, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2637);
        EXPECT(gbc.pc(), 0x996d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996c), 0x72);
        EXPECT(gbc.readMem(0xf235), 0x27);
        // 72 00B9
        gbc.setState(0x3cde, 0x5a7a, 0xad20, 0xcdc6, 0xf5c0, 0xb6aa, 0x1, 0x0);
        gbc.writeMem(0x3cde, { 0x72 });
        gbc.writeMem(0xb6aa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5a7a);
        EXPECT(gbc.pc(), 0x3cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6aa), 0xf5);
        // 72 00BC
        gbc.setState(0x2a81, 0xcfd8, 0x1b40, 0xd516, 0x3d61, 0xecf4, 0x0, 0x1);
        gbc.writeMem(0x2a81, { 0x72 });
        gbc.writeMem(0xecf4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xcfd8);
        EXPECT(gbc.pc(), 0x2a82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecf4), 0x3d);
        // 72 00BD
        gbc.setState(0xc76e, 0x3e9d, 0xf7a0, 0xd63e, 0x930e, 0xbebf, 0x0, 0x0);
        gbc.writeMem(0xbebf, { 0x0 });
        gbc.writeMem(0xc76e, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3e9d);
        EXPECT(gbc.pc(), 0xc76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebf), 0x93);
        EXPECT(gbc.readMem(0xc76e), 0x72);
        // 72 00BE
        gbc.setState(0x6c2b, 0xc68f, 0x7a30, 0xf298, 0xa0b7, 0xe2ab, 0x0, 0x1);
        gbc.writeMem(0x6c2b, { 0x72 });
        gbc.writeMem(0xe2ab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc68f);
        EXPECT(gbc.pc(), 0x6c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ab), 0xa0);
        // 72 00BF
        gbc.setState(0x777, 0x321c, 0x6360, 0xdbab, 0xa00e, 0xc3d5, 0x1, 0x0);
        gbc.writeMem(0x777, { 0x72 });
        gbc.writeMem(0xc3d5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x321c);
        EXPECT(gbc.pc(), 0x778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d5), 0xa0);
        // 72 00C0
        gbc.setState(0x11d2, 0x943, 0xdcb0, 0xdb50, 0x592a, 0xce2e, 0x1, 0x1);
        gbc.writeMem(0x11d2, { 0x72 });
        gbc.writeMem(0xce2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x943);
        EXPECT(gbc.pc(), 0x11d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce2e), 0x59);
        // 72 00C1
        gbc.setState(0x1996, 0xa744, 0x2160, 0xc3d5, 0x4851, 0xc709, 0x0, 0x1);
        gbc.writeMem(0x1996, { 0x72 });
        gbc.writeMem(0xc709, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa744);
        EXPECT(gbc.pc(), 0x1997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc709), 0x48);
        // 72 00C3
        gbc.setState(0x3c6d, 0xcba7, 0xaa20, 0x59fb, 0xecc0, 0x86a5, 0x0, 0x0);
        gbc.writeMem(0x3c6d, { 0x72 });
        gbc.writeMem(0x86a5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcba7);
        EXPECT(gbc.pc(), 0x3c6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a5), 0xec);
        // 72 00C4
        gbc.setState(0x7b56, 0xf4e5, 0xd120, 0x7314, 0x7ccf, 0x9e50, 0x1, 0x1);
        gbc.writeMem(0x7b56, { 0x72 });
        gbc.writeMem(0x9e50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf4e5);
        EXPECT(gbc.pc(), 0x7b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e50), 0x7c);
        // 72 00C5
        gbc.setState(0xcf3d, 0x5924, 0xdf60, 0x5227, 0x88af, 0xe016, 0x1, 0x1);
        gbc.writeMem(0xcf3d, { 0x72 });
        gbc.writeMem(0xe016, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5924);
        EXPECT(gbc.pc(), 0xcf3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf3d), 0x72);
        EXPECT(gbc.readMem(0xe016), 0x88);
        // 72 00C6
        gbc.setState(0x56d0, 0x518c, 0xc70, 0x4ba, 0x50ea, 0x8765, 0x1, 0x1);
        gbc.writeMem(0x56d0, { 0x72 });
        gbc.writeMem(0x8765, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x518c);
        EXPECT(gbc.pc(), 0x56d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8765), 0x50);
        // 72 00C7
        gbc.setState(0x9c24, 0x94a3, 0xd180, 0x65dd, 0xec4d, 0xe52e, 0x1, 0x1);
        gbc.writeMem(0x9c24, { 0x72 });
        gbc.writeMem(0xe52e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x94a3);
        EXPECT(gbc.pc(), 0x9c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c24), 0x72);
        EXPECT(gbc.readMem(0xe52e), 0xec);
        // 72 00CA
        gbc.setState(0xd7a2, 0x293d, 0x17e0, 0xbe83, 0x79ea, 0x87b4, 0x1, 0x1);
        gbc.writeMem(0x87b4, { 0x0 });
        gbc.writeMem(0xd7a2, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x293d);
        EXPECT(gbc.pc(), 0xd7a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b4), 0x79);
        EXPECT(gbc.readMem(0xd7a2), 0x72);
        // 72 00CB
        gbc.setState(0x51c9, 0x2756, 0xb180, 0x523e, 0x55d, 0x99b5, 0x1, 0x0);
        gbc.writeMem(0x51c9, { 0x72 });
        gbc.writeMem(0x99b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2756);
        EXPECT(gbc.pc(), 0x51ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99b5), 0x5);
        // 72 00CD
        gbc.setState(0x80d6, 0x5fd4, 0xe860, 0x2c7, 0x6fca, 0x8c1f, 0x0, 0x1);
        gbc.writeMem(0x80d6, { 0x72 });
        gbc.writeMem(0x8c1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5fd4);
        EXPECT(gbc.pc(), 0x80d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d6), 0x72);
        EXPECT(gbc.readMem(0x8c1f), 0x6f);
        // 72 00CE
        gbc.setState(0xd124, 0xdfb0, 0x6c40, 0xb411, 0x4961, 0xe1ba, 0x0, 0x0);
        gbc.writeMem(0xd124, { 0x72 });
        gbc.writeMem(0xe1ba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xdfb0);
        EXPECT(gbc.pc(), 0xd125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd124), 0x72);
        EXPECT(gbc.readMem(0xe1ba), 0x49);
        // 72 00D2
        gbc.setState(0x476c, 0x939, 0xeb60, 0xafe0, 0xf83f, 0x9ad6, 0x0, 0x1);
        gbc.writeMem(0x476c, { 0x72 });
        gbc.writeMem(0x9ad6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x939);
        EXPECT(gbc.pc(), 0x476d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad6), 0xf8);
        // 72 00D3
        gbc.setState(0x2fb2, 0x5fb6, 0x9ed0, 0x7197, 0xb62a, 0xb18d, 0x0, 0x1);
        gbc.writeMem(0x2fb2, { 0x72 });
        gbc.writeMem(0xb18d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5fb6);
        EXPECT(gbc.pc(), 0x2fb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18d), 0xb6);
        // 72 00D4
        gbc.setState(0x8b76, 0xd49d, 0x850, 0x2ea7, 0x7648, 0xc433, 0x0, 0x1);
        gbc.writeMem(0x8b76, { 0x72 });
        gbc.writeMem(0xc433, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd49d);
        EXPECT(gbc.pc(), 0x8b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b76), 0x72);
        EXPECT(gbc.readMem(0xc433), 0x76);
        // 72 00D5
        gbc.setState(0x5032, 0x6158, 0xba50, 0x6d87, 0xd119, 0x8220, 0x0, 0x0);
        gbc.writeMem(0x5032, { 0x72 });
        gbc.writeMem(0x8220, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6158);
        EXPECT(gbc.pc(), 0x5033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8220), 0xd1);
        // 72 00D6
        gbc.setState(0xb295, 0xaadc, 0x9440, 0x96e1, 0x422f, 0xe00e, 0x1, 0x0);
        gbc.writeMem(0xb295, { 0x72 });
        gbc.writeMem(0xe00e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xaadc);
        EXPECT(gbc.pc(), 0xb296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb295), 0x72);
        EXPECT(gbc.readMem(0xe00e), 0x42);
        // 72 00DB
        gbc.setState(0x9c5a, 0xeeed, 0xa080, 0x9b74, 0xec0e, 0xfcf3, 0x0, 0x1);
        gbc.writeMem(0x9c5a, { 0x72 });
        gbc.writeMem(0xfcf3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xeeed);
        EXPECT(gbc.pc(), 0x9c5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c5a), 0x72);
        EXPECT(gbc.readMem(0xfcf3), 0xec);
        // 72 00DD
        gbc.setState(0x924d, 0x487b, 0x82e0, 0xf3ac, 0x62c2, 0xa4a0, 0x1, 0x1);
        gbc.writeMem(0x924d, { 0x72 });
        gbc.writeMem(0xa4a0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x487b);
        EXPECT(gbc.pc(), 0x924e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x924d), 0x72);
        EXPECT(gbc.readMem(0xa4a0), 0x62);
        // 72 00DF
        gbc.setState(0xd9a4, 0x3b27, 0x2d90, 0x9024, 0x9506, 0xd5ba, 0x0, 0x0);
        gbc.writeMem(0xd5ba, { 0x0 });
        gbc.writeMem(0xd9a4, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3b27);
        EXPECT(gbc.pc(), 0xd9a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ba), 0x95);
        EXPECT(gbc.readMem(0xd9a4), 0x72);
        // 72 00E1
        gbc.setState(0xe898, 0xee15, 0x54f0, 0x2efb, 0xe2, 0x8d21, 0x0, 0x1);
        gbc.writeMem(0x8d21, { 0x0 });
        gbc.writeMem(0xe898, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xee15);
        EXPECT(gbc.pc(), 0xe899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d21), 0x0);
        EXPECT(gbc.readMem(0xe898), 0x72);
        // 72 00E2
        gbc.setState(0x2a8, 0x7a51, 0x12f0, 0x903c, 0x9e09, 0xb025, 0x1, 0x1);
        gbc.writeMem(0x2a8, { 0x72 });
        gbc.writeMem(0xb025, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7a51);
        EXPECT(gbc.pc(), 0x2a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb025), 0x9e);
        // 72 00E3
        gbc.setState(0x8915, 0x87e, 0xa7d0, 0xff5a, 0xffc6, 0x8efd, 0x0, 0x1);
        gbc.writeMem(0x8915, { 0x72 });
        gbc.writeMem(0x8efd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x87e);
        EXPECT(gbc.pc(), 0x8916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8915), 0x72);
        EXPECT(gbc.readMem(0x8efd), 0xff);
        // 72 00E9
        gbc.setState(0x3125, 0xbfd6, 0xcef0, 0x33c1, 0xef6b, 0xa4ce, 0x0, 0x0);
        gbc.writeMem(0x3125, { 0x72 });
        gbc.writeMem(0xa4ce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbfd6);
        EXPECT(gbc.pc(), 0x3126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ce), 0xef);
        // 72 00ED
        gbc.setState(0xbbe7, 0x6bc5, 0x4350, 0x573, 0xec06, 0xad78, 0x0, 0x1);
        gbc.writeMem(0xad78, { 0x0 });
        gbc.writeMem(0xbbe7, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6bc5);
        EXPECT(gbc.pc(), 0xbbe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad78), 0xec);
        EXPECT(gbc.readMem(0xbbe7), 0x72);
        // 72 00EE
        gbc.setState(0x596d, 0xd65, 0x9650, 0x7b1b, 0x2407, 0xa671, 0x1, 0x0);
        gbc.writeMem(0x596d, { 0x72 });
        gbc.writeMem(0xa671, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd65);
        EXPECT(gbc.pc(), 0x596e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa671), 0x24);
        // 72 00F0
        gbc.setState(0xc650, 0xdf67, 0xa2e0, 0xe41c, 0xb55a, 0xd8bc, 0x0, 0x1);
        gbc.writeMem(0xc650, { 0x72 });
        gbc.writeMem(0xd8bc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdf67);
        EXPECT(gbc.pc(), 0xc651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc650), 0x72);
        EXPECT(gbc.readMem(0xd8bc), 0xb5);
        // 72 00F1
        gbc.setState(0x5eea, 0xa673, 0xc3a0, 0x2757, 0xf52f, 0xf381, 0x0, 0x0);
        gbc.writeMem(0x5eea, { 0x72 });
        gbc.writeMem(0xf381, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa673);
        EXPECT(gbc.pc(), 0x5eeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf381), 0xf5);
        // 72 00F2
        gbc.setState(0x9769, 0x3287, 0xe80, 0x811b, 0x4479, 0xd786, 0x1, 0x1);
        gbc.writeMem(0x9769, { 0x72 });
        gbc.writeMem(0xd786, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3287);
        EXPECT(gbc.pc(), 0x976a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9769), 0x72);
        EXPECT(gbc.readMem(0xd786), 0x44);
        // 72 00F3
        gbc.setState(0x157c, 0x1984, 0x9770, 0xe825, 0x285, 0x8ce7, 0x1, 0x0);
        gbc.writeMem(0x157c, { 0x72 });
        gbc.writeMem(0x8ce7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1984);
        EXPECT(gbc.pc(), 0x157d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce7), 0x2);
        // 72 00F5
        gbc.setState(0x35c9, 0x550f, 0x7830, 0x4c3e, 0xf049, 0xa895, 0x1, 0x1);
        gbc.writeMem(0x35c9, { 0x72 });
        gbc.writeMem(0xa895, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x550f);
        EXPECT(gbc.pc(), 0x35ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa895), 0xf0);
        // 72 00F6
        gbc.setState(0x3776, 0x1801, 0xd190, 0xbb46, 0x8662, 0xd89c, 0x0, 0x0);
        gbc.writeMem(0x3776, { 0x72 });
        gbc.writeMem(0xd89c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1801);
        EXPECT(gbc.pc(), 0x3777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89c), 0x86);
        // 72 00F7
        gbc.setState(0x12a6, 0x7ac5, 0xbda0, 0x6209, 0xba8c, 0xd909, 0x1, 0x1);
        gbc.writeMem(0x12a6, { 0x72 });
        gbc.writeMem(0xd909, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7ac5);
        EXPECT(gbc.pc(), 0x12a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd909), 0xba);
        // 72 00F8
        gbc.setState(0xdb24, 0xc1e0, 0x9f0, 0x72b, 0x447b, 0xd808, 0x0, 0x1);
        gbc.writeMem(0xd808, { 0x0 });
        gbc.writeMem(0xdb24, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc1e0);
        EXPECT(gbc.pc(), 0xdb25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd808), 0x44);
        EXPECT(gbc.readMem(0xdb24), 0x72);
        // 72 00F9
        gbc.setState(0x7377, 0xdad5, 0x1f40, 0x45ae, 0xa88, 0xc9e3, 0x1, 0x1);
        gbc.writeMem(0x7377, { 0x72 });
        gbc.writeMem(0xc9e3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xdad5);
        EXPECT(gbc.pc(), 0x7378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9e3), 0xa);
        // 72 00FA
        gbc.setState(0x24c2, 0xe198, 0x4bb0, 0xfa1d, 0xbc31, 0xbf91, 0x0, 0x0);
        gbc.writeMem(0x24c2, { 0x72 });
        gbc.writeMem(0xbf91, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe198);
        EXPECT(gbc.pc(), 0x24c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf91), 0xbc);
        // 72 00FC
        gbc.setState(0x6489, 0x8c1a, 0xa3f0, 0xecbb, 0x637, 0xf0d2, 0x0, 0x0);
        gbc.writeMem(0x6489, { 0x72 });
        gbc.writeMem(0xf0d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8c1a);
        EXPECT(gbc.pc(), 0x648a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf0d2), 0x6);
        // 72 00FD
        gbc.setState(0x276b, 0x376c, 0xd350, 0x644, 0xd3f3, 0xad5b, 0x1, 0x1);
        gbc.writeMem(0x276b, { 0x72 });
        gbc.writeMem(0xad5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x376c);
        EXPECT(gbc.pc(), 0x276c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad5b), 0xd3);
        // 72 0101
        gbc.setState(0x4d41, 0xf034, 0x9af0, 0x371f, 0x796, 0xe340, 0x1, 0x0);
        gbc.writeMem(0x4d41, { 0x72 });
        gbc.writeMem(0xe340, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf034);
        EXPECT(gbc.pc(), 0x4d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe340), 0x7);
        // 72 0102
        gbc.setState(0xea4c, 0xe299, 0xf2a0, 0x87a8, 0xd79c, 0xe3a4, 0x1, 0x1);
        gbc.writeMem(0xe3a4, { 0x0 });
        gbc.writeMem(0xea4c, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe299);
        EXPECT(gbc.pc(), 0xea4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a4), 0xd7);
        EXPECT(gbc.readMem(0xea4c), 0x72);
        // 72 0103
        gbc.setState(0xab03, 0x450d, 0xfbc0, 0xae6, 0xdc9e, 0x807d, 0x1, 0x1);
        gbc.writeMem(0x807d, { 0x0 });
        gbc.writeMem(0xab03, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x450d);
        EXPECT(gbc.pc(), 0xab04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807d), 0xdc);
        EXPECT(gbc.readMem(0xab03), 0x72);
        // 72 0104
        gbc.setState(0x33f0, 0x7e9a, 0x8af0, 0x4d2, 0x549, 0xedec, 0x1, 0x1);
        gbc.writeMem(0x33f0, { 0x72 });
        gbc.writeMem(0xedec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7e9a);
        EXPECT(gbc.pc(), 0x33f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedec), 0x5);
        // 72 0107
        gbc.setState(0xd4ed, 0x9761, 0x6b70, 0xe3e, 0x787f, 0x9030, 0x0, 0x0);
        gbc.writeMem(0x9030, { 0x0 });
        gbc.writeMem(0xd4ed, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9761);
        EXPECT(gbc.pc(), 0xd4ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9030), 0x78);
        EXPECT(gbc.readMem(0xd4ed), 0x72);
        // 72 0108
        gbc.setState(0x3274, 0x3a92, 0x3890, 0xf973, 0x8e17, 0xcf85, 0x1, 0x1);
        gbc.writeMem(0x3274, { 0x72 });
        gbc.writeMem(0xcf85, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3a92);
        EXPECT(gbc.pc(), 0x3275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf85), 0x8e);
        // 72 0109
        gbc.setState(0x3773, 0x782a, 0x36f0, 0x5e53, 0xdd66, 0xe11d, 0x1, 0x1);
        gbc.writeMem(0x3773, { 0x72 });
        gbc.writeMem(0xe11d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x782a);
        EXPECT(gbc.pc(), 0x3774);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe11d), 0xdd);
        // 72 010C
        gbc.setState(0x381f, 0x57e9, 0x2540, 0x1a1e, 0xd9b6, 0xc329, 0x0, 0x0);
        gbc.writeMem(0x381f, { 0x72 });
        gbc.writeMem(0xc329, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x57e9);
        EXPECT(gbc.pc(), 0x3820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc329), 0xd9);
        // 72 010D
        gbc.setState(0x50d8, 0xb34d, 0x54f0, 0xa64c, 0x9965, 0x8e00, 0x1, 0x1);
        gbc.writeMem(0x50d8, { 0x72 });
        gbc.writeMem(0x8e00, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb34d);
        EXPECT(gbc.pc(), 0x50d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e00), 0x99);
        // 72 010E
        gbc.setState(0x4cdf, 0xc659, 0xc800, 0xdb25, 0x3aa1, 0xaf80, 0x0, 0x1);
        gbc.writeMem(0x4cdf, { 0x72 });
        gbc.writeMem(0xaf80, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc659);
        EXPECT(gbc.pc(), 0x4ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf80), 0x3a);
        // 72 0110
        gbc.setState(0xa18c, 0xe7ea, 0xda90, 0x2a2f, 0x5b53, 0xa44a, 0x1, 0x0);
        gbc.writeMem(0xa18c, { 0x72 });
        gbc.writeMem(0xa44a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe7ea);
        EXPECT(gbc.pc(), 0xa18d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa18c), 0x72);
        EXPECT(gbc.readMem(0xa44a), 0x5b);
        // 72 0112
        gbc.setState(0xa4d4, 0x82af, 0xd1a0, 0x7160, 0x4ec3, 0xc88a, 0x0, 0x0);
        gbc.writeMem(0xa4d4, { 0x72 });
        gbc.writeMem(0xc88a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x82af);
        EXPECT(gbc.pc(), 0xa4d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4d4), 0x72);
        EXPECT(gbc.readMem(0xc88a), 0x4e);
        // 72 0115
        gbc.setState(0x9a7d, 0x6402, 0x8bd0, 0x3b0f, 0xe25c, 0xa206, 0x0, 0x0);
        gbc.writeMem(0x9a7d, { 0x72 });
        gbc.writeMem(0xa206, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6402);
        EXPECT(gbc.pc(), 0x9a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a7d), 0x72);
        EXPECT(gbc.readMem(0xa206), 0xe2);
        // 72 0116
        gbc.setState(0x510a, 0xef84, 0x7a00, 0xdd24, 0xae1a, 0xeff4, 0x1, 0x0);
        gbc.writeMem(0x510a, { 0x72 });
        gbc.writeMem(0xeff4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xef84);
        EXPECT(gbc.pc(), 0x510b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff4), 0xae);
        // 72 0118
        gbc.setState(0xa2b4, 0xa8d0, 0x6480, 0xff8a, 0xf465, 0xaf15, 0x0, 0x0);
        gbc.writeMem(0xa2b4, { 0x72 });
        gbc.writeMem(0xaf15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa8d0);
        EXPECT(gbc.pc(), 0xa2b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b4), 0x72);
        EXPECT(gbc.readMem(0xaf15), 0xf4);
        // 72 0119
        gbc.setState(0x7ac3, 0x2937, 0x1f30, 0x26f2, 0xb519, 0x9929, 0x1, 0x1);
        gbc.writeMem(0x7ac3, { 0x72 });
        gbc.writeMem(0x9929, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2937);
        EXPECT(gbc.pc(), 0x7ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9929), 0xb5);
        // 72 011C
        gbc.setState(0xe578, 0x91d7, 0x5bb0, 0x7d71, 0x2b51, 0xc8b3, 0x0, 0x0);
        gbc.writeMem(0xc8b3, { 0x0 });
        gbc.writeMem(0xe578, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x91d7);
        EXPECT(gbc.pc(), 0xe579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b3), 0x2b);
        EXPECT(gbc.readMem(0xe578), 0x72);
        // 72 011D
        gbc.setState(0xc2eb, 0x87fa, 0xa70, 0x5513, 0x9c76, 0xf0f5, 0x1, 0x0);
        gbc.writeMem(0xc2eb, { 0x72 });
        gbc.writeMem(0xf0f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x87fa);
        EXPECT(gbc.pc(), 0xc2ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2eb), 0x72);
        EXPECT(gbc.readMem(0xf0f5), 0x9c);
        // 72 011E
        gbc.setState(0xcb75, 0x251a, 0xb200, 0xc088, 0xd02b, 0x8507, 0x0, 0x1);
        gbc.writeMem(0x8507, { 0x0 });
        gbc.writeMem(0xcb75, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x251a);
        EXPECT(gbc.pc(), 0xcb76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8507), 0xd0);
        EXPECT(gbc.readMem(0xcb75), 0x72);
        // 72 011F
        gbc.setState(0xc45b, 0x6d56, 0x98b0, 0x9d8c, 0xd497, 0xa817, 0x1, 0x0);
        gbc.writeMem(0xa817, { 0x0 });
        gbc.writeMem(0xc45b, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6d56);
        EXPECT(gbc.pc(), 0xc45c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa817), 0xd4);
        EXPECT(gbc.readMem(0xc45b), 0x72);
        // 72 0120
        gbc.setState(0x2f64, 0xf724, 0xab40, 0xf8e8, 0x74d3, 0xeda5, 0x0, 0x0);
        gbc.writeMem(0x2f64, { 0x72 });
        gbc.writeMem(0xeda5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf724);
        EXPECT(gbc.pc(), 0x2f65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda5), 0x74);
        // 72 0121
        gbc.setState(0x1c86, 0xaf67, 0xfed0, 0xdf, 0xd0db, 0x8b5f, 0x1, 0x1);
        gbc.writeMem(0x1c86, { 0x72 });
        gbc.writeMem(0x8b5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xaf67);
        EXPECT(gbc.pc(), 0x1c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5f), 0xd0);
        // 72 0122
        gbc.setState(0xbc4f, 0x6a9, 0x3640, 0x2474, 0x35c9, 0x8d33, 0x0, 0x1);
        gbc.writeMem(0x8d33, { 0x0 });
        gbc.writeMem(0xbc4f, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6a9);
        EXPECT(gbc.pc(), 0xbc50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d33), 0x35);
        EXPECT(gbc.readMem(0xbc4f), 0x72);
        // 72 0126
        gbc.setState(0x6b31, 0x1bf4, 0xfb0, 0x3b94, 0x45a, 0xb324, 0x1, 0x0);
        gbc.writeMem(0x6b31, { 0x72 });
        gbc.writeMem(0xb324, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1bf4);
        EXPECT(gbc.pc(), 0x6b32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb324), 0x4);
        // 72 0128
        gbc.setState(0xb4dc, 0x6d8, 0xae20, 0xf8be, 0xe367, 0xa9eb, 0x1, 0x0);
        gbc.writeMem(0xa9eb, { 0x0 });
        gbc.writeMem(0xb4dc, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6d8);
        EXPECT(gbc.pc(), 0xb4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9eb), 0xe3);
        EXPECT(gbc.readMem(0xb4dc), 0x72);
        // 72 0129
        gbc.setState(0xa13a, 0x8314, 0xe500, 0x31e8, 0x10bc, 0x8e91, 0x1, 0x0);
        gbc.writeMem(0x8e91, { 0x0 });
        gbc.writeMem(0xa13a, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8314);
        EXPECT(gbc.pc(), 0xa13b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e91), 0x10);
        EXPECT(gbc.readMem(0xa13a), 0x72);
        // 72 012A
        gbc.setState(0x7b4d, 0xdd26, 0xdd10, 0xc09a, 0x4237, 0xa80e, 0x0, 0x1);
        gbc.writeMem(0x7b4d, { 0x72 });
        gbc.writeMem(0xa80e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdd26);
        EXPECT(gbc.pc(), 0x7b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa80e), 0x42);
        // 72 012C
        gbc.setState(0xa6be, 0x91a8, 0xb330, 0xd52f, 0x7910, 0x8acb, 0x0, 0x0);
        gbc.writeMem(0x8acb, { 0x0 });
        gbc.writeMem(0xa6be, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x91a8);
        EXPECT(gbc.pc(), 0xa6bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8acb), 0x79);
        EXPECT(gbc.readMem(0xa6be), 0x72);
        // 72 012F
        gbc.setState(0x37d8, 0x2026, 0x6820, 0x3e9c, 0xaf7f, 0xa5f7, 0x1, 0x0);
        gbc.writeMem(0x37d8, { 0x72 });
        gbc.writeMem(0xa5f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2026);
        EXPECT(gbc.pc(), 0x37d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f7), 0xaf);
        // 72 0130
        gbc.setState(0x5103, 0x67e7, 0x5c30, 0xce81, 0x91e5, 0xa5c8, 0x1, 0x0);
        gbc.writeMem(0x5103, { 0x72 });
        gbc.writeMem(0xa5c8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x67e7);
        EXPECT(gbc.pc(), 0x5104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c8), 0x91);
        // 72 0133
        gbc.setState(0x7562, 0x3769, 0x6c00, 0x97b8, 0x4c12, 0x8e3a, 0x0, 0x0);
        gbc.writeMem(0x7562, { 0x72 });
        gbc.writeMem(0x8e3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3769);
        EXPECT(gbc.pc(), 0x7563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3a), 0x4c);
        // 72 0137
        gbc.setState(0x37fa, 0x2928, 0xdcf0, 0x92b1, 0x7625, 0xed5f, 0x0, 0x0);
        gbc.writeMem(0x37fa, { 0x72 });
        gbc.writeMem(0xed5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2928);
        EXPECT(gbc.pc(), 0x37fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed5f), 0x76);
        // 72 013D
        gbc.setState(0x72f2, 0xc50a, 0x27b0, 0x5c2b, 0xeff9, 0xb734, 0x0, 0x1);
        gbc.writeMem(0x72f2, { 0x72 });
        gbc.writeMem(0xb734, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc50a);
        EXPECT(gbc.pc(), 0x72f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb734), 0xef);
        // 72 013F
        gbc.setState(0x60e7, 0x1b2d, 0x9d30, 0x1445, 0x77f6, 0xefef, 0x1, 0x1);
        gbc.writeMem(0x60e7, { 0x72 });
        gbc.writeMem(0xefef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1b2d);
        EXPECT(gbc.pc(), 0x60e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefef), 0x77);
        // 72 0140
        gbc.setState(0x8998, 0xc52e, 0x81e0, 0xb8aa, 0xb0bf, 0x886e, 0x1, 0x1);
        gbc.writeMem(0x886e, { 0x0 });
        gbc.writeMem(0x8998, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc52e);
        EXPECT(gbc.pc(), 0x8999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886e), 0xb0);
        EXPECT(gbc.readMem(0x8998), 0x72);
        // 72 0144
        gbc.setState(0x4cd3, 0x6a42, 0x70c0, 0x923a, 0xb6ac, 0xa324, 0x0, 0x0);
        gbc.writeMem(0x4cd3, { 0x72 });
        gbc.writeMem(0xa324, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6a42);
        EXPECT(gbc.pc(), 0x4cd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa324), 0xb6);
        // 72 0146
        gbc.setState(0x9054, 0xbf81, 0x17b0, 0x8ba3, 0x11c2, 0xc6d4, 0x0, 0x0);
        gbc.writeMem(0x9054, { 0x72 });
        gbc.writeMem(0xc6d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbf81);
        EXPECT(gbc.pc(), 0x9055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9054), 0x72);
        EXPECT(gbc.readMem(0xc6d4), 0x11);
        // 72 0149
        gbc.setState(0x9d17, 0x3ecd, 0x1b30, 0xa582, 0xf4b0, 0xe758, 0x0, 0x0);
        gbc.writeMem(0x9d17, { 0x72 });
        gbc.writeMem(0xe758, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3ecd);
        EXPECT(gbc.pc(), 0x9d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d17), 0x72);
        EXPECT(gbc.readMem(0xe758), 0xf4);
        // 72 0152
        gbc.setState(0x8cc0, 0xe2bf, 0xa400, 0xbac7, 0xa5a5, 0xa57a, 0x0, 0x0);
        gbc.writeMem(0x8cc0, { 0x72 });
        gbc.writeMem(0xa57a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe2bf);
        EXPECT(gbc.pc(), 0x8cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cc0), 0x72);
        EXPECT(gbc.readMem(0xa57a), 0xa5);
        // 72 0153
        gbc.setState(0xa241, 0xa896, 0x86d0, 0x2ba6, 0x899d, 0xac2a, 0x0, 0x1);
        gbc.writeMem(0xa241, { 0x72 });
        gbc.writeMem(0xac2a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa896);
        EXPECT(gbc.pc(), 0xa242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa241), 0x72);
        EXPECT(gbc.readMem(0xac2a), 0x89);
        // 72 0155
        gbc.setState(0xdb60, 0x3239, 0x8e50, 0xd969, 0x5145, 0xaa5e, 0x1, 0x0);
        gbc.writeMem(0xaa5e, { 0x0 });
        gbc.writeMem(0xdb60, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3239);
        EXPECT(gbc.pc(), 0xdb61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa5e), 0x51);
        EXPECT(gbc.readMem(0xdb60), 0x72);
        // 72 0157
        gbc.setState(0xd433, 0x60f2, 0x9240, 0x5241, 0xcb19, 0xccda, 0x1, 0x0);
        gbc.writeMem(0xccda, { 0x0 });
        gbc.writeMem(0xd433, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x60f2);
        EXPECT(gbc.pc(), 0xd434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccda), 0xcb);
        EXPECT(gbc.readMem(0xd433), 0x72);
        // 72 0159
        gbc.setState(0x31fe, 0x89c4, 0x3010, 0xe70, 0x5796, 0xab54, 0x0, 0x0);
        gbc.writeMem(0x31fe, { 0x72 });
        gbc.writeMem(0xab54, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x89c4);
        EXPECT(gbc.pc(), 0x31ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab54), 0x57);
        // 72 015A
        gbc.setState(0x6561, 0x5c7f, 0x3f30, 0x8eb7, 0x2c00, 0x92a9, 0x0, 0x1);
        gbc.writeMem(0x6561, { 0x72 });
        gbc.writeMem(0x92a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5c7f);
        EXPECT(gbc.pc(), 0x6562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a9), 0x2c);
        // 72 015C
        gbc.setState(0x43f, 0xafaf, 0xe3a0, 0x13d3, 0x4cb1, 0xbc11, 0x1, 0x0);
        gbc.writeMem(0x43f, { 0x72 });
        gbc.writeMem(0xbc11, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xafaf);
        EXPECT(gbc.pc(), 0x440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc11), 0x4c);
        // 72 015F
        gbc.setState(0xe8d9, 0x5566, 0x7570, 0xd1de, 0x3b4, 0xfd09, 0x1, 0x1);
        gbc.writeMem(0xe8d9, { 0x72 });
        gbc.writeMem(0xfd09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5566);
        EXPECT(gbc.pc(), 0xe8da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8d9), 0x72);
        EXPECT(gbc.readMem(0xfd09), 0x3);
        // 72 0163
        gbc.setState(0x76c6, 0xa5c, 0x63a0, 0x7f47, 0x8b09, 0xdbc2, 0x1, 0x1);
        gbc.writeMem(0x76c6, { 0x72 });
        gbc.writeMem(0xdbc2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa5c);
        EXPECT(gbc.pc(), 0x76c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc2), 0x8b);
        // 72 0164
        gbc.setState(0x5b00, 0xd000, 0xfec0, 0x339b, 0xa71e, 0xf4b1, 0x0, 0x1);
        gbc.writeMem(0x5b00, { 0x72 });
        gbc.writeMem(0xf4b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd000);
        EXPECT(gbc.pc(), 0x5b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4b1), 0xa7);
        // 72 0165
        gbc.setState(0x5df1, 0x5cb7, 0xf330, 0x1069, 0x91c4, 0x8d44, 0x0, 0x1);
        gbc.writeMem(0x5df1, { 0x72 });
        gbc.writeMem(0x8d44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5cb7);
        EXPECT(gbc.pc(), 0x5df2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d44), 0x91);
        // 72 0168
        gbc.setState(0x7418, 0x9575, 0x3a90, 0x2b70, 0xed75, 0xb1e4, 0x0, 0x1);
        gbc.writeMem(0x7418, { 0x72 });
        gbc.writeMem(0xb1e4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9575);
        EXPECT(gbc.pc(), 0x7419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e4), 0xed);
        // 72 0169
        gbc.setState(0xa3a4, 0xcf62, 0x4020, 0xf027, 0xdbc6, 0x9df1, 0x1, 0x1);
        gbc.writeMem(0x9df1, { 0x0 });
        gbc.writeMem(0xa3a4, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcf62);
        EXPECT(gbc.pc(), 0xa3a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df1), 0xdb);
        EXPECT(gbc.readMem(0xa3a4), 0x72);
        // 72 016A
        gbc.setState(0xdf29, 0x1551, 0x9020, 0x3b84, 0x49a0, 0xeafe, 0x1, 0x1);
        gbc.writeMem(0xdf29, { 0x72 });
        gbc.writeMem(0xeafe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1551);
        EXPECT(gbc.pc(), 0xdf2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf29), 0x72);
        EXPECT(gbc.readMem(0xeafe), 0x49);
        // 72 016B
        gbc.setState(0x5753, 0x3197, 0xd460, 0xbf96, 0x3c83, 0xe898, 0x0, 0x1);
        gbc.writeMem(0x5753, { 0x72 });
        gbc.writeMem(0xe898, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3197);
        EXPECT(gbc.pc(), 0x5754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe898), 0x3c);
        // 72 016D
        gbc.setState(0xebe4, 0x7e3e, 0x5c70, 0xe957, 0x177, 0xc691, 0x1, 0x0);
        gbc.writeMem(0xc691, { 0x0 });
        gbc.writeMem(0xebe4, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7e3e);
        EXPECT(gbc.pc(), 0xebe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc691), 0x1);
        EXPECT(gbc.readMem(0xebe4), 0x72);
        // 72 0175
        gbc.setState(0x3890, 0x638f, 0x3730, 0xd8d4, 0xa14b, 0xe204, 0x1, 0x0);
        gbc.writeMem(0x3890, { 0x72 });
        gbc.writeMem(0xe204, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x638f);
        EXPECT(gbc.pc(), 0x3891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe204), 0xa1);
        // 72 0176
        gbc.setState(0xbe85, 0xdb9a, 0xcdd0, 0x96c3, 0x611a, 0xd556, 0x1, 0x1);
        gbc.writeMem(0xbe85, { 0x72 });
        gbc.writeMem(0xd556, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdb9a);
        EXPECT(gbc.pc(), 0xbe86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe85), 0x72);
        EXPECT(gbc.readMem(0xd556), 0x61);
        // 72 0177
        gbc.setState(0x3336, 0x4c8a, 0x3c0, 0x365d, 0x19f, 0x8d21, 0x1, 0x1);
        gbc.writeMem(0x3336, { 0x72 });
        gbc.writeMem(0x8d21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4c8a);
        EXPECT(gbc.pc(), 0x3337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d21), 0x1);
        // 72 0179
        gbc.setState(0x9521, 0x253f, 0x8af0, 0x6538, 0xb30a, 0x98c2, 0x1, 0x1);
        gbc.writeMem(0x9521, { 0x72 });
        gbc.writeMem(0x98c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x253f);
        EXPECT(gbc.pc(), 0x9522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9521), 0x72);
        EXPECT(gbc.readMem(0x98c2), 0xb3);
        // 72 017A
        gbc.setState(0xa0a4, 0x4ec8, 0x11d0, 0x8c73, 0xdbdb, 0xc07d, 0x0, 0x1);
        gbc.writeMem(0xa0a4, { 0x72 });
        gbc.writeMem(0xc07d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4ec8);
        EXPECT(gbc.pc(), 0xa0a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a4), 0x72);
        EXPECT(gbc.readMem(0xc07d), 0xdb);
        // 72 017C
        gbc.setState(0x999b, 0x6347, 0xea50, 0xc3f, 0x6763, 0xfec3, 0x1, 0x1);
        gbc.writeMem(0x999b, { 0x72 });
        gbc.writeMem(0xfec3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6347);
        EXPECT(gbc.pc(), 0x999c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x999b), 0x72);
        EXPECT(gbc.readMem(0xfec3), 0x67);
        // 72 017E
        gbc.setState(0x1d10, 0x6c48, 0x2ca0, 0xdf4b, 0x107f, 0xa82f, 0x1, 0x0);
        gbc.writeMem(0x1d10, { 0x72 });
        gbc.writeMem(0xa82f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6c48);
        EXPECT(gbc.pc(), 0x1d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82f), 0x10);
        // 72 0188
        gbc.setState(0x9008, 0x2960, 0xf150, 0x52a7, 0x2690, 0xa50f, 0x1, 0x0);
        gbc.writeMem(0x9008, { 0x72 });
        gbc.writeMem(0xa50f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2960);
        EXPECT(gbc.pc(), 0x9009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9008), 0x72);
        EXPECT(gbc.readMem(0xa50f), 0x26);
        // 72 018B
        gbc.setState(0xe216, 0x4fff, 0xa970, 0xb760, 0x4731, 0xa762, 0x1, 0x0);
        gbc.writeMem(0xa762, { 0x0 });
        gbc.writeMem(0xe216, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4fff);
        EXPECT(gbc.pc(), 0xe217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa762), 0x47);
        EXPECT(gbc.readMem(0xe216), 0x72);
        // 72 018F
        gbc.setState(0x137, 0x9996, 0x2de0, 0x93c7, 0x4123, 0x9331, 0x1, 0x0);
        gbc.writeMem(0x137, { 0x72 });
        gbc.writeMem(0x9331, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9996);
        EXPECT(gbc.pc(), 0x138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9331), 0x41);
        // 72 0192
        gbc.setState(0xe0e7, 0x30ae, 0x9c20, 0xca2e, 0xcd98, 0x89f7, 0x0, 0x0);
        gbc.writeMem(0x89f7, { 0x0 });
        gbc.writeMem(0xe0e7, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x30ae);
        EXPECT(gbc.pc(), 0xe0e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f7), 0xcd);
        EXPECT(gbc.readMem(0xe0e7), 0x72);
        // 72 0193
        gbc.setState(0x7e77, 0xc272, 0x33d0, 0x450, 0x558b, 0xb76c, 0x1, 0x1);
        gbc.writeMem(0x7e77, { 0x72 });
        gbc.writeMem(0xb76c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc272);
        EXPECT(gbc.pc(), 0x7e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb76c), 0x55);
        // 72 0194
        gbc.setState(0x316b, 0xdf09, 0xc1c0, 0x1b40, 0xd5fe, 0xbf97, 0x0, 0x0);
        gbc.writeMem(0x316b, { 0x72 });
        gbc.writeMem(0xbf97, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdf09);
        EXPECT(gbc.pc(), 0x316c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf97), 0xd5);
        // 72 0195
        gbc.setState(0x8b2f, 0x55bd, 0x9600, 0xeda6, 0x58e2, 0xceec, 0x1, 0x0);
        gbc.writeMem(0x8b2f, { 0x72 });
        gbc.writeMem(0xceec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x55bd);
        EXPECT(gbc.pc(), 0x8b30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2f), 0x72);
        EXPECT(gbc.readMem(0xceec), 0x58);
        // 72 0198
        gbc.setState(0x6470, 0x915e, 0xe8b0, 0x7460, 0x4f84, 0xfe09, 0x1, 0x0);
        gbc.writeMem(0x6470, { 0x72 });
        gbc.writeMem(0xfe09, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x915e);
        EXPECT(gbc.pc(), 0x6471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe09), 0x4f);
        // 72 0199
        gbc.setState(0xac01, 0x3e29, 0xf830, 0x23f1, 0x2745, 0xa442, 0x1, 0x0);
        gbc.writeMem(0xa442, { 0x0 });
        gbc.writeMem(0xac01, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3e29);
        EXPECT(gbc.pc(), 0xac02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa442), 0x27);
        EXPECT(gbc.readMem(0xac01), 0x72);
        // 72 019B
        gbc.setState(0x4e8e, 0xbd17, 0xafe0, 0x12c3, 0x6452, 0xe9eb, 0x1, 0x0);
        gbc.writeMem(0x4e8e, { 0x72 });
        gbc.writeMem(0xe9eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xbd17);
        EXPECT(gbc.pc(), 0x4e8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9eb), 0x64);
        // 72 019D
        gbc.setState(0x2638, 0xd9fa, 0x5540, 0xb118, 0x71e, 0xb9b0, 0x0, 0x0);
        gbc.writeMem(0x2638, { 0x72 });
        gbc.writeMem(0xb9b0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd9fa);
        EXPECT(gbc.pc(), 0x2639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b0), 0x7);
        // 72 019E
        gbc.setState(0x288e, 0x8c16, 0x2150, 0xcca7, 0xe201, 0xbb32, 0x0, 0x0);
        gbc.writeMem(0x288e, { 0x72 });
        gbc.writeMem(0xbb32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8c16);
        EXPECT(gbc.pc(), 0x288f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb32), 0xe2);
        // 72 019F
        gbc.setState(0x28a0, 0x2690, 0x1280, 0x5f79, 0x18d3, 0xe822, 0x1, 0x1);
        gbc.writeMem(0x28a0, { 0x72 });
        gbc.writeMem(0xe822, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2690);
        EXPECT(gbc.pc(), 0x28a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe822), 0x18);
        // 72 01A3
        gbc.setState(0x1a34, 0x7c2d, 0xb940, 0xd445, 0x6ac0, 0x85c8, 0x1, 0x1);
        gbc.writeMem(0x1a34, { 0x72 });
        gbc.writeMem(0x85c8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7c2d);
        EXPECT(gbc.pc(), 0x1a35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c8), 0x6a);
        // 72 01A5
        gbc.setState(0x8cea, 0xdc6d, 0x9290, 0x15e4, 0x710e, 0xacd4, 0x0, 0x1);
        gbc.writeMem(0x8cea, { 0x72 });
        gbc.writeMem(0xacd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdc6d);
        EXPECT(gbc.pc(), 0x8ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cea), 0x72);
        EXPECT(gbc.readMem(0xacd4), 0x71);
        // 72 01A6
        gbc.setState(0x42f7, 0xc496, 0x6500, 0xd470, 0x2fb6, 0x9001, 0x1, 0x0);
        gbc.writeMem(0x42f7, { 0x72 });
        gbc.writeMem(0x9001, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc496);
        EXPECT(gbc.pc(), 0x42f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9001), 0x2f);
        // 72 01A7
        gbc.setState(0x98f5, 0x4575, 0xc890, 0x19e1, 0x58a, 0xb160, 0x0, 0x0);
        gbc.writeMem(0x98f5, { 0x72 });
        gbc.writeMem(0xb160, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x4575);
        EXPECT(gbc.pc(), 0x98f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f5), 0x72);
        EXPECT(gbc.readMem(0xb160), 0x5);
        // 72 01AB
        gbc.setState(0xeda6, 0x969e, 0xb290, 0xbefc, 0xdf88, 0xaa5f, 0x1, 0x1);
        gbc.writeMem(0xaa5f, { 0x0 });
        gbc.writeMem(0xeda6, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x969e);
        EXPECT(gbc.pc(), 0xeda7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa5f), 0xdf);
        EXPECT(gbc.readMem(0xeda6), 0x72);
        // 72 01AD
        gbc.setState(0x5cba, 0x5595, 0x7260, 0x8d08, 0xb6ed, 0x84c2, 0x1, 0x0);
        gbc.writeMem(0x5cba, { 0x72 });
        gbc.writeMem(0x84c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5595);
        EXPECT(gbc.pc(), 0x5cbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c2), 0xb6);
        // 72 01B3
        gbc.setState(0x4687, 0x3234, 0x75e0, 0x5546, 0xc1d8, 0xad0b, 0x1, 0x0);
        gbc.writeMem(0x4687, { 0x72 });
        gbc.writeMem(0xad0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3234);
        EXPECT(gbc.pc(), 0x4688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad0b), 0xc1);
        // 72 01B7
        gbc.setState(0x1c87, 0x54fd, 0x7920, 0xaf6f, 0xad2b, 0xd1e1, 0x1, 0x0);
        gbc.writeMem(0x1c87, { 0x72 });
        gbc.writeMem(0xd1e1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x54fd);
        EXPECT(gbc.pc(), 0x1c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e1), 0xad);
        // 72 01B8
        gbc.setState(0x90e6, 0x7dd5, 0xb310, 0xa1a5, 0x4e44, 0x8a6d, 0x1, 0x0);
        gbc.writeMem(0x8a6d, { 0x0 });
        gbc.writeMem(0x90e6, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7dd5);
        EXPECT(gbc.pc(), 0x90e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a6d), 0x4e);
        EXPECT(gbc.readMem(0x90e6), 0x72);
        // 72 01BA
        gbc.setState(0xedf7, 0x66ca, 0xf490, 0x6858, 0x5d20, 0xda5b, 0x0, 0x0);
        gbc.writeMem(0xda5b, { 0x0 });
        gbc.writeMem(0xedf7, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x66ca);
        EXPECT(gbc.pc(), 0xedf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda5b), 0x5d);
        EXPECT(gbc.readMem(0xedf7), 0x72);
        // 72 01BD
        gbc.setState(0x71e0, 0xd580, 0xf150, 0x65d0, 0x20f5, 0xca21, 0x1, 0x1);
        gbc.writeMem(0x71e0, { 0x72 });
        gbc.writeMem(0xca21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd580);
        EXPECT(gbc.pc(), 0x71e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca21), 0x20);
        // 72 01BF
        gbc.setState(0xd775, 0x27c6, 0x23f0, 0x5402, 0x8b36, 0xb968, 0x0, 0x1);
        gbc.writeMem(0xb968, { 0x0 });
        gbc.writeMem(0xd775, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x27c6);
        EXPECT(gbc.pc(), 0xd776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb968), 0x8b);
        EXPECT(gbc.readMem(0xd775), 0x72);
        // 72 01C0
        gbc.setState(0x89ca, 0xe356, 0x2370, 0x60aa, 0x227c, 0xa685, 0x0, 0x0);
        gbc.writeMem(0x89ca, { 0x72 });
        gbc.writeMem(0xa685, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe356);
        EXPECT(gbc.pc(), 0x89cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ca), 0x72);
        EXPECT(gbc.readMem(0xa685), 0x22);
        // 72 01C5
        gbc.setState(0xba4d, 0xbce1, 0x1d30, 0x3397, 0xa86d, 0xdeb2, 0x0, 0x1);
        gbc.writeMem(0xba4d, { 0x72 });
        gbc.writeMem(0xdeb2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbce1);
        EXPECT(gbc.pc(), 0xba4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba4d), 0x72);
        EXPECT(gbc.readMem(0xdeb2), 0xa8);
        // 72 01C8
        gbc.setState(0x3b17, 0x4cf5, 0xf880, 0xa103, 0x6e63, 0x994d, 0x1, 0x1);
        gbc.writeMem(0x3b17, { 0x72 });
        gbc.writeMem(0x994d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4cf5);
        EXPECT(gbc.pc(), 0x3b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x994d), 0x6e);
        // 72 01CA
        gbc.setState(0xec9c, 0x1982, 0xbb0, 0x532a, 0x42d4, 0x8af3, 0x1, 0x0);
        gbc.writeMem(0x8af3, { 0x0 });
        gbc.writeMem(0xec9c, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1982);
        EXPECT(gbc.pc(), 0xec9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af3), 0x42);
        EXPECT(gbc.readMem(0xec9c), 0x72);
        // 72 01CB
        gbc.setState(0x239a, 0xcfcc, 0x59b0, 0x406f, 0xc1af, 0xa080, 0x1, 0x0);
        gbc.writeMem(0x239a, { 0x72 });
        gbc.writeMem(0xa080, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcfcc);
        EXPECT(gbc.pc(), 0x239b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa080), 0xc1);
        // 72 01CE
        gbc.setState(0x7a7b, 0xc752, 0x34f0, 0x6cbf, 0xd269, 0x960b, 0x0, 0x1);
        gbc.writeMem(0x7a7b, { 0x72 });
        gbc.writeMem(0x960b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc752);
        EXPECT(gbc.pc(), 0x7a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x960b), 0xd2);
        // 72 01CF
        gbc.setState(0xdd67, 0x5de3, 0x3830, 0x39ce, 0x678, 0xc010, 0x1, 0x0);
        gbc.writeMem(0xc010, { 0x0 });
        gbc.writeMem(0xdd67, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5de3);
        EXPECT(gbc.pc(), 0xdd68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc010), 0x6);
        EXPECT(gbc.readMem(0xdd67), 0x72);
        // 72 01D0
        gbc.setState(0xb203, 0x36e2, 0x5bf0, 0x98a3, 0x194a, 0x9ba5, 0x0, 0x1);
        gbc.writeMem(0x9ba5, { 0x0 });
        gbc.writeMem(0xb203, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x36e2);
        EXPECT(gbc.pc(), 0xb204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ba5), 0x19);
        EXPECT(gbc.readMem(0xb203), 0x72);
        // 72 01D1
        gbc.setState(0x6460, 0xddd6, 0x9580, 0x83fc, 0x4b57, 0xb083, 0x0, 0x1);
        gbc.writeMem(0x6460, { 0x72 });
        gbc.writeMem(0xb083, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xddd6);
        EXPECT(gbc.pc(), 0x6461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb083), 0x4b);
        // 72 01D2
        gbc.setState(0x5297, 0x4733, 0x6b00, 0xc544, 0x2f42, 0xfde3, 0x1, 0x1);
        gbc.writeMem(0x5297, { 0x72 });
        gbc.writeMem(0xfde3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4733);
        EXPECT(gbc.pc(), 0x5298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfde3), 0x2f);
        // 72 01D3
        gbc.setState(0xe7cf, 0x6d65, 0x5320, 0xdb0a, 0xd746, 0x8c7e, 0x0, 0x0);
        gbc.writeMem(0x8c7e, { 0x0 });
        gbc.writeMem(0xe7cf, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6d65);
        EXPECT(gbc.pc(), 0xe7d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7e), 0xd7);
        EXPECT(gbc.readMem(0xe7cf), 0x72);
        // 72 01D4
        gbc.setState(0xaf8f, 0xb09f, 0x4c30, 0xccb6, 0x727b, 0xdc7f, 0x0, 0x1);
        gbc.writeMem(0xaf8f, { 0x72 });
        gbc.writeMem(0xdc7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb09f);
        EXPECT(gbc.pc(), 0xaf90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf8f), 0x72);
        EXPECT(gbc.readMem(0xdc7f), 0x72);
        // 72 01D6
        gbc.setState(0x6a1, 0x39fe, 0xc210, 0x3215, 0x9321, 0xb6a0, 0x1, 0x1);
        gbc.writeMem(0x6a1, { 0x72 });
        gbc.writeMem(0xb6a0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x39fe);
        EXPECT(gbc.pc(), 0x6a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a0), 0x93);
        // 72 01D7
        gbc.setState(0x321e, 0x2a92, 0xbe0, 0x22f8, 0xe329, 0x96b4, 0x1, 0x0);
        gbc.writeMem(0x321e, { 0x72 });
        gbc.writeMem(0x96b4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2a92);
        EXPECT(gbc.pc(), 0x321f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b4), 0xe3);
        // 72 01DB
        gbc.setState(0x1fac, 0xded3, 0xd800, 0x9910, 0x557, 0x96e8, 0x0, 0x0);
        gbc.writeMem(0x1fac, { 0x72 });
        gbc.writeMem(0x96e8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xded3);
        EXPECT(gbc.pc(), 0x1fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96e8), 0x5);
        // 72 01DD
        gbc.setState(0x3d3, 0x69ce, 0x40e0, 0x833d, 0x37b2, 0x98e5, 0x1, 0x0);
        gbc.writeMem(0x3d3, { 0x72 });
        gbc.writeMem(0x98e5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x69ce);
        EXPECT(gbc.pc(), 0x3d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e5), 0x37);
        // 72 01DE
        gbc.setState(0x8ca0, 0x592a, 0xf320, 0x946d, 0xaa1e, 0xbb19, 0x1, 0x1);
        gbc.writeMem(0x8ca0, { 0x72 });
        gbc.writeMem(0xbb19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x592a);
        EXPECT(gbc.pc(), 0x8ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca0), 0x72);
        EXPECT(gbc.readMem(0xbb19), 0xaa);
        // 72 01E0
        gbc.setState(0x41cf, 0xa4ce, 0x8a80, 0x47f2, 0xc902, 0xf32e, 0x1, 0x1);
        gbc.writeMem(0x41cf, { 0x72 });
        gbc.writeMem(0xf32e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa4ce);
        EXPECT(gbc.pc(), 0x41d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf32e), 0xc9);
        // 72 01E4
        gbc.setState(0x6be4, 0xdd82, 0x9150, 0x630d, 0x2afd, 0xda97, 0x0, 0x1);
        gbc.writeMem(0x6be4, { 0x72 });
        gbc.writeMem(0xda97, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdd82);
        EXPECT(gbc.pc(), 0x6be5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda97), 0x2a);
        // 72 01E5
        gbc.setState(0x1b6f, 0x3dc9, 0x1f50, 0x8849, 0x68be, 0xc388, 0x0, 0x1);
        gbc.writeMem(0x1b6f, { 0x72 });
        gbc.writeMem(0xc388, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x3dc9);
        EXPECT(gbc.pc(), 0x1b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc388), 0x68);
        // 72 01E9
        gbc.setState(0x743d, 0x28c2, 0x8b40, 0x65b3, 0xee0a, 0xa194, 0x0, 0x0);
        gbc.writeMem(0x743d, { 0x72 });
        gbc.writeMem(0xa194, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x28c2);
        EXPECT(gbc.pc(), 0x743e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa194), 0xee);
        // 72 01EE
        gbc.setState(0x1e4c, 0x85f2, 0x48e0, 0xed73, 0xa0f, 0xca6d, 0x0, 0x0);
        gbc.writeMem(0x1e4c, { 0x72 });
        gbc.writeMem(0xca6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x85f2);
        EXPECT(gbc.pc(), 0x1e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca6d), 0xa);
        // 72 01EF
        gbc.setState(0x5a5f, 0x7fed, 0xf600, 0x5f61, 0xef4c, 0x964b, 0x1, 0x0);
        gbc.writeMem(0x5a5f, { 0x72 });
        gbc.writeMem(0x964b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7fed);
        EXPECT(gbc.pc(), 0x5a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x964b), 0xef);
        // 72 01F0
        gbc.setState(0x44db, 0xc7d5, 0x2d20, 0x5d0d, 0x6cd8, 0xaf86, 0x1, 0x1);
        gbc.writeMem(0x44db, { 0x72 });
        gbc.writeMem(0xaf86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc7d5);
        EXPECT(gbc.pc(), 0x44dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf86), 0x6c);
        // 72 01F4
        gbc.setState(0x929d, 0x59a7, 0x3da0, 0xab5e, 0x44e6, 0xb45b, 0x1, 0x0);
        gbc.writeMem(0x929d, { 0x72 });
        gbc.writeMem(0xb45b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x59a7);
        EXPECT(gbc.pc(), 0x929e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x929d), 0x72);
        EXPECT(gbc.readMem(0xb45b), 0x44);
        // 72 01F7
        gbc.setState(0xbb4, 0x9b3d, 0xba60, 0x81dc, 0x3f86, 0xa35a, 0x0, 0x1);
        gbc.writeMem(0xbb4, { 0x72 });
        gbc.writeMem(0xa35a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9b3d);
        EXPECT(gbc.pc(), 0xbb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa35a), 0x3f);
        // 72 01F9
        gbc.setState(0x5d89, 0x25a7, 0x55f0, 0x8bf1, 0xc7c7, 0xc93a, 0x0, 0x0);
        gbc.writeMem(0x5d89, { 0x72 });
        gbc.writeMem(0xc93a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x25a7);
        EXPECT(gbc.pc(), 0x5d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc93a), 0xc7);
        // 72 0201
        gbc.setState(0x3d04, 0x19a4, 0xe0f0, 0xc06, 0x3ce0, 0xae24, 0x1, 0x1);
        gbc.writeMem(0x3d04, { 0x72 });
        gbc.writeMem(0xae24, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x19a4);
        EXPECT(gbc.pc(), 0x3d05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae24), 0x3c);
        // 72 0202
        gbc.setState(0x50d0, 0xd68, 0x65b0, 0x3c50, 0x8f05, 0xdea0, 0x1, 0x1);
        gbc.writeMem(0x50d0, { 0x72 });
        gbc.writeMem(0xdea0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd68);
        EXPECT(gbc.pc(), 0x50d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdea0), 0x8f);
        // 72 0203
        gbc.setState(0xadfd, 0x70be, 0x2460, 0xd815, 0x5237, 0xd405, 0x1, 0x0);
        gbc.writeMem(0xadfd, { 0x72 });
        gbc.writeMem(0xd405, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x70be);
        EXPECT(gbc.pc(), 0xadfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadfd), 0x72);
        EXPECT(gbc.readMem(0xd405), 0x52);
        // 72 0204
        gbc.setState(0x3734, 0x117d, 0x37c0, 0x66ad, 0x3c90, 0xff04, 0x0, 0x0);
        gbc.writeMem(0x3734, { 0x72 });
        gbc.writeMem(0xff04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x117d);
        EXPECT(gbc.pc(), 0x3735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff04), 0x3c);
        // 72 0205
        gbc.setState(0x20a2, 0xc8f4, 0x6000, 0x4e1d, 0x6781, 0xb115, 0x1, 0x0);
        gbc.writeMem(0x20a2, { 0x72 });
        gbc.writeMem(0xb115, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc8f4);
        EXPECT(gbc.pc(), 0x20a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb115), 0x67);
        // 72 0206
        gbc.setState(0x8e29, 0x4913, 0x630, 0x13df, 0x4628, 0xc9bb, 0x0, 0x1);
        gbc.writeMem(0x8e29, { 0x72 });
        gbc.writeMem(0xc9bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4913);
        EXPECT(gbc.pc(), 0x8e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e29), 0x72);
        EXPECT(gbc.readMem(0xc9bb), 0x46);
        // 72 0207
        gbc.setState(0x76e0, 0xe9f3, 0xf7e0, 0xe7dc, 0xd8d, 0xda55, 0x0, 0x0);
        gbc.writeMem(0x76e0, { 0x72 });
        gbc.writeMem(0xda55, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe9f3);
        EXPECT(gbc.pc(), 0x76e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda55), 0xd);
        // 72 0208
        gbc.setState(0x3a7f, 0x8cf1, 0xee80, 0x20b0, 0x6458, 0xcfa0, 0x0, 0x1);
        gbc.writeMem(0x3a7f, { 0x72 });
        gbc.writeMem(0xcfa0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8cf1);
        EXPECT(gbc.pc(), 0x3a80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfa0), 0x64);
        // 72 020C
        gbc.setState(0xe509, 0x97a, 0x9810, 0xd169, 0xf52b, 0xb4d0, 0x0, 0x0);
        gbc.writeMem(0xb4d0, { 0x0 });
        gbc.writeMem(0xe509, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x97a);
        EXPECT(gbc.pc(), 0xe50a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4d0), 0xf5);
        EXPECT(gbc.readMem(0xe509), 0x72);
        // 72 020E
        gbc.setState(0xc5b5, 0x9691, 0xba10, 0xa124, 0xe8a8, 0x97ed, 0x0, 0x0);
        gbc.writeMem(0x97ed, { 0x0 });
        gbc.writeMem(0xc5b5, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9691);
        EXPECT(gbc.pc(), 0xc5b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ed), 0xe8);
        EXPECT(gbc.readMem(0xc5b5), 0x72);
        // 72 0211
        gbc.setState(0x4d3a, 0x60ad, 0xca10, 0xaa0a, 0x5e23, 0xaa6e, 0x1, 0x1);
        gbc.writeMem(0x4d3a, { 0x72 });
        gbc.writeMem(0xaa6e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x60ad);
        EXPECT(gbc.pc(), 0x4d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa6e), 0x5e);
        // 72 0216
        gbc.setState(0x793e, 0xa4ac, 0xf30, 0xc1cf, 0x141f, 0xa9cc, 0x1, 0x1);
        gbc.writeMem(0x793e, { 0x72 });
        gbc.writeMem(0xa9cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa4ac);
        EXPECT(gbc.pc(), 0x793f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9cc), 0x14);
        // 72 0219
        gbc.setState(0xcd73, 0x904, 0x2f60, 0x3e18, 0xd6f3, 0xee7b, 0x0, 0x1);
        gbc.writeMem(0xcd73, { 0x72 });
        gbc.writeMem(0xee7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x904);
        EXPECT(gbc.pc(), 0xcd74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd73), 0x72);
        EXPECT(gbc.readMem(0xee7b), 0xd6);
        // 72 021A
        gbc.setState(0x6ba2, 0x60a9, 0x9800, 0xd642, 0xbf77, 0xd3fc, 0x0, 0x0);
        gbc.writeMem(0x6ba2, { 0x72 });
        gbc.writeMem(0xd3fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x60a9);
        EXPECT(gbc.pc(), 0x6ba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3fc), 0xbf);
        // 72 021B
        gbc.setState(0xd9b6, 0xd844, 0x3750, 0xa2cb, 0x33a6, 0xd702, 0x1, 0x1);
        gbc.writeMem(0xd702, { 0x0 });
        gbc.writeMem(0xd9b6, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd844);
        EXPECT(gbc.pc(), 0xd9b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd702), 0x33);
        EXPECT(gbc.readMem(0xd9b6), 0x72);
        // 72 021F
        gbc.setState(0x3782, 0x2752, 0x6480, 0x8b23, 0xab43, 0xaa7a, 0x0, 0x0);
        gbc.writeMem(0x3782, { 0x72 });
        gbc.writeMem(0xaa7a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2752);
        EXPECT(gbc.pc(), 0x3783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa7a), 0xab);
        // 72 0222
        gbc.setState(0x2542, 0xb121, 0x5810, 0x6bc6, 0x25a1, 0x9938, 0x1, 0x1);
        gbc.writeMem(0x2542, { 0x72 });
        gbc.writeMem(0x9938, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb121);
        EXPECT(gbc.pc(), 0x2543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9938), 0x25);
        // 72 0223
        gbc.setState(0x59ac, 0xee8a, 0x5700, 0x79b9, 0xa26f, 0xb2fe, 0x0, 0x1);
        gbc.writeMem(0x59ac, { 0x72 });
        gbc.writeMem(0xb2fe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xee8a);
        EXPECT(gbc.pc(), 0x59ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2fe), 0xa2);
        // 72 0225
        gbc.setState(0x1f87, 0x7277, 0xe740, 0x30a, 0xd96f, 0x8969, 0x0, 0x1);
        gbc.writeMem(0x1f87, { 0x72 });
        gbc.writeMem(0x8969, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7277);
        EXPECT(gbc.pc(), 0x1f88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8969), 0xd9);
        // 72 0226
        gbc.setState(0x836b, 0xc18a, 0x830, 0xcbea, 0xb94f, 0xa4f9, 0x1, 0x0);
        gbc.writeMem(0x836b, { 0x72 });
        gbc.writeMem(0xa4f9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc18a);
        EXPECT(gbc.pc(), 0x836c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x836b), 0x72);
        EXPECT(gbc.readMem(0xa4f9), 0xb9);
        // 72 0227
        gbc.setState(0xa48c, 0x5ce1, 0x6bb0, 0x7efd, 0xd014, 0xeba7, 0x0, 0x1);
        gbc.writeMem(0xa48c, { 0x72 });
        gbc.writeMem(0xeba7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5ce1);
        EXPECT(gbc.pc(), 0xa48d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa48c), 0x72);
        EXPECT(gbc.readMem(0xeba7), 0xd0);
        // 72 0228
        gbc.setState(0x6972, 0xd641, 0x8750, 0x1de1, 0x9b8f, 0xaf84, 0x0, 0x1);
        gbc.writeMem(0x6972, { 0x72 });
        gbc.writeMem(0xaf84, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd641);
        EXPECT(gbc.pc(), 0x6973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf84), 0x9b);
        // 72 022A
        gbc.setState(0xddd7, 0xdcbc, 0x5560, 0x4382, 0xd957, 0x97b4, 0x0, 0x1);
        gbc.writeMem(0x97b4, { 0x0 });
        gbc.writeMem(0xddd7, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdcbc);
        EXPECT(gbc.pc(), 0xddd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b4), 0xd9);
        EXPECT(gbc.readMem(0xddd7), 0x72);
        // 72 022F
        gbc.setState(0x699a, 0x746a, 0xf050, 0xceec, 0xe99c, 0x95bf, 0x0, 0x1);
        gbc.writeMem(0x699a, { 0x72 });
        gbc.writeMem(0x95bf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x746a);
        EXPECT(gbc.pc(), 0x699b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95bf), 0xe9);
        // 72 0230
        gbc.setState(0x3f8f, 0x51d8, 0x8800, 0xf7fb, 0x2466, 0xfd94, 0x0, 0x0);
        gbc.writeMem(0x3f8f, { 0x72 });
        gbc.writeMem(0xfd94, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x51d8);
        EXPECT(gbc.pc(), 0x3f90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd94), 0x24);
        // 72 0233
        gbc.setState(0x2241, 0x1bbe, 0x7e20, 0x5d5b, 0xe8a1, 0x9fe9, 0x0, 0x0);
        gbc.writeMem(0x2241, { 0x72 });
        gbc.writeMem(0x9fe9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1bbe);
        EXPECT(gbc.pc(), 0x2242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe9), 0xe8);
        // 72 0234
        gbc.setState(0x686b, 0xea0a, 0x9330, 0xe159, 0x90e5, 0x843b, 0x0, 0x1);
        gbc.writeMem(0x686b, { 0x72 });
        gbc.writeMem(0x843b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xea0a);
        EXPECT(gbc.pc(), 0x686c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x843b), 0x90);
        // 72 0238
        gbc.setState(0xc1c, 0xc790, 0x3ea0, 0x3c, 0xf6ae, 0x91f9, 0x1, 0x0);
        gbc.writeMem(0xc1c, { 0x72 });
        gbc.writeMem(0x91f9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc790);
        EXPECT(gbc.pc(), 0xc1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f9), 0xf6);
        // 72 0239
        gbc.setState(0xa35d, 0x96fd, 0x98c0, 0x3750, 0x2d75, 0xb098, 0x1, 0x0);
        gbc.writeMem(0xa35d, { 0x72 });
        gbc.writeMem(0xb098, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x96fd);
        EXPECT(gbc.pc(), 0xa35e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa35d), 0x72);
        EXPECT(gbc.readMem(0xb098), 0x2d);
        // 72 023A
        gbc.setState(0x617b, 0xdabf, 0x60d0, 0x3ff8, 0x39e7, 0x8c7c, 0x1, 0x1);
        gbc.writeMem(0x617b, { 0x72 });
        gbc.writeMem(0x8c7c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdabf);
        EXPECT(gbc.pc(), 0x617c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c7c), 0x39);
        // 72 023D
        gbc.setState(0x77c7, 0x86, 0x4170, 0x6a3c, 0xa6ec, 0xa54b, 0x1, 0x0);
        gbc.writeMem(0x77c7, { 0x72 });
        gbc.writeMem(0xa54b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x86);
        EXPECT(gbc.pc(), 0x77c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa54b), 0xa6);
        // 72 023F
        gbc.setState(0x48eb, 0xe549, 0x9010, 0xb3ae, 0x6761, 0x9f42, 0x1, 0x0);
        gbc.writeMem(0x48eb, { 0x72 });
        gbc.writeMem(0x9f42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe549);
        EXPECT(gbc.pc(), 0x48ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f42), 0x67);
        // 72 0242
        gbc.setState(0xd1d6, 0x7393, 0xc300, 0xfb29, 0x562f, 0xbebb, 0x0, 0x0);
        gbc.writeMem(0xbebb, { 0x0 });
        gbc.writeMem(0xd1d6, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7393);
        EXPECT(gbc.pc(), 0xd1d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebb), 0x56);
        EXPECT(gbc.readMem(0xd1d6), 0x72);
        // 72 0244
        gbc.setState(0xe360, 0x78bc, 0xafd0, 0x5bae, 0xe08d, 0xb406, 0x1, 0x1);
        gbc.writeMem(0xb406, { 0x0 });
        gbc.writeMem(0xe360, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x78bc);
        EXPECT(gbc.pc(), 0xe361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb406), 0xe0);
        EXPECT(gbc.readMem(0xe360), 0x72);
        // 72 0246
        gbc.setState(0xa24c, 0xe890, 0xe10, 0xb4af, 0x68e8, 0xe512, 0x0, 0x1);
        gbc.writeMem(0xa24c, { 0x72 });
        gbc.writeMem(0xe512, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe890);
        EXPECT(gbc.pc(), 0xa24d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa24c), 0x72);
        EXPECT(gbc.readMem(0xe512), 0x68);
        // 72 024A
        gbc.setState(0xb252, 0xcb00, 0xd890, 0x9506, 0x1449, 0xae34, 0x0, 0x1);
        gbc.writeMem(0xae34, { 0x0 });
        gbc.writeMem(0xb252, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcb00);
        EXPECT(gbc.pc(), 0xb253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae34), 0x14);
        EXPECT(gbc.readMem(0xb252), 0x72);
        // 72 024D
        gbc.setState(0x2f44, 0x3a1, 0x4f70, 0xd4b0, 0x3a7c, 0xb4dd, 0x1, 0x0);
        gbc.writeMem(0x2f44, { 0x72 });
        gbc.writeMem(0xb4dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3a1);
        EXPECT(gbc.pc(), 0x2f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4dd), 0x3a);
        // 72 024E
        gbc.setState(0x449e, 0xf7ef, 0x2050, 0x8cf5, 0x6717, 0x85f6, 0x0, 0x0);
        gbc.writeMem(0x449e, { 0x72 });
        gbc.writeMem(0x85f6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf7ef);
        EXPECT(gbc.pc(), 0x449f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f6), 0x67);
        // 72 024F
        gbc.setState(0xba25, 0x8596, 0x14f0, 0x7192, 0x668a, 0xfc3c, 0x0, 0x0);
        gbc.writeMem(0xba25, { 0x72 });
        gbc.writeMem(0xfc3c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8596);
        EXPECT(gbc.pc(), 0xba26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba25), 0x72);
        EXPECT(gbc.readMem(0xfc3c), 0x66);
        // 72 0251
        gbc.setState(0x92b0, 0x8e68, 0xd300, 0xadde, 0xf9, 0x132e, 0x0, 0x0);
        gbc.writeMem(0x132e, { 0x0 });
        gbc.writeMem(0x92b0, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8e68);
        EXPECT(gbc.pc(), 0x92b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b0), 0x72);
        // 72 0252
        gbc.setState(0xde96, 0x5ff3, 0xf630, 0x9452, 0xa974, 0xfaca, 0x0, 0x0);
        gbc.writeMem(0xde96, { 0x72 });
        gbc.writeMem(0xfaca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5ff3);
        EXPECT(gbc.pc(), 0xde97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde96), 0x72);
        EXPECT(gbc.readMem(0xfaca), 0xa9);
        // 72 0253
        gbc.setState(0xb27b, 0xfcc3, 0xc3b0, 0xb9a0, 0x88b3, 0x954f, 0x0, 0x0);
        gbc.writeMem(0x954f, { 0x0 });
        gbc.writeMem(0xb27b, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xfcc3);
        EXPECT(gbc.pc(), 0xb27c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x954f), 0x88);
        EXPECT(gbc.readMem(0xb27b), 0x72);
        // 72 0258
        gbc.setState(0xd337, 0xec3d, 0x1bd0, 0x5e2, 0x94f5, 0xe365, 0x0, 0x1);
        gbc.writeMem(0xd337, { 0x72 });
        gbc.writeMem(0xe365, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xec3d);
        EXPECT(gbc.pc(), 0xd338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd337), 0x72);
        EXPECT(gbc.readMem(0xe365), 0x94);
        // 72 025E
        gbc.setState(0x10b7, 0xb6c1, 0xe190, 0x773c, 0x9121, 0xf951, 0x0, 0x0);
        gbc.writeMem(0x10b7, { 0x72 });
        gbc.writeMem(0xf951, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb6c1);
        EXPECT(gbc.pc(), 0x10b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf951), 0x91);
        // 72 025F
        gbc.setState(0x97db, 0xc02c, 0x18c0, 0xbd53, 0x4d86, 0xc0a0, 0x0, 0x1);
        gbc.writeMem(0x97db, { 0x72 });
        gbc.writeMem(0xc0a0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc02c);
        EXPECT(gbc.pc(), 0x97dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97db), 0x72);
        EXPECT(gbc.readMem(0xc0a0), 0x4d);
        // 72 0260
        gbc.setState(0xde5b, 0xe761, 0xedf0, 0xf40e, 0x4f1c, 0x99d4, 0x1, 0x0);
        gbc.writeMem(0x99d4, { 0x0 });
        gbc.writeMem(0xde5b, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe761);
        EXPECT(gbc.pc(), 0xde5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d4), 0x4f);
        EXPECT(gbc.readMem(0xde5b), 0x72);
        // 72 0262
        gbc.setState(0x9c4d, 0x67cb, 0x8b60, 0xeb1, 0x7910, 0xc453, 0x0, 0x0);
        gbc.writeMem(0x9c4d, { 0x72 });
        gbc.writeMem(0xc453, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x67cb);
        EXPECT(gbc.pc(), 0x9c4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c4d), 0x72);
        EXPECT(gbc.readMem(0xc453), 0x79);
        // 72 0263
        gbc.setState(0x2338, 0x6a86, 0x1550, 0x51e9, 0x9a6d, 0xe482, 0x1, 0x0);
        gbc.writeMem(0x2338, { 0x72 });
        gbc.writeMem(0xe482, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6a86);
        EXPECT(gbc.pc(), 0x2339);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe482), 0x9a);
        // 72 0265
        gbc.setState(0xe24, 0x142b, 0x480, 0x83b5, 0xfe52, 0xfcc6, 0x0, 0x1);
        gbc.writeMem(0xe24, { 0x72 });
        gbc.writeMem(0xfcc6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x142b);
        EXPECT(gbc.pc(), 0xe25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfcc6), 0xfe);
        // 72 0266
        gbc.setState(0x5521, 0x6f20, 0x20, 0xc3f4, 0x75bd, 0xfca4, 0x0, 0x0);
        gbc.writeMem(0x5521, { 0x72 });
        gbc.writeMem(0xfca4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6f20);
        EXPECT(gbc.pc(), 0x5522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfca4), 0x75);
        // 72 026D
        gbc.setState(0x4b9b, 0x3607, 0x6eb0, 0xdf57, 0x432c, 0xd1c8, 0x1, 0x1);
        gbc.writeMem(0x4b9b, { 0x72 });
        gbc.writeMem(0xd1c8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3607);
        EXPECT(gbc.pc(), 0x4b9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1c8), 0x43);
        // 72 0270
        gbc.setState(0xb18b, 0xfb88, 0xc90, 0xc06e, 0x76db, 0xc91e, 0x0, 0x1);
        gbc.writeMem(0xb18b, { 0x72 });
        gbc.writeMem(0xc91e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfb88);
        EXPECT(gbc.pc(), 0xb18c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18b), 0x72);
        EXPECT(gbc.readMem(0xc91e), 0x76);
        // 72 0274
        gbc.setState(0x5518, 0xde18, 0x14b0, 0x8bcf, 0x5934, 0xbb7b, 0x0, 0x0);
        gbc.writeMem(0x5518, { 0x72 });
        gbc.writeMem(0xbb7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xde18);
        EXPECT(gbc.pc(), 0x5519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7b), 0x59);
        // 72 0275
        gbc.setState(0xeca6, 0xdc7d, 0xef60, 0x738, 0x422a, 0xd104, 0x1, 0x0);
        gbc.writeMem(0xd104, { 0x0 });
        gbc.writeMem(0xeca6, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xdc7d);
        EXPECT(gbc.pc(), 0xeca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd104), 0x42);
        EXPECT(gbc.readMem(0xeca6), 0x72);
        // 72 0276
        gbc.setState(0x3ebe, 0x82cf, 0xf4f0, 0xcbe3, 0xbe06, 0x9adf, 0x0, 0x0);
        gbc.writeMem(0x3ebe, { 0x72 });
        gbc.writeMem(0x9adf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x82cf);
        EXPECT(gbc.pc(), 0x3ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9adf), 0xbe);
        // 72 0279
        gbc.setState(0x69b7, 0xf5c9, 0x9050, 0x20e2, 0xd8d3, 0xce92, 0x1, 0x0);
        gbc.writeMem(0x69b7, { 0x72 });
        gbc.writeMem(0xce92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf5c9);
        EXPECT(gbc.pc(), 0x69b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce92), 0xd8);
        // 72 0280
        gbc.setState(0xdddd, 0xa49a, 0xee30, 0x65fa, 0x70bb, 0x920f, 0x0, 0x1);
        gbc.writeMem(0x920f, { 0x0 });
        gbc.writeMem(0xdddd, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa49a);
        EXPECT(gbc.pc(), 0xddde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x920f), 0x70);
        EXPECT(gbc.readMem(0xdddd), 0x72);
        // 72 0283
        gbc.setState(0xe2fa, 0xfe49, 0xf500, 0xc518, 0xd17, 0xa301, 0x0, 0x1);
        gbc.writeMem(0xa301, { 0x0 });
        gbc.writeMem(0xe2fa, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xfe49);
        EXPECT(gbc.pc(), 0xe2fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa301), 0xd);
        EXPECT(gbc.readMem(0xe2fa), 0x72);
        // 72 0284
        gbc.setState(0xd0be, 0xcb6a, 0x78b0, 0x3d18, 0x966d, 0xd4eb, 0x1, 0x0);
        gbc.writeMem(0xd0be, { 0x72 });
        gbc.writeMem(0xd4eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xcb6a);
        EXPECT(gbc.pc(), 0xd0bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0be), 0x72);
        EXPECT(gbc.readMem(0xd4eb), 0x96);
        // 72 0288
        gbc.setState(0x76e3, 0x8391, 0x2f40, 0x97c6, 0xcc19, 0xae50, 0x1, 0x1);
        gbc.writeMem(0x76e3, { 0x72 });
        gbc.writeMem(0xae50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x8391);
        EXPECT(gbc.pc(), 0x76e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae50), 0xcc);
        // 72 0289
        gbc.setState(0xb804, 0xa659, 0xcba0, 0xefaa, 0x6baf, 0xc6d4, 0x0, 0x1);
        gbc.writeMem(0xb804, { 0x72 });
        gbc.writeMem(0xc6d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa659);
        EXPECT(gbc.pc(), 0xb805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb804), 0x72);
        EXPECT(gbc.readMem(0xc6d4), 0x6b);
        // 72 028C
        gbc.setState(0x7572, 0x789, 0xd330, 0x63e0, 0xd289, 0xa19d, 0x0, 0x0);
        gbc.writeMem(0x7572, { 0x72 });
        gbc.writeMem(0xa19d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x789);
        EXPECT(gbc.pc(), 0x7573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa19d), 0xd2);
        // 72 028F
        gbc.setState(0x9809, 0xdcc5, 0x620, 0xd5de, 0x71ae, 0xad6f, 0x1, 0x1);
        gbc.writeMem(0x9809, { 0x72 });
        gbc.writeMem(0xad6f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdcc5);
        EXPECT(gbc.pc(), 0x980a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9809), 0x72);
        EXPECT(gbc.readMem(0xad6f), 0x71);
        // 72 0291
        gbc.setState(0x998, 0xf713, 0x26d0, 0x2df2, 0xa7a5, 0xf8c9, 0x0, 0x0);
        gbc.writeMem(0x998, { 0x72 });
        gbc.writeMem(0xf8c9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf713);
        EXPECT(gbc.pc(), 0x999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf8c9), 0xa7);
        // 72 0292
        gbc.setState(0x3530, 0xb0ac, 0x9fc0, 0xc803, 0xdb0b, 0x8796, 0x1, 0x0);
        gbc.writeMem(0x3530, { 0x72 });
        gbc.writeMem(0x8796, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xb0ac);
        EXPECT(gbc.pc(), 0x3531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8796), 0xdb);
        // 72 0294
        gbc.setState(0x2646, 0x7d90, 0x30c0, 0x6f85, 0x6c49, 0x9758, 0x1, 0x1);
        gbc.writeMem(0x2646, { 0x72 });
        gbc.writeMem(0x9758, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7d90);
        EXPECT(gbc.pc(), 0x2647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9758), 0x6c);
        // 72 0296
        gbc.setState(0x6990, 0x988c, 0x9c30, 0x3f54, 0x8134, 0xae52, 0x1, 0x1);
        gbc.writeMem(0x6990, { 0x72 });
        gbc.writeMem(0xae52, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x988c);
        EXPECT(gbc.pc(), 0x6991);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae52), 0x81);
        // 72 0297
        gbc.setState(0x5cf5, 0x2497, 0xb8d0, 0xebe6, 0x270d, 0xdf74, 0x1, 0x0);
        gbc.writeMem(0x5cf5, { 0x72 });
        gbc.writeMem(0xdf74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2497);
        EXPECT(gbc.pc(), 0x5cf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf74), 0x27);
        // 72 0299
        gbc.setState(0xe12a, 0x5276, 0xc8b0, 0x9eb9, 0xcb5b, 0xeae3, 0x0, 0x0);
        gbc.writeMem(0xe12a, { 0x72 });
        gbc.writeMem(0xeae3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5276);
        EXPECT(gbc.pc(), 0xe12b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe12a), 0x72);
        EXPECT(gbc.readMem(0xeae3), 0xcb);
        // 72 029B
        gbc.setState(0xb62c, 0x7d35, 0x1600, 0xebef, 0xa366, 0xf3ae, 0x0, 0x0);
        gbc.writeMem(0xb62c, { 0x72 });
        gbc.writeMem(0xf3ae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7d35);
        EXPECT(gbc.pc(), 0xb62d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb62c), 0x72);
        EXPECT(gbc.readMem(0xf3ae), 0xa3);
        // 72 029C
        gbc.setState(0x1a08, 0xdcc3, 0xac40, 0x5e56, 0x358, 0xa946, 0x0, 0x0);
        gbc.writeMem(0x1a08, { 0x72 });
        gbc.writeMem(0xa946, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xdcc3);
        EXPECT(gbc.pc(), 0x1a09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa946), 0x3);
        // 72 029D
        gbc.setState(0x5569, 0xc2ec, 0x3270, 0xfd6e, 0x98ba, 0xae2e, 0x0, 0x1);
        gbc.writeMem(0x5569, { 0x72 });
        gbc.writeMem(0xae2e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc2ec);
        EXPECT(gbc.pc(), 0x556a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae2e), 0x98);
        // 72 029E
        gbc.setState(0xbef3, 0xf499, 0x5280, 0x15cf, 0xf41d, 0xcb3c, 0x1, 0x0);
        gbc.writeMem(0xbef3, { 0x72 });
        gbc.writeMem(0xcb3c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf499);
        EXPECT(gbc.pc(), 0xbef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbef3), 0x72);
        EXPECT(gbc.readMem(0xcb3c), 0xf4);
        // 72 029F
        gbc.setState(0x42d3, 0x5133, 0x3530, 0x3576, 0xe898, 0xf81d, 0x0, 0x0);
        gbc.writeMem(0x42d3, { 0x72 });
        gbc.writeMem(0xf81d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5133);
        EXPECT(gbc.pc(), 0x42d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf81d), 0xe8);
        // 72 02A1
        gbc.setState(0x21b, 0xff91, 0xb320, 0xa72a, 0x4f5e, 0x9ec2, 0x1, 0x0);
        gbc.writeMem(0x21b, { 0x72 });
        gbc.writeMem(0x9ec2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xff91);
        EXPECT(gbc.pc(), 0x21c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec2), 0x4f);
        // 72 02A3
        gbc.setState(0xb422, 0x5abb, 0x1260, 0x3fb5, 0xb668, 0xf8d1, 0x0, 0x1);
        gbc.writeMem(0xb422, { 0x72 });
        gbc.writeMem(0xf8d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5abb);
        EXPECT(gbc.pc(), 0xb423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb422), 0x72);
        EXPECT(gbc.readMem(0xf8d1), 0xb6);
        // 72 02A4
        gbc.setState(0xa8de, 0x6341, 0x7ab0, 0x978b, 0x461a, 0xe655, 0x0, 0x1);
        gbc.writeMem(0xa8de, { 0x72 });
        gbc.writeMem(0xe655, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6341);
        EXPECT(gbc.pc(), 0xa8df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8de), 0x72);
        EXPECT(gbc.readMem(0xe655), 0x46);
        // 72 02A6
        gbc.setState(0x11f8, 0x631, 0x7fc0, 0x449e, 0x73a8, 0xbca0, 0x0, 0x0);
        gbc.writeMem(0x11f8, { 0x72 });
        gbc.writeMem(0xbca0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x631);
        EXPECT(gbc.pc(), 0x11f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca0), 0x73);
        // 72 02AB
        gbc.setState(0x880d, 0xe838, 0xb400, 0xb076, 0x4808, 0xd16d, 0x0, 0x0);
        gbc.writeMem(0x880d, { 0x72 });
        gbc.writeMem(0xd16d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe838);
        EXPECT(gbc.pc(), 0x880e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880d), 0x72);
        EXPECT(gbc.readMem(0xd16d), 0x48);
        // 72 02AD
        gbc.setState(0x5d12, 0x5da4, 0x3d30, 0xd5bd, 0xc462, 0xfc9f, 0x1, 0x0);
        gbc.writeMem(0x5d12, { 0x72 });
        gbc.writeMem(0xfc9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5da4);
        EXPECT(gbc.pc(), 0x5d13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc9f), 0xc4);
        // 72 02AF
        gbc.setState(0x6263, 0x225c, 0xcba0, 0xdfb3, 0x4a74, 0xdb46, 0x1, 0x0);
        gbc.writeMem(0x6263, { 0x72 });
        gbc.writeMem(0xdb46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x225c);
        EXPECT(gbc.pc(), 0x6264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb46), 0x4a);
        // 72 02B0
        gbc.setState(0x77ec, 0x9760, 0x37b0, 0xc3dd, 0xa148, 0x9b7d, 0x0, 0x0);
        gbc.writeMem(0x77ec, { 0x72 });
        gbc.writeMem(0x9b7d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9760);
        EXPECT(gbc.pc(), 0x77ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7d), 0xa1);
        // 72 02B2
        gbc.setState(0xa8d2, 0x7c0a, 0x8680, 0xad25, 0x478f, 0xc1c9, 0x0, 0x1);
        gbc.writeMem(0xa8d2, { 0x72 });
        gbc.writeMem(0xc1c9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7c0a);
        EXPECT(gbc.pc(), 0xa8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d2), 0x72);
        EXPECT(gbc.readMem(0xc1c9), 0x47);
        // 72 02B5
        gbc.setState(0xb39, 0x2390, 0x15e0, 0x84e, 0xa37a, 0x87b1, 0x1, 0x1);
        gbc.writeMem(0xb39, { 0x72 });
        gbc.writeMem(0x87b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2390);
        EXPECT(gbc.pc(), 0xb3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87b1), 0xa3);
        // 72 02B8
        gbc.setState(0xeb52, 0xbab1, 0x6830, 0x7c65, 0x62f6, 0xb35a, 0x1, 0x1);
        gbc.writeMem(0xb35a, { 0x0 });
        gbc.writeMem(0xeb52, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbab1);
        EXPECT(gbc.pc(), 0xeb53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb35a), 0x62);
        EXPECT(gbc.readMem(0xeb52), 0x72);
        // 72 02B9
        gbc.setState(0x56f4, 0x7149, 0xae60, 0x76cd, 0xcb44, 0xc47c, 0x0, 0x1);
        gbc.writeMem(0x56f4, { 0x72 });
        gbc.writeMem(0xc47c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7149);
        EXPECT(gbc.pc(), 0x56f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc47c), 0xcb);
        // 72 02BB
        gbc.setState(0x6738, 0x2bac, 0xf940, 0x4f25, 0xe7c5, 0x8cd9, 0x0, 0x0);
        gbc.writeMem(0x6738, { 0x72 });
        gbc.writeMem(0x8cd9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2bac);
        EXPECT(gbc.pc(), 0x6739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd9), 0xe7);
        // 72 02BC
        gbc.setState(0x88a5, 0x2ad5, 0x3f70, 0x35b6, 0x42cb, 0xd446, 0x0, 0x1);
        gbc.writeMem(0x88a5, { 0x72 });
        gbc.writeMem(0xd446, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2ad5);
        EXPECT(gbc.pc(), 0x88a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88a5), 0x72);
        EXPECT(gbc.readMem(0xd446), 0x42);
        // 72 02BD
        gbc.setState(0xbb25, 0xc090, 0xd840, 0x7918, 0x5f76, 0x9cbd, 0x0, 0x0);
        gbc.writeMem(0x9cbd, { 0x0 });
        gbc.writeMem(0xbb25, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc090);
        EXPECT(gbc.pc(), 0xbb26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cbd), 0x5f);
        EXPECT(gbc.readMem(0xbb25), 0x72);
        // 72 02BE
        gbc.setState(0x5f69, 0x5eaa, 0x330, 0xfc4c, 0x9809, 0xe51d, 0x0, 0x1);
        gbc.writeMem(0x5f69, { 0x72 });
        gbc.writeMem(0xe51d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5eaa);
        EXPECT(gbc.pc(), 0x5f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe51d), 0x98);
        // 72 02C4
        gbc.setState(0xebf5, 0x4ffe, 0x39f0, 0x9ecb, 0x7a4, 0xa649, 0x0, 0x0);
        gbc.writeMem(0xa649, { 0x0 });
        gbc.writeMem(0xebf5, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4ffe);
        EXPECT(gbc.pc(), 0xebf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa649), 0x7);
        EXPECT(gbc.readMem(0xebf5), 0x72);
        // 72 02C5
        gbc.setState(0x42b, 0x8e8e, 0x2440, 0x606c, 0x9222, 0xa9ff, 0x0, 0x0);
        gbc.writeMem(0x42b, { 0x72 });
        gbc.writeMem(0xa9ff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8e8e);
        EXPECT(gbc.pc(), 0x42c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ff), 0x92);
        // 72 02C7
        gbc.setState(0xdf12, 0x4916, 0x5ba0, 0xdc07, 0xb3cd, 0x927f, 0x1, 0x0);
        gbc.writeMem(0x927f, { 0x0 });
        gbc.writeMem(0xdf12, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4916);
        EXPECT(gbc.pc(), 0xdf13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x927f), 0xb3);
        EXPECT(gbc.readMem(0xdf12), 0x72);
        // 72 02C8
        gbc.setState(0x1283, 0x6b93, 0x44f0, 0xec44, 0xfd16, 0xb2ad, 0x0, 0x1);
        gbc.writeMem(0x1283, { 0x72 });
        gbc.writeMem(0xb2ad, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6b93);
        EXPECT(gbc.pc(), 0x1284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ad), 0xfd);
        // 72 02CA
        gbc.setState(0xbde9, 0xfa25, 0x6be0, 0x249f, 0xf6a3, 0x9760, 0x1, 0x1);
        gbc.writeMem(0x9760, { 0x0 });
        gbc.writeMem(0xbde9, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfa25);
        EXPECT(gbc.pc(), 0xbdea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9760), 0xf6);
        EXPECT(gbc.readMem(0xbde9), 0x72);
        // 72 02CC
        gbc.setState(0x294b, 0xbe31, 0xb0a0, 0x970d, 0xb4fd, 0xe706, 0x1, 0x1);
        gbc.writeMem(0x294b, { 0x72 });
        gbc.writeMem(0xe706, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xbe31);
        EXPECT(gbc.pc(), 0x294c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe706), 0xb4);
        // 72 02CD
        gbc.setState(0x7209, 0x3c0, 0x2770, 0x4927, 0xfa01, 0xb283, 0x0, 0x0);
        gbc.writeMem(0x7209, { 0x72 });
        gbc.writeMem(0xb283, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3c0);
        EXPECT(gbc.pc(), 0x720a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb283), 0xfa);
        // 72 02CE
        gbc.setState(0x84da, 0xcadb, 0x6ac0, 0xca6c, 0x87da, 0x88b3, 0x0, 0x1);
        gbc.writeMem(0x84da, { 0x72 });
        gbc.writeMem(0x88b3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcadb);
        EXPECT(gbc.pc(), 0x84db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84da), 0x72);
        EXPECT(gbc.readMem(0x88b3), 0x87);
        // 72 02D0
        gbc.setState(0x9f89, 0x35d8, 0x4ba0, 0x3f9f, 0x31c9, 0xd6c9, 0x0, 0x1);
        gbc.writeMem(0x9f89, { 0x72 });
        gbc.writeMem(0xd6c9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x35d8);
        EXPECT(gbc.pc(), 0x9f8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f89), 0x72);
        EXPECT(gbc.readMem(0xd6c9), 0x31);
        // 72 02D1
        gbc.setState(0x9393, 0xc190, 0x220, 0xe937, 0xaa07, 0xc359, 0x0, 0x0);
        gbc.writeMem(0x9393, { 0x72 });
        gbc.writeMem(0xc359, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc190);
        EXPECT(gbc.pc(), 0x9394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9393), 0x72);
        EXPECT(gbc.readMem(0xc359), 0xaa);
        // 72 02D2
        gbc.setState(0x7c84, 0xd061, 0x3020, 0xd7a6, 0xbd4d, 0x8502, 0x0, 0x1);
        gbc.writeMem(0x7c84, { 0x72 });
        gbc.writeMem(0x8502, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd061);
        EXPECT(gbc.pc(), 0x7c85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8502), 0xbd);
        // 72 02D3
        gbc.setState(0x39a0, 0x6f27, 0x5a90, 0x7c1c, 0x6e87, 0xf3a9, 0x1, 0x0);
        gbc.writeMem(0x39a0, { 0x72 });
        gbc.writeMem(0xf3a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6f27);
        EXPECT(gbc.pc(), 0x39a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf3a9), 0x6e);
        // 72 02D5
        gbc.setState(0xd160, 0xbfa1, 0x23e0, 0x2894, 0x5346, 0x81d9, 0x0, 0x1);
        gbc.writeMem(0x81d9, { 0x0 });
        gbc.writeMem(0xd160, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbfa1);
        EXPECT(gbc.pc(), 0xd161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81d9), 0x53);
        EXPECT(gbc.readMem(0xd160), 0x72);
        // 72 02D9
        gbc.setState(0x98c3, 0xcff9, 0x35d0, 0xed02, 0xda24, 0xd2bc, 0x0, 0x1);
        gbc.writeMem(0x98c3, { 0x72 });
        gbc.writeMem(0xd2bc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xcff9);
        EXPECT(gbc.pc(), 0x98c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c3), 0x72);
        EXPECT(gbc.readMem(0xd2bc), 0xda);
        // 72 02DA
        gbc.setState(0xa677, 0xc875, 0xcc20, 0x2c31, 0xe807, 0x90fd, 0x1, 0x1);
        gbc.writeMem(0x90fd, { 0x0 });
        gbc.writeMem(0xa677, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc875);
        EXPECT(gbc.pc(), 0xa678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90fd), 0xe8);
        EXPECT(gbc.readMem(0xa677), 0x72);
        // 72 02E1
        gbc.setState(0x6e88, 0x328b, 0x60, 0x6644, 0xe300, 0xe23b, 0x1, 0x0);
        gbc.writeMem(0x6e88, { 0x72 });
        gbc.writeMem(0xe23b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x328b);
        EXPECT(gbc.pc(), 0x6e89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe23b), 0xe3);
        // 72 02E2
        gbc.setState(0xd130, 0xeec4, 0x7390, 0xc32e, 0xcc7d, 0xdb95, 0x1, 0x1);
        gbc.writeMem(0xd130, { 0x72 });
        gbc.writeMem(0xdb95, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xeec4);
        EXPECT(gbc.pc(), 0xd131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd130), 0x72);
        EXPECT(gbc.readMem(0xdb95), 0xcc);
        // 72 02E4
        gbc.setState(0x690f, 0xe66e, 0xe780, 0x5d96, 0x9946, 0x8829, 0x0, 0x0);
        gbc.writeMem(0x690f, { 0x72 });
        gbc.writeMem(0x8829, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe66e);
        EXPECT(gbc.pc(), 0x6910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8829), 0x99);
        // 72 02E7
        gbc.setState(0x8f90, 0xc2ff, 0x7cb0, 0x634c, 0xb688, 0xd7b5, 0x1, 0x1);
        gbc.writeMem(0x8f90, { 0x72 });
        gbc.writeMem(0xd7b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc2ff);
        EXPECT(gbc.pc(), 0x8f91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f90), 0x72);
        EXPECT(gbc.readMem(0xd7b5), 0xb6);
        // 72 02E8
        gbc.setState(0xd2a2, 0x3647, 0x44c0, 0x38f9, 0x61a7, 0xe132, 0x1, 0x1);
        gbc.writeMem(0xd2a2, { 0x72 });
        gbc.writeMem(0xe132, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3647);
        EXPECT(gbc.pc(), 0xd2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a2), 0x72);
        EXPECT(gbc.readMem(0xe132), 0x61);
        // 72 02E9
        gbc.setState(0x11e3, 0x6c18, 0x5fb0, 0xaf35, 0xab78, 0xdca2, 0x1, 0x0);
        gbc.writeMem(0x11e3, { 0x72 });
        gbc.writeMem(0xdca2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6c18);
        EXPECT(gbc.pc(), 0x11e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdca2), 0xab);
        // 72 02EB
        gbc.setState(0x8f84, 0x1f3d, 0x6b60, 0xad52, 0x3174, 0xb309, 0x1, 0x0);
        gbc.writeMem(0x8f84, { 0x72 });
        gbc.writeMem(0xb309, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1f3d);
        EXPECT(gbc.pc(), 0x8f85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f84), 0x72);
        EXPECT(gbc.readMem(0xb309), 0x31);
        // 72 02EE
        gbc.setState(0x71e5, 0xd97, 0xc690, 0x446, 0x427a, 0xc52c, 0x1, 0x1);
        gbc.writeMem(0x71e5, { 0x72 });
        gbc.writeMem(0xc52c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd97);
        EXPECT(gbc.pc(), 0x71e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc52c), 0x42);
        // 72 02EF
        gbc.setState(0x319e, 0x5984, 0xda20, 0x9d6a, 0xa696, 0xcc51, 0x1, 0x1);
        gbc.writeMem(0x319e, { 0x72 });
        gbc.writeMem(0xcc51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x5984);
        EXPECT(gbc.pc(), 0x319f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc51), 0xa6);
        // 72 02F0
        gbc.setState(0xc401, 0x3fb5, 0xbe10, 0x3918, 0x7c6d, 0xb8f1, 0x1, 0x0);
        gbc.writeMem(0xb8f1, { 0x0 });
        gbc.writeMem(0xc401, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3fb5);
        EXPECT(gbc.pc(), 0xc402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f1), 0x7c);
        EXPECT(gbc.readMem(0xc401), 0x72);
        // 72 02F1
        gbc.setState(0x6583, 0x4b6b, 0xab10, 0x2c90, 0xc133, 0xab01, 0x1, 0x0);
        gbc.writeMem(0x6583, { 0x72 });
        gbc.writeMem(0xab01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4b6b);
        EXPECT(gbc.pc(), 0x6584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab01), 0xc1);
        // 72 02F5
        gbc.setState(0x260b, 0xf975, 0x4f10, 0x534e, 0x8d8d, 0x951a, 0x0, 0x0);
        gbc.writeMem(0x260b, { 0x72 });
        gbc.writeMem(0x951a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf975);
        EXPECT(gbc.pc(), 0x260c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x951a), 0x8d);
        // 72 02F6
        gbc.setState(0x3295, 0x8fd7, 0x4210, 0x715a, 0xc697, 0x9cb3, 0x0, 0x0);
        gbc.writeMem(0x3295, { 0x72 });
        gbc.writeMem(0x9cb3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8fd7);
        EXPECT(gbc.pc(), 0x3296);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb3), 0xc6);
        // 72 02F8
        gbc.setState(0xad3d, 0xce5d, 0x2240, 0x487d, 0xa71d, 0xa216, 0x1, 0x1);
        gbc.writeMem(0xa216, { 0x0 });
        gbc.writeMem(0xad3d, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xce5d);
        EXPECT(gbc.pc(), 0xad3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa216), 0xa7);
        EXPECT(gbc.readMem(0xad3d), 0x72);
        // 72 02F9
        gbc.setState(0xeb29, 0xe024, 0x5650, 0xb0ac, 0x9c35, 0xc8ad, 0x1, 0x1);
        gbc.writeMem(0xc8ad, { 0x0 });
        gbc.writeMem(0xeb29, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe024);
        EXPECT(gbc.pc(), 0xeb2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ad), 0x9c);
        EXPECT(gbc.readMem(0xeb29), 0x72);
        // 72 02FA
        gbc.setState(0x895f, 0xefcf, 0x67f0, 0x12d5, 0x1123, 0xc7eb, 0x1, 0x0);
        gbc.writeMem(0x895f, { 0x72 });
        gbc.writeMem(0xc7eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xefcf);
        EXPECT(gbc.pc(), 0x8960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x895f), 0x72);
        EXPECT(gbc.readMem(0xc7eb), 0x11);
        // 72 02FB
        gbc.setState(0x9e5f, 0x7278, 0x9aa0, 0xd55c, 0x3cda, 0xb248, 0x1, 0x1);
        gbc.writeMem(0x9e5f, { 0x72 });
        gbc.writeMem(0xb248, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7278);
        EXPECT(gbc.pc(), 0x9e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e5f), 0x72);
        EXPECT(gbc.readMem(0xb248), 0x3c);
        // 72 02FC
        gbc.setState(0x477c, 0x3caa, 0x5f20, 0x1755, 0x1b64, 0xb1b3, 0x0, 0x0);
        gbc.writeMem(0x477c, { 0x72 });
        gbc.writeMem(0xb1b3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3caa);
        EXPECT(gbc.pc(), 0x477d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b3), 0x1b);
        // 72 0301
        gbc.setState(0xe202, 0x8bbd, 0x61c0, 0xe6b0, 0xdc2c, 0xc2d9, 0x1, 0x0);
        gbc.writeMem(0xc2d9, { 0x0 });
        gbc.writeMem(0xe202, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8bbd);
        EXPECT(gbc.pc(), 0xe203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2d9), 0xdc);
        EXPECT(gbc.readMem(0xe202), 0x72);
        // 72 0303
        gbc.setState(0x7d19, 0x84c4, 0x14f0, 0x38c7, 0x72ba, 0xd89d, 0x1, 0x1);
        gbc.writeMem(0x7d19, { 0x72 });
        gbc.writeMem(0xd89d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x84c4);
        EXPECT(gbc.pc(), 0x7d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89d), 0x72);
        // 72 0305
        gbc.setState(0x4738, 0x503c, 0x4a80, 0x3607, 0xc74d, 0xde04, 0x0, 0x1);
        gbc.writeMem(0x4738, { 0x72 });
        gbc.writeMem(0xde04, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x503c);
        EXPECT(gbc.pc(), 0x4739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde04), 0xc7);
        // 72 0306
        gbc.setState(0xaf52, 0x4b02, 0xa560, 0xb299, 0x4b03, 0x9d83, 0x0, 0x1);
        gbc.writeMem(0x9d83, { 0x0 });
        gbc.writeMem(0xaf52, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4b02);
        EXPECT(gbc.pc(), 0xaf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d83), 0x4b);
        EXPECT(gbc.readMem(0xaf52), 0x72);
        // 72 0307
        gbc.setState(0xc3c9, 0x7c0c, 0x4df0, 0x9bc7, 0xbfd9, 0x8a82, 0x0, 0x1);
        gbc.writeMem(0x8a82, { 0x0 });
        gbc.writeMem(0xc3c9, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7c0c);
        EXPECT(gbc.pc(), 0xc3ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a82), 0xbf);
        EXPECT(gbc.readMem(0xc3c9), 0x72);
        // 72 0308
        gbc.setState(0x3aa1, 0xacc, 0xdab0, 0x2218, 0x488b, 0xc6c4, 0x0, 0x0);
        gbc.writeMem(0x3aa1, { 0x72 });
        gbc.writeMem(0xc6c4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xacc);
        EXPECT(gbc.pc(), 0x3aa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c4), 0x48);
        // 72 0309
        gbc.setState(0x871d, 0xcd8, 0xdaf0, 0x1136, 0x46eb, 0xcd10, 0x0, 0x0);
        gbc.writeMem(0x871d, { 0x72 });
        gbc.writeMem(0xcd10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcd8);
        EXPECT(gbc.pc(), 0x871e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871d), 0x72);
        EXPECT(gbc.readMem(0xcd10), 0x46);
        // 72 030C
        gbc.setState(0x4921, 0xf873, 0x3c50, 0x6660, 0x1108, 0xa663, 0x1, 0x0);
        gbc.writeMem(0x4921, { 0x72 });
        gbc.writeMem(0xa663, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf873);
        EXPECT(gbc.pc(), 0x4922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa663), 0x11);
        // 72 030D
        gbc.setState(0xe305, 0x357c, 0x4d0, 0xd170, 0xd5cc, 0xc627, 0x0, 0x0);
        gbc.writeMem(0xc627, { 0x0 });
        gbc.writeMem(0xe305, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x357c);
        EXPECT(gbc.pc(), 0xe306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc627), 0xd5);
        EXPECT(gbc.readMem(0xe305), 0x72);
        // 72 030E
        gbc.setState(0x3bbc, 0x302f, 0xc930, 0x9fc3, 0x222f, 0xdd15, 0x1, 0x1);
        gbc.writeMem(0x3bbc, { 0x72 });
        gbc.writeMem(0xdd15, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x302f);
        EXPECT(gbc.pc(), 0x3bbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd15), 0x22);
        // 72 0312
        gbc.setState(0x4209, 0x9907, 0x2890, 0xe51c, 0x4591, 0xf91e, 0x1, 0x1);
        gbc.writeMem(0x4209, { 0x72 });
        gbc.writeMem(0xf91e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9907);
        EXPECT(gbc.pc(), 0x420a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf91e), 0x45);
        // 72 0314
        gbc.setState(0xc6e8, 0xa3b, 0x3bd0, 0xc424, 0x13ef, 0xa1a3, 0x0, 0x0);
        gbc.writeMem(0xa1a3, { 0x0 });
        gbc.writeMem(0xc6e8, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa3b);
        EXPECT(gbc.pc(), 0xc6e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a3), 0x13);
        EXPECT(gbc.readMem(0xc6e8), 0x72);
        // 72 0316
        gbc.setState(0x5a4d, 0x84e6, 0xd560, 0x588f, 0xd0e9, 0xcbd9, 0x1, 0x0);
        gbc.writeMem(0x5a4d, { 0x72 });
        gbc.writeMem(0xcbd9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x84e6);
        EXPECT(gbc.pc(), 0x5a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd9), 0xd0);
        // 72 0319
        gbc.setState(0x7006, 0x14a0, 0x2b0, 0x6619, 0xbc70, 0xec57, 0x0, 0x1);
        gbc.writeMem(0x7006, { 0x72 });
        gbc.writeMem(0xec57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x14a0);
        EXPECT(gbc.pc(), 0x7007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec57), 0xbc);
        // 72 031B
        gbc.setState(0x384a, 0xa41, 0x5910, 0xd8a9, 0xc3a3, 0x912f, 0x1, 0x1);
        gbc.writeMem(0x384a, { 0x72 });
        gbc.writeMem(0x912f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa41);
        EXPECT(gbc.pc(), 0x384b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912f), 0xc3);
        // 72 031D
        gbc.setState(0xa339, 0x9d3, 0xa7d0, 0x4119, 0xc7b1, 0xc928, 0x1, 0x0);
        gbc.writeMem(0xa339, { 0x72 });
        gbc.writeMem(0xc928, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9d3);
        EXPECT(gbc.pc(), 0xa33a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa339), 0x72);
        EXPECT(gbc.readMem(0xc928), 0xc7);
        // 72 031F
        gbc.setState(0x26d4, 0x6578, 0x5370, 0x964, 0xa158, 0xc5c1, 0x0, 0x1);
        gbc.writeMem(0x26d4, { 0x72 });
        gbc.writeMem(0xc5c1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6578);
        EXPECT(gbc.pc(), 0x26d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c1), 0xa1);
        // 72 0320
        gbc.setState(0x8cdc, 0x920c, 0x2550, 0x140a, 0x96c5, 0xa243, 0x1, 0x1);
        gbc.writeMem(0x8cdc, { 0x72 });
        gbc.writeMem(0xa243, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x920c);
        EXPECT(gbc.pc(), 0x8cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cdc), 0x72);
        EXPECT(gbc.readMem(0xa243), 0x96);
        // 72 0322
        gbc.setState(0x2136, 0x2c18, 0x48e0, 0x56d2, 0x92f9, 0xe34f, 0x1, 0x0);
        gbc.writeMem(0x2136, { 0x72 });
        gbc.writeMem(0xe34f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2c18);
        EXPECT(gbc.pc(), 0x2137);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe34f), 0x92);
        // 72 0323
        gbc.setState(0xb58a, 0xe297, 0x3ae0, 0x8a39, 0x2162, 0x819f, 0x1, 0x1);
        gbc.writeMem(0x819f, { 0x0 });
        gbc.writeMem(0xb58a, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe297);
        EXPECT(gbc.pc(), 0xb58b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819f), 0x21);
        EXPECT(gbc.readMem(0xb58a), 0x72);
        // 72 0324
        gbc.setState(0x5c49, 0xd37f, 0x6090, 0x6b, 0x3f15, 0xa73f, 0x0, 0x0);
        gbc.writeMem(0x5c49, { 0x72 });
        gbc.writeMem(0xa73f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd37f);
        EXPECT(gbc.pc(), 0x5c4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa73f), 0x3f);
        // 72 0329
        gbc.setState(0x4bec, 0x642a, 0x78d0, 0x5bec, 0xb17f, 0x8410, 0x1, 0x1);
        gbc.writeMem(0x4bec, { 0x72 });
        gbc.writeMem(0x8410, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x642a);
        EXPECT(gbc.pc(), 0x4bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8410), 0xb1);
        // 72 032B
        gbc.setState(0x48c3, 0xd9e3, 0xc00, 0x507a, 0xfd59, 0xcdd0, 0x0, 0x1);
        gbc.writeMem(0x48c3, { 0x72 });
        gbc.writeMem(0xcdd0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd9e3);
        EXPECT(gbc.pc(), 0x48c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd0), 0xfd);
        // 72 032C
        gbc.setState(0x3606, 0xd631, 0xd410, 0xbd2, 0x9ac4, 0xb9ef, 0x1, 0x1);
        gbc.writeMem(0x3606, { 0x72 });
        gbc.writeMem(0xb9ef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd631);
        EXPECT(gbc.pc(), 0x3607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ef), 0x9a);
        // 72 032E
        gbc.setState(0x6e95, 0xf650, 0x380, 0xdcb1, 0x1846, 0xecdb, 0x1, 0x0);
        gbc.writeMem(0x6e95, { 0x72 });
        gbc.writeMem(0xecdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf650);
        EXPECT(gbc.pc(), 0x6e96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecdb), 0x18);
        // 72 032F
        gbc.setState(0x3846, 0xe36d, 0xd610, 0x2f6c, 0xa944, 0x8770, 0x1, 0x0);
        gbc.writeMem(0x3846, { 0x72 });
        gbc.writeMem(0x8770, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe36d);
        EXPECT(gbc.pc(), 0x3847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8770), 0xa9);
        // 72 0331
        gbc.setState(0x5a91, 0xa5e1, 0x3900, 0xad2e, 0xd462, 0x8dba, 0x0, 0x1);
        gbc.writeMem(0x5a91, { 0x72 });
        gbc.writeMem(0x8dba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa5e1);
        EXPECT(gbc.pc(), 0x5a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dba), 0xd4);
        // 72 0334
        gbc.setState(0xcbaa, 0x4164, 0xfd40, 0xc993, 0x78f, 0xa316, 0x1, 0x1);
        gbc.writeMem(0xa316, { 0x0 });
        gbc.writeMem(0xcbaa, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4164);
        EXPECT(gbc.pc(), 0xcbab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa316), 0x7);
        EXPECT(gbc.readMem(0xcbaa), 0x72);
        // 72 0335
        gbc.setState(0x259, 0x232a, 0x1ed0, 0xb893, 0x7fdf, 0x9789, 0x1, 0x1);
        gbc.writeMem(0x259, { 0x72 });
        gbc.writeMem(0x9789, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x232a);
        EXPECT(gbc.pc(), 0x25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9789), 0x7f);
        // 72 033A
        gbc.setState(0x384f, 0xe449, 0xbe30, 0x4a89, 0xdeec, 0xd3a2, 0x0, 0x0);
        gbc.writeMem(0x384f, { 0x72 });
        gbc.writeMem(0xd3a2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe449);
        EXPECT(gbc.pc(), 0x3850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3a2), 0xde);
        // 72 033C
        gbc.setState(0xea64, 0xee8f, 0xa340, 0x90c, 0x1425, 0x94a1, 0x1, 0x0);
        gbc.writeMem(0x94a1, { 0x0 });
        gbc.writeMem(0xea64, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xee8f);
        EXPECT(gbc.pc(), 0xea65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a1), 0x14);
        EXPECT(gbc.readMem(0xea64), 0x72);
        // 72 033E
        gbc.setState(0x94a5, 0xd3ed, 0x8c60, 0xe6fe, 0xfca9, 0xfb35, 0x0, 0x1);
        gbc.writeMem(0x94a5, { 0x72 });
        gbc.writeMem(0xfb35, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd3ed);
        EXPECT(gbc.pc(), 0x94a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a5), 0x72);
        EXPECT(gbc.readMem(0xfb35), 0xfc);
        // 72 033F
        gbc.setState(0xdd8b, 0x1989, 0xf6e0, 0x75bc, 0xa72e, 0xa45d, 0x0, 0x1);
        gbc.writeMem(0xa45d, { 0x0 });
        gbc.writeMem(0xdd8b, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1989);
        EXPECT(gbc.pc(), 0xdd8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa45d), 0xa7);
        EXPECT(gbc.readMem(0xdd8b), 0x72);
        // 72 0342
        gbc.setState(0xbc53, 0x226c, 0x1bd0, 0xa3a, 0x6f2c, 0x9c59, 0x1, 0x1);
        gbc.writeMem(0x9c59, { 0x0 });
        gbc.writeMem(0xbc53, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x226c);
        EXPECT(gbc.pc(), 0xbc54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c59), 0x6f);
        EXPECT(gbc.readMem(0xbc53), 0x72);
        // 72 0349
        gbc.setState(0x8554, 0xa420, 0x60b0, 0x1d98, 0xcd47, 0xc32a, 0x1, 0x1);
        gbc.writeMem(0x8554, { 0x72 });
        gbc.writeMem(0xc32a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa420);
        EXPECT(gbc.pc(), 0x8555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8554), 0x72);
        EXPECT(gbc.readMem(0xc32a), 0xcd);
        // 72 034C
        gbc.setState(0x7bb3, 0xadba, 0xdb10, 0x1aeb, 0xfc8f, 0xcd0b, 0x1, 0x1);
        gbc.writeMem(0x7bb3, { 0x72 });
        gbc.writeMem(0xcd0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xadba);
        EXPECT(gbc.pc(), 0x7bb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd0b), 0xfc);
        // 72 034D
        gbc.setState(0x899a, 0xd5f, 0x9760, 0xd8b8, 0x2a75, 0xe24f, 0x1, 0x0);
        gbc.writeMem(0x899a, { 0x72 });
        gbc.writeMem(0xe24f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd5f);
        EXPECT(gbc.pc(), 0x899b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x899a), 0x72);
        EXPECT(gbc.readMem(0xe24f), 0x2a);
        // 72 0351
        gbc.setState(0x4de3, 0xd1c8, 0x2060, 0xaebd, 0xd016, 0xee79, 0x0, 0x0);
        gbc.writeMem(0x4de3, { 0x72 });
        gbc.writeMem(0xee79, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd1c8);
        EXPECT(gbc.pc(), 0x4de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee79), 0xd0);
        // 72 0352
        gbc.setState(0xdd3a, 0x8847, 0xc3a0, 0x75c5, 0x8527, 0x91c2, 0x0, 0x0);
        gbc.writeMem(0x91c2, { 0x0 });
        gbc.writeMem(0xdd3a, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8847);
        EXPECT(gbc.pc(), 0xdd3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c2), 0x85);
        EXPECT(gbc.readMem(0xdd3a), 0x72);
        // 72 0353
        gbc.setState(0xda6f, 0x166d, 0xb390, 0x26be, 0x12e6, 0xfc92, 0x1, 0x1);
        gbc.writeMem(0xda6f, { 0x72 });
        gbc.writeMem(0xfc92, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x166d);
        EXPECT(gbc.pc(), 0xda70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda6f), 0x72);
        EXPECT(gbc.readMem(0xfc92), 0x12);
        // 72 0357
        gbc.setState(0x6a4f, 0xd020, 0xbe00, 0xabb0, 0x465d, 0xbdfe, 0x0, 0x1);
        gbc.writeMem(0x6a4f, { 0x72 });
        gbc.writeMem(0xbdfe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd020);
        EXPECT(gbc.pc(), 0x6a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdfe), 0x46);
        // 72 0358
        gbc.setState(0x4bcf, 0xfaa0, 0x2cc0, 0xcb7b, 0x2315, 0x8bac, 0x0, 0x0);
        gbc.writeMem(0x4bcf, { 0x72 });
        gbc.writeMem(0x8bac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfaa0);
        EXPECT(gbc.pc(), 0x4bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bac), 0x23);
        // 72 035A
        gbc.setState(0x728d, 0x20aa, 0x39a0, 0x2aab, 0x64fb, 0xc41e, 0x0, 0x1);
        gbc.writeMem(0x728d, { 0x72 });
        gbc.writeMem(0xc41e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x20aa);
        EXPECT(gbc.pc(), 0x728e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc41e), 0x64);
        // 72 035B
        gbc.setState(0x2cb1, 0xc34a, 0x2320, 0x9c76, 0x2f92, 0xcc88, 0x0, 0x1);
        gbc.writeMem(0x2cb1, { 0x72 });
        gbc.writeMem(0xcc88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc34a);
        EXPECT(gbc.pc(), 0x2cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc88), 0x2f);
        // 72 035D
        gbc.setState(0x739a, 0x28a2, 0xbc60, 0xdb8e, 0xab85, 0xc3de, 0x1, 0x1);
        gbc.writeMem(0x739a, { 0x72 });
        gbc.writeMem(0xc3de, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x28a2);
        EXPECT(gbc.pc(), 0x739b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3de), 0xab);
        // 72 035F
        gbc.setState(0x76e4, 0x7004, 0xb430, 0x837d, 0xf329, 0xb0a7, 0x0, 0x0);
        gbc.writeMem(0x76e4, { 0x72 });
        gbc.writeMem(0xb0a7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7004);
        EXPECT(gbc.pc(), 0x76e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0a7), 0xf3);
        // 72 0363
        gbc.setState(0x219a, 0xe345, 0x4490, 0x51ae, 0xb5b9, 0xec51, 0x0, 0x1);
        gbc.writeMem(0x219a, { 0x72 });
        gbc.writeMem(0xec51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe345);
        EXPECT(gbc.pc(), 0x219b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec51), 0xb5);
        // 72 0364
        gbc.setState(0xebd0, 0x8965, 0x1d80, 0xe4c8, 0xebd5, 0xbb3a, 0x0, 0x0);
        gbc.writeMem(0xbb3a, { 0x0 });
        gbc.writeMem(0xebd0, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8965);
        EXPECT(gbc.pc(), 0xebd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb3a), 0xeb);
        EXPECT(gbc.readMem(0xebd0), 0x72);
        // 72 0369
        gbc.setState(0x6ed9, 0xb0c4, 0x9060, 0xdc47, 0x710e, 0xe7b8, 0x1, 0x1);
        gbc.writeMem(0x6ed9, { 0x72 });
        gbc.writeMem(0xe7b8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb0c4);
        EXPECT(gbc.pc(), 0x6eda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7b8), 0x71);
        // 72 036B
        gbc.setState(0x4c12, 0xa46c, 0x2610, 0xfa2c, 0xce17, 0xcebb, 0x0, 0x0);
        gbc.writeMem(0x4c12, { 0x72 });
        gbc.writeMem(0xcebb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa46c);
        EXPECT(gbc.pc(), 0x4c13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcebb), 0xce);
        // 72 036E
        gbc.setState(0x68b4, 0x897a, 0x8ac0, 0x37eb, 0x127, 0xff5b, 0x1, 0x1);
        gbc.writeMem(0x68b4, { 0x72 });
        gbc.writeMem(0xff5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x897a);
        EXPECT(gbc.pc(), 0x68b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff5b), 0x1);
        // 72 036F
        gbc.setState(0x6caf, 0x81bb, 0xa880, 0xc566, 0x7a88, 0xcdb6, 0x1, 0x0);
        gbc.writeMem(0x6caf, { 0x72 });
        gbc.writeMem(0xcdb6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x81bb);
        EXPECT(gbc.pc(), 0x6cb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb6), 0x7a);
        // 72 0371
        gbc.setState(0xa13e, 0xd841, 0xb6d0, 0x2aa1, 0x2736, 0x9cee, 0x1, 0x0);
        gbc.writeMem(0x9cee, { 0x0 });
        gbc.writeMem(0xa13e, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd841);
        EXPECT(gbc.pc(), 0xa13f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cee), 0x27);
        EXPECT(gbc.readMem(0xa13e), 0x72);
        // 72 0372
        gbc.setState(0x6612, 0x61eb, 0xadd0, 0x941e, 0x842c, 0xbf88, 0x1, 0x0);
        gbc.writeMem(0x6612, { 0x72 });
        gbc.writeMem(0xbf88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x61eb);
        EXPECT(gbc.pc(), 0x6613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf88), 0x84);
        // 72 0374
        gbc.setState(0xc465, 0x3729, 0x3c0, 0xdcee, 0x4a37, 0xde8d, 0x0, 0x1);
        gbc.writeMem(0xc465, { 0x72 });
        gbc.writeMem(0xde8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3729);
        EXPECT(gbc.pc(), 0xc466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc465), 0x72);
        EXPECT(gbc.readMem(0xde8d), 0x4a);
        // 72 0375
        gbc.setState(0xcc8a, 0x9f2e, 0x7220, 0x2d83, 0x5b62, 0xb1ae, 0x0, 0x1);
        gbc.writeMem(0xb1ae, { 0x0 });
        gbc.writeMem(0xcc8a, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9f2e);
        EXPECT(gbc.pc(), 0xcc8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ae), 0x5b);
        EXPECT(gbc.readMem(0xcc8a), 0x72);
        // 72 0378
        gbc.setState(0xd4a9, 0xdec9, 0xf080, 0x73d1, 0x13bf, 0xefc2, 0x1, 0x0);
        gbc.writeMem(0xd4a9, { 0x72 });
        gbc.writeMem(0xefc2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdec9);
        EXPECT(gbc.pc(), 0xd4aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a9), 0x72);
        EXPECT(gbc.readMem(0xefc2), 0x13);
        // 72 037A
        gbc.setState(0x99e1, 0xf14, 0x1a30, 0x63d2, 0x8206, 0xe045, 0x1, 0x1);
        gbc.writeMem(0x99e1, { 0x72 });
        gbc.writeMem(0xe045, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf14);
        EXPECT(gbc.pc(), 0x99e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e1), 0x72);
        EXPECT(gbc.readMem(0xe045), 0x82);
        // 72 037C
        gbc.setState(0x9c7a, 0xaa6c, 0xd4e0, 0xc958, 0xc9ea, 0xeb51, 0x1, 0x1);
        gbc.writeMem(0x9c7a, { 0x72 });
        gbc.writeMem(0xeb51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xaa6c);
        EXPECT(gbc.pc(), 0x9c7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c7a), 0x72);
        EXPECT(gbc.readMem(0xeb51), 0xc9);
        // 72 0382
        gbc.setState(0x52b, 0xdb55, 0x6370, 0x7bbe, 0xf1, 0x7dd8, 0x1, 0x0);
        gbc.writeMem(0x52b, { 0x72 });
        gbc.writeMem(0x7dd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xdb55);
        EXPECT(gbc.pc(), 0x52c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 72 0384
        gbc.setState(0x6e05, 0x5c24, 0x8d20, 0x3fec, 0x78dd, 0xe731, 0x1, 0x1);
        gbc.writeMem(0x6e05, { 0x72 });
        gbc.writeMem(0xe731, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5c24);
        EXPECT(gbc.pc(), 0x6e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe731), 0x78);
        // 72 0385
        gbc.setState(0xd82e, 0x57ad, 0xf2a0, 0xc864, 0x5858, 0x8827, 0x1, 0x0);
        gbc.writeMem(0x8827, { 0x0 });
        gbc.writeMem(0xd82e, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x57ad);
        EXPECT(gbc.pc(), 0xd82f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8827), 0x58);
        EXPECT(gbc.readMem(0xd82e), 0x72);
        // 72 0389
        gbc.setState(0xee9b, 0x36bd, 0x81f0, 0x6041, 0x5a9c, 0xe8aa, 0x1, 0x0);
        gbc.writeMem(0xe8aa, { 0x0 });
        gbc.writeMem(0xee9b, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x36bd);
        EXPECT(gbc.pc(), 0xee9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8aa), 0x5a);
        EXPECT(gbc.readMem(0xee9b), 0x72);
        // 72 038A
        gbc.setState(0x972a, 0x738f, 0x7910, 0x7950, 0x1914, 0xcdcf, 0x1, 0x1);
        gbc.writeMem(0x972a, { 0x72 });
        gbc.writeMem(0xcdcf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x738f);
        EXPECT(gbc.pc(), 0x972b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x972a), 0x72);
        EXPECT(gbc.readMem(0xcdcf), 0x19);
        // 72 038C
        gbc.setState(0x6836, 0x5d7b, 0xb040, 0x8713, 0x736c, 0xf201, 0x1, 0x0);
        gbc.writeMem(0x6836, { 0x72 });
        gbc.writeMem(0xf201, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5d7b);
        EXPECT(gbc.pc(), 0x6837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf201), 0x73);
        // 72 038F
        gbc.setState(0x6cd0, 0x37ca, 0x3a50, 0x8c0f, 0xfef5, 0xa05b, 0x0, 0x0);
        gbc.writeMem(0x6cd0, { 0x72 });
        gbc.writeMem(0xa05b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x37ca);
        EXPECT(gbc.pc(), 0x6cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa05b), 0xfe);
        // 72 0390
        gbc.setState(0xefdd, 0x3b76, 0xcd60, 0xa92e, 0xd1b6, 0xda31, 0x1, 0x1);
        gbc.writeMem(0xda31, { 0x0 });
        gbc.writeMem(0xefdd, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3b76);
        EXPECT(gbc.pc(), 0xefde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda31), 0xd1);
        EXPECT(gbc.readMem(0xefdd), 0x72);
        // 72 0394
        gbc.setState(0x74e8, 0xd3ea, 0x7dc0, 0xc81d, 0x5d8c, 0x86c2, 0x1, 0x1);
        gbc.writeMem(0x74e8, { 0x72 });
        gbc.writeMem(0x86c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd3ea);
        EXPECT(gbc.pc(), 0x74e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c2), 0x5d);
        // 72 0396
        gbc.setState(0x3ec8, 0xc858, 0x7260, 0x38f, 0xde19, 0xf348, 0x0, 0x1);
        gbc.writeMem(0x3ec8, { 0x72 });
        gbc.writeMem(0xf348, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc858);
        EXPECT(gbc.pc(), 0x3ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf348), 0xde);
        // 72 039A
        gbc.setState(0x1865, 0x694f, 0xf720, 0x5bc0, 0xba97, 0xfa53, 0x0, 0x1);
        gbc.writeMem(0x1865, { 0x72 });
        gbc.writeMem(0xfa53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x694f);
        EXPECT(gbc.pc(), 0x1866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa53), 0xba);
        // 72 039B
        gbc.setState(0x5452, 0xf048, 0x5380, 0xffbf, 0x8275, 0xb06a, 0x0, 0x0);
        gbc.writeMem(0x5452, { 0x72 });
        gbc.writeMem(0xb06a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf048);
        EXPECT(gbc.pc(), 0x5453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb06a), 0x82);
        // 72 039C
        gbc.setState(0xbd13, 0xec12, 0x6770, 0xb5ab, 0x8a98, 0xfd8d, 0x0, 0x1);
        gbc.writeMem(0xbd13, { 0x72 });
        gbc.writeMem(0xfd8d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xec12);
        EXPECT(gbc.pc(), 0xbd14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd13), 0x72);
        EXPECT(gbc.readMem(0xfd8d), 0x8a);
        // 72 039E
        gbc.setState(0x3daa, 0xa6a9, 0x8730, 0x2c6e, 0x7271, 0xecde, 0x1, 0x1);
        gbc.writeMem(0x3daa, { 0x72 });
        gbc.writeMem(0xecde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa6a9);
        EXPECT(gbc.pc(), 0x3dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecde), 0x72);
        // 72 03A0
        gbc.setState(0x3a9, 0x7bf, 0x9540, 0x591d, 0xcf25, 0xfdf8, 0x1, 0x1);
        gbc.writeMem(0x3a9, { 0x72 });
        gbc.writeMem(0xfdf8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7bf);
        EXPECT(gbc.pc(), 0x3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfdf8), 0xcf);
        // 72 03A3
        gbc.setState(0xe928, 0x6230, 0xb220, 0xd5ce, 0x8052, 0xa68f, 0x0, 0x0);
        gbc.writeMem(0xa68f, { 0x0 });
        gbc.writeMem(0xe928, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6230);
        EXPECT(gbc.pc(), 0xe929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa68f), 0x80);
        EXPECT(gbc.readMem(0xe928), 0x72);
        // 72 03A4
        gbc.setState(0xc374, 0x27be, 0xbed0, 0x31e0, 0xc952, 0xd82e, 0x1, 0x0);
        gbc.writeMem(0xc374, { 0x72 });
        gbc.writeMem(0xd82e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x27be);
        EXPECT(gbc.pc(), 0xc375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc374), 0x72);
        EXPECT(gbc.readMem(0xd82e), 0xc9);
        // 72 03A5
        gbc.setState(0xc20d, 0xa38a, 0xed70, 0xd8c1, 0x3679, 0xa986, 0x0, 0x1);
        gbc.writeMem(0xa986, { 0x0 });
        gbc.writeMem(0xc20d, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa38a);
        EXPECT(gbc.pc(), 0xc20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa986), 0x36);
        EXPECT(gbc.readMem(0xc20d), 0x72);
        // 72 03A6
        gbc.setState(0x2aaa, 0xecf5, 0x5950, 0xea81, 0xf39e, 0xbb3a, 0x1, 0x1);
        gbc.writeMem(0x2aaa, { 0x72 });
        gbc.writeMem(0xbb3a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xecf5);
        EXPECT(gbc.pc(), 0x2aab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb3a), 0xf3);
        // 72 03A8
        gbc.setState(0x3216, 0x18c4, 0xa400, 0xa17a, 0x61aa, 0x980a, 0x1, 0x0);
        gbc.writeMem(0x3216, { 0x72 });
        gbc.writeMem(0x980a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x18c4);
        EXPECT(gbc.pc(), 0x3217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x980a), 0x61);
        // 72 03A9
        gbc.setState(0xdc58, 0xf961, 0xcaf0, 0x1dbf, 0x962b, 0xb361, 0x0, 0x1);
        gbc.writeMem(0xb361, { 0x0 });
        gbc.writeMem(0xdc58, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf961);
        EXPECT(gbc.pc(), 0xdc59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb361), 0x96);
        EXPECT(gbc.readMem(0xdc58), 0x72);
        // 72 03AB
        gbc.setState(0xb356, 0x41e3, 0xd140, 0x95fd, 0xd325, 0xbdfa, 0x1, 0x0);
        gbc.writeMem(0xb356, { 0x72 });
        gbc.writeMem(0xbdfa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x41e3);
        EXPECT(gbc.pc(), 0xb357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb356), 0x72);
        EXPECT(gbc.readMem(0xbdfa), 0xd3);
        // 72 03AD
        gbc.setState(0xa368, 0x536f, 0xdd50, 0xb70b, 0x116c, 0xd652, 0x0, 0x1);
        gbc.writeMem(0xa368, { 0x72 });
        gbc.writeMem(0xd652, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x536f);
        EXPECT(gbc.pc(), 0xa369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa368), 0x72);
        EXPECT(gbc.readMem(0xd652), 0x11);
        // 72 03AE
        gbc.setState(0x91d8, 0xddc8, 0x8bb0, 0x2433, 0x6c45, 0xcc20, 0x1, 0x0);
        gbc.writeMem(0x91d8, { 0x72 });
        gbc.writeMem(0xcc20, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xddc8);
        EXPECT(gbc.pc(), 0x91d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d8), 0x72);
        EXPECT(gbc.readMem(0xcc20), 0x6c);
        // 72 03AF
        gbc.setState(0xeaf7, 0xbe38, 0x3d20, 0xd35c, 0xb2c7, 0xcb3a, 0x0, 0x1);
        gbc.writeMem(0xcb3a, { 0x0 });
        gbc.writeMem(0xeaf7, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xbe38);
        EXPECT(gbc.pc(), 0xeaf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3a), 0xb2);
        EXPECT(gbc.readMem(0xeaf7), 0x72);
        // 72 03B0
        gbc.setState(0x8471, 0x27a1, 0x2ba0, 0x1d31, 0xd9ba, 0x8cff, 0x1, 0x0);
        gbc.writeMem(0x8471, { 0x72 });
        gbc.writeMem(0x8cff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x27a1);
        EXPECT(gbc.pc(), 0x8472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8471), 0x72);
        EXPECT(gbc.readMem(0x8cff), 0xd9);
        // 72 03B3
        gbc.setState(0x6492, 0xe118, 0x6f20, 0xbeff, 0xc776, 0xcc0a, 0x0, 0x1);
        gbc.writeMem(0x6492, { 0x72 });
        gbc.writeMem(0xcc0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe118);
        EXPECT(gbc.pc(), 0x6493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc0a), 0xc7);
        // 72 03B4
        gbc.setState(0xc367, 0x1901, 0x1ec0, 0x15d4, 0x9ffd, 0xe268, 0x1, 0x0);
        gbc.writeMem(0xc367, { 0x72 });
        gbc.writeMem(0xe268, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1901);
        EXPECT(gbc.pc(), 0xc368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc367), 0x72);
        EXPECT(gbc.readMem(0xe268), 0x9f);
        // 72 03B5
        gbc.setState(0x7553, 0xc75a, 0xe7e0, 0x7a02, 0x2c0e, 0xf9f7, 0x0, 0x1);
        gbc.writeMem(0x7553, { 0x72 });
        gbc.writeMem(0xf9f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc75a);
        EXPECT(gbc.pc(), 0x7554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf9f7), 0x2c);
        // 72 03B7
        gbc.setState(0xee4d, 0x2e54, 0xe2c0, 0x1993, 0x79af, 0xc462, 0x1, 0x1);
        gbc.writeMem(0xc462, { 0x0 });
        gbc.writeMem(0xee4d, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2e54);
        EXPECT(gbc.pc(), 0xee4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc462), 0x79);
        EXPECT(gbc.readMem(0xee4d), 0x72);
        // 72 03B8
        gbc.setState(0x47c2, 0x155e, 0xd2b0, 0xadca, 0xa2f, 0x9d8b, 0x0, 0x0);
        gbc.writeMem(0x47c2, { 0x72 });
        gbc.writeMem(0x9d8b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x155e);
        EXPECT(gbc.pc(), 0x47c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d8b), 0xa);
        // 72 03B9
        gbc.setState(0x32e3, 0xfbc, 0x44f0, 0x8517, 0x9afa, 0xfe51, 0x0, 0x1);
        gbc.writeMem(0x32e3, { 0x72 });
        gbc.writeMem(0xfe51, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xfbc);
        EXPECT(gbc.pc(), 0x32e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe51), 0x9a);
        // 72 03BC
        gbc.setState(0x39e0, 0x48eb, 0x5d20, 0x4313, 0x7041, 0xc92e, 0x1, 0x1);
        gbc.writeMem(0x39e0, { 0x72 });
        gbc.writeMem(0xc92e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x48eb);
        EXPECT(gbc.pc(), 0x39e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc92e), 0x70);
        // 72 03BE
        gbc.setState(0xd85, 0x8387, 0xdee0, 0x31d5, 0xbd77, 0xb587, 0x0, 0x1);
        gbc.writeMem(0xd85, { 0x72 });
        gbc.writeMem(0xb587, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8387);
        EXPECT(gbc.pc(), 0xd86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb587), 0xbd);
        // 72 03BF
        gbc.setState(0x7ef2, 0x2d72, 0x6500, 0x1df5, 0xbee, 0xfaef, 0x1, 0x1);
        gbc.writeMem(0x7ef2, { 0x72 });
        gbc.writeMem(0xfaef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2d72);
        EXPECT(gbc.pc(), 0x7ef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfaef), 0xb);
        // 72 03C0
        gbc.setState(0x9b72, 0x55cc, 0xc370, 0x6ec0, 0x8e72, 0xaa4c, 0x0, 0x0);
        gbc.writeMem(0x9b72, { 0x72 });
        gbc.writeMem(0xaa4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x55cc);
        EXPECT(gbc.pc(), 0x9b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b72), 0x72);
        EXPECT(gbc.readMem(0xaa4c), 0x8e);
        // 72 03C1
        gbc.setState(0xc84f, 0xd6c6, 0x690, 0x352f, 0x151b, 0xfd70, 0x0, 0x0);
        gbc.writeMem(0xc84f, { 0x72 });
        gbc.writeMem(0xfd70, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd6c6);
        EXPECT(gbc.pc(), 0xc850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc84f), 0x72);
        EXPECT(gbc.readMem(0xfd70), 0x15);
        // 72 03C2
        gbc.setState(0x9db8, 0x3866, 0xda80, 0xf870, 0x425b, 0x86f4, 0x1, 0x1);
        gbc.writeMem(0x86f4, { 0x0 });
        gbc.writeMem(0x9db8, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3866);
        EXPECT(gbc.pc(), 0x9db9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f4), 0x42);
        EXPECT(gbc.readMem(0x9db8), 0x72);
        // 72 03C8
        gbc.setState(0x7e52, 0x6032, 0x89c0, 0xbeee, 0xed04, 0x8401, 0x0, 0x0);
        gbc.writeMem(0x7e52, { 0x72 });
        gbc.writeMem(0x8401, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6032);
        EXPECT(gbc.pc(), 0x7e53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8401), 0xed);
        // 72 03CB
        gbc.setState(0x3936, 0x303b, 0xd030, 0x68b0, 0xb94f, 0xa5c8, 0x0, 0x1);
        gbc.writeMem(0x3936, { 0x72 });
        gbc.writeMem(0xa5c8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x303b);
        EXPECT(gbc.pc(), 0x3937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c8), 0xb9);
        // 72 03CC
        gbc.setState(0x4085, 0x3cb5, 0x7ba0, 0x99b, 0xe035, 0xc04a, 0x0, 0x0);
        gbc.writeMem(0x4085, { 0x72 });
        gbc.writeMem(0xc04a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3cb5);
        EXPECT(gbc.pc(), 0x4086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc04a), 0xe0);
        // 72 03CE
        gbc.setState(0x45a6, 0xbb59, 0xb0b0, 0xb2dd, 0xd712, 0xed50, 0x0, 0x1);
        gbc.writeMem(0x45a6, { 0x72 });
        gbc.writeMem(0xed50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbb59);
        EXPECT(gbc.pc(), 0x45a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed50), 0xd7);
        // 72 03CF
        gbc.setState(0xc3b4, 0xb0b8, 0xbe90, 0xa0f7, 0xfa4f, 0xed4c, 0x1, 0x0);
        gbc.writeMem(0xc3b4, { 0x72 });
        gbc.writeMem(0xed4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb0b8);
        EXPECT(gbc.pc(), 0xc3b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b4), 0x72);
        EXPECT(gbc.readMem(0xed4c), 0xfa);
        // 72 03D1
        gbc.setState(0x9db2, 0x38f9, 0x1640, 0x8d1a, 0xb043, 0xfa4f, 0x1, 0x0);
        gbc.writeMem(0x9db2, { 0x72 });
        gbc.writeMem(0xfa4f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x38f9);
        EXPECT(gbc.pc(), 0x9db3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db2), 0x72);
        EXPECT(gbc.readMem(0xfa4f), 0xb0);
        // 72 03D2
        gbc.setState(0x6ede, 0xdb24, 0xa770, 0xdaf9, 0x76ec, 0xcf93, 0x0, 0x0);
        gbc.writeMem(0x6ede, { 0x72 });
        gbc.writeMem(0xcf93, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xdb24);
        EXPECT(gbc.pc(), 0x6edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf93), 0x76);
        // 72 03D3
        gbc.setState(0xe836, 0x7af5, 0xb520, 0x71fb, 0x26fd, 0x8a2c, 0x0, 0x0);
        gbc.writeMem(0x8a2c, { 0x0 });
        gbc.writeMem(0xe836, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7af5);
        EXPECT(gbc.pc(), 0xe837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2c), 0x26);
        EXPECT(gbc.readMem(0xe836), 0x72);
        // 72 03D4
        gbc.setState(0x176c, 0xb77d, 0xf4c0, 0x54c4, 0x6605, 0xf295, 0x0, 0x1);
        gbc.writeMem(0x176c, { 0x72 });
        gbc.writeMem(0xf295, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb77d);
        EXPECT(gbc.pc(), 0x176d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf295), 0x66);
        // 72 03D8
        gbc.setState(0x8d8c, 0x3afe, 0xcac0, 0x5123, 0x7044, 0xb469, 0x1, 0x0);
        gbc.writeMem(0x8d8c, { 0x72 });
        gbc.writeMem(0xb469, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3afe);
        EXPECT(gbc.pc(), 0x8d8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d8c), 0x72);
        EXPECT(gbc.readMem(0xb469), 0x70);
        // 72 03DA
        gbc.setState(0x3611, 0xe9ad, 0x21e0, 0x310, 0x5eb, 0xf423, 0x1, 0x0);
        gbc.writeMem(0x3611, { 0x72 });
        gbc.writeMem(0xf423, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe9ad);
        EXPECT(gbc.pc(), 0x3612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf423), 0x5);
        // 72 03DC
        gbc.setState(0x7a9a, 0xddc5, 0x4ae0, 0xac14, 0x749a, 0xbd16, 0x1, 0x0);
        gbc.writeMem(0x7a9a, { 0x72 });
        gbc.writeMem(0xbd16, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xddc5);
        EXPECT(gbc.pc(), 0x7a9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd16), 0x74);
        // 72 03DE
        gbc.setState(0xd634, 0x7c29, 0x36b0, 0x9648, 0x936c, 0xf171, 0x1, 0x1);
        gbc.writeMem(0xd634, { 0x72 });
        gbc.writeMem(0xf171, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7c29);
        EXPECT(gbc.pc(), 0xd635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd634), 0x72);
        EXPECT(gbc.readMem(0xf171), 0x93);
        // 72 03E0
        gbc.setState(0x9dcd, 0x3b42, 0x3d00, 0x3f7e, 0x8c2b, 0xb82d, 0x1, 0x0);
        gbc.writeMem(0x9dcd, { 0x72 });
        gbc.writeMem(0xb82d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3b42);
        EXPECT(gbc.pc(), 0x9dce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dcd), 0x72);
        EXPECT(gbc.readMem(0xb82d), 0x8c);
        // 72 03E5
        gbc.setState(0xc9ab, 0x486e, 0x580, 0x101f, 0xfbc9, 0xdc10, 0x1, 0x0);
        gbc.writeMem(0xc9ab, { 0x72 });
        gbc.writeMem(0xdc10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x486e);
        EXPECT(gbc.pc(), 0xc9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ab), 0x72);
        EXPECT(gbc.readMem(0xdc10), 0xfb);
        // 72 03E7
        gbc.setState(0xeacd, 0x1dba, 0x6740, 0x4ac8, 0x56cd, 0xaf2d, 0x1, 0x0);
        gbc.writeMem(0xaf2d, { 0x0 });
        gbc.writeMem(0xeacd, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1dba);
        EXPECT(gbc.pc(), 0xeace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf2d), 0x56);
        EXPECT(gbc.readMem(0xeacd), 0x72);
    }
}
#endif
