    TEST(gbcemu, opcode_cb_c3) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C3 0000
        gbc.setState(0x9979, 0x69a6, 0xb00, 0x86ad, 0x2fb5, 0x6cf1, 0x1, 0x0);
        gbc.writeMem(0x9979, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x69a6, gbc.sp());
        EXPECT(0x997b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9979));
        EXPECT(0xc3, gbc.readMem(0x997a));
        // CB C3 0001
        gbc.setState(0x6296, 0x61f9, 0xa4a0, 0x9531, 0xf1, 0x8cfa, 0x0, 0x0);
        gbc.writeMem(0x6296, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x61f9, gbc.sp());
        EXPECT(0x6298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0002
        gbc.setState(0xd47e, 0xdcd1, 0x3120, 0x6455, 0x9ead, 0x61fa, 0x0, 0x1);
        gbc.writeMem(0xd47e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdcd1, gbc.sp());
        EXPECT(0xd480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47e));
        EXPECT(0xc3, gbc.readMem(0xd47f));
        // CB C3 0003
        gbc.setState(0x9ed7, 0xac5c, 0x5650, 0x60f0, 0xb98d, 0x8b2c, 0x1, 0x1);
        gbc.writeMem(0x9ed7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xac5c, gbc.sp());
        EXPECT(0x9ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed7));
        EXPECT(0xc3, gbc.readMem(0x9ed8));
        // CB C3 0004
        gbc.setState(0x749a, 0x4bee, 0x2650, 0xbd8d, 0xb0de, 0x999d, 0x0, 0x1);
        gbc.writeMem(0x749a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4bee, gbc.sp());
        EXPECT(0x749c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0005
        gbc.setState(0x3b37, 0x806, 0xe670, 0xca16, 0x7f56, 0x98e4, 0x0, 0x1);
        gbc.writeMem(0x3b37, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x806, gbc.sp());
        EXPECT(0x3b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0006
        gbc.setState(0x869d, 0x7c51, 0x2a40, 0xa607, 0x824b, 0xc629, 0x0, 0x0);
        gbc.writeMem(0x869d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x7c51, gbc.sp());
        EXPECT(0x869f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x869d));
        EXPECT(0xc3, gbc.readMem(0x869e));
        // CB C3 0007
        gbc.setState(0x4403, 0x573f, 0x1030, 0x848e, 0xbe3e, 0xe77b, 0x0, 0x0);
        gbc.writeMem(0x4403, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x573f, gbc.sp());
        EXPECT(0x4405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0008
        gbc.setState(0xe417, 0x1cbb, 0x1210, 0xa715, 0xc7b0, 0x7130, 0x0, 0x1);
        gbc.writeMem(0xe417, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1cbb, gbc.sp());
        EXPECT(0xe419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe417));
        EXPECT(0xc3, gbc.readMem(0xe418));
        // CB C3 0009
        gbc.setState(0xbd38, 0xb6aa, 0x910, 0x711e, 0xefd8, 0xdd47, 0x1, 0x1);
        gbc.writeMem(0xbd38, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb6aa, gbc.sp());
        EXPECT(0xbd3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd38));
        EXPECT(0xc3, gbc.readMem(0xbd39));
        // CB C3 000A
        gbc.setState(0x1095, 0xeee4, 0x7980, 0x141e, 0xe4bc, 0x54f8, 0x1, 0x0);
        gbc.writeMem(0x1095, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xeee4, gbc.sp());
        EXPECT(0x1097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 000B
        gbc.setState(0x3f3c, 0x49a, 0xed80, 0xb761, 0xb1b2, 0xef5f, 0x1, 0x1);
        gbc.writeMem(0x3f3c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x49a, gbc.sp());
        EXPECT(0x3f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 000C
        gbc.setState(0x2e71, 0xf611, 0x8f40, 0xe530, 0x966d, 0x1a28, 0x0, 0x0);
        gbc.writeMem(0x2e71, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf611, gbc.sp());
        EXPECT(0x2e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 000D
        gbc.setState(0x973a, 0xfa8e, 0x2f60, 0x55cf, 0x2e89, 0x428e, 0x0, 0x0);
        gbc.writeMem(0x973a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfa8e, gbc.sp());
        EXPECT(0x973c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973a));
        EXPECT(0xc3, gbc.readMem(0x973b));
        // CB C3 000E
        gbc.setState(0xcbb, 0x1ec1, 0x68d0, 0x8b98, 0xcb4, 0x9f57, 0x0, 0x1);
        gbc.writeMem(0xcbb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1ec1, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 000F
        gbc.setState(0xe2b1, 0x546a, 0x5d00, 0x4a75, 0xbfab, 0x3d74, 0x0, 0x0);
        gbc.writeMem(0xe2b1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x546a, gbc.sp());
        EXPECT(0xe2b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b1));
        EXPECT(0xc3, gbc.readMem(0xe2b2));
        // CB C3 0010
        gbc.setState(0x737c, 0xf1ec, 0xf340, 0xe998, 0x24f3, 0xb50f, 0x0, 0x0);
        gbc.writeMem(0x737c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf1ec, gbc.sp());
        EXPECT(0x737e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0011
        gbc.setState(0x153b, 0x2d6d, 0x5200, 0xfa0, 0x44d, 0xf872, 0x1, 0x1);
        gbc.writeMem(0x153b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2d6d, gbc.sp());
        EXPECT(0x153d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0012
        gbc.setState(0x2dae, 0x715d, 0xe920, 0x6a8e, 0x2679, 0x9eff, 0x0, 0x0);
        gbc.writeMem(0x2dae, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x715d, gbc.sp());
        EXPECT(0x2db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0013
        gbc.setState(0xed24, 0x83ee, 0x720, 0x2eda, 0x863d, 0x4f98, 0x1, 0x1);
        gbc.writeMem(0xed24, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x83ee, gbc.sp());
        EXPECT(0xed26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed24));
        EXPECT(0xc3, gbc.readMem(0xed25));
        // CB C3 0014
        gbc.setState(0x55e, 0x4714, 0x1380, 0x273a, 0xdacc, 0x44f4, 0x0, 0x1);
        gbc.writeMem(0x55e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4714, gbc.sp());
        EXPECT(0x560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0015
        gbc.setState(0x3f61, 0x3c97, 0xdc70, 0x9d6f, 0x2b30, 0xb95e, 0x1, 0x1);
        gbc.writeMem(0x3f61, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3c97, gbc.sp());
        EXPECT(0x3f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0016
        gbc.setState(0x4937, 0x6d76, 0xac80, 0x1099, 0xed68, 0xa655, 0x1, 0x1);
        gbc.writeMem(0x4937, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6d76, gbc.sp());
        EXPECT(0x4939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0017
        gbc.setState(0xcc91, 0x4650, 0x6560, 0xce93, 0x9709, 0x2910, 0x0, 0x0);
        gbc.writeMem(0xcc91, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4650, gbc.sp());
        EXPECT(0xcc93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc91));
        EXPECT(0xc3, gbc.readMem(0xcc92));
        // CB C3 0018
        gbc.setState(0x8fa0, 0x440b, 0xdda0, 0x5461, 0x676e, 0xd968, 0x1, 0x0);
        gbc.writeMem(0x8fa0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x440b, gbc.sp());
        EXPECT(0x8fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa0));
        EXPECT(0xc3, gbc.readMem(0x8fa1));
        // CB C3 0019
        gbc.setState(0x9af5, 0x96ea, 0x3f40, 0x6dcc, 0x4d30, 0x722c, 0x1, 0x0);
        gbc.writeMem(0x9af5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x96ea, gbc.sp());
        EXPECT(0x9af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af5));
        EXPECT(0xc3, gbc.readMem(0x9af6));
        // CB C3 001A
        gbc.setState(0x1273, 0x6d5c, 0x9e60, 0x1986, 0xc2da, 0x2c70, 0x0, 0x1);
        gbc.writeMem(0x1273, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6d5c, gbc.sp());
        EXPECT(0x1275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 001B
        gbc.setState(0x6f8c, 0x364b, 0x97f0, 0xd992, 0x55c5, 0xf581, 0x1, 0x0);
        gbc.writeMem(0x6f8c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x364b, gbc.sp());
        EXPECT(0x6f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 001C
        gbc.setState(0x65af, 0x14d1, 0xc030, 0xfa47, 0x20e0, 0x1bf8, 0x1, 0x1);
        gbc.writeMem(0x65af, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x14d1, gbc.sp());
        EXPECT(0x65b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 001D
        gbc.setState(0x7c56, 0x3698, 0x94d0, 0x8c7, 0xbc5, 0xaee9, 0x1, 0x1);
        gbc.writeMem(0x7c56, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3698, gbc.sp());
        EXPECT(0x7c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 001E
        gbc.setState(0xd7c, 0x7e4, 0x7920, 0x849a, 0x74bf, 0xddc4, 0x0, 0x0);
        gbc.writeMem(0xd7c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7e4, gbc.sp());
        EXPECT(0xd7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 001F
        gbc.setState(0x5fc0, 0xa999, 0xd730, 0xeb5e, 0xb7b0, 0x8e75, 0x0, 0x1);
        gbc.writeMem(0x5fc0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa999, gbc.sp());
        EXPECT(0x5fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0020
        gbc.setState(0x50c, 0x627c, 0xf4e0, 0x4a39, 0x29c0, 0x3d, 0x1, 0x0);
        gbc.writeMem(0x50c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x627c, gbc.sp());
        EXPECT(0x50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0021
        gbc.setState(0x6225, 0xdbfc, 0x7000, 0xf945, 0x86b2, 0x3030, 0x0, 0x1);
        gbc.writeMem(0x6225, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdbfc, gbc.sp());
        EXPECT(0x6227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0022
        gbc.setState(0x90e1, 0x2834, 0x70e0, 0xe3e7, 0x36bc, 0x52c8, 0x1, 0x0);
        gbc.writeMem(0x90e1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2834, gbc.sp());
        EXPECT(0x90e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e1));
        EXPECT(0xc3, gbc.readMem(0x90e2));
        // CB C3 0023
        gbc.setState(0x659b, 0xeb75, 0x5240, 0xa513, 0x30a4, 0xf641, 0x1, 0x1);
        gbc.writeMem(0x659b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xeb75, gbc.sp());
        EXPECT(0x659d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0024
        gbc.setState(0x85d6, 0x3bec, 0x1570, 0x732f, 0xedff, 0xece1, 0x1, 0x0);
        gbc.writeMem(0x85d6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3bec, gbc.sp());
        EXPECT(0x85d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d6));
        EXPECT(0xc3, gbc.readMem(0x85d7));
        // CB C3 0025
        gbc.setState(0xaf25, 0x8462, 0xda70, 0x97c8, 0x4629, 0x6ac5, 0x1, 0x0);
        gbc.writeMem(0xaf25, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8462, gbc.sp());
        EXPECT(0xaf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf25));
        EXPECT(0xc3, gbc.readMem(0xaf26));
        // CB C3 0026
        gbc.setState(0x40d3, 0x19fc, 0x6f10, 0x4f5, 0x1fee, 0xbf24, 0x1, 0x1);
        gbc.writeMem(0x40d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x19fc, gbc.sp());
        EXPECT(0x40d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0027
        gbc.setState(0x68c1, 0x350f, 0x4cf0, 0x2ead, 0x84f4, 0xb3c5, 0x1, 0x1);
        gbc.writeMem(0x68c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x350f, gbc.sp());
        EXPECT(0x68c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0028
        gbc.setState(0xbacb, 0x4a9d, 0x4fe0, 0x70e, 0x7d3, 0x1029, 0x0, 0x1);
        gbc.writeMem(0xbacb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4a9d, gbc.sp());
        EXPECT(0xbacd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbacb));
        EXPECT(0xc3, gbc.readMem(0xbacc));
        // CB C3 0029
        gbc.setState(0xddde, 0x1008, 0xd5c0, 0xc37f, 0x3da5, 0xf66e, 0x1, 0x1);
        gbc.writeMem(0xddde, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1008, gbc.sp());
        EXPECT(0xdde0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddde));
        EXPECT(0xc3, gbc.readMem(0xdddf));
        // CB C3 002A
        gbc.setState(0xa4fd, 0xd4b0, 0xa90, 0x6f48, 0x7d1d, 0xfd3d, 0x1, 0x0);
        gbc.writeMem(0xa4fd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd4b0, gbc.sp());
        EXPECT(0xa4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4fd));
        EXPECT(0xc3, gbc.readMem(0xa4fe));
        // CB C3 002B
        gbc.setState(0x76b2, 0x5ab3, 0xa820, 0x23e5, 0xeaf8, 0x4350, 0x1, 0x0);
        gbc.writeMem(0x76b2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5ab3, gbc.sp());
        EXPECT(0x76b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 002C
        gbc.setState(0xdc43, 0xe6a1, 0x3a60, 0xb86, 0xca00, 0xea93, 0x1, 0x0);
        gbc.writeMem(0xdc43, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe6a1, gbc.sp());
        EXPECT(0xdc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc43));
        EXPECT(0xc3, gbc.readMem(0xdc44));
        // CB C3 002D
        gbc.setState(0x3c9c, 0xf5e1, 0xd180, 0x7b11, 0x1343, 0xa4cf, 0x0, 0x1);
        gbc.writeMem(0x3c9c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf5e1, gbc.sp());
        EXPECT(0x3c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 002E
        gbc.setState(0x603c, 0xbdb7, 0x540, 0x953e, 0xde1f, 0x4ce, 0x1, 0x0);
        gbc.writeMem(0x603c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbdb7, gbc.sp());
        EXPECT(0x603e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 002F
        gbc.setState(0xd0f3, 0x2187, 0x44f0, 0x7794, 0x53ed, 0xc10c, 0x1, 0x0);
        gbc.writeMem(0xd0f3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2187, gbc.sp());
        EXPECT(0xd0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f3));
        EXPECT(0xc3, gbc.readMem(0xd0f4));
        // CB C3 0030
        gbc.setState(0xa33c, 0x87d1, 0x5c60, 0x89bc, 0xca85, 0xe7b3, 0x0, 0x0);
        gbc.writeMem(0xa33c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x87d1, gbc.sp());
        EXPECT(0xa33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33c));
        EXPECT(0xc3, gbc.readMem(0xa33d));
        // CB C3 0031
        gbc.setState(0x624, 0x6c89, 0xa870, 0xd5ef, 0x37ee, 0x69ca, 0x0, 0x1);
        gbc.writeMem(0x624, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6c89, gbc.sp());
        EXPECT(0x626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0032
        gbc.setState(0x1d54, 0x84a7, 0x8b90, 0x8b86, 0xdc33, 0xe19f, 0x0, 0x1);
        gbc.writeMem(0x1d54, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x84a7, gbc.sp());
        EXPECT(0x1d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0033
        gbc.setState(0x6f8e, 0x3598, 0x5610, 0xd250, 0xb6cd, 0xdb75, 0x0, 0x1);
        gbc.writeMem(0x6f8e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3598, gbc.sp());
        EXPECT(0x6f90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0034
        gbc.setState(0xadf2, 0x3a25, 0x1a60, 0xa973, 0x3037, 0x2d3b, 0x1, 0x1);
        gbc.writeMem(0xadf2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3a25, gbc.sp());
        EXPECT(0xadf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf2));
        EXPECT(0xc3, gbc.readMem(0xadf3));
        // CB C3 0035
        gbc.setState(0x31ff, 0x56e, 0xccc0, 0xb3ae, 0xdcde, 0x6760, 0x0, 0x0);
        gbc.writeMem(0x31ff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x56e, gbc.sp());
        EXPECT(0x3201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0036
        gbc.setState(0x8ed6, 0x2ad3, 0xb000, 0x316, 0x87f1, 0x3e87, 0x0, 0x1);
        gbc.writeMem(0x8ed6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2ad3, gbc.sp());
        EXPECT(0x8ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed6));
        EXPECT(0xc3, gbc.readMem(0x8ed7));
        // CB C3 0037
        gbc.setState(0x298d, 0x329c, 0xa020, 0x8235, 0xf2c1, 0x545a, 0x0, 0x1);
        gbc.writeMem(0x298d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x329c, gbc.sp());
        EXPECT(0x298f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0038
        gbc.setState(0x5a32, 0xbb28, 0x79e0, 0x1d96, 0xdd6c, 0xdaf8, 0x0, 0x0);
        gbc.writeMem(0x5a32, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbb28, gbc.sp());
        EXPECT(0x5a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0039
        gbc.setState(0x8b86, 0xec33, 0xc8b0, 0xf030, 0x6108, 0x2c91, 0x0, 0x1);
        gbc.writeMem(0x8b86, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xec33, gbc.sp());
        EXPECT(0x8b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b86));
        EXPECT(0xc3, gbc.readMem(0x8b87));
        // CB C3 003A
        gbc.setState(0x1b3c, 0x6df7, 0x7130, 0xec0d, 0xe5de, 0xb95c, 0x1, 0x1);
        gbc.writeMem(0x1b3c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6df7, gbc.sp());
        EXPECT(0x1b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 003B
        gbc.setState(0x5026, 0x622d, 0xefe0, 0xf5c2, 0xe38e, 0xe3b2, 0x1, 0x0);
        gbc.writeMem(0x5026, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x622d, gbc.sp());
        EXPECT(0x5028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 003C
        gbc.setState(0x9df7, 0xa45f, 0x4590, 0xcb5d, 0x7582, 0x3533, 0x0, 0x1);
        gbc.writeMem(0x9df7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa45f, gbc.sp());
        EXPECT(0x9df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df7));
        EXPECT(0xc3, gbc.readMem(0x9df8));
        // CB C3 003D
        gbc.setState(0x4609, 0xc5c6, 0xa8c0, 0x1976, 0x31d7, 0xc48c, 0x0, 0x1);
        gbc.writeMem(0x4609, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc5c6, gbc.sp());
        EXPECT(0x460b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 003E
        gbc.setState(0x41f9, 0x81a4, 0xc380, 0x17a5, 0x51f7, 0xdacd, 0x0, 0x0);
        gbc.writeMem(0x41f9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x81a4, gbc.sp());
        EXPECT(0x41fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 003F
        gbc.setState(0x6e6a, 0xdf9c, 0xa3f0, 0x3341, 0x3add, 0x2fc, 0x0, 0x0);
        gbc.writeMem(0x6e6a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdf9c, gbc.sp());
        EXPECT(0x6e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0042
        gbc.setState(0x8131, 0x2b33, 0x3990, 0xd8eb, 0xe857, 0x441d, 0x0, 0x1);
        gbc.writeMem(0x8131, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2b33, gbc.sp());
        EXPECT(0x8133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8131));
        EXPECT(0xc3, gbc.readMem(0x8132));
        // CB C3 0043
        gbc.setState(0xa87e, 0xa08b, 0xc280, 0x273b, 0x9f12, 0x5ac8, 0x0, 0x1);
        gbc.writeMem(0xa87e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa08b, gbc.sp());
        EXPECT(0xa880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa87e));
        EXPECT(0xc3, gbc.readMem(0xa87f));
        // CB C3 0044
        gbc.setState(0xd1f8, 0x55dc, 0xa0c0, 0x8faf, 0x9501, 0x59b9, 0x0, 0x1);
        gbc.writeMem(0xd1f8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x55dc, gbc.sp());
        EXPECT(0xd1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f8));
        EXPECT(0xc3, gbc.readMem(0xd1f9));
        // CB C3 0045
        gbc.setState(0x7a84, 0x1232, 0x8aa0, 0xbcb4, 0x9591, 0x6e56, 0x0, 0x0);
        gbc.writeMem(0x7a84, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1232, gbc.sp());
        EXPECT(0x7a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0046
        gbc.setState(0xa342, 0x350d, 0x1880, 0x9cf5, 0xadda, 0xada0, 0x0, 0x1);
        gbc.writeMem(0xa342, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x350d, gbc.sp());
        EXPECT(0xa344, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa342));
        EXPECT(0xc3, gbc.readMem(0xa343));
        // CB C3 0047
        gbc.setState(0x4283, 0xc4f4, 0xfa60, 0x8233, 0x6e27, 0x6bde, 0x0, 0x1);
        gbc.writeMem(0x4283, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc4f4, gbc.sp());
        EXPECT(0x4285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0048
        gbc.setState(0x8117, 0xed19, 0xce40, 0x32f8, 0xc1, 0x6c00, 0x1, 0x0);
        gbc.writeMem(0x8117, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xed19, gbc.sp());
        EXPECT(0x8119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8117));
        EXPECT(0xc3, gbc.readMem(0x8118));
        // CB C3 0049
        gbc.setState(0xc1a4, 0x8414, 0xa6f0, 0x7cda, 0xdea8, 0x9028, 0x1, 0x1);
        gbc.writeMem(0xc1a4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8414, gbc.sp());
        EXPECT(0xc1a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a4));
        EXPECT(0xc3, gbc.readMem(0xc1a5));
        // CB C3 004A
        gbc.setState(0xc7d, 0xe889, 0x5970, 0xccc2, 0x3e0b, 0xbb87, 0x0, 0x0);
        gbc.writeMem(0xc7d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe889, gbc.sp());
        EXPECT(0xc7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 004B
        gbc.setState(0xbca9, 0xa2bb, 0xfaf0, 0x82c8, 0xbcad, 0x5009, 0x1, 0x1);
        gbc.writeMem(0xbca9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa2bb, gbc.sp());
        EXPECT(0xbcab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca9));
        EXPECT(0xc3, gbc.readMem(0xbcaa));
        // CB C3 004C
        gbc.setState(0xd815, 0x3426, 0x7bb0, 0x7977, 0x5d38, 0xd019, 0x0, 0x1);
        gbc.writeMem(0xd815, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3426, gbc.sp());
        EXPECT(0xd817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd815));
        EXPECT(0xc3, gbc.readMem(0xd816));
        // CB C3 004D
        gbc.setState(0x3483, 0x7ea, 0x5240, 0x4f8d, 0x4a47, 0x1aba, 0x0, 0x0);
        gbc.writeMem(0x3483, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7ea, gbc.sp());
        EXPECT(0x3485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 004E
        gbc.setState(0x90c5, 0x4fd1, 0xf8b0, 0x688f, 0x3db4, 0x6189, 0x0, 0x0);
        gbc.writeMem(0x90c5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4fd1, gbc.sp());
        EXPECT(0x90c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c5));
        EXPECT(0xc3, gbc.readMem(0x90c6));
        // CB C3 004F
        gbc.setState(0x87e7, 0xb9c0, 0x5b70, 0x28fe, 0xc2c6, 0x4169, 0x0, 0x0);
        gbc.writeMem(0x87e7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb9c0, gbc.sp());
        EXPECT(0x87e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e7));
        EXPECT(0xc3, gbc.readMem(0x87e8));
        // CB C3 0050
        gbc.setState(0xc3d0, 0xe35, 0x9d40, 0x83e3, 0xadc7, 0x55ae, 0x0, 0x0);
        gbc.writeMem(0xc3d0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe35, gbc.sp());
        EXPECT(0xc3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d0));
        EXPECT(0xc3, gbc.readMem(0xc3d1));
        // CB C3 0051
        gbc.setState(0x5487, 0xfe9d, 0x9bf0, 0x1939, 0xb395, 0xe448, 0x1, 0x0);
        gbc.writeMem(0x5487, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfe9d, gbc.sp());
        EXPECT(0x5489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0052
        gbc.setState(0x273, 0x369, 0xe470, 0xc352, 0xd6e9, 0xe8ca, 0x0, 0x0);
        gbc.writeMem(0x273, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x369, gbc.sp());
        EXPECT(0x275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0053
        gbc.setState(0x7086, 0xbe20, 0x5540, 0xfad5, 0xa46b, 0x83e8, 0x0, 0x0);
        gbc.writeMem(0x7086, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbe20, gbc.sp());
        EXPECT(0x7088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0054
        gbc.setState(0xb99c, 0x4001, 0x5300, 0x284d, 0x8dcf, 0x7575, 0x1, 0x0);
        gbc.writeMem(0xb99c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4001, gbc.sp());
        EXPECT(0xb99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99c));
        EXPECT(0xc3, gbc.readMem(0xb99d));
        // CB C3 0055
        gbc.setState(0x2f7a, 0xfeb7, 0x6200, 0xc7a1, 0x87c0, 0x345d, 0x1, 0x0);
        gbc.writeMem(0x2f7a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfeb7, gbc.sp());
        EXPECT(0x2f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0056
        gbc.setState(0xe016, 0x273, 0x8640, 0x4748, 0xd116, 0xbd0e, 0x0, 0x0);
        gbc.writeMem(0xe016, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x273, gbc.sp());
        EXPECT(0xe018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe016));
        EXPECT(0xc3, gbc.readMem(0xe017));
        // CB C3 0057
        gbc.setState(0x6bc6, 0xdc2, 0x2930, 0x9cba, 0x6068, 0xc578, 0x0, 0x0);
        gbc.writeMem(0x6bc6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdc2, gbc.sp());
        EXPECT(0x6bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0058
        gbc.setState(0x17f1, 0x996e, 0x61a0, 0x434f, 0xd662, 0x321d, 0x0, 0x0);
        gbc.writeMem(0x17f1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x996e, gbc.sp());
        EXPECT(0x17f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0059
        gbc.setState(0x8c3e, 0x52f9, 0xfc70, 0xd1d2, 0x20f7, 0xaf82, 0x1, 0x1);
        gbc.writeMem(0x8c3e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x52f9, gbc.sp());
        EXPECT(0x8c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c3e));
        EXPECT(0xc3, gbc.readMem(0x8c3f));
        // CB C3 005A
        gbc.setState(0x8f0a, 0xd23b, 0x4430, 0xfd60, 0x2006, 0xecd0, 0x1, 0x1);
        gbc.writeMem(0x8f0a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd23b, gbc.sp());
        EXPECT(0x8f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f0a));
        EXPECT(0xc3, gbc.readMem(0x8f0b));
        // CB C3 005C
        gbc.setState(0x7fff, 0xa1df, 0x1a0, 0x536c, 0x1109, 0x2f78, 0x1, 0x1);
        gbc.writeMem(0x7fff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa1df, gbc.sp());
        EXPECT(0x8001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x8000));
        // CB C3 005D
        gbc.setState(0x6817, 0x6858, 0xac00, 0x8752, 0xdb2f, 0x77e5, 0x1, 0x1);
        gbc.writeMem(0x6817, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6858, gbc.sp());
        EXPECT(0x6819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 005E
        gbc.setState(0xef5c, 0x1d89, 0x8490, 0x648f, 0x12a4, 0x83d8, 0x0, 0x1);
        gbc.writeMem(0xef5c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1d89, gbc.sp());
        EXPECT(0xef5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5c));
        EXPECT(0xc3, gbc.readMem(0xef5d));
        // CB C3 005F
        gbc.setState(0xa88c, 0xea17, 0x8800, 0x8eef, 0x608, 0xd405, 0x1, 0x0);
        gbc.writeMem(0xa88c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xea17, gbc.sp());
        EXPECT(0xa88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88c));
        EXPECT(0xc3, gbc.readMem(0xa88d));
        // CB C3 0060
        gbc.setState(0xa847, 0x4910, 0x4c90, 0xdbfc, 0xee9f, 0xa8d1, 0x1, 0x0);
        gbc.writeMem(0xa847, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4910, gbc.sp());
        EXPECT(0xa849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa847));
        EXPECT(0xc3, gbc.readMem(0xa848));
        // CB C3 0061
        gbc.setState(0xefe, 0xcb76, 0x170, 0x923b, 0x2fb2, 0xb607, 0x1, 0x1);
        gbc.writeMem(0xefe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcb76, gbc.sp());
        EXPECT(0xf00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0062
        gbc.setState(0x119c, 0xea7c, 0x9030, 0x259c, 0xea27, 0x1e8b, 0x0, 0x0);
        gbc.writeMem(0x119c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xea7c, gbc.sp());
        EXPECT(0x119e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0063
        gbc.setState(0x515, 0x7147, 0x2e90, 0x3801, 0x250e, 0x9d98, 0x0, 0x0);
        gbc.writeMem(0x515, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7147, gbc.sp());
        EXPECT(0x517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0064
        gbc.setState(0x8d25, 0x729d, 0x2ec0, 0xefae, 0x7261, 0x68c6, 0x0, 0x1);
        gbc.writeMem(0x8d25, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x729d, gbc.sp());
        EXPECT(0x8d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d25));
        EXPECT(0xc3, gbc.readMem(0x8d26));
        // CB C3 0065
        gbc.setState(0xcd73, 0x44c4, 0x14b0, 0xea1, 0x70ac, 0x3630, 0x1, 0x0);
        gbc.writeMem(0xcd73, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x44c4, gbc.sp());
        EXPECT(0xcd75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd73));
        EXPECT(0xc3, gbc.readMem(0xcd74));
        // CB C3 0066
        gbc.setState(0xc30e, 0xf0a7, 0xb350, 0x6069, 0x2efd, 0xbd30, 0x0, 0x1);
        gbc.writeMem(0xc30e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf0a7, gbc.sp());
        EXPECT(0xc310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30e));
        EXPECT(0xc3, gbc.readMem(0xc30f));
        // CB C3 0068
        gbc.setState(0x2947, 0xcc65, 0x350, 0x883b, 0x36ce, 0x7080, 0x1, 0x0);
        gbc.writeMem(0x2947, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcc65, gbc.sp());
        EXPECT(0x2949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0069
        gbc.setState(0xa56c, 0x2312, 0xd380, 0xf797, 0xe6a, 0xa71f, 0x1, 0x1);
        gbc.writeMem(0xa56c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2312, gbc.sp());
        EXPECT(0xa56e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa56c));
        EXPECT(0xc3, gbc.readMem(0xa56d));
        // CB C3 006A
        gbc.setState(0x11ee, 0xfeeb, 0xa520, 0x412a, 0x7b43, 0x523b, 0x1, 0x1);
        gbc.writeMem(0x11ee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfeeb, gbc.sp());
        EXPECT(0x11f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 006B
        gbc.setState(0x826, 0x9845, 0xce30, 0xaf3, 0x52e9, 0xdd53, 0x0, 0x1);
        gbc.writeMem(0x826, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9845, gbc.sp());
        EXPECT(0x828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 006C
        gbc.setState(0xbf80, 0x4fdb, 0x25e0, 0xaebf, 0x68b8, 0xd1d3, 0x0, 0x1);
        gbc.writeMem(0xbf80, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4fdb, gbc.sp());
        EXPECT(0xbf82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf80));
        EXPECT(0xc3, gbc.readMem(0xbf81));
        // CB C3 006D
        gbc.setState(0xe6b3, 0x5e79, 0x3830, 0x12c4, 0x9c66, 0x48aa, 0x1, 0x1);
        gbc.writeMem(0xe6b3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5e79, gbc.sp());
        EXPECT(0xe6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b3));
        EXPECT(0xc3, gbc.readMem(0xe6b4));
        // CB C3 006E
        gbc.setState(0x99e6, 0xbb6, 0xd700, 0xd7df, 0x3305, 0x5647, 0x0, 0x0);
        gbc.writeMem(0x99e6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbb6, gbc.sp());
        EXPECT(0x99e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e6));
        EXPECT(0xc3, gbc.readMem(0x99e7));
        // CB C3 006F
        gbc.setState(0x71d3, 0x2cf5, 0xfa90, 0xe438, 0x3cb7, 0xe71e, 0x0, 0x1);
        gbc.writeMem(0x71d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2cf5, gbc.sp());
        EXPECT(0x71d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0070
        gbc.setState(0x27fe, 0xb6f2, 0x4270, 0x5fe0, 0xc9a6, 0xf508, 0x0, 0x1);
        gbc.writeMem(0x27fe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb6f2, gbc.sp());
        EXPECT(0x2800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0071
        gbc.setState(0xdb7b, 0x53fa, 0x5a70, 0xd3fa, 0x16dd, 0x449c, 0x0, 0x1);
        gbc.writeMem(0xdb7b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x53fa, gbc.sp());
        EXPECT(0xdb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7b));
        EXPECT(0xc3, gbc.readMem(0xdb7c));
        // CB C3 0072
        gbc.setState(0xaf32, 0x6a17, 0x8070, 0x79e7, 0xe614, 0x56d5, 0x1, 0x0);
        gbc.writeMem(0xaf32, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6a17, gbc.sp());
        EXPECT(0xaf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf32));
        EXPECT(0xc3, gbc.readMem(0xaf33));
        // CB C3 0073
        gbc.setState(0x2813, 0xeafa, 0x3450, 0xbe74, 0xea94, 0xe0bf, 0x0, 0x0);
        gbc.writeMem(0x2813, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xeafa, gbc.sp());
        EXPECT(0x2815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0074
        gbc.setState(0x611c, 0x49b8, 0x21a0, 0xe89b, 0xb3cd, 0xaaaa, 0x0, 0x1);
        gbc.writeMem(0x611c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x49b8, gbc.sp());
        EXPECT(0x611e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0075
        gbc.setState(0xafc9, 0x7027, 0x5bb0, 0x215f, 0xaba, 0xb360, 0x1, 0x1);
        gbc.writeMem(0xafc9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7027, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc9));
        EXPECT(0xc3, gbc.readMem(0xafca));
        // CB C3 0076
        gbc.setState(0xec72, 0x80f7, 0x7220, 0x48ab, 0x2be9, 0x7c23, 0x1, 0x0);
        gbc.writeMem(0xec72, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x80f7, gbc.sp());
        EXPECT(0xec74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec72));
        EXPECT(0xc3, gbc.readMem(0xec73));
        // CB C3 0077
        gbc.setState(0x9fd, 0xbb30, 0xb30, 0x41be, 0x640e, 0x5329, 0x1, 0x1);
        gbc.writeMem(0x9fd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbb30, gbc.sp());
        EXPECT(0x9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0078
        gbc.setState(0x9223, 0xebeb, 0x77b0, 0x3819, 0x5a3d, 0xac44, 0x1, 0x0);
        gbc.writeMem(0x9223, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xebeb, gbc.sp());
        EXPECT(0x9225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9223));
        EXPECT(0xc3, gbc.readMem(0x9224));
        // CB C3 0079
        gbc.setState(0x851f, 0xb1d6, 0xbd80, 0x97dc, 0xc6ae, 0x5fe7, 0x0, 0x0);
        gbc.writeMem(0x851f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb1d6, gbc.sp());
        EXPECT(0x8521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851f));
        EXPECT(0xc3, gbc.readMem(0x8520));
        // CB C3 007A
        gbc.setState(0x91ff, 0x111f, 0x3e0, 0x411a, 0xa14c, 0x20e1, 0x0, 0x0);
        gbc.writeMem(0x91ff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x111f, gbc.sp());
        EXPECT(0x9201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ff));
        EXPECT(0xc3, gbc.readMem(0x9200));
        // CB C3 007B
        gbc.setState(0xde03, 0x820e, 0x81f0, 0x2234, 0x78b1, 0xe7ad, 0x1, 0x0);
        gbc.writeMem(0xde03, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x820e, gbc.sp());
        EXPECT(0xde05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde03));
        EXPECT(0xc3, gbc.readMem(0xde04));
        // CB C3 007D
        gbc.setState(0xcde8, 0x3024, 0xa8d0, 0xeebf, 0x3cff, 0xf726, 0x0, 0x0);
        gbc.writeMem(0xcde8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3024, gbc.sp());
        EXPECT(0xcdea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde8));
        EXPECT(0xc3, gbc.readMem(0xcde9));
        // CB C3 007E
        gbc.setState(0x9ac7, 0x8803, 0x3600, 0x5c3, 0x4fdd, 0x2c4a, 0x1, 0x1);
        gbc.writeMem(0x9ac7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8803, gbc.sp());
        EXPECT(0x9ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac7));
        EXPECT(0xc3, gbc.readMem(0x9ac8));
        // CB C3 007F
        gbc.setState(0x6c83, 0x6269, 0x9740, 0xd4ad, 0x248f, 0xebc3, 0x1, 0x1);
        gbc.writeMem(0x6c83, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6269, gbc.sp());
        EXPECT(0x6c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0080
        gbc.setState(0x179c, 0xe8c8, 0xff70, 0x8d67, 0xe06b, 0xbe79, 0x0, 0x1);
        gbc.writeMem(0x179c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe8c8, gbc.sp());
        EXPECT(0x179e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0081
        gbc.setState(0xb006, 0x5df8, 0x4c70, 0x77c6, 0x9488, 0xd522, 0x0, 0x1);
        gbc.writeMem(0xb006, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5df8, gbc.sp());
        EXPECT(0xb008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb006));
        EXPECT(0xc3, gbc.readMem(0xb007));
        // CB C3 0082
        gbc.setState(0x5a0b, 0xee54, 0x8130, 0x6cc3, 0xd55c, 0x7577, 0x0, 0x0);
        gbc.writeMem(0x5a0b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xee54, gbc.sp());
        EXPECT(0x5a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0083
        gbc.setState(0x7f85, 0x6471, 0xd570, 0xaa51, 0xef80, 0x7b62, 0x0, 0x0);
        gbc.writeMem(0x7f85, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6471, gbc.sp());
        EXPECT(0x7f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0084
        gbc.setState(0x6564, 0x4426, 0xa290, 0x4206, 0x9644, 0x5daa, 0x1, 0x1);
        gbc.writeMem(0x6564, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4426, gbc.sp());
        EXPECT(0x6566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0085
        gbc.setState(0x2c20, 0x6df0, 0x9730, 0x93a, 0xe737, 0xa02b, 0x1, 0x1);
        gbc.writeMem(0x2c20, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6df0, gbc.sp());
        EXPECT(0x2c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0086
        gbc.setState(0xb143, 0x2ade, 0xfe0, 0xd31e, 0x5cbb, 0x1f83, 0x1, 0x1);
        gbc.writeMem(0xb143, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2ade, gbc.sp());
        EXPECT(0xb145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb143));
        EXPECT(0xc3, gbc.readMem(0xb144));
        // CB C3 0087
        gbc.setState(0x5284, 0xe035, 0xaa90, 0x3185, 0x59b3, 0x9295, 0x0, 0x0);
        gbc.writeMem(0x5284, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0x5286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0088
        gbc.setState(0x6222, 0xe00a, 0xc5c0, 0x6cd5, 0x4fb7, 0x13c9, 0x0, 0x0);
        gbc.writeMem(0x6222, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe00a, gbc.sp());
        EXPECT(0x6224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0089
        gbc.setState(0x2cca, 0xfb98, 0x7920, 0xbc82, 0xb90d, 0xaa6a, 0x1, 0x0);
        gbc.writeMem(0x2cca, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfb98, gbc.sp());
        EXPECT(0x2ccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 008A
        gbc.setState(0x760b, 0x4527, 0x1bf0, 0x9a73, 0x7ec3, 0x88ad, 0x0, 0x1);
        gbc.writeMem(0x760b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4527, gbc.sp());
        EXPECT(0x760d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 008B
        gbc.setState(0x9ad, 0x8719, 0xcdb0, 0xb097, 0xea82, 0xf5af, 0x0, 0x1);
        gbc.writeMem(0x9ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8719, gbc.sp());
        EXPECT(0x9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 008C
        gbc.setState(0x45b4, 0xb06, 0x800, 0x2c8, 0xf0f9, 0x61f9, 0x1, 0x1);
        gbc.writeMem(0x45b4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb06, gbc.sp());
        EXPECT(0x45b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 008F
        gbc.setState(0x5828, 0x821, 0x8440, 0x6bce, 0x91a1, 0xa043, 0x0, 0x1);
        gbc.writeMem(0x5828, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x821, gbc.sp());
        EXPECT(0x582a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0090
        gbc.setState(0x54d3, 0xd56e, 0x5890, 0x288a, 0xcccf, 0x8e71, 0x0, 0x0);
        gbc.writeMem(0x54d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd56e, gbc.sp());
        EXPECT(0x54d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0091
        gbc.setState(0x360, 0x6d61, 0x89f0, 0xa1bf, 0xed28, 0xbf89, 0x0, 0x1);
        gbc.writeMem(0x360, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6d61, gbc.sp());
        EXPECT(0x362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0092
        gbc.setState(0x922e, 0xf0, 0xf430, 0x95aa, 0xbbf6, 0xd41c, 0x1, 0x0);
        gbc.writeMem(0x922e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf0, gbc.sp());
        EXPECT(0x9230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922e));
        EXPECT(0xc3, gbc.readMem(0x922f));
        // CB C3 0093
        gbc.setState(0x8ce8, 0xda3f, 0xa160, 0x861e, 0x6025, 0x9ded, 0x0, 0x0);
        gbc.writeMem(0x8ce8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xda3f, gbc.sp());
        EXPECT(0x8cea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce8));
        EXPECT(0xc3, gbc.readMem(0x8ce9));
        // CB C3 0094
        gbc.setState(0x196, 0xe960, 0x4e90, 0xc633, 0xd905, 0xc224, 0x0, 0x1);
        gbc.writeMem(0x196, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe960, gbc.sp());
        EXPECT(0x198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0095
        gbc.setState(0xe0ed, 0xb966, 0xed80, 0xc3fd, 0x439d, 0xc793, 0x0, 0x0);
        gbc.writeMem(0xe0ed, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb966, gbc.sp());
        EXPECT(0xe0ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ed));
        EXPECT(0xc3, gbc.readMem(0xe0ee));
        // CB C3 0096
        gbc.setState(0x2f54, 0x14e1, 0xf100, 0x8666, 0xc5d9, 0x47e3, 0x0, 0x0);
        gbc.writeMem(0x2f54, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x14e1, gbc.sp());
        EXPECT(0x2f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0097
        gbc.setState(0x8b62, 0xec74, 0x95b0, 0x8947, 0x5ebd, 0xc146, 0x1, 0x1);
        gbc.writeMem(0x8b62, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xec74, gbc.sp());
        EXPECT(0x8b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b62));
        EXPECT(0xc3, gbc.readMem(0x8b63));
        // CB C3 0098
        gbc.setState(0x586e, 0xa705, 0x2920, 0x10f5, 0x227d, 0xaa12, 0x0, 0x0);
        gbc.writeMem(0x586e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa705, gbc.sp());
        EXPECT(0x5870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 009A
        gbc.setState(0x234f, 0x2201, 0x4120, 0xfbf5, 0xe116, 0x1de6, 0x0, 0x1);
        gbc.writeMem(0x234f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2201, gbc.sp());
        EXPECT(0x2351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 009B
        gbc.setState(0x3b8, 0x19d9, 0xe610, 0x7287, 0xdca8, 0xd8ed, 0x0, 0x0);
        gbc.writeMem(0x3b8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x19d9, gbc.sp());
        EXPECT(0x3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 009C
        gbc.setState(0xcbf2, 0xb762, 0x9f0, 0xcbd5, 0x8b5e, 0x7c8c, 0x1, 0x1);
        gbc.writeMem(0xcbf2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb762, gbc.sp());
        EXPECT(0xcbf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf2));
        EXPECT(0xc3, gbc.readMem(0xcbf3));
        // CB C3 009D
        gbc.setState(0x8da4, 0x6f97, 0x84e0, 0xf1ef, 0xace9, 0x8ed5, 0x0, 0x1);
        gbc.writeMem(0x8da4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6f97, gbc.sp());
        EXPECT(0x8da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da4));
        EXPECT(0xc3, gbc.readMem(0x8da5));
        // CB C3 009E
        gbc.setState(0x1425, 0xa38f, 0x9510, 0xceb1, 0x3195, 0xfcd9, 0x0, 0x1);
        gbc.writeMem(0x1425, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa38f, gbc.sp());
        EXPECT(0x1427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 009F
        gbc.setState(0x96c1, 0xc0a2, 0x6b80, 0x9320, 0x2952, 0x1202, 0x1, 0x1);
        gbc.writeMem(0x96c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc0a2, gbc.sp());
        EXPECT(0x96c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c1));
        EXPECT(0xc3, gbc.readMem(0x96c2));
        // CB C3 00A0
        gbc.setState(0x4579, 0x32e, 0xd230, 0x5aac, 0x5090, 0xc4e7, 0x0, 0x0);
        gbc.writeMem(0x4579, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x32e, gbc.sp());
        EXPECT(0x457b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00A1
        gbc.setState(0xd5a0, 0x7c98, 0x3db0, 0xc37a, 0xdd36, 0x5586, 0x0, 0x1);
        gbc.writeMem(0xd5a0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7c98, gbc.sp());
        EXPECT(0xd5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a0));
        EXPECT(0xc3, gbc.readMem(0xd5a1));
        // CB C3 00A2
        gbc.setState(0x784, 0x5a7c, 0x7fc0, 0x39fe, 0x6d62, 0x98b9, 0x0, 0x1);
        gbc.writeMem(0x784, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5a7c, gbc.sp());
        EXPECT(0x786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00A3
        gbc.setState(0x8f31, 0xf35e, 0x7c20, 0x5e82, 0xd2d, 0x2485, 0x1, 0x0);
        gbc.writeMem(0x8f31, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf35e, gbc.sp());
        EXPECT(0x8f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f31));
        EXPECT(0xc3, gbc.readMem(0x8f32));
        // CB C3 00A4
        gbc.setState(0x4a7b, 0xf622, 0xe610, 0x6d7a, 0x49f, 0xb958, 0x1, 0x0);
        gbc.writeMem(0x4a7b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf622, gbc.sp());
        EXPECT(0x4a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00A6
        gbc.setState(0x3c39, 0xd162, 0xe00, 0xb395, 0xf09, 0x6834, 0x1, 0x1);
        gbc.writeMem(0x3c39, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd162, gbc.sp());
        EXPECT(0x3c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00A7
        gbc.setState(0xef08, 0x68ed, 0x9e80, 0x69b1, 0x5524, 0xa0dd, 0x0, 0x1);
        gbc.writeMem(0xef08, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x68ed, gbc.sp());
        EXPECT(0xef0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef08));
        EXPECT(0xc3, gbc.readMem(0xef09));
        // CB C3 00A8
        gbc.setState(0x9681, 0x8d62, 0x8e60, 0x3727, 0xc5d6, 0xdefc, 0x0, 0x0);
        gbc.writeMem(0x9681, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8d62, gbc.sp());
        EXPECT(0x9683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9681));
        EXPECT(0xc3, gbc.readMem(0x9682));
        // CB C3 00A9
        gbc.setState(0xe011, 0xb31e, 0x56f0, 0x105a, 0xdf6f, 0xb4a, 0x1, 0x1);
        gbc.writeMem(0xe011, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb31e, gbc.sp());
        EXPECT(0xe013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe011));
        EXPECT(0xc3, gbc.readMem(0xe012));
        // CB C3 00AA
        gbc.setState(0x7b53, 0xe5c4, 0xd670, 0xd4b5, 0x4520, 0xec84, 0x0, 0x0);
        gbc.writeMem(0x7b53, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe5c4, gbc.sp());
        EXPECT(0x7b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00AB
        gbc.setState(0x707f, 0x60c1, 0x4f60, 0x933f, 0xb0fe, 0xb998, 0x0, 0x1);
        gbc.writeMem(0x707f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x60c1, gbc.sp());
        EXPECT(0x7081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00AC
        gbc.setState(0x163e, 0x3294, 0xe4c0, 0x1387, 0xd5ee, 0x7fc0, 0x0, 0x0);
        gbc.writeMem(0x163e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3294, gbc.sp());
        EXPECT(0x1640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00AD
        gbc.setState(0x8a61, 0x8588, 0x4da0, 0x7f98, 0x5934, 0x4b3c, 0x0, 0x0);
        gbc.writeMem(0x8a61, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8588, gbc.sp());
        EXPECT(0x8a63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a61));
        EXPECT(0xc3, gbc.readMem(0x8a62));
        // CB C3 00AE
        gbc.setState(0x94ef, 0xa75a, 0xd980, 0xb375, 0x938a, 0xac24, 0x0, 0x1);
        gbc.writeMem(0x94ef, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa75a, gbc.sp());
        EXPECT(0x94f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ef));
        EXPECT(0xc3, gbc.readMem(0x94f0));
        // CB C3 00AF
        gbc.setState(0x1e86, 0x8476, 0xfc80, 0x5fa6, 0xa78e, 0xdd98, 0x1, 0x1);
        gbc.writeMem(0x1e86, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8476, gbc.sp());
        EXPECT(0x1e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00B0
        gbc.setState(0xd3d9, 0x67cd, 0xf4d0, 0x8dda, 0xfd09, 0x908e, 0x0, 0x1);
        gbc.writeMem(0xd3d9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x67cd, gbc.sp());
        EXPECT(0xd3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d9));
        EXPECT(0xc3, gbc.readMem(0xd3da));
        // CB C3 00B1
        gbc.setState(0xcf8f, 0xdd04, 0xcad0, 0x871e, 0x34fc, 0x4577, 0x1, 0x0);
        gbc.writeMem(0xcf8f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdd04, gbc.sp());
        EXPECT(0xcf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8f));
        EXPECT(0xc3, gbc.readMem(0xcf90));
        // CB C3 00B2
        gbc.setState(0xeece, 0xc933, 0x8770, 0x959e, 0x1005, 0x6119, 0x0, 0x1);
        gbc.writeMem(0xeece, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc933, gbc.sp());
        EXPECT(0xeed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeece));
        EXPECT(0xc3, gbc.readMem(0xeecf));
        // CB C3 00B3
        gbc.setState(0xa890, 0xa0ce, 0x1fa0, 0xa602, 0xcf9e, 0xa8ec, 0x1, 0x0);
        gbc.writeMem(0xa890, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa0ce, gbc.sp());
        EXPECT(0xa892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa890));
        EXPECT(0xc3, gbc.readMem(0xa891));
        // CB C3 00B5
        gbc.setState(0x944a, 0x1ac3, 0xeed0, 0x573c, 0xd62a, 0x9d18, 0x1, 0x0);
        gbc.writeMem(0x944a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1ac3, gbc.sp());
        EXPECT(0x944c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944a));
        EXPECT(0xc3, gbc.readMem(0x944b));
        // CB C3 00B6
        gbc.setState(0x8f1f, 0x742d, 0x8a00, 0x11ed, 0xdae7, 0x1577, 0x0, 0x0);
        gbc.writeMem(0x8f1f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x742d, gbc.sp());
        EXPECT(0x8f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1f));
        EXPECT(0xc3, gbc.readMem(0x8f20));
        // CB C3 00B7
        gbc.setState(0x7b22, 0x1edc, 0x3130, 0x4a54, 0x6910, 0xddee, 0x1, 0x1);
        gbc.writeMem(0x7b22, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1edc, gbc.sp());
        EXPECT(0x7b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00B8
        gbc.setState(0x35fd, 0x653e, 0x1940, 0x11d8, 0xa30c, 0xe31b, 0x0, 0x1);
        gbc.writeMem(0x35fd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x653e, gbc.sp());
        EXPECT(0x35ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00B9
        gbc.setState(0xd53e, 0x5e0a, 0xed50, 0x73de, 0x8fc1, 0x9f32, 0x0, 0x1);
        gbc.writeMem(0xd53e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5e0a, gbc.sp());
        EXPECT(0xd540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd53e));
        EXPECT(0xc3, gbc.readMem(0xd53f));
        // CB C3 00BA
        gbc.setState(0xabac, 0x189, 0x6530, 0xdc83, 0x2e43, 0x497b, 0x1, 0x0);
        gbc.writeMem(0xabac, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x189, gbc.sp());
        EXPECT(0xabae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabac));
        EXPECT(0xc3, gbc.readMem(0xabad));
        // CB C3 00BB
        gbc.setState(0x3d5, 0x2f64, 0xee80, 0x92af, 0xa002, 0x4582, 0x1, 0x1);
        gbc.writeMem(0x3d5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2f64, gbc.sp());
        EXPECT(0x3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00BC
        gbc.setState(0x1c73, 0x2dbd, 0xe6e0, 0xb5a5, 0x8b1a, 0x319e, 0x0, 0x1);
        gbc.writeMem(0x1c73, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2dbd, gbc.sp());
        EXPECT(0x1c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00BD
        gbc.setState(0x3a70, 0x3b93, 0x350, 0x9a00, 0xa0c9, 0x6dce, 0x1, 0x1);
        gbc.writeMem(0x3a70, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3b93, gbc.sp());
        EXPECT(0x3a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00BE
        gbc.setState(0xe424, 0x1cb1, 0xbbc0, 0xb5f0, 0xec8e, 0x64e4, 0x1, 0x0);
        gbc.writeMem(0xe424, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1cb1, gbc.sp());
        EXPECT(0xe426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe424));
        EXPECT(0xc3, gbc.readMem(0xe425));
        // CB C3 00C0
        gbc.setState(0x56ea, 0x6868, 0xdb30, 0x21db, 0x9144, 0xa735, 0x1, 0x0);
        gbc.writeMem(0x56ea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6868, gbc.sp());
        EXPECT(0x56ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00C1
        gbc.setState(0x2be1, 0x1314, 0x8aa0, 0x4080, 0x2c8a, 0xf923, 0x1, 0x1);
        gbc.writeMem(0x2be1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1314, gbc.sp());
        EXPECT(0x2be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00C2
        gbc.setState(0x98c9, 0xc1ee, 0xe0d0, 0x13f, 0x6751, 0xe354, 0x1, 0x1);
        gbc.writeMem(0x98c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc1ee, gbc.sp());
        EXPECT(0x98cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c9));
        EXPECT(0xc3, gbc.readMem(0x98ca));
        // CB C3 00C3
        gbc.setState(0x3c78, 0xd635, 0x1900, 0x5d4d, 0x6b1e, 0x5ccf, 0x1, 0x0);
        gbc.writeMem(0x3c78, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd635, gbc.sp());
        EXPECT(0x3c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00C4
        gbc.setState(0x3d60, 0x75e5, 0x8f20, 0xae8a, 0xc4b3, 0x441e, 0x0, 0x0);
        gbc.writeMem(0x3d60, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x75e5, gbc.sp());
        EXPECT(0x3d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00C5
        gbc.setState(0xbc16, 0xccdb, 0x24e0, 0x86bb, 0xa7bf, 0x5fa8, 0x1, 0x0);
        gbc.writeMem(0xbc16, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xccdb, gbc.sp());
        EXPECT(0xbc18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc16));
        EXPECT(0xc3, gbc.readMem(0xbc17));
        // CB C3 00C6
        gbc.setState(0xafcb, 0x3147, 0x8620, 0x72f7, 0x7a85, 0x57fe, 0x1, 0x1);
        gbc.writeMem(0xafcb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3147, gbc.sp());
        EXPECT(0xafcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafcb));
        EXPECT(0xc3, gbc.readMem(0xafcc));
        // CB C3 00C7
        gbc.setState(0x31a7, 0x4e16, 0xb680, 0x58bc, 0x7603, 0xea70, 0x1, 0x0);
        gbc.writeMem(0x31a7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4e16, gbc.sp());
        EXPECT(0x31a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00C8
        gbc.setState(0x708d, 0xaf72, 0xa6b0, 0x64f4, 0xff97, 0x38e5, 0x1, 0x0);
        gbc.writeMem(0x708d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xaf72, gbc.sp());
        EXPECT(0x708f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00C9
        gbc.setState(0x83b2, 0x186f, 0x96a0, 0xb92e, 0x2342, 0xe17, 0x1, 0x0);
        gbc.writeMem(0x83b2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x186f, gbc.sp());
        EXPECT(0x83b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b2));
        EXPECT(0xc3, gbc.readMem(0x83b3));
        // CB C3 00CA
        gbc.setState(0x8c55, 0xed30, 0xaff0, 0xba53, 0x64c8, 0x479e, 0x1, 0x0);
        gbc.writeMem(0x8c55, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xed30, gbc.sp());
        EXPECT(0x8c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c55));
        EXPECT(0xc3, gbc.readMem(0x8c56));
        // CB C3 00CB
        gbc.setState(0x51c1, 0xe1a2, 0xf000, 0x1068, 0x8c46, 0x7fd0, 0x0, 0x1);
        gbc.writeMem(0x51c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe1a2, gbc.sp());
        EXPECT(0x51c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00CC
        gbc.setState(0xeefc, 0xc2ec, 0x6bd0, 0x9445, 0xd74a, 0x894c, 0x0, 0x1);
        gbc.writeMem(0xeefc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc2ec, gbc.sp());
        EXPECT(0xeefe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefc));
        EXPECT(0xc3, gbc.readMem(0xeefd));
        // CB C3 00CD
        gbc.setState(0xe10e, 0x9518, 0x7590, 0xe345, 0xc122, 0xfe8f, 0x0, 0x0);
        gbc.writeMem(0xe10e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9518, gbc.sp());
        EXPECT(0xe110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10e));
        EXPECT(0xc3, gbc.readMem(0xe10f));
        // CB C3 00CE
        gbc.setState(0xc385, 0x7dcd, 0x2680, 0xae3a, 0x88ab, 0x8df5, 0x0, 0x1);
        gbc.writeMem(0xc385, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7dcd, gbc.sp());
        EXPECT(0xc387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc385));
        EXPECT(0xc3, gbc.readMem(0xc386));
        // CB C3 00D0
        gbc.setState(0x7ed8, 0xaf92, 0x3930, 0x8fd8, 0xaf03, 0x8f6d, 0x1, 0x1);
        gbc.writeMem(0x7ed8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xaf92, gbc.sp());
        EXPECT(0x7eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00D1
        gbc.setState(0xb133, 0xfa78, 0x4080, 0xa494, 0x5d06, 0x3a15, 0x1, 0x0);
        gbc.writeMem(0xb133, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfa78, gbc.sp());
        EXPECT(0xb135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb133));
        EXPECT(0xc3, gbc.readMem(0xb134));
        // CB C3 00D2
        gbc.setState(0xccea, 0x9a05, 0xb000, 0x5c6e, 0x6c41, 0xf74a, 0x0, 0x1);
        gbc.writeMem(0xccea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9a05, gbc.sp());
        EXPECT(0xccec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccea));
        EXPECT(0xc3, gbc.readMem(0xcceb));
        // CB C3 00D3
        gbc.setState(0x8623, 0x11da, 0x4900, 0xee69, 0xcb55, 0x6a4b, 0x1, 0x1);
        gbc.writeMem(0x8623, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x11da, gbc.sp());
        EXPECT(0x8625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8623));
        EXPECT(0xc3, gbc.readMem(0x8624));
        // CB C3 00D4
        gbc.setState(0xbf30, 0x2c7b, 0xeb0, 0xaca4, 0xb11f, 0x88cd, 0x1, 0x0);
        gbc.writeMem(0xbf30, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2c7b, gbc.sp());
        EXPECT(0xbf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf30));
        EXPECT(0xc3, gbc.readMem(0xbf31));
        // CB C3 00D5
        gbc.setState(0xe9ad, 0x3435, 0xa080, 0x9891, 0x6b55, 0x5402, 0x0, 0x1);
        gbc.writeMem(0xe9ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3435, gbc.sp());
        EXPECT(0xe9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ad));
        EXPECT(0xc3, gbc.readMem(0xe9ae));
        // CB C3 00D6
        gbc.setState(0x2a21, 0x97f8, 0x2ce0, 0xc288, 0x699, 0x408c, 0x1, 0x1);
        gbc.writeMem(0x2a21, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x97f8, gbc.sp());
        EXPECT(0x2a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00D7
        gbc.setState(0x82de, 0x193c, 0x65f0, 0x666d, 0x9498, 0x9b72, 0x0, 0x0);
        gbc.writeMem(0x82de, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x193c, gbc.sp());
        EXPECT(0x82e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82de));
        EXPECT(0xc3, gbc.readMem(0x82df));
        // CB C3 00D9
        gbc.setState(0xd6e1, 0x9c72, 0xe700, 0x3799, 0x8ee3, 0x45d6, 0x1, 0x0);
        gbc.writeMem(0xd6e1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9c72, gbc.sp());
        EXPECT(0xd6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e1));
        EXPECT(0xc3, gbc.readMem(0xd6e2));
        // CB C3 00DA
        gbc.setState(0xdd45, 0xeb1c, 0x6df0, 0x5100, 0xa5b6, 0x5937, 0x1, 0x0);
        gbc.writeMem(0xdd45, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xeb1c, gbc.sp());
        EXPECT(0xdd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd45));
        EXPECT(0xc3, gbc.readMem(0xdd46));
        // CB C3 00DB
        gbc.setState(0x2faf, 0x1118, 0x8470, 0x9632, 0xf4a6, 0x9fb8, 0x1, 0x1);
        gbc.writeMem(0x2faf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1118, gbc.sp());
        EXPECT(0x2fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00DC
        gbc.setState(0x20f7, 0x596, 0xd670, 0xcfc5, 0x94d4, 0xf83c, 0x1, 0x1);
        gbc.writeMem(0x20f7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x596, gbc.sp());
        EXPECT(0x20f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00DD
        gbc.setState(0x4d57, 0x722b, 0xca50, 0x9a38, 0xdd78, 0x5510, 0x0, 0x1);
        gbc.writeMem(0x4d57, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x722b, gbc.sp());
        EXPECT(0x4d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00DE
        gbc.setState(0x148a, 0x35ff, 0x3460, 0x97e6, 0xe0e7, 0x8695, 0x1, 0x1);
        gbc.writeMem(0x148a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x35ff, gbc.sp());
        EXPECT(0x148c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00DF
        gbc.setState(0x940d, 0xbf68, 0x5c00, 0x68ad, 0x33a9, 0xb089, 0x0, 0x1);
        gbc.writeMem(0x940d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbf68, gbc.sp());
        EXPECT(0x940f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940d));
        EXPECT(0xc3, gbc.readMem(0x940e));
        // CB C3 00E0
        gbc.setState(0x1b90, 0xb905, 0x3310, 0xd1f6, 0x9998, 0x62ed, 0x1, 0x0);
        gbc.writeMem(0x1b90, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb905, gbc.sp());
        EXPECT(0x1b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00E2
        gbc.setState(0xa3eb, 0xb0de, 0x7b40, 0xc819, 0x2eb6, 0xc564, 0x0, 0x1);
        gbc.writeMem(0xa3eb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb0de, gbc.sp());
        EXPECT(0xa3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3eb));
        EXPECT(0xc3, gbc.readMem(0xa3ec));
        // CB C3 00E3
        gbc.setState(0x733b, 0xdd46, 0x5bc0, 0x9145, 0xe6e2, 0x779, 0x0, 0x0);
        gbc.writeMem(0x733b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdd46, gbc.sp());
        EXPECT(0x733d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00E4
        gbc.setState(0x2b32, 0x9554, 0x7ee0, 0xa6d6, 0x51d6, 0xc879, 0x1, 0x0);
        gbc.writeMem(0x2b32, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9554, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00E5
        gbc.setState(0x2a11, 0x4181, 0x2340, 0xc9d4, 0x3c1b, 0x7ae9, 0x0, 0x1);
        gbc.writeMem(0x2a11, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4181, gbc.sp());
        EXPECT(0x2a13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00E6
        gbc.setState(0x5972, 0xf60d, 0x7780, 0x8b3e, 0xae5a, 0x1d63, 0x0, 0x1);
        gbc.writeMem(0x5972, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf60d, gbc.sp());
        EXPECT(0x5974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00E7
        gbc.setState(0xb81d, 0xf49f, 0x6910, 0xfb2a, 0xc3c, 0x6c42, 0x1, 0x1);
        gbc.writeMem(0xb81d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf49f, gbc.sp());
        EXPECT(0xb81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81d));
        EXPECT(0xc3, gbc.readMem(0xb81e));
        // CB C3 00E8
        gbc.setState(0xa33a, 0x650d, 0x3e70, 0xc573, 0x18f1, 0x23ed, 0x0, 0x1);
        gbc.writeMem(0xa33a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x650d, gbc.sp());
        EXPECT(0xa33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33a));
        EXPECT(0xc3, gbc.readMem(0xa33b));
        // CB C3 00E9
        gbc.setState(0x115e, 0xafd7, 0xc5c0, 0x259, 0xed3c, 0xca8, 0x0, 0x0);
        gbc.writeMem(0x115e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xafd7, gbc.sp());
        EXPECT(0x1160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00EA
        gbc.setState(0x6951, 0xa227, 0xda20, 0x5c24, 0xde0d, 0xe0f6, 0x1, 0x1);
        gbc.writeMem(0x6951, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa227, gbc.sp());
        EXPECT(0x6953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00EB
        gbc.setState(0x6548, 0xe9fb, 0x3860, 0x85de, 0x6305, 0x3b8b, 0x0, 0x0);
        gbc.writeMem(0x6548, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe9fb, gbc.sp());
        EXPECT(0x654a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00ED
        gbc.setState(0xdd3, 0xab02, 0xcfd0, 0xe0db, 0x7d7, 0x5a17, 0x1, 0x0);
        gbc.writeMem(0xdd3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xab02, gbc.sp());
        EXPECT(0xdd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00EE
        gbc.setState(0xe41a, 0xdb01, 0x66b0, 0xfb79, 0x6726, 0x7ec4, 0x0, 0x0);
        gbc.writeMem(0xe41a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdb01, gbc.sp());
        EXPECT(0xe41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41a));
        EXPECT(0xc3, gbc.readMem(0xe41b));
        // CB C3 00EF
        gbc.setState(0x3b5e, 0xdd2d, 0xbed0, 0x1a15, 0x224e, 0x192c, 0x1, 0x0);
        gbc.writeMem(0x3b5e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdd2d, gbc.sp());
        EXPECT(0x3b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00F1
        gbc.setState(0x7625, 0xe4ef, 0x27e0, 0xa6f, 0x539e, 0xdb35, 0x0, 0x0);
        gbc.writeMem(0x7625, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe4ef, gbc.sp());
        EXPECT(0x7627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00F2
        gbc.setState(0xab13, 0xccd0, 0xfc60, 0xe4fe, 0x2cb9, 0xc437, 0x0, 0x0);
        gbc.writeMem(0xab13, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xccd0, gbc.sp());
        EXPECT(0xab15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab13));
        EXPECT(0xc3, gbc.readMem(0xab14));
        // CB C3 00F3
        gbc.setState(0x49d4, 0x2521, 0x53c0, 0x670c, 0x97bb, 0xb998, 0x1, 0x0);
        gbc.writeMem(0x49d4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2521, gbc.sp());
        EXPECT(0x49d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00F4
        gbc.setState(0x471b, 0x610, 0x4bb0, 0x94b2, 0xf619, 0xc824, 0x1, 0x1);
        gbc.writeMem(0x471b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x610, gbc.sp());
        EXPECT(0x471d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00F5
        gbc.setState(0xe5, 0xbacb, 0xfe20, 0x741e, 0x9c20, 0xee94, 0x1, 0x1);
        gbc.writeMem(0xe5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbacb, gbc.sp());
        EXPECT(0xe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 00F6
        gbc.setState(0xe65b, 0xa965, 0x6ca0, 0x4376, 0x67bc, 0x156, 0x0, 0x0);
        gbc.writeMem(0xe65b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa965, gbc.sp());
        EXPECT(0xe65d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe65b));
        EXPECT(0xc3, gbc.readMem(0xe65c));
        // CB C3 00F7
        gbc.setState(0x805d, 0x9c86, 0x9910, 0x9cf8, 0x158c, 0x71d6, 0x1, 0x0);
        gbc.writeMem(0x805d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9c86, gbc.sp());
        EXPECT(0x805f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x805d));
        EXPECT(0xc3, gbc.readMem(0x805e));
        // CB C3 00F8
        gbc.setState(0xc64a, 0x8835, 0x7290, 0x90ba, 0xb765, 0x604d, 0x0, 0x1);
        gbc.writeMem(0xc64a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8835, gbc.sp());
        EXPECT(0xc64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64a));
        EXPECT(0xc3, gbc.readMem(0xc64b));
        // CB C3 00F9
        gbc.setState(0x778d, 0x2a94, 0xd6f0, 0x52d1, 0x498e, 0xc28, 0x0, 0x1);
        gbc.writeMem(0x778d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2a94, gbc.sp());
        EXPECT(0x778f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00FA
        gbc.setState(0x848a, 0xb795, 0x8f80, 0x3696, 0x8a07, 0xe3f6, 0x0, 0x1);
        gbc.writeMem(0x848a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb795, gbc.sp());
        EXPECT(0x848c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848a));
        EXPECT(0xc3, gbc.readMem(0x848b));
        // CB C3 00FB
        gbc.setState(0x984b, 0xe4f1, 0x68f0, 0xab9b, 0x5cc2, 0x7148, 0x1, 0x0);
        gbc.writeMem(0x984b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe4f1, gbc.sp());
        EXPECT(0x984d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984b));
        EXPECT(0xc3, gbc.readMem(0x984c));
        // CB C3 00FC
        gbc.setState(0x88b5, 0xdf12, 0x3f20, 0xc8b4, 0xc826, 0xbb1f, 0x1, 0x1);
        gbc.writeMem(0x88b5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdf12, gbc.sp());
        EXPECT(0x88b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b5));
        EXPECT(0xc3, gbc.readMem(0x88b6));
        // CB C3 00FD
        gbc.setState(0x9c97, 0x842b, 0x2bc0, 0x9711, 0xa33f, 0x2c42, 0x1, 0x1);
        gbc.writeMem(0x9c97, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x842b, gbc.sp());
        EXPECT(0x9c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c97));
        EXPECT(0xc3, gbc.readMem(0x9c98));
        // CB C3 00FE
        gbc.setState(0x5017, 0x7889, 0xed0, 0x6cc5, 0xfafa, 0xd248, 0x1, 0x0);
        gbc.writeMem(0x5017, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7889, gbc.sp());
        EXPECT(0x5019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 00FF
        gbc.setState(0x9c2a, 0xd9b4, 0x19a0, 0x74dd, 0x98cd, 0x4e4a, 0x0, 0x1);
        gbc.writeMem(0x9c2a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd9b4, gbc.sp());
        EXPECT(0x9c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2a));
        EXPECT(0xc3, gbc.readMem(0x9c2b));
        // CB C3 0100
        gbc.setState(0x5863, 0x81f7, 0xbbf0, 0xa61f, 0x29da, 0x5a59, 0x1, 0x1);
        gbc.writeMem(0x5863, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x81f7, gbc.sp());
        EXPECT(0x5865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0101
        gbc.setState(0x698, 0x511a, 0x900, 0xf43f, 0xc3df, 0xf0b3, 0x1, 0x1);
        gbc.writeMem(0x698, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x511a, gbc.sp());
        EXPECT(0x69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0102
        gbc.setState(0x13cf, 0x3e9d, 0x2690, 0xf66b, 0x3342, 0x4860, 0x1, 0x1);
        gbc.writeMem(0x13cf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3e9d, gbc.sp());
        EXPECT(0x13d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0103
        gbc.setState(0xa3ab, 0x1395, 0x2ad0, 0x97f1, 0xd595, 0x32e9, 0x0, 0x1);
        gbc.writeMem(0xa3ab, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1395, gbc.sp());
        EXPECT(0xa3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ab));
        EXPECT(0xc3, gbc.readMem(0xa3ac));
        // CB C3 0104
        gbc.setState(0xdfe5, 0xf3bb, 0x1b40, 0x76fd, 0xf617, 0x7b87, 0x1, 0x0);
        gbc.writeMem(0xdfe5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf3bb, gbc.sp());
        EXPECT(0xdfe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe5));
        EXPECT(0xc3, gbc.readMem(0xdfe6));
        // CB C3 0105
        gbc.setState(0x6e7d, 0x9d3a, 0x56b0, 0xe870, 0x94a0, 0xd888, 0x0, 0x0);
        gbc.writeMem(0x6e7d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9d3a, gbc.sp());
        EXPECT(0x6e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0106
        gbc.setState(0x7ec6, 0x1753, 0x600, 0x4c12, 0x28c0, 0xd500, 0x0, 0x0);
        gbc.writeMem(0x7ec6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1753, gbc.sp());
        EXPECT(0x7ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0107
        gbc.setState(0x152, 0xb47b, 0x2a30, 0xb397, 0xa1f2, 0xb32, 0x1, 0x0);
        gbc.writeMem(0x152, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb47b, gbc.sp());
        EXPECT(0x154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0108
        gbc.setState(0x57ae, 0xea14, 0x9cd0, 0xfdce, 0x7f1e, 0xff2d, 0x0, 0x0);
        gbc.writeMem(0x57ae, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xea14, gbc.sp());
        EXPECT(0x57b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0109
        gbc.setState(0xd02e, 0x5e14, 0xce0, 0x806e, 0x3af1, 0x4a7d, 0x1, 0x0);
        gbc.writeMem(0xd02e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5e14, gbc.sp());
        EXPECT(0xd030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02e));
        EXPECT(0xc3, gbc.readMem(0xd02f));
        // CB C3 010A
        gbc.setState(0x3eb8, 0xd3b2, 0x48f0, 0xa8cc, 0x747d, 0x5f06, 0x1, 0x0);
        gbc.writeMem(0x3eb8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd3b2, gbc.sp());
        EXPECT(0x3eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 010B
        gbc.setState(0x3c3c, 0x80de, 0x2850, 0x3802, 0x9789, 0xab8f, 0x1, 0x0);
        gbc.writeMem(0x3c3c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x80de, gbc.sp());
        EXPECT(0x3c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 010C
        gbc.setState(0x4c82, 0x533e, 0xd6a0, 0xe393, 0x369f, 0x5d48, 0x0, 0x0);
        gbc.writeMem(0x4c82, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x533e, gbc.sp());
        EXPECT(0x4c84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 010D
        gbc.setState(0x39f8, 0x2bb7, 0x220, 0xe978, 0x52db, 0x552c, 0x1, 0x1);
        gbc.writeMem(0x39f8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2bb7, gbc.sp());
        EXPECT(0x39fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 010E
        gbc.setState(0x1eb1, 0xa285, 0x70e0, 0x637e, 0x8807, 0xc6ea, 0x0, 0x1);
        gbc.writeMem(0x1eb1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa285, gbc.sp());
        EXPECT(0x1eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 010F
        gbc.setState(0x76d4, 0x5fd1, 0xb250, 0x9312, 0x327b, 0xa3a6, 0x0, 0x1);
        gbc.writeMem(0x76d4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5fd1, gbc.sp());
        EXPECT(0x76d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0110
        gbc.setState(0x4ca2, 0x33a5, 0x35c0, 0x2323, 0xa6c5, 0xf2, 0x0, 0x1);
        gbc.writeMem(0x4ca2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x33a5, gbc.sp());
        EXPECT(0x4ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0111
        gbc.setState(0x3bb5, 0xd399, 0x75d0, 0xf1eb, 0xcd43, 0x374, 0x0, 0x1);
        gbc.writeMem(0x3bb5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd399, gbc.sp());
        EXPECT(0x3bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0112
        gbc.setState(0x70ed, 0x8ec0, 0xae50, 0xc113, 0xbb1e, 0x48fe, 0x1, 0x1);
        gbc.writeMem(0x70ed, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8ec0, gbc.sp());
        EXPECT(0x70ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0113
        gbc.setState(0x16a2, 0x420a, 0x7dd0, 0xc5c5, 0xf740, 0x7f21, 0x1, 0x0);
        gbc.writeMem(0x16a2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x420a, gbc.sp());
        EXPECT(0x16a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0114
        gbc.setState(0x6bf3, 0xf42c, 0x1a60, 0x58b9, 0xacd, 0xba97, 0x1, 0x0);
        gbc.writeMem(0x6bf3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf42c, gbc.sp());
        EXPECT(0x6bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0115
        gbc.setState(0xc708, 0xf51b, 0xbe60, 0x93e0, 0x6587, 0x2982, 0x0, 0x1);
        gbc.writeMem(0xc708, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf51b, gbc.sp());
        EXPECT(0xc70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc708));
        EXPECT(0xc3, gbc.readMem(0xc709));
        // CB C3 0116
        gbc.setState(0xd980, 0xcc3e, 0x490, 0x44cc, 0x53cd, 0x638f, 0x1, 0x0);
        gbc.writeMem(0xd980, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcc3e, gbc.sp());
        EXPECT(0xd982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd980));
        EXPECT(0xc3, gbc.readMem(0xd981));
        // CB C3 0117
        gbc.setState(0xd2a1, 0x440, 0x9880, 0x9edf, 0x8f31, 0x764a, 0x0, 0x0);
        gbc.writeMem(0xd2a1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x440, gbc.sp());
        EXPECT(0xd2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a1));
        EXPECT(0xc3, gbc.readMem(0xd2a2));
        // CB C3 0118
        gbc.setState(0x7ddf, 0x814a, 0xa940, 0x8b67, 0x1c7d, 0x5e71, 0x1, 0x1);
        gbc.writeMem(0x7ddf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x814a, gbc.sp());
        EXPECT(0x7de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 011A
        gbc.setState(0xc0, 0xf06e, 0xe660, 0x7b8c, 0x4195, 0xa0f, 0x0, 0x1);
        gbc.writeMem(0xc0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf06e, gbc.sp());
        EXPECT(0xc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 011B
        gbc.setState(0x8672, 0xa769, 0x2ef0, 0x672e, 0x19d8, 0xac1c, 0x0, 0x1);
        gbc.writeMem(0x8672, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa769, gbc.sp());
        EXPECT(0x8674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8672));
        EXPECT(0xc3, gbc.readMem(0x8673));
        // CB C3 011C
        gbc.setState(0x8ed3, 0x37a8, 0x71b0, 0xbf42, 0x75e6, 0x2635, 0x0, 0x1);
        gbc.writeMem(0x8ed3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x37a8, gbc.sp());
        EXPECT(0x8ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed3));
        EXPECT(0xc3, gbc.readMem(0x8ed4));
        // CB C3 011D
        gbc.setState(0x735a, 0xf659, 0xd390, 0x7542, 0xf454, 0xa439, 0x1, 0x0);
        gbc.writeMem(0x735a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf659, gbc.sp());
        EXPECT(0x735c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 011E
        gbc.setState(0xc75, 0xe559, 0x60a0, 0xbaf9, 0xed73, 0x5c74, 0x1, 0x1);
        gbc.writeMem(0xc75, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe559, gbc.sp());
        EXPECT(0xc77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 011F
        gbc.setState(0x5a69, 0x9814, 0xa100, 0x97e8, 0xfb62, 0x2b2b, 0x1, 0x0);
        gbc.writeMem(0x5a69, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9814, gbc.sp());
        EXPECT(0x5a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0120
        gbc.setState(0x82bc, 0xdf64, 0x2a80, 0x472b, 0x1e0f, 0xcf2e, 0x1, 0x0);
        gbc.writeMem(0x82bc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdf64, gbc.sp());
        EXPECT(0x82be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82bc));
        EXPECT(0xc3, gbc.readMem(0x82bd));
        // CB C3 0121
        gbc.setState(0x6707, 0x1df4, 0xc500, 0xc36c, 0xff23, 0xe2e2, 0x1, 0x1);
        gbc.writeMem(0x6707, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1df4, gbc.sp());
        EXPECT(0x6709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0122
        gbc.setState(0xbc66, 0x2795, 0x36a0, 0x2746, 0xf696, 0x7c43, 0x0, 0x1);
        gbc.writeMem(0xbc66, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2795, gbc.sp());
        EXPECT(0xbc68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc66));
        EXPECT(0xc3, gbc.readMem(0xbc67));
        // CB C3 0123
        gbc.setState(0x69c7, 0x1e48, 0xbc70, 0x8ff0, 0x9ba, 0x1bf9, 0x0, 0x1);
        gbc.writeMem(0x69c7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1e48, gbc.sp());
        EXPECT(0x69c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0124
        gbc.setState(0xcfe5, 0xf00b, 0x1770, 0xe31c, 0xe4ad, 0x2de, 0x0, 0x0);
        gbc.writeMem(0xcfe5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf00b, gbc.sp());
        EXPECT(0xcfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe5));
        EXPECT(0xc3, gbc.readMem(0xcfe6));
        // CB C3 0125
        gbc.setState(0xd88a, 0xa0f3, 0x5510, 0xf8c1, 0xf80, 0x5185, 0x1, 0x1);
        gbc.writeMem(0xd88a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa0f3, gbc.sp());
        EXPECT(0xd88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88a));
        EXPECT(0xc3, gbc.readMem(0xd88b));
        // CB C3 0126
        gbc.setState(0x6dcc, 0x981c, 0xe0f0, 0x2572, 0xd3d4, 0xd7fd, 0x1, 0x1);
        gbc.writeMem(0x6dcc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x981c, gbc.sp());
        EXPECT(0x6dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0127
        gbc.setState(0x8857, 0x5ad1, 0x58c0, 0x3e36, 0xeeb0, 0xd8a, 0x1, 0x1);
        gbc.writeMem(0x8857, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5ad1, gbc.sp());
        EXPECT(0x8859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8857));
        EXPECT(0xc3, gbc.readMem(0x8858));
        // CB C3 0128
        gbc.setState(0x5dfd, 0xab44, 0x2550, 0x9939, 0x22ac, 0xb1b, 0x1, 0x0);
        gbc.writeMem(0x5dfd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xab44, gbc.sp());
        EXPECT(0x5dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0129
        gbc.setState(0xf7e, 0x2ade, 0xd2c0, 0xd772, 0xbb26, 0x6dbb, 0x0, 0x1);
        gbc.writeMem(0xf7e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2ade, gbc.sp());
        EXPECT(0xf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 012A
        gbc.setState(0x9084, 0x4f, 0xc3d0, 0xae21, 0xdb0c, 0xd532, 0x1, 0x0);
        gbc.writeMem(0x9084, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4f, gbc.sp());
        EXPECT(0x9086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9084));
        EXPECT(0xc3, gbc.readMem(0x9085));
        // CB C3 012B
        gbc.setState(0xb261, 0xa23d, 0xd8d0, 0xfa13, 0x4afc, 0x4b, 0x1, 0x1);
        gbc.writeMem(0xb261, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa23d, gbc.sp());
        EXPECT(0xb263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb261));
        EXPECT(0xc3, gbc.readMem(0xb262));
        // CB C3 012C
        gbc.setState(0xcaa5, 0xe841, 0xcfa0, 0xcd4e, 0x556a, 0xc6b1, 0x0, 0x0);
        gbc.writeMem(0xcaa5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe841, gbc.sp());
        EXPECT(0xcaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa5));
        EXPECT(0xc3, gbc.readMem(0xcaa6));
        // CB C3 012E
        gbc.setState(0xbf5b, 0x5292, 0xe950, 0x6aab, 0x14b1, 0xe48c, 0x1, 0x0);
        gbc.writeMem(0xbf5b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5292, gbc.sp());
        EXPECT(0xbf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5b));
        EXPECT(0xc3, gbc.readMem(0xbf5c));
        // CB C3 0130
        gbc.setState(0x7b16, 0xd267, 0x20d0, 0xae85, 0xcbd8, 0x5ab1, 0x1, 0x0);
        gbc.writeMem(0x7b16, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd267, gbc.sp());
        EXPECT(0x7b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0131
        gbc.setState(0x356e, 0x4d8d, 0x66c0, 0x4557, 0x797a, 0x7e92, 0x1, 0x0);
        gbc.writeMem(0x356e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4d8d, gbc.sp());
        EXPECT(0x3570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0133
        gbc.setState(0x4750, 0xbb81, 0x1150, 0x4c55, 0x77ab, 0xa6fc, 0x1, 0x0);
        gbc.writeMem(0x4750, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbb81, gbc.sp());
        EXPECT(0x4752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0134
        gbc.setState(0xb789, 0x60e, 0x6a20, 0x1873, 0xc68, 0xc2fb, 0x0, 0x0);
        gbc.writeMem(0xb789, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x60e, gbc.sp());
        EXPECT(0xb78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb789));
        EXPECT(0xc3, gbc.readMem(0xb78a));
        // CB C3 0135
        gbc.setState(0x2557, 0x6656, 0xb4b0, 0x7f0a, 0x79c2, 0x48e9, 0x1, 0x0);
        gbc.writeMem(0x2557, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6656, gbc.sp());
        EXPECT(0x2559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0136
        gbc.setState(0xcd4c, 0x50f5, 0xce10, 0x5c3a, 0xc5, 0xcd8b, 0x0, 0x1);
        gbc.writeMem(0xcd4c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x50f5, gbc.sp());
        EXPECT(0xcd4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4c));
        EXPECT(0xc3, gbc.readMem(0xcd4d));
        // CB C3 0137
        gbc.setState(0xd0ce, 0x772c, 0xf2f0, 0xca02, 0xac16, 0xc801, 0x1, 0x0);
        gbc.writeMem(0xd0ce, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x772c, gbc.sp());
        EXPECT(0xd0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ce));
        EXPECT(0xc3, gbc.readMem(0xd0cf));
        // CB C3 0138
        gbc.setState(0xeb51, 0xd81b, 0x78f0, 0x2664, 0x3caa, 0x2f6b, 0x1, 0x0);
        gbc.writeMem(0xeb51, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd81b, gbc.sp());
        EXPECT(0xeb53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb51));
        EXPECT(0xc3, gbc.readMem(0xeb52));
        // CB C3 0139
        gbc.setState(0xb0ad, 0x4753, 0x4050, 0x3f17, 0xfcb6, 0x245d, 0x1, 0x0);
        gbc.writeMem(0xb0ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4753, gbc.sp());
        EXPECT(0xb0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ad));
        EXPECT(0xc3, gbc.readMem(0xb0ae));
        // CB C3 013A
        gbc.setState(0xb8c9, 0x5af4, 0x4780, 0x45cc, 0x4251, 0x3925, 0x0, 0x0);
        gbc.writeMem(0xb8c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5af4, gbc.sp());
        EXPECT(0xb8cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c9));
        EXPECT(0xc3, gbc.readMem(0xb8ca));
        // CB C3 013B
        gbc.setState(0x4e3a, 0xe6a9, 0x5a50, 0xfcd0, 0x717b, 0x7058, 0x0, 0x1);
        gbc.writeMem(0x4e3a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe6a9, gbc.sp());
        EXPECT(0x4e3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 013C
        gbc.setState(0xb7cb, 0x3e39, 0x4d60, 0x88de, 0x33dd, 0xf508, 0x0, 0x1);
        gbc.writeMem(0xb7cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3e39, gbc.sp());
        EXPECT(0xb7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cb));
        EXPECT(0xc3, gbc.readMem(0xb7cc));
        // CB C3 013D
        gbc.setState(0xe32d, 0xe452, 0xa0e0, 0x178f, 0x39e6, 0x11b7, 0x0, 0x0);
        gbc.writeMem(0xe32d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe452, gbc.sp());
        EXPECT(0xe32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe32d));
        EXPECT(0xc3, gbc.readMem(0xe32e));
        // CB C3 013F
        gbc.setState(0x3f17, 0x9aaa, 0x3f90, 0xdc3b, 0x5292, 0xdc0b, 0x0, 0x0);
        gbc.writeMem(0x3f17, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9aaa, gbc.sp());
        EXPECT(0x3f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0140
        gbc.setState(0x68c5, 0x4a0a, 0x2900, 0xe4e8, 0xbe10, 0xe479, 0x1, 0x1);
        gbc.writeMem(0x68c5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4a0a, gbc.sp());
        EXPECT(0x68c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0141
        gbc.setState(0x792e, 0x916d, 0xec80, 0x1dac, 0x5e97, 0x7df5, 0x0, 0x1);
        gbc.writeMem(0x792e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x916d, gbc.sp());
        EXPECT(0x7930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0142
        gbc.setState(0x1b13, 0x4d7d, 0x3a30, 0x57f8, 0x572a, 0xcdcc, 0x0, 0x0);
        gbc.writeMem(0x1b13, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4d7d, gbc.sp());
        EXPECT(0x1b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0143
        gbc.setState(0x3a0f, 0x90ff, 0x5840, 0x8403, 0x6199, 0x73e1, 0x1, 0x1);
        gbc.writeMem(0x3a0f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x90ff, gbc.sp());
        EXPECT(0x3a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0144
        gbc.setState(0xec65, 0x59f7, 0xd5e0, 0x742a, 0x7e7e, 0x2907, 0x1, 0x1);
        gbc.writeMem(0xec65, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x59f7, gbc.sp());
        EXPECT(0xec67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec65));
        EXPECT(0xc3, gbc.readMem(0xec66));
        // CB C3 0145
        gbc.setState(0x6e73, 0xc4f9, 0x7ad0, 0x54bb, 0x85a5, 0x7cc3, 0x1, 0x0);
        gbc.writeMem(0x6e73, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc4f9, gbc.sp());
        EXPECT(0x6e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0146
        gbc.setState(0x13db, 0x7dad, 0x47c0, 0x224f, 0xd7e1, 0xdcee, 0x0, 0x0);
        gbc.writeMem(0x13db, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7dad, gbc.sp());
        EXPECT(0x13dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0147
        gbc.setState(0x2784, 0x5b24, 0x5920, 0x2b58, 0x166d, 0xd08b, 0x1, 0x0);
        gbc.writeMem(0x2784, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5b24, gbc.sp());
        EXPECT(0x2786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0148
        gbc.setState(0xc8a7, 0x565d, 0x2a20, 0xc0c2, 0xc7d3, 0x1c45, 0x1, 0x0);
        gbc.writeMem(0xc8a7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x565d, gbc.sp());
        EXPECT(0xc8a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a7));
        EXPECT(0xc3, gbc.readMem(0xc8a8));
        // CB C3 014A
        gbc.setState(0x4de7, 0xed0b, 0xaae0, 0xefff, 0xe74a, 0xbbb9, 0x0, 0x1);
        gbc.writeMem(0x4de7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xed0b, gbc.sp());
        EXPECT(0x4de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 014B
        gbc.setState(0xd4ca, 0x5a79, 0xf880, 0xe694, 0xfe0e, 0xb902, 0x0, 0x1);
        gbc.writeMem(0xd4ca, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5a79, gbc.sp());
        EXPECT(0xd4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ca));
        EXPECT(0xc3, gbc.readMem(0xd4cb));
        // CB C3 014C
        gbc.setState(0x34bf, 0x77db, 0x9340, 0xfc43, 0x7636, 0xf7b6, 0x1, 0x0);
        gbc.writeMem(0x34bf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x77db, gbc.sp());
        EXPECT(0x34c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 014E
        gbc.setState(0x37f1, 0x75ea, 0x1a90, 0x82f8, 0x4b71, 0xfd30, 0x0, 0x1);
        gbc.writeMem(0x37f1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x75ea, gbc.sp());
        EXPECT(0x37f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 014F
        gbc.setState(0x99fa, 0x8141, 0xc510, 0x5179, 0xac35, 0x33d7, 0x0, 0x0);
        gbc.writeMem(0x99fa, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8141, gbc.sp());
        EXPECT(0x99fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fa));
        EXPECT(0xc3, gbc.readMem(0x99fb));
        // CB C3 0150
        gbc.setState(0x20e4, 0xb8c7, 0x43b0, 0xa86, 0xc098, 0x50a1, 0x0, 0x0);
        gbc.writeMem(0x20e4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb8c7, gbc.sp());
        EXPECT(0x20e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0151
        gbc.setState(0xe4d5, 0xb131, 0x9e80, 0x5980, 0xf6b7, 0xe4ec, 0x1, 0x0);
        gbc.writeMem(0xe4d5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb131, gbc.sp());
        EXPECT(0xe4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d5));
        EXPECT(0xc3, gbc.readMem(0xe4d6));
        // CB C3 0152
        gbc.setState(0xe53, 0xf065, 0x4450, 0x4190, 0x4a9f, 0x7638, 0x1, 0x1);
        gbc.writeMem(0xe53, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf065, gbc.sp());
        EXPECT(0xe55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0153
        gbc.setState(0xc0e1, 0x2b8e, 0x3f20, 0xa0b6, 0x4e8e, 0x4804, 0x1, 0x1);
        gbc.writeMem(0xc0e1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2b8e, gbc.sp());
        EXPECT(0xc0e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e1));
        EXPECT(0xc3, gbc.readMem(0xc0e2));
        // CB C3 0154
        gbc.setState(0x6d04, 0xa056, 0x1d50, 0x9097, 0x4b14, 0xa2ce, 0x0, 0x1);
        gbc.writeMem(0x6d04, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa056, gbc.sp());
        EXPECT(0x6d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0155
        gbc.setState(0x5138, 0x990f, 0x33e0, 0x2c7d, 0x878e, 0xad19, 0x1, 0x1);
        gbc.writeMem(0x5138, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x990f, gbc.sp());
        EXPECT(0x513a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0156
        gbc.setState(0x6ce6, 0xf160, 0x1900, 0x4a61, 0x8682, 0x3e9, 0x0, 0x1);
        gbc.writeMem(0x6ce6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf160, gbc.sp());
        EXPECT(0x6ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0157
        gbc.setState(0xad62, 0x32c9, 0xc0a0, 0x40b2, 0xc65e, 0x37ca, 0x0, 0x1);
        gbc.writeMem(0xad62, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x32c9, gbc.sp());
        EXPECT(0xad64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad62));
        EXPECT(0xc3, gbc.readMem(0xad63));
        // CB C3 0158
        gbc.setState(0x2780, 0x8db6, 0xf600, 0xab91, 0x8e60, 0xa1ed, 0x1, 0x1);
        gbc.writeMem(0x2780, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8db6, gbc.sp());
        EXPECT(0x2782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 015A
        gbc.setState(0x9b7c, 0xccbb, 0xe00, 0xbdc9, 0x63e6, 0x4b57, 0x1, 0x0);
        gbc.writeMem(0x9b7c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xccbb, gbc.sp());
        EXPECT(0x9b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b7c));
        EXPECT(0xc3, gbc.readMem(0x9b7d));
        // CB C3 015B
        gbc.setState(0xc7f8, 0x3c9d, 0xb160, 0x86d1, 0x858, 0x7463, 0x0, 0x0);
        gbc.writeMem(0xc7f8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3c9d, gbc.sp());
        EXPECT(0xc7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f8));
        EXPECT(0xc3, gbc.readMem(0xc7f9));
        // CB C3 015C
        gbc.setState(0xe219, 0xf916, 0x6ba0, 0x6162, 0x1ede, 0x26a6, 0x1, 0x1);
        gbc.writeMem(0xe219, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf916, gbc.sp());
        EXPECT(0xe21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe219));
        EXPECT(0xc3, gbc.readMem(0xe21a));
        // CB C3 015D
        gbc.setState(0xc7b9, 0x9ac1, 0xf10, 0x8a75, 0xd624, 0x489b, 0x0, 0x0);
        gbc.writeMem(0xc7b9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9ac1, gbc.sp());
        EXPECT(0xc7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b9));
        EXPECT(0xc3, gbc.readMem(0xc7ba));
        // CB C3 015E
        gbc.setState(0xeee6, 0x1e4f, 0x3e90, 0xf03, 0x7d32, 0xb049, 0x0, 0x0);
        gbc.writeMem(0xeee6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1e4f, gbc.sp());
        EXPECT(0xeee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee6));
        EXPECT(0xc3, gbc.readMem(0xeee7));
        // CB C3 015F
        gbc.setState(0x60c2, 0x4fe9, 0xa3d0, 0x2119, 0x18d9, 0x16ea, 0x0, 0x0);
        gbc.writeMem(0x60c2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4fe9, gbc.sp());
        EXPECT(0x60c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0160
        gbc.setState(0xe608, 0x2c67, 0x1b0, 0xc2d4, 0x3719, 0xf928, 0x0, 0x1);
        gbc.writeMem(0xe608, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2c67, gbc.sp());
        EXPECT(0xe60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe608));
        EXPECT(0xc3, gbc.readMem(0xe609));
        // CB C3 0161
        gbc.setState(0x3a77, 0xa978, 0xeef0, 0xdf2b, 0x29f2, 0x8181, 0x1, 0x1);
        gbc.writeMem(0x3a77, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa978, gbc.sp());
        EXPECT(0x3a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0162
        gbc.setState(0x8e28, 0x75f, 0x8370, 0x8c2b, 0x8d6e, 0xf4e1, 0x1, 0x0);
        gbc.writeMem(0x8e28, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x75f, gbc.sp());
        EXPECT(0x8e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e28));
        EXPECT(0xc3, gbc.readMem(0x8e29));
        // CB C3 0163
        gbc.setState(0x10b0, 0x5f10, 0x2120, 0xa63c, 0x22b6, 0xf38e, 0x0, 0x1);
        gbc.writeMem(0x10b0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5f10, gbc.sp());
        EXPECT(0x10b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0164
        gbc.setState(0x2e, 0xdb13, 0xa2a0, 0x72d3, 0xf40, 0x5521, 0x0, 0x0);
        gbc.writeMem(0x2e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdb13, gbc.sp());
        EXPECT(0x30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0165
        gbc.setState(0x2a1c, 0x4ba6, 0xe020, 0x82b1, 0x34e4, 0xd8b7, 0x1, 0x1);
        gbc.writeMem(0x2a1c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4ba6, gbc.sp());
        EXPECT(0x2a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0166
        gbc.setState(0xe9ef, 0xaa2c, 0x6a20, 0x7807, 0x2015, 0xeac7, 0x1, 0x1);
        gbc.writeMem(0xe9ef, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xaa2c, gbc.sp());
        EXPECT(0xe9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ef));
        EXPECT(0xc3, gbc.readMem(0xe9f0));
        // CB C3 0167
        gbc.setState(0x487e, 0x9dd7, 0x950, 0x4f97, 0x88ca, 0xb427, 0x1, 0x1);
        gbc.writeMem(0x487e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9dd7, gbc.sp());
        EXPECT(0x4880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0168
        gbc.setState(0x3033, 0xb933, 0x4660, 0xba65, 0xee5f, 0xa55f, 0x0, 0x1);
        gbc.writeMem(0x3033, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb933, gbc.sp());
        EXPECT(0x3035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0169
        gbc.setState(0x3f6, 0x3c1c, 0xc4c0, 0xcb44, 0x7dfc, 0x3553, 0x0, 0x0);
        gbc.writeMem(0x3f6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3c1c, gbc.sp());
        EXPECT(0x3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 016A
        gbc.setState(0xae99, 0x4cba, 0x12c0, 0x6fd5, 0x653f, 0x539d, 0x0, 0x0);
        gbc.writeMem(0xae99, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4cba, gbc.sp());
        EXPECT(0xae9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae99));
        EXPECT(0xc3, gbc.readMem(0xae9a));
        // CB C3 016B
        gbc.setState(0x81b4, 0x8b1c, 0xb2f0, 0xe703, 0x3d69, 0x1410, 0x0, 0x1);
        gbc.writeMem(0x81b4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8b1c, gbc.sp());
        EXPECT(0x81b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b4));
        EXPECT(0xc3, gbc.readMem(0x81b5));
        // CB C3 016C
        gbc.setState(0x463d, 0xa286, 0x5290, 0xb868, 0xd03c, 0x130b, 0x0, 0x1);
        gbc.writeMem(0x463d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa286, gbc.sp());
        EXPECT(0x463f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 016D
        gbc.setState(0x7e8d, 0x63fa, 0xc830, 0x8ba, 0x730d, 0x882a, 0x1, 0x0);
        gbc.writeMem(0x7e8d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x63fa, gbc.sp());
        EXPECT(0x7e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 016E
        gbc.setState(0x8159, 0xf1b5, 0xa410, 0xc1da, 0xdd84, 0x96b, 0x1, 0x1);
        gbc.writeMem(0x8159, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf1b5, gbc.sp());
        EXPECT(0x815b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8159));
        EXPECT(0xc3, gbc.readMem(0x815a));
        // CB C3 016F
        gbc.setState(0xeaaa, 0x5e91, 0x11f0, 0x6c7d, 0xcb41, 0x46d7, 0x0, 0x0);
        gbc.writeMem(0xeaaa, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5e91, gbc.sp());
        EXPECT(0xeaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaaa));
        EXPECT(0xc3, gbc.readMem(0xeaab));
        // CB C3 0170
        gbc.setState(0x46de, 0xe715, 0xe3c0, 0x60c7, 0x3223, 0xc28c, 0x1, 0x1);
        gbc.writeMem(0x46de, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe715, gbc.sp());
        EXPECT(0x46e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0171
        gbc.setState(0x4302, 0x2f5, 0xe270, 0xb2bb, 0x85c1, 0x7b4c, 0x0, 0x0);
        gbc.writeMem(0x4302, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2f5, gbc.sp());
        EXPECT(0x4304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0172
        gbc.setState(0x9acc, 0xb267, 0xd520, 0x3739, 0xefde, 0x265e, 0x0, 0x1);
        gbc.writeMem(0x9acc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb267, gbc.sp());
        EXPECT(0x9ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9acc));
        EXPECT(0xc3, gbc.readMem(0x9acd));
        // CB C3 0173
        gbc.setState(0x12b4, 0x14df, 0x8520, 0xe56c, 0x64a8, 0xc1bb, 0x0, 0x1);
        gbc.writeMem(0x12b4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x14df, gbc.sp());
        EXPECT(0x12b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0174
        gbc.setState(0xd96, 0xe10c, 0x5970, 0x2131, 0xa17, 0xea10, 0x0, 0x1);
        gbc.writeMem(0xd96, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe10c, gbc.sp());
        EXPECT(0xd98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0175
        gbc.setState(0xa1d, 0x83c9, 0x9950, 0xa4d, 0x9cbd, 0xb856, 0x0, 0x1);
        gbc.writeMem(0xa1d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x83c9, gbc.sp());
        EXPECT(0xa1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0176
        gbc.setState(0x875, 0x81da, 0xd240, 0x6735, 0x8bed, 0x63b3, 0x0, 0x0);
        gbc.writeMem(0x875, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x81da, gbc.sp());
        EXPECT(0x877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0177
        gbc.setState(0x1b09, 0x1c11, 0xf420, 0x1912, 0xb92f, 0xba2e, 0x0, 0x0);
        gbc.writeMem(0x1b09, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1c11, gbc.sp());
        EXPECT(0x1b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0178
        gbc.setState(0xa225, 0x78a4, 0x8b40, 0x4751, 0x32f4, 0x3f5b, 0x1, 0x0);
        gbc.writeMem(0xa225, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x78a4, gbc.sp());
        EXPECT(0xa227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa225));
        EXPECT(0xc3, gbc.readMem(0xa226));
        // CB C3 0179
        gbc.setState(0xeeaf, 0x6e0f, 0x3bd0, 0x164d, 0x963f, 0x6d26, 0x0, 0x1);
        gbc.writeMem(0xeeaf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6e0f, gbc.sp());
        EXPECT(0xeeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeaf));
        EXPECT(0xc3, gbc.readMem(0xeeb0));
        // CB C3 017A
        gbc.setState(0x2587, 0x3f26, 0xebd0, 0x6cf9, 0xcbe9, 0x533c, 0x0, 0x1);
        gbc.writeMem(0x2587, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3f26, gbc.sp());
        EXPECT(0x2589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 017B
        gbc.setState(0x20dd, 0x29a1, 0x58f0, 0x720f, 0xe20f, 0x9cfc, 0x0, 0x0);
        gbc.writeMem(0x20dd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x29a1, gbc.sp());
        EXPECT(0x20df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 017C
        gbc.setState(0xd7b6, 0xb2b1, 0xc080, 0x38a5, 0xebe7, 0xcff1, 0x1, 0x0);
        gbc.writeMem(0xd7b6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb2b1, gbc.sp());
        EXPECT(0xd7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b6));
        EXPECT(0xc3, gbc.readMem(0xd7b7));
        // CB C3 017D
        gbc.setState(0x5fab, 0x5e40, 0x84d0, 0xa012, 0xf704, 0x1b8b, 0x0, 0x0);
        gbc.writeMem(0x5fab, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5e40, gbc.sp());
        EXPECT(0x5fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 017E
        gbc.setState(0xca80, 0x53c7, 0x8a20, 0x28b4, 0x7a05, 0xb9f3, 0x0, 0x0);
        gbc.writeMem(0xca80, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x53c7, gbc.sp());
        EXPECT(0xca82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca80));
        EXPECT(0xc3, gbc.readMem(0xca81));
        // CB C3 017F
        gbc.setState(0x11b5, 0xacc, 0x63f0, 0x33df, 0x699f, 0x50d0, 0x0, 0x1);
        gbc.writeMem(0x11b5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xacc, gbc.sp());
        EXPECT(0x11b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0180
        gbc.setState(0xcf4e, 0xf295, 0x34a0, 0xe9f9, 0x615e, 0x91fa, 0x1, 0x0);
        gbc.writeMem(0xcf4e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf295, gbc.sp());
        EXPECT(0xcf50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4e));
        EXPECT(0xc3, gbc.readMem(0xcf4f));
        // CB C3 0181
        gbc.setState(0x133c, 0x408b, 0x88b0, 0x83e4, 0x1337, 0xc0b6, 0x1, 0x0);
        gbc.writeMem(0x133c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x408b, gbc.sp());
        EXPECT(0x133e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0182
        gbc.setState(0x72be, 0x55f7, 0x8780, 0x11bc, 0xb79d, 0xb452, 0x0, 0x0);
        gbc.writeMem(0x72be, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x55f7, gbc.sp());
        EXPECT(0x72c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0183
        gbc.setState(0x58ee, 0x115, 0xfee0, 0x931d, 0xc01d, 0x30f0, 0x0, 0x1);
        gbc.writeMem(0x58ee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x115, gbc.sp());
        EXPECT(0x58f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0184
        gbc.setState(0xeb8e, 0x2cf1, 0x1cb0, 0x75a6, 0xba3e, 0x373d, 0x0, 0x1);
        gbc.writeMem(0xeb8e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2cf1, gbc.sp());
        EXPECT(0xeb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8e));
        EXPECT(0xc3, gbc.readMem(0xeb8f));
        // CB C3 0185
        gbc.setState(0xcdb6, 0x24e0, 0xb400, 0x13e2, 0x78e1, 0xa6f0, 0x1, 0x0);
        gbc.writeMem(0xcdb6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x24e0, gbc.sp());
        EXPECT(0xcdb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb6));
        EXPECT(0xc3, gbc.readMem(0xcdb7));
        // CB C3 0186
        gbc.setState(0xe6a3, 0xf99, 0x4d90, 0x794b, 0x89bb, 0x4f89, 0x1, 0x0);
        gbc.writeMem(0xe6a3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf99, gbc.sp());
        EXPECT(0xe6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a3));
        EXPECT(0xc3, gbc.readMem(0xe6a4));
        // CB C3 0187
        gbc.setState(0xf1c, 0x5f05, 0x9e70, 0xe3a8, 0xd0ea, 0xc933, 0x0, 0x0);
        gbc.writeMem(0xf1c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5f05, gbc.sp());
        EXPECT(0xf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0188
        gbc.setState(0x4df3, 0xe00d, 0xab90, 0x9d61, 0x20fb, 0x670b, 0x0, 0x1);
        gbc.writeMem(0x4df3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe00d, gbc.sp());
        EXPECT(0x4df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0189
        gbc.setState(0xee57, 0x41a2, 0x3970, 0xa988, 0x7485, 0x3966, 0x1, 0x0);
        gbc.writeMem(0xee57, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x41a2, gbc.sp());
        EXPECT(0xee59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee57));
        EXPECT(0xc3, gbc.readMem(0xee58));
        // CB C3 018A
        gbc.setState(0xe541, 0x9281, 0x6de0, 0x266f, 0x87d, 0xba05, 0x0, 0x0);
        gbc.writeMem(0xe541, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9281, gbc.sp());
        EXPECT(0xe543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe541));
        EXPECT(0xc3, gbc.readMem(0xe542));
        // CB C3 018B
        gbc.setState(0x8891, 0x5584, 0x6aa0, 0xab7, 0x57eb, 0x24ea, 0x1, 0x1);
        gbc.writeMem(0x8891, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5584, gbc.sp());
        EXPECT(0x8893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8891));
        EXPECT(0xc3, gbc.readMem(0x8892));
        // CB C3 018C
        gbc.setState(0x1441, 0xf8e0, 0xbd60, 0x37ca, 0x7654, 0x607, 0x1, 0x0);
        gbc.writeMem(0x1441, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf8e0, gbc.sp());
        EXPECT(0x1443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 018D
        gbc.setState(0x73cb, 0xe756, 0xa1d0, 0x2931, 0x88d0, 0x61fc, 0x1, 0x1);
        gbc.writeMem(0x73cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe756, gbc.sp());
        EXPECT(0x73cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 018E
        gbc.setState(0x955a, 0x5bee, 0x1ce0, 0xe85c, 0xe385, 0xaf09, 0x0, 0x1);
        gbc.writeMem(0x955a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5bee, gbc.sp());
        EXPECT(0x955c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x955a));
        EXPECT(0xc3, gbc.readMem(0x955b));
        // CB C3 018F
        gbc.setState(0x8b36, 0x128c, 0x6b00, 0x4e1e, 0x9d4a, 0x3974, 0x0, 0x1);
        gbc.writeMem(0x8b36, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x128c, gbc.sp());
        EXPECT(0x8b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b36));
        EXPECT(0xc3, gbc.readMem(0x8b37));
        // CB C3 0190
        gbc.setState(0xa5f2, 0x5275, 0xd270, 0x6743, 0x2c4, 0xfb92, 0x1, 0x0);
        gbc.writeMem(0xa5f2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5275, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f2));
        EXPECT(0xc3, gbc.readMem(0xa5f3));
        // CB C3 0191
        gbc.setState(0x5002, 0x5106, 0x69b0, 0x788a, 0xe048, 0x943e, 0x0, 0x1);
        gbc.writeMem(0x5002, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5106, gbc.sp());
        EXPECT(0x5004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0192
        gbc.setState(0x6cf4, 0x1602, 0x5c40, 0xe324, 0xab39, 0xeb8e, 0x0, 0x0);
        gbc.writeMem(0x6cf4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1602, gbc.sp());
        EXPECT(0x6cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0193
        gbc.setState(0xd393, 0x1b6f, 0x6b20, 0x324a, 0x269e, 0x5b0e, 0x1, 0x0);
        gbc.writeMem(0xd393, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1b6f, gbc.sp());
        EXPECT(0xd395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd393));
        EXPECT(0xc3, gbc.readMem(0xd394));
        // CB C3 0194
        gbc.setState(0x662, 0x70e8, 0x5a00, 0x93b2, 0x9020, 0xa754, 0x0, 0x0);
        gbc.writeMem(0x662, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x70e8, gbc.sp());
        EXPECT(0x664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0195
        gbc.setState(0x329d, 0x8336, 0x6a20, 0xce58, 0x550c, 0x340c, 0x1, 0x1);
        gbc.writeMem(0x329d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8336, gbc.sp());
        EXPECT(0x329f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0196
        gbc.setState(0x8eff, 0x1dc9, 0xba80, 0x1a5, 0x343b, 0x7890, 0x1, 0x0);
        gbc.writeMem(0x8eff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1dc9, gbc.sp());
        EXPECT(0x8f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eff));
        EXPECT(0xc3, gbc.readMem(0x8f00));
        // CB C3 0197
        gbc.setState(0xd785, 0xed34, 0xc70, 0xb6ac, 0xb21a, 0x751b, 0x1, 0x1);
        gbc.writeMem(0xd785, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xed34, gbc.sp());
        EXPECT(0xd787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd785));
        EXPECT(0xc3, gbc.readMem(0xd786));
        // CB C3 0198
        gbc.setState(0xadcc, 0x6c1, 0x5f40, 0x1e4e, 0x8b67, 0x88a1, 0x1, 0x1);
        gbc.writeMem(0xadcc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6c1, gbc.sp());
        EXPECT(0xadce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadcc));
        EXPECT(0xc3, gbc.readMem(0xadcd));
        // CB C3 0199
        gbc.setState(0x8759, 0xbd9e, 0xc3b0, 0xb86, 0xbb94, 0xc7bc, 0x1, 0x1);
        gbc.writeMem(0x8759, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbd9e, gbc.sp());
        EXPECT(0x875b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8759));
        EXPECT(0xc3, gbc.readMem(0x875a));
        // CB C3 019A
        gbc.setState(0x21e6, 0x4a27, 0xf750, 0x710b, 0x6438, 0x55c2, 0x1, 0x0);
        gbc.writeMem(0x21e6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4a27, gbc.sp());
        EXPECT(0x21e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 019B
        gbc.setState(0x7a1a, 0x2eab, 0x38e0, 0xd994, 0x6ffc, 0x8283, 0x0, 0x0);
        gbc.writeMem(0x7a1a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2eab, gbc.sp());
        EXPECT(0x7a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 019C
        gbc.setState(0xc8cc, 0x5abb, 0x51c0, 0x900e, 0x6df1, 0xa67c, 0x0, 0x0);
        gbc.writeMem(0xc8cc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5abb, gbc.sp());
        EXPECT(0xc8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8cc));
        EXPECT(0xc3, gbc.readMem(0xc8cd));
        // CB C3 019D
        gbc.setState(0x6245, 0xe791, 0x4d70, 0xa548, 0x645f, 0x4599, 0x0, 0x1);
        gbc.writeMem(0x6245, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe791, gbc.sp());
        EXPECT(0x6247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 019E
        gbc.setState(0x2d77, 0x17a4, 0x7490, 0xc84, 0xf6cf, 0xe35d, 0x0, 0x1);
        gbc.writeMem(0x2d77, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x17a4, gbc.sp());
        EXPECT(0x2d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 019F
        gbc.setState(0x70bc, 0xc540, 0x38b0, 0xf148, 0x639b, 0xca50, 0x0, 0x1);
        gbc.writeMem(0x70bc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc540, gbc.sp());
        EXPECT(0x70be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01A0
        gbc.setState(0x44ad, 0x67c4, 0xda30, 0x6ca5, 0x6ce6, 0x2074, 0x0, 0x0);
        gbc.writeMem(0x44ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x67c4, gbc.sp());
        EXPECT(0x44af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01A1
        gbc.setState(0xeec4, 0xff38, 0x45d0, 0xb1ef, 0x134a, 0x406b, 0x1, 0x0);
        gbc.writeMem(0xeec4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xff38, gbc.sp());
        EXPECT(0xeec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec4));
        EXPECT(0xc3, gbc.readMem(0xeec5));
        // CB C3 01A2
        gbc.setState(0xda73, 0xac0f, 0x62d0, 0x93d5, 0x7879, 0x97b7, 0x0, 0x1);
        gbc.writeMem(0xda73, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xac0f, gbc.sp());
        EXPECT(0xda75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda73));
        EXPECT(0xc3, gbc.readMem(0xda74));
        // CB C3 01A3
        gbc.setState(0x21c1, 0xc7ce, 0xa460, 0x1424, 0xb452, 0xb661, 0x1, 0x1);
        gbc.writeMem(0x21c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc7ce, gbc.sp());
        EXPECT(0x21c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01A4
        gbc.setState(0xac51, 0x81b9, 0x6220, 0xe327, 0x4595, 0x1ce0, 0x0, 0x1);
        gbc.writeMem(0xac51, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x81b9, gbc.sp());
        EXPECT(0xac53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac51));
        EXPECT(0xc3, gbc.readMem(0xac52));
        // CB C3 01A5
        gbc.setState(0xdf5e, 0x806c, 0x9f90, 0x8bfb, 0xfb8, 0x583, 0x1, 0x1);
        gbc.writeMem(0xdf5e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x806c, gbc.sp());
        EXPECT(0xdf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5e));
        EXPECT(0xc3, gbc.readMem(0xdf5f));
        // CB C3 01A6
        gbc.setState(0x3b6b, 0xf75a, 0xe890, 0x530d, 0x7927, 0x81d, 0x0, 0x1);
        gbc.writeMem(0x3b6b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf75a, gbc.sp());
        EXPECT(0x3b6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01A7
        gbc.setState(0x7e41, 0x212f, 0x4210, 0xeef8, 0xd945, 0x3c75, 0x1, 0x1);
        gbc.writeMem(0x7e41, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x212f, gbc.sp());
        EXPECT(0x7e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01A8
        gbc.setState(0x1a21, 0xf41c, 0xa960, 0xb2b0, 0x2127, 0xcbcd, 0x0, 0x0);
        gbc.writeMem(0x1a21, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf41c, gbc.sp());
        EXPECT(0x1a23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01A9
        gbc.setState(0x5dee, 0x481f, 0x9ec0, 0x2c62, 0xfc8e, 0xf5c9, 0x0, 0x1);
        gbc.writeMem(0x5dee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x481f, gbc.sp());
        EXPECT(0x5df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01AA
        gbc.setState(0x9475, 0x61a4, 0xe3d0, 0xd41d, 0xc755, 0xa5c5, 0x0, 0x1);
        gbc.writeMem(0x9475, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x61a4, gbc.sp());
        EXPECT(0x9477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9475));
        EXPECT(0xc3, gbc.readMem(0x9476));
        // CB C3 01AB
        gbc.setState(0x384e, 0x6901, 0x6af0, 0xfcbc, 0xedcf, 0x777f, 0x0, 0x0);
        gbc.writeMem(0x384e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6901, gbc.sp());
        EXPECT(0x3850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01AC
        gbc.setState(0x7986, 0xaa82, 0xe500, 0x8867, 0x5efc, 0xc964, 0x1, 0x1);
        gbc.writeMem(0x7986, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaa82, gbc.sp());
        EXPECT(0x7988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01AD
        gbc.setState(0x3605, 0xe347, 0xe660, 0x7229, 0x4b31, 0x752b, 0x0, 0x0);
        gbc.writeMem(0x3605, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe347, gbc.sp());
        EXPECT(0x3607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01AE
        gbc.setState(0x6d34, 0x9ca1, 0x30, 0xf411, 0x5f2d, 0xb8d6, 0x0, 0x1);
        gbc.writeMem(0x6d34, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9ca1, gbc.sp());
        EXPECT(0x6d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01AF
        gbc.setState(0xc26c, 0x9ff1, 0xdeb0, 0xcd87, 0x52f1, 0xa83f, 0x0, 0x1);
        gbc.writeMem(0xc26c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9ff1, gbc.sp());
        EXPECT(0xc26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26c));
        EXPECT(0xc3, gbc.readMem(0xc26d));
        // CB C3 01B0
        gbc.setState(0x719d, 0x68f3, 0x7230, 0x2096, 0x49cf, 0x595b, 0x0, 0x0);
        gbc.writeMem(0x719d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x68f3, gbc.sp());
        EXPECT(0x719f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01B1
        gbc.setState(0x5f18, 0x2f6b, 0xb560, 0x2def, 0x5223, 0xea57, 0x1, 0x0);
        gbc.writeMem(0x5f18, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2f6b, gbc.sp());
        EXPECT(0x5f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01B2
        gbc.setState(0xe866, 0x3113, 0xf5f0, 0x9099, 0x740c, 0xb842, 0x0, 0x1);
        gbc.writeMem(0xe866, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3113, gbc.sp());
        EXPECT(0xe868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe866));
        EXPECT(0xc3, gbc.readMem(0xe867));
        // CB C3 01B3
        gbc.setState(0x3c52, 0xe56a, 0x27a0, 0x4543, 0xf0d9, 0xcea1, 0x0, 0x0);
        gbc.writeMem(0x3c52, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe56a, gbc.sp());
        EXPECT(0x3c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01B4
        gbc.setState(0x255f, 0x6291, 0x6990, 0xe2c4, 0x42d0, 0xbeb9, 0x0, 0x1);
        gbc.writeMem(0x255f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6291, gbc.sp());
        EXPECT(0x2561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01B5
        gbc.setState(0xb3c8, 0x2d0d, 0x57c0, 0xe60, 0x125a, 0xa75d, 0x1, 0x1);
        gbc.writeMem(0xb3c8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2d0d, gbc.sp());
        EXPECT(0xb3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c8));
        EXPECT(0xc3, gbc.readMem(0xb3c9));
        // CB C3 01B6
        gbc.setState(0x1355, 0xb094, 0xcc20, 0x73aa, 0x1a6c, 0xf141, 0x1, 0x0);
        gbc.writeMem(0x1355, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb094, gbc.sp());
        EXPECT(0x1357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01B8
        gbc.setState(0x3764, 0x5520, 0x7c00, 0x1978, 0x9dd8, 0x2770, 0x1, 0x0);
        gbc.writeMem(0x3764, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5520, gbc.sp());
        EXPECT(0x3766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01B9
        gbc.setState(0x788b, 0xf68b, 0x6480, 0x8f25, 0x4425, 0xeb1f, 0x0, 0x0);
        gbc.writeMem(0x788b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf68b, gbc.sp());
        EXPECT(0x788d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01BA
        gbc.setState(0x93e7, 0xa0d8, 0x1990, 0xbaa9, 0xd6a2, 0x438e, 0x0, 0x0);
        gbc.writeMem(0x93e7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa0d8, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e7));
        EXPECT(0xc3, gbc.readMem(0x93e8));
        // CB C3 01BB
        gbc.setState(0xde79, 0x9474, 0xe890, 0xb420, 0x8f63, 0x14cf, 0x0, 0x1);
        gbc.writeMem(0xde79, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9474, gbc.sp());
        EXPECT(0xde7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde79));
        EXPECT(0xc3, gbc.readMem(0xde7a));
        // CB C3 01BC
        gbc.setState(0x2b83, 0xaa2f, 0xa1e0, 0xa743, 0x41e1, 0x6fe2, 0x0, 0x1);
        gbc.writeMem(0x2b83, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xaa2f, gbc.sp());
        EXPECT(0x2b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01BD
        gbc.setState(0x794e, 0x4d03, 0x67f0, 0x3b1d, 0x79cd, 0xe5, 0x0, 0x0);
        gbc.writeMem(0x794e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4d03, gbc.sp());
        EXPECT(0x7950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01BE
        gbc.setState(0xcc1, 0x96cd, 0x9a00, 0xf7f8, 0x5168, 0xb5e6, 0x0, 0x0);
        gbc.writeMem(0xcc1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x96cd, gbc.sp());
        EXPECT(0xcc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01BF
        gbc.setState(0xed42, 0x69fb, 0x90a0, 0x5b77, 0x1f6d, 0xdd74, 0x1, 0x1);
        gbc.writeMem(0xed42, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x69fb, gbc.sp());
        EXPECT(0xed44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed42));
        EXPECT(0xc3, gbc.readMem(0xed43));
        // CB C3 01C0
        gbc.setState(0xb704, 0xd189, 0x6740, 0xddac, 0xffeb, 0x1144, 0x0, 0x0);
        gbc.writeMem(0xb704, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd189, gbc.sp());
        EXPECT(0xb706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb704));
        EXPECT(0xc3, gbc.readMem(0xb705));
        // CB C3 01C1
        gbc.setState(0x48c3, 0xbd5f, 0xf480, 0xd036, 0x841, 0xfe73, 0x1, 0x1);
        gbc.writeMem(0x48c3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbd5f, gbc.sp());
        EXPECT(0x48c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01C2
        gbc.setState(0x193d, 0xe6e5, 0xd970, 0x36af, 0x21de, 0x66dd, 0x1, 0x0);
        gbc.writeMem(0x193d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe6e5, gbc.sp());
        EXPECT(0x193f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01C3
        gbc.setState(0x6a08, 0x4f4a, 0x9b10, 0x9080, 0x8549, 0xc29c, 0x0, 0x0);
        gbc.writeMem(0x6a08, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4f4a, gbc.sp());
        EXPECT(0x6a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01C4
        gbc.setState(0x828f, 0x6cb0, 0xbbe0, 0x1472, 0x5eca, 0x8e17, 0x0, 0x0);
        gbc.writeMem(0x828f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6cb0, gbc.sp());
        EXPECT(0x8291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x828f));
        EXPECT(0xc3, gbc.readMem(0x8290));
        // CB C3 01C5
        gbc.setState(0xded5, 0xcf55, 0x8c00, 0xe8b1, 0x27bb, 0xfb14, 0x0, 0x1);
        gbc.writeMem(0xded5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcf55, gbc.sp());
        EXPECT(0xded7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded5));
        EXPECT(0xc3, gbc.readMem(0xded6));
        // CB C3 01C6
        gbc.setState(0x6600, 0x648f, 0x9d0, 0xbb51, 0xa1e5, 0x650c, 0x0, 0x1);
        gbc.writeMem(0x6600, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x648f, gbc.sp());
        EXPECT(0x6602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01C7
        gbc.setState(0x1ef8, 0x7b83, 0xbd40, 0xfcba, 0x5661, 0xa22e, 0x1, 0x1);
        gbc.writeMem(0x1ef8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7b83, gbc.sp());
        EXPECT(0x1efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01C8
        gbc.setState(0x8a2b, 0x7c7d, 0x9f20, 0x8d88, 0x6752, 0xebe3, 0x0, 0x0);
        gbc.writeMem(0x8a2b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7c7d, gbc.sp());
        EXPECT(0x8a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2b));
        EXPECT(0xc3, gbc.readMem(0x8a2c));
        // CB C3 01C9
        gbc.setState(0x8685, 0x94c3, 0x6700, 0x9f40, 0xe242, 0x38a7, 0x0, 0x0);
        gbc.writeMem(0x8685, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x94c3, gbc.sp());
        EXPECT(0x8687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8685));
        EXPECT(0xc3, gbc.readMem(0x8686));
        // CB C3 01CA
        gbc.setState(0xd77d, 0xb687, 0xaed0, 0x5358, 0x144b, 0xd609, 0x1, 0x1);
        gbc.writeMem(0xd77d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb687, gbc.sp());
        EXPECT(0xd77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77d));
        EXPECT(0xc3, gbc.readMem(0xd77e));
        // CB C3 01CB
        gbc.setState(0x4be1, 0xab25, 0x23e0, 0x6f81, 0xfcad, 0xb6ce, 0x1, 0x0);
        gbc.writeMem(0x4be1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xab25, gbc.sp());
        EXPECT(0x4be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01CC
        gbc.setState(0xc047, 0x3e2e, 0xf780, 0x5009, 0x72f9, 0x75f7, 0x1, 0x1);
        gbc.writeMem(0xc047, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3e2e, gbc.sp());
        EXPECT(0xc049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc047));
        EXPECT(0xc3, gbc.readMem(0xc048));
        // CB C3 01CD
        gbc.setState(0x28a2, 0xa28b, 0x96e0, 0x44dd, 0xe0da, 0x5048, 0x0, 0x0);
        gbc.writeMem(0x28a2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa28b, gbc.sp());
        EXPECT(0x28a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01CE
        gbc.setState(0xaafe, 0x551d, 0xdf30, 0xb1f7, 0x189f, 0x9488, 0x1, 0x0);
        gbc.writeMem(0xaafe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x551d, gbc.sp());
        EXPECT(0xab00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafe));
        EXPECT(0xc3, gbc.readMem(0xaaff));
        // CB C3 01CF
        gbc.setState(0x63ee, 0xcb92, 0xa560, 0xebe4, 0x9d9d, 0x8450, 0x1, 0x0);
        gbc.writeMem(0x63ee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xcb92, gbc.sp());
        EXPECT(0x63f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01D0
        gbc.setState(0x7881, 0xc4e0, 0xbbe0, 0x322d, 0x4c98, 0xf0d4, 0x0, 0x1);
        gbc.writeMem(0x7881, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc4e0, gbc.sp());
        EXPECT(0x7883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01D1
        gbc.setState(0x77c5, 0x861b, 0x31c0, 0xe1f0, 0xd6c, 0x293e, 0x0, 0x1);
        gbc.writeMem(0x77c5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x861b, gbc.sp());
        EXPECT(0x77c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01D2
        gbc.setState(0x6fe1, 0xe7e2, 0x1060, 0xe8a3, 0xed7c, 0x5a9a, 0x1, 0x1);
        gbc.writeMem(0x6fe1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe7e2, gbc.sp());
        EXPECT(0x6fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01D3
        gbc.setState(0xa97, 0x7499, 0x5300, 0x31a4, 0xb4b0, 0xe480, 0x1, 0x1);
        gbc.writeMem(0xa97, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7499, gbc.sp());
        EXPECT(0xa99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01D4
        gbc.setState(0x5313, 0xc5df, 0x6df0, 0xb0e0, 0x8b6f, 0x169, 0x1, 0x0);
        gbc.writeMem(0x5313, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc5df, gbc.sp());
        EXPECT(0x5315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01D5
        gbc.setState(0xdadc, 0x412c, 0x9660, 0x25b2, 0x5e28, 0xc9b3, 0x0, 0x0);
        gbc.writeMem(0xdadc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x412c, gbc.sp());
        EXPECT(0xdade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdadc));
        EXPECT(0xc3, gbc.readMem(0xdadd));
        // CB C3 01D6
        gbc.setState(0x2a1a, 0xc11b, 0xcb00, 0x2808, 0x8d1e, 0x43b8, 0x1, 0x1);
        gbc.writeMem(0x2a1a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc11b, gbc.sp());
        EXPECT(0x2a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01D7
        gbc.setState(0xa990, 0x7d85, 0xa550, 0x8020, 0x7a79, 0x7525, 0x0, 0x1);
        gbc.writeMem(0xa990, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7d85, gbc.sp());
        EXPECT(0xa992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa990));
        EXPECT(0xc3, gbc.readMem(0xa991));
        // CB C3 01D8
        gbc.setState(0x275, 0xd9b8, 0x36f0, 0xa1ed, 0xe462, 0x8301, 0x0, 0x1);
        gbc.writeMem(0x275, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd9b8, gbc.sp());
        EXPECT(0x277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01D9
        gbc.setState(0x4192, 0xa3ed, 0x8f20, 0xd5d6, 0x5b58, 0x2460, 0x1, 0x0);
        gbc.writeMem(0x4192, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa3ed, gbc.sp());
        EXPECT(0x4194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01DA
        gbc.setState(0xa0de, 0x61be, 0x7390, 0x1b5a, 0x367e, 0x86df, 0x0, 0x1);
        gbc.writeMem(0xa0de, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x61be, gbc.sp());
        EXPECT(0xa0e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0de));
        EXPECT(0xc3, gbc.readMem(0xa0df));
        // CB C3 01DB
        gbc.setState(0x5415, 0x8680, 0x2fc0, 0x8ca5, 0x7b75, 0x8ef2, 0x1, 0x0);
        gbc.writeMem(0x5415, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8680, gbc.sp());
        EXPECT(0x5417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01DC
        gbc.setState(0x36a6, 0x27ad, 0x6b70, 0x7ecf, 0x5a6b, 0x5b7e, 0x0, 0x1);
        gbc.writeMem(0x36a6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x27ad, gbc.sp());
        EXPECT(0x36a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01DD
        gbc.setState(0x9610, 0xe58f, 0x7440, 0x2340, 0x7ef8, 0x1555, 0x0, 0x0);
        gbc.writeMem(0x9610, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe58f, gbc.sp());
        EXPECT(0x9612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9610));
        EXPECT(0xc3, gbc.readMem(0x9611));
        // CB C3 01DF
        gbc.setState(0xc8e8, 0x6366, 0x3060, 0x8ce3, 0x5f1d, 0x7dff, 0x1, 0x0);
        gbc.writeMem(0xc8e8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6366, gbc.sp());
        EXPECT(0xc8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e8));
        EXPECT(0xc3, gbc.readMem(0xc8e9));
        // CB C3 01E0
        gbc.setState(0xbbb4, 0xf8f9, 0x4200, 0x523a, 0x92d6, 0xbec2, 0x1, 0x1);
        gbc.writeMem(0xbbb4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf8f9, gbc.sp());
        EXPECT(0xbbb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbb4));
        EXPECT(0xc3, gbc.readMem(0xbbb5));
        // CB C3 01E1
        gbc.setState(0x767f, 0x29ee, 0xbe00, 0x7862, 0x458b, 0x68fb, 0x1, 0x1);
        gbc.writeMem(0x767f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x29ee, gbc.sp());
        EXPECT(0x7681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01E2
        gbc.setState(0x6beb, 0xe98b, 0x3f40, 0x11ff, 0xa9c6, 0x3fa, 0x1, 0x1);
        gbc.writeMem(0x6beb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe98b, gbc.sp());
        EXPECT(0x6bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01E3
        gbc.setState(0xe629, 0x7ab0, 0x6ae0, 0xd0f9, 0xeaf9, 0x3aa5, 0x1, 0x0);
        gbc.writeMem(0xe629, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7ab0, gbc.sp());
        EXPECT(0xe62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe629));
        EXPECT(0xc3, gbc.readMem(0xe62a));
        // CB C3 01E4
        gbc.setState(0x690f, 0xd018, 0x2e70, 0x836e, 0x4216, 0x1f8c, 0x1, 0x1);
        gbc.writeMem(0x690f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd018, gbc.sp());
        EXPECT(0x6911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01E5
        gbc.setState(0xc920, 0x9e3b, 0x79e0, 0x1817, 0x4b1, 0x4d64, 0x0, 0x1);
        gbc.writeMem(0xc920, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9e3b, gbc.sp());
        EXPECT(0xc922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc920));
        EXPECT(0xc3, gbc.readMem(0xc921));
        // CB C3 01E6
        gbc.setState(0xe6e3, 0x2610, 0xa0e0, 0x7f3e, 0xd259, 0x8d18, 0x0, 0x0);
        gbc.writeMem(0xe6e3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2610, gbc.sp());
        EXPECT(0xe6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e3));
        EXPECT(0xc3, gbc.readMem(0xe6e4));
        // CB C3 01E7
        gbc.setState(0xfc6, 0x5935, 0x3f10, 0xc146, 0x58a1, 0x779e, 0x1, 0x0);
        gbc.writeMem(0xfc6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5935, gbc.sp());
        EXPECT(0xfc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01E8
        gbc.setState(0x2fc, 0x2ee9, 0x94f0, 0x2df0, 0xb6b1, 0x7e40, 0x1, 0x1);
        gbc.writeMem(0x2fc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2ee9, gbc.sp());
        EXPECT(0x2fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01E9
        gbc.setState(0x712a, 0xdbe, 0xb930, 0xdd86, 0xe481, 0x94d9, 0x0, 0x1);
        gbc.writeMem(0x712a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdbe, gbc.sp());
        EXPECT(0x712c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01EA
        gbc.setState(0x5474, 0x2956, 0x11d0, 0xa2fe, 0xd2bd, 0xd7b6, 0x0, 0x0);
        gbc.writeMem(0x5474, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2956, gbc.sp());
        EXPECT(0x5476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01EB
        gbc.setState(0x412b, 0x8eaf, 0x1410, 0x10e, 0xcd91, 0xea27, 0x1, 0x0);
        gbc.writeMem(0x412b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8eaf, gbc.sp());
        EXPECT(0x412d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01EC
        gbc.setState(0xb5fc, 0x7b82, 0xfc00, 0x3cbb, 0x12d7, 0x5247, 0x1, 0x1);
        gbc.writeMem(0xb5fc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7b82, gbc.sp());
        EXPECT(0xb5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5fc));
        EXPECT(0xc3, gbc.readMem(0xb5fd));
        // CB C3 01ED
        gbc.setState(0x8980, 0xcebb, 0x6d10, 0xad65, 0x60a5, 0x5da7, 0x1, 0x0);
        gbc.writeMem(0x8980, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcebb, gbc.sp());
        EXPECT(0x8982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8980));
        EXPECT(0xc3, gbc.readMem(0x8981));
        // CB C3 01EE
        gbc.setState(0xe696, 0xc215, 0xa340, 0x84fc, 0x118e, 0xdf78, 0x0, 0x1);
        gbc.writeMem(0xe696, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc215, gbc.sp());
        EXPECT(0xe698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe696));
        EXPECT(0xc3, gbc.readMem(0xe697));
        // CB C3 01EF
        gbc.setState(0x34f, 0xc05d, 0xf70, 0x79a9, 0x2fb5, 0x5d48, 0x1, 0x1);
        gbc.writeMem(0x34f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc05d, gbc.sp());
        EXPECT(0x351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01F0
        gbc.setState(0x4cfc, 0x5531, 0x140, 0x33d6, 0xb860, 0x1ad2, 0x1, 0x1);
        gbc.writeMem(0x4cfc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5531, gbc.sp());
        EXPECT(0x4cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01F1
        gbc.setState(0x9e69, 0x8bc6, 0xf310, 0xaa0b, 0xbb3f, 0x87a2, 0x1, 0x0);
        gbc.writeMem(0x9e69, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8bc6, gbc.sp());
        EXPECT(0x9e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e69));
        EXPECT(0xc3, gbc.readMem(0x9e6a));
        // CB C3 01F4
        gbc.setState(0x769, 0xd8aa, 0xae00, 0x3303, 0x869d, 0xbcd0, 0x0, 0x0);
        gbc.writeMem(0x769, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd8aa, gbc.sp());
        EXPECT(0x76b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01F5
        gbc.setState(0x957c, 0x8a64, 0x4a40, 0xa6b8, 0xbd70, 0xee8b, 0x1, 0x1);
        gbc.writeMem(0x957c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8a64, gbc.sp());
        EXPECT(0x957e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x957c));
        EXPECT(0xc3, gbc.readMem(0x957d));
        // CB C3 01F6
        gbc.setState(0x4004, 0x659c, 0x6d60, 0x8495, 0x4f70, 0x1747, 0x0, 0x0);
        gbc.writeMem(0x4004, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x659c, gbc.sp());
        EXPECT(0x4006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01F7
        gbc.setState(0x65e0, 0xfd5, 0xe9f0, 0x156e, 0xe50e, 0x3bce, 0x1, 0x1);
        gbc.writeMem(0x65e0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfd5, gbc.sp());
        EXPECT(0x65e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01F8
        gbc.setState(0x15b8, 0xfdec, 0x9cc0, 0xfd5f, 0xcc25, 0xfc0, 0x0, 0x1);
        gbc.writeMem(0x15b8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfdec, gbc.sp());
        EXPECT(0x15ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01F9
        gbc.setState(0xc79d, 0xba97, 0x64b0, 0x4208, 0x642b, 0xef29, 0x1, 0x1);
        gbc.writeMem(0xc79d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xba97, gbc.sp());
        EXPECT(0xc79f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79d));
        EXPECT(0xc3, gbc.readMem(0xc79e));
        // CB C3 01FA
        gbc.setState(0x88c0, 0x90b3, 0x7c70, 0x5baf, 0x25dc, 0x91d3, 0x1, 0x0);
        gbc.writeMem(0x88c0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x90b3, gbc.sp());
        EXPECT(0x88c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c0));
        EXPECT(0xc3, gbc.readMem(0x88c1));
        // CB C3 01FC
        gbc.setState(0xdba7, 0x9306, 0xfad0, 0x1690, 0x53d4, 0x11f5, 0x1, 0x0);
        gbc.writeMem(0xdba7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9306, gbc.sp());
        EXPECT(0xdba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba7));
        EXPECT(0xc3, gbc.readMem(0xdba8));
        // CB C3 01FD
        gbc.setState(0x33f5, 0xf5ec, 0x3ab0, 0xc82, 0x8713, 0x3dff, 0x1, 0x1);
        gbc.writeMem(0x33f5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf5ec, gbc.sp());
        EXPECT(0x33f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 01FE
        gbc.setState(0x5900, 0x5640, 0xf2a0, 0x1b28, 0x7327, 0x6dc2, 0x0, 0x0);
        gbc.writeMem(0x5900, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5640, gbc.sp());
        EXPECT(0x5902, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 01FF
        gbc.setState(0xbad9, 0x2ec0, 0x2950, 0xbc72, 0xac55, 0x3f4f, 0x0, 0x1);
        gbc.writeMem(0xbad9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2ec0, gbc.sp());
        EXPECT(0xbadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad9));
        EXPECT(0xc3, gbc.readMem(0xbada));
        // CB C3 0200
        gbc.setState(0x2fd8, 0xc254, 0x9b40, 0x58a9, 0xbd56, 0xc264, 0x0, 0x1);
        gbc.writeMem(0x2fd8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc254, gbc.sp());
        EXPECT(0x2fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0201
        gbc.setState(0x7cce, 0xc2a, 0xcbe0, 0x381e, 0xce06, 0xc5ca, 0x1, 0x1);
        gbc.writeMem(0x7cce, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc2a, gbc.sp());
        EXPECT(0x7cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0202
        gbc.setState(0x49a4, 0x3150, 0x4240, 0xcbd, 0xd5b2, 0x996f, 0x1, 0x0);
        gbc.writeMem(0x49a4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3150, gbc.sp());
        EXPECT(0x49a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0203
        gbc.setState(0x84b, 0xda9a, 0x5d00, 0x8152, 0xca54, 0x462e, 0x1, 0x0);
        gbc.writeMem(0x84b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xda9a, gbc.sp());
        EXPECT(0x84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0204
        gbc.setState(0xce5d, 0x92f9, 0x3fa0, 0x491b, 0x6614, 0x9029, 0x1, 0x1);
        gbc.writeMem(0xce5d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x92f9, gbc.sp());
        EXPECT(0xce5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce5d));
        EXPECT(0xc3, gbc.readMem(0xce5e));
        // CB C3 0205
        gbc.setState(0x565e, 0x388f, 0x6600, 0xf44d, 0xbb8b, 0x2e21, 0x0, 0x0);
        gbc.writeMem(0x565e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x388f, gbc.sp());
        EXPECT(0x5660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0206
        gbc.setState(0x4df5, 0x71b0, 0xc210, 0xb35a, 0xb7d1, 0x264e, 0x0, 0x0);
        gbc.writeMem(0x4df5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x71b0, gbc.sp());
        EXPECT(0x4df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0207
        gbc.setState(0x9705, 0x5f0a, 0xfc60, 0x8750, 0xc621, 0xf60e, 0x1, 0x0);
        gbc.writeMem(0x9705, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5f0a, gbc.sp());
        EXPECT(0x9707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9705));
        EXPECT(0xc3, gbc.readMem(0x9706));
        // CB C3 0208
        gbc.setState(0x91a0, 0xe804, 0xb70, 0xd03b, 0xdc36, 0x8371, 0x0, 0x0);
        gbc.writeMem(0x91a0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe804, gbc.sp());
        EXPECT(0x91a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a0));
        EXPECT(0xc3, gbc.readMem(0x91a1));
        // CB C3 0209
        gbc.setState(0x60f9, 0xb3bf, 0x9f90, 0x5a75, 0x49c7, 0x6236, 0x1, 0x1);
        gbc.writeMem(0x60f9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb3bf, gbc.sp());
        EXPECT(0x60fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 020A
        gbc.setState(0xa055, 0x39a3, 0xb980, 0x1c15, 0x7fbf, 0xe642, 0x0, 0x0);
        gbc.writeMem(0xa055, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x39a3, gbc.sp());
        EXPECT(0xa057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa055));
        EXPECT(0xc3, gbc.readMem(0xa056));
        // CB C3 020C
        gbc.setState(0x3e82, 0x531c, 0xe9d0, 0xe41b, 0x5bba, 0x939f, 0x1, 0x1);
        gbc.writeMem(0x3e82, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x531c, gbc.sp());
        EXPECT(0x3e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 020D
        gbc.setState(0x9e0e, 0xce47, 0x27c0, 0x6eb1, 0x6f85, 0xe175, 0x1, 0x1);
        gbc.writeMem(0x9e0e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xce47, gbc.sp());
        EXPECT(0x9e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0e));
        EXPECT(0xc3, gbc.readMem(0x9e0f));
        // CB C3 020F
        gbc.setState(0x488a, 0xc58b, 0x91c0, 0xabcb, 0x7aa, 0xab52, 0x0, 0x1);
        gbc.writeMem(0x488a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc58b, gbc.sp());
        EXPECT(0x488c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0210
        gbc.setState(0xb159, 0x89c3, 0x8ff0, 0x28ed, 0x8dd6, 0x8b9f, 0x1, 0x1);
        gbc.writeMem(0xb159, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x89c3, gbc.sp());
        EXPECT(0xb15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb159));
        EXPECT(0xc3, gbc.readMem(0xb15a));
        // CB C3 0211
        gbc.setState(0xd0c8, 0x99ef, 0x6600, 0xf609, 0xc796, 0xa43, 0x0, 0x0);
        gbc.writeMem(0xd0c8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x99ef, gbc.sp());
        EXPECT(0xd0ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c8));
        EXPECT(0xc3, gbc.readMem(0xd0c9));
        // CB C3 0212
        gbc.setState(0x8022, 0xa3b, 0x2b80, 0xf1c9, 0xc331, 0x63ca, 0x1, 0x1);
        gbc.writeMem(0x8022, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa3b, gbc.sp());
        EXPECT(0x8024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8022));
        EXPECT(0xc3, gbc.readMem(0x8023));
        // CB C3 0213
        gbc.setState(0xbac9, 0xf8b9, 0x6ad0, 0xfcff, 0x6099, 0xe7df, 0x1, 0x1);
        gbc.writeMem(0xbac9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf8b9, gbc.sp());
        EXPECT(0xbacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac9));
        EXPECT(0xc3, gbc.readMem(0xbaca));
        // CB C3 0214
        gbc.setState(0xe6c9, 0x3356, 0xe470, 0xec57, 0x67a6, 0xde54, 0x1, 0x0);
        gbc.writeMem(0xe6c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3356, gbc.sp());
        EXPECT(0xe6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c9));
        EXPECT(0xc3, gbc.readMem(0xe6ca));
        // CB C3 0215
        gbc.setState(0x38d9, 0x1dce, 0x2c20, 0x2c27, 0xd53a, 0x8502, 0x0, 0x1);
        gbc.writeMem(0x38d9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1dce, gbc.sp());
        EXPECT(0x38db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0216
        gbc.setState(0xcef2, 0x1ee5, 0x13b0, 0xf1d7, 0xb253, 0x5a23, 0x0, 0x0);
        gbc.writeMem(0xcef2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1ee5, gbc.sp());
        EXPECT(0xcef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef2));
        EXPECT(0xc3, gbc.readMem(0xcef3));
        // CB C3 0217
        gbc.setState(0xcd20, 0x1489, 0x8af0, 0xc4e8, 0xdfc7, 0xf293, 0x0, 0x0);
        gbc.writeMem(0xcd20, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1489, gbc.sp());
        EXPECT(0xcd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd20));
        EXPECT(0xc3, gbc.readMem(0xcd21));
        // CB C3 0218
        gbc.setState(0xb7d5, 0xc004, 0xd60, 0x608, 0x9a8f, 0xbcb4, 0x1, 0x0);
        gbc.writeMem(0xb7d5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc004, gbc.sp());
        EXPECT(0xb7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d5));
        EXPECT(0xc3, gbc.readMem(0xb7d6));
        // CB C3 0219
        gbc.setState(0x92e9, 0x7d8c, 0x6ca0, 0x210b, 0xe99c, 0x72fa, 0x1, 0x0);
        gbc.writeMem(0x92e9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7d8c, gbc.sp());
        EXPECT(0x92eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e9));
        EXPECT(0xc3, gbc.readMem(0x92ea));
        // CB C3 021A
        gbc.setState(0x9d0b, 0xf818, 0x1040, 0x29f7, 0x539, 0xb1e8, 0x1, 0x1);
        gbc.writeMem(0x9d0b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf818, gbc.sp());
        EXPECT(0x9d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0b));
        EXPECT(0xc3, gbc.readMem(0x9d0c));
        // CB C3 021B
        gbc.setState(0xbd25, 0x640f, 0x54a0, 0xdad9, 0x41fa, 0x940b, 0x1, 0x1);
        gbc.writeMem(0xbd25, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x640f, gbc.sp());
        EXPECT(0xbd27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd25));
        EXPECT(0xc3, gbc.readMem(0xbd26));
        // CB C3 021C
        gbc.setState(0x9cbd, 0x96c2, 0x6410, 0x692a, 0xf06e, 0x2c09, 0x1, 0x1);
        gbc.writeMem(0x9cbd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x96c2, gbc.sp());
        EXPECT(0x9cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbd));
        EXPECT(0xc3, gbc.readMem(0x9cbe));
        // CB C3 021D
        gbc.setState(0x8d9c, 0xe2b9, 0x62d0, 0x4a65, 0x4130, 0xe6c2, 0x0, 0x0);
        gbc.writeMem(0x8d9c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe2b9, gbc.sp());
        EXPECT(0x8d9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d9c));
        EXPECT(0xc3, gbc.readMem(0x8d9d));
        // CB C3 021E
        gbc.setState(0xc14c, 0x5ce0, 0xa850, 0x6939, 0x7bb3, 0xa95e, 0x1, 0x1);
        gbc.writeMem(0xc14c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5ce0, gbc.sp());
        EXPECT(0xc14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14c));
        EXPECT(0xc3, gbc.readMem(0xc14d));
        // CB C3 021F
        gbc.setState(0xcee0, 0x5238, 0xbb00, 0xdc86, 0x45e9, 0x4294, 0x0, 0x0);
        gbc.writeMem(0xcee0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5238, gbc.sp());
        EXPECT(0xcee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee0));
        EXPECT(0xc3, gbc.readMem(0xcee1));
        // CB C3 0220
        gbc.setState(0xb699, 0x3f3, 0x5440, 0xcd56, 0x1883, 0x53d9, 0x0, 0x1);
        gbc.writeMem(0xb699, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3f3, gbc.sp());
        EXPECT(0xb69b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb699));
        EXPECT(0xc3, gbc.readMem(0xb69a));
        // CB C3 0221
        gbc.setState(0x4a25, 0xe522, 0x92e0, 0xaa03, 0x1723, 0xd1b3, 0x1, 0x1);
        gbc.writeMem(0x4a25, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe522, gbc.sp());
        EXPECT(0x4a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0222
        gbc.setState(0x9da4, 0xe9b5, 0x17c0, 0xe359, 0xfc7, 0xda16, 0x0, 0x1);
        gbc.writeMem(0x9da4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe9b5, gbc.sp());
        EXPECT(0x9da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da4));
        EXPECT(0xc3, gbc.readMem(0x9da5));
        // CB C3 0224
        gbc.setState(0x80e0, 0x5e55, 0x95e0, 0x9242, 0x687, 0x3398, 0x1, 0x0);
        gbc.writeMem(0x80e0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5e55, gbc.sp());
        EXPECT(0x80e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e0));
        EXPECT(0xc3, gbc.readMem(0x80e1));
        // CB C3 0225
        gbc.setState(0xba31, 0x71e, 0xa960, 0xfd71, 0x91b2, 0x3771, 0x0, 0x1);
        gbc.writeMem(0xba31, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x71e, gbc.sp());
        EXPECT(0xba33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba31));
        EXPECT(0xc3, gbc.readMem(0xba32));
        // CB C3 0226
        gbc.setState(0xbad, 0x9ec1, 0xaf70, 0xb704, 0x4a13, 0x1593, 0x1, 0x0);
        gbc.writeMem(0xbad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9ec1, gbc.sp());
        EXPECT(0xbaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0227
        gbc.setState(0x496b, 0x6d1f, 0x5670, 0x5ffc, 0x7d20, 0x91bb, 0x1, 0x1);
        gbc.writeMem(0x496b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6d1f, gbc.sp());
        EXPECT(0x496d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0228
        gbc.setState(0x493, 0x35d9, 0x7630, 0xee, 0xae62, 0x8bc5, 0x1, 0x1);
        gbc.writeMem(0x493, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x35d9, gbc.sp());
        EXPECT(0x495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0229
        gbc.setState(0x572c, 0x8ee6, 0xcfb0, 0x4f60, 0xc9cb, 0x7592, 0x0, 0x0);
        gbc.writeMem(0x572c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8ee6, gbc.sp());
        EXPECT(0x572e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 022A
        gbc.setState(0xc388, 0x371b, 0x75b0, 0x69e9, 0xdd6e, 0xe678, 0x0, 0x0);
        gbc.writeMem(0xc388, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x371b, gbc.sp());
        EXPECT(0xc38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc388));
        EXPECT(0xc3, gbc.readMem(0xc389));
        // CB C3 022B
        gbc.setState(0xc96c, 0x14b1, 0xa390, 0xb242, 0xf006, 0x7ef9, 0x1, 0x1);
        gbc.writeMem(0xc96c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x14b1, gbc.sp());
        EXPECT(0xc96e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96c));
        EXPECT(0xc3, gbc.readMem(0xc96d));
        // CB C3 022C
        gbc.setState(0x7285, 0x852b, 0x6e00, 0x29b8, 0x522c, 0xdcfb, 0x0, 0x0);
        gbc.writeMem(0x7285, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x852b, gbc.sp());
        EXPECT(0x7287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 022D
        gbc.setState(0x9a82, 0x87ae, 0x10c0, 0x60b8, 0xaad8, 0x5b2d, 0x0, 0x0);
        gbc.writeMem(0x9a82, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x87ae, gbc.sp());
        EXPECT(0x9a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a82));
        EXPECT(0xc3, gbc.readMem(0x9a83));
        // CB C3 022E
        gbc.setState(0x7642, 0x52f5, 0xb2b0, 0x24e9, 0x3481, 0xd4ef, 0x0, 0x1);
        gbc.writeMem(0x7642, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x52f5, gbc.sp());
        EXPECT(0x7644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 022F
        gbc.setState(0xd258, 0x4aaf, 0xf840, 0xfbd8, 0x459, 0xb386, 0x1, 0x0);
        gbc.writeMem(0xd258, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4aaf, gbc.sp());
        EXPECT(0xd25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd258));
        EXPECT(0xc3, gbc.readMem(0xd259));
        // CB C3 0230
        gbc.setState(0xd7b9, 0x4d12, 0xf8d0, 0x62a4, 0xd64d, 0x3c53, 0x0, 0x1);
        gbc.writeMem(0xd7b9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4d12, gbc.sp());
        EXPECT(0xd7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b9));
        EXPECT(0xc3, gbc.readMem(0xd7ba));
        // CB C3 0231
        gbc.setState(0xb8a1, 0xe278, 0xcb80, 0x570e, 0xc1cf, 0xf5c4, 0x0, 0x0);
        gbc.writeMem(0xb8a1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe278, gbc.sp());
        EXPECT(0xb8a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a1));
        EXPECT(0xc3, gbc.readMem(0xb8a2));
        // CB C3 0232
        gbc.setState(0x89da, 0x7f0, 0xb290, 0x349e, 0x5ddd, 0x4497, 0x0, 0x0);
        gbc.writeMem(0x89da, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7f0, gbc.sp());
        EXPECT(0x89dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89da));
        EXPECT(0xc3, gbc.readMem(0x89db));
        // CB C3 0233
        gbc.setState(0xb386, 0x2e0d, 0xad30, 0x52a4, 0xde91, 0xc751, 0x0, 0x0);
        gbc.writeMem(0xb386, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2e0d, gbc.sp());
        EXPECT(0xb388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb386));
        EXPECT(0xc3, gbc.readMem(0xb387));
        // CB C3 0234
        gbc.setState(0x2af3, 0x4797, 0xb570, 0xba4c, 0xfc54, 0x996b, 0x1, 0x0);
        gbc.writeMem(0x2af3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4797, gbc.sp());
        EXPECT(0x2af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0235
        gbc.setState(0xa929, 0x417f, 0x8dd0, 0x4d20, 0x494, 0x22e5, 0x1, 0x0);
        gbc.writeMem(0xa929, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x417f, gbc.sp());
        EXPECT(0xa92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa929));
        EXPECT(0xc3, gbc.readMem(0xa92a));
        // CB C3 0236
        gbc.setState(0xa246, 0xce1b, 0xe2d0, 0x75c4, 0xa8bd, 0xc05a, 0x0, 0x0);
        gbc.writeMem(0xa246, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xce1b, gbc.sp());
        EXPECT(0xa248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa246));
        EXPECT(0xc3, gbc.readMem(0xa247));
        // CB C3 0237
        gbc.setState(0xd0bf, 0x92e0, 0xf470, 0x992d, 0x569a, 0x695d, 0x1, 0x0);
        gbc.writeMem(0xd0bf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x92e0, gbc.sp());
        EXPECT(0xd0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0bf));
        EXPECT(0xc3, gbc.readMem(0xd0c0));
        // CB C3 0238
        gbc.setState(0x2fe1, 0xa1a5, 0x5db0, 0xf8b5, 0x6768, 0xe2fb, 0x0, 0x0);
        gbc.writeMem(0x2fe1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa1a5, gbc.sp());
        EXPECT(0x2fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0239
        gbc.setState(0xcabe, 0xfe7d, 0x5060, 0x4d75, 0xe87b, 0xb3dc, 0x0, 0x0);
        gbc.writeMem(0xcabe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfe7d, gbc.sp());
        EXPECT(0xcac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabe));
        EXPECT(0xc3, gbc.readMem(0xcabf));
        // CB C3 023A
        gbc.setState(0xd229, 0xddff, 0x1170, 0x9edf, 0x8cb2, 0x2072, 0x1, 0x1);
        gbc.writeMem(0xd229, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xddff, gbc.sp());
        EXPECT(0xd22b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd229));
        EXPECT(0xc3, gbc.readMem(0xd22a));
        // CB C3 023B
        gbc.setState(0xef42, 0x3d2b, 0x3c70, 0x7e45, 0xb0ad, 0x3102, 0x1, 0x1);
        gbc.writeMem(0xef42, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3d2b, gbc.sp());
        EXPECT(0xef44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef42));
        EXPECT(0xc3, gbc.readMem(0xef43));
        // CB C3 023C
        gbc.setState(0x7847, 0x894a, 0xaf80, 0x1718, 0xc1cf, 0x2001, 0x1, 0x1);
        gbc.writeMem(0x7847, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x894a, gbc.sp());
        EXPECT(0x7849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 023D
        gbc.setState(0x4974, 0x5ec7, 0xa9a0, 0x8012, 0x8b4f, 0x3708, 0x1, 0x1);
        gbc.writeMem(0x4974, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5ec7, gbc.sp());
        EXPECT(0x4976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 023E
        gbc.setState(0x14e6, 0xb94e, 0x5c80, 0xa09d, 0x3121, 0xa49a, 0x1, 0x0);
        gbc.writeMem(0x14e6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb94e, gbc.sp());
        EXPECT(0x14e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 023F
        gbc.setState(0xe4f7, 0x33d6, 0x1b20, 0x6bd8, 0xf5a, 0x9801, 0x0, 0x0);
        gbc.writeMem(0xe4f7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x33d6, gbc.sp());
        EXPECT(0xe4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f7));
        EXPECT(0xc3, gbc.readMem(0xe4f8));
        // CB C3 0240
        gbc.setState(0x698c, 0x20c2, 0x9540, 0xd7af, 0x1e6e, 0x2d43, 0x1, 0x1);
        gbc.writeMem(0x698c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x20c2, gbc.sp());
        EXPECT(0x698e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0241
        gbc.setState(0xeeba, 0xf7e4, 0xd5b0, 0x853b, 0x483f, 0xc560, 0x1, 0x1);
        gbc.writeMem(0xeeba, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf7e4, gbc.sp());
        EXPECT(0xeebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeba));
        EXPECT(0xc3, gbc.readMem(0xeebb));
        // CB C3 0242
        gbc.setState(0x76f9, 0x2e0c, 0xda70, 0x8dee, 0x1be6, 0x33d4, 0x0, 0x1);
        gbc.writeMem(0x76f9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2e0c, gbc.sp());
        EXPECT(0x76fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0244
        gbc.setState(0x849a, 0x6d4f, 0xd220, 0xdf82, 0xa495, 0x1bcd, 0x1, 0x0);
        gbc.writeMem(0x849a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6d4f, gbc.sp());
        EXPECT(0x849c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849a));
        EXPECT(0xc3, gbc.readMem(0x849b));
        // CB C3 0245
        gbc.setState(0x50a5, 0x91b9, 0x6dc0, 0x7826, 0xa6b5, 0x91ab, 0x1, 0x0);
        gbc.writeMem(0x50a5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x91b9, gbc.sp());
        EXPECT(0x50a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0246
        gbc.setState(0x1d95, 0xf546, 0x4650, 0xeac9, 0x9fc2, 0xac46, 0x1, 0x1);
        gbc.writeMem(0x1d95, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf546, gbc.sp());
        EXPECT(0x1d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0247
        gbc.setState(0x2209, 0x68ca, 0x3fc0, 0x20a5, 0x3ddd, 0x34ef, 0x0, 0x1);
        gbc.writeMem(0x2209, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x68ca, gbc.sp());
        EXPECT(0x220b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0248
        gbc.setState(0x6f72, 0x6969, 0x2c80, 0x1548, 0x41ad, 0xa7d1, 0x1, 0x1);
        gbc.writeMem(0x6f72, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6969, gbc.sp());
        EXPECT(0x6f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0249
        gbc.setState(0x178c, 0x85b3, 0x9c20, 0xd189, 0x1219, 0x5a85, 0x0, 0x1);
        gbc.writeMem(0x178c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x85b3, gbc.sp());
        EXPECT(0x178e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 024A
        gbc.setState(0x60e1, 0x376e, 0x6de0, 0xfa9b, 0xb2d9, 0x4b9, 0x0, 0x0);
        gbc.writeMem(0x60e1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x376e, gbc.sp());
        EXPECT(0x60e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 024B
        gbc.setState(0xbf03, 0x43bf, 0xf450, 0xf5c4, 0xb00a, 0x5e3b, 0x0, 0x1);
        gbc.writeMem(0xbf03, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x43bf, gbc.sp());
        EXPECT(0xbf05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf03));
        EXPECT(0xc3, gbc.readMem(0xbf04));
        // CB C3 024D
        gbc.setState(0x9847, 0xefec, 0x6990, 0xa3f0, 0xbad3, 0x31a6, 0x1, 0x0);
        gbc.writeMem(0x9847, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xefec, gbc.sp());
        EXPECT(0x9849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9847));
        EXPECT(0xc3, gbc.readMem(0x9848));
        // CB C3 024E
        gbc.setState(0x3048, 0x4a12, 0xc940, 0x8876, 0xa8b9, 0x802c, 0x0, 0x0);
        gbc.writeMem(0x3048, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4a12, gbc.sp());
        EXPECT(0x304a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 024F
        gbc.setState(0x9e80, 0x7441, 0xcbc0, 0xc4e0, 0x7972, 0x55fa, 0x1, 0x0);
        gbc.writeMem(0x9e80, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7441, gbc.sp());
        EXPECT(0x9e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e80));
        EXPECT(0xc3, gbc.readMem(0x9e81));
        // CB C3 0250
        gbc.setState(0xe6dd, 0x6814, 0x5d00, 0xf71c, 0x5319, 0x7b0e, 0x1, 0x0);
        gbc.writeMem(0xe6dd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6814, gbc.sp());
        EXPECT(0xe6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6dd));
        EXPECT(0xc3, gbc.readMem(0xe6de));
        // CB C3 0251
        gbc.setState(0x378a, 0x1c6, 0x9430, 0x4eaf, 0xb2a7, 0xe14e, 0x0, 0x1);
        gbc.writeMem(0x378a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1c6, gbc.sp());
        EXPECT(0x378c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0252
        gbc.setState(0x325d, 0x196b, 0x7980, 0xadb8, 0xa809, 0x9ffb, 0x1, 0x0);
        gbc.writeMem(0x325d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x196b, gbc.sp());
        EXPECT(0x325f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0253
        gbc.setState(0x41cc, 0x973f, 0xc610, 0x6e2, 0x385d, 0x7e3b, 0x1, 0x1);
        gbc.writeMem(0x41cc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x973f, gbc.sp());
        EXPECT(0x41ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0254
        gbc.setState(0x76d9, 0x7cb1, 0x24a0, 0x3686, 0x5e02, 0xdeb2, 0x0, 0x1);
        gbc.writeMem(0x76d9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7cb1, gbc.sp());
        EXPECT(0x76db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0255
        gbc.setState(0xcdea, 0x5417, 0xc670, 0x2881, 0xbee5, 0x7d88, 0x0, 0x1);
        gbc.writeMem(0xcdea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5417, gbc.sp());
        EXPECT(0xcdec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdea));
        EXPECT(0xc3, gbc.readMem(0xcdeb));
        // CB C3 0256
        gbc.setState(0x3d45, 0xf821, 0xd430, 0xf452, 0x6f75, 0x38de, 0x1, 0x1);
        gbc.writeMem(0x3d45, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf821, gbc.sp());
        EXPECT(0x3d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0257
        gbc.setState(0x7efd, 0xdcf1, 0x1ce0, 0x148f, 0xee3b, 0x99a2, 0x1, 0x0);
        gbc.writeMem(0x7efd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdcf1, gbc.sp());
        EXPECT(0x7eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0258
        gbc.setState(0x783b, 0xf4b9, 0x9c60, 0x8ba4, 0x9146, 0xad61, 0x0, 0x1);
        gbc.writeMem(0x783b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf4b9, gbc.sp());
        EXPECT(0x783d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0259
        gbc.setState(0xbc3c, 0x79b8, 0xff80, 0x96c9, 0xcc32, 0xac3d, 0x0, 0x1);
        gbc.writeMem(0xbc3c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x79b8, gbc.sp());
        EXPECT(0xbc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3c));
        EXPECT(0xc3, gbc.readMem(0xbc3d));
        // CB C3 025A
        gbc.setState(0xe5b6, 0x3407, 0x9d20, 0x38b9, 0xd62, 0xdfa5, 0x1, 0x0);
        gbc.writeMem(0xe5b6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3407, gbc.sp());
        EXPECT(0xe5b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b6));
        EXPECT(0xc3, gbc.readMem(0xe5b7));
        // CB C3 025B
        gbc.setState(0xd4d8, 0xaf61, 0x6fc0, 0x5da9, 0xd3e3, 0x9b0c, 0x0, 0x0);
        gbc.writeMem(0xd4d8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaf61, gbc.sp());
        EXPECT(0xd4da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d8));
        EXPECT(0xc3, gbc.readMem(0xd4d9));
        // CB C3 025C
        gbc.setState(0x5d1a, 0x85f6, 0xae0, 0x28cf, 0x6883, 0x77f6, 0x0, 0x0);
        gbc.writeMem(0x5d1a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x85f6, gbc.sp());
        EXPECT(0x5d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 025D
        gbc.setState(0x6e4a, 0xf805, 0x8c20, 0x7e03, 0x5d8c, 0xb026, 0x0, 0x1);
        gbc.writeMem(0x6e4a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf805, gbc.sp());
        EXPECT(0x6e4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 025E
        gbc.setState(0x4f22, 0xc880, 0x4bd0, 0x628b, 0xe538, 0xd519, 0x1, 0x1);
        gbc.writeMem(0x4f22, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc880, gbc.sp());
        EXPECT(0x4f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 025F
        gbc.setState(0xe2cc, 0xb7d6, 0x7720, 0xa9c2, 0x4560, 0xb01e, 0x0, 0x1);
        gbc.writeMem(0xe2cc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb7d6, gbc.sp());
        EXPECT(0xe2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2cc));
        EXPECT(0xc3, gbc.readMem(0xe2cd));
        // CB C3 0260
        gbc.setState(0x2ffe, 0x7aa3, 0xe510, 0x88c7, 0xe26f, 0xba49, 0x0, 0x0);
        gbc.writeMem(0x2ffe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7aa3, gbc.sp());
        EXPECT(0x3000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0261
        gbc.setState(0x4ecf, 0x6654, 0xc00, 0xf95d, 0xc843, 0x989b, 0x1, 0x1);
        gbc.writeMem(0x4ecf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6654, gbc.sp());
        EXPECT(0x4ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0262
        gbc.setState(0x2ffe, 0xd4f0, 0x6ab0, 0xdefb, 0x251e, 0x3ebf, 0x1, 0x1);
        gbc.writeMem(0x2ffe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd4f0, gbc.sp());
        EXPECT(0x3000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0263
        gbc.setState(0xd397, 0x9fb5, 0x4400, 0xd0b3, 0xda22, 0x8c70, 0x1, 0x0);
        gbc.writeMem(0xd397, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9fb5, gbc.sp());
        EXPECT(0xd399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd397));
        EXPECT(0xc3, gbc.readMem(0xd398));
        // CB C3 0264
        gbc.setState(0x3677, 0x8f14, 0x8b40, 0x64af, 0xd3d4, 0xa693, 0x0, 0x1);
        gbc.writeMem(0x3677, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8f14, gbc.sp());
        EXPECT(0x3679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0265
        gbc.setState(0xd9d7, 0xae45, 0xfc40, 0xa75b, 0xf112, 0x152, 0x0, 0x0);
        gbc.writeMem(0xd9d7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xae45, gbc.sp());
        EXPECT(0xd9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d7));
        EXPECT(0xc3, gbc.readMem(0xd9d8));
        // CB C3 0266
        gbc.setState(0x6c74, 0xb1d2, 0x36b0, 0xf18c, 0xf513, 0xb857, 0x1, 0x1);
        gbc.writeMem(0x6c74, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb1d2, gbc.sp());
        EXPECT(0x6c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0267
        gbc.setState(0x6849, 0x6130, 0x7db0, 0xa99f, 0x889, 0x9fcb, 0x0, 0x0);
        gbc.writeMem(0x6849, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6130, gbc.sp());
        EXPECT(0x684b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0268
        gbc.setState(0x54e5, 0x52c8, 0x8af0, 0x15c1, 0x1085, 0x5d19, 0x0, 0x1);
        gbc.writeMem(0x54e5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x52c8, gbc.sp());
        EXPECT(0x54e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0269
        gbc.setState(0x76c2, 0xf26a, 0x8ef0, 0xb794, 0x271f, 0x1d7e, 0x0, 0x0);
        gbc.writeMem(0x76c2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf26a, gbc.sp());
        EXPECT(0x76c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 026A
        gbc.setState(0xcb0b, 0xbe48, 0x9040, 0x6d72, 0x7939, 0x47d4, 0x0, 0x0);
        gbc.writeMem(0xcb0b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbe48, gbc.sp());
        EXPECT(0xcb0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb0b));
        EXPECT(0xc3, gbc.readMem(0xcb0c));
        // CB C3 026B
        gbc.setState(0x2665, 0x6023, 0x5770, 0xb074, 0xc3d4, 0xbc07, 0x1, 0x1);
        gbc.writeMem(0x2665, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6023, gbc.sp());
        EXPECT(0x2667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 026D
        gbc.setState(0x1b11, 0xe1e4, 0x8fa0, 0xc12f, 0xf657, 0x7c9b, 0x1, 0x1);
        gbc.writeMem(0x1b11, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe1e4, gbc.sp());
        EXPECT(0x1b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 026E
        gbc.setState(0x8147, 0x971, 0x9b40, 0xe531, 0xb358, 0xc753, 0x1, 0x1);
        gbc.writeMem(0x8147, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x971, gbc.sp());
        EXPECT(0x8149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8147));
        EXPECT(0xc3, gbc.readMem(0x8148));
        // CB C3 026F
        gbc.setState(0x672, 0x3821, 0x7190, 0x3e06, 0xef67, 0xc650, 0x1, 0x1);
        gbc.writeMem(0x672, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3821, gbc.sp());
        EXPECT(0x674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0270
        gbc.setState(0xe8cd, 0xdf0c, 0x8bd0, 0x785d, 0x5606, 0x4975, 0x0, 0x1);
        gbc.writeMem(0xe8cd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdf0c, gbc.sp());
        EXPECT(0xe8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cd));
        EXPECT(0xc3, gbc.readMem(0xe8ce));
        // CB C3 0271
        gbc.setState(0x2fd1, 0x13cb, 0x2550, 0xde36, 0x7186, 0x6c17, 0x0, 0x0);
        gbc.writeMem(0x2fd1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x13cb, gbc.sp());
        EXPECT(0x2fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0272
        gbc.setState(0xc98d, 0x458, 0x5f80, 0xfad2, 0xd8e8, 0x8673, 0x1, 0x0);
        gbc.writeMem(0xc98d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x458, gbc.sp());
        EXPECT(0xc98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc98d));
        EXPECT(0xc3, gbc.readMem(0xc98e));
        // CB C3 0273
        gbc.setState(0xa1b5, 0x72c8, 0xde80, 0xd70d, 0xd6fd, 0xe753, 0x1, 0x0);
        gbc.writeMem(0xa1b5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x72c8, gbc.sp());
        EXPECT(0xa1b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b5));
        EXPECT(0xc3, gbc.readMem(0xa1b6));
        // CB C3 0274
        gbc.setState(0x23ee, 0x882, 0xa030, 0x8a1c, 0x21ed, 0xe7a9, 0x0, 0x0);
        gbc.writeMem(0x23ee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x882, gbc.sp());
        EXPECT(0x23f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0275
        gbc.setState(0x28cc, 0x542c, 0x7930, 0x5186, 0xace1, 0xe475, 0x0, 0x0);
        gbc.writeMem(0x28cc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x542c, gbc.sp());
        EXPECT(0x28ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0276
        gbc.setState(0x52bd, 0x9f2, 0x3b30, 0x34e6, 0x604c, 0xa2d5, 0x1, 0x1);
        gbc.writeMem(0x52bd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9f2, gbc.sp());
        EXPECT(0x52bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0277
        gbc.setState(0x6431, 0x550d, 0x13d0, 0x3a4c, 0x3f5a, 0xec28, 0x0, 0x1);
        gbc.writeMem(0x6431, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x550d, gbc.sp());
        EXPECT(0x6433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0278
        gbc.setState(0x1d55, 0x18d1, 0xbb00, 0xc089, 0xc0f3, 0xea31, 0x1, 0x1);
        gbc.writeMem(0x1d55, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x18d1, gbc.sp());
        EXPECT(0x1d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0279
        gbc.setState(0xe08e, 0x99a2, 0x4f50, 0xf6cc, 0x2647, 0x766f, 0x0, 0x1);
        gbc.writeMem(0xe08e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x99a2, gbc.sp());
        EXPECT(0xe090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08e));
        EXPECT(0xc3, gbc.readMem(0xe08f));
        // CB C3 027A
        gbc.setState(0x21c9, 0xc84c, 0xb870, 0xecd5, 0x7210, 0x419b, 0x0, 0x0);
        gbc.writeMem(0x21c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc84c, gbc.sp());
        EXPECT(0x21cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 027B
        gbc.setState(0xa8e6, 0x38fe, 0xb550, 0xfda8, 0xd274, 0xa107, 0x0, 0x1);
        gbc.writeMem(0xa8e6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x38fe, gbc.sp());
        EXPECT(0xa8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e6));
        EXPECT(0xc3, gbc.readMem(0xa8e7));
        // CB C3 027C
        gbc.setState(0xf82, 0x6061, 0xa460, 0xb1ca, 0xb0b8, 0x313f, 0x0, 0x1);
        gbc.writeMem(0xf82, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6061, gbc.sp());
        EXPECT(0xf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 027D
        gbc.setState(0x3987, 0x72fe, 0x5a60, 0xe9ab, 0xe7ea, 0x39b2, 0x1, 0x0);
        gbc.writeMem(0x3987, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x72fe, gbc.sp());
        EXPECT(0x3989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 027E
        gbc.setState(0xc6a6, 0x7805, 0x3040, 0xcf07, 0xc80b, 0xaaa4, 0x0, 0x1);
        gbc.writeMem(0xc6a6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7805, gbc.sp());
        EXPECT(0xc6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a6));
        EXPECT(0xc3, gbc.readMem(0xc6a7));
        // CB C3 027F
        gbc.setState(0x4984, 0xab0f, 0x5070, 0xa809, 0x95f6, 0x7439, 0x1, 0x0);
        gbc.writeMem(0x4984, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xab0f, gbc.sp());
        EXPECT(0x4986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0280
        gbc.setState(0x66c3, 0x6de3, 0xb50, 0xb713, 0xe488, 0x8dea, 0x0, 0x1);
        gbc.writeMem(0x66c3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6de3, gbc.sp());
        EXPECT(0x66c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0281
        gbc.setState(0x6e0a, 0x60e7, 0xeff0, 0xb0c2, 0x3880, 0x2b91, 0x1, 0x0);
        gbc.writeMem(0x6e0a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x60e7, gbc.sp());
        EXPECT(0x6e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0283
        gbc.setState(0x437b, 0x8b3b, 0x2d80, 0x8ed, 0x556c, 0x201, 0x1, 0x1);
        gbc.writeMem(0x437b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8b3b, gbc.sp());
        EXPECT(0x437d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0285
        gbc.setState(0x4ad, 0xf5ff, 0xacc0, 0x7777, 0xa5de, 0xe77b, 0x0, 0x0);
        gbc.writeMem(0x4ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf5ff, gbc.sp());
        EXPECT(0x4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0286
        gbc.setState(0xc89, 0x9c39, 0x8630, 0x414b, 0x72da, 0xd60b, 0x0, 0x1);
        gbc.writeMem(0xc89, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9c39, gbc.sp());
        EXPECT(0xc8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0287
        gbc.setState(0x254, 0xc22, 0xeb0, 0x2b5c, 0xa21a, 0xa068, 0x0, 0x1);
        gbc.writeMem(0x254, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc22, gbc.sp());
        EXPECT(0x256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0288
        gbc.setState(0x9f13, 0x3aca, 0x17e0, 0x157d, 0xfc3c, 0xf7fe, 0x1, 0x1);
        gbc.writeMem(0x9f13, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3aca, gbc.sp());
        EXPECT(0x9f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f13));
        EXPECT(0xc3, gbc.readMem(0x9f14));
        // CB C3 0289
        gbc.setState(0x9c9d, 0xb20e, 0xe500, 0xe562, 0xe069, 0xe6f4, 0x0, 0x1);
        gbc.writeMem(0x9c9d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb20e, gbc.sp());
        EXPECT(0x9c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9d));
        EXPECT(0xc3, gbc.readMem(0x9c9e));
        // CB C3 028A
        gbc.setState(0x47dc, 0x99dd, 0x3f30, 0x1185, 0x5e8f, 0xb047, 0x0, 0x0);
        gbc.writeMem(0x47dc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x99dd, gbc.sp());
        EXPECT(0x47de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 028B
        gbc.setState(0x94dd, 0x8f14, 0xb480, 0x3bf2, 0x6731, 0xfd07, 0x0, 0x1);
        gbc.writeMem(0x94dd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8f14, gbc.sp());
        EXPECT(0x94df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94dd));
        EXPECT(0xc3, gbc.readMem(0x94de));
        // CB C3 028C
        gbc.setState(0x99c9, 0x5d89, 0x34b0, 0x7383, 0x8392, 0xf0dd, 0x0, 0x0);
        gbc.writeMem(0x99c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5d89, gbc.sp());
        EXPECT(0x99cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c9));
        EXPECT(0xc3, gbc.readMem(0x99ca));
        // CB C3 028D
        gbc.setState(0x9d69, 0x50e4, 0x10b0, 0x8f4d, 0x6474, 0x3fcd, 0x0, 0x1);
        gbc.writeMem(0x9d69, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x50e4, gbc.sp());
        EXPECT(0x9d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d69));
        EXPECT(0xc3, gbc.readMem(0x9d6a));
        // CB C3 028E
        gbc.setState(0x8cf, 0xe69b, 0x9db0, 0x5425, 0xadda, 0x42cd, 0x0, 0x1);
        gbc.writeMem(0x8cf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe69b, gbc.sp());
        EXPECT(0x8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 028F
        gbc.setState(0xa04b, 0x3db6, 0x8070, 0xdbc5, 0x598c, 0x7332, 0x1, 0x1);
        gbc.writeMem(0xa04b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3db6, gbc.sp());
        EXPECT(0xa04d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa04b));
        EXPECT(0xc3, gbc.readMem(0xa04c));
        // CB C3 0290
        gbc.setState(0x6ddb, 0x2acf, 0x3f80, 0xbc88, 0x882d, 0x3f93, 0x1, 0x1);
        gbc.writeMem(0x6ddb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2acf, gbc.sp());
        EXPECT(0x6ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0291
        gbc.setState(0x8fc0, 0x658a, 0x9ce0, 0x5ce2, 0xc237, 0xb05e, 0x0, 0x1);
        gbc.writeMem(0x8fc0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x658a, gbc.sp());
        EXPECT(0x8fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc0));
        EXPECT(0xc3, gbc.readMem(0x8fc1));
        // CB C3 0292
        gbc.setState(0xd4a9, 0x453, 0x2d70, 0xccf7, 0xe237, 0xe765, 0x0, 0x0);
        gbc.writeMem(0xd4a9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x453, gbc.sp());
        EXPECT(0xd4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a9));
        EXPECT(0xc3, gbc.readMem(0xd4aa));
        // CB C3 0293
        gbc.setState(0x1ea2, 0x3982, 0xf360, 0x48af, 0xd1a8, 0x5a7a, 0x0, 0x0);
        gbc.writeMem(0x1ea2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3982, gbc.sp());
        EXPECT(0x1ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0294
        gbc.setState(0xaa27, 0x3bc1, 0x69a0, 0xa52c, 0x3332, 0xdf20, 0x1, 0x1);
        gbc.writeMem(0xaa27, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3bc1, gbc.sp());
        EXPECT(0xaa29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa27));
        EXPECT(0xc3, gbc.readMem(0xaa28));
        // CB C3 0295
        gbc.setState(0x39a7, 0xed8f, 0x5ce0, 0xefb2, 0xb7d7, 0xc92e, 0x1, 0x1);
        gbc.writeMem(0x39a7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xed8f, gbc.sp());
        EXPECT(0x39a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0296
        gbc.setState(0xe55a, 0x973a, 0x39c0, 0x835a, 0x6496, 0x83a9, 0x0, 0x1);
        gbc.writeMem(0xe55a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x973a, gbc.sp());
        EXPECT(0xe55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55a));
        EXPECT(0xc3, gbc.readMem(0xe55b));
        // CB C3 0297
        gbc.setState(0x93ae, 0xc1e5, 0x1a70, 0xa02, 0x852, 0x4183, 0x0, 0x0);
        gbc.writeMem(0x93ae, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc1e5, gbc.sp());
        EXPECT(0x93b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ae));
        EXPECT(0xc3, gbc.readMem(0x93af));
        // CB C3 0298
        gbc.setState(0x6c6f, 0xa97c, 0x1d60, 0x7414, 0xc669, 0x4d85, 0x0, 0x1);
        gbc.writeMem(0x6c6f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa97c, gbc.sp());
        EXPECT(0x6c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0299
        gbc.setState(0x197a, 0xbebd, 0x4c50, 0x735a, 0x1761, 0xe36a, 0x0, 0x0);
        gbc.writeMem(0x197a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbebd, gbc.sp());
        EXPECT(0x197c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 029A
        gbc.setState(0x6626, 0xc6e, 0x2fe0, 0x827a, 0x3c69, 0x5f41, 0x0, 0x0);
        gbc.writeMem(0x6626, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc6e, gbc.sp());
        EXPECT(0x6628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 029B
        gbc.setState(0x43cf, 0x460d, 0x4cc0, 0x57c3, 0x11e4, 0xa1d9, 0x1, 0x0);
        gbc.writeMem(0x43cf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x460d, gbc.sp());
        EXPECT(0x43d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 029C
        gbc.setState(0xa19e, 0xcf8f, 0xcbd0, 0x2225, 0x3160, 0x79ae, 0x0, 0x0);
        gbc.writeMem(0xa19e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcf8f, gbc.sp());
        EXPECT(0xa1a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19e));
        EXPECT(0xc3, gbc.readMem(0xa19f));
        // CB C3 029D
        gbc.setState(0x2543, 0x224f, 0xbdd0, 0xeef0, 0xc2a, 0xec23, 0x1, 0x1);
        gbc.writeMem(0x2543, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x224f, gbc.sp());
        EXPECT(0x2545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 029E
        gbc.setState(0x8ecb, 0x5abd, 0x7950, 0xb44b, 0x59ad, 0x31d1, 0x0, 0x1);
        gbc.writeMem(0x8ecb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5abd, gbc.sp());
        EXPECT(0x8ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecb));
        EXPECT(0xc3, gbc.readMem(0x8ecc));
        // CB C3 029F
        gbc.setState(0xa153, 0xdec, 0x5740, 0x2225, 0xfcbb, 0xba8f, 0x0, 0x1);
        gbc.writeMem(0xa153, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdec, gbc.sp());
        EXPECT(0xa155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa153));
        EXPECT(0xc3, gbc.readMem(0xa154));
        // CB C3 02A1
        gbc.setState(0x86d4, 0x96f8, 0xab80, 0xb2c, 0x719d, 0x611b, 0x1, 0x1);
        gbc.writeMem(0x86d4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x96f8, gbc.sp());
        EXPECT(0x86d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d4));
        EXPECT(0xc3, gbc.readMem(0x86d5));
        // CB C3 02A3
        gbc.setState(0x11ea, 0x8155, 0x26d0, 0xc9d4, 0x4f7c, 0xd92e, 0x1, 0x0);
        gbc.writeMem(0x11ea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8155, gbc.sp());
        EXPECT(0x11ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02A4
        gbc.setState(0xcf9d, 0x1fbf, 0x2fb0, 0x7fce, 0xfe33, 0x1701, 0x0, 0x0);
        gbc.writeMem(0xcf9d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1fbf, gbc.sp());
        EXPECT(0xcf9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9d));
        EXPECT(0xc3, gbc.readMem(0xcf9e));
        // CB C3 02A5
        gbc.setState(0x717c, 0xa37b, 0x98e0, 0x603a, 0x568d, 0x59e6, 0x1, 0x0);
        gbc.writeMem(0x717c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa37b, gbc.sp());
        EXPECT(0x717e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02A6
        gbc.setState(0xbe6a, 0xe60f, 0x96d0, 0xe4e8, 0x18d7, 0xa264, 0x0, 0x1);
        gbc.writeMem(0xbe6a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe60f, gbc.sp());
        EXPECT(0xbe6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6a));
        EXPECT(0xc3, gbc.readMem(0xbe6b));
        // CB C3 02A7
        gbc.setState(0xde56, 0xb4e7, 0x7610, 0x314d, 0x99a, 0x3c51, 0x1, 0x1);
        gbc.writeMem(0xde56, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb4e7, gbc.sp());
        EXPECT(0xde58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde56));
        EXPECT(0xc3, gbc.readMem(0xde57));
        // CB C3 02A8
        gbc.setState(0xaf2b, 0x7cb, 0x39e0, 0x69e6, 0xa389, 0xf8bd, 0x0, 0x0);
        gbc.writeMem(0xaf2b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7cb, gbc.sp());
        EXPECT(0xaf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf2b));
        EXPECT(0xc3, gbc.readMem(0xaf2c));
        // CB C3 02A9
        gbc.setState(0x765c, 0xafa4, 0x6410, 0xa4b, 0x9ec1, 0x1e53, 0x1, 0x0);
        gbc.writeMem(0x765c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xafa4, gbc.sp());
        EXPECT(0x765e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02AA
        gbc.setState(0xde41, 0x49d8, 0x5b10, 0xe054, 0xb1d9, 0x8b1d, 0x1, 0x0);
        gbc.writeMem(0xde41, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x49d8, gbc.sp());
        EXPECT(0xde43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde41));
        EXPECT(0xc3, gbc.readMem(0xde42));
        // CB C3 02AB
        gbc.setState(0x96c4, 0x155, 0x2360, 0xc491, 0x9909, 0x367a, 0x0, 0x0);
        gbc.writeMem(0x96c4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x155, gbc.sp());
        EXPECT(0x96c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c4));
        EXPECT(0xc3, gbc.readMem(0x96c5));
        // CB C3 02AC
        gbc.setState(0x4522, 0x7e0f, 0x69a0, 0x865e, 0xf27c, 0x4bb6, 0x1, 0x0);
        gbc.writeMem(0x4522, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7e0f, gbc.sp());
        EXPECT(0x4524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02AD
        gbc.setState(0xb10e, 0xb948, 0x8dc0, 0x7f69, 0x6046, 0x677, 0x0, 0x0);
        gbc.writeMem(0xb10e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb948, gbc.sp());
        EXPECT(0xb110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10e));
        EXPECT(0xc3, gbc.readMem(0xb10f));
        // CB C3 02AE
        gbc.setState(0x5283, 0xf530, 0xd5a0, 0x55f5, 0xec19, 0xb760, 0x0, 0x1);
        gbc.writeMem(0x5283, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf530, gbc.sp());
        EXPECT(0x5285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02AF
        gbc.setState(0x168f, 0xd658, 0x2f20, 0x4e20, 0x8d38, 0x199b, 0x0, 0x1);
        gbc.writeMem(0x168f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd658, gbc.sp());
        EXPECT(0x1691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02B0
        gbc.setState(0xb2f4, 0xc2c9, 0x5510, 0x89cc, 0x821f, 0xeb33, 0x1, 0x0);
        gbc.writeMem(0xb2f4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc2c9, gbc.sp());
        EXPECT(0xb2f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f4));
        EXPECT(0xc3, gbc.readMem(0xb2f5));
        // CB C3 02B1
        gbc.setState(0x6de9, 0x8636, 0x20, 0xab95, 0x1cab, 0x4dd1, 0x0, 0x1);
        gbc.writeMem(0x6de9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8636, gbc.sp());
        EXPECT(0x6deb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02B2
        gbc.setState(0x2fda, 0x2d1, 0x12f0, 0xb856, 0x1b19, 0x2d2d, 0x0, 0x1);
        gbc.writeMem(0x2fda, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2d1, gbc.sp());
        EXPECT(0x2fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02B3
        gbc.setState(0xa8a, 0xac51, 0xacd0, 0xac01, 0x733c, 0xae50, 0x1, 0x0);
        gbc.writeMem(0xa8a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xac51, gbc.sp());
        EXPECT(0xa8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02B4
        gbc.setState(0x93e6, 0x9f02, 0x99c0, 0x8f1e, 0xdc27, 0x4430, 0x0, 0x1);
        gbc.writeMem(0x93e6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9f02, gbc.sp());
        EXPECT(0x93e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e6));
        EXPECT(0xc3, gbc.readMem(0x93e7));
        // CB C3 02B5
        gbc.setState(0x95d8, 0x372, 0x3110, 0x8aea, 0x6121, 0x157a, 0x0, 0x0);
        gbc.writeMem(0x95d8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x372, gbc.sp());
        EXPECT(0x95da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d8));
        EXPECT(0xc3, gbc.readMem(0x95d9));
        // CB C3 02B6
        gbc.setState(0x2681, 0xc477, 0x8da0, 0xb6c2, 0x94ef, 0x4337, 0x1, 0x0);
        gbc.writeMem(0x2681, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc477, gbc.sp());
        EXPECT(0x2683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02B7
        gbc.setState(0xef4c, 0x6e17, 0x7020, 0xa721, 0x59c5, 0xce80, 0x1, 0x0);
        gbc.writeMem(0xef4c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6e17, gbc.sp());
        EXPECT(0xef4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4c));
        EXPECT(0xc3, gbc.readMem(0xef4d));
        // CB C3 02B8
        gbc.setState(0x5dd0, 0x5883, 0x4bf0, 0xd93d, 0x2adf, 0x3b9a, 0x0, 0x0);
        gbc.writeMem(0x5dd0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5883, gbc.sp());
        EXPECT(0x5dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02B9
        gbc.setState(0xbdc9, 0x6665, 0x81a0, 0xc308, 0x4f3c, 0x7f7e, 0x1, 0x1);
        gbc.writeMem(0xbdc9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6665, gbc.sp());
        EXPECT(0xbdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc9));
        EXPECT(0xc3, gbc.readMem(0xbdca));
        // CB C3 02BA
        gbc.setState(0xd3f7, 0xdcd9, 0xc1d0, 0x1efd, 0x7292, 0x1597, 0x0, 0x0);
        gbc.writeMem(0xd3f7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdcd9, gbc.sp());
        EXPECT(0xd3f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f7));
        EXPECT(0xc3, gbc.readMem(0xd3f8));
        // CB C3 02BB
        gbc.setState(0xec77, 0xe79c, 0xadb0, 0x67a2, 0xda95, 0xa57b, 0x0, 0x1);
        gbc.writeMem(0xec77, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe79c, gbc.sp());
        EXPECT(0xec79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec77));
        EXPECT(0xc3, gbc.readMem(0xec78));
        // CB C3 02BC
        gbc.setState(0x4be6, 0x51c1, 0x2c50, 0x2af8, 0xd650, 0xa546, 0x0, 0x0);
        gbc.writeMem(0x4be6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x51c1, gbc.sp());
        EXPECT(0x4be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02BD
        gbc.setState(0x3ee6, 0xe0c7, 0x8630, 0x6741, 0x10b8, 0xdd2c, 0x0, 0x0);
        gbc.writeMem(0x3ee6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe0c7, gbc.sp());
        EXPECT(0x3ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02BE
        gbc.setState(0x19d1, 0x7886, 0xf2d0, 0xedec, 0x407a, 0x7332, 0x1, 0x0);
        gbc.writeMem(0x19d1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7886, gbc.sp());
        EXPECT(0x19d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02C0
        gbc.setState(0xaaf1, 0x6899, 0xe730, 0xa728, 0x6705, 0x512b, 0x0, 0x1);
        gbc.writeMem(0xaaf1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6899, gbc.sp());
        EXPECT(0xaaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf1));
        EXPECT(0xc3, gbc.readMem(0xaaf2));
        // CB C3 02C1
        gbc.setState(0x9f2, 0x6fe7, 0x87c0, 0xf7d6, 0xedc5, 0x996c, 0x1, 0x0);
        gbc.writeMem(0x9f2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6fe7, gbc.sp());
        EXPECT(0x9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02C3
        gbc.setState(0xec7c, 0xc389, 0xc670, 0x1ed2, 0x7c69, 0x186, 0x1, 0x1);
        gbc.writeMem(0xec7c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc389, gbc.sp());
        EXPECT(0xec7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7c));
        EXPECT(0xc3, gbc.readMem(0xec7d));
        // CB C3 02C4
        gbc.setState(0x6931, 0xfc0a, 0x7c50, 0x446d, 0x5a9a, 0xc61c, 0x0, 0x1);
        gbc.writeMem(0x6931, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfc0a, gbc.sp());
        EXPECT(0x6933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02C5
        gbc.setState(0x2dc6, 0x514b, 0xf840, 0x8f4, 0x7694, 0x35b9, 0x0, 0x0);
        gbc.writeMem(0x2dc6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x514b, gbc.sp());
        EXPECT(0x2dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02C6
        gbc.setState(0x37a0, 0xef, 0x2e00, 0x3bb3, 0x7dce, 0xc1db, 0x1, 0x0);
        gbc.writeMem(0x37a0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xef, gbc.sp());
        EXPECT(0x37a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02C7
        gbc.setState(0x33d5, 0x1a11, 0xf7c0, 0x2d40, 0xe357, 0xed00, 0x0, 0x0);
        gbc.writeMem(0x33d5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1a11, gbc.sp());
        EXPECT(0x33d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02C9
        gbc.setState(0x6f4, 0x25a0, 0x32d0, 0x528a, 0xf42e, 0xaa0d, 0x0, 0x0);
        gbc.writeMem(0x6f4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x25a0, gbc.sp());
        EXPECT(0x6f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02CA
        gbc.setState(0x13c1, 0xaab0, 0xd4d0, 0xd70b, 0x1846, 0xba53, 0x1, 0x0);
        gbc.writeMem(0x13c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xaab0, gbc.sp());
        EXPECT(0x13c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02CB
        gbc.setState(0xa434, 0xbfc9, 0xab70, 0xfc57, 0xde0f, 0xeb8f, 0x0, 0x1);
        gbc.writeMem(0xa434, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbfc9, gbc.sp());
        EXPECT(0xa436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa434));
        EXPECT(0xc3, gbc.readMem(0xa435));
        // CB C3 02CC
        gbc.setState(0xbfbd, 0x3444, 0x3410, 0x4e3e, 0x9ea4, 0x77f8, 0x1, 0x0);
        gbc.writeMem(0xbfbd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3444, gbc.sp());
        EXPECT(0xbfbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfbd));
        EXPECT(0xc3, gbc.readMem(0xbfbe));
        // CB C3 02CD
        gbc.setState(0xd6fa, 0xa3eb, 0x6900, 0xa3c0, 0xe816, 0x48f, 0x1, 0x1);
        gbc.writeMem(0xd6fa, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa3eb, gbc.sp());
        EXPECT(0xd6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fa));
        EXPECT(0xc3, gbc.readMem(0xd6fb));
        // CB C3 02CE
        gbc.setState(0x6e28, 0x37bb, 0xfe80, 0xac67, 0x5500, 0xd6ba, 0x0, 0x0);
        gbc.writeMem(0x6e28, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x37bb, gbc.sp());
        EXPECT(0x6e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02D0
        gbc.setState(0x4bd6, 0xd125, 0x6c50, 0xd063, 0x5240, 0x8561, 0x1, 0x1);
        gbc.writeMem(0x4bd6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd125, gbc.sp());
        EXPECT(0x4bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02D1
        gbc.setState(0xa9b2, 0xa068, 0xb180, 0xbd6a, 0xb54f, 0xc520, 0x1, 0x1);
        gbc.writeMem(0xa9b2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa068, gbc.sp());
        EXPECT(0xa9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b2));
        EXPECT(0xc3, gbc.readMem(0xa9b3));
        // CB C3 02D3
        gbc.setState(0x1e2c, 0x1d57, 0xd470, 0xaf18, 0x1725, 0x849f, 0x0, 0x1);
        gbc.writeMem(0x1e2c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1d57, gbc.sp());
        EXPECT(0x1e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02D5
        gbc.setState(0x10eb, 0xe183, 0xc820, 0x4211, 0xadb7, 0xdcc2, 0x1, 0x0);
        gbc.writeMem(0x10eb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe183, gbc.sp());
        EXPECT(0x10ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02D6
        gbc.setState(0x2a56, 0xaeb9, 0x89e0, 0x7deb, 0xb747, 0x5a40, 0x0, 0x1);
        gbc.writeMem(0x2a56, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xaeb9, gbc.sp());
        EXPECT(0x2a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02D7
        gbc.setState(0x3ed5, 0x4f66, 0x73f0, 0x1b21, 0x6891, 0x488c, 0x1, 0x0);
        gbc.writeMem(0x3ed5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4f66, gbc.sp());
        EXPECT(0x3ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02D8
        gbc.setState(0x99b, 0x62fd, 0x49c0, 0x470e, 0x651f, 0xcd4f, 0x0, 0x0);
        gbc.writeMem(0x99b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x62fd, gbc.sp());
        EXPECT(0x99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02D9
        gbc.setState(0x7fb9, 0x16cb, 0xec20, 0x2074, 0x66ee, 0x688c, 0x0, 0x1);
        gbc.writeMem(0x7fb9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x16cb, gbc.sp());
        EXPECT(0x7fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02DA
        gbc.setState(0xdf67, 0xc33d, 0xc950, 0xfbfe, 0xedd3, 0xcb5, 0x0, 0x1);
        gbc.writeMem(0xdf67, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc33d, gbc.sp());
        EXPECT(0xdf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf67));
        EXPECT(0xc3, gbc.readMem(0xdf68));
        // CB C3 02DB
        gbc.setState(0x3886, 0x8aaa, 0x3bc0, 0x11b2, 0xeaa9, 0xac11, 0x1, 0x1);
        gbc.writeMem(0x3886, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8aaa, gbc.sp());
        EXPECT(0x3888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02DC
        gbc.setState(0x20f1, 0xfd3d, 0x4430, 0x7ca1, 0xf5fe, 0x76d5, 0x1, 0x0);
        gbc.writeMem(0x20f1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfd3d, gbc.sp());
        EXPECT(0x20f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02DD
        gbc.setState(0x3438, 0x29d7, 0x8290, 0xb303, 0x8d6c, 0xab3e, 0x1, 0x1);
        gbc.writeMem(0x3438, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x29d7, gbc.sp());
        EXPECT(0x343a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02DE
        gbc.setState(0x16e1, 0x66ca, 0xcd60, 0x990c, 0x419e, 0xa236, 0x0, 0x0);
        gbc.writeMem(0x16e1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x66ca, gbc.sp());
        EXPECT(0x16e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02DF
        gbc.setState(0x7aca, 0xee31, 0x5240, 0x5724, 0x25f9, 0xcf4a, 0x1, 0x1);
        gbc.writeMem(0x7aca, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xee31, gbc.sp());
        EXPECT(0x7acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02E0
        gbc.setState(0xb06, 0x2e07, 0x32a0, 0x121a, 0xa385, 0x9a07, 0x0, 0x0);
        gbc.writeMem(0xb06, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2e07, gbc.sp());
        EXPECT(0xb08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02E1
        gbc.setState(0x78ad, 0x1510, 0x2910, 0xef19, 0x153f, 0x9c3f, 0x1, 0x1);
        gbc.writeMem(0x78ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1510, gbc.sp());
        EXPECT(0x78af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02E2
        gbc.setState(0x30b1, 0x16a3, 0xc770, 0x3f4, 0xcc7e, 0x36ad, 0x0, 0x0);
        gbc.writeMem(0x30b1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x16a3, gbc.sp());
        EXPECT(0x30b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02E3
        gbc.setState(0x9f57, 0xb7a6, 0x7580, 0xe2a1, 0x5a41, 0x6a59, 0x0, 0x1);
        gbc.writeMem(0x9f57, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb7a6, gbc.sp());
        EXPECT(0x9f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f57));
        EXPECT(0xc3, gbc.readMem(0x9f58));
        // CB C3 02E4
        gbc.setState(0xe9b7, 0xba5c, 0xc9d0, 0x7a18, 0x5156, 0x72e0, 0x1, 0x0);
        gbc.writeMem(0xe9b7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xba5c, gbc.sp());
        EXPECT(0xe9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b7));
        EXPECT(0xc3, gbc.readMem(0xe9b8));
        // CB C3 02E5
        gbc.setState(0x510b, 0xce73, 0x6360, 0x4819, 0xd01c, 0x2159, 0x1, 0x1);
        gbc.writeMem(0x510b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xce73, gbc.sp());
        EXPECT(0x510d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02E6
        gbc.setState(0x38ac, 0x60c9, 0xb2e0, 0xbfa2, 0x32df, 0xea97, 0x0, 0x1);
        gbc.writeMem(0x38ac, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x60c9, gbc.sp());
        EXPECT(0x38ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02E7
        gbc.setState(0x6f21, 0xedf5, 0x7190, 0x9158, 0x9df2, 0xf0b4, 0x0, 0x1);
        gbc.writeMem(0x6f21, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xedf5, gbc.sp());
        EXPECT(0x6f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02E8
        gbc.setState(0x66dc, 0x51aa, 0x4240, 0x3415, 0x288, 0xbda5, 0x0, 0x0);
        gbc.writeMem(0x66dc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x51aa, gbc.sp());
        EXPECT(0x66de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02E9
        gbc.setState(0x59e0, 0x7a15, 0xce10, 0x6301, 0xf6db, 0x7ee6, 0x1, 0x0);
        gbc.writeMem(0x59e0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7a15, gbc.sp());
        EXPECT(0x59e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02EA
        gbc.setState(0x10d3, 0xd887, 0x4d60, 0x2650, 0x5f93, 0x5c9d, 0x0, 0x0);
        gbc.writeMem(0x10d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd887, gbc.sp());
        EXPECT(0x10d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02EB
        gbc.setState(0x608c, 0xacdc, 0x5e90, 0xa1c6, 0xa7c, 0xd4b1, 0x1, 0x0);
        gbc.writeMem(0x608c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xacdc, gbc.sp());
        EXPECT(0x608e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02EC
        gbc.setState(0x4325, 0x4708, 0x64e0, 0x2cbe, 0x2abe, 0xdfbf, 0x1, 0x0);
        gbc.writeMem(0x4325, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4708, gbc.sp());
        EXPECT(0x4327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02EE
        gbc.setState(0xa5ea, 0xece, 0x4bb0, 0xa98b, 0xec03, 0xbbc3, 0x0, 0x1);
        gbc.writeMem(0xa5ea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xece, gbc.sp());
        EXPECT(0xa5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ea));
        EXPECT(0xc3, gbc.readMem(0xa5eb));
        // CB C3 02EF
        gbc.setState(0x1b91, 0xfb8c, 0x5410, 0x4eab, 0x51c9, 0x3fd8, 0x0, 0x0);
        gbc.writeMem(0x1b91, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfb8c, gbc.sp());
        EXPECT(0x1b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 02F0
        gbc.setState(0xbd0a, 0xcf79, 0xf420, 0x72b9, 0x47b4, 0x1a8, 0x1, 0x1);
        gbc.writeMem(0xbd0a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcf79, gbc.sp());
        EXPECT(0xbd0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd0a));
        EXPECT(0xc3, gbc.readMem(0xbd0b));
        // CB C3 02F1
        gbc.setState(0x2909, 0xfcb0, 0x5e0, 0x3e41, 0xbf5a, 0x3227, 0x1, 0x0);
        gbc.writeMem(0x2909, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfcb0, gbc.sp());
        EXPECT(0x290b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02F3
        gbc.setState(0x850d, 0xc5b7, 0xf8e0, 0xfb69, 0x52b1, 0x4906, 0x1, 0x1);
        gbc.writeMem(0x850d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc5b7, gbc.sp());
        EXPECT(0x850f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850d));
        EXPECT(0xc3, gbc.readMem(0x850e));
        // CB C3 02F4
        gbc.setState(0x8d53, 0x8fa9, 0x1830, 0xafc2, 0x8110, 0x7c2d, 0x1, 0x0);
        gbc.writeMem(0x8d53, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8fa9, gbc.sp());
        EXPECT(0x8d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d53));
        EXPECT(0xc3, gbc.readMem(0x8d54));
        // CB C3 02F5
        gbc.setState(0xae66, 0x4565, 0x8d80, 0xcd0d, 0x5da7, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0xae66, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4565, gbc.sp());
        EXPECT(0xae68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae66));
        EXPECT(0xc3, gbc.readMem(0xae67));
        // CB C3 02F6
        gbc.setState(0xb590, 0x8c91, 0x27a0, 0x8af1, 0x76c0, 0x7eef, 0x0, 0x0);
        gbc.writeMem(0xb590, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8c91, gbc.sp());
        EXPECT(0xb592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb590));
        EXPECT(0xc3, gbc.readMem(0xb591));
        // CB C3 02F7
        gbc.setState(0x921, 0xdf0a, 0x3760, 0x26fe, 0x9fdc, 0xee38, 0x1, 0x1);
        gbc.writeMem(0x921, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdf0a, gbc.sp());
        EXPECT(0x923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02F8
        gbc.setState(0xc735, 0x3c6d, 0x5490, 0xc7c, 0x8d74, 0xb786, 0x0, 0x0);
        gbc.writeMem(0xc735, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3c6d, gbc.sp());
        EXPECT(0xc737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc735));
        EXPECT(0xc3, gbc.readMem(0xc736));
        // CB C3 02F9
        gbc.setState(0xb666, 0xf379, 0x2930, 0xfd15, 0x3418, 0xccc3, 0x1, 0x0);
        gbc.writeMem(0xb666, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf379, gbc.sp());
        EXPECT(0xb668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb666));
        EXPECT(0xc3, gbc.readMem(0xb667));
        // CB C3 02FA
        gbc.setState(0xee38, 0x7de6, 0x6f40, 0xc2fa, 0xacac, 0xc537, 0x0, 0x0);
        gbc.writeMem(0xee38, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7de6, gbc.sp());
        EXPECT(0xee3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee38));
        EXPECT(0xc3, gbc.readMem(0xee39));
        // CB C3 02FB
        gbc.setState(0x42b4, 0xe022, 0x8bc0, 0xa482, 0x7f6f, 0x5e14, 0x0, 0x1);
        gbc.writeMem(0x42b4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe022, gbc.sp());
        EXPECT(0x42b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02FC
        gbc.setState(0xd3dd, 0x7c3e, 0x7430, 0x8f41, 0x6d00, 0x828d, 0x1, 0x0);
        gbc.writeMem(0xd3dd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7c3e, gbc.sp());
        EXPECT(0xd3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3dd));
        EXPECT(0xc3, gbc.readMem(0xd3de));
        // CB C3 02FD
        gbc.setState(0x4bfc, 0xe931, 0xe100, 0x554, 0x9120, 0xf566, 0x0, 0x0);
        gbc.writeMem(0x4bfc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe931, gbc.sp());
        EXPECT(0x4bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 02FE
        gbc.setState(0xc804, 0x902f, 0x99b0, 0xa359, 0xbf54, 0xfc0d, 0x1, 0x0);
        gbc.writeMem(0xc804, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x902f, gbc.sp());
        EXPECT(0xc806, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc804));
        EXPECT(0xc3, gbc.readMem(0xc805));
        // CB C3 02FF
        gbc.setState(0x2b97, 0x8bb, 0x4330, 0x2c30, 0x3211, 0xaa12, 0x0, 0x1);
        gbc.writeMem(0x2b97, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8bb, gbc.sp());
        EXPECT(0x2b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0301
        gbc.setState(0x69ec, 0x7de2, 0x7550, 0x12f3, 0x6ee5, 0x213b, 0x0, 0x0);
        gbc.writeMem(0x69ec, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7de2, gbc.sp());
        EXPECT(0x69ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0302
        gbc.setState(0x9e23, 0x9da6, 0x2290, 0x30fb, 0xe27, 0xc030, 0x1, 0x1);
        gbc.writeMem(0x9e23, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9da6, gbc.sp());
        EXPECT(0x9e25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e23));
        EXPECT(0xc3, gbc.readMem(0x9e24));
        // CB C3 0303
        gbc.setState(0x5512, 0x5bb, 0xdb60, 0x848f, 0x33fb, 0xa205, 0x1, 0x0);
        gbc.writeMem(0x5512, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5bb, gbc.sp());
        EXPECT(0x5514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0304
        gbc.setState(0x896c, 0xaf5b, 0x7890, 0xed58, 0xab0b, 0x7e1b, 0x0, 0x0);
        gbc.writeMem(0x896c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xaf5b, gbc.sp());
        EXPECT(0x896e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896c));
        EXPECT(0xc3, gbc.readMem(0x896d));
        // CB C3 0305
        gbc.setState(0x8639, 0x9b66, 0xd6d0, 0x413b, 0x8a9d, 0xad3f, 0x0, 0x0);
        gbc.writeMem(0x8639, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9b66, gbc.sp());
        EXPECT(0x863b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8639));
        EXPECT(0xc3, gbc.readMem(0x863a));
        // CB C3 0306
        gbc.setState(0x4ba1, 0x7ae9, 0xd9b0, 0x8bda, 0x1f06, 0xd304, 0x1, 0x1);
        gbc.writeMem(0x4ba1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7ae9, gbc.sp());
        EXPECT(0x4ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0307
        gbc.setState(0x6628, 0xd413, 0xfbe0, 0xcc8e, 0xa2c, 0x582a, 0x0, 0x1);
        gbc.writeMem(0x6628, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd413, gbc.sp());
        EXPECT(0x662a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0308
        gbc.setState(0x62bd, 0x6cc9, 0x5cd0, 0x222a, 0xab21, 0xf5b6, 0x1, 0x0);
        gbc.writeMem(0x62bd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6cc9, gbc.sp());
        EXPECT(0x62bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0309
        gbc.setState(0xc4d8, 0x54ad, 0xc2e0, 0x1f01, 0xbefb, 0xb5f6, 0x1, 0x1);
        gbc.writeMem(0xc4d8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x54ad, gbc.sp());
        EXPECT(0xc4da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d8));
        EXPECT(0xc3, gbc.readMem(0xc4d9));
        // CB C3 030A
        gbc.setState(0x4e10, 0x3e1b, 0x14e0, 0xa0f9, 0x2fe3, 0x26c6, 0x1, 0x1);
        gbc.writeMem(0x4e10, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3e1b, gbc.sp());
        EXPECT(0x4e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 030B
        gbc.setState(0xd5a7, 0x1645, 0x9550, 0x49c8, 0x72c8, 0x761b, 0x0, 0x1);
        gbc.writeMem(0xd5a7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1645, gbc.sp());
        EXPECT(0xd5a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a7));
        EXPECT(0xc3, gbc.readMem(0xd5a8));
        // CB C3 030C
        gbc.setState(0x15b, 0x829c, 0x5d50, 0x64d6, 0x1e7f, 0x8b11, 0x1, 0x0);
        gbc.writeMem(0x15b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x829c, gbc.sp());
        EXPECT(0x15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 030D
        gbc.setState(0xb4c6, 0x389c, 0x12e0, 0xda5f, 0xe8af, 0xc2f6, 0x0, 0x0);
        gbc.writeMem(0xb4c6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x389c, gbc.sp());
        EXPECT(0xb4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c6));
        EXPECT(0xc3, gbc.readMem(0xb4c7));
        // CB C3 030E
        gbc.setState(0xa258, 0x275, 0xfa50, 0xbb3, 0xb8f2, 0x644, 0x0, 0x0);
        gbc.writeMem(0xa258, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x275, gbc.sp());
        EXPECT(0xa25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa258));
        EXPECT(0xc3, gbc.readMem(0xa259));
        // CB C3 030F
        gbc.setState(0x9798, 0x2dcb, 0x21f0, 0xc941, 0x92a4, 0x804e, 0x1, 0x1);
        gbc.writeMem(0x9798, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2dcb, gbc.sp());
        EXPECT(0x979a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9798));
        EXPECT(0xc3, gbc.readMem(0x9799));
        // CB C3 0310
        gbc.setState(0x4a26, 0xe4ed, 0x9520, 0x6190, 0xce30, 0x9414, 0x0, 0x0);
        gbc.writeMem(0x4a26, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe4ed, gbc.sp());
        EXPECT(0x4a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0311
        gbc.setState(0xbfb1, 0xb192, 0x1960, 0xc015, 0x4e6b, 0x5e9f, 0x1, 0x1);
        gbc.writeMem(0xbfb1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb192, gbc.sp());
        EXPECT(0xbfb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb1));
        EXPECT(0xc3, gbc.readMem(0xbfb2));
        // CB C3 0312
        gbc.setState(0x532b, 0x1ffe, 0x77f0, 0x964e, 0x4692, 0x4faa, 0x1, 0x1);
        gbc.writeMem(0x532b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1ffe, gbc.sp());
        EXPECT(0x532d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0313
        gbc.setState(0x44c, 0xf324, 0x5a20, 0x66f9, 0x7c44, 0x1b0e, 0x1, 0x0);
        gbc.writeMem(0x44c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf324, gbc.sp());
        EXPECT(0x44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0314
        gbc.setState(0x514, 0xd7b7, 0xe690, 0x24aa, 0x4394, 0x6d37, 0x0, 0x0);
        gbc.writeMem(0x514, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd7b7, gbc.sp());
        EXPECT(0x516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0315
        gbc.setState(0x96ff, 0x2441, 0x980, 0xa14b, 0x7d6d, 0xa12, 0x0, 0x0);
        gbc.writeMem(0x96ff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2441, gbc.sp());
        EXPECT(0x9701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ff));
        EXPECT(0xc3, gbc.readMem(0x9700));
        // CB C3 0316
        gbc.setState(0x517b, 0xeabc, 0xcc80, 0x647a, 0x193d, 0xeda2, 0x1, 0x1);
        gbc.writeMem(0x517b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeabc, gbc.sp());
        EXPECT(0x517d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0317
        gbc.setState(0xa6ff, 0x309d, 0xfef0, 0x5002, 0x3278, 0x238a, 0x0, 0x1);
        gbc.writeMem(0xa6ff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x309d, gbc.sp());
        EXPECT(0xa701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ff));
        EXPECT(0xc3, gbc.readMem(0xa700));
        // CB C3 0318
        gbc.setState(0x526f, 0xce09, 0xfb50, 0x803c, 0x6208, 0xa1b5, 0x1, 0x0);
        gbc.writeMem(0x526f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xce09, gbc.sp());
        EXPECT(0x5271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0319
        gbc.setState(0xcd4e, 0xe8a2, 0xcaf0, 0x9ce7, 0xcdb7, 0xb89b, 0x0, 0x0);
        gbc.writeMem(0xcd4e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe8a2, gbc.sp());
        EXPECT(0xcd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4e));
        EXPECT(0xc3, gbc.readMem(0xcd4f));
        // CB C3 031A
        gbc.setState(0xdb1, 0x1bb6, 0x1080, 0x4ac9, 0x5a13, 0x4374, 0x1, 0x1);
        gbc.writeMem(0xdb1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1bb6, gbc.sp());
        EXPECT(0xdb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 031B
        gbc.setState(0x3315, 0x1c1b, 0x9800, 0xf527, 0xbfdc, 0x98c8, 0x0, 0x0);
        gbc.writeMem(0x3315, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1c1b, gbc.sp());
        EXPECT(0x3317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 031C
        gbc.setState(0x109b, 0x9853, 0x3870, 0xb88c, 0xf1ff, 0x655f, 0x1, 0x0);
        gbc.writeMem(0x109b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9853, gbc.sp());
        EXPECT(0x109d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 031D
        gbc.setState(0xc41b, 0x3060, 0xdae0, 0xece7, 0x90c2, 0x85c3, 0x0, 0x1);
        gbc.writeMem(0xc41b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3060, gbc.sp());
        EXPECT(0xc41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41b));
        EXPECT(0xc3, gbc.readMem(0xc41c));
        // CB C3 031E
        gbc.setState(0xd5a0, 0x17ac, 0x6630, 0xa3a7, 0xdcbd, 0x17cd, 0x0, 0x0);
        gbc.writeMem(0xd5a0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x17ac, gbc.sp());
        EXPECT(0xd5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a0));
        EXPECT(0xc3, gbc.readMem(0xd5a1));
        // CB C3 0320
        gbc.setState(0x33cb, 0x890c, 0x5ed0, 0x4ad7, 0x183d, 0x2525, 0x1, 0x1);
        gbc.writeMem(0x33cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x890c, gbc.sp());
        EXPECT(0x33cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0321
        gbc.setState(0xef9a, 0xe4ba, 0x1d70, 0x14e4, 0xd6cf, 0x981b, 0x0, 0x0);
        gbc.writeMem(0xef9a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe4ba, gbc.sp());
        EXPECT(0xef9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef9a));
        EXPECT(0xc3, gbc.readMem(0xef9b));
        // CB C3 0322
        gbc.setState(0x2e95, 0xd4fc, 0x8ea0, 0x587e, 0xe585, 0x9001, 0x1, 0x0);
        gbc.writeMem(0x2e95, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd4fc, gbc.sp());
        EXPECT(0x2e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0323
        gbc.setState(0x4443, 0xbf16, 0x4c00, 0x8786, 0xbc13, 0xa8d8, 0x1, 0x0);
        gbc.writeMem(0x4443, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbf16, gbc.sp());
        EXPECT(0x4445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0324
        gbc.setState(0xbd1c, 0xb28c, 0xb5b0, 0x3afa, 0x8c69, 0x3b80, 0x0, 0x1);
        gbc.writeMem(0xbd1c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb28c, gbc.sp());
        EXPECT(0xbd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd1c));
        EXPECT(0xc3, gbc.readMem(0xbd1d));
        // CB C3 0325
        gbc.setState(0x733e, 0xdfe1, 0x16d0, 0x1f27, 0xa1f0, 0x666b, 0x0, 0x0);
        gbc.writeMem(0x733e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdfe1, gbc.sp());
        EXPECT(0x7340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0326
        gbc.setState(0xa874, 0x7ea4, 0x8a60, 0xb7a7, 0xec03, 0xb207, 0x1, 0x0);
        gbc.writeMem(0xa874, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7ea4, gbc.sp());
        EXPECT(0xa876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa874));
        EXPECT(0xc3, gbc.readMem(0xa875));
        // CB C3 0327
        gbc.setState(0x75fc, 0x37a9, 0xfd40, 0x649c, 0xef3e, 0xc01e, 0x0, 0x0);
        gbc.writeMem(0x75fc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x37a9, gbc.sp());
        EXPECT(0x75fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0328
        gbc.setState(0x99de, 0x4aac, 0x64c0, 0x6bbe, 0xed14, 0xd9d, 0x0, 0x0);
        gbc.writeMem(0x99de, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4aac, gbc.sp());
        EXPECT(0x99e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99de));
        EXPECT(0xc3, gbc.readMem(0x99df));
        // CB C3 0329
        gbc.setState(0x230e, 0x75dd, 0xd5e0, 0xa59c, 0xe39d, 0x4563, 0x1, 0x1);
        gbc.writeMem(0x230e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x75dd, gbc.sp());
        EXPECT(0x2310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 032A
        gbc.setState(0xa69, 0xb67, 0x29d0, 0x8c54, 0x47b, 0xde10, 0x1, 0x1);
        gbc.writeMem(0xa69, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb67, gbc.sp());
        EXPECT(0xa6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 032B
        gbc.setState(0xbca, 0x8001, 0x630, 0x5f92, 0x8495, 0xece, 0x1, 0x1);
        gbc.writeMem(0xbca, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8001, gbc.sp());
        EXPECT(0xbcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 032D
        gbc.setState(0x655, 0x49a7, 0xddb0, 0x8a1e, 0xd997, 0x925f, 0x0, 0x1);
        gbc.writeMem(0x655, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x49a7, gbc.sp());
        EXPECT(0x657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 032E
        gbc.setState(0x65d1, 0x75b, 0xfeb0, 0xa447, 0x8aef, 0xe5be, 0x1, 0x1);
        gbc.writeMem(0x65d1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x75b, gbc.sp());
        EXPECT(0x65d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 032F
        gbc.setState(0x59d1, 0xab35, 0x1dc0, 0x87dd, 0x3dae, 0x3102, 0x1, 0x1);
        gbc.writeMem(0x59d1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xab35, gbc.sp());
        EXPECT(0x59d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0330
        gbc.setState(0xce98, 0xfb96, 0xd830, 0x1334, 0xa2c8, 0xab65, 0x1, 0x0);
        gbc.writeMem(0xce98, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfb96, gbc.sp());
        EXPECT(0xce9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce98));
        EXPECT(0xc3, gbc.readMem(0xce99));
        // CB C3 0331
        gbc.setState(0x536e, 0x2fd9, 0xb840, 0xa56a, 0xed87, 0x1bb6, 0x0, 0x0);
        gbc.writeMem(0x536e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2fd9, gbc.sp());
        EXPECT(0x5370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0332
        gbc.setState(0x7f87, 0x4e72, 0x3150, 0x996, 0x8ab, 0xd5f0, 0x0, 0x1);
        gbc.writeMem(0x7f87, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4e72, gbc.sp());
        EXPECT(0x7f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0333
        gbc.setState(0x17fc, 0xba7d, 0x7bc0, 0x66c6, 0x6c9e, 0xb8e9, 0x1, 0x1);
        gbc.writeMem(0x17fc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xba7d, gbc.sp());
        EXPECT(0x17fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0334
        gbc.setState(0x2791, 0x8328, 0xf8e0, 0x2eec, 0xd12c, 0xe752, 0x0, 0x0);
        gbc.writeMem(0x2791, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8328, gbc.sp());
        EXPECT(0x2793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0335
        gbc.setState(0xbbfc, 0xc11b, 0x2ad0, 0xe8b6, 0xb0eb, 0x2e75, 0x0, 0x1);
        gbc.writeMem(0xbbfc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc11b, gbc.sp());
        EXPECT(0xbbfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfc));
        EXPECT(0xc3, gbc.readMem(0xbbfd));
        // CB C3 0336
        gbc.setState(0x87fe, 0xe098, 0xe1d0, 0x4f4c, 0x9ab7, 0xdb57, 0x1, 0x1);
        gbc.writeMem(0x87fe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe098, gbc.sp());
        EXPECT(0x8800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fe));
        EXPECT(0xc3, gbc.readMem(0x87ff));
        // CB C3 0337
        gbc.setState(0x4a7b, 0x5886, 0x3f90, 0x10a6, 0xbab7, 0x987a, 0x1, 0x0);
        gbc.writeMem(0x4a7b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5886, gbc.sp());
        EXPECT(0x4a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0338
        gbc.setState(0x660b, 0x736f, 0xa540, 0xfb42, 0xe244, 0xd772, 0x1, 0x0);
        gbc.writeMem(0x660b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x736f, gbc.sp());
        EXPECT(0x660d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0339
        gbc.setState(0x92d0, 0x62e6, 0xd6c0, 0x5ba8, 0x6ca1, 0x4e30, 0x1, 0x0);
        gbc.writeMem(0x92d0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x62e6, gbc.sp());
        EXPECT(0x92d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d0));
        EXPECT(0xc3, gbc.readMem(0x92d1));
        // CB C3 033A
        gbc.setState(0x5148, 0x48cb, 0x6580, 0xb58e, 0x8d47, 0xc7c4, 0x1, 0x1);
        gbc.writeMem(0x5148, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x48cb, gbc.sp());
        EXPECT(0x514a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 033B
        gbc.setState(0x66e, 0x8bc3, 0x37c0, 0xc35f, 0x5bae, 0xd370, 0x0, 0x1);
        gbc.writeMem(0x66e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8bc3, gbc.sp());
        EXPECT(0x670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 033C
        gbc.setState(0x2060, 0xbad9, 0x56c0, 0xaae6, 0x2456, 0xfb27, 0x1, 0x0);
        gbc.writeMem(0x2060, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbad9, gbc.sp());
        EXPECT(0x2062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 033D
        gbc.setState(0x826a, 0xad7, 0xbbe0, 0x97cf, 0x7b4b, 0xa4c, 0x1, 0x1);
        gbc.writeMem(0x826a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xad7, gbc.sp());
        EXPECT(0x826c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826a));
        EXPECT(0xc3, gbc.readMem(0x826b));
        // CB C3 033E
        gbc.setState(0x74a0, 0x90cb, 0x3e60, 0xfcc2, 0x92b0, 0x6cb1, 0x1, 0x1);
        gbc.writeMem(0x74a0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x90cb, gbc.sp());
        EXPECT(0x74a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 033F
        gbc.setState(0x68f5, 0x7679, 0xf7d0, 0xdd3e, 0xa387, 0x9a37, 0x1, 0x0);
        gbc.writeMem(0x68f5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7679, gbc.sp());
        EXPECT(0x68f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0340
        gbc.setState(0xce3, 0x7d63, 0xfe60, 0x9a75, 0xea17, 0xc7e4, 0x1, 0x1);
        gbc.writeMem(0xce3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7d63, gbc.sp());
        EXPECT(0xce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0341
        gbc.setState(0x97f0, 0x5c8c, 0x8e20, 0x4108, 0xc95e, 0xb4b2, 0x0, 0x0);
        gbc.writeMem(0x97f0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5c8c, gbc.sp());
        EXPECT(0x97f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f0));
        EXPECT(0xc3, gbc.readMem(0x97f1));
        // CB C3 0343
        gbc.setState(0xe065, 0x54e4, 0x3070, 0xb41b, 0xf6c8, 0xe274, 0x0, 0x1);
        gbc.writeMem(0xe065, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x54e4, gbc.sp());
        EXPECT(0xe067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe065));
        EXPECT(0xc3, gbc.readMem(0xe066));
        // CB C3 0344
        gbc.setState(0xb8d6, 0xe638, 0x58d0, 0x9b4f, 0xade8, 0x4950, 0x0, 0x1);
        gbc.writeMem(0xb8d6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe638, gbc.sp());
        EXPECT(0xb8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d6));
        EXPECT(0xc3, gbc.readMem(0xb8d7));
        // CB C3 0345
        gbc.setState(0xb570, 0xba34, 0x4b60, 0xe3fe, 0x29d9, 0x8615, 0x0, 0x1);
        gbc.writeMem(0xb570, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xba34, gbc.sp());
        EXPECT(0xb572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb570));
        EXPECT(0xc3, gbc.readMem(0xb571));
        // CB C3 0346
        gbc.setState(0xd224, 0x5249, 0xe180, 0xd43, 0x355f, 0x2ae8, 0x0, 0x0);
        gbc.writeMem(0xd224, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5249, gbc.sp());
        EXPECT(0xd226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd224));
        EXPECT(0xc3, gbc.readMem(0xd225));
        // CB C3 0347
        gbc.setState(0xc9bd, 0xbf25, 0x55d0, 0x6d7b, 0x73d2, 0x4925, 0x1, 0x1);
        gbc.writeMem(0xc9bd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbf25, gbc.sp());
        EXPECT(0xc9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9bd));
        EXPECT(0xc3, gbc.readMem(0xc9be));
        // CB C3 0348
        gbc.setState(0x5a33, 0xe1ab, 0x57b0, 0x595c, 0x6575, 0xcdea, 0x1, 0x1);
        gbc.writeMem(0x5a33, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe1ab, gbc.sp());
        EXPECT(0x5a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0349
        gbc.setState(0x80e5, 0xdf9e, 0xd730, 0x4fb2, 0x3224, 0x2f72, 0x1, 0x0);
        gbc.writeMem(0x80e5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdf9e, gbc.sp());
        EXPECT(0x80e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e5));
        EXPECT(0xc3, gbc.readMem(0x80e6));
        // CB C3 034A
        gbc.setState(0x92be, 0xf4e3, 0x5b50, 0xc330, 0xfad5, 0x6451, 0x0, 0x1);
        gbc.writeMem(0x92be, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf4e3, gbc.sp());
        EXPECT(0x92c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92be));
        EXPECT(0xc3, gbc.readMem(0x92bf));
        // CB C3 034B
        gbc.setState(0xb0d, 0x10f4, 0x8bc0, 0xf26a, 0x3838, 0x686f, 0x0, 0x0);
        gbc.writeMem(0xb0d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x10f4, gbc.sp());
        EXPECT(0xb0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 034C
        gbc.setState(0xae39, 0x510f, 0x5260, 0xe36, 0x7e2d, 0x5edd, 0x0, 0x1);
        gbc.writeMem(0xae39, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x510f, gbc.sp());
        EXPECT(0xae3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae39));
        EXPECT(0xc3, gbc.readMem(0xae3a));
        // CB C3 034D
        gbc.setState(0xe62b, 0x48e8, 0x2300, 0xdc85, 0x4321, 0x559b, 0x1, 0x1);
        gbc.writeMem(0xe62b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x48e8, gbc.sp());
        EXPECT(0xe62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62b));
        EXPECT(0xc3, gbc.readMem(0xe62c));
        // CB C3 034E
        gbc.setState(0x31ed, 0x4039, 0xa030, 0x51e6, 0x3dcb, 0x63b5, 0x0, 0x1);
        gbc.writeMem(0x31ed, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4039, gbc.sp());
        EXPECT(0x31ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 034F
        gbc.setState(0x4751, 0xe870, 0x5f40, 0x3848, 0x3f11, 0x1dc0, 0x0, 0x0);
        gbc.writeMem(0x4751, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe870, gbc.sp());
        EXPECT(0x4753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0350
        gbc.setState(0xc60c, 0xc63f, 0x1830, 0xeae4, 0x8353, 0x9d64, 0x0, 0x1);
        gbc.writeMem(0xc60c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc63f, gbc.sp());
        EXPECT(0xc60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc60c));
        EXPECT(0xc3, gbc.readMem(0xc60d));
        // CB C3 0351
        gbc.setState(0xd20a, 0xe178, 0xd9d0, 0xdf1c, 0xc4b3, 0x7240, 0x1, 0x1);
        gbc.writeMem(0xd20a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe178, gbc.sp());
        EXPECT(0xd20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20a));
        EXPECT(0xc3, gbc.readMem(0xd20b));
        // CB C3 0352
        gbc.setState(0xbab, 0x26ce, 0x29a0, 0x7544, 0xb67a, 0xab9b, 0x1, 0x0);
        gbc.writeMem(0xbab, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x26ce, gbc.sp());
        EXPECT(0xbad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0353
        gbc.setState(0xb7ed, 0x9a79, 0xb980, 0x7794, 0x1d05, 0x2696, 0x0, 0x1);
        gbc.writeMem(0xb7ed, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9a79, gbc.sp());
        EXPECT(0xb7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ed));
        EXPECT(0xc3, gbc.readMem(0xb7ee));
        // CB C3 0354
        gbc.setState(0xb084, 0xc5fb, 0xd150, 0x3c21, 0x73e4, 0x6c97, 0x0, 0x1);
        gbc.writeMem(0xb084, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc5fb, gbc.sp());
        EXPECT(0xb086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb084));
        EXPECT(0xc3, gbc.readMem(0xb085));
        // CB C3 0355
        gbc.setState(0x81d3, 0xedca, 0x3b00, 0x25ef, 0xbd93, 0xff66, 0x0, 0x0);
        gbc.writeMem(0x81d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xedca, gbc.sp());
        EXPECT(0x81d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d3));
        EXPECT(0xc3, gbc.readMem(0x81d4));
        // CB C3 0356
        gbc.setState(0xb03, 0xf27a, 0x64b0, 0x56c7, 0x7887, 0x65db, 0x1, 0x1);
        gbc.writeMem(0xb03, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf27a, gbc.sp());
        EXPECT(0xb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0358
        gbc.setState(0xe7cb, 0x2b4a, 0xaf70, 0x3bee, 0x7db3, 0x4939, 0x0, 0x1);
        gbc.writeMem(0xe7cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2b4a, gbc.sp());
        EXPECT(0xe7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7cb));
        EXPECT(0xc3, gbc.readMem(0xe7cc));
        // CB C3 0359
        gbc.setState(0x9dee, 0x21b, 0x11a0, 0x8959, 0x8b05, 0x68a0, 0x1, 0x0);
        gbc.writeMem(0x9dee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x21b, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dee));
        EXPECT(0xc3, gbc.readMem(0x9def));
        // CB C3 035A
        gbc.setState(0x3f26, 0x1ceb, 0xc010, 0xa495, 0x8125, 0x33d7, 0x0, 0x0);
        gbc.writeMem(0x3f26, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1ceb, gbc.sp());
        EXPECT(0x3f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 035B
        gbc.setState(0x5de7, 0x44d3, 0x9f70, 0x7207, 0x1acf, 0xd0d, 0x0, 0x1);
        gbc.writeMem(0x5de7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x44d3, gbc.sp());
        EXPECT(0x5de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 035C
        gbc.setState(0x8eb2, 0x508e, 0x18b0, 0x4ff6, 0x1b66, 0xd446, 0x0, 0x0);
        gbc.writeMem(0x8eb2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x508e, gbc.sp());
        EXPECT(0x8eb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb2));
        EXPECT(0xc3, gbc.readMem(0x8eb3));
        // CB C3 035E
        gbc.setState(0xb037, 0xf66d, 0x2010, 0x5fa3, 0xd9f0, 0xf559, 0x1, 0x0);
        gbc.writeMem(0xb037, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf66d, gbc.sp());
        EXPECT(0xb039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb037));
        EXPECT(0xc3, gbc.readMem(0xb038));
        // CB C3 035F
        gbc.setState(0xcb5a, 0xe915, 0x5df0, 0xd65a, 0x2ab, 0x7189, 0x1, 0x1);
        gbc.writeMem(0xcb5a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe915, gbc.sp());
        EXPECT(0xcb5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb5a));
        EXPECT(0xc3, gbc.readMem(0xcb5b));
        // CB C3 0360
        gbc.setState(0x73ec, 0x4f0b, 0x9ad0, 0xbff4, 0x7fb3, 0x1054, 0x0, 0x1);
        gbc.writeMem(0x73ec, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4f0b, gbc.sp());
        EXPECT(0x73ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0361
        gbc.setState(0x74bd, 0xc696, 0x2420, 0x82bb, 0xfbd4, 0x394c, 0x0, 0x1);
        gbc.writeMem(0x74bd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc696, gbc.sp());
        EXPECT(0x74bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0362
        gbc.setState(0xd880, 0x9934, 0x1bc0, 0x1ecc, 0xd3be, 0xb716, 0x1, 0x0);
        gbc.writeMem(0xd880, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9934, gbc.sp());
        EXPECT(0xd882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd880));
        EXPECT(0xc3, gbc.readMem(0xd881));
        // CB C3 0363
        gbc.setState(0xcdbd, 0x3774, 0xce10, 0xd7a8, 0xd859, 0x3b5d, 0x0, 0x0);
        gbc.writeMem(0xcdbd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3774, gbc.sp());
        EXPECT(0xcdbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdbd));
        EXPECT(0xc3, gbc.readMem(0xcdbe));
        // CB C3 0364
        gbc.setState(0x8991, 0xed88, 0x1750, 0xd0e, 0xb4d0, 0x6ccf, 0x1, 0x1);
        gbc.writeMem(0x8991, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xed88, gbc.sp());
        EXPECT(0x8993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8991));
        EXPECT(0xc3, gbc.readMem(0x8992));
        // CB C3 0365
        gbc.setState(0xd16f, 0x709a, 0x9300, 0xd119, 0xe112, 0x6d55, 0x1, 0x1);
        gbc.writeMem(0xd16f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x709a, gbc.sp());
        EXPECT(0xd171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16f));
        EXPECT(0xc3, gbc.readMem(0xd170));
        // CB C3 0366
        gbc.setState(0xde9a, 0x4177, 0xdec0, 0x778e, 0x3eae, 0x17ce, 0x0, 0x1);
        gbc.writeMem(0xde9a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4177, gbc.sp());
        EXPECT(0xde9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9a));
        EXPECT(0xc3, gbc.readMem(0xde9b));
        // CB C3 0367
        gbc.setState(0x95eb, 0x33b4, 0x4830, 0x8315, 0xa620, 0xe2ea, 0x1, 0x0);
        gbc.writeMem(0x95eb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x33b4, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95eb));
        EXPECT(0xc3, gbc.readMem(0x95ec));
        // CB C3 0368
        gbc.setState(0xc316, 0x7d5d, 0x71b0, 0xe0a7, 0x82b2, 0x1ec8, 0x1, 0x1);
        gbc.writeMem(0xc316, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0xc318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc316));
        EXPECT(0xc3, gbc.readMem(0xc317));
        // CB C3 036A
        gbc.setState(0x1485, 0x7012, 0x5c50, 0xb4b0, 0x37f7, 0xd665, 0x1, 0x1);
        gbc.writeMem(0x1485, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7012, gbc.sp());
        EXPECT(0x1487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 036B
        gbc.setState(0x21f3, 0x3fb4, 0xbd00, 0x4c35, 0xd290, 0x581e, 0x0, 0x1);
        gbc.writeMem(0x21f3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3fb4, gbc.sp());
        EXPECT(0x21f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 036C
        gbc.setState(0x456d, 0x172, 0xb3a0, 0x2d70, 0x995c, 0x496, 0x0, 0x1);
        gbc.writeMem(0x456d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x172, gbc.sp());
        EXPECT(0x456f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 036D
        gbc.setState(0xaf70, 0x4a83, 0x7940, 0x4e29, 0x184a, 0xaaa1, 0x1, 0x0);
        gbc.writeMem(0xaf70, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0xaf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf70));
        EXPECT(0xc3, gbc.readMem(0xaf71));
        // CB C3 036E
        gbc.setState(0x46d4, 0xd7af, 0x4a80, 0xfef3, 0xf8b3, 0xe65b, 0x0, 0x1);
        gbc.writeMem(0x46d4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd7af, gbc.sp());
        EXPECT(0x46d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 036F
        gbc.setState(0x25ed, 0xf91, 0xc2c0, 0x7df9, 0x749e, 0xfc64, 0x0, 0x0);
        gbc.writeMem(0x25ed, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf91, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0370
        gbc.setState(0x944, 0xf57d, 0x9480, 0x5cca, 0xe530, 0xdc85, 0x1, 0x1);
        gbc.writeMem(0x944, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf57d, gbc.sp());
        EXPECT(0x946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0371
        gbc.setState(0x93eb, 0xd29d, 0x6fb0, 0x3bb2, 0x94ed, 0xdeb8, 0x0, 0x0);
        gbc.writeMem(0x93eb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd29d, gbc.sp());
        EXPECT(0x93ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93eb));
        EXPECT(0xc3, gbc.readMem(0x93ec));
        // CB C3 0372
        gbc.setState(0xd379, 0x4b2b, 0xfc80, 0xef7e, 0xbdf2, 0x6bc6, 0x1, 0x0);
        gbc.writeMem(0xd379, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4b2b, gbc.sp());
        EXPECT(0xd37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd379));
        EXPECT(0xc3, gbc.readMem(0xd37a));
        // CB C3 0373
        gbc.setState(0xaaad, 0x7a9c, 0xe5a0, 0x5e25, 0x984c, 0xc31b, 0x1, 0x1);
        gbc.writeMem(0xaaad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7a9c, gbc.sp());
        EXPECT(0xaaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaad));
        EXPECT(0xc3, gbc.readMem(0xaaae));
        // CB C3 0374
        gbc.setState(0x3f76, 0x2da5, 0xb3e0, 0x3a5b, 0x7ceb, 0x2484, 0x1, 0x0);
        gbc.writeMem(0x3f76, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2da5, gbc.sp());
        EXPECT(0x3f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0375
        gbc.setState(0xcdd4, 0xee7c, 0x7100, 0x9fcf, 0x9a87, 0xe8c2, 0x1, 0x0);
        gbc.writeMem(0xcdd4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xee7c, gbc.sp());
        EXPECT(0xcdd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd4));
        EXPECT(0xc3, gbc.readMem(0xcdd5));
        // CB C3 0376
        gbc.setState(0x16f, 0x96c2, 0xd420, 0xe771, 0xe6e9, 0x4a72, 0x1, 0x1);
        gbc.writeMem(0x16f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x96c2, gbc.sp());
        EXPECT(0x171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0377
        gbc.setState(0xb240, 0x13d2, 0x1160, 0x7050, 0x4b69, 0x3d0f, 0x1, 0x0);
        gbc.writeMem(0xb240, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x13d2, gbc.sp());
        EXPECT(0xb242, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb240));
        EXPECT(0xc3, gbc.readMem(0xb241));
        // CB C3 0378
        gbc.setState(0x4afe, 0x8f0b, 0x3700, 0x5beb, 0x8473, 0x1821, 0x0, 0x0);
        gbc.writeMem(0x4afe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8f0b, gbc.sp());
        EXPECT(0x4b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0379
        gbc.setState(0x96d, 0x3ffa, 0x9860, 0xa576, 0xfa29, 0x79df, 0x0, 0x1);
        gbc.writeMem(0x96d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3ffa, gbc.sp());
        EXPECT(0x96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 037A
        gbc.setState(0x38d3, 0x7a46, 0x600, 0xf813, 0xd432, 0xd30a, 0x0, 0x1);
        gbc.writeMem(0x38d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7a46, gbc.sp());
        EXPECT(0x38d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 037B
        gbc.setState(0x90b7, 0x686e, 0x5490, 0x5e94, 0xfdca, 0xb56f, 0x1, 0x1);
        gbc.writeMem(0x90b7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x686e, gbc.sp());
        EXPECT(0x90b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b7));
        EXPECT(0xc3, gbc.readMem(0x90b8));
        // CB C3 037C
        gbc.setState(0x9175, 0xbff8, 0x87a0, 0x6740, 0x32c6, 0xa89d, 0x1, 0x1);
        gbc.writeMem(0x9175, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbff8, gbc.sp());
        EXPECT(0x9177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9175));
        EXPECT(0xc3, gbc.readMem(0x9176));
        // CB C3 037E
        gbc.setState(0x68ba, 0x6981, 0x5ff0, 0x395a, 0xf1b5, 0xc318, 0x1, 0x0);
        gbc.writeMem(0x68ba, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6981, gbc.sp());
        EXPECT(0x68bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 037F
        gbc.setState(0x1ad, 0x33b1, 0xc9b0, 0xf693, 0xf7bb, 0x9c5a, 0x0, 0x1);
        gbc.writeMem(0x1ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x33b1, gbc.sp());
        EXPECT(0x1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0380
        gbc.setState(0x3e77, 0x6681, 0xb980, 0x584, 0xf285, 0x95f, 0x1, 0x1);
        gbc.writeMem(0x3e77, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6681, gbc.sp());
        EXPECT(0x3e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0381
        gbc.setState(0xd597, 0x6d55, 0x7080, 0xf362, 0x55fb, 0x20e6, 0x0, 0x0);
        gbc.writeMem(0xd597, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6d55, gbc.sp());
        EXPECT(0xd599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd597));
        EXPECT(0xc3, gbc.readMem(0xd598));
        // CB C3 0382
        gbc.setState(0x8d69, 0x20e0, 0xa0e0, 0xf5ed, 0x5a71, 0x9b3a, 0x1, 0x1);
        gbc.writeMem(0x8d69, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x20e0, gbc.sp());
        EXPECT(0x8d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d69));
        EXPECT(0xc3, gbc.readMem(0x8d6a));
        // CB C3 0383
        gbc.setState(0x31be, 0x6281, 0x27a0, 0xf042, 0x3d99, 0x9002, 0x1, 0x0);
        gbc.writeMem(0x31be, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6281, gbc.sp());
        EXPECT(0x31c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0384
        gbc.setState(0xbae0, 0xcad2, 0x34f0, 0xe62a, 0x1280, 0x9bbb, 0x0, 0x0);
        gbc.writeMem(0xbae0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcad2, gbc.sp());
        EXPECT(0xbae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae0));
        EXPECT(0xc3, gbc.readMem(0xbae1));
        // CB C3 0385
        gbc.setState(0x9d58, 0xab3, 0x8910, 0xc0cd, 0x725e, 0x5218, 0x1, 0x0);
        gbc.writeMem(0x9d58, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xab3, gbc.sp());
        EXPECT(0x9d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d58));
        EXPECT(0xc3, gbc.readMem(0x9d59));
        // CB C3 0386
        gbc.setState(0xd1d6, 0xb64c, 0x6b70, 0xfe5f, 0x5b4a, 0xb562, 0x0, 0x0);
        gbc.writeMem(0xd1d6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb64c, gbc.sp());
        EXPECT(0xd1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d6));
        EXPECT(0xc3, gbc.readMem(0xd1d7));
        // CB C3 0388
        gbc.setState(0xeb2b, 0xadf7, 0xaf40, 0xb34f, 0x7c74, 0x6c0, 0x1, 0x1);
        gbc.writeMem(0xeb2b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xadf7, gbc.sp());
        EXPECT(0xeb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2b));
        EXPECT(0xc3, gbc.readMem(0xeb2c));
        // CB C3 0389
        gbc.setState(0x1855, 0xc53b, 0x8f90, 0x3215, 0x9b8c, 0xbac, 0x0, 0x1);
        gbc.writeMem(0x1855, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc53b, gbc.sp());
        EXPECT(0x1857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 038A
        gbc.setState(0xb34f, 0x1275, 0x3780, 0x14cf, 0x47ae, 0x6244, 0x0, 0x0);
        gbc.writeMem(0xb34f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1275, gbc.sp());
        EXPECT(0xb351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34f));
        EXPECT(0xc3, gbc.readMem(0xb350));
        // CB C3 038B
        gbc.setState(0x7e41, 0xd0bd, 0xb300, 0x6d70, 0xaead, 0x5e87, 0x1, 0x1);
        gbc.writeMem(0x7e41, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd0bd, gbc.sp());
        EXPECT(0x7e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 038C
        gbc.setState(0xdd3f, 0x744f, 0x1ee0, 0x13fb, 0xf24f, 0x7ff3, 0x0, 0x1);
        gbc.writeMem(0xdd3f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x744f, gbc.sp());
        EXPECT(0xdd41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3f));
        EXPECT(0xc3, gbc.readMem(0xdd40));
        // CB C3 038E
        gbc.setState(0x402f, 0x93ee, 0x71b0, 0x60fb, 0xa76b, 0x1c63, 0x1, 0x0);
        gbc.writeMem(0x402f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x93ee, gbc.sp());
        EXPECT(0x4031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 038F
        gbc.setState(0xc49f, 0xd8d5, 0xd0f0, 0xa891, 0xbcf9, 0x9709, 0x1, 0x1);
        gbc.writeMem(0xc49f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd8d5, gbc.sp());
        EXPECT(0xc4a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49f));
        EXPECT(0xc3, gbc.readMem(0xc4a0));
        // CB C3 0390
        gbc.setState(0xeb5, 0x55be, 0xf460, 0xaa29, 0x5d74, 0x6d3f, 0x0, 0x1);
        gbc.writeMem(0xeb5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x55be, gbc.sp());
        EXPECT(0xeb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0391
        gbc.setState(0x73c6, 0x6359, 0xed70, 0x665, 0x8f23, 0x4e39, 0x0, 0x0);
        gbc.writeMem(0x73c6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6359, gbc.sp());
        EXPECT(0x73c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 0392
        gbc.setState(0xdab6, 0xe350, 0xedd0, 0x554b, 0x1d73, 0xe972, 0x0, 0x1);
        gbc.writeMem(0xdab6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe350, gbc.sp());
        EXPECT(0xdab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab6));
        EXPECT(0xc3, gbc.readMem(0xdab7));
        // CB C3 0393
        gbc.setState(0xdd4b, 0x3873, 0xbd80, 0x531e, 0x5182, 0x2069, 0x0, 0x1);
        gbc.writeMem(0xdd4b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3873, gbc.sp());
        EXPECT(0xdd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd4b));
        EXPECT(0xc3, gbc.readMem(0xdd4c));
        // CB C3 0394
        gbc.setState(0xc6cc, 0xbbc2, 0x6660, 0x5351, 0x32f0, 0x5cdb, 0x1, 0x0);
        gbc.writeMem(0xc6cc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbbc2, gbc.sp());
        EXPECT(0xc6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6cc));
        EXPECT(0xc3, gbc.readMem(0xc6cd));
        // CB C3 0396
        gbc.setState(0x2f0b, 0x7479, 0x38c0, 0x3c9b, 0x8bf4, 0xc945, 0x1, 0x0);
        gbc.writeMem(0x2f0b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7479, gbc.sp());
        EXPECT(0x2f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0397
        gbc.setState(0x117e, 0x8a3c, 0xda0, 0x4dba, 0x238f, 0xb072, 0x0, 0x0);
        gbc.writeMem(0x117e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8a3c, gbc.sp());
        EXPECT(0x1180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0398
        gbc.setState(0xc8e, 0xe460, 0xb0a0, 0xaa8f, 0x4c80, 0xa0c9, 0x1, 0x1);
        gbc.writeMem(0xc8e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe460, gbc.sp());
        EXPECT(0xc90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 0399
        gbc.setState(0x3c1, 0x67ab, 0xe7c0, 0x6a89, 0x6d8b, 0x9acd, 0x1, 0x1);
        gbc.writeMem(0x3c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x67ab, gbc.sp());
        EXPECT(0x3c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 039A
        gbc.setState(0x707, 0xe17, 0xd3b0, 0xfc29, 0x4423, 0xdead, 0x1, 0x1);
        gbc.writeMem(0x707, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe17, gbc.sp());
        EXPECT(0x709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 039B
        gbc.setState(0xbe15, 0xc6a3, 0x64b0, 0x315d, 0xc20f, 0x1fa1, 0x0, 0x1);
        gbc.writeMem(0xbe15, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc6a3, gbc.sp());
        EXPECT(0xbe17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe15));
        EXPECT(0xc3, gbc.readMem(0xbe16));
        // CB C3 039C
        gbc.setState(0x2565, 0x9c58, 0x6580, 0x5af5, 0xb75f, 0x78c2, 0x0, 0x0);
        gbc.writeMem(0x2565, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9c58, gbc.sp());
        EXPECT(0x2567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 039D
        gbc.setState(0x928b, 0xc54b, 0x6ab0, 0xcbbd, 0x2149, 0x5c71, 0x1, 0x0);
        gbc.writeMem(0x928b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc54b, gbc.sp());
        EXPECT(0x928d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928b));
        EXPECT(0xc3, gbc.readMem(0x928c));
        // CB C3 039E
        gbc.setState(0xdd92, 0x2f20, 0x8ad0, 0xec91, 0x435a, 0xc473, 0x1, 0x1);
        gbc.writeMem(0xdd92, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2f20, gbc.sp());
        EXPECT(0xdd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd92));
        EXPECT(0xc3, gbc.readMem(0xdd93));
        // CB C3 039F
        gbc.setState(0x4533, 0xe64e, 0x2d00, 0xf718, 0x7cb9, 0xcbc5, 0x1, 0x1);
        gbc.writeMem(0x4533, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe64e, gbc.sp());
        EXPECT(0x4535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03A0
        gbc.setState(0xe3d6, 0x16e9, 0xf0, 0x5c0b, 0x3c4a, 0xdbc3, 0x1, 0x0);
        gbc.writeMem(0xe3d6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x16e9, gbc.sp());
        EXPECT(0xe3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d6));
        EXPECT(0xc3, gbc.readMem(0xe3d7));
        // CB C3 03A1
        gbc.setState(0xc3f4, 0xb2ec, 0xc910, 0xfd37, 0xf0c, 0xc2c5, 0x0, 0x1);
        gbc.writeMem(0xc3f4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb2ec, gbc.sp());
        EXPECT(0xc3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f4));
        EXPECT(0xc3, gbc.readMem(0xc3f5));
        // CB C3 03A2
        gbc.setState(0x96aa, 0xdac8, 0xb510, 0xe0b0, 0x4837, 0x6177, 0x0, 0x1);
        gbc.writeMem(0x96aa, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdac8, gbc.sp());
        EXPECT(0x96ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96aa));
        EXPECT(0xc3, gbc.readMem(0x96ab));
        // CB C3 03A3
        gbc.setState(0x427c, 0x91b6, 0xcce0, 0xaf21, 0xae19, 0x35d, 0x0, 0x0);
        gbc.writeMem(0x427c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x91b6, gbc.sp());
        EXPECT(0x427e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03A4
        gbc.setState(0x5134, 0xbdf0, 0x77f0, 0xc832, 0xa6f4, 0xfcb1, 0x1, 0x0);
        gbc.writeMem(0x5134, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbdf0, gbc.sp());
        EXPECT(0x5136, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03A5
        gbc.setState(0xe964, 0x6b16, 0x2c70, 0xde24, 0x59a8, 0x3d73, 0x0, 0x1);
        gbc.writeMem(0xe964, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6b16, gbc.sp());
        EXPECT(0xe966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe964));
        EXPECT(0xc3, gbc.readMem(0xe965));
        // CB C3 03A6
        gbc.setState(0xac0d, 0x3d9f, 0x1110, 0x5f67, 0xdf31, 0xf092, 0x0, 0x0);
        gbc.writeMem(0xac0d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3d9f, gbc.sp());
        EXPECT(0xac0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0d));
        EXPECT(0xc3, gbc.readMem(0xac0e));
        // CB C3 03A7
        gbc.setState(0x4935, 0x22d2, 0x3910, 0x1fdb, 0xea2f, 0xd25d, 0x0, 0x1);
        gbc.writeMem(0x4935, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x22d2, gbc.sp());
        EXPECT(0x4937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03A8
        gbc.setState(0x966c, 0xf701, 0xcf00, 0xc27d, 0xa342, 0x7e0d, 0x0, 0x1);
        gbc.writeMem(0x966c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf701, gbc.sp());
        EXPECT(0x966e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966c));
        EXPECT(0xc3, gbc.readMem(0x966d));
        // CB C3 03A9
        gbc.setState(0xba10, 0xeeef, 0x69b0, 0x3cab, 0xa53f, 0x9d7e, 0x1, 0x0);
        gbc.writeMem(0xba10, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xeeef, gbc.sp());
        EXPECT(0xba12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba10));
        EXPECT(0xc3, gbc.readMem(0xba11));
        // CB C3 03AA
        gbc.setState(0xdd83, 0xe14b, 0xa8e0, 0x5839, 0x1bab, 0x6bce, 0x0, 0x0);
        gbc.writeMem(0xdd83, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe14b, gbc.sp());
        EXPECT(0xdd85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd83));
        EXPECT(0xc3, gbc.readMem(0xdd84));
        // CB C3 03AB
        gbc.setState(0x47a, 0x849, 0x54e0, 0x5d1a, 0x37b3, 0xc66, 0x1, 0x0);
        gbc.writeMem(0x47a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x849, gbc.sp());
        EXPECT(0x47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03AC
        gbc.setState(0x59cb, 0x727, 0x2cc0, 0xa2fc, 0xc3b6, 0x7a70, 0x1, 0x0);
        gbc.writeMem(0x59cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x727, gbc.sp());
        EXPECT(0x59cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03AD
        gbc.setState(0x9d31, 0xa609, 0x4680, 0x29b0, 0xbc1b, 0x404b, 0x0, 0x1);
        gbc.writeMem(0x9d31, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa609, gbc.sp());
        EXPECT(0x9d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d31));
        EXPECT(0xc3, gbc.readMem(0x9d32));
        // CB C3 03AE
        gbc.setState(0x3f68, 0x107d, 0x5620, 0x18ee, 0x4cf, 0x8bec, 0x0, 0x0);
        gbc.writeMem(0x3f68, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x107d, gbc.sp());
        EXPECT(0x3f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03AF
        gbc.setState(0x33cb, 0xe8ff, 0xa9e0, 0xace5, 0x3fb6, 0x1ebf, 0x0, 0x0);
        gbc.writeMem(0x33cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe8ff, gbc.sp());
        EXPECT(0x33cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03B0
        gbc.setState(0x5d6b, 0xae99, 0x2800, 0xfde2, 0xb413, 0x27cd, 0x1, 0x0);
        gbc.writeMem(0x5d6b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xae99, gbc.sp());
        EXPECT(0x5d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03B1
        gbc.setState(0xd9f6, 0x193b, 0x3920, 0x93b9, 0x477f, 0x54cb, 0x0, 0x0);
        gbc.writeMem(0xd9f6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x193b, gbc.sp());
        EXPECT(0xd9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f6));
        EXPECT(0xc3, gbc.readMem(0xd9f7));
        // CB C3 03B2
        gbc.setState(0x79fc, 0xca11, 0xa540, 0x88cc, 0xcdd8, 0xfbc5, 0x0, 0x1);
        gbc.writeMem(0x79fc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xca11, gbc.sp());
        EXPECT(0x79fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03B3
        gbc.setState(0x1d2b, 0x72f1, 0x17c0, 0x911a, 0xf4e1, 0x1560, 0x0, 0x1);
        gbc.writeMem(0x1d2b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x72f1, gbc.sp());
        EXPECT(0x1d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03B4
        gbc.setState(0x8af9, 0xba90, 0xca00, 0xf13a, 0x5dc5, 0x47a9, 0x1, 0x0);
        gbc.writeMem(0x8af9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xba90, gbc.sp());
        EXPECT(0x8afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af9));
        EXPECT(0xc3, gbc.readMem(0x8afa));
        // CB C3 03B5
        gbc.setState(0x594a, 0xa4a0, 0x9f10, 0xc792, 0x5f2, 0xbbd8, 0x0, 0x0);
        gbc.writeMem(0x594a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa4a0, gbc.sp());
        EXPECT(0x594c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03B6
        gbc.setState(0xd76a, 0x183f, 0xbab0, 0x9557, 0xf2, 0x8d9d, 0x1, 0x1);
        gbc.writeMem(0xd76a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x183f, gbc.sp());
        EXPECT(0xd76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76a));
        EXPECT(0xc3, gbc.readMem(0xd76b));
        // CB C3 03B7
        gbc.setState(0x7820, 0x16c7, 0xcbb0, 0xa3ff, 0x6ba3, 0x1a82, 0x1, 0x1);
        gbc.writeMem(0x7820, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x16c7, gbc.sp());
        EXPECT(0x7822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03B8
        gbc.setState(0xe0d0, 0x1814, 0x8890, 0xff6f, 0x2015, 0x3e20, 0x1, 0x1);
        gbc.writeMem(0xe0d0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1814, gbc.sp());
        EXPECT(0xe0d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d0));
        EXPECT(0xc3, gbc.readMem(0xe0d1));
        // CB C3 03B9
        gbc.setState(0xb814, 0xc956, 0xed30, 0xf08, 0x281f, 0xe61b, 0x0, 0x1);
        gbc.writeMem(0xb814, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc956, gbc.sp());
        EXPECT(0xb816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb814));
        EXPECT(0xc3, gbc.readMem(0xb815));
        // CB C3 03BA
        gbc.setState(0xb097, 0x89e, 0xa100, 0x9453, 0x8d8f, 0x535b, 0x1, 0x1);
        gbc.writeMem(0xb097, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x89e, gbc.sp());
        EXPECT(0xb099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb097));
        EXPECT(0xc3, gbc.readMem(0xb098));
        // CB C3 03BB
        gbc.setState(0x65b, 0x7f73, 0x7e0, 0xef5c, 0x849f, 0x3822, 0x1, 0x0);
        gbc.writeMem(0x65b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7f73, gbc.sp());
        EXPECT(0x65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03BC
        gbc.setState(0x5e9e, 0xb778, 0xdba0, 0x1c5d, 0x9b08, 0x3181, 0x0, 0x1);
        gbc.writeMem(0x5e9e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb778, gbc.sp());
        EXPECT(0x5ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03BD
        gbc.setState(0x2ba4, 0x72ed, 0x9e50, 0x6f2a, 0x26f3, 0x36c8, 0x0, 0x1);
        gbc.writeMem(0x2ba4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x72ed, gbc.sp());
        EXPECT(0x2ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03BE
        gbc.setState(0x9a8e, 0x9643, 0x4070, 0xfc0a, 0xdf75, 0x3a59, 0x0, 0x1);
        gbc.writeMem(0x9a8e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9643, gbc.sp());
        EXPECT(0x9a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a8e));
        EXPECT(0xc3, gbc.readMem(0x9a8f));
        // CB C3 03BF
        gbc.setState(0xcaf8, 0x1922, 0x6260, 0x5d22, 0x8d2c, 0xb603, 0x0, 0x1);
        gbc.writeMem(0xcaf8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1922, gbc.sp());
        EXPECT(0xcafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf8));
        EXPECT(0xc3, gbc.readMem(0xcaf9));
        // CB C3 03C0
        gbc.setState(0x56ca, 0xf7f, 0xadc0, 0x85b7, 0x3011, 0x36c6, 0x1, 0x1);
        gbc.writeMem(0x56ca, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf7f, gbc.sp());
        EXPECT(0x56cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03C1
        gbc.setState(0xdc2b, 0x3df3, 0x45f0, 0xa1e0, 0x9173, 0x464d, 0x0, 0x1);
        gbc.writeMem(0xdc2b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3df3, gbc.sp());
        EXPECT(0xdc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2b));
        EXPECT(0xc3, gbc.readMem(0xdc2c));
        // CB C3 03C3
        gbc.setState(0x4c41, 0xcf9, 0x6730, 0xab0c, 0x1476, 0x4c41, 0x1, 0x0);
        gbc.writeMem(0x4c41, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcf9, gbc.sp());
        EXPECT(0x4c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03C4
        gbc.setState(0xd047, 0x335c, 0x2320, 0xb2da, 0x25ad, 0x2ed0, 0x1, 0x1);
        gbc.writeMem(0xd047, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x335c, gbc.sp());
        EXPECT(0xd049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd047));
        EXPECT(0xc3, gbc.readMem(0xd048));
        // CB C3 03C5
        gbc.setState(0xc97d, 0xfb9d, 0x1270, 0x31a8, 0xb4d6, 0x18c5, 0x0, 0x1);
        gbc.writeMem(0xc97d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfb9d, gbc.sp());
        EXPECT(0xc97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc97d));
        EXPECT(0xc3, gbc.readMem(0xc97e));
        // CB C3 03C6
        gbc.setState(0xc2e4, 0xabc1, 0x4a50, 0x38f2, 0xafa3, 0x38fa, 0x0, 0x0);
        gbc.writeMem(0xc2e4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xabc1, gbc.sp());
        EXPECT(0xc2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e4));
        EXPECT(0xc3, gbc.readMem(0xc2e5));
        // CB C3 03C7
        gbc.setState(0x53d9, 0x283f, 0x1de0, 0x96b4, 0xcdab, 0x4d7f, 0x1, 0x1);
        gbc.writeMem(0x53d9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x283f, gbc.sp());
        EXPECT(0x53db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03C8
        gbc.setState(0x3cc7, 0xf132, 0xc210, 0x6a26, 0xded8, 0xabcb, 0x1, 0x1);
        gbc.writeMem(0x3cc7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf132, gbc.sp());
        EXPECT(0x3cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03C9
        gbc.setState(0xcdee, 0x3762, 0x8520, 0x53a8, 0x3abc, 0xcd61, 0x1, 0x0);
        gbc.writeMem(0xcdee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3762, gbc.sp());
        EXPECT(0xcdf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdee));
        EXPECT(0xc3, gbc.readMem(0xcdef));
        // CB C3 03CB
        gbc.setState(0xca60, 0xeb4e, 0x55e0, 0x30d9, 0x7957, 0x3ebc, 0x1, 0x0);
        gbc.writeMem(0xca60, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xeb4e, gbc.sp());
        EXPECT(0xca62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca60));
        EXPECT(0xc3, gbc.readMem(0xca61));
        // CB C3 03CC
        gbc.setState(0xc3c9, 0xeda5, 0x9450, 0xf55e, 0xa3b3, 0x774c, 0x0, 0x1);
        gbc.writeMem(0xc3c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xeda5, gbc.sp());
        EXPECT(0xc3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c9));
        EXPECT(0xc3, gbc.readMem(0xc3ca));
        // CB C3 03CD
        gbc.setState(0x3717, 0xfd2a, 0xeaf0, 0x246a, 0x981, 0xa32f, 0x1, 0x1);
        gbc.writeMem(0x3717, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfd2a, gbc.sp());
        EXPECT(0x3719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03CE
        gbc.setState(0x2fc6, 0x5a37, 0x4690, 0x5c75, 0x2f5d, 0xb436, 0x1, 0x0);
        gbc.writeMem(0x2fc6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5a37, gbc.sp());
        EXPECT(0x2fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03CF
        gbc.setState(0x7c95, 0x6a9, 0x2980, 0xf59d, 0x9402, 0x4771, 0x0, 0x0);
        gbc.writeMem(0x7c95, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6a9, gbc.sp());
        EXPECT(0x7c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03D0
        gbc.setState(0xe0f5, 0x5600, 0xea80, 0x873, 0xd34c, 0x9694, 0x0, 0x0);
        gbc.writeMem(0xe0f5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5600, gbc.sp());
        EXPECT(0xe0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f5));
        EXPECT(0xc3, gbc.readMem(0xe0f6));
        // CB C3 03D1
        gbc.setState(0x27d4, 0xb6e6, 0x85e0, 0x2f2b, 0x6b67, 0x72c7, 0x0, 0x0);
        gbc.writeMem(0x27d4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb6e6, gbc.sp());
        EXPECT(0x27d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03D2
        gbc.setState(0x3fa4, 0x16ba, 0x540, 0x3e98, 0xae5d, 0x3fad, 0x1, 0x1);
        gbc.writeMem(0x3fa4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x16ba, gbc.sp());
        EXPECT(0x3fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03D4
        gbc.setState(0x3a0f, 0xd6ac, 0x6e70, 0x648d, 0x3c75, 0x917b, 0x0, 0x1);
        gbc.writeMem(0x3a0f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd6ac, gbc.sp());
        EXPECT(0x3a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03D5
        gbc.setState(0x22ba, 0x129f, 0x5800, 0x4587, 0xb7a0, 0x16f2, 0x1, 0x1);
        gbc.writeMem(0x22ba, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x129f, gbc.sp());
        EXPECT(0x22bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03D7
        gbc.setState(0x40ea, 0xf184, 0x9a90, 0x4d5e, 0xf16f, 0x8d95, 0x0, 0x0);
        gbc.writeMem(0x40ea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf184, gbc.sp());
        EXPECT(0x40ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03D8
        gbc.setState(0x59ec, 0xfd26, 0x5f0, 0x6ae0, 0x533a, 0x42e9, 0x0, 0x0);
        gbc.writeMem(0x59ec, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfd26, gbc.sp());
        EXPECT(0x59ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03D9
        gbc.setState(0xcdab, 0xc093, 0xb900, 0x3861, 0xf496, 0xc2cf, 0x0, 0x0);
        gbc.writeMem(0xcdab, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc093, gbc.sp());
        EXPECT(0xcdad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdab));
        EXPECT(0xc3, gbc.readMem(0xcdac));
        // CB C3 03DA
        gbc.setState(0x19b0, 0xdd90, 0x5740, 0x6443, 0x46a4, 0x7561, 0x0, 0x1);
        gbc.writeMem(0x19b0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdd90, gbc.sp());
        EXPECT(0x19b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03DB
        gbc.setState(0x23ad, 0xbf95, 0xa8b0, 0x2ba, 0x5278, 0xf270, 0x0, 0x1);
        gbc.writeMem(0x23ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbf95, gbc.sp());
        EXPECT(0x23af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03DC
        gbc.setState(0xaab0, 0x827, 0xae50, 0x32d7, 0x60bc, 0x5429, 0x0, 0x1);
        gbc.writeMem(0xaab0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x827, gbc.sp());
        EXPECT(0xaab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab0));
        EXPECT(0xc3, gbc.readMem(0xaab1));
        // CB C3 03DD
        gbc.setState(0x26be, 0xe06e, 0xf0e0, 0x92fe, 0x9f71, 0x513d, 0x1, 0x1);
        gbc.writeMem(0x26be, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe06e, gbc.sp());
        EXPECT(0x26c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03DE
        gbc.setState(0x8bb8, 0x828a, 0x90b0, 0x970c, 0x48f4, 0x7a2d, 0x0, 0x0);
        gbc.writeMem(0x8bb8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x828a, gbc.sp());
        EXPECT(0x8bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb8));
        EXPECT(0xc3, gbc.readMem(0x8bb9));
        // CB C3 03DF
        gbc.setState(0xeae2, 0x8bed, 0x80, 0xfd06, 0x6f30, 0xf0da, 0x1, 0x0);
        gbc.writeMem(0xeae2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8bed, gbc.sp());
        EXPECT(0xeae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae2));
        EXPECT(0xc3, gbc.readMem(0xeae3));
        // CB C3 03E0
        gbc.setState(0x3bfb, 0x9a2e, 0x5fa0, 0x100, 0x40a9, 0xc0af, 0x1, 0x1);
        gbc.writeMem(0x3bfb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9a2e, gbc.sp());
        EXPECT(0x3bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C3 03E1
        gbc.setState(0x1ade, 0x1079, 0x8ff0, 0x7619, 0x103, 0x5db9, 0x0, 0x1);
        gbc.writeMem(0x1ade, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1079, gbc.sp());
        EXPECT(0x1ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03E2
        gbc.setState(0xdd1e, 0x2971, 0x5850, 0x61ea, 0x9c58, 0x29fd, 0x1, 0x1);
        gbc.writeMem(0xdd1e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2971, gbc.sp());
        EXPECT(0xdd20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1e));
        EXPECT(0xc3, gbc.readMem(0xdd1f));
        // CB C3 03E3
        gbc.setState(0x8370, 0x65bb, 0xa240, 0xc6b3, 0x4aee, 0x1024, 0x0, 0x0);
        gbc.writeMem(0x8370, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x65bb, gbc.sp());
        EXPECT(0x8372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8370));
        EXPECT(0xc3, gbc.readMem(0x8371));
        // CB C3 03E4
        gbc.setState(0x672a, 0x2bd, 0x7eb0, 0x5be0, 0x3df, 0x5a96, 0x1, 0x1);
        gbc.writeMem(0x672a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2bd, gbc.sp());
        EXPECT(0x672c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C3 03E5
        gbc.setState(0xc78e, 0xa360, 0xfe60, 0x29a0, 0xac2, 0x9033, 0x1, 0x1);
        gbc.writeMem(0xc78e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa360, gbc.sp());
        EXPECT(0xc790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78e));
        EXPECT(0xc3, gbc.readMem(0xc78f));
        // CB C3 03E6
        gbc.setState(0x2272, 0xbdc1, 0x6670, 0x3b35, 0x561, 0xe799, 0x0, 0x1);
        gbc.writeMem(0x2272, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbdc1, gbc.sp());
        EXPECT(0x2274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
