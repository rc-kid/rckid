    TEST(gbcemu, opcode_cb_c3) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C3 0000
        gbc.setState(0x9979, 0x69a6, 0xb00, 0x86ad, 0x2fb5, 0x6cf1, 0x1, 0x0);
        gbc.writeMem(0x9979, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x69a6);
        EXPECT(gbc.pc(), 0x997b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9979), 0xcb);
        EXPECT(gbc.readMem(0x997a), 0xc3);
        // CB C3 0001
        gbc.setState(0x6296, 0x61f9, 0xa4a0, 0x9531, 0xf1, 0x8cfa, 0x0, 0x0);
        gbc.writeMem(0x6296, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x61f9);
        EXPECT(gbc.pc(), 0x6298);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0002
        gbc.setState(0xd47e, 0xdcd1, 0x3120, 0x6455, 0x9ead, 0x61fa, 0x0, 0x1);
        gbc.writeMem(0xd47e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xdcd1);
        EXPECT(gbc.pc(), 0xd480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd47e), 0xcb);
        EXPECT(gbc.readMem(0xd47f), 0xc3);
        // CB C3 0003
        gbc.setState(0x9ed7, 0xac5c, 0x5650, 0x60f0, 0xb98d, 0x8b2c, 0x1, 0x1);
        gbc.writeMem(0x9ed7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xac5c);
        EXPECT(gbc.pc(), 0x9ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ed7), 0xcb);
        EXPECT(gbc.readMem(0x9ed8), 0xc3);
        // CB C3 0004
        gbc.setState(0x749a, 0x4bee, 0x2650, 0xbd8d, 0xb0de, 0x999d, 0x0, 0x1);
        gbc.writeMem(0x749a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4bee);
        EXPECT(gbc.pc(), 0x749c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0005
        gbc.setState(0x3b37, 0x806, 0xe670, 0xca16, 0x7f56, 0x98e4, 0x0, 0x1);
        gbc.writeMem(0x3b37, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x806);
        EXPECT(gbc.pc(), 0x3b39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0006
        gbc.setState(0x869d, 0x7c51, 0x2a40, 0xa607, 0x824b, 0xc629, 0x0, 0x0);
        gbc.writeMem(0x869d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7c51);
        EXPECT(gbc.pc(), 0x869f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869d), 0xcb);
        EXPECT(gbc.readMem(0x869e), 0xc3);
        // CB C3 0007
        gbc.setState(0x4403, 0x573f, 0x1030, 0x848e, 0xbe3e, 0xe77b, 0x0, 0x0);
        gbc.writeMem(0x4403, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x573f);
        EXPECT(gbc.pc(), 0x4405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0008
        gbc.setState(0xe417, 0x1cbb, 0x1210, 0xa715, 0xc7b0, 0x7130, 0x0, 0x1);
        gbc.writeMem(0xe417, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1cbb);
        EXPECT(gbc.pc(), 0xe419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe417), 0xcb);
        EXPECT(gbc.readMem(0xe418), 0xc3);
        // CB C3 0009
        gbc.setState(0xbd38, 0xb6aa, 0x910, 0x711e, 0xefd8, 0xdd47, 0x1, 0x1);
        gbc.writeMem(0xbd38, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb6aa);
        EXPECT(gbc.pc(), 0xbd3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd38), 0xcb);
        EXPECT(gbc.readMem(0xbd39), 0xc3);
        // CB C3 000A
        gbc.setState(0x1095, 0xeee4, 0x7980, 0x141e, 0xe4bc, 0x54f8, 0x1, 0x0);
        gbc.writeMem(0x1095, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xeee4);
        EXPECT(gbc.pc(), 0x1097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 000B
        gbc.setState(0x3f3c, 0x49a, 0xed80, 0xb761, 0xb1b2, 0xef5f, 0x1, 0x1);
        gbc.writeMem(0x3f3c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x49a);
        EXPECT(gbc.pc(), 0x3f3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 000C
        gbc.setState(0x2e71, 0xf611, 0x8f40, 0xe530, 0x966d, 0x1a28, 0x0, 0x0);
        gbc.writeMem(0x2e71, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf611);
        EXPECT(gbc.pc(), 0x2e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 000D
        gbc.setState(0x973a, 0xfa8e, 0x2f60, 0x55cf, 0x2e89, 0x428e, 0x0, 0x0);
        gbc.writeMem(0x973a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfa8e);
        EXPECT(gbc.pc(), 0x973c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973a), 0xcb);
        EXPECT(gbc.readMem(0x973b), 0xc3);
        // CB C3 000E
        gbc.setState(0xcbb, 0x1ec1, 0x68d0, 0x8b98, 0xcb4, 0x9f57, 0x0, 0x1);
        gbc.writeMem(0xcbb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1ec1);
        EXPECT(gbc.pc(), 0xcbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 000F
        gbc.setState(0xe2b1, 0x546a, 0x5d00, 0x4a75, 0xbfab, 0x3d74, 0x0, 0x0);
        gbc.writeMem(0xe2b1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x546a);
        EXPECT(gbc.pc(), 0xe2b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b1), 0xcb);
        EXPECT(gbc.readMem(0xe2b2), 0xc3);
        // CB C3 0010
        gbc.setState(0x737c, 0xf1ec, 0xf340, 0xe998, 0x24f3, 0xb50f, 0x0, 0x0);
        gbc.writeMem(0x737c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf1ec);
        EXPECT(gbc.pc(), 0x737e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0011
        gbc.setState(0x153b, 0x2d6d, 0x5200, 0xfa0, 0x44d, 0xf872, 0x1, 0x1);
        gbc.writeMem(0x153b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2d6d);
        EXPECT(gbc.pc(), 0x153d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0012
        gbc.setState(0x2dae, 0x715d, 0xe920, 0x6a8e, 0x2679, 0x9eff, 0x0, 0x0);
        gbc.writeMem(0x2dae, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x715d);
        EXPECT(gbc.pc(), 0x2db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0013
        gbc.setState(0xed24, 0x83ee, 0x720, 0x2eda, 0x863d, 0x4f98, 0x1, 0x1);
        gbc.writeMem(0xed24, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x83ee);
        EXPECT(gbc.pc(), 0xed26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed24), 0xcb);
        EXPECT(gbc.readMem(0xed25), 0xc3);
        // CB C3 0014
        gbc.setState(0x55e, 0x4714, 0x1380, 0x273a, 0xdacc, 0x44f4, 0x0, 0x1);
        gbc.writeMem(0x55e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4714);
        EXPECT(gbc.pc(), 0x560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0015
        gbc.setState(0x3f61, 0x3c97, 0xdc70, 0x9d6f, 0x2b30, 0xb95e, 0x1, 0x1);
        gbc.writeMem(0x3f61, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3c97);
        EXPECT(gbc.pc(), 0x3f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0016
        gbc.setState(0x4937, 0x6d76, 0xac80, 0x1099, 0xed68, 0xa655, 0x1, 0x1);
        gbc.writeMem(0x4937, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6d76);
        EXPECT(gbc.pc(), 0x4939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0017
        gbc.setState(0xcc91, 0x4650, 0x6560, 0xce93, 0x9709, 0x2910, 0x0, 0x0);
        gbc.writeMem(0xcc91, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4650);
        EXPECT(gbc.pc(), 0xcc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc91), 0xcb);
        EXPECT(gbc.readMem(0xcc92), 0xc3);
        // CB C3 0018
        gbc.setState(0x8fa0, 0x440b, 0xdda0, 0x5461, 0x676e, 0xd968, 0x1, 0x0);
        gbc.writeMem(0x8fa0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x440b);
        EXPECT(gbc.pc(), 0x8fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fa0), 0xcb);
        EXPECT(gbc.readMem(0x8fa1), 0xc3);
        // CB C3 0019
        gbc.setState(0x9af5, 0x96ea, 0x3f40, 0x6dcc, 0x4d30, 0x722c, 0x1, 0x0);
        gbc.writeMem(0x9af5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x96ea);
        EXPECT(gbc.pc(), 0x9af7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af5), 0xcb);
        EXPECT(gbc.readMem(0x9af6), 0xc3);
        // CB C3 001A
        gbc.setState(0x1273, 0x6d5c, 0x9e60, 0x1986, 0xc2da, 0x2c70, 0x0, 0x1);
        gbc.writeMem(0x1273, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6d5c);
        EXPECT(gbc.pc(), 0x1275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 001B
        gbc.setState(0x6f8c, 0x364b, 0x97f0, 0xd992, 0x55c5, 0xf581, 0x1, 0x0);
        gbc.writeMem(0x6f8c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x364b);
        EXPECT(gbc.pc(), 0x6f8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 001C
        gbc.setState(0x65af, 0x14d1, 0xc030, 0xfa47, 0x20e0, 0x1bf8, 0x1, 0x1);
        gbc.writeMem(0x65af, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x14d1);
        EXPECT(gbc.pc(), 0x65b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 001D
        gbc.setState(0x7c56, 0x3698, 0x94d0, 0x8c7, 0xbc5, 0xaee9, 0x1, 0x1);
        gbc.writeMem(0x7c56, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3698);
        EXPECT(gbc.pc(), 0x7c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 001E
        gbc.setState(0xd7c, 0x7e4, 0x7920, 0x849a, 0x74bf, 0xddc4, 0x0, 0x0);
        gbc.writeMem(0xd7c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7e4);
        EXPECT(gbc.pc(), 0xd7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 001F
        gbc.setState(0x5fc0, 0xa999, 0xd730, 0xeb5e, 0xb7b0, 0x8e75, 0x0, 0x1);
        gbc.writeMem(0x5fc0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa999);
        EXPECT(gbc.pc(), 0x5fc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0020
        gbc.setState(0x50c, 0x627c, 0xf4e0, 0x4a39, 0x29c0, 0x3d, 0x1, 0x0);
        gbc.writeMem(0x50c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x627c);
        EXPECT(gbc.pc(), 0x50e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0021
        gbc.setState(0x6225, 0xdbfc, 0x7000, 0xf945, 0x86b2, 0x3030, 0x0, 0x1);
        gbc.writeMem(0x6225, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdbfc);
        EXPECT(gbc.pc(), 0x6227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0022
        gbc.setState(0x90e1, 0x2834, 0x70e0, 0xe3e7, 0x36bc, 0x52c8, 0x1, 0x0);
        gbc.writeMem(0x90e1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2834);
        EXPECT(gbc.pc(), 0x90e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e1), 0xcb);
        EXPECT(gbc.readMem(0x90e2), 0xc3);
        // CB C3 0023
        gbc.setState(0x659b, 0xeb75, 0x5240, 0xa513, 0x30a4, 0xf641, 0x1, 0x1);
        gbc.writeMem(0x659b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xeb75);
        EXPECT(gbc.pc(), 0x659d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0024
        gbc.setState(0x85d6, 0x3bec, 0x1570, 0x732f, 0xedff, 0xece1, 0x1, 0x0);
        gbc.writeMem(0x85d6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3bec);
        EXPECT(gbc.pc(), 0x85d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d6), 0xcb);
        EXPECT(gbc.readMem(0x85d7), 0xc3);
        // CB C3 0025
        gbc.setState(0xaf25, 0x8462, 0xda70, 0x97c8, 0x4629, 0x6ac5, 0x1, 0x0);
        gbc.writeMem(0xaf25, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8462);
        EXPECT(gbc.pc(), 0xaf27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf25), 0xcb);
        EXPECT(gbc.readMem(0xaf26), 0xc3);
        // CB C3 0026
        gbc.setState(0x40d3, 0x19fc, 0x6f10, 0x4f5, 0x1fee, 0xbf24, 0x1, 0x1);
        gbc.writeMem(0x40d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x19fc);
        EXPECT(gbc.pc(), 0x40d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0027
        gbc.setState(0x68c1, 0x350f, 0x4cf0, 0x2ead, 0x84f4, 0xb3c5, 0x1, 0x1);
        gbc.writeMem(0x68c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x350f);
        EXPECT(gbc.pc(), 0x68c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0028
        gbc.setState(0xbacb, 0x4a9d, 0x4fe0, 0x70e, 0x7d3, 0x1029, 0x0, 0x1);
        gbc.writeMem(0xbacb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4a9d);
        EXPECT(gbc.pc(), 0xbacd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbacb), 0xcb);
        EXPECT(gbc.readMem(0xbacc), 0xc3);
        // CB C3 0029
        gbc.setState(0xddde, 0x1008, 0xd5c0, 0xc37f, 0x3da5, 0xf66e, 0x1, 0x1);
        gbc.writeMem(0xddde, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1008);
        EXPECT(gbc.pc(), 0xdde0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddde), 0xcb);
        EXPECT(gbc.readMem(0xdddf), 0xc3);
        // CB C3 002A
        gbc.setState(0xa4fd, 0xd4b0, 0xa90, 0x6f48, 0x7d1d, 0xfd3d, 0x1, 0x0);
        gbc.writeMem(0xa4fd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd4b0);
        EXPECT(gbc.pc(), 0xa4ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4fd), 0xcb);
        EXPECT(gbc.readMem(0xa4fe), 0xc3);
        // CB C3 002B
        gbc.setState(0x76b2, 0x5ab3, 0xa820, 0x23e5, 0xeaf8, 0x4350, 0x1, 0x0);
        gbc.writeMem(0x76b2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5ab3);
        EXPECT(gbc.pc(), 0x76b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 002C
        gbc.setState(0xdc43, 0xe6a1, 0x3a60, 0xb86, 0xca00, 0xea93, 0x1, 0x0);
        gbc.writeMem(0xdc43, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe6a1);
        EXPECT(gbc.pc(), 0xdc45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc43), 0xcb);
        EXPECT(gbc.readMem(0xdc44), 0xc3);
        // CB C3 002D
        gbc.setState(0x3c9c, 0xf5e1, 0xd180, 0x7b11, 0x1343, 0xa4cf, 0x0, 0x1);
        gbc.writeMem(0x3c9c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf5e1);
        EXPECT(gbc.pc(), 0x3c9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 002E
        gbc.setState(0x603c, 0xbdb7, 0x540, 0x953e, 0xde1f, 0x4ce, 0x1, 0x0);
        gbc.writeMem(0x603c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbdb7);
        EXPECT(gbc.pc(), 0x603e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 002F
        gbc.setState(0xd0f3, 0x2187, 0x44f0, 0x7794, 0x53ed, 0xc10c, 0x1, 0x0);
        gbc.writeMem(0xd0f3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2187);
        EXPECT(gbc.pc(), 0xd0f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f3), 0xcb);
        EXPECT(gbc.readMem(0xd0f4), 0xc3);
        // CB C3 0030
        gbc.setState(0xa33c, 0x87d1, 0x5c60, 0x89bc, 0xca85, 0xe7b3, 0x0, 0x0);
        gbc.writeMem(0xa33c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x87d1);
        EXPECT(gbc.pc(), 0xa33e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa33c), 0xcb);
        EXPECT(gbc.readMem(0xa33d), 0xc3);
        // CB C3 0031
        gbc.setState(0x624, 0x6c89, 0xa870, 0xd5ef, 0x37ee, 0x69ca, 0x0, 0x1);
        gbc.writeMem(0x624, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6c89);
        EXPECT(gbc.pc(), 0x626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0032
        gbc.setState(0x1d54, 0x84a7, 0x8b90, 0x8b86, 0xdc33, 0xe19f, 0x0, 0x1);
        gbc.writeMem(0x1d54, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x84a7);
        EXPECT(gbc.pc(), 0x1d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0033
        gbc.setState(0x6f8e, 0x3598, 0x5610, 0xd250, 0xb6cd, 0xdb75, 0x0, 0x1);
        gbc.writeMem(0x6f8e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3598);
        EXPECT(gbc.pc(), 0x6f90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0034
        gbc.setState(0xadf2, 0x3a25, 0x1a60, 0xa973, 0x3037, 0x2d3b, 0x1, 0x1);
        gbc.writeMem(0xadf2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3a25);
        EXPECT(gbc.pc(), 0xadf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf2), 0xcb);
        EXPECT(gbc.readMem(0xadf3), 0xc3);
        // CB C3 0035
        gbc.setState(0x31ff, 0x56e, 0xccc0, 0xb3ae, 0xdcde, 0x6760, 0x0, 0x0);
        gbc.writeMem(0x31ff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x56e);
        EXPECT(gbc.pc(), 0x3201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0036
        gbc.setState(0x8ed6, 0x2ad3, 0xb000, 0x316, 0x87f1, 0x3e87, 0x0, 0x1);
        gbc.writeMem(0x8ed6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2ad3);
        EXPECT(gbc.pc(), 0x8ed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed6), 0xcb);
        EXPECT(gbc.readMem(0x8ed7), 0xc3);
        // CB C3 0037
        gbc.setState(0x298d, 0x329c, 0xa020, 0x8235, 0xf2c1, 0x545a, 0x0, 0x1);
        gbc.writeMem(0x298d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x329c);
        EXPECT(gbc.pc(), 0x298f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0038
        gbc.setState(0x5a32, 0xbb28, 0x79e0, 0x1d96, 0xdd6c, 0xdaf8, 0x0, 0x0);
        gbc.writeMem(0x5a32, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbb28);
        EXPECT(gbc.pc(), 0x5a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0039
        gbc.setState(0x8b86, 0xec33, 0xc8b0, 0xf030, 0x6108, 0x2c91, 0x0, 0x1);
        gbc.writeMem(0x8b86, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xec33);
        EXPECT(gbc.pc(), 0x8b88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b86), 0xcb);
        EXPECT(gbc.readMem(0x8b87), 0xc3);
        // CB C3 003A
        gbc.setState(0x1b3c, 0x6df7, 0x7130, 0xec0d, 0xe5de, 0xb95c, 0x1, 0x1);
        gbc.writeMem(0x1b3c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6df7);
        EXPECT(gbc.pc(), 0x1b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 003B
        gbc.setState(0x5026, 0x622d, 0xefe0, 0xf5c2, 0xe38e, 0xe3b2, 0x1, 0x0);
        gbc.writeMem(0x5026, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x622d);
        EXPECT(gbc.pc(), 0x5028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 003C
        gbc.setState(0x9df7, 0xa45f, 0x4590, 0xcb5d, 0x7582, 0x3533, 0x0, 0x1);
        gbc.writeMem(0x9df7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa45f);
        EXPECT(gbc.pc(), 0x9df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df7), 0xcb);
        EXPECT(gbc.readMem(0x9df8), 0xc3);
        // CB C3 003D
        gbc.setState(0x4609, 0xc5c6, 0xa8c0, 0x1976, 0x31d7, 0xc48c, 0x0, 0x1);
        gbc.writeMem(0x4609, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc5c6);
        EXPECT(gbc.pc(), 0x460b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 003E
        gbc.setState(0x41f9, 0x81a4, 0xc380, 0x17a5, 0x51f7, 0xdacd, 0x0, 0x0);
        gbc.writeMem(0x41f9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x81a4);
        EXPECT(gbc.pc(), 0x41fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 003F
        gbc.setState(0x6e6a, 0xdf9c, 0xa3f0, 0x3341, 0x3add, 0x2fc, 0x0, 0x0);
        gbc.writeMem(0x6e6a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xdf9c);
        EXPECT(gbc.pc(), 0x6e6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0042
        gbc.setState(0x8131, 0x2b33, 0x3990, 0xd8eb, 0xe857, 0x441d, 0x0, 0x1);
        gbc.writeMem(0x8131, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2b33);
        EXPECT(gbc.pc(), 0x8133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8131), 0xcb);
        EXPECT(gbc.readMem(0x8132), 0xc3);
        // CB C3 0043
        gbc.setState(0xa87e, 0xa08b, 0xc280, 0x273b, 0x9f12, 0x5ac8, 0x0, 0x1);
        gbc.writeMem(0xa87e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa08b);
        EXPECT(gbc.pc(), 0xa880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa87e), 0xcb);
        EXPECT(gbc.readMem(0xa87f), 0xc3);
        // CB C3 0044
        gbc.setState(0xd1f8, 0x55dc, 0xa0c0, 0x8faf, 0x9501, 0x59b9, 0x0, 0x1);
        gbc.writeMem(0xd1f8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x55dc);
        EXPECT(gbc.pc(), 0xd1fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f8), 0xcb);
        EXPECT(gbc.readMem(0xd1f9), 0xc3);
        // CB C3 0045
        gbc.setState(0x7a84, 0x1232, 0x8aa0, 0xbcb4, 0x9591, 0x6e56, 0x0, 0x0);
        gbc.writeMem(0x7a84, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1232);
        EXPECT(gbc.pc(), 0x7a86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0046
        gbc.setState(0xa342, 0x350d, 0x1880, 0x9cf5, 0xadda, 0xada0, 0x0, 0x1);
        gbc.writeMem(0xa342, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x350d);
        EXPECT(gbc.pc(), 0xa344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa342), 0xcb);
        EXPECT(gbc.readMem(0xa343), 0xc3);
        // CB C3 0047
        gbc.setState(0x4283, 0xc4f4, 0xfa60, 0x8233, 0x6e27, 0x6bde, 0x0, 0x1);
        gbc.writeMem(0x4283, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc4f4);
        EXPECT(gbc.pc(), 0x4285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0048
        gbc.setState(0x8117, 0xed19, 0xce40, 0x32f8, 0xc1, 0x6c00, 0x1, 0x0);
        gbc.writeMem(0x8117, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xed19);
        EXPECT(gbc.pc(), 0x8119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8117), 0xcb);
        EXPECT(gbc.readMem(0x8118), 0xc3);
        // CB C3 0049
        gbc.setState(0xc1a4, 0x8414, 0xa6f0, 0x7cda, 0xdea8, 0x9028, 0x1, 0x1);
        gbc.writeMem(0xc1a4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8414);
        EXPECT(gbc.pc(), 0xc1a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a4), 0xcb);
        EXPECT(gbc.readMem(0xc1a5), 0xc3);
        // CB C3 004A
        gbc.setState(0xc7d, 0xe889, 0x5970, 0xccc2, 0x3e0b, 0xbb87, 0x0, 0x0);
        gbc.writeMem(0xc7d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe889);
        EXPECT(gbc.pc(), 0xc7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 004B
        gbc.setState(0xbca9, 0xa2bb, 0xfaf0, 0x82c8, 0xbcad, 0x5009, 0x1, 0x1);
        gbc.writeMem(0xbca9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa2bb);
        EXPECT(gbc.pc(), 0xbcab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbca9), 0xcb);
        EXPECT(gbc.readMem(0xbcaa), 0xc3);
        // CB C3 004C
        gbc.setState(0xd815, 0x3426, 0x7bb0, 0x7977, 0x5d38, 0xd019, 0x0, 0x1);
        gbc.writeMem(0xd815, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3426);
        EXPECT(gbc.pc(), 0xd817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd815), 0xcb);
        EXPECT(gbc.readMem(0xd816), 0xc3);
        // CB C3 004D
        gbc.setState(0x3483, 0x7ea, 0x5240, 0x4f8d, 0x4a47, 0x1aba, 0x0, 0x0);
        gbc.writeMem(0x3483, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7ea);
        EXPECT(gbc.pc(), 0x3485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 004E
        gbc.setState(0x90c5, 0x4fd1, 0xf8b0, 0x688f, 0x3db4, 0x6189, 0x0, 0x0);
        gbc.writeMem(0x90c5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4fd1);
        EXPECT(gbc.pc(), 0x90c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c5), 0xcb);
        EXPECT(gbc.readMem(0x90c6), 0xc3);
        // CB C3 004F
        gbc.setState(0x87e7, 0xb9c0, 0x5b70, 0x28fe, 0xc2c6, 0x4169, 0x0, 0x0);
        gbc.writeMem(0x87e7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb9c0);
        EXPECT(gbc.pc(), 0x87e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e7), 0xcb);
        EXPECT(gbc.readMem(0x87e8), 0xc3);
        // CB C3 0050
        gbc.setState(0xc3d0, 0xe35, 0x9d40, 0x83e3, 0xadc7, 0x55ae, 0x0, 0x0);
        gbc.writeMem(0xc3d0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe35);
        EXPECT(gbc.pc(), 0xc3d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d0), 0xcb);
        EXPECT(gbc.readMem(0xc3d1), 0xc3);
        // CB C3 0051
        gbc.setState(0x5487, 0xfe9d, 0x9bf0, 0x1939, 0xb395, 0xe448, 0x1, 0x0);
        gbc.writeMem(0x5487, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfe9d);
        EXPECT(gbc.pc(), 0x5489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0052
        gbc.setState(0x273, 0x369, 0xe470, 0xc352, 0xd6e9, 0xe8ca, 0x0, 0x0);
        gbc.writeMem(0x273, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x369);
        EXPECT(gbc.pc(), 0x275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0053
        gbc.setState(0x7086, 0xbe20, 0x5540, 0xfad5, 0xa46b, 0x83e8, 0x0, 0x0);
        gbc.writeMem(0x7086, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbe20);
        EXPECT(gbc.pc(), 0x7088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0054
        gbc.setState(0xb99c, 0x4001, 0x5300, 0x284d, 0x8dcf, 0x7575, 0x1, 0x0);
        gbc.writeMem(0xb99c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4001);
        EXPECT(gbc.pc(), 0xb99e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99c), 0xcb);
        EXPECT(gbc.readMem(0xb99d), 0xc3);
        // CB C3 0055
        gbc.setState(0x2f7a, 0xfeb7, 0x6200, 0xc7a1, 0x87c0, 0x345d, 0x1, 0x0);
        gbc.writeMem(0x2f7a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfeb7);
        EXPECT(gbc.pc(), 0x2f7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0056
        gbc.setState(0xe016, 0x273, 0x8640, 0x4748, 0xd116, 0xbd0e, 0x0, 0x0);
        gbc.writeMem(0xe016, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x273);
        EXPECT(gbc.pc(), 0xe018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe016), 0xcb);
        EXPECT(gbc.readMem(0xe017), 0xc3);
        // CB C3 0057
        gbc.setState(0x6bc6, 0xdc2, 0x2930, 0x9cba, 0x6068, 0xc578, 0x0, 0x0);
        gbc.writeMem(0x6bc6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdc2);
        EXPECT(gbc.pc(), 0x6bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0058
        gbc.setState(0x17f1, 0x996e, 0x61a0, 0x434f, 0xd662, 0x321d, 0x0, 0x0);
        gbc.writeMem(0x17f1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x996e);
        EXPECT(gbc.pc(), 0x17f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0059
        gbc.setState(0x8c3e, 0x52f9, 0xfc70, 0xd1d2, 0x20f7, 0xaf82, 0x1, 0x1);
        gbc.writeMem(0x8c3e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x52f9);
        EXPECT(gbc.pc(), 0x8c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c3e), 0xcb);
        EXPECT(gbc.readMem(0x8c3f), 0xc3);
        // CB C3 005A
        gbc.setState(0x8f0a, 0xd23b, 0x4430, 0xfd60, 0x2006, 0xecd0, 0x1, 0x1);
        gbc.writeMem(0x8f0a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd23b);
        EXPECT(gbc.pc(), 0x8f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0a), 0xcb);
        EXPECT(gbc.readMem(0x8f0b), 0xc3);
        // CB C3 005C
        gbc.setState(0x7fff, 0xa1df, 0x1a0, 0x536c, 0x1109, 0x2f78, 0x1, 0x1);
        gbc.writeMem(0x7fff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa1df);
        EXPECT(gbc.pc(), 0x8001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8000), 0xc3);
        // CB C3 005D
        gbc.setState(0x6817, 0x6858, 0xac00, 0x8752, 0xdb2f, 0x77e5, 0x1, 0x1);
        gbc.writeMem(0x6817, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6858);
        EXPECT(gbc.pc(), 0x6819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 005E
        gbc.setState(0xef5c, 0x1d89, 0x8490, 0x648f, 0x12a4, 0x83d8, 0x0, 0x1);
        gbc.writeMem(0xef5c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1d89);
        EXPECT(gbc.pc(), 0xef5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef5c), 0xcb);
        EXPECT(gbc.readMem(0xef5d), 0xc3);
        // CB C3 005F
        gbc.setState(0xa88c, 0xea17, 0x8800, 0x8eef, 0x608, 0xd405, 0x1, 0x0);
        gbc.writeMem(0xa88c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xea17);
        EXPECT(gbc.pc(), 0xa88e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88c), 0xcb);
        EXPECT(gbc.readMem(0xa88d), 0xc3);
        // CB C3 0060
        gbc.setState(0xa847, 0x4910, 0x4c90, 0xdbfc, 0xee9f, 0xa8d1, 0x1, 0x0);
        gbc.writeMem(0xa847, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4910);
        EXPECT(gbc.pc(), 0xa849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa847), 0xcb);
        EXPECT(gbc.readMem(0xa848), 0xc3);
        // CB C3 0061
        gbc.setState(0xefe, 0xcb76, 0x170, 0x923b, 0x2fb2, 0xb607, 0x1, 0x1);
        gbc.writeMem(0xefe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcb76);
        EXPECT(gbc.pc(), 0xf00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0062
        gbc.setState(0x119c, 0xea7c, 0x9030, 0x259c, 0xea27, 0x1e8b, 0x0, 0x0);
        gbc.writeMem(0x119c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xea7c);
        EXPECT(gbc.pc(), 0x119e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0063
        gbc.setState(0x515, 0x7147, 0x2e90, 0x3801, 0x250e, 0x9d98, 0x0, 0x0);
        gbc.writeMem(0x515, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7147);
        EXPECT(gbc.pc(), 0x517);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0064
        gbc.setState(0x8d25, 0x729d, 0x2ec0, 0xefae, 0x7261, 0x68c6, 0x0, 0x1);
        gbc.writeMem(0x8d25, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x729d);
        EXPECT(gbc.pc(), 0x8d27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d25), 0xcb);
        EXPECT(gbc.readMem(0x8d26), 0xc3);
        // CB C3 0065
        gbc.setState(0xcd73, 0x44c4, 0x14b0, 0xea1, 0x70ac, 0x3630, 0x1, 0x0);
        gbc.writeMem(0xcd73, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x44c4);
        EXPECT(gbc.pc(), 0xcd75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd73), 0xcb);
        EXPECT(gbc.readMem(0xcd74), 0xc3);
        // CB C3 0066
        gbc.setState(0xc30e, 0xf0a7, 0xb350, 0x6069, 0x2efd, 0xbd30, 0x0, 0x1);
        gbc.writeMem(0xc30e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf0a7);
        EXPECT(gbc.pc(), 0xc310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc30e), 0xcb);
        EXPECT(gbc.readMem(0xc30f), 0xc3);
        // CB C3 0068
        gbc.setState(0x2947, 0xcc65, 0x350, 0x883b, 0x36ce, 0x7080, 0x1, 0x0);
        gbc.writeMem(0x2947, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcc65);
        EXPECT(gbc.pc(), 0x2949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0069
        gbc.setState(0xa56c, 0x2312, 0xd380, 0xf797, 0xe6a, 0xa71f, 0x1, 0x1);
        gbc.writeMem(0xa56c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2312);
        EXPECT(gbc.pc(), 0xa56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa56c), 0xcb);
        EXPECT(gbc.readMem(0xa56d), 0xc3);
        // CB C3 006A
        gbc.setState(0x11ee, 0xfeeb, 0xa520, 0x412a, 0x7b43, 0x523b, 0x1, 0x1);
        gbc.writeMem(0x11ee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfeeb);
        EXPECT(gbc.pc(), 0x11f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 006B
        gbc.setState(0x826, 0x9845, 0xce30, 0xaf3, 0x52e9, 0xdd53, 0x0, 0x1);
        gbc.writeMem(0x826, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9845);
        EXPECT(gbc.pc(), 0x828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 006C
        gbc.setState(0xbf80, 0x4fdb, 0x25e0, 0xaebf, 0x68b8, 0xd1d3, 0x0, 0x1);
        gbc.writeMem(0xbf80, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4fdb);
        EXPECT(gbc.pc(), 0xbf82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf80), 0xcb);
        EXPECT(gbc.readMem(0xbf81), 0xc3);
        // CB C3 006D
        gbc.setState(0xe6b3, 0x5e79, 0x3830, 0x12c4, 0x9c66, 0x48aa, 0x1, 0x1);
        gbc.writeMem(0xe6b3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5e79);
        EXPECT(gbc.pc(), 0xe6b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6b3), 0xcb);
        EXPECT(gbc.readMem(0xe6b4), 0xc3);
        // CB C3 006E
        gbc.setState(0x99e6, 0xbb6, 0xd700, 0xd7df, 0x3305, 0x5647, 0x0, 0x0);
        gbc.writeMem(0x99e6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbb6);
        EXPECT(gbc.pc(), 0x99e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e6), 0xcb);
        EXPECT(gbc.readMem(0x99e7), 0xc3);
        // CB C3 006F
        gbc.setState(0x71d3, 0x2cf5, 0xfa90, 0xe438, 0x3cb7, 0xe71e, 0x0, 0x1);
        gbc.writeMem(0x71d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2cf5);
        EXPECT(gbc.pc(), 0x71d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0070
        gbc.setState(0x27fe, 0xb6f2, 0x4270, 0x5fe0, 0xc9a6, 0xf508, 0x0, 0x1);
        gbc.writeMem(0x27fe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb6f2);
        EXPECT(gbc.pc(), 0x2800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0071
        gbc.setState(0xdb7b, 0x53fa, 0x5a70, 0xd3fa, 0x16dd, 0x449c, 0x0, 0x1);
        gbc.writeMem(0xdb7b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x53fa);
        EXPECT(gbc.pc(), 0xdb7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7b), 0xcb);
        EXPECT(gbc.readMem(0xdb7c), 0xc3);
        // CB C3 0072
        gbc.setState(0xaf32, 0x6a17, 0x8070, 0x79e7, 0xe614, 0x56d5, 0x1, 0x0);
        gbc.writeMem(0xaf32, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6a17);
        EXPECT(gbc.pc(), 0xaf34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf32), 0xcb);
        EXPECT(gbc.readMem(0xaf33), 0xc3);
        // CB C3 0073
        gbc.setState(0x2813, 0xeafa, 0x3450, 0xbe74, 0xea94, 0xe0bf, 0x0, 0x0);
        gbc.writeMem(0x2813, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xeafa);
        EXPECT(gbc.pc(), 0x2815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0074
        gbc.setState(0x611c, 0x49b8, 0x21a0, 0xe89b, 0xb3cd, 0xaaaa, 0x0, 0x1);
        gbc.writeMem(0x611c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x49b8);
        EXPECT(gbc.pc(), 0x611e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0075
        gbc.setState(0xafc9, 0x7027, 0x5bb0, 0x215f, 0xaba, 0xb360, 0x1, 0x1);
        gbc.writeMem(0xafc9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7027);
        EXPECT(gbc.pc(), 0xafcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc9), 0xcb);
        EXPECT(gbc.readMem(0xafca), 0xc3);
        // CB C3 0076
        gbc.setState(0xec72, 0x80f7, 0x7220, 0x48ab, 0x2be9, 0x7c23, 0x1, 0x0);
        gbc.writeMem(0xec72, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x80f7);
        EXPECT(gbc.pc(), 0xec74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec72), 0xcb);
        EXPECT(gbc.readMem(0xec73), 0xc3);
        // CB C3 0077
        gbc.setState(0x9fd, 0xbb30, 0xb30, 0x41be, 0x640e, 0x5329, 0x1, 0x1);
        gbc.writeMem(0x9fd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbb30);
        EXPECT(gbc.pc(), 0x9ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0078
        gbc.setState(0x9223, 0xebeb, 0x77b0, 0x3819, 0x5a3d, 0xac44, 0x1, 0x0);
        gbc.writeMem(0x9223, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xebeb);
        EXPECT(gbc.pc(), 0x9225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9223), 0xcb);
        EXPECT(gbc.readMem(0x9224), 0xc3);
        // CB C3 0079
        gbc.setState(0x851f, 0xb1d6, 0xbd80, 0x97dc, 0xc6ae, 0x5fe7, 0x0, 0x0);
        gbc.writeMem(0x851f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb1d6);
        EXPECT(gbc.pc(), 0x8521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851f), 0xcb);
        EXPECT(gbc.readMem(0x8520), 0xc3);
        // CB C3 007A
        gbc.setState(0x91ff, 0x111f, 0x3e0, 0x411a, 0xa14c, 0x20e1, 0x0, 0x0);
        gbc.writeMem(0x91ff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x111f);
        EXPECT(gbc.pc(), 0x9201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ff), 0xcb);
        EXPECT(gbc.readMem(0x9200), 0xc3);
        // CB C3 007B
        gbc.setState(0xde03, 0x820e, 0x81f0, 0x2234, 0x78b1, 0xe7ad, 0x1, 0x0);
        gbc.writeMem(0xde03, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x820e);
        EXPECT(gbc.pc(), 0xde05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde03), 0xcb);
        EXPECT(gbc.readMem(0xde04), 0xc3);
        // CB C3 007D
        gbc.setState(0xcde8, 0x3024, 0xa8d0, 0xeebf, 0x3cff, 0xf726, 0x0, 0x0);
        gbc.writeMem(0xcde8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3024);
        EXPECT(gbc.pc(), 0xcdea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde8), 0xcb);
        EXPECT(gbc.readMem(0xcde9), 0xc3);
        // CB C3 007E
        gbc.setState(0x9ac7, 0x8803, 0x3600, 0x5c3, 0x4fdd, 0x2c4a, 0x1, 0x1);
        gbc.writeMem(0x9ac7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8803);
        EXPECT(gbc.pc(), 0x9ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac7), 0xcb);
        EXPECT(gbc.readMem(0x9ac8), 0xc3);
        // CB C3 007F
        gbc.setState(0x6c83, 0x6269, 0x9740, 0xd4ad, 0x248f, 0xebc3, 0x1, 0x1);
        gbc.writeMem(0x6c83, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6269);
        EXPECT(gbc.pc(), 0x6c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0080
        gbc.setState(0x179c, 0xe8c8, 0xff70, 0x8d67, 0xe06b, 0xbe79, 0x0, 0x1);
        gbc.writeMem(0x179c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe8c8);
        EXPECT(gbc.pc(), 0x179e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0081
        gbc.setState(0xb006, 0x5df8, 0x4c70, 0x77c6, 0x9488, 0xd522, 0x0, 0x1);
        gbc.writeMem(0xb006, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5df8);
        EXPECT(gbc.pc(), 0xb008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb006), 0xcb);
        EXPECT(gbc.readMem(0xb007), 0xc3);
        // CB C3 0082
        gbc.setState(0x5a0b, 0xee54, 0x8130, 0x6cc3, 0xd55c, 0x7577, 0x0, 0x0);
        gbc.writeMem(0x5a0b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xee54);
        EXPECT(gbc.pc(), 0x5a0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0083
        gbc.setState(0x7f85, 0x6471, 0xd570, 0xaa51, 0xef80, 0x7b62, 0x0, 0x0);
        gbc.writeMem(0x7f85, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6471);
        EXPECT(gbc.pc(), 0x7f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0084
        gbc.setState(0x6564, 0x4426, 0xa290, 0x4206, 0x9644, 0x5daa, 0x1, 0x1);
        gbc.writeMem(0x6564, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4426);
        EXPECT(gbc.pc(), 0x6566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0085
        gbc.setState(0x2c20, 0x6df0, 0x9730, 0x93a, 0xe737, 0xa02b, 0x1, 0x1);
        gbc.writeMem(0x2c20, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6df0);
        EXPECT(gbc.pc(), 0x2c22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0086
        gbc.setState(0xb143, 0x2ade, 0xfe0, 0xd31e, 0x5cbb, 0x1f83, 0x1, 0x1);
        gbc.writeMem(0xb143, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2ade);
        EXPECT(gbc.pc(), 0xb145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb143), 0xcb);
        EXPECT(gbc.readMem(0xb144), 0xc3);
        // CB C3 0087
        gbc.setState(0x5284, 0xe035, 0xaa90, 0x3185, 0x59b3, 0x9295, 0x0, 0x0);
        gbc.writeMem(0x5284, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe035);
        EXPECT(gbc.pc(), 0x5286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0088
        gbc.setState(0x6222, 0xe00a, 0xc5c0, 0x6cd5, 0x4fb7, 0x13c9, 0x0, 0x0);
        gbc.writeMem(0x6222, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe00a);
        EXPECT(gbc.pc(), 0x6224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0089
        gbc.setState(0x2cca, 0xfb98, 0x7920, 0xbc82, 0xb90d, 0xaa6a, 0x1, 0x0);
        gbc.writeMem(0x2cca, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfb98);
        EXPECT(gbc.pc(), 0x2ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 008A
        gbc.setState(0x760b, 0x4527, 0x1bf0, 0x9a73, 0x7ec3, 0x88ad, 0x0, 0x1);
        gbc.writeMem(0x760b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4527);
        EXPECT(gbc.pc(), 0x760d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 008B
        gbc.setState(0x9ad, 0x8719, 0xcdb0, 0xb097, 0xea82, 0xf5af, 0x0, 0x1);
        gbc.writeMem(0x9ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8719);
        EXPECT(gbc.pc(), 0x9af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 008C
        gbc.setState(0x45b4, 0xb06, 0x800, 0x2c8, 0xf0f9, 0x61f9, 0x1, 0x1);
        gbc.writeMem(0x45b4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb06);
        EXPECT(gbc.pc(), 0x45b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 008F
        gbc.setState(0x5828, 0x821, 0x8440, 0x6bce, 0x91a1, 0xa043, 0x0, 0x1);
        gbc.writeMem(0x5828, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x821);
        EXPECT(gbc.pc(), 0x582a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0090
        gbc.setState(0x54d3, 0xd56e, 0x5890, 0x288a, 0xcccf, 0x8e71, 0x0, 0x0);
        gbc.writeMem(0x54d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd56e);
        EXPECT(gbc.pc(), 0x54d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0091
        gbc.setState(0x360, 0x6d61, 0x89f0, 0xa1bf, 0xed28, 0xbf89, 0x0, 0x1);
        gbc.writeMem(0x360, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6d61);
        EXPECT(gbc.pc(), 0x362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0092
        gbc.setState(0x922e, 0xf0, 0xf430, 0x95aa, 0xbbf6, 0xd41c, 0x1, 0x0);
        gbc.writeMem(0x922e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf0);
        EXPECT(gbc.pc(), 0x9230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922e), 0xcb);
        EXPECT(gbc.readMem(0x922f), 0xc3);
        // CB C3 0093
        gbc.setState(0x8ce8, 0xda3f, 0xa160, 0x861e, 0x6025, 0x9ded, 0x0, 0x0);
        gbc.writeMem(0x8ce8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xda3f);
        EXPECT(gbc.pc(), 0x8cea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce8), 0xcb);
        EXPECT(gbc.readMem(0x8ce9), 0xc3);
        // CB C3 0094
        gbc.setState(0x196, 0xe960, 0x4e90, 0xc633, 0xd905, 0xc224, 0x0, 0x1);
        gbc.writeMem(0x196, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe960);
        EXPECT(gbc.pc(), 0x198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0095
        gbc.setState(0xe0ed, 0xb966, 0xed80, 0xc3fd, 0x439d, 0xc793, 0x0, 0x0);
        gbc.writeMem(0xe0ed, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb966);
        EXPECT(gbc.pc(), 0xe0ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ed), 0xcb);
        EXPECT(gbc.readMem(0xe0ee), 0xc3);
        // CB C3 0096
        gbc.setState(0x2f54, 0x14e1, 0xf100, 0x8666, 0xc5d9, 0x47e3, 0x0, 0x0);
        gbc.writeMem(0x2f54, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x14e1);
        EXPECT(gbc.pc(), 0x2f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0097
        gbc.setState(0x8b62, 0xec74, 0x95b0, 0x8947, 0x5ebd, 0xc146, 0x1, 0x1);
        gbc.writeMem(0x8b62, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xec74);
        EXPECT(gbc.pc(), 0x8b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b62), 0xcb);
        EXPECT(gbc.readMem(0x8b63), 0xc3);
        // CB C3 0098
        gbc.setState(0x586e, 0xa705, 0x2920, 0x10f5, 0x227d, 0xaa12, 0x0, 0x0);
        gbc.writeMem(0x586e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa705);
        EXPECT(gbc.pc(), 0x5870);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 009A
        gbc.setState(0x234f, 0x2201, 0x4120, 0xfbf5, 0xe116, 0x1de6, 0x0, 0x1);
        gbc.writeMem(0x234f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2201);
        EXPECT(gbc.pc(), 0x2351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 009B
        gbc.setState(0x3b8, 0x19d9, 0xe610, 0x7287, 0xdca8, 0xd8ed, 0x0, 0x0);
        gbc.writeMem(0x3b8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x19d9);
        EXPECT(gbc.pc(), 0x3ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 009C
        gbc.setState(0xcbf2, 0xb762, 0x9f0, 0xcbd5, 0x8b5e, 0x7c8c, 0x1, 0x1);
        gbc.writeMem(0xcbf2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb762);
        EXPECT(gbc.pc(), 0xcbf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbf2), 0xcb);
        EXPECT(gbc.readMem(0xcbf3), 0xc3);
        // CB C3 009D
        gbc.setState(0x8da4, 0x6f97, 0x84e0, 0xf1ef, 0xace9, 0x8ed5, 0x0, 0x1);
        gbc.writeMem(0x8da4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6f97);
        EXPECT(gbc.pc(), 0x8da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da4), 0xcb);
        EXPECT(gbc.readMem(0x8da5), 0xc3);
        // CB C3 009E
        gbc.setState(0x1425, 0xa38f, 0x9510, 0xceb1, 0x3195, 0xfcd9, 0x0, 0x1);
        gbc.writeMem(0x1425, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa38f);
        EXPECT(gbc.pc(), 0x1427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 009F
        gbc.setState(0x96c1, 0xc0a2, 0x6b80, 0x9320, 0x2952, 0x1202, 0x1, 0x1);
        gbc.writeMem(0x96c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc0a2);
        EXPECT(gbc.pc(), 0x96c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c1), 0xcb);
        EXPECT(gbc.readMem(0x96c2), 0xc3);
        // CB C3 00A0
        gbc.setState(0x4579, 0x32e, 0xd230, 0x5aac, 0x5090, 0xc4e7, 0x0, 0x0);
        gbc.writeMem(0x4579, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x32e);
        EXPECT(gbc.pc(), 0x457b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00A1
        gbc.setState(0xd5a0, 0x7c98, 0x3db0, 0xc37a, 0xdd36, 0x5586, 0x0, 0x1);
        gbc.writeMem(0xd5a0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7c98);
        EXPECT(gbc.pc(), 0xd5a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a0), 0xcb);
        EXPECT(gbc.readMem(0xd5a1), 0xc3);
        // CB C3 00A2
        gbc.setState(0x784, 0x5a7c, 0x7fc0, 0x39fe, 0x6d62, 0x98b9, 0x0, 0x1);
        gbc.writeMem(0x784, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5a7c);
        EXPECT(gbc.pc(), 0x786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00A3
        gbc.setState(0x8f31, 0xf35e, 0x7c20, 0x5e82, 0xd2d, 0x2485, 0x1, 0x0);
        gbc.writeMem(0x8f31, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf35e);
        EXPECT(gbc.pc(), 0x8f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f31), 0xcb);
        EXPECT(gbc.readMem(0x8f32), 0xc3);
        // CB C3 00A4
        gbc.setState(0x4a7b, 0xf622, 0xe610, 0x6d7a, 0x49f, 0xb958, 0x1, 0x0);
        gbc.writeMem(0x4a7b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf622);
        EXPECT(gbc.pc(), 0x4a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00A6
        gbc.setState(0x3c39, 0xd162, 0xe00, 0xb395, 0xf09, 0x6834, 0x1, 0x1);
        gbc.writeMem(0x3c39, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd162);
        EXPECT(gbc.pc(), 0x3c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00A7
        gbc.setState(0xef08, 0x68ed, 0x9e80, 0x69b1, 0x5524, 0xa0dd, 0x0, 0x1);
        gbc.writeMem(0xef08, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x68ed);
        EXPECT(gbc.pc(), 0xef0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef08), 0xcb);
        EXPECT(gbc.readMem(0xef09), 0xc3);
        // CB C3 00A8
        gbc.setState(0x9681, 0x8d62, 0x8e60, 0x3727, 0xc5d6, 0xdefc, 0x0, 0x0);
        gbc.writeMem(0x9681, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x8d62);
        EXPECT(gbc.pc(), 0x9683);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9681), 0xcb);
        EXPECT(gbc.readMem(0x9682), 0xc3);
        // CB C3 00A9
        gbc.setState(0xe011, 0xb31e, 0x56f0, 0x105a, 0xdf6f, 0xb4a, 0x1, 0x1);
        gbc.writeMem(0xe011, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb31e);
        EXPECT(gbc.pc(), 0xe013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe011), 0xcb);
        EXPECT(gbc.readMem(0xe012), 0xc3);
        // CB C3 00AA
        gbc.setState(0x7b53, 0xe5c4, 0xd670, 0xd4b5, 0x4520, 0xec84, 0x0, 0x0);
        gbc.writeMem(0x7b53, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe5c4);
        EXPECT(gbc.pc(), 0x7b55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00AB
        gbc.setState(0x707f, 0x60c1, 0x4f60, 0x933f, 0xb0fe, 0xb998, 0x0, 0x1);
        gbc.writeMem(0x707f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x60c1);
        EXPECT(gbc.pc(), 0x7081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00AC
        gbc.setState(0x163e, 0x3294, 0xe4c0, 0x1387, 0xd5ee, 0x7fc0, 0x0, 0x0);
        gbc.writeMem(0x163e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3294);
        EXPECT(gbc.pc(), 0x1640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00AD
        gbc.setState(0x8a61, 0x8588, 0x4da0, 0x7f98, 0x5934, 0x4b3c, 0x0, 0x0);
        gbc.writeMem(0x8a61, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8588);
        EXPECT(gbc.pc(), 0x8a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a61), 0xcb);
        EXPECT(gbc.readMem(0x8a62), 0xc3);
        // CB C3 00AE
        gbc.setState(0x94ef, 0xa75a, 0xd980, 0xb375, 0x938a, 0xac24, 0x0, 0x1);
        gbc.writeMem(0x94ef, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa75a);
        EXPECT(gbc.pc(), 0x94f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ef), 0xcb);
        EXPECT(gbc.readMem(0x94f0), 0xc3);
        // CB C3 00AF
        gbc.setState(0x1e86, 0x8476, 0xfc80, 0x5fa6, 0xa78e, 0xdd98, 0x1, 0x1);
        gbc.writeMem(0x1e86, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8476);
        EXPECT(gbc.pc(), 0x1e88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00B0
        gbc.setState(0xd3d9, 0x67cd, 0xf4d0, 0x8dda, 0xfd09, 0x908e, 0x0, 0x1);
        gbc.writeMem(0xd3d9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x67cd);
        EXPECT(gbc.pc(), 0xd3db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d9), 0xcb);
        EXPECT(gbc.readMem(0xd3da), 0xc3);
        // CB C3 00B1
        gbc.setState(0xcf8f, 0xdd04, 0xcad0, 0x871e, 0x34fc, 0x4577, 0x1, 0x0);
        gbc.writeMem(0xcf8f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdd04);
        EXPECT(gbc.pc(), 0xcf91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf8f), 0xcb);
        EXPECT(gbc.readMem(0xcf90), 0xc3);
        // CB C3 00B2
        gbc.setState(0xeece, 0xc933, 0x8770, 0x959e, 0x1005, 0x6119, 0x0, 0x1);
        gbc.writeMem(0xeece, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc933);
        EXPECT(gbc.pc(), 0xeed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeece), 0xcb);
        EXPECT(gbc.readMem(0xeecf), 0xc3);
        // CB C3 00B3
        gbc.setState(0xa890, 0xa0ce, 0x1fa0, 0xa602, 0xcf9e, 0xa8ec, 0x1, 0x0);
        gbc.writeMem(0xa890, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa0ce);
        EXPECT(gbc.pc(), 0xa892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa890), 0xcb);
        EXPECT(gbc.readMem(0xa891), 0xc3);
        // CB C3 00B5
        gbc.setState(0x944a, 0x1ac3, 0xeed0, 0x573c, 0xd62a, 0x9d18, 0x1, 0x0);
        gbc.writeMem(0x944a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1ac3);
        EXPECT(gbc.pc(), 0x944c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x944a), 0xcb);
        EXPECT(gbc.readMem(0x944b), 0xc3);
        // CB C3 00B6
        gbc.setState(0x8f1f, 0x742d, 0x8a00, 0x11ed, 0xdae7, 0x1577, 0x0, 0x0);
        gbc.writeMem(0x8f1f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x742d);
        EXPECT(gbc.pc(), 0x8f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1f), 0xcb);
        EXPECT(gbc.readMem(0x8f20), 0xc3);
        // CB C3 00B7
        gbc.setState(0x7b22, 0x1edc, 0x3130, 0x4a54, 0x6910, 0xddee, 0x1, 0x1);
        gbc.writeMem(0x7b22, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1edc);
        EXPECT(gbc.pc(), 0x7b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00B8
        gbc.setState(0x35fd, 0x653e, 0x1940, 0x11d8, 0xa30c, 0xe31b, 0x0, 0x1);
        gbc.writeMem(0x35fd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x653e);
        EXPECT(gbc.pc(), 0x35ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00B9
        gbc.setState(0xd53e, 0x5e0a, 0xed50, 0x73de, 0x8fc1, 0x9f32, 0x0, 0x1);
        gbc.writeMem(0xd53e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5e0a);
        EXPECT(gbc.pc(), 0xd540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd53e), 0xcb);
        EXPECT(gbc.readMem(0xd53f), 0xc3);
        // CB C3 00BA
        gbc.setState(0xabac, 0x189, 0x6530, 0xdc83, 0x2e43, 0x497b, 0x1, 0x0);
        gbc.writeMem(0xabac, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x189);
        EXPECT(gbc.pc(), 0xabae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabac), 0xcb);
        EXPECT(gbc.readMem(0xabad), 0xc3);
        // CB C3 00BB
        gbc.setState(0x3d5, 0x2f64, 0xee80, 0x92af, 0xa002, 0x4582, 0x1, 0x1);
        gbc.writeMem(0x3d5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2f64);
        EXPECT(gbc.pc(), 0x3d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00BC
        gbc.setState(0x1c73, 0x2dbd, 0xe6e0, 0xb5a5, 0x8b1a, 0x319e, 0x0, 0x1);
        gbc.writeMem(0x1c73, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2dbd);
        EXPECT(gbc.pc(), 0x1c75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00BD
        gbc.setState(0x3a70, 0x3b93, 0x350, 0x9a00, 0xa0c9, 0x6dce, 0x1, 0x1);
        gbc.writeMem(0x3a70, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3b93);
        EXPECT(gbc.pc(), 0x3a72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00BE
        gbc.setState(0xe424, 0x1cb1, 0xbbc0, 0xb5f0, 0xec8e, 0x64e4, 0x1, 0x0);
        gbc.writeMem(0xe424, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1cb1);
        EXPECT(gbc.pc(), 0xe426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe424), 0xcb);
        EXPECT(gbc.readMem(0xe425), 0xc3);
        // CB C3 00C0
        gbc.setState(0x56ea, 0x6868, 0xdb30, 0x21db, 0x9144, 0xa735, 0x1, 0x0);
        gbc.writeMem(0x56ea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6868);
        EXPECT(gbc.pc(), 0x56ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00C1
        gbc.setState(0x2be1, 0x1314, 0x8aa0, 0x4080, 0x2c8a, 0xf923, 0x1, 0x1);
        gbc.writeMem(0x2be1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1314);
        EXPECT(gbc.pc(), 0x2be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00C2
        gbc.setState(0x98c9, 0xc1ee, 0xe0d0, 0x13f, 0x6751, 0xe354, 0x1, 0x1);
        gbc.writeMem(0x98c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc1ee);
        EXPECT(gbc.pc(), 0x98cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c9), 0xcb);
        EXPECT(gbc.readMem(0x98ca), 0xc3);
        // CB C3 00C3
        gbc.setState(0x3c78, 0xd635, 0x1900, 0x5d4d, 0x6b1e, 0x5ccf, 0x1, 0x0);
        gbc.writeMem(0x3c78, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd635);
        EXPECT(gbc.pc(), 0x3c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00C4
        gbc.setState(0x3d60, 0x75e5, 0x8f20, 0xae8a, 0xc4b3, 0x441e, 0x0, 0x0);
        gbc.writeMem(0x3d60, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x75e5);
        EXPECT(gbc.pc(), 0x3d62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00C5
        gbc.setState(0xbc16, 0xccdb, 0x24e0, 0x86bb, 0xa7bf, 0x5fa8, 0x1, 0x0);
        gbc.writeMem(0xbc16, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xccdb);
        EXPECT(gbc.pc(), 0xbc18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc16), 0xcb);
        EXPECT(gbc.readMem(0xbc17), 0xc3);
        // CB C3 00C6
        gbc.setState(0xafcb, 0x3147, 0x8620, 0x72f7, 0x7a85, 0x57fe, 0x1, 0x1);
        gbc.writeMem(0xafcb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3147);
        EXPECT(gbc.pc(), 0xafcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafcb), 0xcb);
        EXPECT(gbc.readMem(0xafcc), 0xc3);
        // CB C3 00C7
        gbc.setState(0x31a7, 0x4e16, 0xb680, 0x58bc, 0x7603, 0xea70, 0x1, 0x0);
        gbc.writeMem(0x31a7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4e16);
        EXPECT(gbc.pc(), 0x31a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00C8
        gbc.setState(0x708d, 0xaf72, 0xa6b0, 0x64f4, 0xff97, 0x38e5, 0x1, 0x0);
        gbc.writeMem(0x708d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xaf72);
        EXPECT(gbc.pc(), 0x708f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00C9
        gbc.setState(0x83b2, 0x186f, 0x96a0, 0xb92e, 0x2342, 0xe17, 0x1, 0x0);
        gbc.writeMem(0x83b2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x186f);
        EXPECT(gbc.pc(), 0x83b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83b2), 0xcb);
        EXPECT(gbc.readMem(0x83b3), 0xc3);
        // CB C3 00CA
        gbc.setState(0x8c55, 0xed30, 0xaff0, 0xba53, 0x64c8, 0x479e, 0x1, 0x0);
        gbc.writeMem(0x8c55, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xed30);
        EXPECT(gbc.pc(), 0x8c57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c55), 0xcb);
        EXPECT(gbc.readMem(0x8c56), 0xc3);
        // CB C3 00CB
        gbc.setState(0x51c1, 0xe1a2, 0xf000, 0x1068, 0x8c46, 0x7fd0, 0x0, 0x1);
        gbc.writeMem(0x51c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe1a2);
        EXPECT(gbc.pc(), 0x51c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00CC
        gbc.setState(0xeefc, 0xc2ec, 0x6bd0, 0x9445, 0xd74a, 0x894c, 0x0, 0x1);
        gbc.writeMem(0xeefc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc2ec);
        EXPECT(gbc.pc(), 0xeefe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeefc), 0xcb);
        EXPECT(gbc.readMem(0xeefd), 0xc3);
        // CB C3 00CD
        gbc.setState(0xe10e, 0x9518, 0x7590, 0xe345, 0xc122, 0xfe8f, 0x0, 0x0);
        gbc.writeMem(0xe10e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9518);
        EXPECT(gbc.pc(), 0xe110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe10e), 0xcb);
        EXPECT(gbc.readMem(0xe10f), 0xc3);
        // CB C3 00CE
        gbc.setState(0xc385, 0x7dcd, 0x2680, 0xae3a, 0x88ab, 0x8df5, 0x0, 0x1);
        gbc.writeMem(0xc385, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7dcd);
        EXPECT(gbc.pc(), 0xc387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc385), 0xcb);
        EXPECT(gbc.readMem(0xc386), 0xc3);
        // CB C3 00D0
        gbc.setState(0x7ed8, 0xaf92, 0x3930, 0x8fd8, 0xaf03, 0x8f6d, 0x1, 0x1);
        gbc.writeMem(0x7ed8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xaf92);
        EXPECT(gbc.pc(), 0x7eda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00D1
        gbc.setState(0xb133, 0xfa78, 0x4080, 0xa494, 0x5d06, 0x3a15, 0x1, 0x0);
        gbc.writeMem(0xb133, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfa78);
        EXPECT(gbc.pc(), 0xb135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb133), 0xcb);
        EXPECT(gbc.readMem(0xb134), 0xc3);
        // CB C3 00D2
        gbc.setState(0xccea, 0x9a05, 0xb000, 0x5c6e, 0x6c41, 0xf74a, 0x0, 0x1);
        gbc.writeMem(0xccea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9a05);
        EXPECT(gbc.pc(), 0xccec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccea), 0xcb);
        EXPECT(gbc.readMem(0xcceb), 0xc3);
        // CB C3 00D3
        gbc.setState(0x8623, 0x11da, 0x4900, 0xee69, 0xcb55, 0x6a4b, 0x1, 0x1);
        gbc.writeMem(0x8623, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x11da);
        EXPECT(gbc.pc(), 0x8625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8623), 0xcb);
        EXPECT(gbc.readMem(0x8624), 0xc3);
        // CB C3 00D4
        gbc.setState(0xbf30, 0x2c7b, 0xeb0, 0xaca4, 0xb11f, 0x88cd, 0x1, 0x0);
        gbc.writeMem(0xbf30, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2c7b);
        EXPECT(gbc.pc(), 0xbf32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf30), 0xcb);
        EXPECT(gbc.readMem(0xbf31), 0xc3);
        // CB C3 00D5
        gbc.setState(0xe9ad, 0x3435, 0xa080, 0x9891, 0x6b55, 0x5402, 0x0, 0x1);
        gbc.writeMem(0xe9ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3435);
        EXPECT(gbc.pc(), 0xe9af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ad), 0xcb);
        EXPECT(gbc.readMem(0xe9ae), 0xc3);
        // CB C3 00D6
        gbc.setState(0x2a21, 0x97f8, 0x2ce0, 0xc288, 0x699, 0x408c, 0x1, 0x1);
        gbc.writeMem(0x2a21, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x97f8);
        EXPECT(gbc.pc(), 0x2a23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00D7
        gbc.setState(0x82de, 0x193c, 0x65f0, 0x666d, 0x9498, 0x9b72, 0x0, 0x0);
        gbc.writeMem(0x82de, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x193c);
        EXPECT(gbc.pc(), 0x82e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82de), 0xcb);
        EXPECT(gbc.readMem(0x82df), 0xc3);
        // CB C3 00D9
        gbc.setState(0xd6e1, 0x9c72, 0xe700, 0x3799, 0x8ee3, 0x45d6, 0x1, 0x0);
        gbc.writeMem(0xd6e1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9c72);
        EXPECT(gbc.pc(), 0xd6e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e1), 0xcb);
        EXPECT(gbc.readMem(0xd6e2), 0xc3);
        // CB C3 00DA
        gbc.setState(0xdd45, 0xeb1c, 0x6df0, 0x5100, 0xa5b6, 0x5937, 0x1, 0x0);
        gbc.writeMem(0xdd45, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xeb1c);
        EXPECT(gbc.pc(), 0xdd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd45), 0xcb);
        EXPECT(gbc.readMem(0xdd46), 0xc3);
        // CB C3 00DB
        gbc.setState(0x2faf, 0x1118, 0x8470, 0x9632, 0xf4a6, 0x9fb8, 0x1, 0x1);
        gbc.writeMem(0x2faf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1118);
        EXPECT(gbc.pc(), 0x2fb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00DC
        gbc.setState(0x20f7, 0x596, 0xd670, 0xcfc5, 0x94d4, 0xf83c, 0x1, 0x1);
        gbc.writeMem(0x20f7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x596);
        EXPECT(gbc.pc(), 0x20f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00DD
        gbc.setState(0x4d57, 0x722b, 0xca50, 0x9a38, 0xdd78, 0x5510, 0x0, 0x1);
        gbc.writeMem(0x4d57, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x722b);
        EXPECT(gbc.pc(), 0x4d59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00DE
        gbc.setState(0x148a, 0x35ff, 0x3460, 0x97e6, 0xe0e7, 0x8695, 0x1, 0x1);
        gbc.writeMem(0x148a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x35ff);
        EXPECT(gbc.pc(), 0x148c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00DF
        gbc.setState(0x940d, 0xbf68, 0x5c00, 0x68ad, 0x33a9, 0xb089, 0x0, 0x1);
        gbc.writeMem(0x940d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbf68);
        EXPECT(gbc.pc(), 0x940f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940d), 0xcb);
        EXPECT(gbc.readMem(0x940e), 0xc3);
        // CB C3 00E0
        gbc.setState(0x1b90, 0xb905, 0x3310, 0xd1f6, 0x9998, 0x62ed, 0x1, 0x0);
        gbc.writeMem(0x1b90, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb905);
        EXPECT(gbc.pc(), 0x1b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00E2
        gbc.setState(0xa3eb, 0xb0de, 0x7b40, 0xc819, 0x2eb6, 0xc564, 0x0, 0x1);
        gbc.writeMem(0xa3eb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb0de);
        EXPECT(gbc.pc(), 0xa3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3eb), 0xcb);
        EXPECT(gbc.readMem(0xa3ec), 0xc3);
        // CB C3 00E3
        gbc.setState(0x733b, 0xdd46, 0x5bc0, 0x9145, 0xe6e2, 0x779, 0x0, 0x0);
        gbc.writeMem(0x733b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdd46);
        EXPECT(gbc.pc(), 0x733d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00E4
        gbc.setState(0x2b32, 0x9554, 0x7ee0, 0xa6d6, 0x51d6, 0xc879, 0x1, 0x0);
        gbc.writeMem(0x2b32, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9554);
        EXPECT(gbc.pc(), 0x2b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00E5
        gbc.setState(0x2a11, 0x4181, 0x2340, 0xc9d4, 0x3c1b, 0x7ae9, 0x0, 0x1);
        gbc.writeMem(0x2a11, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4181);
        EXPECT(gbc.pc(), 0x2a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00E6
        gbc.setState(0x5972, 0xf60d, 0x7780, 0x8b3e, 0xae5a, 0x1d63, 0x0, 0x1);
        gbc.writeMem(0x5972, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf60d);
        EXPECT(gbc.pc(), 0x5974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00E7
        gbc.setState(0xb81d, 0xf49f, 0x6910, 0xfb2a, 0xc3c, 0x6c42, 0x1, 0x1);
        gbc.writeMem(0xb81d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf49f);
        EXPECT(gbc.pc(), 0xb81f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb81d), 0xcb);
        EXPECT(gbc.readMem(0xb81e), 0xc3);
        // CB C3 00E8
        gbc.setState(0xa33a, 0x650d, 0x3e70, 0xc573, 0x18f1, 0x23ed, 0x0, 0x1);
        gbc.writeMem(0xa33a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x650d);
        EXPECT(gbc.pc(), 0xa33c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa33a), 0xcb);
        EXPECT(gbc.readMem(0xa33b), 0xc3);
        // CB C3 00E9
        gbc.setState(0x115e, 0xafd7, 0xc5c0, 0x259, 0xed3c, 0xca8, 0x0, 0x0);
        gbc.writeMem(0x115e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xafd7);
        EXPECT(gbc.pc(), 0x1160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00EA
        gbc.setState(0x6951, 0xa227, 0xda20, 0x5c24, 0xde0d, 0xe0f6, 0x1, 0x1);
        gbc.writeMem(0x6951, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa227);
        EXPECT(gbc.pc(), 0x6953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00EB
        gbc.setState(0x6548, 0xe9fb, 0x3860, 0x85de, 0x6305, 0x3b8b, 0x0, 0x0);
        gbc.writeMem(0x6548, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe9fb);
        EXPECT(gbc.pc(), 0x654a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00ED
        gbc.setState(0xdd3, 0xab02, 0xcfd0, 0xe0db, 0x7d7, 0x5a17, 0x1, 0x0);
        gbc.writeMem(0xdd3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xab02);
        EXPECT(gbc.pc(), 0xdd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00EE
        gbc.setState(0xe41a, 0xdb01, 0x66b0, 0xfb79, 0x6726, 0x7ec4, 0x0, 0x0);
        gbc.writeMem(0xe41a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdb01);
        EXPECT(gbc.pc(), 0xe41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe41a), 0xcb);
        EXPECT(gbc.readMem(0xe41b), 0xc3);
        // CB C3 00EF
        gbc.setState(0x3b5e, 0xdd2d, 0xbed0, 0x1a15, 0x224e, 0x192c, 0x1, 0x0);
        gbc.writeMem(0x3b5e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xdd2d);
        EXPECT(gbc.pc(), 0x3b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00F1
        gbc.setState(0x7625, 0xe4ef, 0x27e0, 0xa6f, 0x539e, 0xdb35, 0x0, 0x0);
        gbc.writeMem(0x7625, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe4ef);
        EXPECT(gbc.pc(), 0x7627);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00F2
        gbc.setState(0xab13, 0xccd0, 0xfc60, 0xe4fe, 0x2cb9, 0xc437, 0x0, 0x0);
        gbc.writeMem(0xab13, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xccd0);
        EXPECT(gbc.pc(), 0xab15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab13), 0xcb);
        EXPECT(gbc.readMem(0xab14), 0xc3);
        // CB C3 00F3
        gbc.setState(0x49d4, 0x2521, 0x53c0, 0x670c, 0x97bb, 0xb998, 0x1, 0x0);
        gbc.writeMem(0x49d4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2521);
        EXPECT(gbc.pc(), 0x49d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00F4
        gbc.setState(0x471b, 0x610, 0x4bb0, 0x94b2, 0xf619, 0xc824, 0x1, 0x1);
        gbc.writeMem(0x471b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x610);
        EXPECT(gbc.pc(), 0x471d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00F5
        gbc.setState(0xe5, 0xbacb, 0xfe20, 0x741e, 0x9c20, 0xee94, 0x1, 0x1);
        gbc.writeMem(0xe5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xbacb);
        EXPECT(gbc.pc(), 0xe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 00F6
        gbc.setState(0xe65b, 0xa965, 0x6ca0, 0x4376, 0x67bc, 0x156, 0x0, 0x0);
        gbc.writeMem(0xe65b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa965);
        EXPECT(gbc.pc(), 0xe65d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe65b), 0xcb);
        EXPECT(gbc.readMem(0xe65c), 0xc3);
        // CB C3 00F7
        gbc.setState(0x805d, 0x9c86, 0x9910, 0x9cf8, 0x158c, 0x71d6, 0x1, 0x0);
        gbc.writeMem(0x805d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9c86);
        EXPECT(gbc.pc(), 0x805f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x805d), 0xcb);
        EXPECT(gbc.readMem(0x805e), 0xc3);
        // CB C3 00F8
        gbc.setState(0xc64a, 0x8835, 0x7290, 0x90ba, 0xb765, 0x604d, 0x0, 0x1);
        gbc.writeMem(0xc64a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8835);
        EXPECT(gbc.pc(), 0xc64c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc64a), 0xcb);
        EXPECT(gbc.readMem(0xc64b), 0xc3);
        // CB C3 00F9
        gbc.setState(0x778d, 0x2a94, 0xd6f0, 0x52d1, 0x498e, 0xc28, 0x0, 0x1);
        gbc.writeMem(0x778d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2a94);
        EXPECT(gbc.pc(), 0x778f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00FA
        gbc.setState(0x848a, 0xb795, 0x8f80, 0x3696, 0x8a07, 0xe3f6, 0x0, 0x1);
        gbc.writeMem(0x848a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb795);
        EXPECT(gbc.pc(), 0x848c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x848a), 0xcb);
        EXPECT(gbc.readMem(0x848b), 0xc3);
        // CB C3 00FB
        gbc.setState(0x984b, 0xe4f1, 0x68f0, 0xab9b, 0x5cc2, 0x7148, 0x1, 0x0);
        gbc.writeMem(0x984b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe4f1);
        EXPECT(gbc.pc(), 0x984d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x984b), 0xcb);
        EXPECT(gbc.readMem(0x984c), 0xc3);
        // CB C3 00FC
        gbc.setState(0x88b5, 0xdf12, 0x3f20, 0xc8b4, 0xc826, 0xbb1f, 0x1, 0x1);
        gbc.writeMem(0x88b5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xdf12);
        EXPECT(gbc.pc(), 0x88b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b5), 0xcb);
        EXPECT(gbc.readMem(0x88b6), 0xc3);
        // CB C3 00FD
        gbc.setState(0x9c97, 0x842b, 0x2bc0, 0x9711, 0xa33f, 0x2c42, 0x1, 0x1);
        gbc.writeMem(0x9c97, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x842b);
        EXPECT(gbc.pc(), 0x9c99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c97), 0xcb);
        EXPECT(gbc.readMem(0x9c98), 0xc3);
        // CB C3 00FE
        gbc.setState(0x5017, 0x7889, 0xed0, 0x6cc5, 0xfafa, 0xd248, 0x1, 0x0);
        gbc.writeMem(0x5017, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7889);
        EXPECT(gbc.pc(), 0x5019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 00FF
        gbc.setState(0x9c2a, 0xd9b4, 0x19a0, 0x74dd, 0x98cd, 0x4e4a, 0x0, 0x1);
        gbc.writeMem(0x9c2a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd9b4);
        EXPECT(gbc.pc(), 0x9c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c2a), 0xcb);
        EXPECT(gbc.readMem(0x9c2b), 0xc3);
        // CB C3 0100
        gbc.setState(0x5863, 0x81f7, 0xbbf0, 0xa61f, 0x29da, 0x5a59, 0x1, 0x1);
        gbc.writeMem(0x5863, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x81f7);
        EXPECT(gbc.pc(), 0x5865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0101
        gbc.setState(0x698, 0x511a, 0x900, 0xf43f, 0xc3df, 0xf0b3, 0x1, 0x1);
        gbc.writeMem(0x698, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x511a);
        EXPECT(gbc.pc(), 0x69a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0102
        gbc.setState(0x13cf, 0x3e9d, 0x2690, 0xf66b, 0x3342, 0x4860, 0x1, 0x1);
        gbc.writeMem(0x13cf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3e9d);
        EXPECT(gbc.pc(), 0x13d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0103
        gbc.setState(0xa3ab, 0x1395, 0x2ad0, 0x97f1, 0xd595, 0x32e9, 0x0, 0x1);
        gbc.writeMem(0xa3ab, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1395);
        EXPECT(gbc.pc(), 0xa3ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ab), 0xcb);
        EXPECT(gbc.readMem(0xa3ac), 0xc3);
        // CB C3 0104
        gbc.setState(0xdfe5, 0xf3bb, 0x1b40, 0x76fd, 0xf617, 0x7b87, 0x1, 0x0);
        gbc.writeMem(0xdfe5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf3bb);
        EXPECT(gbc.pc(), 0xdfe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfe5), 0xcb);
        EXPECT(gbc.readMem(0xdfe6), 0xc3);
        // CB C3 0105
        gbc.setState(0x6e7d, 0x9d3a, 0x56b0, 0xe870, 0x94a0, 0xd888, 0x0, 0x0);
        gbc.writeMem(0x6e7d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9d3a);
        EXPECT(gbc.pc(), 0x6e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0106
        gbc.setState(0x7ec6, 0x1753, 0x600, 0x4c12, 0x28c0, 0xd500, 0x0, 0x0);
        gbc.writeMem(0x7ec6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1753);
        EXPECT(gbc.pc(), 0x7ec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0107
        gbc.setState(0x152, 0xb47b, 0x2a30, 0xb397, 0xa1f2, 0xb32, 0x1, 0x0);
        gbc.writeMem(0x152, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb47b);
        EXPECT(gbc.pc(), 0x154);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0108
        gbc.setState(0x57ae, 0xea14, 0x9cd0, 0xfdce, 0x7f1e, 0xff2d, 0x0, 0x0);
        gbc.writeMem(0x57ae, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xea14);
        EXPECT(gbc.pc(), 0x57b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0109
        gbc.setState(0xd02e, 0x5e14, 0xce0, 0x806e, 0x3af1, 0x4a7d, 0x1, 0x0);
        gbc.writeMem(0xd02e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x5e14);
        EXPECT(gbc.pc(), 0xd030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02e), 0xcb);
        EXPECT(gbc.readMem(0xd02f), 0xc3);
        // CB C3 010A
        gbc.setState(0x3eb8, 0xd3b2, 0x48f0, 0xa8cc, 0x747d, 0x5f06, 0x1, 0x0);
        gbc.writeMem(0x3eb8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd3b2);
        EXPECT(gbc.pc(), 0x3eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 010B
        gbc.setState(0x3c3c, 0x80de, 0x2850, 0x3802, 0x9789, 0xab8f, 0x1, 0x0);
        gbc.writeMem(0x3c3c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x80de);
        EXPECT(gbc.pc(), 0x3c3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 010C
        gbc.setState(0x4c82, 0x533e, 0xd6a0, 0xe393, 0x369f, 0x5d48, 0x0, 0x0);
        gbc.writeMem(0x4c82, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x533e);
        EXPECT(gbc.pc(), 0x4c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 010D
        gbc.setState(0x39f8, 0x2bb7, 0x220, 0xe978, 0x52db, 0x552c, 0x1, 0x1);
        gbc.writeMem(0x39f8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2bb7);
        EXPECT(gbc.pc(), 0x39fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 010E
        gbc.setState(0x1eb1, 0xa285, 0x70e0, 0x637e, 0x8807, 0xc6ea, 0x0, 0x1);
        gbc.writeMem(0x1eb1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa285);
        EXPECT(gbc.pc(), 0x1eb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 010F
        gbc.setState(0x76d4, 0x5fd1, 0xb250, 0x9312, 0x327b, 0xa3a6, 0x0, 0x1);
        gbc.writeMem(0x76d4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5fd1);
        EXPECT(gbc.pc(), 0x76d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0110
        gbc.setState(0x4ca2, 0x33a5, 0x35c0, 0x2323, 0xa6c5, 0xf2, 0x0, 0x1);
        gbc.writeMem(0x4ca2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x33a5);
        EXPECT(gbc.pc(), 0x4ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0111
        gbc.setState(0x3bb5, 0xd399, 0x75d0, 0xf1eb, 0xcd43, 0x374, 0x0, 0x1);
        gbc.writeMem(0x3bb5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd399);
        EXPECT(gbc.pc(), 0x3bb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0112
        gbc.setState(0x70ed, 0x8ec0, 0xae50, 0xc113, 0xbb1e, 0x48fe, 0x1, 0x1);
        gbc.writeMem(0x70ed, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8ec0);
        EXPECT(gbc.pc(), 0x70ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0113
        gbc.setState(0x16a2, 0x420a, 0x7dd0, 0xc5c5, 0xf740, 0x7f21, 0x1, 0x0);
        gbc.writeMem(0x16a2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x420a);
        EXPECT(gbc.pc(), 0x16a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0114
        gbc.setState(0x6bf3, 0xf42c, 0x1a60, 0x58b9, 0xacd, 0xba97, 0x1, 0x0);
        gbc.writeMem(0x6bf3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf42c);
        EXPECT(gbc.pc(), 0x6bf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0115
        gbc.setState(0xc708, 0xf51b, 0xbe60, 0x93e0, 0x6587, 0x2982, 0x0, 0x1);
        gbc.writeMem(0xc708, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf51b);
        EXPECT(gbc.pc(), 0xc70a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc708), 0xcb);
        EXPECT(gbc.readMem(0xc709), 0xc3);
        // CB C3 0116
        gbc.setState(0xd980, 0xcc3e, 0x490, 0x44cc, 0x53cd, 0x638f, 0x1, 0x0);
        gbc.writeMem(0xd980, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xcc3e);
        EXPECT(gbc.pc(), 0xd982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd980), 0xcb);
        EXPECT(gbc.readMem(0xd981), 0xc3);
        // CB C3 0117
        gbc.setState(0xd2a1, 0x440, 0x9880, 0x9edf, 0x8f31, 0x764a, 0x0, 0x0);
        gbc.writeMem(0xd2a1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x440);
        EXPECT(gbc.pc(), 0xd2a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2a1), 0xcb);
        EXPECT(gbc.readMem(0xd2a2), 0xc3);
        // CB C3 0118
        gbc.setState(0x7ddf, 0x814a, 0xa940, 0x8b67, 0x1c7d, 0x5e71, 0x1, 0x1);
        gbc.writeMem(0x7ddf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x814a);
        EXPECT(gbc.pc(), 0x7de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 011A
        gbc.setState(0xc0, 0xf06e, 0xe660, 0x7b8c, 0x4195, 0xa0f, 0x0, 0x1);
        gbc.writeMem(0xc0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf06e);
        EXPECT(gbc.pc(), 0xc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 011B
        gbc.setState(0x8672, 0xa769, 0x2ef0, 0x672e, 0x19d8, 0xac1c, 0x0, 0x1);
        gbc.writeMem(0x8672, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa769);
        EXPECT(gbc.pc(), 0x8674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8672), 0xcb);
        EXPECT(gbc.readMem(0x8673), 0xc3);
        // CB C3 011C
        gbc.setState(0x8ed3, 0x37a8, 0x71b0, 0xbf42, 0x75e6, 0x2635, 0x0, 0x1);
        gbc.writeMem(0x8ed3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x37a8);
        EXPECT(gbc.pc(), 0x8ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed3), 0xcb);
        EXPECT(gbc.readMem(0x8ed4), 0xc3);
        // CB C3 011D
        gbc.setState(0x735a, 0xf659, 0xd390, 0x7542, 0xf454, 0xa439, 0x1, 0x0);
        gbc.writeMem(0x735a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf659);
        EXPECT(gbc.pc(), 0x735c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 011E
        gbc.setState(0xc75, 0xe559, 0x60a0, 0xbaf9, 0xed73, 0x5c74, 0x1, 0x1);
        gbc.writeMem(0xc75, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe559);
        EXPECT(gbc.pc(), 0xc77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 011F
        gbc.setState(0x5a69, 0x9814, 0xa100, 0x97e8, 0xfb62, 0x2b2b, 0x1, 0x0);
        gbc.writeMem(0x5a69, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x9814);
        EXPECT(gbc.pc(), 0x5a6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0120
        gbc.setState(0x82bc, 0xdf64, 0x2a80, 0x472b, 0x1e0f, 0xcf2e, 0x1, 0x0);
        gbc.writeMem(0x82bc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdf64);
        EXPECT(gbc.pc(), 0x82be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82bc), 0xcb);
        EXPECT(gbc.readMem(0x82bd), 0xc3);
        // CB C3 0121
        gbc.setState(0x6707, 0x1df4, 0xc500, 0xc36c, 0xff23, 0xe2e2, 0x1, 0x1);
        gbc.writeMem(0x6707, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1df4);
        EXPECT(gbc.pc(), 0x6709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0122
        gbc.setState(0xbc66, 0x2795, 0x36a0, 0x2746, 0xf696, 0x7c43, 0x0, 0x1);
        gbc.writeMem(0xbc66, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2795);
        EXPECT(gbc.pc(), 0xbc68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc66), 0xcb);
        EXPECT(gbc.readMem(0xbc67), 0xc3);
        // CB C3 0123
        gbc.setState(0x69c7, 0x1e48, 0xbc70, 0x8ff0, 0x9ba, 0x1bf9, 0x0, 0x1);
        gbc.writeMem(0x69c7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1e48);
        EXPECT(gbc.pc(), 0x69c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0124
        gbc.setState(0xcfe5, 0xf00b, 0x1770, 0xe31c, 0xe4ad, 0x2de, 0x0, 0x0);
        gbc.writeMem(0xcfe5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf00b);
        EXPECT(gbc.pc(), 0xcfe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe5), 0xcb);
        EXPECT(gbc.readMem(0xcfe6), 0xc3);
        // CB C3 0125
        gbc.setState(0xd88a, 0xa0f3, 0x5510, 0xf8c1, 0xf80, 0x5185, 0x1, 0x1);
        gbc.writeMem(0xd88a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa0f3);
        EXPECT(gbc.pc(), 0xd88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd88a), 0xcb);
        EXPECT(gbc.readMem(0xd88b), 0xc3);
        // CB C3 0126
        gbc.setState(0x6dcc, 0x981c, 0xe0f0, 0x2572, 0xd3d4, 0xd7fd, 0x1, 0x1);
        gbc.writeMem(0x6dcc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x981c);
        EXPECT(gbc.pc(), 0x6dce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0127
        gbc.setState(0x8857, 0x5ad1, 0x58c0, 0x3e36, 0xeeb0, 0xd8a, 0x1, 0x1);
        gbc.writeMem(0x8857, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5ad1);
        EXPECT(gbc.pc(), 0x8859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8857), 0xcb);
        EXPECT(gbc.readMem(0x8858), 0xc3);
        // CB C3 0128
        gbc.setState(0x5dfd, 0xab44, 0x2550, 0x9939, 0x22ac, 0xb1b, 0x1, 0x0);
        gbc.writeMem(0x5dfd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xab44);
        EXPECT(gbc.pc(), 0x5dff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0129
        gbc.setState(0xf7e, 0x2ade, 0xd2c0, 0xd772, 0xbb26, 0x6dbb, 0x0, 0x1);
        gbc.writeMem(0xf7e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2ade);
        EXPECT(gbc.pc(), 0xf80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 012A
        gbc.setState(0x9084, 0x4f, 0xc3d0, 0xae21, 0xdb0c, 0xd532, 0x1, 0x0);
        gbc.writeMem(0x9084, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4f);
        EXPECT(gbc.pc(), 0x9086);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9084), 0xcb);
        EXPECT(gbc.readMem(0x9085), 0xc3);
        // CB C3 012B
        gbc.setState(0xb261, 0xa23d, 0xd8d0, 0xfa13, 0x4afc, 0x4b, 0x1, 0x1);
        gbc.writeMem(0xb261, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa23d);
        EXPECT(gbc.pc(), 0xb263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb261), 0xcb);
        EXPECT(gbc.readMem(0xb262), 0xc3);
        // CB C3 012C
        gbc.setState(0xcaa5, 0xe841, 0xcfa0, 0xcd4e, 0x556a, 0xc6b1, 0x0, 0x0);
        gbc.writeMem(0xcaa5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe841);
        EXPECT(gbc.pc(), 0xcaa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaa5), 0xcb);
        EXPECT(gbc.readMem(0xcaa6), 0xc3);
        // CB C3 012E
        gbc.setState(0xbf5b, 0x5292, 0xe950, 0x6aab, 0x14b1, 0xe48c, 0x1, 0x0);
        gbc.writeMem(0xbf5b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5292);
        EXPECT(gbc.pc(), 0xbf5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf5b), 0xcb);
        EXPECT(gbc.readMem(0xbf5c), 0xc3);
        // CB C3 0130
        gbc.setState(0x7b16, 0xd267, 0x20d0, 0xae85, 0xcbd8, 0x5ab1, 0x1, 0x0);
        gbc.writeMem(0x7b16, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd267);
        EXPECT(gbc.pc(), 0x7b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0131
        gbc.setState(0x356e, 0x4d8d, 0x66c0, 0x4557, 0x797a, 0x7e92, 0x1, 0x0);
        gbc.writeMem(0x356e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4d8d);
        EXPECT(gbc.pc(), 0x3570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0133
        gbc.setState(0x4750, 0xbb81, 0x1150, 0x4c55, 0x77ab, 0xa6fc, 0x1, 0x0);
        gbc.writeMem(0x4750, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbb81);
        EXPECT(gbc.pc(), 0x4752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0134
        gbc.setState(0xb789, 0x60e, 0x6a20, 0x1873, 0xc68, 0xc2fb, 0x0, 0x0);
        gbc.writeMem(0xb789, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x60e);
        EXPECT(gbc.pc(), 0xb78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb789), 0xcb);
        EXPECT(gbc.readMem(0xb78a), 0xc3);
        // CB C3 0135
        gbc.setState(0x2557, 0x6656, 0xb4b0, 0x7f0a, 0x79c2, 0x48e9, 0x1, 0x0);
        gbc.writeMem(0x2557, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6656);
        EXPECT(gbc.pc(), 0x2559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0136
        gbc.setState(0xcd4c, 0x50f5, 0xce10, 0x5c3a, 0xc5, 0xcd8b, 0x0, 0x1);
        gbc.writeMem(0xcd4c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x50f5);
        EXPECT(gbc.pc(), 0xcd4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4c), 0xcb);
        EXPECT(gbc.readMem(0xcd4d), 0xc3);
        // CB C3 0137
        gbc.setState(0xd0ce, 0x772c, 0xf2f0, 0xca02, 0xac16, 0xc801, 0x1, 0x0);
        gbc.writeMem(0xd0ce, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x772c);
        EXPECT(gbc.pc(), 0xd0d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ce), 0xcb);
        EXPECT(gbc.readMem(0xd0cf), 0xc3);
        // CB C3 0138
        gbc.setState(0xeb51, 0xd81b, 0x78f0, 0x2664, 0x3caa, 0x2f6b, 0x1, 0x0);
        gbc.writeMem(0xeb51, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd81b);
        EXPECT(gbc.pc(), 0xeb53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb51), 0xcb);
        EXPECT(gbc.readMem(0xeb52), 0xc3);
        // CB C3 0139
        gbc.setState(0xb0ad, 0x4753, 0x4050, 0x3f17, 0xfcb6, 0x245d, 0x1, 0x0);
        gbc.writeMem(0xb0ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4753);
        EXPECT(gbc.pc(), 0xb0af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0ad), 0xcb);
        EXPECT(gbc.readMem(0xb0ae), 0xc3);
        // CB C3 013A
        gbc.setState(0xb8c9, 0x5af4, 0x4780, 0x45cc, 0x4251, 0x3925, 0x0, 0x0);
        gbc.writeMem(0xb8c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5af4);
        EXPECT(gbc.pc(), 0xb8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c9), 0xcb);
        EXPECT(gbc.readMem(0xb8ca), 0xc3);
        // CB C3 013B
        gbc.setState(0x4e3a, 0xe6a9, 0x5a50, 0xfcd0, 0x717b, 0x7058, 0x0, 0x1);
        gbc.writeMem(0x4e3a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe6a9);
        EXPECT(gbc.pc(), 0x4e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 013C
        gbc.setState(0xb7cb, 0x3e39, 0x4d60, 0x88de, 0x33dd, 0xf508, 0x0, 0x1);
        gbc.writeMem(0xb7cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3e39);
        EXPECT(gbc.pc(), 0xb7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7cb), 0xcb);
        EXPECT(gbc.readMem(0xb7cc), 0xc3);
        // CB C3 013D
        gbc.setState(0xe32d, 0xe452, 0xa0e0, 0x178f, 0x39e6, 0x11b7, 0x0, 0x0);
        gbc.writeMem(0xe32d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe452);
        EXPECT(gbc.pc(), 0xe32f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe32d), 0xcb);
        EXPECT(gbc.readMem(0xe32e), 0xc3);
        // CB C3 013F
        gbc.setState(0x3f17, 0x9aaa, 0x3f90, 0xdc3b, 0x5292, 0xdc0b, 0x0, 0x0);
        gbc.writeMem(0x3f17, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9aaa);
        EXPECT(gbc.pc(), 0x3f19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0140
        gbc.setState(0x68c5, 0x4a0a, 0x2900, 0xe4e8, 0xbe10, 0xe479, 0x1, 0x1);
        gbc.writeMem(0x68c5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x4a0a);
        EXPECT(gbc.pc(), 0x68c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0141
        gbc.setState(0x792e, 0x916d, 0xec80, 0x1dac, 0x5e97, 0x7df5, 0x0, 0x1);
        gbc.writeMem(0x792e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x916d);
        EXPECT(gbc.pc(), 0x7930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0142
        gbc.setState(0x1b13, 0x4d7d, 0x3a30, 0x57f8, 0x572a, 0xcdcc, 0x0, 0x0);
        gbc.writeMem(0x1b13, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4d7d);
        EXPECT(gbc.pc(), 0x1b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0143
        gbc.setState(0x3a0f, 0x90ff, 0x5840, 0x8403, 0x6199, 0x73e1, 0x1, 0x1);
        gbc.writeMem(0x3a0f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x90ff);
        EXPECT(gbc.pc(), 0x3a11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0144
        gbc.setState(0xec65, 0x59f7, 0xd5e0, 0x742a, 0x7e7e, 0x2907, 0x1, 0x1);
        gbc.writeMem(0xec65, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x59f7);
        EXPECT(gbc.pc(), 0xec67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec65), 0xcb);
        EXPECT(gbc.readMem(0xec66), 0xc3);
        // CB C3 0145
        gbc.setState(0x6e73, 0xc4f9, 0x7ad0, 0x54bb, 0x85a5, 0x7cc3, 0x1, 0x0);
        gbc.writeMem(0x6e73, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc4f9);
        EXPECT(gbc.pc(), 0x6e75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0146
        gbc.setState(0x13db, 0x7dad, 0x47c0, 0x224f, 0xd7e1, 0xdcee, 0x0, 0x0);
        gbc.writeMem(0x13db, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7dad);
        EXPECT(gbc.pc(), 0x13dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0147
        gbc.setState(0x2784, 0x5b24, 0x5920, 0x2b58, 0x166d, 0xd08b, 0x1, 0x0);
        gbc.writeMem(0x2784, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5b24);
        EXPECT(gbc.pc(), 0x2786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0148
        gbc.setState(0xc8a7, 0x565d, 0x2a20, 0xc0c2, 0xc7d3, 0x1c45, 0x1, 0x0);
        gbc.writeMem(0xc8a7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x565d);
        EXPECT(gbc.pc(), 0xc8a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a7), 0xcb);
        EXPECT(gbc.readMem(0xc8a8), 0xc3);
        // CB C3 014A
        gbc.setState(0x4de7, 0xed0b, 0xaae0, 0xefff, 0xe74a, 0xbbb9, 0x0, 0x1);
        gbc.writeMem(0x4de7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xed0b);
        EXPECT(gbc.pc(), 0x4de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 014B
        gbc.setState(0xd4ca, 0x5a79, 0xf880, 0xe694, 0xfe0e, 0xb902, 0x0, 0x1);
        gbc.writeMem(0xd4ca, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5a79);
        EXPECT(gbc.pc(), 0xd4cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ca), 0xcb);
        EXPECT(gbc.readMem(0xd4cb), 0xc3);
        // CB C3 014C
        gbc.setState(0x34bf, 0x77db, 0x9340, 0xfc43, 0x7636, 0xf7b6, 0x1, 0x0);
        gbc.writeMem(0x34bf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x77db);
        EXPECT(gbc.pc(), 0x34c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 014E
        gbc.setState(0x37f1, 0x75ea, 0x1a90, 0x82f8, 0x4b71, 0xfd30, 0x0, 0x1);
        gbc.writeMem(0x37f1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x75ea);
        EXPECT(gbc.pc(), 0x37f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 014F
        gbc.setState(0x99fa, 0x8141, 0xc510, 0x5179, 0xac35, 0x33d7, 0x0, 0x0);
        gbc.writeMem(0x99fa, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8141);
        EXPECT(gbc.pc(), 0x99fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fa), 0xcb);
        EXPECT(gbc.readMem(0x99fb), 0xc3);
        // CB C3 0150
        gbc.setState(0x20e4, 0xb8c7, 0x43b0, 0xa86, 0xc098, 0x50a1, 0x0, 0x0);
        gbc.writeMem(0x20e4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb8c7);
        EXPECT(gbc.pc(), 0x20e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0151
        gbc.setState(0xe4d5, 0xb131, 0x9e80, 0x5980, 0xf6b7, 0xe4ec, 0x1, 0x0);
        gbc.writeMem(0xe4d5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb131);
        EXPECT(gbc.pc(), 0xe4d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4d5), 0xcb);
        EXPECT(gbc.readMem(0xe4d6), 0xc3);
        // CB C3 0152
        gbc.setState(0xe53, 0xf065, 0x4450, 0x4190, 0x4a9f, 0x7638, 0x1, 0x1);
        gbc.writeMem(0xe53, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf065);
        EXPECT(gbc.pc(), 0xe55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0153
        gbc.setState(0xc0e1, 0x2b8e, 0x3f20, 0xa0b6, 0x4e8e, 0x4804, 0x1, 0x1);
        gbc.writeMem(0xc0e1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2b8e);
        EXPECT(gbc.pc(), 0xc0e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e1), 0xcb);
        EXPECT(gbc.readMem(0xc0e2), 0xc3);
        // CB C3 0154
        gbc.setState(0x6d04, 0xa056, 0x1d50, 0x9097, 0x4b14, 0xa2ce, 0x0, 0x1);
        gbc.writeMem(0x6d04, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa056);
        EXPECT(gbc.pc(), 0x6d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0155
        gbc.setState(0x5138, 0x990f, 0x33e0, 0x2c7d, 0x878e, 0xad19, 0x1, 0x1);
        gbc.writeMem(0x5138, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x990f);
        EXPECT(gbc.pc(), 0x513a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0156
        gbc.setState(0x6ce6, 0xf160, 0x1900, 0x4a61, 0x8682, 0x3e9, 0x0, 0x1);
        gbc.writeMem(0x6ce6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf160);
        EXPECT(gbc.pc(), 0x6ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0157
        gbc.setState(0xad62, 0x32c9, 0xc0a0, 0x40b2, 0xc65e, 0x37ca, 0x0, 0x1);
        gbc.writeMem(0xad62, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x32c9);
        EXPECT(gbc.pc(), 0xad64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad62), 0xcb);
        EXPECT(gbc.readMem(0xad63), 0xc3);
        // CB C3 0158
        gbc.setState(0x2780, 0x8db6, 0xf600, 0xab91, 0x8e60, 0xa1ed, 0x1, 0x1);
        gbc.writeMem(0x2780, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8db6);
        EXPECT(gbc.pc(), 0x2782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 015A
        gbc.setState(0x9b7c, 0xccbb, 0xe00, 0xbdc9, 0x63e6, 0x4b57, 0x1, 0x0);
        gbc.writeMem(0x9b7c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xccbb);
        EXPECT(gbc.pc(), 0x9b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b7c), 0xcb);
        EXPECT(gbc.readMem(0x9b7d), 0xc3);
        // CB C3 015B
        gbc.setState(0xc7f8, 0x3c9d, 0xb160, 0x86d1, 0x858, 0x7463, 0x0, 0x0);
        gbc.writeMem(0xc7f8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3c9d);
        EXPECT(gbc.pc(), 0xc7fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f8), 0xcb);
        EXPECT(gbc.readMem(0xc7f9), 0xc3);
        // CB C3 015C
        gbc.setState(0xe219, 0xf916, 0x6ba0, 0x6162, 0x1ede, 0x26a6, 0x1, 0x1);
        gbc.writeMem(0xe219, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf916);
        EXPECT(gbc.pc(), 0xe21b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe219), 0xcb);
        EXPECT(gbc.readMem(0xe21a), 0xc3);
        // CB C3 015D
        gbc.setState(0xc7b9, 0x9ac1, 0xf10, 0x8a75, 0xd624, 0x489b, 0x0, 0x0);
        gbc.writeMem(0xc7b9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9ac1);
        EXPECT(gbc.pc(), 0xc7bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b9), 0xcb);
        EXPECT(gbc.readMem(0xc7ba), 0xc3);
        // CB C3 015E
        gbc.setState(0xeee6, 0x1e4f, 0x3e90, 0xf03, 0x7d32, 0xb049, 0x0, 0x0);
        gbc.writeMem(0xeee6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1e4f);
        EXPECT(gbc.pc(), 0xeee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeee6), 0xcb);
        EXPECT(gbc.readMem(0xeee7), 0xc3);
        // CB C3 015F
        gbc.setState(0x60c2, 0x4fe9, 0xa3d0, 0x2119, 0x18d9, 0x16ea, 0x0, 0x0);
        gbc.writeMem(0x60c2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4fe9);
        EXPECT(gbc.pc(), 0x60c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0160
        gbc.setState(0xe608, 0x2c67, 0x1b0, 0xc2d4, 0x3719, 0xf928, 0x0, 0x1);
        gbc.writeMem(0xe608, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2c67);
        EXPECT(gbc.pc(), 0xe60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe608), 0xcb);
        EXPECT(gbc.readMem(0xe609), 0xc3);
        // CB C3 0161
        gbc.setState(0x3a77, 0xa978, 0xeef0, 0xdf2b, 0x29f2, 0x8181, 0x1, 0x1);
        gbc.writeMem(0x3a77, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa978);
        EXPECT(gbc.pc(), 0x3a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0162
        gbc.setState(0x8e28, 0x75f, 0x8370, 0x8c2b, 0x8d6e, 0xf4e1, 0x1, 0x0);
        gbc.writeMem(0x8e28, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x75f);
        EXPECT(gbc.pc(), 0x8e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e28), 0xcb);
        EXPECT(gbc.readMem(0x8e29), 0xc3);
        // CB C3 0163
        gbc.setState(0x10b0, 0x5f10, 0x2120, 0xa63c, 0x22b6, 0xf38e, 0x0, 0x1);
        gbc.writeMem(0x10b0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5f10);
        EXPECT(gbc.pc(), 0x10b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0164
        gbc.setState(0x2e, 0xdb13, 0xa2a0, 0x72d3, 0xf40, 0x5521, 0x0, 0x0);
        gbc.writeMem(0x2e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdb13);
        EXPECT(gbc.pc(), 0x30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0165
        gbc.setState(0x2a1c, 0x4ba6, 0xe020, 0x82b1, 0x34e4, 0xd8b7, 0x1, 0x1);
        gbc.writeMem(0x2a1c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4ba6);
        EXPECT(gbc.pc(), 0x2a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0166
        gbc.setState(0xe9ef, 0xaa2c, 0x6a20, 0x7807, 0x2015, 0xeac7, 0x1, 0x1);
        gbc.writeMem(0xe9ef, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xaa2c);
        EXPECT(gbc.pc(), 0xe9f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ef), 0xcb);
        EXPECT(gbc.readMem(0xe9f0), 0xc3);
        // CB C3 0167
        gbc.setState(0x487e, 0x9dd7, 0x950, 0x4f97, 0x88ca, 0xb427, 0x1, 0x1);
        gbc.writeMem(0x487e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9dd7);
        EXPECT(gbc.pc(), 0x4880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0168
        gbc.setState(0x3033, 0xb933, 0x4660, 0xba65, 0xee5f, 0xa55f, 0x0, 0x1);
        gbc.writeMem(0x3033, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb933);
        EXPECT(gbc.pc(), 0x3035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0169
        gbc.setState(0x3f6, 0x3c1c, 0xc4c0, 0xcb44, 0x7dfc, 0x3553, 0x0, 0x0);
        gbc.writeMem(0x3f6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3c1c);
        EXPECT(gbc.pc(), 0x3f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 016A
        gbc.setState(0xae99, 0x4cba, 0x12c0, 0x6fd5, 0x653f, 0x539d, 0x0, 0x0);
        gbc.writeMem(0xae99, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4cba);
        EXPECT(gbc.pc(), 0xae9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae99), 0xcb);
        EXPECT(gbc.readMem(0xae9a), 0xc3);
        // CB C3 016B
        gbc.setState(0x81b4, 0x8b1c, 0xb2f0, 0xe703, 0x3d69, 0x1410, 0x0, 0x1);
        gbc.writeMem(0x81b4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8b1c);
        EXPECT(gbc.pc(), 0x81b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b4), 0xcb);
        EXPECT(gbc.readMem(0x81b5), 0xc3);
        // CB C3 016C
        gbc.setState(0x463d, 0xa286, 0x5290, 0xb868, 0xd03c, 0x130b, 0x0, 0x1);
        gbc.writeMem(0x463d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa286);
        EXPECT(gbc.pc(), 0x463f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 016D
        gbc.setState(0x7e8d, 0x63fa, 0xc830, 0x8ba, 0x730d, 0x882a, 0x1, 0x0);
        gbc.writeMem(0x7e8d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x63fa);
        EXPECT(gbc.pc(), 0x7e8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 016E
        gbc.setState(0x8159, 0xf1b5, 0xa410, 0xc1da, 0xdd84, 0x96b, 0x1, 0x1);
        gbc.writeMem(0x8159, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf1b5);
        EXPECT(gbc.pc(), 0x815b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8159), 0xcb);
        EXPECT(gbc.readMem(0x815a), 0xc3);
        // CB C3 016F
        gbc.setState(0xeaaa, 0x5e91, 0x11f0, 0x6c7d, 0xcb41, 0x46d7, 0x0, 0x0);
        gbc.writeMem(0xeaaa, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5e91);
        EXPECT(gbc.pc(), 0xeaac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaaa), 0xcb);
        EXPECT(gbc.readMem(0xeaab), 0xc3);
        // CB C3 0170
        gbc.setState(0x46de, 0xe715, 0xe3c0, 0x60c7, 0x3223, 0xc28c, 0x1, 0x1);
        gbc.writeMem(0x46de, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe715);
        EXPECT(gbc.pc(), 0x46e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0171
        gbc.setState(0x4302, 0x2f5, 0xe270, 0xb2bb, 0x85c1, 0x7b4c, 0x0, 0x0);
        gbc.writeMem(0x4302, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2f5);
        EXPECT(gbc.pc(), 0x4304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0172
        gbc.setState(0x9acc, 0xb267, 0xd520, 0x3739, 0xefde, 0x265e, 0x0, 0x1);
        gbc.writeMem(0x9acc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb267);
        EXPECT(gbc.pc(), 0x9ace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9acc), 0xcb);
        EXPECT(gbc.readMem(0x9acd), 0xc3);
        // CB C3 0173
        gbc.setState(0x12b4, 0x14df, 0x8520, 0xe56c, 0x64a8, 0xc1bb, 0x0, 0x1);
        gbc.writeMem(0x12b4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x14df);
        EXPECT(gbc.pc(), 0x12b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0174
        gbc.setState(0xd96, 0xe10c, 0x5970, 0x2131, 0xa17, 0xea10, 0x0, 0x1);
        gbc.writeMem(0xd96, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe10c);
        EXPECT(gbc.pc(), 0xd98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0175
        gbc.setState(0xa1d, 0x83c9, 0x9950, 0xa4d, 0x9cbd, 0xb856, 0x0, 0x1);
        gbc.writeMem(0xa1d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x83c9);
        EXPECT(gbc.pc(), 0xa1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0176
        gbc.setState(0x875, 0x81da, 0xd240, 0x6735, 0x8bed, 0x63b3, 0x0, 0x0);
        gbc.writeMem(0x875, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x81da);
        EXPECT(gbc.pc(), 0x877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0177
        gbc.setState(0x1b09, 0x1c11, 0xf420, 0x1912, 0xb92f, 0xba2e, 0x0, 0x0);
        gbc.writeMem(0x1b09, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1c11);
        EXPECT(gbc.pc(), 0x1b0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0178
        gbc.setState(0xa225, 0x78a4, 0x8b40, 0x4751, 0x32f4, 0x3f5b, 0x1, 0x0);
        gbc.writeMem(0xa225, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x78a4);
        EXPECT(gbc.pc(), 0xa227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa225), 0xcb);
        EXPECT(gbc.readMem(0xa226), 0xc3);
        // CB C3 0179
        gbc.setState(0xeeaf, 0x6e0f, 0x3bd0, 0x164d, 0x963f, 0x6d26, 0x0, 0x1);
        gbc.writeMem(0xeeaf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6e0f);
        EXPECT(gbc.pc(), 0xeeb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeaf), 0xcb);
        EXPECT(gbc.readMem(0xeeb0), 0xc3);
        // CB C3 017A
        gbc.setState(0x2587, 0x3f26, 0xebd0, 0x6cf9, 0xcbe9, 0x533c, 0x0, 0x1);
        gbc.writeMem(0x2587, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3f26);
        EXPECT(gbc.pc(), 0x2589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 017B
        gbc.setState(0x20dd, 0x29a1, 0x58f0, 0x720f, 0xe20f, 0x9cfc, 0x0, 0x0);
        gbc.writeMem(0x20dd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x29a1);
        EXPECT(gbc.pc(), 0x20df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 017C
        gbc.setState(0xd7b6, 0xb2b1, 0xc080, 0x38a5, 0xebe7, 0xcff1, 0x1, 0x0);
        gbc.writeMem(0xd7b6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb2b1);
        EXPECT(gbc.pc(), 0xd7b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b6), 0xcb);
        EXPECT(gbc.readMem(0xd7b7), 0xc3);
        // CB C3 017D
        gbc.setState(0x5fab, 0x5e40, 0x84d0, 0xa012, 0xf704, 0x1b8b, 0x0, 0x0);
        gbc.writeMem(0x5fab, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5e40);
        EXPECT(gbc.pc(), 0x5fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 017E
        gbc.setState(0xca80, 0x53c7, 0x8a20, 0x28b4, 0x7a05, 0xb9f3, 0x0, 0x0);
        gbc.writeMem(0xca80, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x53c7);
        EXPECT(gbc.pc(), 0xca82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca80), 0xcb);
        EXPECT(gbc.readMem(0xca81), 0xc3);
        // CB C3 017F
        gbc.setState(0x11b5, 0xacc, 0x63f0, 0x33df, 0x699f, 0x50d0, 0x0, 0x1);
        gbc.writeMem(0x11b5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xacc);
        EXPECT(gbc.pc(), 0x11b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0180
        gbc.setState(0xcf4e, 0xf295, 0x34a0, 0xe9f9, 0x615e, 0x91fa, 0x1, 0x0);
        gbc.writeMem(0xcf4e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf295);
        EXPECT(gbc.pc(), 0xcf50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4e), 0xcb);
        EXPECT(gbc.readMem(0xcf4f), 0xc3);
        // CB C3 0181
        gbc.setState(0x133c, 0x408b, 0x88b0, 0x83e4, 0x1337, 0xc0b6, 0x1, 0x0);
        gbc.writeMem(0x133c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x408b);
        EXPECT(gbc.pc(), 0x133e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0182
        gbc.setState(0x72be, 0x55f7, 0x8780, 0x11bc, 0xb79d, 0xb452, 0x0, 0x0);
        gbc.writeMem(0x72be, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x55f7);
        EXPECT(gbc.pc(), 0x72c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0183
        gbc.setState(0x58ee, 0x115, 0xfee0, 0x931d, 0xc01d, 0x30f0, 0x0, 0x1);
        gbc.writeMem(0x58ee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x115);
        EXPECT(gbc.pc(), 0x58f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0184
        gbc.setState(0xeb8e, 0x2cf1, 0x1cb0, 0x75a6, 0xba3e, 0x373d, 0x0, 0x1);
        gbc.writeMem(0xeb8e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2cf1);
        EXPECT(gbc.pc(), 0xeb90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb8e), 0xcb);
        EXPECT(gbc.readMem(0xeb8f), 0xc3);
        // CB C3 0185
        gbc.setState(0xcdb6, 0x24e0, 0xb400, 0x13e2, 0x78e1, 0xa6f0, 0x1, 0x0);
        gbc.writeMem(0xcdb6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x24e0);
        EXPECT(gbc.pc(), 0xcdb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdb6), 0xcb);
        EXPECT(gbc.readMem(0xcdb7), 0xc3);
        // CB C3 0186
        gbc.setState(0xe6a3, 0xf99, 0x4d90, 0x794b, 0x89bb, 0x4f89, 0x1, 0x0);
        gbc.writeMem(0xe6a3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf99);
        EXPECT(gbc.pc(), 0xe6a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a3), 0xcb);
        EXPECT(gbc.readMem(0xe6a4), 0xc3);
        // CB C3 0187
        gbc.setState(0xf1c, 0x5f05, 0x9e70, 0xe3a8, 0xd0ea, 0xc933, 0x0, 0x0);
        gbc.writeMem(0xf1c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x5f05);
        EXPECT(gbc.pc(), 0xf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0188
        gbc.setState(0x4df3, 0xe00d, 0xab90, 0x9d61, 0x20fb, 0x670b, 0x0, 0x1);
        gbc.writeMem(0x4df3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe00d);
        EXPECT(gbc.pc(), 0x4df5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0189
        gbc.setState(0xee57, 0x41a2, 0x3970, 0xa988, 0x7485, 0x3966, 0x1, 0x0);
        gbc.writeMem(0xee57, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x41a2);
        EXPECT(gbc.pc(), 0xee59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee57), 0xcb);
        EXPECT(gbc.readMem(0xee58), 0xc3);
        // CB C3 018A
        gbc.setState(0xe541, 0x9281, 0x6de0, 0x266f, 0x87d, 0xba05, 0x0, 0x0);
        gbc.writeMem(0xe541, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9281);
        EXPECT(gbc.pc(), 0xe543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe541), 0xcb);
        EXPECT(gbc.readMem(0xe542), 0xc3);
        // CB C3 018B
        gbc.setState(0x8891, 0x5584, 0x6aa0, 0xab7, 0x57eb, 0x24ea, 0x1, 0x1);
        gbc.writeMem(0x8891, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5584);
        EXPECT(gbc.pc(), 0x8893);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8891), 0xcb);
        EXPECT(gbc.readMem(0x8892), 0xc3);
        // CB C3 018C
        gbc.setState(0x1441, 0xf8e0, 0xbd60, 0x37ca, 0x7654, 0x607, 0x1, 0x0);
        gbc.writeMem(0x1441, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf8e0);
        EXPECT(gbc.pc(), 0x1443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 018D
        gbc.setState(0x73cb, 0xe756, 0xa1d0, 0x2931, 0x88d0, 0x61fc, 0x1, 0x1);
        gbc.writeMem(0x73cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe756);
        EXPECT(gbc.pc(), 0x73cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 018E
        gbc.setState(0x955a, 0x5bee, 0x1ce0, 0xe85c, 0xe385, 0xaf09, 0x0, 0x1);
        gbc.writeMem(0x955a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5bee);
        EXPECT(gbc.pc(), 0x955c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x955a), 0xcb);
        EXPECT(gbc.readMem(0x955b), 0xc3);
        // CB C3 018F
        gbc.setState(0x8b36, 0x128c, 0x6b00, 0x4e1e, 0x9d4a, 0x3974, 0x0, 0x1);
        gbc.writeMem(0x8b36, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x128c);
        EXPECT(gbc.pc(), 0x8b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b36), 0xcb);
        EXPECT(gbc.readMem(0x8b37), 0xc3);
        // CB C3 0190
        gbc.setState(0xa5f2, 0x5275, 0xd270, 0x6743, 0x2c4, 0xfb92, 0x1, 0x0);
        gbc.writeMem(0xa5f2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5275);
        EXPECT(gbc.pc(), 0xa5f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f2), 0xcb);
        EXPECT(gbc.readMem(0xa5f3), 0xc3);
        // CB C3 0191
        gbc.setState(0x5002, 0x5106, 0x69b0, 0x788a, 0xe048, 0x943e, 0x0, 0x1);
        gbc.writeMem(0x5002, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5106);
        EXPECT(gbc.pc(), 0x5004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0192
        gbc.setState(0x6cf4, 0x1602, 0x5c40, 0xe324, 0xab39, 0xeb8e, 0x0, 0x0);
        gbc.writeMem(0x6cf4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1602);
        EXPECT(gbc.pc(), 0x6cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0193
        gbc.setState(0xd393, 0x1b6f, 0x6b20, 0x324a, 0x269e, 0x5b0e, 0x1, 0x0);
        gbc.writeMem(0xd393, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1b6f);
        EXPECT(gbc.pc(), 0xd395);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd393), 0xcb);
        EXPECT(gbc.readMem(0xd394), 0xc3);
        // CB C3 0194
        gbc.setState(0x662, 0x70e8, 0x5a00, 0x93b2, 0x9020, 0xa754, 0x0, 0x0);
        gbc.writeMem(0x662, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x70e8);
        EXPECT(gbc.pc(), 0x664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0195
        gbc.setState(0x329d, 0x8336, 0x6a20, 0xce58, 0x550c, 0x340c, 0x1, 0x1);
        gbc.writeMem(0x329d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8336);
        EXPECT(gbc.pc(), 0x329f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0196
        gbc.setState(0x8eff, 0x1dc9, 0xba80, 0x1a5, 0x343b, 0x7890, 0x1, 0x0);
        gbc.writeMem(0x8eff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1dc9);
        EXPECT(gbc.pc(), 0x8f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eff), 0xcb);
        EXPECT(gbc.readMem(0x8f00), 0xc3);
        // CB C3 0197
        gbc.setState(0xd785, 0xed34, 0xc70, 0xb6ac, 0xb21a, 0x751b, 0x1, 0x1);
        gbc.writeMem(0xd785, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xed34);
        EXPECT(gbc.pc(), 0xd787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd785), 0xcb);
        EXPECT(gbc.readMem(0xd786), 0xc3);
        // CB C3 0198
        gbc.setState(0xadcc, 0x6c1, 0x5f40, 0x1e4e, 0x8b67, 0x88a1, 0x1, 0x1);
        gbc.writeMem(0xadcc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6c1);
        EXPECT(gbc.pc(), 0xadce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadcc), 0xcb);
        EXPECT(gbc.readMem(0xadcd), 0xc3);
        // CB C3 0199
        gbc.setState(0x8759, 0xbd9e, 0xc3b0, 0xb86, 0xbb94, 0xc7bc, 0x1, 0x1);
        gbc.writeMem(0x8759, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbd9e);
        EXPECT(gbc.pc(), 0x875b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8759), 0xcb);
        EXPECT(gbc.readMem(0x875a), 0xc3);
        // CB C3 019A
        gbc.setState(0x21e6, 0x4a27, 0xf750, 0x710b, 0x6438, 0x55c2, 0x1, 0x0);
        gbc.writeMem(0x21e6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4a27);
        EXPECT(gbc.pc(), 0x21e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 019B
        gbc.setState(0x7a1a, 0x2eab, 0x38e0, 0xd994, 0x6ffc, 0x8283, 0x0, 0x0);
        gbc.writeMem(0x7a1a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2eab);
        EXPECT(gbc.pc(), 0x7a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 019C
        gbc.setState(0xc8cc, 0x5abb, 0x51c0, 0x900e, 0x6df1, 0xa67c, 0x0, 0x0);
        gbc.writeMem(0xc8cc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5abb);
        EXPECT(gbc.pc(), 0xc8ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8cc), 0xcb);
        EXPECT(gbc.readMem(0xc8cd), 0xc3);
        // CB C3 019D
        gbc.setState(0x6245, 0xe791, 0x4d70, 0xa548, 0x645f, 0x4599, 0x0, 0x1);
        gbc.writeMem(0x6245, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe791);
        EXPECT(gbc.pc(), 0x6247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 019E
        gbc.setState(0x2d77, 0x17a4, 0x7490, 0xc84, 0xf6cf, 0xe35d, 0x0, 0x1);
        gbc.writeMem(0x2d77, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x17a4);
        EXPECT(gbc.pc(), 0x2d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 019F
        gbc.setState(0x70bc, 0xc540, 0x38b0, 0xf148, 0x639b, 0xca50, 0x0, 0x1);
        gbc.writeMem(0x70bc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc540);
        EXPECT(gbc.pc(), 0x70be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01A0
        gbc.setState(0x44ad, 0x67c4, 0xda30, 0x6ca5, 0x6ce6, 0x2074, 0x0, 0x0);
        gbc.writeMem(0x44ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x67c4);
        EXPECT(gbc.pc(), 0x44af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01A1
        gbc.setState(0xeec4, 0xff38, 0x45d0, 0xb1ef, 0x134a, 0x406b, 0x1, 0x0);
        gbc.writeMem(0xeec4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xff38);
        EXPECT(gbc.pc(), 0xeec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec4), 0xcb);
        EXPECT(gbc.readMem(0xeec5), 0xc3);
        // CB C3 01A2
        gbc.setState(0xda73, 0xac0f, 0x62d0, 0x93d5, 0x7879, 0x97b7, 0x0, 0x1);
        gbc.writeMem(0xda73, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xac0f);
        EXPECT(gbc.pc(), 0xda75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda73), 0xcb);
        EXPECT(gbc.readMem(0xda74), 0xc3);
        // CB C3 01A3
        gbc.setState(0x21c1, 0xc7ce, 0xa460, 0x1424, 0xb452, 0xb661, 0x1, 0x1);
        gbc.writeMem(0x21c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc7ce);
        EXPECT(gbc.pc(), 0x21c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01A4
        gbc.setState(0xac51, 0x81b9, 0x6220, 0xe327, 0x4595, 0x1ce0, 0x0, 0x1);
        gbc.writeMem(0xac51, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x81b9);
        EXPECT(gbc.pc(), 0xac53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac51), 0xcb);
        EXPECT(gbc.readMem(0xac52), 0xc3);
        // CB C3 01A5
        gbc.setState(0xdf5e, 0x806c, 0x9f90, 0x8bfb, 0xfb8, 0x583, 0x1, 0x1);
        gbc.writeMem(0xdf5e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x806c);
        EXPECT(gbc.pc(), 0xdf60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf5e), 0xcb);
        EXPECT(gbc.readMem(0xdf5f), 0xc3);
        // CB C3 01A6
        gbc.setState(0x3b6b, 0xf75a, 0xe890, 0x530d, 0x7927, 0x81d, 0x0, 0x1);
        gbc.writeMem(0x3b6b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf75a);
        EXPECT(gbc.pc(), 0x3b6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01A7
        gbc.setState(0x7e41, 0x212f, 0x4210, 0xeef8, 0xd945, 0x3c75, 0x1, 0x1);
        gbc.writeMem(0x7e41, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x212f);
        EXPECT(gbc.pc(), 0x7e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01A8
        gbc.setState(0x1a21, 0xf41c, 0xa960, 0xb2b0, 0x2127, 0xcbcd, 0x0, 0x0);
        gbc.writeMem(0x1a21, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf41c);
        EXPECT(gbc.pc(), 0x1a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01A9
        gbc.setState(0x5dee, 0x481f, 0x9ec0, 0x2c62, 0xfc8e, 0xf5c9, 0x0, 0x1);
        gbc.writeMem(0x5dee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x481f);
        EXPECT(gbc.pc(), 0x5df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01AA
        gbc.setState(0x9475, 0x61a4, 0xe3d0, 0xd41d, 0xc755, 0xa5c5, 0x0, 0x1);
        gbc.writeMem(0x9475, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x61a4);
        EXPECT(gbc.pc(), 0x9477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9475), 0xcb);
        EXPECT(gbc.readMem(0x9476), 0xc3);
        // CB C3 01AB
        gbc.setState(0x384e, 0x6901, 0x6af0, 0xfcbc, 0xedcf, 0x777f, 0x0, 0x0);
        gbc.writeMem(0x384e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6901);
        EXPECT(gbc.pc(), 0x3850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01AC
        gbc.setState(0x7986, 0xaa82, 0xe500, 0x8867, 0x5efc, 0xc964, 0x1, 0x1);
        gbc.writeMem(0x7986, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xaa82);
        EXPECT(gbc.pc(), 0x7988);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01AD
        gbc.setState(0x3605, 0xe347, 0xe660, 0x7229, 0x4b31, 0x752b, 0x0, 0x0);
        gbc.writeMem(0x3605, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe347);
        EXPECT(gbc.pc(), 0x3607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01AE
        gbc.setState(0x6d34, 0x9ca1, 0x30, 0xf411, 0x5f2d, 0xb8d6, 0x0, 0x1);
        gbc.writeMem(0x6d34, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9ca1);
        EXPECT(gbc.pc(), 0x6d36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01AF
        gbc.setState(0xc26c, 0x9ff1, 0xdeb0, 0xcd87, 0x52f1, 0xa83f, 0x0, 0x1);
        gbc.writeMem(0xc26c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9ff1);
        EXPECT(gbc.pc(), 0xc26e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc26c), 0xcb);
        EXPECT(gbc.readMem(0xc26d), 0xc3);
        // CB C3 01B0
        gbc.setState(0x719d, 0x68f3, 0x7230, 0x2096, 0x49cf, 0x595b, 0x0, 0x0);
        gbc.writeMem(0x719d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x68f3);
        EXPECT(gbc.pc(), 0x719f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01B1
        gbc.setState(0x5f18, 0x2f6b, 0xb560, 0x2def, 0x5223, 0xea57, 0x1, 0x0);
        gbc.writeMem(0x5f18, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2f6b);
        EXPECT(gbc.pc(), 0x5f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01B2
        gbc.setState(0xe866, 0x3113, 0xf5f0, 0x9099, 0x740c, 0xb842, 0x0, 0x1);
        gbc.writeMem(0xe866, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3113);
        EXPECT(gbc.pc(), 0xe868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe866), 0xcb);
        EXPECT(gbc.readMem(0xe867), 0xc3);
        // CB C3 01B3
        gbc.setState(0x3c52, 0xe56a, 0x27a0, 0x4543, 0xf0d9, 0xcea1, 0x0, 0x0);
        gbc.writeMem(0x3c52, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe56a);
        EXPECT(gbc.pc(), 0x3c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01B4
        gbc.setState(0x255f, 0x6291, 0x6990, 0xe2c4, 0x42d0, 0xbeb9, 0x0, 0x1);
        gbc.writeMem(0x255f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6291);
        EXPECT(gbc.pc(), 0x2561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01B5
        gbc.setState(0xb3c8, 0x2d0d, 0x57c0, 0xe60, 0x125a, 0xa75d, 0x1, 0x1);
        gbc.writeMem(0xb3c8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2d0d);
        EXPECT(gbc.pc(), 0xb3ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c8), 0xcb);
        EXPECT(gbc.readMem(0xb3c9), 0xc3);
        // CB C3 01B6
        gbc.setState(0x1355, 0xb094, 0xcc20, 0x73aa, 0x1a6c, 0xf141, 0x1, 0x0);
        gbc.writeMem(0x1355, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb094);
        EXPECT(gbc.pc(), 0x1357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01B8
        gbc.setState(0x3764, 0x5520, 0x7c00, 0x1978, 0x9dd8, 0x2770, 0x1, 0x0);
        gbc.writeMem(0x3764, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5520);
        EXPECT(gbc.pc(), 0x3766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01B9
        gbc.setState(0x788b, 0xf68b, 0x6480, 0x8f25, 0x4425, 0xeb1f, 0x0, 0x0);
        gbc.writeMem(0x788b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf68b);
        EXPECT(gbc.pc(), 0x788d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01BA
        gbc.setState(0x93e7, 0xa0d8, 0x1990, 0xbaa9, 0xd6a2, 0x438e, 0x0, 0x0);
        gbc.writeMem(0x93e7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa0d8);
        EXPECT(gbc.pc(), 0x93e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e7), 0xcb);
        EXPECT(gbc.readMem(0x93e8), 0xc3);
        // CB C3 01BB
        gbc.setState(0xde79, 0x9474, 0xe890, 0xb420, 0x8f63, 0x14cf, 0x0, 0x1);
        gbc.writeMem(0xde79, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9474);
        EXPECT(gbc.pc(), 0xde7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde79), 0xcb);
        EXPECT(gbc.readMem(0xde7a), 0xc3);
        // CB C3 01BC
        gbc.setState(0x2b83, 0xaa2f, 0xa1e0, 0xa743, 0x41e1, 0x6fe2, 0x0, 0x1);
        gbc.writeMem(0x2b83, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xaa2f);
        EXPECT(gbc.pc(), 0x2b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01BD
        gbc.setState(0x794e, 0x4d03, 0x67f0, 0x3b1d, 0x79cd, 0xe5, 0x0, 0x0);
        gbc.writeMem(0x794e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4d03);
        EXPECT(gbc.pc(), 0x7950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01BE
        gbc.setState(0xcc1, 0x96cd, 0x9a00, 0xf7f8, 0x5168, 0xb5e6, 0x0, 0x0);
        gbc.writeMem(0xcc1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x96cd);
        EXPECT(gbc.pc(), 0xcc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01BF
        gbc.setState(0xed42, 0x69fb, 0x90a0, 0x5b77, 0x1f6d, 0xdd74, 0x1, 0x1);
        gbc.writeMem(0xed42, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x69fb);
        EXPECT(gbc.pc(), 0xed44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed42), 0xcb);
        EXPECT(gbc.readMem(0xed43), 0xc3);
        // CB C3 01C0
        gbc.setState(0xb704, 0xd189, 0x6740, 0xddac, 0xffeb, 0x1144, 0x0, 0x0);
        gbc.writeMem(0xb704, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd189);
        EXPECT(gbc.pc(), 0xb706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb704), 0xcb);
        EXPECT(gbc.readMem(0xb705), 0xc3);
        // CB C3 01C1
        gbc.setState(0x48c3, 0xbd5f, 0xf480, 0xd036, 0x841, 0xfe73, 0x1, 0x1);
        gbc.writeMem(0x48c3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xbd5f);
        EXPECT(gbc.pc(), 0x48c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01C2
        gbc.setState(0x193d, 0xe6e5, 0xd970, 0x36af, 0x21de, 0x66dd, 0x1, 0x0);
        gbc.writeMem(0x193d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe6e5);
        EXPECT(gbc.pc(), 0x193f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01C3
        gbc.setState(0x6a08, 0x4f4a, 0x9b10, 0x9080, 0x8549, 0xc29c, 0x0, 0x0);
        gbc.writeMem(0x6a08, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4f4a);
        EXPECT(gbc.pc(), 0x6a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01C4
        gbc.setState(0x828f, 0x6cb0, 0xbbe0, 0x1472, 0x5eca, 0x8e17, 0x0, 0x0);
        gbc.writeMem(0x828f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6cb0);
        EXPECT(gbc.pc(), 0x8291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x828f), 0xcb);
        EXPECT(gbc.readMem(0x8290), 0xc3);
        // CB C3 01C5
        gbc.setState(0xded5, 0xcf55, 0x8c00, 0xe8b1, 0x27bb, 0xfb14, 0x0, 0x1);
        gbc.writeMem(0xded5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcf55);
        EXPECT(gbc.pc(), 0xded7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xded5), 0xcb);
        EXPECT(gbc.readMem(0xded6), 0xc3);
        // CB C3 01C6
        gbc.setState(0x6600, 0x648f, 0x9d0, 0xbb51, 0xa1e5, 0x650c, 0x0, 0x1);
        gbc.writeMem(0x6600, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x648f);
        EXPECT(gbc.pc(), 0x6602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01C7
        gbc.setState(0x1ef8, 0x7b83, 0xbd40, 0xfcba, 0x5661, 0xa22e, 0x1, 0x1);
        gbc.writeMem(0x1ef8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7b83);
        EXPECT(gbc.pc(), 0x1efa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01C8
        gbc.setState(0x8a2b, 0x7c7d, 0x9f20, 0x8d88, 0x6752, 0xebe3, 0x0, 0x0);
        gbc.writeMem(0x8a2b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7c7d);
        EXPECT(gbc.pc(), 0x8a2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2b), 0xcb);
        EXPECT(gbc.readMem(0x8a2c), 0xc3);
        // CB C3 01C9
        gbc.setState(0x8685, 0x94c3, 0x6700, 0x9f40, 0xe242, 0x38a7, 0x0, 0x0);
        gbc.writeMem(0x8685, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x94c3);
        EXPECT(gbc.pc(), 0x8687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8685), 0xcb);
        EXPECT(gbc.readMem(0x8686), 0xc3);
        // CB C3 01CA
        gbc.setState(0xd77d, 0xb687, 0xaed0, 0x5358, 0x144b, 0xd609, 0x1, 0x1);
        gbc.writeMem(0xd77d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb687);
        EXPECT(gbc.pc(), 0xd77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd77d), 0xcb);
        EXPECT(gbc.readMem(0xd77e), 0xc3);
        // CB C3 01CB
        gbc.setState(0x4be1, 0xab25, 0x23e0, 0x6f81, 0xfcad, 0xb6ce, 0x1, 0x0);
        gbc.writeMem(0x4be1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xab25);
        EXPECT(gbc.pc(), 0x4be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01CC
        gbc.setState(0xc047, 0x3e2e, 0xf780, 0x5009, 0x72f9, 0x75f7, 0x1, 0x1);
        gbc.writeMem(0xc047, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3e2e);
        EXPECT(gbc.pc(), 0xc049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc047), 0xcb);
        EXPECT(gbc.readMem(0xc048), 0xc3);
        // CB C3 01CD
        gbc.setState(0x28a2, 0xa28b, 0x96e0, 0x44dd, 0xe0da, 0x5048, 0x0, 0x0);
        gbc.writeMem(0x28a2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa28b);
        EXPECT(gbc.pc(), 0x28a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01CE
        gbc.setState(0xaafe, 0x551d, 0xdf30, 0xb1f7, 0x189f, 0x9488, 0x1, 0x0);
        gbc.writeMem(0xaafe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x551d);
        EXPECT(gbc.pc(), 0xab00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaafe), 0xcb);
        EXPECT(gbc.readMem(0xaaff), 0xc3);
        // CB C3 01CF
        gbc.setState(0x63ee, 0xcb92, 0xa560, 0xebe4, 0x9d9d, 0x8450, 0x1, 0x0);
        gbc.writeMem(0x63ee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcb92);
        EXPECT(gbc.pc(), 0x63f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01D0
        gbc.setState(0x7881, 0xc4e0, 0xbbe0, 0x322d, 0x4c98, 0xf0d4, 0x0, 0x1);
        gbc.writeMem(0x7881, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc4e0);
        EXPECT(gbc.pc(), 0x7883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01D1
        gbc.setState(0x77c5, 0x861b, 0x31c0, 0xe1f0, 0xd6c, 0x293e, 0x0, 0x1);
        gbc.writeMem(0x77c5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x861b);
        EXPECT(gbc.pc(), 0x77c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01D2
        gbc.setState(0x6fe1, 0xe7e2, 0x1060, 0xe8a3, 0xed7c, 0x5a9a, 0x1, 0x1);
        gbc.writeMem(0x6fe1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe7e2);
        EXPECT(gbc.pc(), 0x6fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01D3
        gbc.setState(0xa97, 0x7499, 0x5300, 0x31a4, 0xb4b0, 0xe480, 0x1, 0x1);
        gbc.writeMem(0xa97, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7499);
        EXPECT(gbc.pc(), 0xa99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01D4
        gbc.setState(0x5313, 0xc5df, 0x6df0, 0xb0e0, 0x8b6f, 0x169, 0x1, 0x0);
        gbc.writeMem(0x5313, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc5df);
        EXPECT(gbc.pc(), 0x5315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01D5
        gbc.setState(0xdadc, 0x412c, 0x9660, 0x25b2, 0x5e28, 0xc9b3, 0x0, 0x0);
        gbc.writeMem(0xdadc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x412c);
        EXPECT(gbc.pc(), 0xdade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdadc), 0xcb);
        EXPECT(gbc.readMem(0xdadd), 0xc3);
        // CB C3 01D6
        gbc.setState(0x2a1a, 0xc11b, 0xcb00, 0x2808, 0x8d1e, 0x43b8, 0x1, 0x1);
        gbc.writeMem(0x2a1a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc11b);
        EXPECT(gbc.pc(), 0x2a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01D7
        gbc.setState(0xa990, 0x7d85, 0xa550, 0x8020, 0x7a79, 0x7525, 0x0, 0x1);
        gbc.writeMem(0xa990, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7d85);
        EXPECT(gbc.pc(), 0xa992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa990), 0xcb);
        EXPECT(gbc.readMem(0xa991), 0xc3);
        // CB C3 01D8
        gbc.setState(0x275, 0xd9b8, 0x36f0, 0xa1ed, 0xe462, 0x8301, 0x0, 0x1);
        gbc.writeMem(0x275, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd9b8);
        EXPECT(gbc.pc(), 0x277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01D9
        gbc.setState(0x4192, 0xa3ed, 0x8f20, 0xd5d6, 0x5b58, 0x2460, 0x1, 0x0);
        gbc.writeMem(0x4192, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa3ed);
        EXPECT(gbc.pc(), 0x4194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01DA
        gbc.setState(0xa0de, 0x61be, 0x7390, 0x1b5a, 0x367e, 0x86df, 0x0, 0x1);
        gbc.writeMem(0xa0de, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x61be);
        EXPECT(gbc.pc(), 0xa0e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0de), 0xcb);
        EXPECT(gbc.readMem(0xa0df), 0xc3);
        // CB C3 01DB
        gbc.setState(0x5415, 0x8680, 0x2fc0, 0x8ca5, 0x7b75, 0x8ef2, 0x1, 0x0);
        gbc.writeMem(0x5415, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8680);
        EXPECT(gbc.pc(), 0x5417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01DC
        gbc.setState(0x36a6, 0x27ad, 0x6b70, 0x7ecf, 0x5a6b, 0x5b7e, 0x0, 0x1);
        gbc.writeMem(0x36a6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x27ad);
        EXPECT(gbc.pc(), 0x36a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01DD
        gbc.setState(0x9610, 0xe58f, 0x7440, 0x2340, 0x7ef8, 0x1555, 0x0, 0x0);
        gbc.writeMem(0x9610, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe58f);
        EXPECT(gbc.pc(), 0x9612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9610), 0xcb);
        EXPECT(gbc.readMem(0x9611), 0xc3);
        // CB C3 01DF
        gbc.setState(0xc8e8, 0x6366, 0x3060, 0x8ce3, 0x5f1d, 0x7dff, 0x1, 0x0);
        gbc.writeMem(0xc8e8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6366);
        EXPECT(gbc.pc(), 0xc8ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e8), 0xcb);
        EXPECT(gbc.readMem(0xc8e9), 0xc3);
        // CB C3 01E0
        gbc.setState(0xbbb4, 0xf8f9, 0x4200, 0x523a, 0x92d6, 0xbec2, 0x1, 0x1);
        gbc.writeMem(0xbbb4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf8f9);
        EXPECT(gbc.pc(), 0xbbb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb4), 0xcb);
        EXPECT(gbc.readMem(0xbbb5), 0xc3);
        // CB C3 01E1
        gbc.setState(0x767f, 0x29ee, 0xbe00, 0x7862, 0x458b, 0x68fb, 0x1, 0x1);
        gbc.writeMem(0x767f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x29ee);
        EXPECT(gbc.pc(), 0x7681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01E2
        gbc.setState(0x6beb, 0xe98b, 0x3f40, 0x11ff, 0xa9c6, 0x3fa, 0x1, 0x1);
        gbc.writeMem(0x6beb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe98b);
        EXPECT(gbc.pc(), 0x6bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01E3
        gbc.setState(0xe629, 0x7ab0, 0x6ae0, 0xd0f9, 0xeaf9, 0x3aa5, 0x1, 0x0);
        gbc.writeMem(0xe629, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7ab0);
        EXPECT(gbc.pc(), 0xe62b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe629), 0xcb);
        EXPECT(gbc.readMem(0xe62a), 0xc3);
        // CB C3 01E4
        gbc.setState(0x690f, 0xd018, 0x2e70, 0x836e, 0x4216, 0x1f8c, 0x1, 0x1);
        gbc.writeMem(0x690f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd018);
        EXPECT(gbc.pc(), 0x6911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01E5
        gbc.setState(0xc920, 0x9e3b, 0x79e0, 0x1817, 0x4b1, 0x4d64, 0x0, 0x1);
        gbc.writeMem(0xc920, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9e3b);
        EXPECT(gbc.pc(), 0xc922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc920), 0xcb);
        EXPECT(gbc.readMem(0xc921), 0xc3);
        // CB C3 01E6
        gbc.setState(0xe6e3, 0x2610, 0xa0e0, 0x7f3e, 0xd259, 0x8d18, 0x0, 0x0);
        gbc.writeMem(0xe6e3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2610);
        EXPECT(gbc.pc(), 0xe6e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e3), 0xcb);
        EXPECT(gbc.readMem(0xe6e4), 0xc3);
        // CB C3 01E7
        gbc.setState(0xfc6, 0x5935, 0x3f10, 0xc146, 0x58a1, 0x779e, 0x1, 0x0);
        gbc.writeMem(0xfc6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5935);
        EXPECT(gbc.pc(), 0xfc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01E8
        gbc.setState(0x2fc, 0x2ee9, 0x94f0, 0x2df0, 0xb6b1, 0x7e40, 0x1, 0x1);
        gbc.writeMem(0x2fc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2ee9);
        EXPECT(gbc.pc(), 0x2fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01E9
        gbc.setState(0x712a, 0xdbe, 0xb930, 0xdd86, 0xe481, 0x94d9, 0x0, 0x1);
        gbc.writeMem(0x712a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xdbe);
        EXPECT(gbc.pc(), 0x712c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01EA
        gbc.setState(0x5474, 0x2956, 0x11d0, 0xa2fe, 0xd2bd, 0xd7b6, 0x0, 0x0);
        gbc.writeMem(0x5474, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2956);
        EXPECT(gbc.pc(), 0x5476);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01EB
        gbc.setState(0x412b, 0x8eaf, 0x1410, 0x10e, 0xcd91, 0xea27, 0x1, 0x0);
        gbc.writeMem(0x412b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8eaf);
        EXPECT(gbc.pc(), 0x412d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01EC
        gbc.setState(0xb5fc, 0x7b82, 0xfc00, 0x3cbb, 0x12d7, 0x5247, 0x1, 0x1);
        gbc.writeMem(0xb5fc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7b82);
        EXPECT(gbc.pc(), 0xb5fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5fc), 0xcb);
        EXPECT(gbc.readMem(0xb5fd), 0xc3);
        // CB C3 01ED
        gbc.setState(0x8980, 0xcebb, 0x6d10, 0xad65, 0x60a5, 0x5da7, 0x1, 0x0);
        gbc.writeMem(0x8980, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcebb);
        EXPECT(gbc.pc(), 0x8982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8980), 0xcb);
        EXPECT(gbc.readMem(0x8981), 0xc3);
        // CB C3 01EE
        gbc.setState(0xe696, 0xc215, 0xa340, 0x84fc, 0x118e, 0xdf78, 0x0, 0x1);
        gbc.writeMem(0xe696, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc215);
        EXPECT(gbc.pc(), 0xe698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe696), 0xcb);
        EXPECT(gbc.readMem(0xe697), 0xc3);
        // CB C3 01EF
        gbc.setState(0x34f, 0xc05d, 0xf70, 0x79a9, 0x2fb5, 0x5d48, 0x1, 0x1);
        gbc.writeMem(0x34f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc05d);
        EXPECT(gbc.pc(), 0x351);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01F0
        gbc.setState(0x4cfc, 0x5531, 0x140, 0x33d6, 0xb860, 0x1ad2, 0x1, 0x1);
        gbc.writeMem(0x4cfc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5531);
        EXPECT(gbc.pc(), 0x4cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01F1
        gbc.setState(0x9e69, 0x8bc6, 0xf310, 0xaa0b, 0xbb3f, 0x87a2, 0x1, 0x0);
        gbc.writeMem(0x9e69, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8bc6);
        EXPECT(gbc.pc(), 0x9e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e69), 0xcb);
        EXPECT(gbc.readMem(0x9e6a), 0xc3);
        // CB C3 01F4
        gbc.setState(0x769, 0xd8aa, 0xae00, 0x3303, 0x869d, 0xbcd0, 0x0, 0x0);
        gbc.writeMem(0x769, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd8aa);
        EXPECT(gbc.pc(), 0x76b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01F5
        gbc.setState(0x957c, 0x8a64, 0x4a40, 0xa6b8, 0xbd70, 0xee8b, 0x1, 0x1);
        gbc.writeMem(0x957c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8a64);
        EXPECT(gbc.pc(), 0x957e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x957c), 0xcb);
        EXPECT(gbc.readMem(0x957d), 0xc3);
        // CB C3 01F6
        gbc.setState(0x4004, 0x659c, 0x6d60, 0x8495, 0x4f70, 0x1747, 0x0, 0x0);
        gbc.writeMem(0x4004, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x659c);
        EXPECT(gbc.pc(), 0x4006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01F7
        gbc.setState(0x65e0, 0xfd5, 0xe9f0, 0x156e, 0xe50e, 0x3bce, 0x1, 0x1);
        gbc.writeMem(0x65e0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfd5);
        EXPECT(gbc.pc(), 0x65e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01F8
        gbc.setState(0x15b8, 0xfdec, 0x9cc0, 0xfd5f, 0xcc25, 0xfc0, 0x0, 0x1);
        gbc.writeMem(0x15b8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfdec);
        EXPECT(gbc.pc(), 0x15ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01F9
        gbc.setState(0xc79d, 0xba97, 0x64b0, 0x4208, 0x642b, 0xef29, 0x1, 0x1);
        gbc.writeMem(0xc79d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xba97);
        EXPECT(gbc.pc(), 0xc79f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc79d), 0xcb);
        EXPECT(gbc.readMem(0xc79e), 0xc3);
        // CB C3 01FA
        gbc.setState(0x88c0, 0x90b3, 0x7c70, 0x5baf, 0x25dc, 0x91d3, 0x1, 0x0);
        gbc.writeMem(0x88c0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x90b3);
        EXPECT(gbc.pc(), 0x88c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c0), 0xcb);
        EXPECT(gbc.readMem(0x88c1), 0xc3);
        // CB C3 01FC
        gbc.setState(0xdba7, 0x9306, 0xfad0, 0x1690, 0x53d4, 0x11f5, 0x1, 0x0);
        gbc.writeMem(0xdba7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9306);
        EXPECT(gbc.pc(), 0xdba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba7), 0xcb);
        EXPECT(gbc.readMem(0xdba8), 0xc3);
        // CB C3 01FD
        gbc.setState(0x33f5, 0xf5ec, 0x3ab0, 0xc82, 0x8713, 0x3dff, 0x1, 0x1);
        gbc.writeMem(0x33f5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf5ec);
        EXPECT(gbc.pc(), 0x33f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 01FE
        gbc.setState(0x5900, 0x5640, 0xf2a0, 0x1b28, 0x7327, 0x6dc2, 0x0, 0x0);
        gbc.writeMem(0x5900, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5640);
        EXPECT(gbc.pc(), 0x5902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 01FF
        gbc.setState(0xbad9, 0x2ec0, 0x2950, 0xbc72, 0xac55, 0x3f4f, 0x0, 0x1);
        gbc.writeMem(0xbad9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2ec0);
        EXPECT(gbc.pc(), 0xbadb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad9), 0xcb);
        EXPECT(gbc.readMem(0xbada), 0xc3);
        // CB C3 0200
        gbc.setState(0x2fd8, 0xc254, 0x9b40, 0x58a9, 0xbd56, 0xc264, 0x0, 0x1);
        gbc.writeMem(0x2fd8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc254);
        EXPECT(gbc.pc(), 0x2fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0201
        gbc.setState(0x7cce, 0xc2a, 0xcbe0, 0x381e, 0xce06, 0xc5ca, 0x1, 0x1);
        gbc.writeMem(0x7cce, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xc2a);
        EXPECT(gbc.pc(), 0x7cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0202
        gbc.setState(0x49a4, 0x3150, 0x4240, 0xcbd, 0xd5b2, 0x996f, 0x1, 0x0);
        gbc.writeMem(0x49a4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3150);
        EXPECT(gbc.pc(), 0x49a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0203
        gbc.setState(0x84b, 0xda9a, 0x5d00, 0x8152, 0xca54, 0x462e, 0x1, 0x0);
        gbc.writeMem(0x84b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xda9a);
        EXPECT(gbc.pc(), 0x84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0204
        gbc.setState(0xce5d, 0x92f9, 0x3fa0, 0x491b, 0x6614, 0x9029, 0x1, 0x1);
        gbc.writeMem(0xce5d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x92f9);
        EXPECT(gbc.pc(), 0xce5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce5d), 0xcb);
        EXPECT(gbc.readMem(0xce5e), 0xc3);
        // CB C3 0205
        gbc.setState(0x565e, 0x388f, 0x6600, 0xf44d, 0xbb8b, 0x2e21, 0x0, 0x0);
        gbc.writeMem(0x565e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x388f);
        EXPECT(gbc.pc(), 0x5660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0206
        gbc.setState(0x4df5, 0x71b0, 0xc210, 0xb35a, 0xb7d1, 0x264e, 0x0, 0x0);
        gbc.writeMem(0x4df5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x71b0);
        EXPECT(gbc.pc(), 0x4df7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0207
        gbc.setState(0x9705, 0x5f0a, 0xfc60, 0x8750, 0xc621, 0xf60e, 0x1, 0x0);
        gbc.writeMem(0x9705, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5f0a);
        EXPECT(gbc.pc(), 0x9707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9705), 0xcb);
        EXPECT(gbc.readMem(0x9706), 0xc3);
        // CB C3 0208
        gbc.setState(0x91a0, 0xe804, 0xb70, 0xd03b, 0xdc36, 0x8371, 0x0, 0x0);
        gbc.writeMem(0x91a0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe804);
        EXPECT(gbc.pc(), 0x91a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a0), 0xcb);
        EXPECT(gbc.readMem(0x91a1), 0xc3);
        // CB C3 0209
        gbc.setState(0x60f9, 0xb3bf, 0x9f90, 0x5a75, 0x49c7, 0x6236, 0x1, 0x1);
        gbc.writeMem(0x60f9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb3bf);
        EXPECT(gbc.pc(), 0x60fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 020A
        gbc.setState(0xa055, 0x39a3, 0xb980, 0x1c15, 0x7fbf, 0xe642, 0x0, 0x0);
        gbc.writeMem(0xa055, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x39a3);
        EXPECT(gbc.pc(), 0xa057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa055), 0xcb);
        EXPECT(gbc.readMem(0xa056), 0xc3);
        // CB C3 020C
        gbc.setState(0x3e82, 0x531c, 0xe9d0, 0xe41b, 0x5bba, 0x939f, 0x1, 0x1);
        gbc.writeMem(0x3e82, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x531c);
        EXPECT(gbc.pc(), 0x3e84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 020D
        gbc.setState(0x9e0e, 0xce47, 0x27c0, 0x6eb1, 0x6f85, 0xe175, 0x1, 0x1);
        gbc.writeMem(0x9e0e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xce47);
        EXPECT(gbc.pc(), 0x9e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e0e), 0xcb);
        EXPECT(gbc.readMem(0x9e0f), 0xc3);
        // CB C3 020F
        gbc.setState(0x488a, 0xc58b, 0x91c0, 0xabcb, 0x7aa, 0xab52, 0x0, 0x1);
        gbc.writeMem(0x488a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc58b);
        EXPECT(gbc.pc(), 0x488c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0210
        gbc.setState(0xb159, 0x89c3, 0x8ff0, 0x28ed, 0x8dd6, 0x8b9f, 0x1, 0x1);
        gbc.writeMem(0xb159, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x89c3);
        EXPECT(gbc.pc(), 0xb15b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb159), 0xcb);
        EXPECT(gbc.readMem(0xb15a), 0xc3);
        // CB C3 0211
        gbc.setState(0xd0c8, 0x99ef, 0x6600, 0xf609, 0xc796, 0xa43, 0x0, 0x0);
        gbc.writeMem(0xd0c8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x99ef);
        EXPECT(gbc.pc(), 0xd0ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c8), 0xcb);
        EXPECT(gbc.readMem(0xd0c9), 0xc3);
        // CB C3 0212
        gbc.setState(0x8022, 0xa3b, 0x2b80, 0xf1c9, 0xc331, 0x63ca, 0x1, 0x1);
        gbc.writeMem(0x8022, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa3b);
        EXPECT(gbc.pc(), 0x8024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8022), 0xcb);
        EXPECT(gbc.readMem(0x8023), 0xc3);
        // CB C3 0213
        gbc.setState(0xbac9, 0xf8b9, 0x6ad0, 0xfcff, 0x6099, 0xe7df, 0x1, 0x1);
        gbc.writeMem(0xbac9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf8b9);
        EXPECT(gbc.pc(), 0xbacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac9), 0xcb);
        EXPECT(gbc.readMem(0xbaca), 0xc3);
        // CB C3 0214
        gbc.setState(0xe6c9, 0x3356, 0xe470, 0xec57, 0x67a6, 0xde54, 0x1, 0x0);
        gbc.writeMem(0xe6c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3356);
        EXPECT(gbc.pc(), 0xe6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c9), 0xcb);
        EXPECT(gbc.readMem(0xe6ca), 0xc3);
        // CB C3 0215
        gbc.setState(0x38d9, 0x1dce, 0x2c20, 0x2c27, 0xd53a, 0x8502, 0x0, 0x1);
        gbc.writeMem(0x38d9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1dce);
        EXPECT(gbc.pc(), 0x38db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0216
        gbc.setState(0xcef2, 0x1ee5, 0x13b0, 0xf1d7, 0xb253, 0x5a23, 0x0, 0x0);
        gbc.writeMem(0xcef2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1ee5);
        EXPECT(gbc.pc(), 0xcef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcef2), 0xcb);
        EXPECT(gbc.readMem(0xcef3), 0xc3);
        // CB C3 0217
        gbc.setState(0xcd20, 0x1489, 0x8af0, 0xc4e8, 0xdfc7, 0xf293, 0x0, 0x0);
        gbc.writeMem(0xcd20, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1489);
        EXPECT(gbc.pc(), 0xcd22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd20), 0xcb);
        EXPECT(gbc.readMem(0xcd21), 0xc3);
        // CB C3 0218
        gbc.setState(0xb7d5, 0xc004, 0xd60, 0x608, 0x9a8f, 0xbcb4, 0x1, 0x0);
        gbc.writeMem(0xb7d5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc004);
        EXPECT(gbc.pc(), 0xb7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d5), 0xcb);
        EXPECT(gbc.readMem(0xb7d6), 0xc3);
        // CB C3 0219
        gbc.setState(0x92e9, 0x7d8c, 0x6ca0, 0x210b, 0xe99c, 0x72fa, 0x1, 0x0);
        gbc.writeMem(0x92e9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7d8c);
        EXPECT(gbc.pc(), 0x92eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e9), 0xcb);
        EXPECT(gbc.readMem(0x92ea), 0xc3);
        // CB C3 021A
        gbc.setState(0x9d0b, 0xf818, 0x1040, 0x29f7, 0x539, 0xb1e8, 0x1, 0x1);
        gbc.writeMem(0x9d0b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf818);
        EXPECT(gbc.pc(), 0x9d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d0b), 0xcb);
        EXPECT(gbc.readMem(0x9d0c), 0xc3);
        // CB C3 021B
        gbc.setState(0xbd25, 0x640f, 0x54a0, 0xdad9, 0x41fa, 0x940b, 0x1, 0x1);
        gbc.writeMem(0xbd25, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x640f);
        EXPECT(gbc.pc(), 0xbd27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd25), 0xcb);
        EXPECT(gbc.readMem(0xbd26), 0xc3);
        // CB C3 021C
        gbc.setState(0x9cbd, 0x96c2, 0x6410, 0x692a, 0xf06e, 0x2c09, 0x1, 0x1);
        gbc.writeMem(0x9cbd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x96c2);
        EXPECT(gbc.pc(), 0x9cbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cbd), 0xcb);
        EXPECT(gbc.readMem(0x9cbe), 0xc3);
        // CB C3 021D
        gbc.setState(0x8d9c, 0xe2b9, 0x62d0, 0x4a65, 0x4130, 0xe6c2, 0x0, 0x0);
        gbc.writeMem(0x8d9c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe2b9);
        EXPECT(gbc.pc(), 0x8d9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d9c), 0xcb);
        EXPECT(gbc.readMem(0x8d9d), 0xc3);
        // CB C3 021E
        gbc.setState(0xc14c, 0x5ce0, 0xa850, 0x6939, 0x7bb3, 0xa95e, 0x1, 0x1);
        gbc.writeMem(0xc14c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5ce0);
        EXPECT(gbc.pc(), 0xc14e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc14c), 0xcb);
        EXPECT(gbc.readMem(0xc14d), 0xc3);
        // CB C3 021F
        gbc.setState(0xcee0, 0x5238, 0xbb00, 0xdc86, 0x45e9, 0x4294, 0x0, 0x0);
        gbc.writeMem(0xcee0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5238);
        EXPECT(gbc.pc(), 0xcee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee0), 0xcb);
        EXPECT(gbc.readMem(0xcee1), 0xc3);
        // CB C3 0220
        gbc.setState(0xb699, 0x3f3, 0x5440, 0xcd56, 0x1883, 0x53d9, 0x0, 0x1);
        gbc.writeMem(0xb699, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3f3);
        EXPECT(gbc.pc(), 0xb69b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb699), 0xcb);
        EXPECT(gbc.readMem(0xb69a), 0xc3);
        // CB C3 0221
        gbc.setState(0x4a25, 0xe522, 0x92e0, 0xaa03, 0x1723, 0xd1b3, 0x1, 0x1);
        gbc.writeMem(0x4a25, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe522);
        EXPECT(gbc.pc(), 0x4a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0222
        gbc.setState(0x9da4, 0xe9b5, 0x17c0, 0xe359, 0xfc7, 0xda16, 0x0, 0x1);
        gbc.writeMem(0x9da4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe9b5);
        EXPECT(gbc.pc(), 0x9da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da4), 0xcb);
        EXPECT(gbc.readMem(0x9da5), 0xc3);
        // CB C3 0224
        gbc.setState(0x80e0, 0x5e55, 0x95e0, 0x9242, 0x687, 0x3398, 0x1, 0x0);
        gbc.writeMem(0x80e0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5e55);
        EXPECT(gbc.pc(), 0x80e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e0), 0xcb);
        EXPECT(gbc.readMem(0x80e1), 0xc3);
        // CB C3 0225
        gbc.setState(0xba31, 0x71e, 0xa960, 0xfd71, 0x91b2, 0x3771, 0x0, 0x1);
        gbc.writeMem(0xba31, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x71e);
        EXPECT(gbc.pc(), 0xba33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba31), 0xcb);
        EXPECT(gbc.readMem(0xba32), 0xc3);
        // CB C3 0226
        gbc.setState(0xbad, 0x9ec1, 0xaf70, 0xb704, 0x4a13, 0x1593, 0x1, 0x0);
        gbc.writeMem(0xbad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9ec1);
        EXPECT(gbc.pc(), 0xbaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0227
        gbc.setState(0x496b, 0x6d1f, 0x5670, 0x5ffc, 0x7d20, 0x91bb, 0x1, 0x1);
        gbc.writeMem(0x496b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6d1f);
        EXPECT(gbc.pc(), 0x496d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0228
        gbc.setState(0x493, 0x35d9, 0x7630, 0xee, 0xae62, 0x8bc5, 0x1, 0x1);
        gbc.writeMem(0x493, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x35d9);
        EXPECT(gbc.pc(), 0x495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0229
        gbc.setState(0x572c, 0x8ee6, 0xcfb0, 0x4f60, 0xc9cb, 0x7592, 0x0, 0x0);
        gbc.writeMem(0x572c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8ee6);
        EXPECT(gbc.pc(), 0x572e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 022A
        gbc.setState(0xc388, 0x371b, 0x75b0, 0x69e9, 0xdd6e, 0xe678, 0x0, 0x0);
        gbc.writeMem(0xc388, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x371b);
        EXPECT(gbc.pc(), 0xc38a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc388), 0xcb);
        EXPECT(gbc.readMem(0xc389), 0xc3);
        // CB C3 022B
        gbc.setState(0xc96c, 0x14b1, 0xa390, 0xb242, 0xf006, 0x7ef9, 0x1, 0x1);
        gbc.writeMem(0xc96c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x14b1);
        EXPECT(gbc.pc(), 0xc96e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96c), 0xcb);
        EXPECT(gbc.readMem(0xc96d), 0xc3);
        // CB C3 022C
        gbc.setState(0x7285, 0x852b, 0x6e00, 0x29b8, 0x522c, 0xdcfb, 0x0, 0x0);
        gbc.writeMem(0x7285, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x852b);
        EXPECT(gbc.pc(), 0x7287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 022D
        gbc.setState(0x9a82, 0x87ae, 0x10c0, 0x60b8, 0xaad8, 0x5b2d, 0x0, 0x0);
        gbc.writeMem(0x9a82, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x87ae);
        EXPECT(gbc.pc(), 0x9a84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a82), 0xcb);
        EXPECT(gbc.readMem(0x9a83), 0xc3);
        // CB C3 022E
        gbc.setState(0x7642, 0x52f5, 0xb2b0, 0x24e9, 0x3481, 0xd4ef, 0x0, 0x1);
        gbc.writeMem(0x7642, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x52f5);
        EXPECT(gbc.pc(), 0x7644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 022F
        gbc.setState(0xd258, 0x4aaf, 0xf840, 0xfbd8, 0x459, 0xb386, 0x1, 0x0);
        gbc.writeMem(0xd258, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4aaf);
        EXPECT(gbc.pc(), 0xd25a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd258), 0xcb);
        EXPECT(gbc.readMem(0xd259), 0xc3);
        // CB C3 0230
        gbc.setState(0xd7b9, 0x4d12, 0xf8d0, 0x62a4, 0xd64d, 0x3c53, 0x0, 0x1);
        gbc.writeMem(0xd7b9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4d12);
        EXPECT(gbc.pc(), 0xd7bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b9), 0xcb);
        EXPECT(gbc.readMem(0xd7ba), 0xc3);
        // CB C3 0231
        gbc.setState(0xb8a1, 0xe278, 0xcb80, 0x570e, 0xc1cf, 0xf5c4, 0x0, 0x0);
        gbc.writeMem(0xb8a1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe278);
        EXPECT(gbc.pc(), 0xb8a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8a1), 0xcb);
        EXPECT(gbc.readMem(0xb8a2), 0xc3);
        // CB C3 0232
        gbc.setState(0x89da, 0x7f0, 0xb290, 0x349e, 0x5ddd, 0x4497, 0x0, 0x0);
        gbc.writeMem(0x89da, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7f0);
        EXPECT(gbc.pc(), 0x89dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89da), 0xcb);
        EXPECT(gbc.readMem(0x89db), 0xc3);
        // CB C3 0233
        gbc.setState(0xb386, 0x2e0d, 0xad30, 0x52a4, 0xde91, 0xc751, 0x0, 0x0);
        gbc.writeMem(0xb386, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2e0d);
        EXPECT(gbc.pc(), 0xb388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb386), 0xcb);
        EXPECT(gbc.readMem(0xb387), 0xc3);
        // CB C3 0234
        gbc.setState(0x2af3, 0x4797, 0xb570, 0xba4c, 0xfc54, 0x996b, 0x1, 0x0);
        gbc.writeMem(0x2af3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4797);
        EXPECT(gbc.pc(), 0x2af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0235
        gbc.setState(0xa929, 0x417f, 0x8dd0, 0x4d20, 0x494, 0x22e5, 0x1, 0x0);
        gbc.writeMem(0xa929, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x417f);
        EXPECT(gbc.pc(), 0xa92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa929), 0xcb);
        EXPECT(gbc.readMem(0xa92a), 0xc3);
        // CB C3 0236
        gbc.setState(0xa246, 0xce1b, 0xe2d0, 0x75c4, 0xa8bd, 0xc05a, 0x0, 0x0);
        gbc.writeMem(0xa246, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xce1b);
        EXPECT(gbc.pc(), 0xa248);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa246), 0xcb);
        EXPECT(gbc.readMem(0xa247), 0xc3);
        // CB C3 0237
        gbc.setState(0xd0bf, 0x92e0, 0xf470, 0x992d, 0x569a, 0x695d, 0x1, 0x0);
        gbc.writeMem(0xd0bf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x92e0);
        EXPECT(gbc.pc(), 0xd0c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0bf), 0xcb);
        EXPECT(gbc.readMem(0xd0c0), 0xc3);
        // CB C3 0238
        gbc.setState(0x2fe1, 0xa1a5, 0x5db0, 0xf8b5, 0x6768, 0xe2fb, 0x0, 0x0);
        gbc.writeMem(0x2fe1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa1a5);
        EXPECT(gbc.pc(), 0x2fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0239
        gbc.setState(0xcabe, 0xfe7d, 0x5060, 0x4d75, 0xe87b, 0xb3dc, 0x0, 0x0);
        gbc.writeMem(0xcabe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfe7d);
        EXPECT(gbc.pc(), 0xcac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcabe), 0xcb);
        EXPECT(gbc.readMem(0xcabf), 0xc3);
        // CB C3 023A
        gbc.setState(0xd229, 0xddff, 0x1170, 0x9edf, 0x8cb2, 0x2072, 0x1, 0x1);
        gbc.writeMem(0xd229, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xddff);
        EXPECT(gbc.pc(), 0xd22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd229), 0xcb);
        EXPECT(gbc.readMem(0xd22a), 0xc3);
        // CB C3 023B
        gbc.setState(0xef42, 0x3d2b, 0x3c70, 0x7e45, 0xb0ad, 0x3102, 0x1, 0x1);
        gbc.writeMem(0xef42, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3d2b);
        EXPECT(gbc.pc(), 0xef44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef42), 0xcb);
        EXPECT(gbc.readMem(0xef43), 0xc3);
        // CB C3 023C
        gbc.setState(0x7847, 0x894a, 0xaf80, 0x1718, 0xc1cf, 0x2001, 0x1, 0x1);
        gbc.writeMem(0x7847, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x894a);
        EXPECT(gbc.pc(), 0x7849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 023D
        gbc.setState(0x4974, 0x5ec7, 0xa9a0, 0x8012, 0x8b4f, 0x3708, 0x1, 0x1);
        gbc.writeMem(0x4974, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5ec7);
        EXPECT(gbc.pc(), 0x4976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 023E
        gbc.setState(0x14e6, 0xb94e, 0x5c80, 0xa09d, 0x3121, 0xa49a, 0x1, 0x0);
        gbc.writeMem(0x14e6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb94e);
        EXPECT(gbc.pc(), 0x14e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 023F
        gbc.setState(0xe4f7, 0x33d6, 0x1b20, 0x6bd8, 0xf5a, 0x9801, 0x0, 0x0);
        gbc.writeMem(0xe4f7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x33d6);
        EXPECT(gbc.pc(), 0xe4f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f7), 0xcb);
        EXPECT(gbc.readMem(0xe4f8), 0xc3);
        // CB C3 0240
        gbc.setState(0x698c, 0x20c2, 0x9540, 0xd7af, 0x1e6e, 0x2d43, 0x1, 0x1);
        gbc.writeMem(0x698c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x20c2);
        EXPECT(gbc.pc(), 0x698e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0241
        gbc.setState(0xeeba, 0xf7e4, 0xd5b0, 0x853b, 0x483f, 0xc560, 0x1, 0x1);
        gbc.writeMem(0xeeba, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf7e4);
        EXPECT(gbc.pc(), 0xeebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeba), 0xcb);
        EXPECT(gbc.readMem(0xeebb), 0xc3);
        // CB C3 0242
        gbc.setState(0x76f9, 0x2e0c, 0xda70, 0x8dee, 0x1be6, 0x33d4, 0x0, 0x1);
        gbc.writeMem(0x76f9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2e0c);
        EXPECT(gbc.pc(), 0x76fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0244
        gbc.setState(0x849a, 0x6d4f, 0xd220, 0xdf82, 0xa495, 0x1bcd, 0x1, 0x0);
        gbc.writeMem(0x849a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6d4f);
        EXPECT(gbc.pc(), 0x849c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x849a), 0xcb);
        EXPECT(gbc.readMem(0x849b), 0xc3);
        // CB C3 0245
        gbc.setState(0x50a5, 0x91b9, 0x6dc0, 0x7826, 0xa6b5, 0x91ab, 0x1, 0x0);
        gbc.writeMem(0x50a5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x91b9);
        EXPECT(gbc.pc(), 0x50a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0246
        gbc.setState(0x1d95, 0xf546, 0x4650, 0xeac9, 0x9fc2, 0xac46, 0x1, 0x1);
        gbc.writeMem(0x1d95, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf546);
        EXPECT(gbc.pc(), 0x1d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0247
        gbc.setState(0x2209, 0x68ca, 0x3fc0, 0x20a5, 0x3ddd, 0x34ef, 0x0, 0x1);
        gbc.writeMem(0x2209, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x68ca);
        EXPECT(gbc.pc(), 0x220b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0248
        gbc.setState(0x6f72, 0x6969, 0x2c80, 0x1548, 0x41ad, 0xa7d1, 0x1, 0x1);
        gbc.writeMem(0x6f72, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6969);
        EXPECT(gbc.pc(), 0x6f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0249
        gbc.setState(0x178c, 0x85b3, 0x9c20, 0xd189, 0x1219, 0x5a85, 0x0, 0x1);
        gbc.writeMem(0x178c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x85b3);
        EXPECT(gbc.pc(), 0x178e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 024A
        gbc.setState(0x60e1, 0x376e, 0x6de0, 0xfa9b, 0xb2d9, 0x4b9, 0x0, 0x0);
        gbc.writeMem(0x60e1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x376e);
        EXPECT(gbc.pc(), 0x60e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 024B
        gbc.setState(0xbf03, 0x43bf, 0xf450, 0xf5c4, 0xb00a, 0x5e3b, 0x0, 0x1);
        gbc.writeMem(0xbf03, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x43bf);
        EXPECT(gbc.pc(), 0xbf05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf03), 0xcb);
        EXPECT(gbc.readMem(0xbf04), 0xc3);
        // CB C3 024D
        gbc.setState(0x9847, 0xefec, 0x6990, 0xa3f0, 0xbad3, 0x31a6, 0x1, 0x0);
        gbc.writeMem(0x9847, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xefec);
        EXPECT(gbc.pc(), 0x9849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9847), 0xcb);
        EXPECT(gbc.readMem(0x9848), 0xc3);
        // CB C3 024E
        gbc.setState(0x3048, 0x4a12, 0xc940, 0x8876, 0xa8b9, 0x802c, 0x0, 0x0);
        gbc.writeMem(0x3048, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4a12);
        EXPECT(gbc.pc(), 0x304a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 024F
        gbc.setState(0x9e80, 0x7441, 0xcbc0, 0xc4e0, 0x7972, 0x55fa, 0x1, 0x0);
        gbc.writeMem(0x9e80, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7441);
        EXPECT(gbc.pc(), 0x9e82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e80), 0xcb);
        EXPECT(gbc.readMem(0x9e81), 0xc3);
        // CB C3 0250
        gbc.setState(0xe6dd, 0x6814, 0x5d00, 0xf71c, 0x5319, 0x7b0e, 0x1, 0x0);
        gbc.writeMem(0xe6dd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6814);
        EXPECT(gbc.pc(), 0xe6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6dd), 0xcb);
        EXPECT(gbc.readMem(0xe6de), 0xc3);
        // CB C3 0251
        gbc.setState(0x378a, 0x1c6, 0x9430, 0x4eaf, 0xb2a7, 0xe14e, 0x0, 0x1);
        gbc.writeMem(0x378a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1c6);
        EXPECT(gbc.pc(), 0x378c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0252
        gbc.setState(0x325d, 0x196b, 0x7980, 0xadb8, 0xa809, 0x9ffb, 0x1, 0x0);
        gbc.writeMem(0x325d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x196b);
        EXPECT(gbc.pc(), 0x325f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0253
        gbc.setState(0x41cc, 0x973f, 0xc610, 0x6e2, 0x385d, 0x7e3b, 0x1, 0x1);
        gbc.writeMem(0x41cc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x973f);
        EXPECT(gbc.pc(), 0x41ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0254
        gbc.setState(0x76d9, 0x7cb1, 0x24a0, 0x3686, 0x5e02, 0xdeb2, 0x0, 0x1);
        gbc.writeMem(0x76d9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7cb1);
        EXPECT(gbc.pc(), 0x76db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0255
        gbc.setState(0xcdea, 0x5417, 0xc670, 0x2881, 0xbee5, 0x7d88, 0x0, 0x1);
        gbc.writeMem(0xcdea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5417);
        EXPECT(gbc.pc(), 0xcdec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdea), 0xcb);
        EXPECT(gbc.readMem(0xcdeb), 0xc3);
        // CB C3 0256
        gbc.setState(0x3d45, 0xf821, 0xd430, 0xf452, 0x6f75, 0x38de, 0x1, 0x1);
        gbc.writeMem(0x3d45, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf821);
        EXPECT(gbc.pc(), 0x3d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0257
        gbc.setState(0x7efd, 0xdcf1, 0x1ce0, 0x148f, 0xee3b, 0x99a2, 0x1, 0x0);
        gbc.writeMem(0x7efd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xdcf1);
        EXPECT(gbc.pc(), 0x7eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0258
        gbc.setState(0x783b, 0xf4b9, 0x9c60, 0x8ba4, 0x9146, 0xad61, 0x0, 0x1);
        gbc.writeMem(0x783b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf4b9);
        EXPECT(gbc.pc(), 0x783d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0259
        gbc.setState(0xbc3c, 0x79b8, 0xff80, 0x96c9, 0xcc32, 0xac3d, 0x0, 0x1);
        gbc.writeMem(0xbc3c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x79b8);
        EXPECT(gbc.pc(), 0xbc3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3c), 0xcb);
        EXPECT(gbc.readMem(0xbc3d), 0xc3);
        // CB C3 025A
        gbc.setState(0xe5b6, 0x3407, 0x9d20, 0x38b9, 0xd62, 0xdfa5, 0x1, 0x0);
        gbc.writeMem(0xe5b6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3407);
        EXPECT(gbc.pc(), 0xe5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b6), 0xcb);
        EXPECT(gbc.readMem(0xe5b7), 0xc3);
        // CB C3 025B
        gbc.setState(0xd4d8, 0xaf61, 0x6fc0, 0x5da9, 0xd3e3, 0x9b0c, 0x0, 0x0);
        gbc.writeMem(0xd4d8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xaf61);
        EXPECT(gbc.pc(), 0xd4da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d8), 0xcb);
        EXPECT(gbc.readMem(0xd4d9), 0xc3);
        // CB C3 025C
        gbc.setState(0x5d1a, 0x85f6, 0xae0, 0x28cf, 0x6883, 0x77f6, 0x0, 0x0);
        gbc.writeMem(0x5d1a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x85f6);
        EXPECT(gbc.pc(), 0x5d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 025D
        gbc.setState(0x6e4a, 0xf805, 0x8c20, 0x7e03, 0x5d8c, 0xb026, 0x0, 0x1);
        gbc.writeMem(0x6e4a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf805);
        EXPECT(gbc.pc(), 0x6e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 025E
        gbc.setState(0x4f22, 0xc880, 0x4bd0, 0x628b, 0xe538, 0xd519, 0x1, 0x1);
        gbc.writeMem(0x4f22, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc880);
        EXPECT(gbc.pc(), 0x4f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 025F
        gbc.setState(0xe2cc, 0xb7d6, 0x7720, 0xa9c2, 0x4560, 0xb01e, 0x0, 0x1);
        gbc.writeMem(0xe2cc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb7d6);
        EXPECT(gbc.pc(), 0xe2ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2cc), 0xcb);
        EXPECT(gbc.readMem(0xe2cd), 0xc3);
        // CB C3 0260
        gbc.setState(0x2ffe, 0x7aa3, 0xe510, 0x88c7, 0xe26f, 0xba49, 0x0, 0x0);
        gbc.writeMem(0x2ffe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7aa3);
        EXPECT(gbc.pc(), 0x3000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0261
        gbc.setState(0x4ecf, 0x6654, 0xc00, 0xf95d, 0xc843, 0x989b, 0x1, 0x1);
        gbc.writeMem(0x4ecf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6654);
        EXPECT(gbc.pc(), 0x4ed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0262
        gbc.setState(0x2ffe, 0xd4f0, 0x6ab0, 0xdefb, 0x251e, 0x3ebf, 0x1, 0x1);
        gbc.writeMem(0x2ffe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd4f0);
        EXPECT(gbc.pc(), 0x3000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0263
        gbc.setState(0xd397, 0x9fb5, 0x4400, 0xd0b3, 0xda22, 0x8c70, 0x1, 0x0);
        gbc.writeMem(0xd397, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9fb5);
        EXPECT(gbc.pc(), 0xd399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd397), 0xcb);
        EXPECT(gbc.readMem(0xd398), 0xc3);
        // CB C3 0264
        gbc.setState(0x3677, 0x8f14, 0x8b40, 0x64af, 0xd3d4, 0xa693, 0x0, 0x1);
        gbc.writeMem(0x3677, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8f14);
        EXPECT(gbc.pc(), 0x3679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0265
        gbc.setState(0xd9d7, 0xae45, 0xfc40, 0xa75b, 0xf112, 0x152, 0x0, 0x0);
        gbc.writeMem(0xd9d7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xae45);
        EXPECT(gbc.pc(), 0xd9d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d7), 0xcb);
        EXPECT(gbc.readMem(0xd9d8), 0xc3);
        // CB C3 0266
        gbc.setState(0x6c74, 0xb1d2, 0x36b0, 0xf18c, 0xf513, 0xb857, 0x1, 0x1);
        gbc.writeMem(0x6c74, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb1d2);
        EXPECT(gbc.pc(), 0x6c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0267
        gbc.setState(0x6849, 0x6130, 0x7db0, 0xa99f, 0x889, 0x9fcb, 0x0, 0x0);
        gbc.writeMem(0x6849, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6130);
        EXPECT(gbc.pc(), 0x684b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0268
        gbc.setState(0x54e5, 0x52c8, 0x8af0, 0x15c1, 0x1085, 0x5d19, 0x0, 0x1);
        gbc.writeMem(0x54e5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x52c8);
        EXPECT(gbc.pc(), 0x54e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0269
        gbc.setState(0x76c2, 0xf26a, 0x8ef0, 0xb794, 0x271f, 0x1d7e, 0x0, 0x0);
        gbc.writeMem(0x76c2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf26a);
        EXPECT(gbc.pc(), 0x76c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 026A
        gbc.setState(0xcb0b, 0xbe48, 0x9040, 0x6d72, 0x7939, 0x47d4, 0x0, 0x0);
        gbc.writeMem(0xcb0b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbe48);
        EXPECT(gbc.pc(), 0xcb0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb0b), 0xcb);
        EXPECT(gbc.readMem(0xcb0c), 0xc3);
        // CB C3 026B
        gbc.setState(0x2665, 0x6023, 0x5770, 0xb074, 0xc3d4, 0xbc07, 0x1, 0x1);
        gbc.writeMem(0x2665, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6023);
        EXPECT(gbc.pc(), 0x2667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 026D
        gbc.setState(0x1b11, 0xe1e4, 0x8fa0, 0xc12f, 0xf657, 0x7c9b, 0x1, 0x1);
        gbc.writeMem(0x1b11, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe1e4);
        EXPECT(gbc.pc(), 0x1b13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 026E
        gbc.setState(0x8147, 0x971, 0x9b40, 0xe531, 0xb358, 0xc753, 0x1, 0x1);
        gbc.writeMem(0x8147, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x971);
        EXPECT(gbc.pc(), 0x8149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8147), 0xcb);
        EXPECT(gbc.readMem(0x8148), 0xc3);
        // CB C3 026F
        gbc.setState(0x672, 0x3821, 0x7190, 0x3e06, 0xef67, 0xc650, 0x1, 0x1);
        gbc.writeMem(0x672, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3821);
        EXPECT(gbc.pc(), 0x674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0270
        gbc.setState(0xe8cd, 0xdf0c, 0x8bd0, 0x785d, 0x5606, 0x4975, 0x0, 0x1);
        gbc.writeMem(0xe8cd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdf0c);
        EXPECT(gbc.pc(), 0xe8cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8cd), 0xcb);
        EXPECT(gbc.readMem(0xe8ce), 0xc3);
        // CB C3 0271
        gbc.setState(0x2fd1, 0x13cb, 0x2550, 0xde36, 0x7186, 0x6c17, 0x0, 0x0);
        gbc.writeMem(0x2fd1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x13cb);
        EXPECT(gbc.pc(), 0x2fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0272
        gbc.setState(0xc98d, 0x458, 0x5f80, 0xfad2, 0xd8e8, 0x8673, 0x1, 0x0);
        gbc.writeMem(0xc98d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x458);
        EXPECT(gbc.pc(), 0xc98f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc98d), 0xcb);
        EXPECT(gbc.readMem(0xc98e), 0xc3);
        // CB C3 0273
        gbc.setState(0xa1b5, 0x72c8, 0xde80, 0xd70d, 0xd6fd, 0xe753, 0x1, 0x0);
        gbc.writeMem(0xa1b5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x72c8);
        EXPECT(gbc.pc(), 0xa1b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b5), 0xcb);
        EXPECT(gbc.readMem(0xa1b6), 0xc3);
        // CB C3 0274
        gbc.setState(0x23ee, 0x882, 0xa030, 0x8a1c, 0x21ed, 0xe7a9, 0x0, 0x0);
        gbc.writeMem(0x23ee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x882);
        EXPECT(gbc.pc(), 0x23f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0275
        gbc.setState(0x28cc, 0x542c, 0x7930, 0x5186, 0xace1, 0xe475, 0x0, 0x0);
        gbc.writeMem(0x28cc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x542c);
        EXPECT(gbc.pc(), 0x28ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0276
        gbc.setState(0x52bd, 0x9f2, 0x3b30, 0x34e6, 0x604c, 0xa2d5, 0x1, 0x1);
        gbc.writeMem(0x52bd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9f2);
        EXPECT(gbc.pc(), 0x52bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0277
        gbc.setState(0x6431, 0x550d, 0x13d0, 0x3a4c, 0x3f5a, 0xec28, 0x0, 0x1);
        gbc.writeMem(0x6431, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x550d);
        EXPECT(gbc.pc(), 0x6433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0278
        gbc.setState(0x1d55, 0x18d1, 0xbb00, 0xc089, 0xc0f3, 0xea31, 0x1, 0x1);
        gbc.writeMem(0x1d55, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x18d1);
        EXPECT(gbc.pc(), 0x1d57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0279
        gbc.setState(0xe08e, 0x99a2, 0x4f50, 0xf6cc, 0x2647, 0x766f, 0x0, 0x1);
        gbc.writeMem(0xe08e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x99a2);
        EXPECT(gbc.pc(), 0xe090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe08e), 0xcb);
        EXPECT(gbc.readMem(0xe08f), 0xc3);
        // CB C3 027A
        gbc.setState(0x21c9, 0xc84c, 0xb870, 0xecd5, 0x7210, 0x419b, 0x0, 0x0);
        gbc.writeMem(0x21c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc84c);
        EXPECT(gbc.pc(), 0x21cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 027B
        gbc.setState(0xa8e6, 0x38fe, 0xb550, 0xfda8, 0xd274, 0xa107, 0x0, 0x1);
        gbc.writeMem(0xa8e6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x38fe);
        EXPECT(gbc.pc(), 0xa8e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e6), 0xcb);
        EXPECT(gbc.readMem(0xa8e7), 0xc3);
        // CB C3 027C
        gbc.setState(0xf82, 0x6061, 0xa460, 0xb1ca, 0xb0b8, 0x313f, 0x0, 0x1);
        gbc.writeMem(0xf82, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6061);
        EXPECT(gbc.pc(), 0xf84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 027D
        gbc.setState(0x3987, 0x72fe, 0x5a60, 0xe9ab, 0xe7ea, 0x39b2, 0x1, 0x0);
        gbc.writeMem(0x3987, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x72fe);
        EXPECT(gbc.pc(), 0x3989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 027E
        gbc.setState(0xc6a6, 0x7805, 0x3040, 0xcf07, 0xc80b, 0xaaa4, 0x0, 0x1);
        gbc.writeMem(0xc6a6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7805);
        EXPECT(gbc.pc(), 0xc6a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a6), 0xcb);
        EXPECT(gbc.readMem(0xc6a7), 0xc3);
        // CB C3 027F
        gbc.setState(0x4984, 0xab0f, 0x5070, 0xa809, 0x95f6, 0x7439, 0x1, 0x0);
        gbc.writeMem(0x4984, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xab0f);
        EXPECT(gbc.pc(), 0x4986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0280
        gbc.setState(0x66c3, 0x6de3, 0xb50, 0xb713, 0xe488, 0x8dea, 0x0, 0x1);
        gbc.writeMem(0x66c3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6de3);
        EXPECT(gbc.pc(), 0x66c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0281
        gbc.setState(0x6e0a, 0x60e7, 0xeff0, 0xb0c2, 0x3880, 0x2b91, 0x1, 0x0);
        gbc.writeMem(0x6e0a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x60e7);
        EXPECT(gbc.pc(), 0x6e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0283
        gbc.setState(0x437b, 0x8b3b, 0x2d80, 0x8ed, 0x556c, 0x201, 0x1, 0x1);
        gbc.writeMem(0x437b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8b3b);
        EXPECT(gbc.pc(), 0x437d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0285
        gbc.setState(0x4ad, 0xf5ff, 0xacc0, 0x7777, 0xa5de, 0xe77b, 0x0, 0x0);
        gbc.writeMem(0x4ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf5ff);
        EXPECT(gbc.pc(), 0x4af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0286
        gbc.setState(0xc89, 0x9c39, 0x8630, 0x414b, 0x72da, 0xd60b, 0x0, 0x1);
        gbc.writeMem(0xc89, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9c39);
        EXPECT(gbc.pc(), 0xc8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0287
        gbc.setState(0x254, 0xc22, 0xeb0, 0x2b5c, 0xa21a, 0xa068, 0x0, 0x1);
        gbc.writeMem(0x254, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc22);
        EXPECT(gbc.pc(), 0x256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0288
        gbc.setState(0x9f13, 0x3aca, 0x17e0, 0x157d, 0xfc3c, 0xf7fe, 0x1, 0x1);
        gbc.writeMem(0x9f13, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3aca);
        EXPECT(gbc.pc(), 0x9f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f13), 0xcb);
        EXPECT(gbc.readMem(0x9f14), 0xc3);
        // CB C3 0289
        gbc.setState(0x9c9d, 0xb20e, 0xe500, 0xe562, 0xe069, 0xe6f4, 0x0, 0x1);
        gbc.writeMem(0x9c9d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb20e);
        EXPECT(gbc.pc(), 0x9c9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c9d), 0xcb);
        EXPECT(gbc.readMem(0x9c9e), 0xc3);
        // CB C3 028A
        gbc.setState(0x47dc, 0x99dd, 0x3f30, 0x1185, 0x5e8f, 0xb047, 0x0, 0x0);
        gbc.writeMem(0x47dc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x99dd);
        EXPECT(gbc.pc(), 0x47de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 028B
        gbc.setState(0x94dd, 0x8f14, 0xb480, 0x3bf2, 0x6731, 0xfd07, 0x0, 0x1);
        gbc.writeMem(0x94dd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8f14);
        EXPECT(gbc.pc(), 0x94df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94dd), 0xcb);
        EXPECT(gbc.readMem(0x94de), 0xc3);
        // CB C3 028C
        gbc.setState(0x99c9, 0x5d89, 0x34b0, 0x7383, 0x8392, 0xf0dd, 0x0, 0x0);
        gbc.writeMem(0x99c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5d89);
        EXPECT(gbc.pc(), 0x99cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99c9), 0xcb);
        EXPECT(gbc.readMem(0x99ca), 0xc3);
        // CB C3 028D
        gbc.setState(0x9d69, 0x50e4, 0x10b0, 0x8f4d, 0x6474, 0x3fcd, 0x0, 0x1);
        gbc.writeMem(0x9d69, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x50e4);
        EXPECT(gbc.pc(), 0x9d6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d69), 0xcb);
        EXPECT(gbc.readMem(0x9d6a), 0xc3);
        // CB C3 028E
        gbc.setState(0x8cf, 0xe69b, 0x9db0, 0x5425, 0xadda, 0x42cd, 0x0, 0x1);
        gbc.writeMem(0x8cf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe69b);
        EXPECT(gbc.pc(), 0x8d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 028F
        gbc.setState(0xa04b, 0x3db6, 0x8070, 0xdbc5, 0x598c, 0x7332, 0x1, 0x1);
        gbc.writeMem(0xa04b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3db6);
        EXPECT(gbc.pc(), 0xa04d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa04b), 0xcb);
        EXPECT(gbc.readMem(0xa04c), 0xc3);
        // CB C3 0290
        gbc.setState(0x6ddb, 0x2acf, 0x3f80, 0xbc88, 0x882d, 0x3f93, 0x1, 0x1);
        gbc.writeMem(0x6ddb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2acf);
        EXPECT(gbc.pc(), 0x6ddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0291
        gbc.setState(0x8fc0, 0x658a, 0x9ce0, 0x5ce2, 0xc237, 0xb05e, 0x0, 0x1);
        gbc.writeMem(0x8fc0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x658a);
        EXPECT(gbc.pc(), 0x8fc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc0), 0xcb);
        EXPECT(gbc.readMem(0x8fc1), 0xc3);
        // CB C3 0292
        gbc.setState(0xd4a9, 0x453, 0x2d70, 0xccf7, 0xe237, 0xe765, 0x0, 0x0);
        gbc.writeMem(0xd4a9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x453);
        EXPECT(gbc.pc(), 0xd4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4a9), 0xcb);
        EXPECT(gbc.readMem(0xd4aa), 0xc3);
        // CB C3 0293
        gbc.setState(0x1ea2, 0x3982, 0xf360, 0x48af, 0xd1a8, 0x5a7a, 0x0, 0x0);
        gbc.writeMem(0x1ea2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3982);
        EXPECT(gbc.pc(), 0x1ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0294
        gbc.setState(0xaa27, 0x3bc1, 0x69a0, 0xa52c, 0x3332, 0xdf20, 0x1, 0x1);
        gbc.writeMem(0xaa27, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3bc1);
        EXPECT(gbc.pc(), 0xaa29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa27), 0xcb);
        EXPECT(gbc.readMem(0xaa28), 0xc3);
        // CB C3 0295
        gbc.setState(0x39a7, 0xed8f, 0x5ce0, 0xefb2, 0xb7d7, 0xc92e, 0x1, 0x1);
        gbc.writeMem(0x39a7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xed8f);
        EXPECT(gbc.pc(), 0x39a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0296
        gbc.setState(0xe55a, 0x973a, 0x39c0, 0x835a, 0x6496, 0x83a9, 0x0, 0x1);
        gbc.writeMem(0xe55a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x973a);
        EXPECT(gbc.pc(), 0xe55c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55a), 0xcb);
        EXPECT(gbc.readMem(0xe55b), 0xc3);
        // CB C3 0297
        gbc.setState(0x93ae, 0xc1e5, 0x1a70, 0xa02, 0x852, 0x4183, 0x0, 0x0);
        gbc.writeMem(0x93ae, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc1e5);
        EXPECT(gbc.pc(), 0x93b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ae), 0xcb);
        EXPECT(gbc.readMem(0x93af), 0xc3);
        // CB C3 0298
        gbc.setState(0x6c6f, 0xa97c, 0x1d60, 0x7414, 0xc669, 0x4d85, 0x0, 0x1);
        gbc.writeMem(0x6c6f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa97c);
        EXPECT(gbc.pc(), 0x6c71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0299
        gbc.setState(0x197a, 0xbebd, 0x4c50, 0x735a, 0x1761, 0xe36a, 0x0, 0x0);
        gbc.writeMem(0x197a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xbebd);
        EXPECT(gbc.pc(), 0x197c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 029A
        gbc.setState(0x6626, 0xc6e, 0x2fe0, 0x827a, 0x3c69, 0x5f41, 0x0, 0x0);
        gbc.writeMem(0x6626, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc6e);
        EXPECT(gbc.pc(), 0x6628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 029B
        gbc.setState(0x43cf, 0x460d, 0x4cc0, 0x57c3, 0x11e4, 0xa1d9, 0x1, 0x0);
        gbc.writeMem(0x43cf, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x460d);
        EXPECT(gbc.pc(), 0x43d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 029C
        gbc.setState(0xa19e, 0xcf8f, 0xcbd0, 0x2225, 0x3160, 0x79ae, 0x0, 0x0);
        gbc.writeMem(0xa19e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcf8f);
        EXPECT(gbc.pc(), 0xa1a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa19e), 0xcb);
        EXPECT(gbc.readMem(0xa19f), 0xc3);
        // CB C3 029D
        gbc.setState(0x2543, 0x224f, 0xbdd0, 0xeef0, 0xc2a, 0xec23, 0x1, 0x1);
        gbc.writeMem(0x2543, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x224f);
        EXPECT(gbc.pc(), 0x2545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 029E
        gbc.setState(0x8ecb, 0x5abd, 0x7950, 0xb44b, 0x59ad, 0x31d1, 0x0, 0x1);
        gbc.writeMem(0x8ecb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5abd);
        EXPECT(gbc.pc(), 0x8ecd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ecb), 0xcb);
        EXPECT(gbc.readMem(0x8ecc), 0xc3);
        // CB C3 029F
        gbc.setState(0xa153, 0xdec, 0x5740, 0x2225, 0xfcbb, 0xba8f, 0x0, 0x1);
        gbc.writeMem(0xa153, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xdec);
        EXPECT(gbc.pc(), 0xa155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa153), 0xcb);
        EXPECT(gbc.readMem(0xa154), 0xc3);
        // CB C3 02A1
        gbc.setState(0x86d4, 0x96f8, 0xab80, 0xb2c, 0x719d, 0x611b, 0x1, 0x1);
        gbc.writeMem(0x86d4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x96f8);
        EXPECT(gbc.pc(), 0x86d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d4), 0xcb);
        EXPECT(gbc.readMem(0x86d5), 0xc3);
        // CB C3 02A3
        gbc.setState(0x11ea, 0x8155, 0x26d0, 0xc9d4, 0x4f7c, 0xd92e, 0x1, 0x0);
        gbc.writeMem(0x11ea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8155);
        EXPECT(gbc.pc(), 0x11ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02A4
        gbc.setState(0xcf9d, 0x1fbf, 0x2fb0, 0x7fce, 0xfe33, 0x1701, 0x0, 0x0);
        gbc.writeMem(0xcf9d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1fbf);
        EXPECT(gbc.pc(), 0xcf9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf9d), 0xcb);
        EXPECT(gbc.readMem(0xcf9e), 0xc3);
        // CB C3 02A5
        gbc.setState(0x717c, 0xa37b, 0x98e0, 0x603a, 0x568d, 0x59e6, 0x1, 0x0);
        gbc.writeMem(0x717c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa37b);
        EXPECT(gbc.pc(), 0x717e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02A6
        gbc.setState(0xbe6a, 0xe60f, 0x96d0, 0xe4e8, 0x18d7, 0xa264, 0x0, 0x1);
        gbc.writeMem(0xbe6a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe60f);
        EXPECT(gbc.pc(), 0xbe6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe6a), 0xcb);
        EXPECT(gbc.readMem(0xbe6b), 0xc3);
        // CB C3 02A7
        gbc.setState(0xde56, 0xb4e7, 0x7610, 0x314d, 0x99a, 0x3c51, 0x1, 0x1);
        gbc.writeMem(0xde56, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb4e7);
        EXPECT(gbc.pc(), 0xde58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde56), 0xcb);
        EXPECT(gbc.readMem(0xde57), 0xc3);
        // CB C3 02A8
        gbc.setState(0xaf2b, 0x7cb, 0x39e0, 0x69e6, 0xa389, 0xf8bd, 0x0, 0x0);
        gbc.writeMem(0xaf2b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7cb);
        EXPECT(gbc.pc(), 0xaf2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf2b), 0xcb);
        EXPECT(gbc.readMem(0xaf2c), 0xc3);
        // CB C3 02A9
        gbc.setState(0x765c, 0xafa4, 0x6410, 0xa4b, 0x9ec1, 0x1e53, 0x1, 0x0);
        gbc.writeMem(0x765c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xafa4);
        EXPECT(gbc.pc(), 0x765e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02AA
        gbc.setState(0xde41, 0x49d8, 0x5b10, 0xe054, 0xb1d9, 0x8b1d, 0x1, 0x0);
        gbc.writeMem(0xde41, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x49d8);
        EXPECT(gbc.pc(), 0xde43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde41), 0xcb);
        EXPECT(gbc.readMem(0xde42), 0xc3);
        // CB C3 02AB
        gbc.setState(0x96c4, 0x155, 0x2360, 0xc491, 0x9909, 0x367a, 0x0, 0x0);
        gbc.writeMem(0x96c4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x155);
        EXPECT(gbc.pc(), 0x96c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c4), 0xcb);
        EXPECT(gbc.readMem(0x96c5), 0xc3);
        // CB C3 02AC
        gbc.setState(0x4522, 0x7e0f, 0x69a0, 0x865e, 0xf27c, 0x4bb6, 0x1, 0x0);
        gbc.writeMem(0x4522, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7e0f);
        EXPECT(gbc.pc(), 0x4524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02AD
        gbc.setState(0xb10e, 0xb948, 0x8dc0, 0x7f69, 0x6046, 0x677, 0x0, 0x0);
        gbc.writeMem(0xb10e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb948);
        EXPECT(gbc.pc(), 0xb110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb10e), 0xcb);
        EXPECT(gbc.readMem(0xb10f), 0xc3);
        // CB C3 02AE
        gbc.setState(0x5283, 0xf530, 0xd5a0, 0x55f5, 0xec19, 0xb760, 0x0, 0x1);
        gbc.writeMem(0x5283, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf530);
        EXPECT(gbc.pc(), 0x5285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02AF
        gbc.setState(0x168f, 0xd658, 0x2f20, 0x4e20, 0x8d38, 0x199b, 0x0, 0x1);
        gbc.writeMem(0x168f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd658);
        EXPECT(gbc.pc(), 0x1691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02B0
        gbc.setState(0xb2f4, 0xc2c9, 0x5510, 0x89cc, 0x821f, 0xeb33, 0x1, 0x0);
        gbc.writeMem(0xb2f4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc2c9);
        EXPECT(gbc.pc(), 0xb2f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f4), 0xcb);
        EXPECT(gbc.readMem(0xb2f5), 0xc3);
        // CB C3 02B1
        gbc.setState(0x6de9, 0x8636, 0x20, 0xab95, 0x1cab, 0x4dd1, 0x0, 0x1);
        gbc.writeMem(0x6de9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8636);
        EXPECT(gbc.pc(), 0x6deb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02B2
        gbc.setState(0x2fda, 0x2d1, 0x12f0, 0xb856, 0x1b19, 0x2d2d, 0x0, 0x1);
        gbc.writeMem(0x2fda, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2d1);
        EXPECT(gbc.pc(), 0x2fdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02B3
        gbc.setState(0xa8a, 0xac51, 0xacd0, 0xac01, 0x733c, 0xae50, 0x1, 0x0);
        gbc.writeMem(0xa8a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xac51);
        EXPECT(gbc.pc(), 0xa8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02B4
        gbc.setState(0x93e6, 0x9f02, 0x99c0, 0x8f1e, 0xdc27, 0x4430, 0x0, 0x1);
        gbc.writeMem(0x93e6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9f02);
        EXPECT(gbc.pc(), 0x93e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e6), 0xcb);
        EXPECT(gbc.readMem(0x93e7), 0xc3);
        // CB C3 02B5
        gbc.setState(0x95d8, 0x372, 0x3110, 0x8aea, 0x6121, 0x157a, 0x0, 0x0);
        gbc.writeMem(0x95d8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x372);
        EXPECT(gbc.pc(), 0x95da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95d8), 0xcb);
        EXPECT(gbc.readMem(0x95d9), 0xc3);
        // CB C3 02B6
        gbc.setState(0x2681, 0xc477, 0x8da0, 0xb6c2, 0x94ef, 0x4337, 0x1, 0x0);
        gbc.writeMem(0x2681, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc477);
        EXPECT(gbc.pc(), 0x2683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02B7
        gbc.setState(0xef4c, 0x6e17, 0x7020, 0xa721, 0x59c5, 0xce80, 0x1, 0x0);
        gbc.writeMem(0xef4c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6e17);
        EXPECT(gbc.pc(), 0xef4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4c), 0xcb);
        EXPECT(gbc.readMem(0xef4d), 0xc3);
        // CB C3 02B8
        gbc.setState(0x5dd0, 0x5883, 0x4bf0, 0xd93d, 0x2adf, 0x3b9a, 0x0, 0x0);
        gbc.writeMem(0x5dd0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5883);
        EXPECT(gbc.pc(), 0x5dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02B9
        gbc.setState(0xbdc9, 0x6665, 0x81a0, 0xc308, 0x4f3c, 0x7f7e, 0x1, 0x1);
        gbc.writeMem(0xbdc9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6665);
        EXPECT(gbc.pc(), 0xbdcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdc9), 0xcb);
        EXPECT(gbc.readMem(0xbdca), 0xc3);
        // CB C3 02BA
        gbc.setState(0xd3f7, 0xdcd9, 0xc1d0, 0x1efd, 0x7292, 0x1597, 0x0, 0x0);
        gbc.writeMem(0xd3f7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdcd9);
        EXPECT(gbc.pc(), 0xd3f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f7), 0xcb);
        EXPECT(gbc.readMem(0xd3f8), 0xc3);
        // CB C3 02BB
        gbc.setState(0xec77, 0xe79c, 0xadb0, 0x67a2, 0xda95, 0xa57b, 0x0, 0x1);
        gbc.writeMem(0xec77, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe79c);
        EXPECT(gbc.pc(), 0xec79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec77), 0xcb);
        EXPECT(gbc.readMem(0xec78), 0xc3);
        // CB C3 02BC
        gbc.setState(0x4be6, 0x51c1, 0x2c50, 0x2af8, 0xd650, 0xa546, 0x0, 0x0);
        gbc.writeMem(0x4be6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x51c1);
        EXPECT(gbc.pc(), 0x4be8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02BD
        gbc.setState(0x3ee6, 0xe0c7, 0x8630, 0x6741, 0x10b8, 0xdd2c, 0x0, 0x0);
        gbc.writeMem(0x3ee6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe0c7);
        EXPECT(gbc.pc(), 0x3ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02BE
        gbc.setState(0x19d1, 0x7886, 0xf2d0, 0xedec, 0x407a, 0x7332, 0x1, 0x0);
        gbc.writeMem(0x19d1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7886);
        EXPECT(gbc.pc(), 0x19d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02C0
        gbc.setState(0xaaf1, 0x6899, 0xe730, 0xa728, 0x6705, 0x512b, 0x0, 0x1);
        gbc.writeMem(0xaaf1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6899);
        EXPECT(gbc.pc(), 0xaaf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf1), 0xcb);
        EXPECT(gbc.readMem(0xaaf2), 0xc3);
        // CB C3 02C1
        gbc.setState(0x9f2, 0x6fe7, 0x87c0, 0xf7d6, 0xedc5, 0x996c, 0x1, 0x0);
        gbc.writeMem(0x9f2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6fe7);
        EXPECT(gbc.pc(), 0x9f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02C3
        gbc.setState(0xec7c, 0xc389, 0xc670, 0x1ed2, 0x7c69, 0x186, 0x1, 0x1);
        gbc.writeMem(0xec7c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc389);
        EXPECT(gbc.pc(), 0xec7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec7c), 0xcb);
        EXPECT(gbc.readMem(0xec7d), 0xc3);
        // CB C3 02C4
        gbc.setState(0x6931, 0xfc0a, 0x7c50, 0x446d, 0x5a9a, 0xc61c, 0x0, 0x1);
        gbc.writeMem(0x6931, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfc0a);
        EXPECT(gbc.pc(), 0x6933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02C5
        gbc.setState(0x2dc6, 0x514b, 0xf840, 0x8f4, 0x7694, 0x35b9, 0x0, 0x0);
        gbc.writeMem(0x2dc6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x514b);
        EXPECT(gbc.pc(), 0x2dc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02C6
        gbc.setState(0x37a0, 0xef, 0x2e00, 0x3bb3, 0x7dce, 0xc1db, 0x1, 0x0);
        gbc.writeMem(0x37a0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xef);
        EXPECT(gbc.pc(), 0x37a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02C7
        gbc.setState(0x33d5, 0x1a11, 0xf7c0, 0x2d40, 0xe357, 0xed00, 0x0, 0x0);
        gbc.writeMem(0x33d5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1a11);
        EXPECT(gbc.pc(), 0x33d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02C9
        gbc.setState(0x6f4, 0x25a0, 0x32d0, 0x528a, 0xf42e, 0xaa0d, 0x0, 0x0);
        gbc.writeMem(0x6f4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x25a0);
        EXPECT(gbc.pc(), 0x6f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02CA
        gbc.setState(0x13c1, 0xaab0, 0xd4d0, 0xd70b, 0x1846, 0xba53, 0x1, 0x0);
        gbc.writeMem(0x13c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xaab0);
        EXPECT(gbc.pc(), 0x13c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02CB
        gbc.setState(0xa434, 0xbfc9, 0xab70, 0xfc57, 0xde0f, 0xeb8f, 0x0, 0x1);
        gbc.writeMem(0xa434, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xbfc9);
        EXPECT(gbc.pc(), 0xa436);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa434), 0xcb);
        EXPECT(gbc.readMem(0xa435), 0xc3);
        // CB C3 02CC
        gbc.setState(0xbfbd, 0x3444, 0x3410, 0x4e3e, 0x9ea4, 0x77f8, 0x1, 0x0);
        gbc.writeMem(0xbfbd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3444);
        EXPECT(gbc.pc(), 0xbfbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfbd), 0xcb);
        EXPECT(gbc.readMem(0xbfbe), 0xc3);
        // CB C3 02CD
        gbc.setState(0xd6fa, 0xa3eb, 0x6900, 0xa3c0, 0xe816, 0x48f, 0x1, 0x1);
        gbc.writeMem(0xd6fa, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa3eb);
        EXPECT(gbc.pc(), 0xd6fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6fa), 0xcb);
        EXPECT(gbc.readMem(0xd6fb), 0xc3);
        // CB C3 02CE
        gbc.setState(0x6e28, 0x37bb, 0xfe80, 0xac67, 0x5500, 0xd6ba, 0x0, 0x0);
        gbc.writeMem(0x6e28, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x37bb);
        EXPECT(gbc.pc(), 0x6e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02D0
        gbc.setState(0x4bd6, 0xd125, 0x6c50, 0xd063, 0x5240, 0x8561, 0x1, 0x1);
        gbc.writeMem(0x4bd6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd125);
        EXPECT(gbc.pc(), 0x4bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02D1
        gbc.setState(0xa9b2, 0xa068, 0xb180, 0xbd6a, 0xb54f, 0xc520, 0x1, 0x1);
        gbc.writeMem(0xa9b2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa068);
        EXPECT(gbc.pc(), 0xa9b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b2), 0xcb);
        EXPECT(gbc.readMem(0xa9b3), 0xc3);
        // CB C3 02D3
        gbc.setState(0x1e2c, 0x1d57, 0xd470, 0xaf18, 0x1725, 0x849f, 0x0, 0x1);
        gbc.writeMem(0x1e2c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1d57);
        EXPECT(gbc.pc(), 0x1e2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02D5
        gbc.setState(0x10eb, 0xe183, 0xc820, 0x4211, 0xadb7, 0xdcc2, 0x1, 0x0);
        gbc.writeMem(0x10eb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe183);
        EXPECT(gbc.pc(), 0x10ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02D6
        gbc.setState(0x2a56, 0xaeb9, 0x89e0, 0x7deb, 0xb747, 0x5a40, 0x0, 0x1);
        gbc.writeMem(0x2a56, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xaeb9);
        EXPECT(gbc.pc(), 0x2a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02D7
        gbc.setState(0x3ed5, 0x4f66, 0x73f0, 0x1b21, 0x6891, 0x488c, 0x1, 0x0);
        gbc.writeMem(0x3ed5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4f66);
        EXPECT(gbc.pc(), 0x3ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02D8
        gbc.setState(0x99b, 0x62fd, 0x49c0, 0x470e, 0x651f, 0xcd4f, 0x0, 0x0);
        gbc.writeMem(0x99b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x62fd);
        EXPECT(gbc.pc(), 0x99d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02D9
        gbc.setState(0x7fb9, 0x16cb, 0xec20, 0x2074, 0x66ee, 0x688c, 0x0, 0x1);
        gbc.writeMem(0x7fb9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x16cb);
        EXPECT(gbc.pc(), 0x7fbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02DA
        gbc.setState(0xdf67, 0xc33d, 0xc950, 0xfbfe, 0xedd3, 0xcb5, 0x0, 0x1);
        gbc.writeMem(0xdf67, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc33d);
        EXPECT(gbc.pc(), 0xdf69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf67), 0xcb);
        EXPECT(gbc.readMem(0xdf68), 0xc3);
        // CB C3 02DB
        gbc.setState(0x3886, 0x8aaa, 0x3bc0, 0x11b2, 0xeaa9, 0xac11, 0x1, 0x1);
        gbc.writeMem(0x3886, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8aaa);
        EXPECT(gbc.pc(), 0x3888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02DC
        gbc.setState(0x20f1, 0xfd3d, 0x4430, 0x7ca1, 0xf5fe, 0x76d5, 0x1, 0x0);
        gbc.writeMem(0x20f1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfd3d);
        EXPECT(gbc.pc(), 0x20f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02DD
        gbc.setState(0x3438, 0x29d7, 0x8290, 0xb303, 0x8d6c, 0xab3e, 0x1, 0x1);
        gbc.writeMem(0x3438, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x29d7);
        EXPECT(gbc.pc(), 0x343a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02DE
        gbc.setState(0x16e1, 0x66ca, 0xcd60, 0x990c, 0x419e, 0xa236, 0x0, 0x0);
        gbc.writeMem(0x16e1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x66ca);
        EXPECT(gbc.pc(), 0x16e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02DF
        gbc.setState(0x7aca, 0xee31, 0x5240, 0x5724, 0x25f9, 0xcf4a, 0x1, 0x1);
        gbc.writeMem(0x7aca, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xee31);
        EXPECT(gbc.pc(), 0x7acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02E0
        gbc.setState(0xb06, 0x2e07, 0x32a0, 0x121a, 0xa385, 0x9a07, 0x0, 0x0);
        gbc.writeMem(0xb06, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2e07);
        EXPECT(gbc.pc(), 0xb08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02E1
        gbc.setState(0x78ad, 0x1510, 0x2910, 0xef19, 0x153f, 0x9c3f, 0x1, 0x1);
        gbc.writeMem(0x78ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1510);
        EXPECT(gbc.pc(), 0x78af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02E2
        gbc.setState(0x30b1, 0x16a3, 0xc770, 0x3f4, 0xcc7e, 0x36ad, 0x0, 0x0);
        gbc.writeMem(0x30b1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x16a3);
        EXPECT(gbc.pc(), 0x30b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02E3
        gbc.setState(0x9f57, 0xb7a6, 0x7580, 0xe2a1, 0x5a41, 0x6a59, 0x0, 0x1);
        gbc.writeMem(0x9f57, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb7a6);
        EXPECT(gbc.pc(), 0x9f59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f57), 0xcb);
        EXPECT(gbc.readMem(0x9f58), 0xc3);
        // CB C3 02E4
        gbc.setState(0xe9b7, 0xba5c, 0xc9d0, 0x7a18, 0x5156, 0x72e0, 0x1, 0x0);
        gbc.writeMem(0xe9b7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xba5c);
        EXPECT(gbc.pc(), 0xe9b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b7), 0xcb);
        EXPECT(gbc.readMem(0xe9b8), 0xc3);
        // CB C3 02E5
        gbc.setState(0x510b, 0xce73, 0x6360, 0x4819, 0xd01c, 0x2159, 0x1, 0x1);
        gbc.writeMem(0x510b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xce73);
        EXPECT(gbc.pc(), 0x510d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02E6
        gbc.setState(0x38ac, 0x60c9, 0xb2e0, 0xbfa2, 0x32df, 0xea97, 0x0, 0x1);
        gbc.writeMem(0x38ac, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x60c9);
        EXPECT(gbc.pc(), 0x38ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02E7
        gbc.setState(0x6f21, 0xedf5, 0x7190, 0x9158, 0x9df2, 0xf0b4, 0x0, 0x1);
        gbc.writeMem(0x6f21, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xedf5);
        EXPECT(gbc.pc(), 0x6f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02E8
        gbc.setState(0x66dc, 0x51aa, 0x4240, 0x3415, 0x288, 0xbda5, 0x0, 0x0);
        gbc.writeMem(0x66dc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x51aa);
        EXPECT(gbc.pc(), 0x66de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02E9
        gbc.setState(0x59e0, 0x7a15, 0xce10, 0x6301, 0xf6db, 0x7ee6, 0x1, 0x0);
        gbc.writeMem(0x59e0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7a15);
        EXPECT(gbc.pc(), 0x59e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02EA
        gbc.setState(0x10d3, 0xd887, 0x4d60, 0x2650, 0x5f93, 0x5c9d, 0x0, 0x0);
        gbc.writeMem(0x10d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd887);
        EXPECT(gbc.pc(), 0x10d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02EB
        gbc.setState(0x608c, 0xacdc, 0x5e90, 0xa1c6, 0xa7c, 0xd4b1, 0x1, 0x0);
        gbc.writeMem(0x608c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xacdc);
        EXPECT(gbc.pc(), 0x608e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02EC
        gbc.setState(0x4325, 0x4708, 0x64e0, 0x2cbe, 0x2abe, 0xdfbf, 0x1, 0x0);
        gbc.writeMem(0x4325, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4708);
        EXPECT(gbc.pc(), 0x4327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02EE
        gbc.setState(0xa5ea, 0xece, 0x4bb0, 0xa98b, 0xec03, 0xbbc3, 0x0, 0x1);
        gbc.writeMem(0xa5ea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xece);
        EXPECT(gbc.pc(), 0xa5ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ea), 0xcb);
        EXPECT(gbc.readMem(0xa5eb), 0xc3);
        // CB C3 02EF
        gbc.setState(0x1b91, 0xfb8c, 0x5410, 0x4eab, 0x51c9, 0x3fd8, 0x0, 0x0);
        gbc.writeMem(0x1b91, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfb8c);
        EXPECT(gbc.pc(), 0x1b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 02F0
        gbc.setState(0xbd0a, 0xcf79, 0xf420, 0x72b9, 0x47b4, 0x1a8, 0x1, 0x1);
        gbc.writeMem(0xbd0a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xcf79);
        EXPECT(gbc.pc(), 0xbd0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd0a), 0xcb);
        EXPECT(gbc.readMem(0xbd0b), 0xc3);
        // CB C3 02F1
        gbc.setState(0x2909, 0xfcb0, 0x5e0, 0x3e41, 0xbf5a, 0x3227, 0x1, 0x0);
        gbc.writeMem(0x2909, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfcb0);
        EXPECT(gbc.pc(), 0x290b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02F3
        gbc.setState(0x850d, 0xc5b7, 0xf8e0, 0xfb69, 0x52b1, 0x4906, 0x1, 0x1);
        gbc.writeMem(0x850d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc5b7);
        EXPECT(gbc.pc(), 0x850f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x850d), 0xcb);
        EXPECT(gbc.readMem(0x850e), 0xc3);
        // CB C3 02F4
        gbc.setState(0x8d53, 0x8fa9, 0x1830, 0xafc2, 0x8110, 0x7c2d, 0x1, 0x0);
        gbc.writeMem(0x8d53, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8fa9);
        EXPECT(gbc.pc(), 0x8d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d53), 0xcb);
        EXPECT(gbc.readMem(0x8d54), 0xc3);
        // CB C3 02F5
        gbc.setState(0xae66, 0x4565, 0x8d80, 0xcd0d, 0x5da7, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0xae66, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4565);
        EXPECT(gbc.pc(), 0xae68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae66), 0xcb);
        EXPECT(gbc.readMem(0xae67), 0xc3);
        // CB C3 02F6
        gbc.setState(0xb590, 0x8c91, 0x27a0, 0x8af1, 0x76c0, 0x7eef, 0x0, 0x0);
        gbc.writeMem(0xb590, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8c91);
        EXPECT(gbc.pc(), 0xb592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb590), 0xcb);
        EXPECT(gbc.readMem(0xb591), 0xc3);
        // CB C3 02F7
        gbc.setState(0x921, 0xdf0a, 0x3760, 0x26fe, 0x9fdc, 0xee38, 0x1, 0x1);
        gbc.writeMem(0x921, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdf0a);
        EXPECT(gbc.pc(), 0x923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02F8
        gbc.setState(0xc735, 0x3c6d, 0x5490, 0xc7c, 0x8d74, 0xb786, 0x0, 0x0);
        gbc.writeMem(0xc735, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3c6d);
        EXPECT(gbc.pc(), 0xc737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc735), 0xcb);
        EXPECT(gbc.readMem(0xc736), 0xc3);
        // CB C3 02F9
        gbc.setState(0xb666, 0xf379, 0x2930, 0xfd15, 0x3418, 0xccc3, 0x1, 0x0);
        gbc.writeMem(0xb666, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf379);
        EXPECT(gbc.pc(), 0xb668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb666), 0xcb);
        EXPECT(gbc.readMem(0xb667), 0xc3);
        // CB C3 02FA
        gbc.setState(0xee38, 0x7de6, 0x6f40, 0xc2fa, 0xacac, 0xc537, 0x0, 0x0);
        gbc.writeMem(0xee38, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7de6);
        EXPECT(gbc.pc(), 0xee3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee38), 0xcb);
        EXPECT(gbc.readMem(0xee39), 0xc3);
        // CB C3 02FB
        gbc.setState(0x42b4, 0xe022, 0x8bc0, 0xa482, 0x7f6f, 0x5e14, 0x0, 0x1);
        gbc.writeMem(0x42b4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe022);
        EXPECT(gbc.pc(), 0x42b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02FC
        gbc.setState(0xd3dd, 0x7c3e, 0x7430, 0x8f41, 0x6d00, 0x828d, 0x1, 0x0);
        gbc.writeMem(0xd3dd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7c3e);
        EXPECT(gbc.pc(), 0xd3df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3dd), 0xcb);
        EXPECT(gbc.readMem(0xd3de), 0xc3);
        // CB C3 02FD
        gbc.setState(0x4bfc, 0xe931, 0xe100, 0x554, 0x9120, 0xf566, 0x0, 0x0);
        gbc.writeMem(0x4bfc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe931);
        EXPECT(gbc.pc(), 0x4bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 02FE
        gbc.setState(0xc804, 0x902f, 0x99b0, 0xa359, 0xbf54, 0xfc0d, 0x1, 0x0);
        gbc.writeMem(0xc804, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x902f);
        EXPECT(gbc.pc(), 0xc806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc804), 0xcb);
        EXPECT(gbc.readMem(0xc805), 0xc3);
        // CB C3 02FF
        gbc.setState(0x2b97, 0x8bb, 0x4330, 0x2c30, 0x3211, 0xaa12, 0x0, 0x1);
        gbc.writeMem(0x2b97, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8bb);
        EXPECT(gbc.pc(), 0x2b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0301
        gbc.setState(0x69ec, 0x7de2, 0x7550, 0x12f3, 0x6ee5, 0x213b, 0x0, 0x0);
        gbc.writeMem(0x69ec, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7de2);
        EXPECT(gbc.pc(), 0x69ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0302
        gbc.setState(0x9e23, 0x9da6, 0x2290, 0x30fb, 0xe27, 0xc030, 0x1, 0x1);
        gbc.writeMem(0x9e23, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9da6);
        EXPECT(gbc.pc(), 0x9e25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e23), 0xcb);
        EXPECT(gbc.readMem(0x9e24), 0xc3);
        // CB C3 0303
        gbc.setState(0x5512, 0x5bb, 0xdb60, 0x848f, 0x33fb, 0xa205, 0x1, 0x0);
        gbc.writeMem(0x5512, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5bb);
        EXPECT(gbc.pc(), 0x5514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0304
        gbc.setState(0x896c, 0xaf5b, 0x7890, 0xed58, 0xab0b, 0x7e1b, 0x0, 0x0);
        gbc.writeMem(0x896c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xaf5b);
        EXPECT(gbc.pc(), 0x896e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x896c), 0xcb);
        EXPECT(gbc.readMem(0x896d), 0xc3);
        // CB C3 0305
        gbc.setState(0x8639, 0x9b66, 0xd6d0, 0x413b, 0x8a9d, 0xad3f, 0x0, 0x0);
        gbc.writeMem(0x8639, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9b66);
        EXPECT(gbc.pc(), 0x863b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8639), 0xcb);
        EXPECT(gbc.readMem(0x863a), 0xc3);
        // CB C3 0306
        gbc.setState(0x4ba1, 0x7ae9, 0xd9b0, 0x8bda, 0x1f06, 0xd304, 0x1, 0x1);
        gbc.writeMem(0x4ba1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7ae9);
        EXPECT(gbc.pc(), 0x4ba3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0307
        gbc.setState(0x6628, 0xd413, 0xfbe0, 0xcc8e, 0xa2c, 0x582a, 0x0, 0x1);
        gbc.writeMem(0x6628, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd413);
        EXPECT(gbc.pc(), 0x662a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0308
        gbc.setState(0x62bd, 0x6cc9, 0x5cd0, 0x222a, 0xab21, 0xf5b6, 0x1, 0x0);
        gbc.writeMem(0x62bd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6cc9);
        EXPECT(gbc.pc(), 0x62bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0309
        gbc.setState(0xc4d8, 0x54ad, 0xc2e0, 0x1f01, 0xbefb, 0xb5f6, 0x1, 0x1);
        gbc.writeMem(0xc4d8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x54ad);
        EXPECT(gbc.pc(), 0xc4da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4d8), 0xcb);
        EXPECT(gbc.readMem(0xc4d9), 0xc3);
        // CB C3 030A
        gbc.setState(0x4e10, 0x3e1b, 0x14e0, 0xa0f9, 0x2fe3, 0x26c6, 0x1, 0x1);
        gbc.writeMem(0x4e10, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3e1b);
        EXPECT(gbc.pc(), 0x4e12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 030B
        gbc.setState(0xd5a7, 0x1645, 0x9550, 0x49c8, 0x72c8, 0x761b, 0x0, 0x1);
        gbc.writeMem(0xd5a7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1645);
        EXPECT(gbc.pc(), 0xd5a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a7), 0xcb);
        EXPECT(gbc.readMem(0xd5a8), 0xc3);
        // CB C3 030C
        gbc.setState(0x15b, 0x829c, 0x5d50, 0x64d6, 0x1e7f, 0x8b11, 0x1, 0x0);
        gbc.writeMem(0x15b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x829c);
        EXPECT(gbc.pc(), 0x15d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 030D
        gbc.setState(0xb4c6, 0x389c, 0x12e0, 0xda5f, 0xe8af, 0xc2f6, 0x0, 0x0);
        gbc.writeMem(0xb4c6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x389c);
        EXPECT(gbc.pc(), 0xb4c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4c6), 0xcb);
        EXPECT(gbc.readMem(0xb4c7), 0xc3);
        // CB C3 030E
        gbc.setState(0xa258, 0x275, 0xfa50, 0xbb3, 0xb8f2, 0x644, 0x0, 0x0);
        gbc.writeMem(0xa258, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x275);
        EXPECT(gbc.pc(), 0xa25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa258), 0xcb);
        EXPECT(gbc.readMem(0xa259), 0xc3);
        // CB C3 030F
        gbc.setState(0x9798, 0x2dcb, 0x21f0, 0xc941, 0x92a4, 0x804e, 0x1, 0x1);
        gbc.writeMem(0x9798, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2dcb);
        EXPECT(gbc.pc(), 0x979a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9798), 0xcb);
        EXPECT(gbc.readMem(0x9799), 0xc3);
        // CB C3 0310
        gbc.setState(0x4a26, 0xe4ed, 0x9520, 0x6190, 0xce30, 0x9414, 0x0, 0x0);
        gbc.writeMem(0x4a26, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe4ed);
        EXPECT(gbc.pc(), 0x4a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0311
        gbc.setState(0xbfb1, 0xb192, 0x1960, 0xc015, 0x4e6b, 0x5e9f, 0x1, 0x1);
        gbc.writeMem(0xbfb1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb192);
        EXPECT(gbc.pc(), 0xbfb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb1), 0xcb);
        EXPECT(gbc.readMem(0xbfb2), 0xc3);
        // CB C3 0312
        gbc.setState(0x532b, 0x1ffe, 0x77f0, 0x964e, 0x4692, 0x4faa, 0x1, 0x1);
        gbc.writeMem(0x532b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1ffe);
        EXPECT(gbc.pc(), 0x532d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0313
        gbc.setState(0x44c, 0xf324, 0x5a20, 0x66f9, 0x7c44, 0x1b0e, 0x1, 0x0);
        gbc.writeMem(0x44c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf324);
        EXPECT(gbc.pc(), 0x44e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0314
        gbc.setState(0x514, 0xd7b7, 0xe690, 0x24aa, 0x4394, 0x6d37, 0x0, 0x0);
        gbc.writeMem(0x514, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd7b7);
        EXPECT(gbc.pc(), 0x516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0315
        gbc.setState(0x96ff, 0x2441, 0x980, 0xa14b, 0x7d6d, 0xa12, 0x0, 0x0);
        gbc.writeMem(0x96ff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2441);
        EXPECT(gbc.pc(), 0x9701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ff), 0xcb);
        EXPECT(gbc.readMem(0x9700), 0xc3);
        // CB C3 0316
        gbc.setState(0x517b, 0xeabc, 0xcc80, 0x647a, 0x193d, 0xeda2, 0x1, 0x1);
        gbc.writeMem(0x517b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xeabc);
        EXPECT(gbc.pc(), 0x517d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0317
        gbc.setState(0xa6ff, 0x309d, 0xfef0, 0x5002, 0x3278, 0x238a, 0x0, 0x1);
        gbc.writeMem(0xa6ff, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x309d);
        EXPECT(gbc.pc(), 0xa701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ff), 0xcb);
        EXPECT(gbc.readMem(0xa700), 0xc3);
        // CB C3 0318
        gbc.setState(0x526f, 0xce09, 0xfb50, 0x803c, 0x6208, 0xa1b5, 0x1, 0x0);
        gbc.writeMem(0x526f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xce09);
        EXPECT(gbc.pc(), 0x5271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0319
        gbc.setState(0xcd4e, 0xe8a2, 0xcaf0, 0x9ce7, 0xcdb7, 0xb89b, 0x0, 0x0);
        gbc.writeMem(0xcd4e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe8a2);
        EXPECT(gbc.pc(), 0xcd50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4e), 0xcb);
        EXPECT(gbc.readMem(0xcd4f), 0xc3);
        // CB C3 031A
        gbc.setState(0xdb1, 0x1bb6, 0x1080, 0x4ac9, 0x5a13, 0x4374, 0x1, 0x1);
        gbc.writeMem(0xdb1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1bb6);
        EXPECT(gbc.pc(), 0xdb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 031B
        gbc.setState(0x3315, 0x1c1b, 0x9800, 0xf527, 0xbfdc, 0x98c8, 0x0, 0x0);
        gbc.writeMem(0x3315, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1c1b);
        EXPECT(gbc.pc(), 0x3317);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 031C
        gbc.setState(0x109b, 0x9853, 0x3870, 0xb88c, 0xf1ff, 0x655f, 0x1, 0x0);
        gbc.writeMem(0x109b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9853);
        EXPECT(gbc.pc(), 0x109d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 031D
        gbc.setState(0xc41b, 0x3060, 0xdae0, 0xece7, 0x90c2, 0x85c3, 0x0, 0x1);
        gbc.writeMem(0xc41b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3060);
        EXPECT(gbc.pc(), 0xc41d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc41b), 0xcb);
        EXPECT(gbc.readMem(0xc41c), 0xc3);
        // CB C3 031E
        gbc.setState(0xd5a0, 0x17ac, 0x6630, 0xa3a7, 0xdcbd, 0x17cd, 0x0, 0x0);
        gbc.writeMem(0xd5a0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x17ac);
        EXPECT(gbc.pc(), 0xd5a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a0), 0xcb);
        EXPECT(gbc.readMem(0xd5a1), 0xc3);
        // CB C3 0320
        gbc.setState(0x33cb, 0x890c, 0x5ed0, 0x4ad7, 0x183d, 0x2525, 0x1, 0x1);
        gbc.writeMem(0x33cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x890c);
        EXPECT(gbc.pc(), 0x33cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0321
        gbc.setState(0xef9a, 0xe4ba, 0x1d70, 0x14e4, 0xd6cf, 0x981b, 0x0, 0x0);
        gbc.writeMem(0xef9a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe4ba);
        EXPECT(gbc.pc(), 0xef9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef9a), 0xcb);
        EXPECT(gbc.readMem(0xef9b), 0xc3);
        // CB C3 0322
        gbc.setState(0x2e95, 0xd4fc, 0x8ea0, 0x587e, 0xe585, 0x9001, 0x1, 0x0);
        gbc.writeMem(0x2e95, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd4fc);
        EXPECT(gbc.pc(), 0x2e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0323
        gbc.setState(0x4443, 0xbf16, 0x4c00, 0x8786, 0xbc13, 0xa8d8, 0x1, 0x0);
        gbc.writeMem(0x4443, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbf16);
        EXPECT(gbc.pc(), 0x4445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0324
        gbc.setState(0xbd1c, 0xb28c, 0xb5b0, 0x3afa, 0x8c69, 0x3b80, 0x0, 0x1);
        gbc.writeMem(0xbd1c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb28c);
        EXPECT(gbc.pc(), 0xbd1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd1c), 0xcb);
        EXPECT(gbc.readMem(0xbd1d), 0xc3);
        // CB C3 0325
        gbc.setState(0x733e, 0xdfe1, 0x16d0, 0x1f27, 0xa1f0, 0x666b, 0x0, 0x0);
        gbc.writeMem(0x733e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xdfe1);
        EXPECT(gbc.pc(), 0x7340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0326
        gbc.setState(0xa874, 0x7ea4, 0x8a60, 0xb7a7, 0xec03, 0xb207, 0x1, 0x0);
        gbc.writeMem(0xa874, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7ea4);
        EXPECT(gbc.pc(), 0xa876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa874), 0xcb);
        EXPECT(gbc.readMem(0xa875), 0xc3);
        // CB C3 0327
        gbc.setState(0x75fc, 0x37a9, 0xfd40, 0x649c, 0xef3e, 0xc01e, 0x0, 0x0);
        gbc.writeMem(0x75fc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x37a9);
        EXPECT(gbc.pc(), 0x75fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0328
        gbc.setState(0x99de, 0x4aac, 0x64c0, 0x6bbe, 0xed14, 0xd9d, 0x0, 0x0);
        gbc.writeMem(0x99de, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4aac);
        EXPECT(gbc.pc(), 0x99e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99de), 0xcb);
        EXPECT(gbc.readMem(0x99df), 0xc3);
        // CB C3 0329
        gbc.setState(0x230e, 0x75dd, 0xd5e0, 0xa59c, 0xe39d, 0x4563, 0x1, 0x1);
        gbc.writeMem(0x230e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x75dd);
        EXPECT(gbc.pc(), 0x2310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 032A
        gbc.setState(0xa69, 0xb67, 0x29d0, 0x8c54, 0x47b, 0xde10, 0x1, 0x1);
        gbc.writeMem(0xa69, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb67);
        EXPECT(gbc.pc(), 0xa6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 032B
        gbc.setState(0xbca, 0x8001, 0x630, 0x5f92, 0x8495, 0xece, 0x1, 0x1);
        gbc.writeMem(0xbca, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8001);
        EXPECT(gbc.pc(), 0xbcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 032D
        gbc.setState(0x655, 0x49a7, 0xddb0, 0x8a1e, 0xd997, 0x925f, 0x0, 0x1);
        gbc.writeMem(0x655, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x49a7);
        EXPECT(gbc.pc(), 0x657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 032E
        gbc.setState(0x65d1, 0x75b, 0xfeb0, 0xa447, 0x8aef, 0xe5be, 0x1, 0x1);
        gbc.writeMem(0x65d1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x75b);
        EXPECT(gbc.pc(), 0x65d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 032F
        gbc.setState(0x59d1, 0xab35, 0x1dc0, 0x87dd, 0x3dae, 0x3102, 0x1, 0x1);
        gbc.writeMem(0x59d1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xab35);
        EXPECT(gbc.pc(), 0x59d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0330
        gbc.setState(0xce98, 0xfb96, 0xd830, 0x1334, 0xa2c8, 0xab65, 0x1, 0x0);
        gbc.writeMem(0xce98, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfb96);
        EXPECT(gbc.pc(), 0xce9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce98), 0xcb);
        EXPECT(gbc.readMem(0xce99), 0xc3);
        // CB C3 0331
        gbc.setState(0x536e, 0x2fd9, 0xb840, 0xa56a, 0xed87, 0x1bb6, 0x0, 0x0);
        gbc.writeMem(0x536e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2fd9);
        EXPECT(gbc.pc(), 0x5370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0332
        gbc.setState(0x7f87, 0x4e72, 0x3150, 0x996, 0x8ab, 0xd5f0, 0x0, 0x1);
        gbc.writeMem(0x7f87, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4e72);
        EXPECT(gbc.pc(), 0x7f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0333
        gbc.setState(0x17fc, 0xba7d, 0x7bc0, 0x66c6, 0x6c9e, 0xb8e9, 0x1, 0x1);
        gbc.writeMem(0x17fc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xba7d);
        EXPECT(gbc.pc(), 0x17fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0334
        gbc.setState(0x2791, 0x8328, 0xf8e0, 0x2eec, 0xd12c, 0xe752, 0x0, 0x0);
        gbc.writeMem(0x2791, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8328);
        EXPECT(gbc.pc(), 0x2793);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0335
        gbc.setState(0xbbfc, 0xc11b, 0x2ad0, 0xe8b6, 0xb0eb, 0x2e75, 0x0, 0x1);
        gbc.writeMem(0xbbfc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc11b);
        EXPECT(gbc.pc(), 0xbbfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbfc), 0xcb);
        EXPECT(gbc.readMem(0xbbfd), 0xc3);
        // CB C3 0336
        gbc.setState(0x87fe, 0xe098, 0xe1d0, 0x4f4c, 0x9ab7, 0xdb57, 0x1, 0x1);
        gbc.writeMem(0x87fe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe098);
        EXPECT(gbc.pc(), 0x8800);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87fe), 0xcb);
        EXPECT(gbc.readMem(0x87ff), 0xc3);
        // CB C3 0337
        gbc.setState(0x4a7b, 0x5886, 0x3f90, 0x10a6, 0xbab7, 0x987a, 0x1, 0x0);
        gbc.writeMem(0x4a7b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5886);
        EXPECT(gbc.pc(), 0x4a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0338
        gbc.setState(0x660b, 0x736f, 0xa540, 0xfb42, 0xe244, 0xd772, 0x1, 0x0);
        gbc.writeMem(0x660b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x736f);
        EXPECT(gbc.pc(), 0x660d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0339
        gbc.setState(0x92d0, 0x62e6, 0xd6c0, 0x5ba8, 0x6ca1, 0x4e30, 0x1, 0x0);
        gbc.writeMem(0x92d0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x62e6);
        EXPECT(gbc.pc(), 0x92d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d0), 0xcb);
        EXPECT(gbc.readMem(0x92d1), 0xc3);
        // CB C3 033A
        gbc.setState(0x5148, 0x48cb, 0x6580, 0xb58e, 0x8d47, 0xc7c4, 0x1, 0x1);
        gbc.writeMem(0x5148, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x48cb);
        EXPECT(gbc.pc(), 0x514a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 033B
        gbc.setState(0x66e, 0x8bc3, 0x37c0, 0xc35f, 0x5bae, 0xd370, 0x0, 0x1);
        gbc.writeMem(0x66e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8bc3);
        EXPECT(gbc.pc(), 0x670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 033C
        gbc.setState(0x2060, 0xbad9, 0x56c0, 0xaae6, 0x2456, 0xfb27, 0x1, 0x0);
        gbc.writeMem(0x2060, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbad9);
        EXPECT(gbc.pc(), 0x2062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 033D
        gbc.setState(0x826a, 0xad7, 0xbbe0, 0x97cf, 0x7b4b, 0xa4c, 0x1, 0x1);
        gbc.writeMem(0x826a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xad7);
        EXPECT(gbc.pc(), 0x826c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826a), 0xcb);
        EXPECT(gbc.readMem(0x826b), 0xc3);
        // CB C3 033E
        gbc.setState(0x74a0, 0x90cb, 0x3e60, 0xfcc2, 0x92b0, 0x6cb1, 0x1, 0x1);
        gbc.writeMem(0x74a0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x90cb);
        EXPECT(gbc.pc(), 0x74a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 033F
        gbc.setState(0x68f5, 0x7679, 0xf7d0, 0xdd3e, 0xa387, 0x9a37, 0x1, 0x0);
        gbc.writeMem(0x68f5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7679);
        EXPECT(gbc.pc(), 0x68f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0340
        gbc.setState(0xce3, 0x7d63, 0xfe60, 0x9a75, 0xea17, 0xc7e4, 0x1, 0x1);
        gbc.writeMem(0xce3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7d63);
        EXPECT(gbc.pc(), 0xce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0341
        gbc.setState(0x97f0, 0x5c8c, 0x8e20, 0x4108, 0xc95e, 0xb4b2, 0x0, 0x0);
        gbc.writeMem(0x97f0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5c8c);
        EXPECT(gbc.pc(), 0x97f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f0), 0xcb);
        EXPECT(gbc.readMem(0x97f1), 0xc3);
        // CB C3 0343
        gbc.setState(0xe065, 0x54e4, 0x3070, 0xb41b, 0xf6c8, 0xe274, 0x0, 0x1);
        gbc.writeMem(0xe065, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x54e4);
        EXPECT(gbc.pc(), 0xe067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe065), 0xcb);
        EXPECT(gbc.readMem(0xe066), 0xc3);
        // CB C3 0344
        gbc.setState(0xb8d6, 0xe638, 0x58d0, 0x9b4f, 0xade8, 0x4950, 0x0, 0x1);
        gbc.writeMem(0xb8d6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe638);
        EXPECT(gbc.pc(), 0xb8d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d6), 0xcb);
        EXPECT(gbc.readMem(0xb8d7), 0xc3);
        // CB C3 0345
        gbc.setState(0xb570, 0xba34, 0x4b60, 0xe3fe, 0x29d9, 0x8615, 0x0, 0x1);
        gbc.writeMem(0xb570, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xba34);
        EXPECT(gbc.pc(), 0xb572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb570), 0xcb);
        EXPECT(gbc.readMem(0xb571), 0xc3);
        // CB C3 0346
        gbc.setState(0xd224, 0x5249, 0xe180, 0xd43, 0x355f, 0x2ae8, 0x0, 0x0);
        gbc.writeMem(0xd224, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5249);
        EXPECT(gbc.pc(), 0xd226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd224), 0xcb);
        EXPECT(gbc.readMem(0xd225), 0xc3);
        // CB C3 0347
        gbc.setState(0xc9bd, 0xbf25, 0x55d0, 0x6d7b, 0x73d2, 0x4925, 0x1, 0x1);
        gbc.writeMem(0xc9bd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbf25);
        EXPECT(gbc.pc(), 0xc9bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9bd), 0xcb);
        EXPECT(gbc.readMem(0xc9be), 0xc3);
        // CB C3 0348
        gbc.setState(0x5a33, 0xe1ab, 0x57b0, 0x595c, 0x6575, 0xcdea, 0x1, 0x1);
        gbc.writeMem(0x5a33, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe1ab);
        EXPECT(gbc.pc(), 0x5a35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0349
        gbc.setState(0x80e5, 0xdf9e, 0xd730, 0x4fb2, 0x3224, 0x2f72, 0x1, 0x0);
        gbc.writeMem(0x80e5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdf9e);
        EXPECT(gbc.pc(), 0x80e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e5), 0xcb);
        EXPECT(gbc.readMem(0x80e6), 0xc3);
        // CB C3 034A
        gbc.setState(0x92be, 0xf4e3, 0x5b50, 0xc330, 0xfad5, 0x6451, 0x0, 0x1);
        gbc.writeMem(0x92be, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf4e3);
        EXPECT(gbc.pc(), 0x92c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92be), 0xcb);
        EXPECT(gbc.readMem(0x92bf), 0xc3);
        // CB C3 034B
        gbc.setState(0xb0d, 0x10f4, 0x8bc0, 0xf26a, 0x3838, 0x686f, 0x0, 0x0);
        gbc.writeMem(0xb0d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x10f4);
        EXPECT(gbc.pc(), 0xb0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 034C
        gbc.setState(0xae39, 0x510f, 0x5260, 0xe36, 0x7e2d, 0x5edd, 0x0, 0x1);
        gbc.writeMem(0xae39, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x510f);
        EXPECT(gbc.pc(), 0xae3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae39), 0xcb);
        EXPECT(gbc.readMem(0xae3a), 0xc3);
        // CB C3 034D
        gbc.setState(0xe62b, 0x48e8, 0x2300, 0xdc85, 0x4321, 0x559b, 0x1, 0x1);
        gbc.writeMem(0xe62b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x48e8);
        EXPECT(gbc.pc(), 0xe62d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe62b), 0xcb);
        EXPECT(gbc.readMem(0xe62c), 0xc3);
        // CB C3 034E
        gbc.setState(0x31ed, 0x4039, 0xa030, 0x51e6, 0x3dcb, 0x63b5, 0x0, 0x1);
        gbc.writeMem(0x31ed, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4039);
        EXPECT(gbc.pc(), 0x31ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 034F
        gbc.setState(0x4751, 0xe870, 0x5f40, 0x3848, 0x3f11, 0x1dc0, 0x0, 0x0);
        gbc.writeMem(0x4751, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe870);
        EXPECT(gbc.pc(), 0x4753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0350
        gbc.setState(0xc60c, 0xc63f, 0x1830, 0xeae4, 0x8353, 0x9d64, 0x0, 0x1);
        gbc.writeMem(0xc60c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc63f);
        EXPECT(gbc.pc(), 0xc60e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc60c), 0xcb);
        EXPECT(gbc.readMem(0xc60d), 0xc3);
        // CB C3 0351
        gbc.setState(0xd20a, 0xe178, 0xd9d0, 0xdf1c, 0xc4b3, 0x7240, 0x1, 0x1);
        gbc.writeMem(0xd20a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe178);
        EXPECT(gbc.pc(), 0xd20c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd20a), 0xcb);
        EXPECT(gbc.readMem(0xd20b), 0xc3);
        // CB C3 0352
        gbc.setState(0xbab, 0x26ce, 0x29a0, 0x7544, 0xb67a, 0xab9b, 0x1, 0x0);
        gbc.writeMem(0xbab, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x26ce);
        EXPECT(gbc.pc(), 0xbad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0353
        gbc.setState(0xb7ed, 0x9a79, 0xb980, 0x7794, 0x1d05, 0x2696, 0x0, 0x1);
        gbc.writeMem(0xb7ed, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9a79);
        EXPECT(gbc.pc(), 0xb7ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ed), 0xcb);
        EXPECT(gbc.readMem(0xb7ee), 0xc3);
        // CB C3 0354
        gbc.setState(0xb084, 0xc5fb, 0xd150, 0x3c21, 0x73e4, 0x6c97, 0x0, 0x1);
        gbc.writeMem(0xb084, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc5fb);
        EXPECT(gbc.pc(), 0xb086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb084), 0xcb);
        EXPECT(gbc.readMem(0xb085), 0xc3);
        // CB C3 0355
        gbc.setState(0x81d3, 0xedca, 0x3b00, 0x25ef, 0xbd93, 0xff66, 0x0, 0x0);
        gbc.writeMem(0x81d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xedca);
        EXPECT(gbc.pc(), 0x81d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81d3), 0xcb);
        EXPECT(gbc.readMem(0x81d4), 0xc3);
        // CB C3 0356
        gbc.setState(0xb03, 0xf27a, 0x64b0, 0x56c7, 0x7887, 0x65db, 0x1, 0x1);
        gbc.writeMem(0xb03, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf27a);
        EXPECT(gbc.pc(), 0xb05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0358
        gbc.setState(0xe7cb, 0x2b4a, 0xaf70, 0x3bee, 0x7db3, 0x4939, 0x0, 0x1);
        gbc.writeMem(0xe7cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2b4a);
        EXPECT(gbc.pc(), 0xe7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7cb), 0xcb);
        EXPECT(gbc.readMem(0xe7cc), 0xc3);
        // CB C3 0359
        gbc.setState(0x9dee, 0x21b, 0x11a0, 0x8959, 0x8b05, 0x68a0, 0x1, 0x0);
        gbc.writeMem(0x9dee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x21b);
        EXPECT(gbc.pc(), 0x9df0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dee), 0xcb);
        EXPECT(gbc.readMem(0x9def), 0xc3);
        // CB C3 035A
        gbc.setState(0x3f26, 0x1ceb, 0xc010, 0xa495, 0x8125, 0x33d7, 0x0, 0x0);
        gbc.writeMem(0x3f26, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1ceb);
        EXPECT(gbc.pc(), 0x3f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 035B
        gbc.setState(0x5de7, 0x44d3, 0x9f70, 0x7207, 0x1acf, 0xd0d, 0x0, 0x1);
        gbc.writeMem(0x5de7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x44d3);
        EXPECT(gbc.pc(), 0x5de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 035C
        gbc.setState(0x8eb2, 0x508e, 0x18b0, 0x4ff6, 0x1b66, 0xd446, 0x0, 0x0);
        gbc.writeMem(0x8eb2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x508e);
        EXPECT(gbc.pc(), 0x8eb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb2), 0xcb);
        EXPECT(gbc.readMem(0x8eb3), 0xc3);
        // CB C3 035E
        gbc.setState(0xb037, 0xf66d, 0x2010, 0x5fa3, 0xd9f0, 0xf559, 0x1, 0x0);
        gbc.writeMem(0xb037, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf66d);
        EXPECT(gbc.pc(), 0xb039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb037), 0xcb);
        EXPECT(gbc.readMem(0xb038), 0xc3);
        // CB C3 035F
        gbc.setState(0xcb5a, 0xe915, 0x5df0, 0xd65a, 0x2ab, 0x7189, 0x1, 0x1);
        gbc.writeMem(0xcb5a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe915);
        EXPECT(gbc.pc(), 0xcb5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb5a), 0xcb);
        EXPECT(gbc.readMem(0xcb5b), 0xc3);
        // CB C3 0360
        gbc.setState(0x73ec, 0x4f0b, 0x9ad0, 0xbff4, 0x7fb3, 0x1054, 0x0, 0x1);
        gbc.writeMem(0x73ec, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4f0b);
        EXPECT(gbc.pc(), 0x73ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0361
        gbc.setState(0x74bd, 0xc696, 0x2420, 0x82bb, 0xfbd4, 0x394c, 0x0, 0x1);
        gbc.writeMem(0x74bd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc696);
        EXPECT(gbc.pc(), 0x74bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0362
        gbc.setState(0xd880, 0x9934, 0x1bc0, 0x1ecc, 0xd3be, 0xb716, 0x1, 0x0);
        gbc.writeMem(0xd880, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9934);
        EXPECT(gbc.pc(), 0xd882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd880), 0xcb);
        EXPECT(gbc.readMem(0xd881), 0xc3);
        // CB C3 0363
        gbc.setState(0xcdbd, 0x3774, 0xce10, 0xd7a8, 0xd859, 0x3b5d, 0x0, 0x0);
        gbc.writeMem(0xcdbd, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3774);
        EXPECT(gbc.pc(), 0xcdbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdbd), 0xcb);
        EXPECT(gbc.readMem(0xcdbe), 0xc3);
        // CB C3 0364
        gbc.setState(0x8991, 0xed88, 0x1750, 0xd0e, 0xb4d0, 0x6ccf, 0x1, 0x1);
        gbc.writeMem(0x8991, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xed88);
        EXPECT(gbc.pc(), 0x8993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8991), 0xcb);
        EXPECT(gbc.readMem(0x8992), 0xc3);
        // CB C3 0365
        gbc.setState(0xd16f, 0x709a, 0x9300, 0xd119, 0xe112, 0x6d55, 0x1, 0x1);
        gbc.writeMem(0xd16f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x709a);
        EXPECT(gbc.pc(), 0xd171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd16f), 0xcb);
        EXPECT(gbc.readMem(0xd170), 0xc3);
        // CB C3 0366
        gbc.setState(0xde9a, 0x4177, 0xdec0, 0x778e, 0x3eae, 0x17ce, 0x0, 0x1);
        gbc.writeMem(0xde9a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4177);
        EXPECT(gbc.pc(), 0xde9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9a), 0xcb);
        EXPECT(gbc.readMem(0xde9b), 0xc3);
        // CB C3 0367
        gbc.setState(0x95eb, 0x33b4, 0x4830, 0x8315, 0xa620, 0xe2ea, 0x1, 0x0);
        gbc.writeMem(0x95eb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x33b4);
        EXPECT(gbc.pc(), 0x95ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95eb), 0xcb);
        EXPECT(gbc.readMem(0x95ec), 0xc3);
        // CB C3 0368
        gbc.setState(0xc316, 0x7d5d, 0x71b0, 0xe0a7, 0x82b2, 0x1ec8, 0x1, 0x1);
        gbc.writeMem(0xc316, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7d5d);
        EXPECT(gbc.pc(), 0xc318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc316), 0xcb);
        EXPECT(gbc.readMem(0xc317), 0xc3);
        // CB C3 036A
        gbc.setState(0x1485, 0x7012, 0x5c50, 0xb4b0, 0x37f7, 0xd665, 0x1, 0x1);
        gbc.writeMem(0x1485, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7012);
        EXPECT(gbc.pc(), 0x1487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 036B
        gbc.setState(0x21f3, 0x3fb4, 0xbd00, 0x4c35, 0xd290, 0x581e, 0x0, 0x1);
        gbc.writeMem(0x21f3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3fb4);
        EXPECT(gbc.pc(), 0x21f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 036C
        gbc.setState(0x456d, 0x172, 0xb3a0, 0x2d70, 0x995c, 0x496, 0x0, 0x1);
        gbc.writeMem(0x456d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x172);
        EXPECT(gbc.pc(), 0x456f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 036D
        gbc.setState(0xaf70, 0x4a83, 0x7940, 0x4e29, 0x184a, 0xaaa1, 0x1, 0x0);
        gbc.writeMem(0xaf70, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4a83);
        EXPECT(gbc.pc(), 0xaf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf70), 0xcb);
        EXPECT(gbc.readMem(0xaf71), 0xc3);
        // CB C3 036E
        gbc.setState(0x46d4, 0xd7af, 0x4a80, 0xfef3, 0xf8b3, 0xe65b, 0x0, 0x1);
        gbc.writeMem(0x46d4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd7af);
        EXPECT(gbc.pc(), 0x46d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 036F
        gbc.setState(0x25ed, 0xf91, 0xc2c0, 0x7df9, 0x749e, 0xfc64, 0x0, 0x0);
        gbc.writeMem(0x25ed, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf91);
        EXPECT(gbc.pc(), 0x25ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0370
        gbc.setState(0x944, 0xf57d, 0x9480, 0x5cca, 0xe530, 0xdc85, 0x1, 0x1);
        gbc.writeMem(0x944, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf57d);
        EXPECT(gbc.pc(), 0x946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0371
        gbc.setState(0x93eb, 0xd29d, 0x6fb0, 0x3bb2, 0x94ed, 0xdeb8, 0x0, 0x0);
        gbc.writeMem(0x93eb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd29d);
        EXPECT(gbc.pc(), 0x93ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93eb), 0xcb);
        EXPECT(gbc.readMem(0x93ec), 0xc3);
        // CB C3 0372
        gbc.setState(0xd379, 0x4b2b, 0xfc80, 0xef7e, 0xbdf2, 0x6bc6, 0x1, 0x0);
        gbc.writeMem(0xd379, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4b2b);
        EXPECT(gbc.pc(), 0xd37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd379), 0xcb);
        EXPECT(gbc.readMem(0xd37a), 0xc3);
        // CB C3 0373
        gbc.setState(0xaaad, 0x7a9c, 0xe5a0, 0x5e25, 0x984c, 0xc31b, 0x1, 0x1);
        gbc.writeMem(0xaaad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7a9c);
        EXPECT(gbc.pc(), 0xaaaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaad), 0xcb);
        EXPECT(gbc.readMem(0xaaae), 0xc3);
        // CB C3 0374
        gbc.setState(0x3f76, 0x2da5, 0xb3e0, 0x3a5b, 0x7ceb, 0x2484, 0x1, 0x0);
        gbc.writeMem(0x3f76, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2da5);
        EXPECT(gbc.pc(), 0x3f78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0375
        gbc.setState(0xcdd4, 0xee7c, 0x7100, 0x9fcf, 0x9a87, 0xe8c2, 0x1, 0x0);
        gbc.writeMem(0xcdd4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xee7c);
        EXPECT(gbc.pc(), 0xcdd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd4), 0xcb);
        EXPECT(gbc.readMem(0xcdd5), 0xc3);
        // CB C3 0376
        gbc.setState(0x16f, 0x96c2, 0xd420, 0xe771, 0xe6e9, 0x4a72, 0x1, 0x1);
        gbc.writeMem(0x16f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x96c2);
        EXPECT(gbc.pc(), 0x171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0377
        gbc.setState(0xb240, 0x13d2, 0x1160, 0x7050, 0x4b69, 0x3d0f, 0x1, 0x0);
        gbc.writeMem(0xb240, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x13d2);
        EXPECT(gbc.pc(), 0xb242);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb240), 0xcb);
        EXPECT(gbc.readMem(0xb241), 0xc3);
        // CB C3 0378
        gbc.setState(0x4afe, 0x8f0b, 0x3700, 0x5beb, 0x8473, 0x1821, 0x0, 0x0);
        gbc.writeMem(0x4afe, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8f0b);
        EXPECT(gbc.pc(), 0x4b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0379
        gbc.setState(0x96d, 0x3ffa, 0x9860, 0xa576, 0xfa29, 0x79df, 0x0, 0x1);
        gbc.writeMem(0x96d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3ffa);
        EXPECT(gbc.pc(), 0x96f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 037A
        gbc.setState(0x38d3, 0x7a46, 0x600, 0xf813, 0xd432, 0xd30a, 0x0, 0x1);
        gbc.writeMem(0x38d3, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7a46);
        EXPECT(gbc.pc(), 0x38d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 037B
        gbc.setState(0x90b7, 0x686e, 0x5490, 0x5e94, 0xfdca, 0xb56f, 0x1, 0x1);
        gbc.writeMem(0x90b7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x686e);
        EXPECT(gbc.pc(), 0x90b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b7), 0xcb);
        EXPECT(gbc.readMem(0x90b8), 0xc3);
        // CB C3 037C
        gbc.setState(0x9175, 0xbff8, 0x87a0, 0x6740, 0x32c6, 0xa89d, 0x1, 0x1);
        gbc.writeMem(0x9175, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xbff8);
        EXPECT(gbc.pc(), 0x9177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9175), 0xcb);
        EXPECT(gbc.readMem(0x9176), 0xc3);
        // CB C3 037E
        gbc.setState(0x68ba, 0x6981, 0x5ff0, 0x395a, 0xf1b5, 0xc318, 0x1, 0x0);
        gbc.writeMem(0x68ba, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6981);
        EXPECT(gbc.pc(), 0x68bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 037F
        gbc.setState(0x1ad, 0x33b1, 0xc9b0, 0xf693, 0xf7bb, 0x9c5a, 0x0, 0x1);
        gbc.writeMem(0x1ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x33b1);
        EXPECT(gbc.pc(), 0x1af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0380
        gbc.setState(0x3e77, 0x6681, 0xb980, 0x584, 0xf285, 0x95f, 0x1, 0x1);
        gbc.writeMem(0x3e77, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6681);
        EXPECT(gbc.pc(), 0x3e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0381
        gbc.setState(0xd597, 0x6d55, 0x7080, 0xf362, 0x55fb, 0x20e6, 0x0, 0x0);
        gbc.writeMem(0xd597, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6d55);
        EXPECT(gbc.pc(), 0xd599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd597), 0xcb);
        EXPECT(gbc.readMem(0xd598), 0xc3);
        // CB C3 0382
        gbc.setState(0x8d69, 0x20e0, 0xa0e0, 0xf5ed, 0x5a71, 0x9b3a, 0x1, 0x1);
        gbc.writeMem(0x8d69, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x20e0);
        EXPECT(gbc.pc(), 0x8d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d69), 0xcb);
        EXPECT(gbc.readMem(0x8d6a), 0xc3);
        // CB C3 0383
        gbc.setState(0x31be, 0x6281, 0x27a0, 0xf042, 0x3d99, 0x9002, 0x1, 0x0);
        gbc.writeMem(0x31be, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6281);
        EXPECT(gbc.pc(), 0x31c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0384
        gbc.setState(0xbae0, 0xcad2, 0x34f0, 0xe62a, 0x1280, 0x9bbb, 0x0, 0x0);
        gbc.writeMem(0xbae0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcad2);
        EXPECT(gbc.pc(), 0xbae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbae0), 0xcb);
        EXPECT(gbc.readMem(0xbae1), 0xc3);
        // CB C3 0385
        gbc.setState(0x9d58, 0xab3, 0x8910, 0xc0cd, 0x725e, 0x5218, 0x1, 0x0);
        gbc.writeMem(0x9d58, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xab3);
        EXPECT(gbc.pc(), 0x9d5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d58), 0xcb);
        EXPECT(gbc.readMem(0x9d59), 0xc3);
        // CB C3 0386
        gbc.setState(0xd1d6, 0xb64c, 0x6b70, 0xfe5f, 0x5b4a, 0xb562, 0x0, 0x0);
        gbc.writeMem(0xd1d6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb64c);
        EXPECT(gbc.pc(), 0xd1d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d6), 0xcb);
        EXPECT(gbc.readMem(0xd1d7), 0xc3);
        // CB C3 0388
        gbc.setState(0xeb2b, 0xadf7, 0xaf40, 0xb34f, 0x7c74, 0x6c0, 0x1, 0x1);
        gbc.writeMem(0xeb2b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xadf7);
        EXPECT(gbc.pc(), 0xeb2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb2b), 0xcb);
        EXPECT(gbc.readMem(0xeb2c), 0xc3);
        // CB C3 0389
        gbc.setState(0x1855, 0xc53b, 0x8f90, 0x3215, 0x9b8c, 0xbac, 0x0, 0x1);
        gbc.writeMem(0x1855, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc53b);
        EXPECT(gbc.pc(), 0x1857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 038A
        gbc.setState(0xb34f, 0x1275, 0x3780, 0x14cf, 0x47ae, 0x6244, 0x0, 0x0);
        gbc.writeMem(0xb34f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1275);
        EXPECT(gbc.pc(), 0xb351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb34f), 0xcb);
        EXPECT(gbc.readMem(0xb350), 0xc3);
        // CB C3 038B
        gbc.setState(0x7e41, 0xd0bd, 0xb300, 0x6d70, 0xaead, 0x5e87, 0x1, 0x1);
        gbc.writeMem(0x7e41, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd0bd);
        EXPECT(gbc.pc(), 0x7e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 038C
        gbc.setState(0xdd3f, 0x744f, 0x1ee0, 0x13fb, 0xf24f, 0x7ff3, 0x0, 0x1);
        gbc.writeMem(0xdd3f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x744f);
        EXPECT(gbc.pc(), 0xdd41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd3f), 0xcb);
        EXPECT(gbc.readMem(0xdd40), 0xc3);
        // CB C3 038E
        gbc.setState(0x402f, 0x93ee, 0x71b0, 0x60fb, 0xa76b, 0x1c63, 0x1, 0x0);
        gbc.writeMem(0x402f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x93ee);
        EXPECT(gbc.pc(), 0x4031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 038F
        gbc.setState(0xc49f, 0xd8d5, 0xd0f0, 0xa891, 0xbcf9, 0x9709, 0x1, 0x1);
        gbc.writeMem(0xc49f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd8d5);
        EXPECT(gbc.pc(), 0xc4a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc49f), 0xcb);
        EXPECT(gbc.readMem(0xc4a0), 0xc3);
        // CB C3 0390
        gbc.setState(0xeb5, 0x55be, 0xf460, 0xaa29, 0x5d74, 0x6d3f, 0x0, 0x1);
        gbc.writeMem(0xeb5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x55be);
        EXPECT(gbc.pc(), 0xeb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0391
        gbc.setState(0x73c6, 0x6359, 0xed70, 0x665, 0x8f23, 0x4e39, 0x0, 0x0);
        gbc.writeMem(0x73c6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6359);
        EXPECT(gbc.pc(), 0x73c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 0392
        gbc.setState(0xdab6, 0xe350, 0xedd0, 0x554b, 0x1d73, 0xe972, 0x0, 0x1);
        gbc.writeMem(0xdab6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe350);
        EXPECT(gbc.pc(), 0xdab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdab6), 0xcb);
        EXPECT(gbc.readMem(0xdab7), 0xc3);
        // CB C3 0393
        gbc.setState(0xdd4b, 0x3873, 0xbd80, 0x531e, 0x5182, 0x2069, 0x0, 0x1);
        gbc.writeMem(0xdd4b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3873);
        EXPECT(gbc.pc(), 0xdd4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd4b), 0xcb);
        EXPECT(gbc.readMem(0xdd4c), 0xc3);
        // CB C3 0394
        gbc.setState(0xc6cc, 0xbbc2, 0x6660, 0x5351, 0x32f0, 0x5cdb, 0x1, 0x0);
        gbc.writeMem(0xc6cc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbbc2);
        EXPECT(gbc.pc(), 0xc6ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6cc), 0xcb);
        EXPECT(gbc.readMem(0xc6cd), 0xc3);
        // CB C3 0396
        gbc.setState(0x2f0b, 0x7479, 0x38c0, 0x3c9b, 0x8bf4, 0xc945, 0x1, 0x0);
        gbc.writeMem(0x2f0b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7479);
        EXPECT(gbc.pc(), 0x2f0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0397
        gbc.setState(0x117e, 0x8a3c, 0xda0, 0x4dba, 0x238f, 0xb072, 0x0, 0x0);
        gbc.writeMem(0x117e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8a3c);
        EXPECT(gbc.pc(), 0x1180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0398
        gbc.setState(0xc8e, 0xe460, 0xb0a0, 0xaa8f, 0x4c80, 0xa0c9, 0x1, 0x1);
        gbc.writeMem(0xc8e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe460);
        EXPECT(gbc.pc(), 0xc90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 0399
        gbc.setState(0x3c1, 0x67ab, 0xe7c0, 0x6a89, 0x6d8b, 0x9acd, 0x1, 0x1);
        gbc.writeMem(0x3c1, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x67ab);
        EXPECT(gbc.pc(), 0x3c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 039A
        gbc.setState(0x707, 0xe17, 0xd3b0, 0xfc29, 0x4423, 0xdead, 0x1, 0x1);
        gbc.writeMem(0x707, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe17);
        EXPECT(gbc.pc(), 0x709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 039B
        gbc.setState(0xbe15, 0xc6a3, 0x64b0, 0x315d, 0xc20f, 0x1fa1, 0x0, 0x1);
        gbc.writeMem(0xbe15, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc6a3);
        EXPECT(gbc.pc(), 0xbe17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe15), 0xcb);
        EXPECT(gbc.readMem(0xbe16), 0xc3);
        // CB C3 039C
        gbc.setState(0x2565, 0x9c58, 0x6580, 0x5af5, 0xb75f, 0x78c2, 0x0, 0x0);
        gbc.writeMem(0x2565, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9c58);
        EXPECT(gbc.pc(), 0x2567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 039D
        gbc.setState(0x928b, 0xc54b, 0x6ab0, 0xcbbd, 0x2149, 0x5c71, 0x1, 0x0);
        gbc.writeMem(0x928b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc54b);
        EXPECT(gbc.pc(), 0x928d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x928b), 0xcb);
        EXPECT(gbc.readMem(0x928c), 0xc3);
        // CB C3 039E
        gbc.setState(0xdd92, 0x2f20, 0x8ad0, 0xec91, 0x435a, 0xc473, 0x1, 0x1);
        gbc.writeMem(0xdd92, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2f20);
        EXPECT(gbc.pc(), 0xdd94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd92), 0xcb);
        EXPECT(gbc.readMem(0xdd93), 0xc3);
        // CB C3 039F
        gbc.setState(0x4533, 0xe64e, 0x2d00, 0xf718, 0x7cb9, 0xcbc5, 0x1, 0x1);
        gbc.writeMem(0x4533, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe64e);
        EXPECT(gbc.pc(), 0x4535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03A0
        gbc.setState(0xe3d6, 0x16e9, 0xf0, 0x5c0b, 0x3c4a, 0xdbc3, 0x1, 0x0);
        gbc.writeMem(0xe3d6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x16e9);
        EXPECT(gbc.pc(), 0xe3d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3d6), 0xcb);
        EXPECT(gbc.readMem(0xe3d7), 0xc3);
        // CB C3 03A1
        gbc.setState(0xc3f4, 0xb2ec, 0xc910, 0xfd37, 0xf0c, 0xc2c5, 0x0, 0x1);
        gbc.writeMem(0xc3f4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb2ec);
        EXPECT(gbc.pc(), 0xc3f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f4), 0xcb);
        EXPECT(gbc.readMem(0xc3f5), 0xc3);
        // CB C3 03A2
        gbc.setState(0x96aa, 0xdac8, 0xb510, 0xe0b0, 0x4837, 0x6177, 0x0, 0x1);
        gbc.writeMem(0x96aa, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdac8);
        EXPECT(gbc.pc(), 0x96ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96aa), 0xcb);
        EXPECT(gbc.readMem(0x96ab), 0xc3);
        // CB C3 03A3
        gbc.setState(0x427c, 0x91b6, 0xcce0, 0xaf21, 0xae19, 0x35d, 0x0, 0x0);
        gbc.writeMem(0x427c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x91b6);
        EXPECT(gbc.pc(), 0x427e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03A4
        gbc.setState(0x5134, 0xbdf0, 0x77f0, 0xc832, 0xa6f4, 0xfcb1, 0x1, 0x0);
        gbc.writeMem(0x5134, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbdf0);
        EXPECT(gbc.pc(), 0x5136);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03A5
        gbc.setState(0xe964, 0x6b16, 0x2c70, 0xde24, 0x59a8, 0x3d73, 0x0, 0x1);
        gbc.writeMem(0xe964, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6b16);
        EXPECT(gbc.pc(), 0xe966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe964), 0xcb);
        EXPECT(gbc.readMem(0xe965), 0xc3);
        // CB C3 03A6
        gbc.setState(0xac0d, 0x3d9f, 0x1110, 0x5f67, 0xdf31, 0xf092, 0x0, 0x0);
        gbc.writeMem(0xac0d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3d9f);
        EXPECT(gbc.pc(), 0xac0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0d), 0xcb);
        EXPECT(gbc.readMem(0xac0e), 0xc3);
        // CB C3 03A7
        gbc.setState(0x4935, 0x22d2, 0x3910, 0x1fdb, 0xea2f, 0xd25d, 0x0, 0x1);
        gbc.writeMem(0x4935, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x22d2);
        EXPECT(gbc.pc(), 0x4937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03A8
        gbc.setState(0x966c, 0xf701, 0xcf00, 0xc27d, 0xa342, 0x7e0d, 0x0, 0x1);
        gbc.writeMem(0x966c, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf701);
        EXPECT(gbc.pc(), 0x966e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x966c), 0xcb);
        EXPECT(gbc.readMem(0x966d), 0xc3);
        // CB C3 03A9
        gbc.setState(0xba10, 0xeeef, 0x69b0, 0x3cab, 0xa53f, 0x9d7e, 0x1, 0x0);
        gbc.writeMem(0xba10, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xeeef);
        EXPECT(gbc.pc(), 0xba12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba10), 0xcb);
        EXPECT(gbc.readMem(0xba11), 0xc3);
        // CB C3 03AA
        gbc.setState(0xdd83, 0xe14b, 0xa8e0, 0x5839, 0x1bab, 0x6bce, 0x0, 0x0);
        gbc.writeMem(0xdd83, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe14b);
        EXPECT(gbc.pc(), 0xdd85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd83), 0xcb);
        EXPECT(gbc.readMem(0xdd84), 0xc3);
        // CB C3 03AB
        gbc.setState(0x47a, 0x849, 0x54e0, 0x5d1a, 0x37b3, 0xc66, 0x1, 0x0);
        gbc.writeMem(0x47a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x849);
        EXPECT(gbc.pc(), 0x47c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03AC
        gbc.setState(0x59cb, 0x727, 0x2cc0, 0xa2fc, 0xc3b6, 0x7a70, 0x1, 0x0);
        gbc.writeMem(0x59cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x727);
        EXPECT(gbc.pc(), 0x59cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03AD
        gbc.setState(0x9d31, 0xa609, 0x4680, 0x29b0, 0xbc1b, 0x404b, 0x0, 0x1);
        gbc.writeMem(0x9d31, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa609);
        EXPECT(gbc.pc(), 0x9d33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d31), 0xcb);
        EXPECT(gbc.readMem(0x9d32), 0xc3);
        // CB C3 03AE
        gbc.setState(0x3f68, 0x107d, 0x5620, 0x18ee, 0x4cf, 0x8bec, 0x0, 0x0);
        gbc.writeMem(0x3f68, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x107d);
        EXPECT(gbc.pc(), 0x3f6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03AF
        gbc.setState(0x33cb, 0xe8ff, 0xa9e0, 0xace5, 0x3fb6, 0x1ebf, 0x0, 0x0);
        gbc.writeMem(0x33cb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe8ff);
        EXPECT(gbc.pc(), 0x33cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03B0
        gbc.setState(0x5d6b, 0xae99, 0x2800, 0xfde2, 0xb413, 0x27cd, 0x1, 0x0);
        gbc.writeMem(0x5d6b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xae99);
        EXPECT(gbc.pc(), 0x5d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03B1
        gbc.setState(0xd9f6, 0x193b, 0x3920, 0x93b9, 0x477f, 0x54cb, 0x0, 0x0);
        gbc.writeMem(0xd9f6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x193b);
        EXPECT(gbc.pc(), 0xd9f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f6), 0xcb);
        EXPECT(gbc.readMem(0xd9f7), 0xc3);
        // CB C3 03B2
        gbc.setState(0x79fc, 0xca11, 0xa540, 0x88cc, 0xcdd8, 0xfbc5, 0x0, 0x1);
        gbc.writeMem(0x79fc, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xca11);
        EXPECT(gbc.pc(), 0x79fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03B3
        gbc.setState(0x1d2b, 0x72f1, 0x17c0, 0x911a, 0xf4e1, 0x1560, 0x0, 0x1);
        gbc.writeMem(0x1d2b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x72f1);
        EXPECT(gbc.pc(), 0x1d2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03B4
        gbc.setState(0x8af9, 0xba90, 0xca00, 0xf13a, 0x5dc5, 0x47a9, 0x1, 0x0);
        gbc.writeMem(0x8af9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xba90);
        EXPECT(gbc.pc(), 0x8afb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af9), 0xcb);
        EXPECT(gbc.readMem(0x8afa), 0xc3);
        // CB C3 03B5
        gbc.setState(0x594a, 0xa4a0, 0x9f10, 0xc792, 0x5f2, 0xbbd8, 0x0, 0x0);
        gbc.writeMem(0x594a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa4a0);
        EXPECT(gbc.pc(), 0x594c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03B6
        gbc.setState(0xd76a, 0x183f, 0xbab0, 0x9557, 0xf2, 0x8d9d, 0x1, 0x1);
        gbc.writeMem(0xd76a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x183f);
        EXPECT(gbc.pc(), 0xd76c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd76a), 0xcb);
        EXPECT(gbc.readMem(0xd76b), 0xc3);
        // CB C3 03B7
        gbc.setState(0x7820, 0x16c7, 0xcbb0, 0xa3ff, 0x6ba3, 0x1a82, 0x1, 0x1);
        gbc.writeMem(0x7820, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x16c7);
        EXPECT(gbc.pc(), 0x7822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03B8
        gbc.setState(0xe0d0, 0x1814, 0x8890, 0xff6f, 0x2015, 0x3e20, 0x1, 0x1);
        gbc.writeMem(0xe0d0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1814);
        EXPECT(gbc.pc(), 0xe0d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0d0), 0xcb);
        EXPECT(gbc.readMem(0xe0d1), 0xc3);
        // CB C3 03B9
        gbc.setState(0xb814, 0xc956, 0xed30, 0xf08, 0x281f, 0xe61b, 0x0, 0x1);
        gbc.writeMem(0xb814, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc956);
        EXPECT(gbc.pc(), 0xb816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb814), 0xcb);
        EXPECT(gbc.readMem(0xb815), 0xc3);
        // CB C3 03BA
        gbc.setState(0xb097, 0x89e, 0xa100, 0x9453, 0x8d8f, 0x535b, 0x1, 0x1);
        gbc.writeMem(0xb097, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x89e);
        EXPECT(gbc.pc(), 0xb099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb097), 0xcb);
        EXPECT(gbc.readMem(0xb098), 0xc3);
        // CB C3 03BB
        gbc.setState(0x65b, 0x7f73, 0x7e0, 0xef5c, 0x849f, 0x3822, 0x1, 0x0);
        gbc.writeMem(0x65b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7f73);
        EXPECT(gbc.pc(), 0x65d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03BC
        gbc.setState(0x5e9e, 0xb778, 0xdba0, 0x1c5d, 0x9b08, 0x3181, 0x0, 0x1);
        gbc.writeMem(0x5e9e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb778);
        EXPECT(gbc.pc(), 0x5ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03BD
        gbc.setState(0x2ba4, 0x72ed, 0x9e50, 0x6f2a, 0x26f3, 0x36c8, 0x0, 0x1);
        gbc.writeMem(0x2ba4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x72ed);
        EXPECT(gbc.pc(), 0x2ba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03BE
        gbc.setState(0x9a8e, 0x9643, 0x4070, 0xfc0a, 0xdf75, 0x3a59, 0x0, 0x1);
        gbc.writeMem(0x9a8e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9643);
        EXPECT(gbc.pc(), 0x9a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a8e), 0xcb);
        EXPECT(gbc.readMem(0x9a8f), 0xc3);
        // CB C3 03BF
        gbc.setState(0xcaf8, 0x1922, 0x6260, 0x5d22, 0x8d2c, 0xb603, 0x0, 0x1);
        gbc.writeMem(0xcaf8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1922);
        EXPECT(gbc.pc(), 0xcafa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf8), 0xcb);
        EXPECT(gbc.readMem(0xcaf9), 0xc3);
        // CB C3 03C0
        gbc.setState(0x56ca, 0xf7f, 0xadc0, 0x85b7, 0x3011, 0x36c6, 0x1, 0x1);
        gbc.writeMem(0x56ca, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf7f);
        EXPECT(gbc.pc(), 0x56cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03C1
        gbc.setState(0xdc2b, 0x3df3, 0x45f0, 0xa1e0, 0x9173, 0x464d, 0x0, 0x1);
        gbc.writeMem(0xdc2b, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3df3);
        EXPECT(gbc.pc(), 0xdc2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc2b), 0xcb);
        EXPECT(gbc.readMem(0xdc2c), 0xc3);
        // CB C3 03C3
        gbc.setState(0x4c41, 0xcf9, 0x6730, 0xab0c, 0x1476, 0x4c41, 0x1, 0x0);
        gbc.writeMem(0x4c41, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xcf9);
        EXPECT(gbc.pc(), 0x4c43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03C4
        gbc.setState(0xd047, 0x335c, 0x2320, 0xb2da, 0x25ad, 0x2ed0, 0x1, 0x1);
        gbc.writeMem(0xd047, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x335c);
        EXPECT(gbc.pc(), 0xd049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd047), 0xcb);
        EXPECT(gbc.readMem(0xd048), 0xc3);
        // CB C3 03C5
        gbc.setState(0xc97d, 0xfb9d, 0x1270, 0x31a8, 0xb4d6, 0x18c5, 0x0, 0x1);
        gbc.writeMem(0xc97d, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfb9d);
        EXPECT(gbc.pc(), 0xc97f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc97d), 0xcb);
        EXPECT(gbc.readMem(0xc97e), 0xc3);
        // CB C3 03C6
        gbc.setState(0xc2e4, 0xabc1, 0x4a50, 0x38f2, 0xafa3, 0x38fa, 0x0, 0x0);
        gbc.writeMem(0xc2e4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xabc1);
        EXPECT(gbc.pc(), 0xc2e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e4), 0xcb);
        EXPECT(gbc.readMem(0xc2e5), 0xc3);
        // CB C3 03C7
        gbc.setState(0x53d9, 0x283f, 0x1de0, 0x96b4, 0xcdab, 0x4d7f, 0x1, 0x1);
        gbc.writeMem(0x53d9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x283f);
        EXPECT(gbc.pc(), 0x53db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03C8
        gbc.setState(0x3cc7, 0xf132, 0xc210, 0x6a26, 0xded8, 0xabcb, 0x1, 0x1);
        gbc.writeMem(0x3cc7, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf132);
        EXPECT(gbc.pc(), 0x3cc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03C9
        gbc.setState(0xcdee, 0x3762, 0x8520, 0x53a8, 0x3abc, 0xcd61, 0x1, 0x0);
        gbc.writeMem(0xcdee, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3762);
        EXPECT(gbc.pc(), 0xcdf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdee), 0xcb);
        EXPECT(gbc.readMem(0xcdef), 0xc3);
        // CB C3 03CB
        gbc.setState(0xca60, 0xeb4e, 0x55e0, 0x30d9, 0x7957, 0x3ebc, 0x1, 0x0);
        gbc.writeMem(0xca60, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xeb4e);
        EXPECT(gbc.pc(), 0xca62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca60), 0xcb);
        EXPECT(gbc.readMem(0xca61), 0xc3);
        // CB C3 03CC
        gbc.setState(0xc3c9, 0xeda5, 0x9450, 0xf55e, 0xa3b3, 0x774c, 0x0, 0x1);
        gbc.writeMem(0xc3c9, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xeda5);
        EXPECT(gbc.pc(), 0xc3cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3c9), 0xcb);
        EXPECT(gbc.readMem(0xc3ca), 0xc3);
        // CB C3 03CD
        gbc.setState(0x3717, 0xfd2a, 0xeaf0, 0x246a, 0x981, 0xa32f, 0x1, 0x1);
        gbc.writeMem(0x3717, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfd2a);
        EXPECT(gbc.pc(), 0x3719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03CE
        gbc.setState(0x2fc6, 0x5a37, 0x4690, 0x5c75, 0x2f5d, 0xb436, 0x1, 0x0);
        gbc.writeMem(0x2fc6, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5a37);
        EXPECT(gbc.pc(), 0x2fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03CF
        gbc.setState(0x7c95, 0x6a9, 0x2980, 0xf59d, 0x9402, 0x4771, 0x0, 0x0);
        gbc.writeMem(0x7c95, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6a9);
        EXPECT(gbc.pc(), 0x7c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03D0
        gbc.setState(0xe0f5, 0x5600, 0xea80, 0x873, 0xd34c, 0x9694, 0x0, 0x0);
        gbc.writeMem(0xe0f5, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5600);
        EXPECT(gbc.pc(), 0xe0f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f5), 0xcb);
        EXPECT(gbc.readMem(0xe0f6), 0xc3);
        // CB C3 03D1
        gbc.setState(0x27d4, 0xb6e6, 0x85e0, 0x2f2b, 0x6b67, 0x72c7, 0x0, 0x0);
        gbc.writeMem(0x27d4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb6e6);
        EXPECT(gbc.pc(), 0x27d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03D2
        gbc.setState(0x3fa4, 0x16ba, 0x540, 0x3e98, 0xae5d, 0x3fad, 0x1, 0x1);
        gbc.writeMem(0x3fa4, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x16ba);
        EXPECT(gbc.pc(), 0x3fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03D4
        gbc.setState(0x3a0f, 0xd6ac, 0x6e70, 0x648d, 0x3c75, 0x917b, 0x0, 0x1);
        gbc.writeMem(0x3a0f, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd6ac);
        EXPECT(gbc.pc(), 0x3a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03D5
        gbc.setState(0x22ba, 0x129f, 0x5800, 0x4587, 0xb7a0, 0x16f2, 0x1, 0x1);
        gbc.writeMem(0x22ba, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x129f);
        EXPECT(gbc.pc(), 0x22bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03D7
        gbc.setState(0x40ea, 0xf184, 0x9a90, 0x4d5e, 0xf16f, 0x8d95, 0x0, 0x0);
        gbc.writeMem(0x40ea, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf184);
        EXPECT(gbc.pc(), 0x40ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03D8
        gbc.setState(0x59ec, 0xfd26, 0x5f0, 0x6ae0, 0x533a, 0x42e9, 0x0, 0x0);
        gbc.writeMem(0x59ec, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfd26);
        EXPECT(gbc.pc(), 0x59ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03D9
        gbc.setState(0xcdab, 0xc093, 0xb900, 0x3861, 0xf496, 0xc2cf, 0x0, 0x0);
        gbc.writeMem(0xcdab, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc093);
        EXPECT(gbc.pc(), 0xcdad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdab), 0xcb);
        EXPECT(gbc.readMem(0xcdac), 0xc3);
        // CB C3 03DA
        gbc.setState(0x19b0, 0xdd90, 0x5740, 0x6443, 0x46a4, 0x7561, 0x0, 0x1);
        gbc.writeMem(0x19b0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdd90);
        EXPECT(gbc.pc(), 0x19b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03DB
        gbc.setState(0x23ad, 0xbf95, 0xa8b0, 0x2ba, 0x5278, 0xf270, 0x0, 0x1);
        gbc.writeMem(0x23ad, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbf95);
        EXPECT(gbc.pc(), 0x23af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03DC
        gbc.setState(0xaab0, 0x827, 0xae50, 0x32d7, 0x60bc, 0x5429, 0x0, 0x1);
        gbc.writeMem(0xaab0, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x827);
        EXPECT(gbc.pc(), 0xaab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab0), 0xcb);
        EXPECT(gbc.readMem(0xaab1), 0xc3);
        // CB C3 03DD
        gbc.setState(0x26be, 0xe06e, 0xf0e0, 0x92fe, 0x9f71, 0x513d, 0x1, 0x1);
        gbc.writeMem(0x26be, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe06e);
        EXPECT(gbc.pc(), 0x26c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03DE
        gbc.setState(0x8bb8, 0x828a, 0x90b0, 0x970c, 0x48f4, 0x7a2d, 0x0, 0x0);
        gbc.writeMem(0x8bb8, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x828a);
        EXPECT(gbc.pc(), 0x8bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb8), 0xcb);
        EXPECT(gbc.readMem(0x8bb9), 0xc3);
        // CB C3 03DF
        gbc.setState(0xeae2, 0x8bed, 0x80, 0xfd06, 0x6f30, 0xf0da, 0x1, 0x0);
        gbc.writeMem(0xeae2, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8bed);
        EXPECT(gbc.pc(), 0xeae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeae2), 0xcb);
        EXPECT(gbc.readMem(0xeae3), 0xc3);
        // CB C3 03E0
        gbc.setState(0x3bfb, 0x9a2e, 0x5fa0, 0x100, 0x40a9, 0xc0af, 0x1, 0x1);
        gbc.writeMem(0x3bfb, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9a2e);
        EXPECT(gbc.pc(), 0x3bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB C3 03E1
        gbc.setState(0x1ade, 0x1079, 0x8ff0, 0x7619, 0x103, 0x5db9, 0x0, 0x1);
        gbc.writeMem(0x1ade, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1079);
        EXPECT(gbc.pc(), 0x1ae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03E2
        gbc.setState(0xdd1e, 0x2971, 0x5850, 0x61ea, 0x9c58, 0x29fd, 0x1, 0x1);
        gbc.writeMem(0xdd1e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2971);
        EXPECT(gbc.pc(), 0xdd20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1e), 0xcb);
        EXPECT(gbc.readMem(0xdd1f), 0xc3);
        // CB C3 03E3
        gbc.setState(0x8370, 0x65bb, 0xa240, 0xc6b3, 0x4aee, 0x1024, 0x0, 0x0);
        gbc.writeMem(0x8370, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x65bb);
        EXPECT(gbc.pc(), 0x8372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8370), 0xcb);
        EXPECT(gbc.readMem(0x8371), 0xc3);
        // CB C3 03E4
        gbc.setState(0x672a, 0x2bd, 0x7eb0, 0x5be0, 0x3df, 0x5a96, 0x1, 0x1);
        gbc.writeMem(0x672a, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2bd);
        EXPECT(gbc.pc(), 0x672c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB C3 03E5
        gbc.setState(0xc78e, 0xa360, 0xfe60, 0x29a0, 0xac2, 0x9033, 0x1, 0x1);
        gbc.writeMem(0xc78e, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa360);
        EXPECT(gbc.pc(), 0xc790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78e), 0xcb);
        EXPECT(gbc.readMem(0xc78f), 0xc3);
        // CB C3 03E6
        gbc.setState(0x2272, 0xbdc1, 0x6670, 0x3b35, 0x561, 0xe799, 0x0, 0x1);
        gbc.writeMem(0x2272, { 0xcb, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbdc1);
        EXPECT(gbc.pc(), 0x2274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
