    TEST(gbcemu, opcode_d4) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // D4 0001
        gbc.setState(0xef3c, 0x8d6a, 0xab30, 0xb0ee, 0x830, 0xf10c, 0x1, 0x0);
        gbc.writeMem(0xef3c, { 0xd4, 0xa5, 0x60 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8d6a, gbc.sp());
        EXPECT(0xef3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xef3c));
        EXPECT(0xa5, gbc.readMem(0xef3d));
        EXPECT(0x60, gbc.readMem(0xef3e));
        // D4 0002
        gbc.setState(0x26ee, 0xb693, 0xb5b0, 0x7006, 0x1708, 0xf58c, 0x1, 0x0);
        gbc.writeMem(0x26ee, { 0xd4, 0x19, 0x3a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb693, gbc.sp());
        EXPECT(0x26f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0003
        gbc.setState(0xba6, 0xafd6, 0x20a0, 0x830e, 0xa5c8, 0xde98, 0x1, 0x1);
        gbc.writeMem(0xba6, { 0xd4, 0xe5, 0xd3 });
        gbc.writeMem(0xafd4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xafd4, gbc.sp());
        EXPECT(0xd3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xafd4));
        EXPECT(0xb, gbc.readMem(0xafd5));
        // D4 0004
        gbc.setState(0x9cca, 0xbd05, 0xd8f0, 0xe83d, 0x965, 0xf2b, 0x0, 0x1);
        gbc.writeMem(0x9cca, { 0xd4, 0x2b, 0xf7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbd05, gbc.sp());
        EXPECT(0x9ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9cca));
        EXPECT(0x2b, gbc.readMem(0x9ccb));
        EXPECT(0xf7, gbc.readMem(0x9ccc));
        // D4 0005
        gbc.setState(0xc84d, 0xfb16, 0xbdd0, 0x158a, 0xbb89, 0x73f8, 0x0, 0x1);
        gbc.writeMem(0xc84d, { 0xd4, 0x72, 0x31 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfb16, gbc.sp());
        EXPECT(0xc850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc84d));
        EXPECT(0x72, gbc.readMem(0xc84e));
        EXPECT(0x31, gbc.readMem(0xc84f));
        // D4 0008
        gbc.setState(0x9df0, 0xc6f9, 0x7e00, 0x818d, 0x9470, 0x61d4, 0x1, 0x0);
        gbc.writeMem(0x9df0, { 0xd4, 0xaa, 0x8a });
        gbc.writeMem(0xc6f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc6f7, gbc.sp());
        EXPECT(0x8aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9df0));
        EXPECT(0xaa, gbc.readMem(0x9df1));
        EXPECT(0x8a, gbc.readMem(0x9df2));
        EXPECT(0xf3, gbc.readMem(0xc6f7));
        EXPECT(0x9d, gbc.readMem(0xc6f8));
        // D4 0009
        gbc.setState(0x1ecb, 0xd434, 0x54b0, 0x852b, 0x4e45, 0x5a20, 0x1, 0x1);
        gbc.writeMem(0x1ecb, { 0xd4, 0xe9, 0xd });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd434, gbc.sp());
        EXPECT(0x1ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 000A
        gbc.setState(0x4376, 0xd263, 0x6860, 0x9473, 0xd1ab, 0x4155, 0x1, 0x0);
        gbc.writeMem(0x4376, { 0xd4, 0x75, 0x6 });
        gbc.writeMem(0xd261, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd261, gbc.sp());
        EXPECT(0x675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd261));
        EXPECT(0x43, gbc.readMem(0xd262));
        // D4 000D
        gbc.setState(0x78f4, 0x6cb8, 0x5f50, 0xc73e, 0x90dd, 0x4964, 0x1, 0x0);
        gbc.writeMem(0x78f4, { 0xd4, 0x5, 0xf7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6cb8, gbc.sp());
        EXPECT(0x78f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 000E
        gbc.setState(0x7614, 0xe411, 0xe6f0, 0xa25f, 0x5042, 0x80bc, 0x0, 0x0);
        gbc.writeMem(0x7614, { 0xd4, 0xd, 0x5a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe411, gbc.sp());
        EXPECT(0x7617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 000F
        gbc.setState(0x4cc8, 0xe4c5, 0xba70, 0x7711, 0x901e, 0x79e4, 0x0, 0x1);
        gbc.writeMem(0x4cc8, { 0xd4, 0x9, 0x29 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe4c5, gbc.sp());
        EXPECT(0x4ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0010
        gbc.setState(0x5d90, 0x2886, 0x9190, 0xc357, 0x9233, 0xedd1, 0x0, 0x1);
        gbc.writeMem(0x5d90, { 0xd4, 0xd0, 0x5c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2886, gbc.sp());
        EXPECT(0x5d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0011
        gbc.setState(0xc215, 0x83f2, 0xc560, 0x395d, 0x9564, 0x5490, 0x0, 0x0);
        gbc.writeMem(0x83f0, { 0x0, 0x0 });
        gbc.writeMem(0xc215, { 0xd4, 0x77, 0x8b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x83f0, gbc.sp());
        EXPECT(0x8b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x83f0));
        EXPECT(0xc2, gbc.readMem(0x83f1));
        EXPECT(0xd4, gbc.readMem(0xc215));
        EXPECT(0x77, gbc.readMem(0xc216));
        EXPECT(0x8b, gbc.readMem(0xc217));
        // D4 0012
        gbc.setState(0x8296, 0x2cd6, 0xa410, 0xefda, 0x55a0, 0xc744, 0x1, 0x1);
        gbc.writeMem(0x8296, { 0xd4, 0x9c, 0x45 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2cd6, gbc.sp());
        EXPECT(0x8299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8296));
        EXPECT(0x9c, gbc.readMem(0x8297));
        EXPECT(0x45, gbc.readMem(0x8298));
        // D4 0014
        gbc.setState(0x34c1, 0x709, 0xf8b0, 0xdcc0, 0xcdc9, 0xe2cc, 0x0, 0x0);
        gbc.writeMem(0x34c1, { 0xd4, 0x39, 0x3e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x709, gbc.sp());
        EXPECT(0x34c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0015
        gbc.setState(0x2326, 0x5836, 0xbdf0, 0xc2eb, 0x97db, 0x26a1, 0x1, 0x0);
        gbc.writeMem(0x2326, { 0xd4, 0x82, 0x2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5836, gbc.sp());
        EXPECT(0x2329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0017
        gbc.setState(0x9bf8, 0x25be, 0x5df0, 0x65f6, 0x2353, 0x5a7, 0x0, 0x1);
        gbc.writeMem(0x9bf8, { 0xd4, 0x99, 0x1f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x25be, gbc.sp());
        EXPECT(0x9bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9bf8));
        EXPECT(0x99, gbc.readMem(0x9bf9));
        EXPECT(0x1f, gbc.readMem(0x9bfa));
        // D4 0018
        gbc.setState(0x2676, 0xa4a5, 0x5af0, 0xdc20, 0x3c75, 0x2da1, 0x0, 0x0);
        gbc.writeMem(0x2676, { 0xd4, 0x78, 0x8d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa4a5, gbc.sp());
        EXPECT(0x2679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 001A
        gbc.setState(0xcb8, 0x39b6, 0xe9d0, 0xcc28, 0x7b88, 0xcf36, 0x1, 0x0);
        gbc.writeMem(0xcb8, { 0xd4, 0x44, 0x71 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x39b6, gbc.sp());
        EXPECT(0xcbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 001B
        gbc.setState(0xce7, 0xc66, 0x10, 0xeff8, 0xad53, 0x1733, 0x1, 0x0);
        gbc.writeMem(0xce7, { 0xd4, 0x1a, 0xf });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc66, gbc.sp());
        EXPECT(0xcea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 001E
        gbc.setState(0x5167, 0x95e4, 0x3850, 0x49e8, 0x11d3, 0xc74c, 0x0, 0x1);
        gbc.writeMem(0x5167, { 0xd4, 0xf8, 0xc9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x95e4, gbc.sp());
        EXPECT(0x516a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0020
        gbc.setState(0xb0e4, 0x54c0, 0x65d0, 0x5efc, 0xeb1e, 0xd65d, 0x0, 0x0);
        gbc.writeMem(0xb0e4, { 0xd4, 0x71, 0xe3 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x54c0, gbc.sp());
        EXPECT(0xb0e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb0e4));
        EXPECT(0x71, gbc.readMem(0xb0e5));
        EXPECT(0xe3, gbc.readMem(0xb0e6));
        // D4 0022
        gbc.setState(0xef56, 0x4398, 0xa810, 0x2319, 0xb969, 0x3ae4, 0x0, 0x1);
        gbc.writeMem(0xef56, { 0xd4, 0x9c, 0xe9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4398, gbc.sp());
        EXPECT(0xef59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xef56));
        EXPECT(0x9c, gbc.readMem(0xef57));
        EXPECT(0xe9, gbc.readMem(0xef58));
        // D4 0024
        gbc.setState(0x409e, 0x373, 0xd3f0, 0x9e7a, 0x9d66, 0xf847, 0x0, 0x0);
        gbc.writeMem(0x409e, { 0xd4, 0x36, 0xed });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x373, gbc.sp());
        EXPECT(0x40a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0025
        gbc.setState(0x3ae0, 0x742a, 0xd130, 0xba85, 0x9e46, 0x7120, 0x1, 0x1);
        gbc.writeMem(0x3ae0, { 0xd4, 0xfe, 0x7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x742a, gbc.sp());
        EXPECT(0x3ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0026
        gbc.setState(0x88a7, 0xf1cf, 0x3aa0, 0x3a66, 0x478d, 0x7ca9, 0x1, 0x1);
        gbc.writeMem(0x88a7, { 0xd4, 0xe0, 0xa5 });
        gbc.writeMem(0xf1cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf1cd, gbc.sp());
        EXPECT(0xa5e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x88a7));
        EXPECT(0xe0, gbc.readMem(0x88a8));
        EXPECT(0xa5, gbc.readMem(0x88a9));
        EXPECT(0xaa, gbc.readMem(0xf1cd));
        EXPECT(0x88, gbc.readMem(0xf1ce));
        // D4 0027
        gbc.setState(0x1cea, 0x9a9d, 0x5f40, 0xa341, 0x954e, 0xff73, 0x0, 0x1);
        gbc.writeMem(0x1cea, { 0xd4, 0x5d, 0xe5 });
        gbc.writeMem(0x9a9b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9a9b, gbc.sp());
        EXPECT(0xe55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9a9b));
        EXPECT(0x1c, gbc.readMem(0x9a9c));
        // D4 0028
        gbc.setState(0x1eb2, 0xfa7f, 0xdb10, 0x840c, 0x4298, 0xc777, 0x0, 0x0);
        gbc.writeMem(0x1eb2, { 0xd4, 0x99, 0xc4 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfa7f, gbc.sp());
        EXPECT(0x1eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0029
        gbc.setState(0x455e, 0xb8e7, 0xd600, 0x35e2, 0xad12, 0x5345, 0x0, 0x1);
        gbc.writeMem(0x455e, { 0xd4, 0xab, 0x9a });
        gbc.writeMem(0xb8e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb8e5, gbc.sp());
        EXPECT(0x9aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xb8e5));
        EXPECT(0x45, gbc.readMem(0xb8e6));
        // D4 002A
        gbc.setState(0x9ae8, 0x8768, 0xef0, 0xfba4, 0x48c8, 0xa605, 0x1, 0x1);
        gbc.writeMem(0x9ae8, { 0xd4, 0xd9, 0x13 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8768, gbc.sp());
        EXPECT(0x9aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9ae8));
        EXPECT(0xd9, gbc.readMem(0x9ae9));
        EXPECT(0x13, gbc.readMem(0x9aea));
        // D4 002B
        gbc.setState(0xda93, 0xd337, 0x100, 0x5112, 0x720c, 0x2146, 0x1, 0x1);
        gbc.writeMem(0xd335, { 0x0, 0x0 });
        gbc.writeMem(0xda93, { 0xd4, 0x33, 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd335, gbc.sp());
        EXPECT(0x4b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xd335));
        EXPECT(0xda, gbc.readMem(0xd336));
        EXPECT(0xd4, gbc.readMem(0xda93));
        EXPECT(0x33, gbc.readMem(0xda94));
        EXPECT(0x4b, gbc.readMem(0xda95));
        // D4 002D
        gbc.setState(0xde2a, 0x684f, 0xae90, 0x6159, 0x4c9a, 0x96f7, 0x0, 0x1);
        gbc.writeMem(0xde2a, { 0xd4, 0x58, 0xc5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x684f, gbc.sp());
        EXPECT(0xde2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xde2a));
        EXPECT(0x58, gbc.readMem(0xde2b));
        EXPECT(0xc5, gbc.readMem(0xde2c));
        // D4 002E
        gbc.setState(0xcae4, 0xc57, 0x3930, 0xdd08, 0x60df, 0x77cc, 0x1, 0x0);
        gbc.writeMem(0xcae4, { 0xd4, 0xb6, 0xd3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc57, gbc.sp());
        EXPECT(0xcae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xcae4));
        EXPECT(0xb6, gbc.readMem(0xcae5));
        EXPECT(0xd3, gbc.readMem(0xcae6));
        // D4 002F
        gbc.setState(0xa349, 0x82f9, 0x5bf0, 0xa90b, 0x1ad9, 0xbac2, 0x1, 0x0);
        gbc.writeMem(0xa349, { 0xd4, 0xff, 0x42 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x82f9, gbc.sp());
        EXPECT(0xa34c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa349));
        EXPECT(0xff, gbc.readMem(0xa34a));
        EXPECT(0x42, gbc.readMem(0xa34b));
        // D4 0030
        gbc.setState(0x39e5, 0x4b1b, 0x8c50, 0x5dcc, 0x34b8, 0x5d21, 0x0, 0x0);
        gbc.writeMem(0x39e5, { 0xd4, 0xd8, 0x76 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4b1b, gbc.sp());
        EXPECT(0x39e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0031
        gbc.setState(0xa550, 0x2973, 0x1c50, 0xf98f, 0xe7d7, 0x6575, 0x1, 0x0);
        gbc.writeMem(0xa550, { 0xd4, 0x15, 0xbb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2973, gbc.sp());
        EXPECT(0xa553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa550));
        EXPECT(0x15, gbc.readMem(0xa551));
        EXPECT(0xbb, gbc.readMem(0xa552));
        // D4 0032
        gbc.setState(0x823d, 0x7b90, 0x2f50, 0x995c, 0xf829, 0xf265, 0x1, 0x1);
        gbc.writeMem(0x823d, { 0xd4, 0x0, 0x39 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7b90, gbc.sp());
        EXPECT(0x8240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x823d));
        EXPECT(0x0, gbc.readMem(0x823e));
        EXPECT(0x39, gbc.readMem(0x823f));
        // D4 0034
        gbc.setState(0xedb3, 0x496a, 0x5df0, 0xc371, 0x6c5c, 0xe7cd, 0x0, 0x1);
        gbc.writeMem(0xedb3, { 0xd4, 0x61, 0x3b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x496a, gbc.sp());
        EXPECT(0xedb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xedb3));
        EXPECT(0x61, gbc.readMem(0xedb4));
        EXPECT(0x3b, gbc.readMem(0xedb5));
        // D4 0037
        gbc.setState(0x8d86, 0xadfc, 0x9140, 0xf61b, 0x95aa, 0x6164, 0x0, 0x1);
        gbc.writeMem(0x8d86, { 0xd4, 0xdc, 0xb4 });
        gbc.writeMem(0xadfa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xadfa, gbc.sp());
        EXPECT(0xb4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8d86));
        EXPECT(0xdc, gbc.readMem(0x8d87));
        EXPECT(0xb4, gbc.readMem(0x8d88));
        EXPECT(0x89, gbc.readMem(0xadfa));
        EXPECT(0x8d, gbc.readMem(0xadfb));
        // D4 003A
        gbc.setState(0x6e2b, 0x7e8, 0x6990, 0x427e, 0x50c9, 0xb164, 0x1, 0x1);
        gbc.writeMem(0x6e2b, { 0xd4, 0xe0, 0x3a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7e8, gbc.sp());
        EXPECT(0x6e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 003B
        gbc.setState(0xcd68, 0x938a, 0x7e40, 0xaad3, 0x22fe, 0xe288, 0x1, 0x0);
        gbc.writeMem(0x9388, { 0x0, 0x0 });
        gbc.writeMem(0xcd68, { 0xd4, 0x6b, 0x88 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9388, gbc.sp());
        EXPECT(0x886b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x9388));
        EXPECT(0xcd, gbc.readMem(0x9389));
        EXPECT(0xd4, gbc.readMem(0xcd68));
        EXPECT(0x6b, gbc.readMem(0xcd69));
        EXPECT(0x88, gbc.readMem(0xcd6a));
        // D4 003C
        gbc.setState(0x70ac, 0xb6ac, 0xa160, 0xffac, 0xe701, 0x2d29, 0x0, 0x0);
        gbc.writeMem(0x70ac, { 0xd4, 0xa0, 0x16 });
        gbc.writeMem(0xb6aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb6aa, gbc.sp());
        EXPECT(0x16a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xb6aa));
        EXPECT(0x70, gbc.readMem(0xb6ab));
        // D4 003D
        gbc.setState(0x63dd, 0xd898, 0xb5d0, 0x9971, 0xcbb, 0xbfc2, 0x1, 0x1);
        gbc.writeMem(0x63dd, { 0xd4, 0xa7, 0x93 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd898, gbc.sp());
        EXPECT(0x63e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 003E
        gbc.setState(0xe207, 0xad61, 0x81a0, 0xc651, 0x115b, 0xa679, 0x1, 0x0);
        gbc.writeMem(0xad5f, { 0x0, 0x0 });
        gbc.writeMem(0xe207, { 0xd4, 0x8f, 0x37 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xad5f, gbc.sp());
        EXPECT(0x378f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xad5f));
        EXPECT(0xe2, gbc.readMem(0xad60));
        EXPECT(0xd4, gbc.readMem(0xe207));
        EXPECT(0x8f, gbc.readMem(0xe208));
        EXPECT(0x37, gbc.readMem(0xe209));
        // D4 0040
        gbc.setState(0x7f1e, 0xf668, 0xf3d0, 0x8ec7, 0x4b9f, 0x415a, 0x0, 0x1);
        gbc.writeMem(0x7f1e, { 0xd4, 0xbf, 0x32 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf668, gbc.sp());
        EXPECT(0x7f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0041
        gbc.setState(0xb5cf, 0xdb82, 0xb9d0, 0xdbe8, 0x9315, 0x64fc, 0x0, 0x1);
        gbc.writeMem(0xb5cf, { 0xd4, 0xe6, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdb82, gbc.sp());
        EXPECT(0xb5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb5cf));
        EXPECT(0xe6, gbc.readMem(0xb5d0));
        EXPECT(0x0, gbc.readMem(0xb5d1));
        // D4 0042
        gbc.setState(0xc9ca, 0xa247, 0xd530, 0xabbf, 0x4d2e, 0x122e, 0x0, 0x1);
        gbc.writeMem(0xc9ca, { 0xd4, 0xa5, 0xce });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa247, gbc.sp());
        EXPECT(0xc9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc9ca));
        EXPECT(0xa5, gbc.readMem(0xc9cb));
        EXPECT(0xce, gbc.readMem(0xc9cc));
        // D4 0044
        gbc.setState(0x7449, 0x3493, 0xfaf0, 0x3a4f, 0x8a9, 0xdeac, 0x0, 0x1);
        gbc.writeMem(0x7449, { 0xd4, 0x58, 0x77 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3493, gbc.sp());
        EXPECT(0x744c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0045
        gbc.setState(0xa092, 0x9a79, 0x8ab0, 0x6fe0, 0xc2e4, 0x9140, 0x1, 0x1);
        gbc.writeMem(0xa092, { 0xd4, 0x1, 0x29 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9a79, gbc.sp());
        EXPECT(0xa095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa092));
        EXPECT(0x1, gbc.readMem(0xa093));
        EXPECT(0x29, gbc.readMem(0xa094));
        // D4 0046
        gbc.setState(0x8b9f, 0x5228, 0x2870, 0xe755, 0xb031, 0xbb94, 0x1, 0x0);
        gbc.writeMem(0x8b9f, { 0xd4, 0x4b, 0xc0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5228, gbc.sp());
        EXPECT(0x8ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8b9f));
        EXPECT(0x4b, gbc.readMem(0x8ba0));
        EXPECT(0xc0, gbc.readMem(0x8ba1));
        // D4 0048
        gbc.setState(0xb77e, 0x941c, 0xc3b0, 0x766c, 0x7420, 0x5a59, 0x0, 0x0);
        gbc.writeMem(0xb77e, { 0xd4, 0xb5, 0x93 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x941c, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb77e));
        EXPECT(0xb5, gbc.readMem(0xb77f));
        EXPECT(0x93, gbc.readMem(0xb780));
        // D4 0049
        gbc.setState(0x198e, 0xe24a, 0xf0c0, 0xf669, 0xde74, 0x2acb, 0x0, 0x0);
        gbc.writeMem(0x198e, { 0xd4, 0xce, 0x78 });
        gbc.writeMem(0xe248, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe248, gbc.sp());
        EXPECT(0x78ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe248));
        EXPECT(0x19, gbc.readMem(0xe249));
        // D4 004A
        gbc.setState(0xa12, 0x7ef5, 0xc0d0, 0x2a56, 0xcfc, 0xaa09, 0x0, 0x0);
        gbc.writeMem(0xa12, { 0xd4, 0xbf, 0x9a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7ef5, gbc.sp());
        EXPECT(0xa15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 004B
        gbc.setState(0x518f, 0x7283, 0x3570, 0x13e2, 0x9fd4, 0x50cb, 0x0, 0x1);
        gbc.writeMem(0x518f, { 0xd4, 0xf6, 0xaa });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7283, gbc.sp());
        EXPECT(0x5192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 004C
        gbc.setState(0x743f, 0x2bb2, 0x4310, 0x2e73, 0x5657, 0x1778, 0x0, 0x1);
        gbc.writeMem(0x743f, { 0xd4, 0xb7, 0x31 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2bb2, gbc.sp());
        EXPECT(0x7442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 004F
        gbc.setState(0xa784, 0x6169, 0x5f30, 0xf0e, 0x62ee, 0x7e2a, 0x1, 0x0);
        gbc.writeMem(0xa784, { 0xd4, 0x83, 0x23 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6169, gbc.sp());
        EXPECT(0xa787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa784));
        EXPECT(0x83, gbc.readMem(0xa785));
        EXPECT(0x23, gbc.readMem(0xa786));
        // D4 0050
        gbc.setState(0x7b4c, 0x1ef8, 0x3450, 0x75, 0x41b0, 0x91f6, 0x1, 0x0);
        gbc.writeMem(0x7b4c, { 0xd4, 0x58, 0xc9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1ef8, gbc.sp());
        EXPECT(0x7b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0051
        gbc.setState(0x3792, 0x33e5, 0x3190, 0x612d, 0x83d7, 0x1c82, 0x1, 0x0);
        gbc.writeMem(0x3792, { 0xd4, 0xeb, 0x38 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x33e5, gbc.sp());
        EXPECT(0x3795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0053
        gbc.setState(0x1669, 0xa976, 0x6d20, 0xc37, 0xc299, 0x4088, 0x0, 0x0);
        gbc.writeMem(0x1669, { 0xd4, 0x1e, 0x38 });
        gbc.writeMem(0xa974, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa974, gbc.sp());
        EXPECT(0x381e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xa974));
        EXPECT(0x16, gbc.readMem(0xa975));
        // D4 0054
        gbc.setState(0xa0c5, 0xb0c2, 0x9300, 0x3fc4, 0xa23f, 0x3757, 0x0, 0x1);
        gbc.writeMem(0xa0c5, { 0xd4, 0x6f, 0x8d });
        gbc.writeMem(0xb0c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb0c0, gbc.sp());
        EXPECT(0x8d6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa0c5));
        EXPECT(0x6f, gbc.readMem(0xa0c6));
        EXPECT(0x8d, gbc.readMem(0xa0c7));
        EXPECT(0xc8, gbc.readMem(0xb0c0));
        EXPECT(0xa0, gbc.readMem(0xb0c1));
        // D4 0055
        gbc.setState(0x48b5, 0xe1e5, 0x1c40, 0x29a1, 0x8f33, 0x19f2, 0x1, 0x0);
        gbc.writeMem(0x48b5, { 0xd4, 0x1b, 0x0 });
        gbc.writeMem(0xe1e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe1e3, gbc.sp());
        EXPECT(0x1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xe1e3));
        EXPECT(0x48, gbc.readMem(0xe1e4));
        // D4 0056
        gbc.setState(0x8cfc, 0x4d05, 0xbfb0, 0x8a2c, 0x962f, 0xea8f, 0x1, 0x1);
        gbc.writeMem(0x8cfc, { 0xd4, 0xdd, 0x31 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4d05, gbc.sp());
        EXPECT(0x8cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8cfc));
        EXPECT(0xdd, gbc.readMem(0x8cfd));
        EXPECT(0x31, gbc.readMem(0x8cfe));
        // D4 0058
        gbc.setState(0x6a97, 0xbe3c, 0x4750, 0x5679, 0x9fd9, 0xb15f, 0x0, 0x0);
        gbc.writeMem(0x6a97, { 0xd4, 0x66, 0x48 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbe3c, gbc.sp());
        EXPECT(0x6a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 005B
        gbc.setState(0x81a6, 0xede0, 0x2520, 0xed57, 0x7bb4, 0x9210, 0x1, 0x1);
        gbc.writeMem(0x81a6, { 0xd4, 0xe9, 0xfd });
        gbc.writeMem(0xedde, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xedde, gbc.sp());
        EXPECT(0xfde9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x81a6));
        EXPECT(0xe9, gbc.readMem(0x81a7));
        EXPECT(0xfd, gbc.readMem(0x81a8));
        EXPECT(0xa9, gbc.readMem(0xedde));
        EXPECT(0x81, gbc.readMem(0xeddf));
        // D4 005C
        gbc.setState(0x46e4, 0x752d, 0xbdd0, 0x6f94, 0xaeda, 0x84e2, 0x1, 0x1);
        gbc.writeMem(0x46e4, { 0xd4, 0x4e, 0x3b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x752d, gbc.sp());
        EXPECT(0x46e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 005D
        gbc.setState(0x279c, 0x9206, 0xeb00, 0x8c54, 0x6cc, 0xe2ae, 0x1, 0x0);
        gbc.writeMem(0x279c, { 0xd4, 0xef, 0xb4 });
        gbc.writeMem(0x9204, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9204, gbc.sp());
        EXPECT(0xb4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x9204));
        EXPECT(0x27, gbc.readMem(0x9205));
        // D4 005F
        gbc.setState(0x865b, 0x7099, 0x2c50, 0x46c5, 0x129a, 0x3e8c, 0x0, 0x0);
        gbc.writeMem(0x865b, { 0xd4, 0x7f, 0x9f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7099, gbc.sp());
        EXPECT(0x865e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x865b));
        EXPECT(0x7f, gbc.readMem(0x865c));
        EXPECT(0x9f, gbc.readMem(0x865d));
        // D4 0060
        gbc.setState(0xb03f, 0x8b6e, 0x98f0, 0x4df4, 0x95d0, 0x4991, 0x0, 0x0);
        gbc.writeMem(0xb03f, { 0xd4, 0x5c, 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8b6e, gbc.sp());
        EXPECT(0xb042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb03f));
        EXPECT(0x5c, gbc.readMem(0xb040));
        EXPECT(0xac, gbc.readMem(0xb041));
        // D4 0061
        gbc.setState(0x797e, 0xc811, 0xabb0, 0x9b8a, 0x3d8c, 0x3fce, 0x1, 0x1);
        gbc.writeMem(0x797e, { 0xd4, 0xe6, 0x76 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc811, gbc.sp());
        EXPECT(0x7981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0062
        gbc.setState(0xe1e3, 0xf6ee, 0x7710, 0x7c92, 0xe5cc, 0x86b0, 0x0, 0x1);
        gbc.writeMem(0xe1e3, { 0xd4, 0xee, 0xfd });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf6ee, gbc.sp());
        EXPECT(0xe1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe1e3));
        EXPECT(0xee, gbc.readMem(0xe1e4));
        EXPECT(0xfd, gbc.readMem(0xe1e5));
        // D4 0063
        gbc.setState(0xbe24, 0xdd83, 0x2870, 0xc990, 0xd514, 0x817e, 0x0, 0x0);
        gbc.writeMem(0xbe24, { 0xd4, 0xcb, 0x8c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdd83, gbc.sp());
        EXPECT(0xbe27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbe24));
        EXPECT(0xcb, gbc.readMem(0xbe25));
        EXPECT(0x8c, gbc.readMem(0xbe26));
        // D4 0064
        gbc.setState(0x72b6, 0x50da, 0xb190, 0x555a, 0x89da, 0xfc79, 0x1, 0x1);
        gbc.writeMem(0x72b6, { 0xd4, 0x17, 0xe5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x50da, gbc.sp());
        EXPECT(0x72b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0066
        gbc.setState(0x7b77, 0xf34d, 0x3d00, 0x246d, 0x4f6b, 0x465d, 0x1, 0x1);
        gbc.writeMem(0x7b77, { 0xd4, 0x1f, 0x22 });
        gbc.writeMem(0xf34b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf34b, gbc.sp());
        EXPECT(0x221f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xf34b));
        EXPECT(0x7b, gbc.readMem(0xf34c));
        // D4 0067
        gbc.setState(0x4d2f, 0xce85, 0x9350, 0x8e58, 0x75c7, 0x5743, 0x1, 0x1);
        gbc.writeMem(0x4d2f, { 0xd4, 0xa6, 0xf8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xce85, gbc.sp());
        EXPECT(0x4d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0068
        gbc.setState(0xc10, 0x205b, 0xcb0, 0x1c51, 0x775e, 0x9181, 0x1, 0x0);
        gbc.writeMem(0xc10, { 0xd4, 0x3f, 0x42 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x205b, gbc.sp());
        EXPECT(0xc13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 006A
        gbc.setState(0xc615, 0xc951, 0xf970, 0xe3fa, 0x22a6, 0x2f93, 0x1, 0x1);
        gbc.writeMem(0xc615, { 0xd4, 0x6, 0xdb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc951, gbc.sp());
        EXPECT(0xc618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc615));
        EXPECT(0x6, gbc.readMem(0xc616));
        EXPECT(0xdb, gbc.readMem(0xc617));
        // D4 006B
        gbc.setState(0xbd0b, 0x8421, 0x57f0, 0x9663, 0x8204, 0x4524, 0x0, 0x1);
        gbc.writeMem(0xbd0b, { 0xd4, 0x2b, 0xeb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8421, gbc.sp());
        EXPECT(0xbd0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbd0b));
        EXPECT(0x2b, gbc.readMem(0xbd0c));
        EXPECT(0xeb, gbc.readMem(0xbd0d));
        // D4 006C
        gbc.setState(0x4ba3, 0x867b, 0x2850, 0x7d27, 0x4ec4, 0x2502, 0x0, 0x1);
        gbc.writeMem(0x4ba3, { 0xd4, 0x9b, 0xdc });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x867b, gbc.sp());
        EXPECT(0x4ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 006E
        gbc.setState(0xa753, 0x9e4e, 0x88b0, 0xf15f, 0xf090, 0x499d, 0x0, 0x1);
        gbc.writeMem(0xa753, { 0xd4, 0x7, 0x9b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9e4e, gbc.sp());
        EXPECT(0xa756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa753));
        EXPECT(0x7, gbc.readMem(0xa754));
        EXPECT(0x9b, gbc.readMem(0xa755));
        // D4 0070
        gbc.setState(0x3e17, 0xe94e, 0x4390, 0x3f7e, 0x6118, 0xe343, 0x1, 0x1);
        gbc.writeMem(0x3e17, { 0xd4, 0x1, 0xfd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe94e, gbc.sp());
        EXPECT(0x3e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0071
        gbc.setState(0xaa46, 0x7f9, 0xd570, 0x4cf4, 0x2384, 0x46b8, 0x1, 0x0);
        gbc.writeMem(0xaa46, { 0xd4, 0x56, 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7f9, gbc.sp());
        EXPECT(0xaa49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xaa46));
        EXPECT(0x56, gbc.readMem(0xaa47));
        EXPECT(0xd5, gbc.readMem(0xaa48));
        // D4 0072
        gbc.setState(0xe3a8, 0xe042, 0x70c0, 0xee92, 0x345, 0xa9eb, 0x1, 0x1);
        gbc.writeMem(0xe040, { 0x0, 0x0 });
        gbc.writeMem(0xe3a8, { 0xd4, 0x4e, 0x38 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe040, gbc.sp());
        EXPECT(0x384e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xe040));
        EXPECT(0xe3, gbc.readMem(0xe041));
        EXPECT(0xd4, gbc.readMem(0xe3a8));
        EXPECT(0x4e, gbc.readMem(0xe3a9));
        EXPECT(0x38, gbc.readMem(0xe3aa));
        // D4 0075
        gbc.setState(0xcfd0, 0x6054, 0xb790, 0x2846, 0x93b3, 0xb641, 0x0, 0x0);
        gbc.writeMem(0xcfd0, { 0xd4, 0xdc, 0x9b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6054, gbc.sp());
        EXPECT(0xcfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xcfd0));
        EXPECT(0xdc, gbc.readMem(0xcfd1));
        EXPECT(0x9b, gbc.readMem(0xcfd2));
        // D4 0076
        gbc.setState(0x9a25, 0xe350, 0xc80, 0xf9e, 0x30a8, 0x828, 0x0, 0x1);
        gbc.writeMem(0x9a25, { 0xd4, 0x8e, 0xf4 });
        gbc.writeMem(0xe34e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe34e, gbc.sp());
        EXPECT(0xf48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9a25));
        EXPECT(0x8e, gbc.readMem(0x9a26));
        EXPECT(0xf4, gbc.readMem(0x9a27));
        EXPECT(0x28, gbc.readMem(0xe34e));
        EXPECT(0x9a, gbc.readMem(0xe34f));
        // D4 0077
        gbc.setState(0x278e, 0xd837, 0xb970, 0xe9f7, 0xe9e9, 0x560a, 0x0, 0x1);
        gbc.writeMem(0x278e, { 0xd4, 0xab, 0xeb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd837, gbc.sp());
        EXPECT(0x2791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0079
        gbc.setState(0xd436, 0x826a, 0x9fc0, 0x3c36, 0x30c3, 0x1057, 0x1, 0x1);
        gbc.writeMem(0x8268, { 0x0, 0x0 });
        gbc.writeMem(0xd436, { 0xd4, 0x2, 0xdb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8268, gbc.sp());
        EXPECT(0xdb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8268));
        EXPECT(0xd4, gbc.readMem(0x8269));
        EXPECT(0xd4, gbc.readMem(0xd436));
        EXPECT(0x2, gbc.readMem(0xd437));
        EXPECT(0xdb, gbc.readMem(0xd438));
        // D4 007C
        gbc.setState(0xc7c6, 0x83cb, 0xcc70, 0xb56, 0x5229, 0x92b5, 0x0, 0x1);
        gbc.writeMem(0xc7c6, { 0xd4, 0xd1, 0x2e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x83cb, gbc.sp());
        EXPECT(0xc7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc7c6));
        EXPECT(0xd1, gbc.readMem(0xc7c7));
        EXPECT(0x2e, gbc.readMem(0xc7c8));
        // D4 007F
        gbc.setState(0xc8db, 0x25bc, 0xc970, 0x1b4f, 0x8f18, 0x46d8, 0x0, 0x0);
        gbc.writeMem(0xc8db, { 0xd4, 0xae, 0xbe });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x25bc, gbc.sp());
        EXPECT(0xc8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc8db));
        EXPECT(0xae, gbc.readMem(0xc8dc));
        EXPECT(0xbe, gbc.readMem(0xc8dd));
        // D4 0080
        gbc.setState(0x7fef, 0x477b, 0x3b10, 0xad2, 0xc70f, 0x9154, 0x0, 0x1);
        gbc.writeMem(0x7fef, { 0xd4, 0x6a, 0x2c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x477b, gbc.sp());
        EXPECT(0x7ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0081
        gbc.setState(0xb2b2, 0x9f58, 0xd220, 0xa907, 0xdb97, 0x12c2, 0x1, 0x1);
        gbc.writeMem(0x9f56, { 0x0, 0x0 });
        gbc.writeMem(0xb2b2, { 0xd4, 0x5c, 0x6c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9f56, gbc.sp());
        EXPECT(0x6c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9f56));
        EXPECT(0xb2, gbc.readMem(0x9f57));
        EXPECT(0xd4, gbc.readMem(0xb2b2));
        EXPECT(0x5c, gbc.readMem(0xb2b3));
        EXPECT(0x6c, gbc.readMem(0xb2b4));
        // D4 0082
        gbc.setState(0x7782, 0x2cd0, 0x4890, 0x9d65, 0x7fd7, 0xe1db, 0x0, 0x0);
        gbc.writeMem(0x7782, { 0xd4, 0xf4, 0x68 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2cd0, gbc.sp());
        EXPECT(0x7785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0083
        gbc.setState(0x4a2d, 0xa027, 0x2a60, 0x5538, 0xc080, 0xd128, 0x0, 0x0);
        gbc.writeMem(0x4a2d, { 0xd4, 0xda, 0x51 });
        gbc.writeMem(0xa025, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa025, gbc.sp());
        EXPECT(0x51da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xa025));
        EXPECT(0x4a, gbc.readMem(0xa026));
        // D4 0084
        gbc.setState(0x1a1d, 0x21cd, 0xce10, 0x4c01, 0x7f50, 0xc4a5, 0x0, 0x0);
        gbc.writeMem(0x1a1d, { 0xd4, 0xc3, 0x6f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x21cd, gbc.sp());
        EXPECT(0x1a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0085
        gbc.setState(0x907f, 0xae5f, 0xd440, 0x2836, 0x13d4, 0xe637, 0x1, 0x1);
        gbc.writeMem(0x907f, { 0xd4, 0xab, 0x27 });
        gbc.writeMem(0xae5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xae5d, gbc.sp());
        EXPECT(0x27ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x907f));
        EXPECT(0xab, gbc.readMem(0x9080));
        EXPECT(0x27, gbc.readMem(0x9081));
        EXPECT(0x82, gbc.readMem(0xae5d));
        EXPECT(0x90, gbc.readMem(0xae5e));
        // D4 0087
        gbc.setState(0x2fa8, 0x9fa6, 0x1800, 0x8ee1, 0x6899, 0xa5af, 0x0, 0x0);
        gbc.writeMem(0x2fa8, { 0xd4, 0xaa, 0x41 });
        gbc.writeMem(0x9fa4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9fa4, gbc.sp());
        EXPECT(0x41aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x9fa4));
        EXPECT(0x2f, gbc.readMem(0x9fa5));
        // D4 0088
        gbc.setState(0xa19e, 0xbffa, 0x36d0, 0xc9a5, 0xaa13, 0x1c68, 0x1, 0x1);
        gbc.writeMem(0xa19e, { 0xd4, 0xa3, 0x3b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbffa, gbc.sp());
        EXPECT(0xa1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa19e));
        EXPECT(0xa3, gbc.readMem(0xa19f));
        EXPECT(0x3b, gbc.readMem(0xa1a0));
        // D4 008B
        gbc.setState(0x2d71, 0xadc4, 0xf910, 0x35a1, 0x4c2d, 0xbbd8, 0x1, 0x0);
        gbc.writeMem(0x2d71, { 0xd4, 0xc3, 0xc });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xadc4, gbc.sp());
        EXPECT(0x2d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 008C
        gbc.setState(0xabd7, 0xaf0c, 0xa7f0, 0xc192, 0xfe64, 0x21da, 0x0, 0x0);
        gbc.writeMem(0xabd7, { 0xd4, 0xc6, 0x2b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xaf0c, gbc.sp());
        EXPECT(0xabda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xabd7));
        EXPECT(0xc6, gbc.readMem(0xabd8));
        EXPECT(0x2b, gbc.readMem(0xabd9));
        // D4 008D
        gbc.setState(0xbcb, 0xe0a4, 0xccc0, 0xcada, 0x42ff, 0x3085, 0x0, 0x1);
        gbc.writeMem(0xbcb, { 0xd4, 0x70, 0xc1 });
        gbc.writeMem(0xe0a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe0a2, gbc.sp());
        EXPECT(0xc170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xe0a2));
        EXPECT(0xb, gbc.readMem(0xe0a3));
        // D4 008F
        gbc.setState(0x8cc1, 0x9e2a, 0xe130, 0x52d3, 0xc763, 0x5bf8, 0x1, 0x1);
        gbc.writeMem(0x8cc1, { 0xd4, 0x91, 0x40 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9e2a, gbc.sp());
        EXPECT(0x8cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8cc1));
        EXPECT(0x91, gbc.readMem(0x8cc2));
        EXPECT(0x40, gbc.readMem(0x8cc3));
        // D4 0090
        gbc.setState(0x9347, 0x75d7, 0x6e70, 0xfaa7, 0x906b, 0xb637, 0x1, 0x1);
        gbc.writeMem(0x9347, { 0xd4, 0xe, 0xdc });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x75d7, gbc.sp());
        EXPECT(0x934a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9347));
        EXPECT(0xe, gbc.readMem(0x9348));
        EXPECT(0xdc, gbc.readMem(0x9349));
        // D4 0092
        gbc.setState(0xe471, 0xc77a, 0x2200, 0xd4b5, 0x9443, 0x7d3a, 0x1, 0x0);
        gbc.writeMem(0xc778, { 0x0, 0x0 });
        gbc.writeMem(0xe471, { 0xd4, 0x63, 0xaa });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc778, gbc.sp());
        EXPECT(0xaa63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xc778));
        EXPECT(0xe4, gbc.readMem(0xc779));
        EXPECT(0xd4, gbc.readMem(0xe471));
        EXPECT(0x63, gbc.readMem(0xe472));
        EXPECT(0xaa, gbc.readMem(0xe473));
        // D4 0093
        gbc.setState(0xd0ab, 0xedfd, 0x8a70, 0xc834, 0x6615, 0x7bd0, 0x0, 0x1);
        gbc.writeMem(0xd0ab, { 0xd4, 0xe4, 0xbd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xedfd, gbc.sp());
        EXPECT(0xd0ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd0ab));
        EXPECT(0xe4, gbc.readMem(0xd0ac));
        EXPECT(0xbd, gbc.readMem(0xd0ad));
        // D4 0095
        gbc.setState(0xe0fe, 0x886c, 0x2050, 0x9ac0, 0x198b, 0x2e9d, 0x0, 0x0);
        gbc.writeMem(0xe0fe, { 0xd4, 0x56, 0x3e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x886c, gbc.sp());
        EXPECT(0xe101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe0fe));
        EXPECT(0x56, gbc.readMem(0xe0ff));
        EXPECT(0x3e, gbc.readMem(0xe100));
        // D4 0098
        gbc.setState(0xba4, 0xf2f1, 0xfd0, 0x8176, 0xa09e, 0x5376, 0x1, 0x1);
        gbc.writeMem(0xba4, { 0xd4, 0x5b, 0x42 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf2f1, gbc.sp());
        EXPECT(0xba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0099
        gbc.setState(0x203c, 0x81f0, 0xd230, 0xca6f, 0xd8dc, 0xfd5e, 0x1, 0x1);
        gbc.writeMem(0x203c, { 0xd4, 0xce, 0x5b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x81f0, gbc.sp());
        EXPECT(0x203f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 009A
        gbc.setState(0xd66f, 0xfc20, 0x1780, 0xf902, 0x406e, 0x1192, 0x0, 0x1);
        gbc.writeMem(0xd66f, { 0xd4, 0xa2, 0xcd });
        gbc.writeMem(0xfc1e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfc1e, gbc.sp());
        EXPECT(0xcda2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd66f));
        EXPECT(0xa2, gbc.readMem(0xd670));
        EXPECT(0xcd, gbc.readMem(0xd671));
        EXPECT(0x72, gbc.readMem(0xfc1e));
        EXPECT(0xd6, gbc.readMem(0xfc1f));
        // D4 009C
        gbc.setState(0xe065, 0xfaf6, 0x8de0, 0x22ef, 0xce04, 0x6809, 0x1, 0x1);
        gbc.writeMem(0xe065, { 0xd4, 0x4b, 0x7a });
        gbc.writeMem(0xfaf4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfaf4, gbc.sp());
        EXPECT(0x7a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe065));
        EXPECT(0x4b, gbc.readMem(0xe066));
        EXPECT(0x7a, gbc.readMem(0xe067));
        EXPECT(0x68, gbc.readMem(0xfaf4));
        EXPECT(0xe0, gbc.readMem(0xfaf5));
        // D4 009D
        gbc.setState(0xad4b, 0x8557, 0xb200, 0x48c6, 0xe77a, 0xb487, 0x0, 0x0);
        gbc.writeMem(0x8555, { 0x0, 0x0 });
        gbc.writeMem(0xad4b, { 0xd4, 0xad, 0x8f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8555, gbc.sp());
        EXPECT(0x8fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x8555));
        EXPECT(0xad, gbc.readMem(0x8556));
        EXPECT(0xd4, gbc.readMem(0xad4b));
        EXPECT(0xad, gbc.readMem(0xad4c));
        EXPECT(0x8f, gbc.readMem(0xad4d));
        // D4 009E
        gbc.setState(0x17ac, 0xa397, 0xa620, 0x735e, 0xb49, 0x3596, 0x0, 0x0);
        gbc.writeMem(0x17ac, { 0xd4, 0xf, 0x43 });
        gbc.writeMem(0xa395, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa395, gbc.sp());
        EXPECT(0x430f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xa395));
        EXPECT(0x17, gbc.readMem(0xa396));
        // D4 009F
        gbc.setState(0xe851, 0x1e08, 0x3090, 0x3dd5, 0xe368, 0x7fd8, 0x1, 0x1);
        gbc.writeMem(0xe851, { 0xd4, 0x91, 0x64 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1e08, gbc.sp());
        EXPECT(0xe854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe851));
        EXPECT(0x91, gbc.readMem(0xe852));
        EXPECT(0x64, gbc.readMem(0xe853));
        // D4 00A0
        gbc.setState(0x205c, 0x3f7e, 0x24b0, 0xbd67, 0xb825, 0xd03b, 0x0, 0x0);
        gbc.writeMem(0x205c, { 0xd4, 0xf0, 0xc5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3f7e, gbc.sp());
        EXPECT(0x205f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00A1
        gbc.setState(0xe41d, 0x9c7c, 0x6980, 0xb6af, 0x5bef, 0xe029, 0x0, 0x1);
        gbc.writeMem(0x9c7a, { 0x0, 0x0 });
        gbc.writeMem(0xe41d, { 0xd4, 0xbf, 0xdd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9c7a, gbc.sp());
        EXPECT(0xddbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x9c7a));
        EXPECT(0xe4, gbc.readMem(0x9c7b));
        EXPECT(0xd4, gbc.readMem(0xe41d));
        EXPECT(0xbf, gbc.readMem(0xe41e));
        EXPECT(0xdd, gbc.readMem(0xe41f));
        // D4 00A2
        gbc.setState(0x19c3, 0x2580, 0xd0f0, 0x3cf0, 0x95e6, 0xba25, 0x0, 0x1);
        gbc.writeMem(0x19c3, { 0xd4, 0x92, 0xc });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2580, gbc.sp());
        EXPECT(0x19c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00A4
        gbc.setState(0xdf53, 0xfaf5, 0x3a30, 0x7703, 0x7a7, 0xbde8, 0x0, 0x0);
        gbc.writeMem(0xdf53, { 0xd4, 0x2, 0xff });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfaf5, gbc.sp());
        EXPECT(0xdf56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xdf53));
        EXPECT(0x2, gbc.readMem(0xdf54));
        EXPECT(0xff, gbc.readMem(0xdf55));
        // D4 00A5
        gbc.setState(0x19c0, 0x66c3, 0x2bb0, 0xdf8b, 0xbabc, 0xe67c, 0x1, 0x0);
        gbc.writeMem(0x19c0, { 0xd4, 0x5, 0x85 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x66c3, gbc.sp());
        EXPECT(0x19c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00A8
        gbc.setState(0xa5b4, 0x9212, 0xbab0, 0x7e94, 0x18b8, 0x7154, 0x1, 0x0);
        gbc.writeMem(0xa5b4, { 0xd4, 0xc5, 0xbf });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9212, gbc.sp());
        EXPECT(0xa5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa5b4));
        EXPECT(0xc5, gbc.readMem(0xa5b5));
        EXPECT(0xbf, gbc.readMem(0xa5b6));
        // D4 00A9
        gbc.setState(0xbd07, 0xbf98, 0xaac0, 0xfef1, 0xb82, 0xb5a, 0x1, 0x1);
        gbc.writeMem(0xbd07, { 0xd4, 0x5f, 0x50 });
        gbc.writeMem(0xbf96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbf96, gbc.sp());
        EXPECT(0x505f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbd07));
        EXPECT(0x5f, gbc.readMem(0xbd08));
        EXPECT(0x50, gbc.readMem(0xbd09));
        EXPECT(0xa, gbc.readMem(0xbf96));
        EXPECT(0xbd, gbc.readMem(0xbf97));
        // D4 00AA
        gbc.setState(0x320, 0xf4c6, 0x69a0, 0x8170, 0x5a33, 0xc939, 0x0, 0x0);
        gbc.writeMem(0x320, { 0xd4, 0x69, 0xfc });
        gbc.writeMem(0xf4c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf4c4, gbc.sp());
        EXPECT(0xfc69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xf4c4));
        EXPECT(0x3, gbc.readMem(0xf4c5));
        // D4 00AC
        gbc.setState(0x9d43, 0xddc9, 0x5d40, 0xf675, 0xbec1, 0xc350, 0x1, 0x0);
        gbc.writeMem(0x9d43, { 0xd4, 0x53, 0xfa });
        gbc.writeMem(0xddc7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xddc7, gbc.sp());
        EXPECT(0xfa53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9d43));
        EXPECT(0x53, gbc.readMem(0x9d44));
        EXPECT(0xfa, gbc.readMem(0x9d45));
        EXPECT(0x46, gbc.readMem(0xddc7));
        EXPECT(0x9d, gbc.readMem(0xddc8));
        // D4 00AD
        gbc.setState(0xb50e, 0xf851, 0x7de0, 0xe6e3, 0xffe9, 0xb06a, 0x1, 0x1);
        gbc.writeMem(0xb50e, { 0xd4, 0x6e, 0xa4 });
        gbc.writeMem(0xf84f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf84f, gbc.sp());
        EXPECT(0xa46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb50e));
        EXPECT(0x6e, gbc.readMem(0xb50f));
        EXPECT(0xa4, gbc.readMem(0xb510));
        EXPECT(0x11, gbc.readMem(0xf84f));
        EXPECT(0xb5, gbc.readMem(0xf850));
        // D4 00AE
        gbc.setState(0x40e0, 0x53bd, 0x7db0, 0x3097, 0xa4ea, 0x34fe, 0x1, 0x0);
        gbc.writeMem(0x40e0, { 0xd4, 0x3e, 0xd9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x53bd, gbc.sp());
        EXPECT(0x40e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00AF
        gbc.setState(0x53a, 0xb300, 0x26b0, 0xa5a8, 0x2794, 0x89e5, 0x0, 0x1);
        gbc.writeMem(0x53a, { 0xd4, 0xa6, 0x12 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb300, gbc.sp());
        EXPECT(0x53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00B2
        gbc.setState(0x63d6, 0x527c, 0xa590, 0xbed5, 0x90c8, 0xd805, 0x0, 0x0);
        gbc.writeMem(0x63d6, { 0xd4, 0x87, 0x34 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x527c, gbc.sp());
        EXPECT(0x63d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00B3
        gbc.setState(0x4032, 0xcfd9, 0x7f70, 0x5af6, 0x84b5, 0xa2e8, 0x1, 0x0);
        gbc.writeMem(0x4032, { 0xd4, 0xb4, 0x57 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xcfd9, gbc.sp());
        EXPECT(0x4035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00B4
        gbc.setState(0xb772, 0x87f9, 0x3650, 0x276d, 0xc7a9, 0x9872, 0x1, 0x0);
        gbc.writeMem(0xb772, { 0xd4, 0x12, 0x6b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x87f9, gbc.sp());
        EXPECT(0xb775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb772));
        EXPECT(0x12, gbc.readMem(0xb773));
        EXPECT(0x6b, gbc.readMem(0xb774));
        // D4 00B5
        gbc.setState(0x4edc, 0xce0d, 0x3fe0, 0xdb5a, 0x8829, 0xafe2, 0x0, 0x1);
        gbc.writeMem(0x4edc, { 0xd4, 0x6c, 0x73 });
        gbc.writeMem(0xce0b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xce0b, gbc.sp());
        EXPECT(0x736c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xce0b));
        EXPECT(0x4e, gbc.readMem(0xce0c));
        // D4 00B6
        gbc.setState(0x9d92, 0x9e3f, 0x43b0, 0xb068, 0x2150, 0x4dba, 0x1, 0x0);
        gbc.writeMem(0x9d92, { 0xd4, 0x1d, 0x12 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9e3f, gbc.sp());
        EXPECT(0x9d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9d92));
        EXPECT(0x1d, gbc.readMem(0x9d93));
        EXPECT(0x12, gbc.readMem(0x9d94));
        // D4 00B8
        gbc.setState(0xd83b, 0xa011, 0x5640, 0x8889, 0x7734, 0x992, 0x0, 0x1);
        gbc.writeMem(0xa00f, { 0x0, 0x0 });
        gbc.writeMem(0xd83b, { 0xd4, 0xaa, 0x74 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa00f, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xa00f));
        EXPECT(0xd8, gbc.readMem(0xa010));
        EXPECT(0xd4, gbc.readMem(0xd83b));
        EXPECT(0xaa, gbc.readMem(0xd83c));
        EXPECT(0x74, gbc.readMem(0xd83d));
        // D4 00B9
        gbc.setState(0xdfc2, 0xfaa6, 0xc90, 0xb1c6, 0x802f, 0x2a83, 0x0, 0x1);
        gbc.writeMem(0xdfc2, { 0xd4, 0xd5, 0xc1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfaa6, gbc.sp());
        EXPECT(0xdfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xdfc2));
        EXPECT(0xd5, gbc.readMem(0xdfc3));
        EXPECT(0xc1, gbc.readMem(0xdfc4));
        // D4 00BA
        gbc.setState(0xd313, 0xd91d, 0x8c20, 0x52e1, 0x4add, 0x1887, 0x1, 0x0);
        gbc.writeMem(0xd313, { 0xd4, 0x90, 0xf1 });
        gbc.writeMem(0xd91b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd91b, gbc.sp());
        EXPECT(0xf190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd313));
        EXPECT(0x90, gbc.readMem(0xd314));
        EXPECT(0xf1, gbc.readMem(0xd315));
        EXPECT(0x16, gbc.readMem(0xd91b));
        EXPECT(0xd3, gbc.readMem(0xd91c));
        // D4 00BB
        gbc.setState(0x6ad, 0xea5a, 0xb780, 0xd05d, 0x56cd, 0x81f1, 0x1, 0x0);
        gbc.writeMem(0x6ad, { 0xd4, 0x30, 0xd2 });
        gbc.writeMem(0xea58, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xea58, gbc.sp());
        EXPECT(0xd230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xea58));
        EXPECT(0x6, gbc.readMem(0xea59));
        // D4 00BF
        gbc.setState(0xa9d6, 0x3004, 0x77d0, 0x2861, 0x974d, 0xa39d, 0x0, 0x0);
        gbc.writeMem(0xa9d6, { 0xd4, 0x96, 0xfe });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3004, gbc.sp());
        EXPECT(0xa9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa9d6));
        EXPECT(0x96, gbc.readMem(0xa9d7));
        EXPECT(0xfe, gbc.readMem(0xa9d8));
        // D4 00C0
        gbc.setState(0x517b, 0xb536, 0x510, 0xf988, 0xbb80, 0xdb60, 0x0, 0x0);
        gbc.writeMem(0x517b, { 0xd4, 0xab, 0x52 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb536, gbc.sp());
        EXPECT(0x517e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00C1
        gbc.setState(0x1328, 0x3b0d, 0xc010, 0x71c9, 0x4e1c, 0xd281, 0x1, 0x1);
        gbc.writeMem(0x1328, { 0xd4, 0x98, 0x54 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3b0d, gbc.sp());
        EXPECT(0x132b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00C3
        gbc.setState(0xbf26, 0xdef6, 0x1a90, 0xd062, 0xc05d, 0xabe0, 0x0, 0x1);
        gbc.writeMem(0xbf26, { 0xd4, 0xce, 0x13 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdef6, gbc.sp());
        EXPECT(0xbf29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbf26));
        EXPECT(0xce, gbc.readMem(0xbf27));
        EXPECT(0x13, gbc.readMem(0xbf28));
        // D4 00C4
        gbc.setState(0x4c4b, 0x3b31, 0xbdd0, 0x9834, 0x760a, 0x327f, 0x1, 0x0);
        gbc.writeMem(0x4c4b, { 0xd4, 0x42, 0x20 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3b31, gbc.sp());
        EXPECT(0x4c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00C6
        gbc.setState(0xcfd6, 0x92cf, 0xda00, 0xbaed, 0xb618, 0xfeac, 0x1, 0x0);
        gbc.writeMem(0x92cd, { 0x0, 0x0 });
        gbc.writeMem(0xcfd6, { 0xd4, 0x91, 0x5f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x92cd, gbc.sp());
        EXPECT(0x5f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x92cd));
        EXPECT(0xcf, gbc.readMem(0x92ce));
        EXPECT(0xd4, gbc.readMem(0xcfd6));
        EXPECT(0x91, gbc.readMem(0xcfd7));
        EXPECT(0x5f, gbc.readMem(0xcfd8));
        // D4 00C7
        gbc.setState(0xe8c1, 0xfea1, 0xbf30, 0x735b, 0x1c3a, 0x4851, 0x1, 0x0);
        gbc.writeMem(0xe8c1, { 0xd4, 0xa7, 0xa5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfea1, gbc.sp());
        EXPECT(0xe8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe8c1));
        EXPECT(0xa7, gbc.readMem(0xe8c2));
        EXPECT(0xa5, gbc.readMem(0xe8c3));
        // D4 00C8
        gbc.setState(0x90e8, 0xa890, 0xff10, 0x3e50, 0x901d, 0xe5e3, 0x0, 0x1);
        gbc.writeMem(0x90e8, { 0xd4, 0xc7, 0x35 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa890, gbc.sp());
        EXPECT(0x90eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x90e8));
        EXPECT(0xc7, gbc.readMem(0x90e9));
        EXPECT(0x35, gbc.readMem(0x90ea));
        // D4 00C9
        gbc.setState(0x33dc, 0xadf1, 0xf370, 0x952e, 0x23c0, 0x24bb, 0x0, 0x1);
        gbc.writeMem(0x33dc, { 0xd4, 0xa, 0xa0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xadf1, gbc.sp());
        EXPECT(0x33df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00CA
        gbc.setState(0x9e00, 0xcc58, 0x7e70, 0x1b7c, 0x59b1, 0xcd4f, 0x1, 0x0);
        gbc.writeMem(0x9e00, { 0xd4, 0xd, 0x52 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcc58, gbc.sp());
        EXPECT(0x9e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9e00));
        EXPECT(0xd, gbc.readMem(0x9e01));
        EXPECT(0x52, gbc.readMem(0x9e02));
        // D4 00CB
        gbc.setState(0xa330, 0xcfb5, 0x24e0, 0xb53d, 0x91f7, 0x31ba, 0x1, 0x1);
        gbc.writeMem(0xa330, { 0xd4, 0x4c, 0xc4 });
        gbc.writeMem(0xcfb3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcfb3, gbc.sp());
        EXPECT(0xc44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa330));
        EXPECT(0x4c, gbc.readMem(0xa331));
        EXPECT(0xc4, gbc.readMem(0xa332));
        EXPECT(0x33, gbc.readMem(0xcfb3));
        EXPECT(0xa3, gbc.readMem(0xcfb4));
        // D4 00CC
        gbc.setState(0x6625, 0x1726, 0xb50, 0xd754, 0x96e6, 0xe8bc, 0x1, 0x1);
        gbc.writeMem(0x6625, { 0xd4, 0xe2, 0x2f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1726, gbc.sp());
        EXPECT(0x6628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00CF
        gbc.setState(0x36c, 0xed8e, 0xd460, 0x50e, 0xe24f, 0x7874, 0x0, 0x1);
        gbc.writeMem(0x36c, { 0xd4, 0xe, 0xaf });
        gbc.writeMem(0xed8c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xed8c, gbc.sp());
        EXPECT(0xaf0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xed8c));
        EXPECT(0x3, gbc.readMem(0xed8d));
        // D4 00D2
        gbc.setState(0x92f4, 0x2460, 0xe270, 0x17d3, 0x92a8, 0x5856, 0x1, 0x0);
        gbc.writeMem(0x92f4, { 0xd4, 0x3d, 0x3c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2460, gbc.sp());
        EXPECT(0x92f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x92f4));
        EXPECT(0x3d, gbc.readMem(0x92f5));
        EXPECT(0x3c, gbc.readMem(0x92f6));
        // D4 00D4
        gbc.setState(0x6e51, 0x99a5, 0x8b60, 0x64ef, 0xfb6a, 0xda52, 0x0, 0x0);
        gbc.writeMem(0x6e51, { 0xd4, 0xb1, 0x7a });
        gbc.writeMem(0x99a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x99a3, gbc.sp());
        EXPECT(0x7ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x99a3));
        EXPECT(0x6e, gbc.readMem(0x99a4));
        // D4 00D6
        gbc.setState(0x9236, 0xbe7b, 0x6f0, 0xe1e4, 0x6702, 0x3749, 0x0, 0x1);
        gbc.writeMem(0x9236, { 0xd4, 0x52, 0xfe });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbe7b, gbc.sp());
        EXPECT(0x9239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9236));
        EXPECT(0x52, gbc.readMem(0x9237));
        EXPECT(0xfe, gbc.readMem(0x9238));
        // D4 00D9
        gbc.setState(0x25e3, 0xe8b2, 0x17a0, 0x7cc4, 0x5a74, 0x8f3d, 0x0, 0x0);
        gbc.writeMem(0x25e3, { 0xd4, 0x27, 0xa3 });
        gbc.writeMem(0xe8b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe8b0, gbc.sp());
        EXPECT(0xa327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe8b0));
        EXPECT(0x25, gbc.readMem(0xe8b1));
        // D4 00DA
        gbc.setState(0x1f6a, 0xb1ef, 0xc200, 0xddf2, 0x9f38, 0x96e0, 0x1, 0x0);
        gbc.writeMem(0x1f6a, { 0xd4, 0x58, 0x5b });
        gbc.writeMem(0xb1ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb1ed, gbc.sp());
        EXPECT(0x5b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb1ed));
        EXPECT(0x1f, gbc.readMem(0xb1ee));
        // D4 00DB
        gbc.setState(0x78de, 0x7baf, 0x990, 0xe050, 0x7790, 0x4ca, 0x1, 0x0);
        gbc.writeMem(0x78de, { 0xd4, 0x12, 0x7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7baf, gbc.sp());
        EXPECT(0x78e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00DF
        gbc.setState(0x8b44, 0x77c, 0xf9d0, 0x20be, 0x820e, 0x884a, 0x1, 0x0);
        gbc.writeMem(0x8b44, { 0xd4, 0xb5, 0x45 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x77c, gbc.sp());
        EXPECT(0x8b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8b44));
        EXPECT(0xb5, gbc.readMem(0x8b45));
        EXPECT(0x45, gbc.readMem(0x8b46));
        // D4 00E0
        gbc.setState(0x40f2, 0xfb03, 0x6070, 0xad8b, 0x228a, 0x7421, 0x1, 0x0);
        gbc.writeMem(0x40f2, { 0xd4, 0x43, 0x5d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfb03, gbc.sp());
        EXPECT(0x40f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00E1
        gbc.setState(0x86f0, 0xd49d, 0x2740, 0xee38, 0x7ffb, 0x5192, 0x1, 0x1);
        gbc.writeMem(0x86f0, { 0xd4, 0xb, 0x5d });
        gbc.writeMem(0xd49b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd49b, gbc.sp());
        EXPECT(0x5d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x86f0));
        EXPECT(0xb, gbc.readMem(0x86f1));
        EXPECT(0x5d, gbc.readMem(0x86f2));
        EXPECT(0xf3, gbc.readMem(0xd49b));
        EXPECT(0x86, gbc.readMem(0xd49c));
        // D4 00E3
        gbc.setState(0xd03a, 0xbe3e, 0x7070, 0x1307, 0x3328, 0xdc7, 0x1, 0x0);
        gbc.writeMem(0xd03a, { 0xd4, 0x51, 0x5 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbe3e, gbc.sp());
        EXPECT(0xd03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd03a));
        EXPECT(0x51, gbc.readMem(0xd03b));
        EXPECT(0x5, gbc.readMem(0xd03c));
        // D4 00E5
        gbc.setState(0x5d1e, 0xaaaa, 0xa9b0, 0x6d4b, 0x539d, 0x725b, 0x1, 0x0);
        gbc.writeMem(0x5d1e, { 0xd4, 0xe1, 0x58 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xaaaa, gbc.sp());
        EXPECT(0x5d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00E6
        gbc.setState(0xe51f, 0xba39, 0xfd60, 0x55dc, 0xe0d2, 0xf9e7, 0x0, 0x1);
        gbc.writeMem(0xba37, { 0x0, 0x0 });
        gbc.writeMem(0xe51f, { 0xd4, 0x1, 0x7b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xba37, gbc.sp());
        EXPECT(0x7b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xba37));
        EXPECT(0xe5, gbc.readMem(0xba38));
        EXPECT(0xd4, gbc.readMem(0xe51f));
        EXPECT(0x1, gbc.readMem(0xe520));
        EXPECT(0x7b, gbc.readMem(0xe521));
        // D4 00E7
        gbc.setState(0x8107, 0x9215, 0x420, 0xbe11, 0xefdc, 0xb3c2, 0x0, 0x0);
        gbc.writeMem(0x8107, { 0xd4, 0xa2, 0xae });
        gbc.writeMem(0x9213, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9213, gbc.sp());
        EXPECT(0xaea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8107));
        EXPECT(0xa2, gbc.readMem(0x8108));
        EXPECT(0xae, gbc.readMem(0x8109));
        EXPECT(0xa, gbc.readMem(0x9213));
        EXPECT(0x81, gbc.readMem(0x9214));
        // D4 00E8
        gbc.setState(0x6bc7, 0xbc0b, 0x7d50, 0xf60a, 0x31ad, 0x34, 0x0, 0x0);
        gbc.writeMem(0x6bc7, { 0xd4, 0x58, 0x3d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbc0b, gbc.sp());
        EXPECT(0x6bca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00E9
        gbc.setState(0x473a, 0x3570, 0xdcb0, 0xc22f, 0x45e, 0x664e, 0x1, 0x1);
        gbc.writeMem(0x473a, { 0xd4, 0x2, 0x61 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3570, gbc.sp());
        EXPECT(0x473d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00EA
        gbc.setState(0x724f, 0xf79e, 0x4e50, 0xc167, 0x2db6, 0x82bb, 0x1, 0x0);
        gbc.writeMem(0x724f, { 0xd4, 0xb9, 0xaa });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf79e, gbc.sp());
        EXPECT(0x7252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00EC
        gbc.setState(0x4785, 0xba41, 0x4830, 0x7ad1, 0x150b, 0x89c5, 0x0, 0x1);
        gbc.writeMem(0x4785, { 0xd4, 0xe2, 0xb2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xba41, gbc.sp());
        EXPECT(0x4788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00ED
        gbc.setState(0x91d5, 0xb178, 0xf3d0, 0xfdce, 0x5553, 0xc8c1, 0x0, 0x1);
        gbc.writeMem(0x91d5, { 0xd4, 0x65, 0xc5 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb178, gbc.sp());
        EXPECT(0x91d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x91d5));
        EXPECT(0x65, gbc.readMem(0x91d6));
        EXPECT(0xc5, gbc.readMem(0x91d7));
        // D4 00EE
        gbc.setState(0x3099, 0xc4a2, 0xb3c0, 0xf3ae, 0xdb72, 0x4b68, 0x1, 0x0);
        gbc.writeMem(0x3099, { 0xd4, 0xd5, 0x1f });
        gbc.writeMem(0xc4a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc4a0, gbc.sp());
        EXPECT(0x1fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc4a0));
        EXPECT(0x30, gbc.readMem(0xc4a1));
        // D4 00F1
        gbc.setState(0x9b21, 0xd864, 0x2610, 0x8d31, 0xeab3, 0x5d0, 0x0, 0x0);
        gbc.writeMem(0x9b21, { 0xd4, 0x57, 0x92 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd864, gbc.sp());
        EXPECT(0x9b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9b21));
        EXPECT(0x57, gbc.readMem(0x9b22));
        EXPECT(0x92, gbc.readMem(0x9b23));
        // D4 00F2
        gbc.setState(0xb9bb, 0x2026, 0xf910, 0x532, 0x64a3, 0x6371, 0x0, 0x0);
        gbc.writeMem(0xb9bb, { 0xd4, 0x71, 0x66 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2026, gbc.sp());
        EXPECT(0xb9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb9bb));
        EXPECT(0x71, gbc.readMem(0xb9bc));
        EXPECT(0x66, gbc.readMem(0xb9bd));
        // D4 00F3
        gbc.setState(0xe822, 0x2d02, 0x24b0, 0xc9d1, 0x2e7c, 0x9055, 0x1, 0x0);
        gbc.writeMem(0xe822, { 0xd4, 0x86, 0x9b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2d02, gbc.sp());
        EXPECT(0xe825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe822));
        EXPECT(0x86, gbc.readMem(0xe823));
        EXPECT(0x9b, gbc.readMem(0xe824));
        // D4 00F6
        gbc.setState(0xaab3, 0xfc00, 0xa4d0, 0x1f72, 0x407a, 0xa2eb, 0x0, 0x0);
        gbc.writeMem(0xaab3, { 0xd4, 0x7e, 0xa9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfc00, gbc.sp());
        EXPECT(0xaab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xaab3));
        EXPECT(0x7e, gbc.readMem(0xaab4));
        EXPECT(0xa9, gbc.readMem(0xaab5));
        // D4 00F7
        gbc.setState(0x30fb, 0x7c40, 0xaf10, 0x9fcc, 0x9b82, 0x4889, 0x1, 0x1);
        gbc.writeMem(0x30fb, { 0xd4, 0xa6, 0x5f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7c40, gbc.sp());
        EXPECT(0x30fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00F8
        gbc.setState(0x95d1, 0xbaee, 0x1d30, 0x2cfb, 0x8f42, 0xcca1, 0x1, 0x1);
        gbc.writeMem(0x95d1, { 0xd4, 0xc5, 0x6f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbaee, gbc.sp());
        EXPECT(0x95d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x95d1));
        EXPECT(0xc5, gbc.readMem(0x95d2));
        EXPECT(0x6f, gbc.readMem(0x95d3));
        // D4 00F9
        gbc.setState(0xe67b, 0xe931, 0x3660, 0xdc79, 0x4f1d, 0x578, 0x0, 0x1);
        gbc.writeMem(0xe67b, { 0xd4, 0xbc, 0x67 });
        gbc.writeMem(0xe92f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe92f, gbc.sp());
        EXPECT(0x67bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe67b));
        EXPECT(0xbc, gbc.readMem(0xe67c));
        EXPECT(0x67, gbc.readMem(0xe67d));
        EXPECT(0x7e, gbc.readMem(0xe92f));
        EXPECT(0xe6, gbc.readMem(0xe930));
        // D4 00FA
        gbc.setState(0x34cb, 0xdbc8, 0xbd80, 0x20d, 0x41bc, 0x8fbf, 0x1, 0x0);
        gbc.writeMem(0x34cb, { 0xd4, 0xbb, 0x65 });
        gbc.writeMem(0xdbc6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdbc6, gbc.sp());
        EXPECT(0x65bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xdbc6));
        EXPECT(0x34, gbc.readMem(0xdbc7));
        // D4 00FB
        gbc.setState(0x5746, 0x52a6, 0xf290, 0x3890, 0x370, 0x53aa, 0x1, 0x1);
        gbc.writeMem(0x5746, { 0xd4, 0x10, 0x50 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x52a6, gbc.sp());
        EXPECT(0x5749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00FD
        gbc.setState(0x74e8, 0x1e28, 0x2890, 0x27a9, 0xe89c, 0x80dd, 0x0, 0x0);
        gbc.writeMem(0x74e8, { 0xd4, 0xf3, 0x71 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1e28, gbc.sp());
        EXPECT(0x74eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 00FF
        gbc.setState(0xc76, 0x171b, 0xf770, 0x6c8b, 0x1c1b, 0xd5e4, 0x0, 0x0);
        gbc.writeMem(0xc76, { 0xd4, 0x75, 0x86 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x171b, gbc.sp());
        EXPECT(0xc79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0100
        gbc.setState(0xcb76, 0xaedf, 0x54e0, 0xc192, 0x36c4, 0xe7dd, 0x0, 0x1);
        gbc.writeMem(0xaedd, { 0x0, 0x0 });
        gbc.writeMem(0xcb76, { 0xd4, 0x43, 0xc });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xaedd, gbc.sp());
        EXPECT(0xc43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xaedd));
        EXPECT(0xcb, gbc.readMem(0xaede));
        EXPECT(0xd4, gbc.readMem(0xcb76));
        EXPECT(0x43, gbc.readMem(0xcb77));
        EXPECT(0xc, gbc.readMem(0xcb78));
        // D4 0101
        gbc.setState(0xc211, 0xdb96, 0xf820, 0x5b33, 0xe4e1, 0xc6e0, 0x1, 0x0);
        gbc.writeMem(0xc211, { 0xd4, 0xa9, 0xec });
        gbc.writeMem(0xdb94, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdb94, gbc.sp());
        EXPECT(0xeca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc211));
        EXPECT(0xa9, gbc.readMem(0xc212));
        EXPECT(0xec, gbc.readMem(0xc213));
        EXPECT(0x14, gbc.readMem(0xdb94));
        EXPECT(0xc2, gbc.readMem(0xdb95));
        // D4 0102
        gbc.setState(0x5db9, 0xeba4, 0xda10, 0x875f, 0x933, 0x8cbb, 0x1, 0x0);
        gbc.writeMem(0x5db9, { 0xd4, 0xd0, 0xfb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xeba4, gbc.sp());
        EXPECT(0x5dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0104
        gbc.setState(0x59af, 0x6259, 0x4610, 0x278c, 0x4450, 0x3ab7, 0x1, 0x0);
        gbc.writeMem(0x59af, { 0xd4, 0x97, 0xc });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6259, gbc.sp());
        EXPECT(0x59b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0105
        gbc.setState(0x64b3, 0xa365, 0xf120, 0xc4c4, 0xab25, 0xb558, 0x0, 0x1);
        gbc.writeMem(0x64b3, { 0xd4, 0x50, 0xaf });
        gbc.writeMem(0xa363, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa363, gbc.sp());
        EXPECT(0xaf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xa363));
        EXPECT(0x64, gbc.readMem(0xa364));
        // D4 0106
        gbc.setState(0xde93, 0x62d3, 0xb050, 0x1847, 0xee37, 0x516d, 0x1, 0x1);
        gbc.writeMem(0xde93, { 0xd4, 0x4f, 0xff });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x62d3, gbc.sp());
        EXPECT(0xde96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xde93));
        EXPECT(0x4f, gbc.readMem(0xde94));
        EXPECT(0xff, gbc.readMem(0xde95));
        // D4 0107
        gbc.setState(0xcaaf, 0xfab8, 0x50, 0xeb79, 0xfa9e, 0x6a98, 0x1, 0x0);
        gbc.writeMem(0xcaaf, { 0xd4, 0x30, 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfab8, gbc.sp());
        EXPECT(0xcab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xcaaf));
        EXPECT(0x30, gbc.readMem(0xcab0));
        EXPECT(0x8f, gbc.readMem(0xcab1));
        // D4 0108
        gbc.setState(0x57e3, 0xdeb7, 0x6b50, 0x66bc, 0x9f8a, 0xbf3, 0x0, 0x1);
        gbc.writeMem(0x57e3, { 0xd4, 0xf4, 0xfc });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdeb7, gbc.sp());
        EXPECT(0x57e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0109
        gbc.setState(0x3d2d, 0x1508, 0xab0, 0x766b, 0x9468, 0x9b1f, 0x0, 0x0);
        gbc.writeMem(0x3d2d, { 0xd4, 0x68, 0x42 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1508, gbc.sp());
        EXPECT(0x3d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 010A
        gbc.setState(0x81e3, 0x2036, 0xae10, 0x18fc, 0x7c76, 0x9331, 0x0, 0x0);
        gbc.writeMem(0x81e3, { 0xd4, 0x5, 0xf5 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2036, gbc.sp());
        EXPECT(0x81e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x81e3));
        EXPECT(0x5, gbc.readMem(0x81e4));
        EXPECT(0xf5, gbc.readMem(0x81e5));
        // D4 010C
        gbc.setState(0x19f0, 0x507a, 0x3af0, 0xcffe, 0xbd40, 0x14a9, 0x1, 0x0);
        gbc.writeMem(0x19f0, { 0xd4, 0x65, 0xbc });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x507a, gbc.sp());
        EXPECT(0x19f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 010E
        gbc.setState(0x432d, 0xbb15, 0xad90, 0x85ed, 0x4381, 0xb117, 0x1, 0x1);
        gbc.writeMem(0x432d, { 0xd4, 0x77, 0x9e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbb15, gbc.sp());
        EXPECT(0x4330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 010F
        gbc.setState(0x578e, 0xde5a, 0xd0c0, 0xc1fd, 0x9320, 0xe581, 0x1, 0x1);
        gbc.writeMem(0x578e, { 0xd4, 0x35, 0xa });
        gbc.writeMem(0xde58, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xde58, gbc.sp());
        EXPECT(0xa35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xde58));
        EXPECT(0x57, gbc.readMem(0xde59));
        // D4 0110
        gbc.setState(0x24a0, 0xb22a, 0x82b0, 0x3f0c, 0x47dd, 0x2e6e, 0x0, 0x0);
        gbc.writeMem(0x24a0, { 0xd4, 0xda, 0x19 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb22a, gbc.sp());
        EXPECT(0x24a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0112
        gbc.setState(0x53ed, 0x4fb8, 0x5810, 0x81da, 0x5c01, 0x5e, 0x0, 0x0);
        gbc.writeMem(0x53ed, { 0xd4, 0x28, 0xe0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4fb8, gbc.sp());
        EXPECT(0x53f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0114
        gbc.setState(0x565b, 0x3b25, 0xbd10, 0xc42a, 0x7e2e, 0xf6e6, 0x1, 0x0);
        gbc.writeMem(0x565b, { 0xd4, 0x39, 0x63 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3b25, gbc.sp());
        EXPECT(0x565e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0115
        gbc.setState(0xa129, 0x128e, 0x8610, 0x9028, 0xbfb3, 0xbaf4, 0x1, 0x0);
        gbc.writeMem(0xa129, { 0xd4, 0x53, 0xf1 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x128e, gbc.sp());
        EXPECT(0xa12c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa129));
        EXPECT(0x53, gbc.readMem(0xa12a));
        EXPECT(0xf1, gbc.readMem(0xa12b));
        // D4 0118
        gbc.setState(0x9814, 0xf223, 0x7bc0, 0x18dc, 0x3840, 0x6111, 0x1, 0x0);
        gbc.writeMem(0x9814, { 0xd4, 0xf5, 0x4f });
        gbc.writeMem(0xf221, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf221, gbc.sp());
        EXPECT(0x4ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9814));
        EXPECT(0xf5, gbc.readMem(0x9815));
        EXPECT(0x4f, gbc.readMem(0x9816));
        EXPECT(0x17, gbc.readMem(0xf221));
        EXPECT(0x98, gbc.readMem(0xf222));
        // D4 0119
        gbc.setState(0xb48, 0x64db, 0x8b50, 0x7385, 0x3df1, 0xc773, 0x1, 0x0);
        gbc.writeMem(0xb48, { 0xd4, 0x57, 0x5a });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x64db, gbc.sp());
        EXPECT(0xb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 011A
        gbc.setState(0x14c2, 0xfe9e, 0x48d0, 0x2d02, 0x95f7, 0x4929, 0x1, 0x0);
        gbc.writeMem(0x14c2, { 0xd4, 0x69, 0xa4 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfe9e, gbc.sp());
        EXPECT(0x14c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 011C
        gbc.setState(0x2f1c, 0x2f11, 0x8110, 0x304b, 0xf141, 0xe399, 0x1, 0x1);
        gbc.writeMem(0x2f1c, { 0xd4, 0xdb, 0xd1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2f11, gbc.sp());
        EXPECT(0x2f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 011E
        gbc.setState(0xeb8d, 0x8c5b, 0xdd50, 0xf8ac, 0xb5cb, 0x5d9a, 0x1, 0x0);
        gbc.writeMem(0xeb8d, { 0xd4, 0x30, 0xd5 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8c5b, gbc.sp());
        EXPECT(0xeb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xeb8d));
        EXPECT(0x30, gbc.readMem(0xeb8e));
        EXPECT(0xd5, gbc.readMem(0xeb8f));
        // D4 0120
        gbc.setState(0x1436, 0x8d7e, 0x26b0, 0xed30, 0xf986, 0x31c8, 0x0, 0x1);
        gbc.writeMem(0x1436, { 0xd4, 0x10, 0x74 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8d7e, gbc.sp());
        EXPECT(0x1439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0121
        gbc.setState(0x17ca, 0x9cb9, 0x1500, 0xe264, 0x33b7, 0x4f98, 0x0, 0x1);
        gbc.writeMem(0x17ca, { 0xd4, 0x11, 0x71 });
        gbc.writeMem(0x9cb7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9cb7, gbc.sp());
        EXPECT(0x7111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x9cb7));
        EXPECT(0x17, gbc.readMem(0x9cb8));
        // D4 0122
        gbc.setState(0x35c2, 0x8c90, 0xf220, 0xe6a7, 0xe448, 0xf443, 0x0, 0x0);
        gbc.writeMem(0x35c2, { 0xd4, 0x57, 0x7b });
        gbc.writeMem(0x8c8e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8c8e, gbc.sp());
        EXPECT(0x7b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8c8e));
        EXPECT(0x35, gbc.readMem(0x8c8f));
        // D4 0123
        gbc.setState(0x3f37, 0xedc5, 0x8b10, 0xc441, 0x9e3, 0xea62, 0x1, 0x1);
        gbc.writeMem(0x3f37, { 0xd4, 0xd8, 0x8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xedc5, gbc.sp());
        EXPECT(0x3f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0124
        gbc.setState(0x14e4, 0x8566, 0xf240, 0x7943, 0xd56c, 0x7850, 0x1, 0x0);
        gbc.writeMem(0x14e4, { 0xd4, 0x38, 0x41 });
        gbc.writeMem(0x8564, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8564, gbc.sp());
        EXPECT(0x4138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8564));
        EXPECT(0x14, gbc.readMem(0x8565));
        // D4 0125
        gbc.setState(0x21a7, 0x2a8e, 0x7b90, 0xc80d, 0xe64d, 0xf430, 0x0, 0x1);
        gbc.writeMem(0x21a7, { 0xd4, 0xf1, 0xcf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2a8e, gbc.sp());
        EXPECT(0x21aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0127
        gbc.setState(0xd3e, 0xe751, 0xfdc0, 0xd418, 0x4b93, 0x736d, 0x1, 0x0);
        gbc.writeMem(0xd3e, { 0xd4, 0xfa, 0xfa });
        gbc.writeMem(0xe74f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe74f, gbc.sp());
        EXPECT(0xfafa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xe74f));
        EXPECT(0xd, gbc.readMem(0xe750));
        // D4 0128
        gbc.setState(0x698f, 0x1b3f, 0x25d0, 0x74e9, 0x6d62, 0xf983, 0x0, 0x0);
        gbc.writeMem(0x698f, { 0xd4, 0xf, 0x7d });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1b3f, gbc.sp());
        EXPECT(0x6992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0129
        gbc.setState(0x3c24, 0x73, 0xa810, 0xe372, 0xe806, 0x1159, 0x0, 0x1);
        gbc.writeMem(0x3c24, { 0xd4, 0x68, 0x67 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x73, gbc.sp());
        EXPECT(0x3c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 012B
        gbc.setState(0x35b9, 0xcf2c, 0xd860, 0xd6dc, 0xcb01, 0x9afe, 0x1, 0x1);
        gbc.writeMem(0x35b9, { 0xd4, 0x72, 0xfa });
        gbc.writeMem(0xcf2a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcf2a, gbc.sp());
        EXPECT(0xfa72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcf2a));
        EXPECT(0x35, gbc.readMem(0xcf2b));
        // D4 012D
        gbc.setState(0xc153, 0x27ae, 0x7f0, 0xc622, 0x40, 0x683f, 0x0, 0x1);
        gbc.writeMem(0xc153, { 0xd4, 0xc2, 0x3f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x27ae, gbc.sp());
        EXPECT(0xc156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc153));
        EXPECT(0xc2, gbc.readMem(0xc154));
        EXPECT(0x3f, gbc.readMem(0xc155));
        // D4 012E
        gbc.setState(0x62e6, 0x5f35, 0x8010, 0x2b6c, 0xadca, 0x360, 0x1, 0x0);
        gbc.writeMem(0x62e6, { 0xd4, 0xaf, 0xdf });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5f35, gbc.sp());
        EXPECT(0x62e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 012F
        gbc.setState(0x214e, 0x1b5f, 0xee50, 0xa6a1, 0x5571, 0x1c7, 0x0, 0x0);
        gbc.writeMem(0x214e, { 0xd4, 0x65, 0x71 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1b5f, gbc.sp());
        EXPECT(0x2151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0130
        gbc.setState(0xe10d, 0xb462, 0x5b80, 0x7996, 0x3ea5, 0x840f, 0x1, 0x1);
        gbc.writeMem(0xb460, { 0x0, 0x0 });
        gbc.writeMem(0xe10d, { 0xd4, 0x91, 0x1a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb460, gbc.sp());
        EXPECT(0x1a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb460));
        EXPECT(0xe1, gbc.readMem(0xb461));
        EXPECT(0xd4, gbc.readMem(0xe10d));
        EXPECT(0x91, gbc.readMem(0xe10e));
        EXPECT(0x1a, gbc.readMem(0xe10f));
        // D4 0131
        gbc.setState(0xe87d, 0x5295, 0xafd0, 0x2324, 0xb73c, 0x95b2, 0x0, 0x1);
        gbc.writeMem(0xe87d, { 0xd4, 0x68, 0x77 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5295, gbc.sp());
        EXPECT(0xe880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe87d));
        EXPECT(0x68, gbc.readMem(0xe87e));
        EXPECT(0x77, gbc.readMem(0xe87f));
        // D4 0132
        gbc.setState(0xd90e, 0x4bd4, 0x9fb0, 0x7f57, 0x6d5, 0x69dd, 0x0, 0x1);
        gbc.writeMem(0xd90e, { 0xd4, 0x43, 0xbc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4bd4, gbc.sp());
        EXPECT(0xd911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd90e));
        EXPECT(0x43, gbc.readMem(0xd90f));
        EXPECT(0xbc, gbc.readMem(0xd910));
        // D4 0133
        gbc.setState(0x7dda, 0xe863, 0x6330, 0x39d2, 0x4a59, 0x9963, 0x1, 0x0);
        gbc.writeMem(0x7dda, { 0xd4, 0xbf, 0x3e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe863, gbc.sp());
        EXPECT(0x7ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0135
        gbc.setState(0xbe37, 0xdfd1, 0xd6e0, 0xd88a, 0x7aaf, 0x1009, 0x1, 0x1);
        gbc.writeMem(0xbe37, { 0xd4, 0xef, 0xfc });
        gbc.writeMem(0xdfcf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdfcf, gbc.sp());
        EXPECT(0xfcef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbe37));
        EXPECT(0xef, gbc.readMem(0xbe38));
        EXPECT(0xfc, gbc.readMem(0xbe39));
        EXPECT(0x3a, gbc.readMem(0xdfcf));
        EXPECT(0xbe, gbc.readMem(0xdfd0));
        // D4 0136
        gbc.setState(0x2806, 0x39e8, 0x2fb0, 0x1353, 0xf2e1, 0x964d, 0x0, 0x1);
        gbc.writeMem(0x2806, { 0xd4, 0xff, 0xf8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x39e8, gbc.sp());
        EXPECT(0x2809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0137
        gbc.setState(0x16e6, 0x2e29, 0x5970, 0x8b43, 0x896a, 0x7f9d, 0x0, 0x0);
        gbc.writeMem(0x16e6, { 0xd4, 0x24, 0x96 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2e29, gbc.sp());
        EXPECT(0x16e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0138
        gbc.setState(0xbee8, 0xceb9, 0xdab0, 0xda69, 0xed8e, 0xa90b, 0x1, 0x1);
        gbc.writeMem(0xbee8, { 0xd4, 0x62, 0x3 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xceb9, gbc.sp());
        EXPECT(0xbeeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbee8));
        EXPECT(0x62, gbc.readMem(0xbee9));
        EXPECT(0x3, gbc.readMem(0xbeea));
        // D4 013B
        gbc.setState(0x685d, 0x856, 0x6870, 0xe07f, 0x62e9, 0x6ce0, 0x1, 0x1);
        gbc.writeMem(0x685d, { 0xd4, 0x4e, 0x22 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x856, gbc.sp());
        EXPECT(0x6860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 013C
        gbc.setState(0xd742, 0x832b, 0xabe0, 0x3aa8, 0x5116, 0x9f6f, 0x1, 0x0);
        gbc.writeMem(0x8329, { 0x0, 0x0 });
        gbc.writeMem(0xd742, { 0xd4, 0x36, 0x90 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8329, gbc.sp());
        EXPECT(0x9036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8329));
        EXPECT(0xd7, gbc.readMem(0x832a));
        EXPECT(0xd4, gbc.readMem(0xd742));
        EXPECT(0x36, gbc.readMem(0xd743));
        EXPECT(0x90, gbc.readMem(0xd744));
        // D4 013F
        gbc.setState(0x1cb, 0x8fd1, 0xe680, 0x662d, 0x5e04, 0x121a, 0x1, 0x0);
        gbc.writeMem(0x1cb, { 0xd4, 0x51, 0x9d });
        gbc.writeMem(0x8fcf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8fcf, gbc.sp());
        EXPECT(0x9d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0x8fcf));
        EXPECT(0x1, gbc.readMem(0x8fd0));
        // D4 0140
        gbc.setState(0x4e03, 0x67f2, 0x85b0, 0x5880, 0x2bc5, 0x9a27, 0x0, 0x1);
        gbc.writeMem(0x4e03, { 0xd4, 0x3d, 0x45 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x67f2, gbc.sp());
        EXPECT(0x4e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0142
        gbc.setState(0xee73, 0xe778, 0xfc00, 0xc95, 0x3a6b, 0x88b8, 0x0, 0x1);
        gbc.writeMem(0xe776, { 0x0, 0x0 });
        gbc.writeMem(0xee73, { 0xd4, 0x2b, 0xab });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe776, gbc.sp());
        EXPECT(0xab2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xe776));
        EXPECT(0xee, gbc.readMem(0xe777));
        EXPECT(0xd4, gbc.readMem(0xee73));
        EXPECT(0x2b, gbc.readMem(0xee74));
        EXPECT(0xab, gbc.readMem(0xee75));
        // D4 0143
        gbc.setState(0x6235, 0x9b99, 0xfd70, 0x5fa9, 0x2484, 0x295f, 0x1, 0x1);
        gbc.writeMem(0x6235, { 0xd4, 0x7e, 0x12 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9b99, gbc.sp());
        EXPECT(0x6238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0145
        gbc.setState(0x76c3, 0xdd2b, 0x7530, 0xbbc1, 0xf05b, 0x7802, 0x0, 0x0);
        gbc.writeMem(0x76c3, { 0xd4, 0x6b, 0xd6 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdd2b, gbc.sp());
        EXPECT(0x76c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0146
        gbc.setState(0xbb57, 0x76c9, 0xfc90, 0xbbe5, 0xfcd5, 0x7d08, 0x1, 0x0);
        gbc.writeMem(0xbb57, { 0xd4, 0xd8, 0x9f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x76c9, gbc.sp());
        EXPECT(0xbb5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbb57));
        EXPECT(0xd8, gbc.readMem(0xbb58));
        EXPECT(0x9f, gbc.readMem(0xbb59));
        // D4 0147
        gbc.setState(0x1f15, 0x9b83, 0x280, 0xf414, 0xbbdc, 0x40bb, 0x0, 0x1);
        gbc.writeMem(0x1f15, { 0xd4, 0x58, 0x71 });
        gbc.writeMem(0x9b81, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9b81, gbc.sp());
        EXPECT(0x7158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x9b81));
        EXPECT(0x1f, gbc.readMem(0x9b82));
        // D4 014A
        gbc.setState(0xa8da, 0x4e0c, 0xf5b0, 0xe77d, 0xbe49, 0xfe83, 0x1, 0x1);
        gbc.writeMem(0xa8da, { 0xd4, 0x9f, 0x5c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4e0c, gbc.sp());
        EXPECT(0xa8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa8da));
        EXPECT(0x9f, gbc.readMem(0xa8db));
        EXPECT(0x5c, gbc.readMem(0xa8dc));
        // D4 014B
        gbc.setState(0x81d4, 0x2234, 0x4d70, 0x8b53, 0x21f9, 0xe1b6, 0x0, 0x1);
        gbc.writeMem(0x81d4, { 0xd4, 0x27, 0x83 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2234, gbc.sp());
        EXPECT(0x81d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x81d4));
        EXPECT(0x27, gbc.readMem(0x81d5));
        EXPECT(0x83, gbc.readMem(0x81d6));
        // D4 014C
        gbc.setState(0x9bb2, 0xd234, 0x4f50, 0xacd3, 0x4099, 0xd485, 0x0, 0x0);
        gbc.writeMem(0x9bb2, { 0xd4, 0x1c, 0xe9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd234, gbc.sp());
        EXPECT(0x9bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9bb2));
        EXPECT(0x1c, gbc.readMem(0x9bb3));
        EXPECT(0xe9, gbc.readMem(0x9bb4));
        // D4 014E
        gbc.setState(0xf17, 0x53bd, 0xdff0, 0x5630, 0xd7fd, 0x62ec, 0x0, 0x0);
        gbc.writeMem(0xf17, { 0xd4, 0x99, 0x3d });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x53bd, gbc.sp());
        EXPECT(0xf1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 014F
        gbc.setState(0xc7a6, 0xc3d8, 0x7fe0, 0xf9ee, 0x1811, 0x4363, 0x0, 0x1);
        gbc.writeMem(0xc3d6, { 0x0, 0x0 });
        gbc.writeMem(0xc7a6, { 0xd4, 0x83, 0x2a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc3d6, gbc.sp());
        EXPECT(0x2a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xc3d6));
        EXPECT(0xc7, gbc.readMem(0xc3d7));
        EXPECT(0xd4, gbc.readMem(0xc7a6));
        EXPECT(0x83, gbc.readMem(0xc7a7));
        EXPECT(0x2a, gbc.readMem(0xc7a8));
        // D4 0150
        gbc.setState(0x429a, 0x4c80, 0x23f0, 0xa7d1, 0xeea5, 0x41af, 0x0, 0x1);
        gbc.writeMem(0x429a, { 0xd4, 0xa7, 0xc5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4c80, gbc.sp());
        EXPECT(0x429d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0151
        gbc.setState(0x18e0, 0xd123, 0xdfd0, 0x814a, 0xe601, 0x5903, 0x1, 0x1);
        gbc.writeMem(0x18e0, { 0xd4, 0xca, 0xf4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd123, gbc.sp());
        EXPECT(0x18e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0152
        gbc.setState(0x8be5, 0x26c0, 0xda30, 0x1075, 0xe746, 0xfcc, 0x1, 0x0);
        gbc.writeMem(0x8be5, { 0xd4, 0xec, 0x7a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x26c0, gbc.sp());
        EXPECT(0x8be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8be5));
        EXPECT(0xec, gbc.readMem(0x8be6));
        EXPECT(0x7a, gbc.readMem(0x8be7));
        // D4 0153
        gbc.setState(0x5fb3, 0xec27, 0x6ce0, 0xf349, 0xa88, 0xfd2e, 0x1, 0x0);
        gbc.writeMem(0x5fb3, { 0xd4, 0xf0, 0xa8 });
        gbc.writeMem(0xec25, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xec25, gbc.sp());
        EXPECT(0xa8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xec25));
        EXPECT(0x5f, gbc.readMem(0xec26));
        // D4 0154
        gbc.setState(0x977c, 0x2253, 0x77b0, 0x2ced, 0xf675, 0x4875, 0x1, 0x0);
        gbc.writeMem(0x977c, { 0xd4, 0x91, 0x97 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2253, gbc.sp());
        EXPECT(0x977f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x977c));
        EXPECT(0x91, gbc.readMem(0x977d));
        EXPECT(0x97, gbc.readMem(0x977e));
        // D4 0155
        gbc.setState(0xe72b, 0x1d66, 0xd30, 0x7be3, 0xee96, 0x8edc, 0x0, 0x1);
        gbc.writeMem(0xe72b, { 0xd4, 0xa3, 0xc3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1d66, gbc.sp());
        EXPECT(0xe72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe72b));
        EXPECT(0xa3, gbc.readMem(0xe72c));
        EXPECT(0xc3, gbc.readMem(0xe72d));
        // D4 0156
        gbc.setState(0x7b31, 0xf276, 0xdd20, 0x563b, 0x29cf, 0xff54, 0x0, 0x0);
        gbc.writeMem(0x7b31, { 0xd4, 0xfb, 0xfe });
        gbc.writeMem(0xf274, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf274, gbc.sp());
        EXPECT(0xfefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xf274));
        EXPECT(0x7b, gbc.readMem(0xf275));
        // D4 0158
        gbc.setState(0xb9e8, 0x2e8a, 0x4150, 0xdfa0, 0x6415, 0x3055, 0x0, 0x1);
        gbc.writeMem(0xb9e8, { 0xd4, 0xc0, 0xda });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2e8a, gbc.sp());
        EXPECT(0xb9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb9e8));
        EXPECT(0xc0, gbc.readMem(0xb9e9));
        EXPECT(0xda, gbc.readMem(0xb9ea));
        // D4 015A
        gbc.setState(0x8d76, 0xea1f, 0xc4b0, 0x4b63, 0x944d, 0x8092, 0x1, 0x1);
        gbc.writeMem(0x8d76, { 0xd4, 0x86, 0x68 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xea1f, gbc.sp());
        EXPECT(0x8d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8d76));
        EXPECT(0x86, gbc.readMem(0x8d77));
        EXPECT(0x68, gbc.readMem(0x8d78));
        // D4 015C
        gbc.setState(0x9eaf, 0xb95d, 0x5e90, 0x9f29, 0x9c39, 0x705c, 0x1, 0x1);
        gbc.writeMem(0x9eaf, { 0xd4, 0xd3, 0xee });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb95d, gbc.sp());
        EXPECT(0x9eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9eaf));
        EXPECT(0xd3, gbc.readMem(0x9eb0));
        EXPECT(0xee, gbc.readMem(0x9eb1));
        // D4 015D
        gbc.setState(0xbd1d, 0xf10b, 0x1090, 0xb359, 0x4071, 0xeb10, 0x0, 0x1);
        gbc.writeMem(0xbd1d, { 0xd4, 0xdf, 0x9c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf10b, gbc.sp());
        EXPECT(0xbd20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbd1d));
        EXPECT(0xdf, gbc.readMem(0xbd1e));
        EXPECT(0x9c, gbc.readMem(0xbd1f));
        // D4 015F
        gbc.setState(0x399c, 0xab7f, 0xc500, 0x5b72, 0xaf47, 0x5893, 0x1, 0x0);
        gbc.writeMem(0x399c, { 0xd4, 0x9e, 0x23 });
        gbc.writeMem(0xab7d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xab7d, gbc.sp());
        EXPECT(0x239e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xab7d));
        EXPECT(0x39, gbc.readMem(0xab7e));
        // D4 0160
        gbc.setState(0x6e96, 0xc0bc, 0xfb80, 0x812b, 0xa9c1, 0x44fc, 0x1, 0x1);
        gbc.writeMem(0x6e96, { 0xd4, 0xd2, 0xc8 });
        gbc.writeMem(0xc0ba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc0ba, gbc.sp());
        EXPECT(0xc8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xc0ba));
        EXPECT(0x6e, gbc.readMem(0xc0bb));
        // D4 0161
        gbc.setState(0xefb6, 0x8bee, 0x9130, 0xf179, 0xeec1, 0x2bc0, 0x0, 0x1);
        gbc.writeMem(0xefb6, { 0xd4, 0xda, 0x17 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8bee, gbc.sp());
        EXPECT(0xefb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xefb6));
        EXPECT(0xda, gbc.readMem(0xefb7));
        EXPECT(0x17, gbc.readMem(0xefb8));
        // D4 0162
        gbc.setState(0xd5c5, 0x253, 0x4610, 0xdb43, 0x8b2, 0x6dde, 0x0, 0x1);
        gbc.writeMem(0xd5c5, { 0xd4, 0x5c, 0xdf });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x253, gbc.sp());
        EXPECT(0xd5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd5c5));
        EXPECT(0x5c, gbc.readMem(0xd5c6));
        EXPECT(0xdf, gbc.readMem(0xd5c7));
        // D4 0163
        gbc.setState(0x7228, 0x2b09, 0x7b90, 0x83ed, 0x3727, 0x66a6, 0x0, 0x0);
        gbc.writeMem(0x7228, { 0xd4, 0x8, 0x60 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2b09, gbc.sp());
        EXPECT(0x722b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0164
        gbc.setState(0x1d3d, 0xbeef, 0xd90, 0x5fc4, 0x1bf5, 0xc3dc, 0x0, 0x1);
        gbc.writeMem(0x1d3d, { 0xd4, 0x85, 0xb3 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbeef, gbc.sp());
        EXPECT(0x1d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0166
        gbc.setState(0x10bf, 0x69e3, 0x44d0, 0x987, 0x927c, 0x7e92, 0x1, 0x1);
        gbc.writeMem(0x10bf, { 0xd4, 0xb9, 0xb7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x69e3, gbc.sp());
        EXPECT(0x10c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0167
        gbc.setState(0x8aee, 0xe47c, 0xca00, 0xdc47, 0xbff1, 0xb61, 0x1, 0x0);
        gbc.writeMem(0x8aee, { 0xd4, 0xe3, 0x40 });
        gbc.writeMem(0xe47a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe47a, gbc.sp());
        EXPECT(0x40e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8aee));
        EXPECT(0xe3, gbc.readMem(0x8aef));
        EXPECT(0x40, gbc.readMem(0x8af0));
        EXPECT(0xf1, gbc.readMem(0xe47a));
        EXPECT(0x8a, gbc.readMem(0xe47b));
        // D4 0168
        gbc.setState(0xe21c, 0xa176, 0x47a0, 0xf46b, 0xcbf7, 0xce45, 0x0, 0x1);
        gbc.writeMem(0xa174, { 0x0, 0x0 });
        gbc.writeMem(0xe21c, { 0xd4, 0x4a, 0xdf });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa174, gbc.sp());
        EXPECT(0xdf4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xa174));
        EXPECT(0xe2, gbc.readMem(0xa175));
        EXPECT(0xd4, gbc.readMem(0xe21c));
        EXPECT(0x4a, gbc.readMem(0xe21d));
        EXPECT(0xdf, gbc.readMem(0xe21e));
        // D4 0169
        gbc.setState(0xa19a, 0x75d, 0xfd10, 0x518d, 0x515, 0xf955, 0x0, 0x1);
        gbc.writeMem(0xa19a, { 0xd4, 0x36, 0xa6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x75d, gbc.sp());
        EXPECT(0xa19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa19a));
        EXPECT(0x36, gbc.readMem(0xa19b));
        EXPECT(0xa6, gbc.readMem(0xa19c));
        // D4 016C
        gbc.setState(0x583d, 0x170a, 0xee90, 0xa3a2, 0xb314, 0xb83d, 0x0, 0x0);
        gbc.writeMem(0x583d, { 0xd4, 0xf2, 0xb2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x170a, gbc.sp());
        EXPECT(0x5840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 016D
        gbc.setState(0xb96f, 0xce16, 0x6ee0, 0xf606, 0x8ede, 0x4f64, 0x1, 0x0);
        gbc.writeMem(0xb96f, { 0xd4, 0x3f, 0x19 });
        gbc.writeMem(0xce14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xce14, gbc.sp());
        EXPECT(0x193f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb96f));
        EXPECT(0x3f, gbc.readMem(0xb970));
        EXPECT(0x19, gbc.readMem(0xb971));
        EXPECT(0x72, gbc.readMem(0xce14));
        EXPECT(0xb9, gbc.readMem(0xce15));
        // D4 016E
        gbc.setState(0x4ee1, 0x6db5, 0x3010, 0xb236, 0xfb3d, 0x311a, 0x1, 0x1);
        gbc.writeMem(0x4ee1, { 0xd4, 0x2e, 0xb6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6db5, gbc.sp());
        EXPECT(0x4ee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0172
        gbc.setState(0x68c, 0xaa8, 0x4a10, 0x652a, 0x7ef0, 0x9145, 0x0, 0x0);
        gbc.writeMem(0x68c, { 0xd4, 0x15, 0x50 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xaa8, gbc.sp());
        EXPECT(0x68f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0173
        gbc.setState(0x27d1, 0xbde3, 0x8350, 0x625c, 0x8024, 0x8998, 0x1, 0x1);
        gbc.writeMem(0x27d1, { 0xd4, 0xa3, 0x4b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbde3, gbc.sp());
        EXPECT(0x27d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0174
        gbc.setState(0x5530, 0xc663, 0xc10, 0x83c6, 0x7538, 0xb0f7, 0x0, 0x1);
        gbc.writeMem(0x5530, { 0xd4, 0x3d, 0x2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc663, gbc.sp());
        EXPECT(0x5533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0175
        gbc.setState(0xba9e, 0xfca6, 0x29e0, 0xc387, 0xe72b, 0x100f, 0x0, 0x0);
        gbc.writeMem(0xba9e, { 0xd4, 0xc5, 0xbf });
        gbc.writeMem(0xfca4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfca4, gbc.sp());
        EXPECT(0xbfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xba9e));
        EXPECT(0xc5, gbc.readMem(0xba9f));
        EXPECT(0xbf, gbc.readMem(0xbaa0));
        EXPECT(0xa1, gbc.readMem(0xfca4));
        EXPECT(0xba, gbc.readMem(0xfca5));
        // D4 0176
        gbc.setState(0x7013, 0x1379, 0x2590, 0x72bf, 0x30b9, 0xcb37, 0x0, 0x1);
        gbc.writeMem(0x7013, { 0xd4, 0xfc, 0xc7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1379, gbc.sp());
        EXPECT(0x7016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0178
        gbc.setState(0xb939, 0x73b, 0xdc70, 0x1e0d, 0x857d, 0x4c10, 0x1, 0x1);
        gbc.writeMem(0xb939, { 0xd4, 0xf3, 0xc8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x73b, gbc.sp());
        EXPECT(0xb93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb939));
        EXPECT(0xf3, gbc.readMem(0xb93a));
        EXPECT(0xc8, gbc.readMem(0xb93b));
        // D4 0179
        gbc.setState(0x2534, 0x13ff, 0xfd10, 0xb3a2, 0xe78, 0xbbd3, 0x1, 0x1);
        gbc.writeMem(0x2534, { 0xd4, 0x77, 0xfc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x13ff, gbc.sp());
        EXPECT(0x2537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 017A
        gbc.setState(0x1e03, 0xc8ca, 0xaf60, 0xf293, 0x3a00, 0x44c5, 0x1, 0x1);
        gbc.writeMem(0x1e03, { 0xd4, 0x6f, 0xe1 });
        gbc.writeMem(0xc8c8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc8c8, gbc.sp());
        EXPECT(0xe16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc8c8));
        EXPECT(0x1e, gbc.readMem(0xc8c9));
        // D4 017B
        gbc.setState(0x69b2, 0x8e61, 0xa310, 0x19ba, 0xefc8, 0x6ff7, 0x0, 0x0);
        gbc.writeMem(0x69b2, { 0xd4, 0xaf, 0x5c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8e61, gbc.sp());
        EXPECT(0x69b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 017C
        gbc.setState(0x956a, 0xf7fb, 0x4620, 0x7d3c, 0x9eb, 0x8e3c, 0x0, 0x0);
        gbc.writeMem(0x956a, { 0xd4, 0x9f, 0xc1 });
        gbc.writeMem(0xf7f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf7f9, gbc.sp());
        EXPECT(0xc19f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x956a));
        EXPECT(0x9f, gbc.readMem(0x956b));
        EXPECT(0xc1, gbc.readMem(0x956c));
        EXPECT(0x6d, gbc.readMem(0xf7f9));
        EXPECT(0x95, gbc.readMem(0xf7fa));
        // D4 017E
        gbc.setState(0xe90b, 0xe54f, 0x9870, 0xec18, 0xb651, 0x77ea, 0x1, 0x0);
        gbc.writeMem(0xe90b, { 0xd4, 0x1, 0x77 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe54f, gbc.sp());
        EXPECT(0xe90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe90b));
        EXPECT(0x1, gbc.readMem(0xe90c));
        EXPECT(0x77, gbc.readMem(0xe90d));
        // D4 017F
        gbc.setState(0x88bc, 0xe25e, 0x3970, 0xa719, 0xb971, 0x94ce, 0x0, 0x0);
        gbc.writeMem(0x88bc, { 0xd4, 0x5, 0xd7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe25e, gbc.sp());
        EXPECT(0x88bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x88bc));
        EXPECT(0x5, gbc.readMem(0x88bd));
        EXPECT(0xd7, gbc.readMem(0x88be));
        // D4 0180
        gbc.setState(0xed56, 0xf5a7, 0x6f80, 0x8976, 0x781b, 0x4a1c, 0x0, 0x0);
        gbc.writeMem(0xed56, { 0xd4, 0xd8, 0x79 });
        gbc.writeMem(0xf5a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf5a5, gbc.sp());
        EXPECT(0x79d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xed56));
        EXPECT(0xd8, gbc.readMem(0xed57));
        EXPECT(0x79, gbc.readMem(0xed58));
        EXPECT(0x59, gbc.readMem(0xf5a5));
        EXPECT(0xed, gbc.readMem(0xf5a6));
        // D4 0182
        gbc.setState(0x7664, 0x6907, 0xc930, 0xab4, 0xb4f4, 0x7fdc, 0x0, 0x0);
        gbc.writeMem(0x7664, { 0xd4, 0x65, 0x46 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6907, gbc.sp());
        EXPECT(0x7667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0183
        gbc.setState(0xac79, 0x4542, 0xed0, 0xf111, 0xc949, 0xb07b, 0x1, 0x1);
        gbc.writeMem(0xac79, { 0xd4, 0xad, 0x2b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4542, gbc.sp());
        EXPECT(0xac7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xac79));
        EXPECT(0xad, gbc.readMem(0xac7a));
        EXPECT(0x2b, gbc.readMem(0xac7b));
        // D4 0184
        gbc.setState(0x7a66, 0xb585, 0x6e30, 0x80c3, 0xdaca, 0x5178, 0x0, 0x0);
        gbc.writeMem(0x7a66, { 0xd4, 0x41, 0xa0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb585, gbc.sp());
        EXPECT(0x7a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0187
        gbc.setState(0xb30a, 0xee31, 0x9900, 0x3aaf, 0x9379, 0x8300, 0x0, 0x1);
        gbc.writeMem(0xb30a, { 0xd4, 0xe5, 0xd7 });
        gbc.writeMem(0xee2f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xee2f, gbc.sp());
        EXPECT(0xd7e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb30a));
        EXPECT(0xe5, gbc.readMem(0xb30b));
        EXPECT(0xd7, gbc.readMem(0xb30c));
        EXPECT(0xd, gbc.readMem(0xee2f));
        EXPECT(0xb3, gbc.readMem(0xee30));
        // D4 0188
        gbc.setState(0x3ece, 0x9e30, 0xbd00, 0x849d, 0xab48, 0x12b9, 0x0, 0x1);
        gbc.writeMem(0x3ece, { 0xd4, 0x4, 0xae });
        gbc.writeMem(0x9e2e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9e2e, gbc.sp());
        EXPECT(0xae04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x9e2e));
        EXPECT(0x3e, gbc.readMem(0x9e2f));
        // D4 0189
        gbc.setState(0xbf1d, 0xcf7a, 0xdf80, 0x955b, 0xb204, 0x828, 0x0, 0x1);
        gbc.writeMem(0xbf1d, { 0xd4, 0x63, 0x47 });
        gbc.writeMem(0xcf78, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcf78, gbc.sp());
        EXPECT(0x4763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbf1d));
        EXPECT(0x63, gbc.readMem(0xbf1e));
        EXPECT(0x47, gbc.readMem(0xbf1f));
        EXPECT(0x20, gbc.readMem(0xcf78));
        EXPECT(0xbf, gbc.readMem(0xcf79));
        // D4 018A
        gbc.setState(0x45cf, 0xe9e8, 0xbce0, 0x980a, 0x13f4, 0x2c3b, 0x0, 0x0);
        gbc.writeMem(0x45cf, { 0xd4, 0x1c, 0x27 });
        gbc.writeMem(0xe9e6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe9e6, gbc.sp());
        EXPECT(0x271c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xe9e6));
        EXPECT(0x45, gbc.readMem(0xe9e7));
        // D4 018B
        gbc.setState(0xb7db, 0xc3e1, 0xcc30, 0xe46d, 0xd112, 0xc299, 0x1, 0x0);
        gbc.writeMem(0xb7db, { 0xd4, 0x6f, 0x28 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc3e1, gbc.sp());
        EXPECT(0xb7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb7db));
        EXPECT(0x6f, gbc.readMem(0xb7dc));
        EXPECT(0x28, gbc.readMem(0xb7dd));
        // D4 018C
        gbc.setState(0x9e25, 0x4649, 0xd5f0, 0x1c94, 0xe67f, 0xa145, 0x1, 0x0);
        gbc.writeMem(0x9e25, { 0xd4, 0xaa, 0x3b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4649, gbc.sp());
        EXPECT(0x9e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9e25));
        EXPECT(0xaa, gbc.readMem(0x9e26));
        EXPECT(0x3b, gbc.readMem(0x9e27));
        // D4 018D
        gbc.setState(0x6594, 0xeb54, 0xfbf0, 0xb4af, 0x702b, 0xe7a, 0x0, 0x0);
        gbc.writeMem(0x6594, { 0xd4, 0x33, 0x1a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xeb54, gbc.sp());
        EXPECT(0x6597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 018E
        gbc.setState(0xc71e, 0xeb9d, 0x4120, 0x14b7, 0x41bd, 0xa155, 0x1, 0x0);
        gbc.writeMem(0xc71e, { 0xd4, 0x0, 0xe9 });
        gbc.writeMem(0xeb9b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xeb9b, gbc.sp());
        EXPECT(0xe900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc71e));
        EXPECT(0x0, gbc.readMem(0xc71f));
        EXPECT(0xe9, gbc.readMem(0xc720));
        EXPECT(0x21, gbc.readMem(0xeb9b));
        EXPECT(0xc7, gbc.readMem(0xeb9c));
        // D4 0190
        gbc.setState(0xb573, 0xe2f9, 0x7a80, 0x53f, 0x7525, 0xabdf, 0x0, 0x0);
        gbc.writeMem(0xb573, { 0xd4, 0x94, 0xb });
        gbc.writeMem(0xe2f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe2f7, gbc.sp());
        EXPECT(0xb94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb573));
        EXPECT(0x94, gbc.readMem(0xb574));
        EXPECT(0xb, gbc.readMem(0xb575));
        EXPECT(0x76, gbc.readMem(0xe2f7));
        EXPECT(0xb5, gbc.readMem(0xe2f8));
        // D4 0192
        gbc.setState(0x4b8d, 0x2638, 0xf930, 0xdf4d, 0xe91a, 0x50f2, 0x0, 0x1);
        gbc.writeMem(0x4b8d, { 0xd4, 0x41, 0x39 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2638, gbc.sp());
        EXPECT(0x4b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0193
        gbc.setState(0xd72b, 0xb1ee, 0xf720, 0xbf2b, 0x46a0, 0x5eab, 0x0, 0x1);
        gbc.writeMem(0xb1ec, { 0x0, 0x0 });
        gbc.writeMem(0xd72b, { 0xd4, 0xbf, 0xab });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb1ec, gbc.sp());
        EXPECT(0xabbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb1ec));
        EXPECT(0xd7, gbc.readMem(0xb1ed));
        EXPECT(0xd4, gbc.readMem(0xd72b));
        EXPECT(0xbf, gbc.readMem(0xd72c));
        EXPECT(0xab, gbc.readMem(0xd72d));
        // D4 0194
        gbc.setState(0x23e1, 0x4f33, 0x4fd0, 0x55fc, 0x9f3f, 0x5cf3, 0x0, 0x0);
        gbc.writeMem(0x23e1, { 0xd4, 0x78, 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4f33, gbc.sp());
        EXPECT(0x23e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0195
        gbc.setState(0x9f31, 0x8fee, 0x5c00, 0x5d05, 0x9359, 0x1374, 0x1, 0x1);
        gbc.writeMem(0x8fec, { 0x0, 0x0 });
        gbc.writeMem(0x9f31, { 0xd4, 0x13, 0xcd });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8fec, gbc.sp());
        EXPECT(0xcd13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8fec));
        EXPECT(0x9f, gbc.readMem(0x8fed));
        EXPECT(0xd4, gbc.readMem(0x9f31));
        EXPECT(0x13, gbc.readMem(0x9f32));
        EXPECT(0xcd, gbc.readMem(0x9f33));
        // D4 0198
        gbc.setState(0x3e05, 0xcbd7, 0x410, 0xcebf, 0x9077, 0x8c58, 0x0, 0x0);
        gbc.writeMem(0x3e05, { 0xd4, 0x78, 0xf8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcbd7, gbc.sp());
        EXPECT(0x3e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0199
        gbc.setState(0x69d1, 0xf287, 0x9b80, 0x3acb, 0xa7fc, 0x9af7, 0x1, 0x0);
        gbc.writeMem(0x69d1, { 0xd4, 0x9, 0x5d });
        gbc.writeMem(0xf285, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf285, gbc.sp());
        EXPECT(0x5d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xf285));
        EXPECT(0x69, gbc.readMem(0xf286));
        // D4 019A
        gbc.setState(0xd9b7, 0xaaad, 0xe990, 0x4640, 0xf100, 0x2b35, 0x1, 0x1);
        gbc.writeMem(0xd9b7, { 0xd4, 0x37, 0x2d });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaaad, gbc.sp());
        EXPECT(0xd9ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd9b7));
        EXPECT(0x37, gbc.readMem(0xd9b8));
        EXPECT(0x2d, gbc.readMem(0xd9b9));
        // D4 019C
        gbc.setState(0x5c04, 0x5900, 0xe50, 0x3fcb, 0xcf71, 0xc098, 0x1, 0x0);
        gbc.writeMem(0x5c04, { 0xd4, 0x18, 0xe2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5900, gbc.sp());
        EXPECT(0x5c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 019D
        gbc.setState(0x7a4a, 0x88ed, 0xcf00, 0x9e9b, 0xd11, 0x2d0f, 0x0, 0x1);
        gbc.writeMem(0x7a4a, { 0xd4, 0xd3, 0xf4 });
        gbc.writeMem(0x88eb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x88eb, gbc.sp());
        EXPECT(0xf4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x88eb));
        EXPECT(0x7a, gbc.readMem(0x88ec));
        // D4 01A0
        gbc.setState(0x6712, 0x5eca, 0xec50, 0xd2f9, 0xfef0, 0xc68a, 0x0, 0x0);
        gbc.writeMem(0x6712, { 0xd4, 0xac, 0x7f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5eca, gbc.sp());
        EXPECT(0x6715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01A1
        gbc.setState(0x1903, 0xc34a, 0x6330, 0x244a, 0xb161, 0xf865, 0x1, 0x1);
        gbc.writeMem(0x1903, { 0xd4, 0x82, 0x22 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc34a, gbc.sp());
        EXPECT(0x1906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01A2
        gbc.setState(0xe45a, 0xc32f, 0x6d30, 0xf74f, 0x599, 0xb5b0, 0x1, 0x0);
        gbc.writeMem(0xe45a, { 0xd4, 0x73, 0x7d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc32f, gbc.sp());
        EXPECT(0xe45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe45a));
        EXPECT(0x73, gbc.readMem(0xe45b));
        EXPECT(0x7d, gbc.readMem(0xe45c));
        // D4 01A3
        gbc.setState(0x258f, 0xa30d, 0x2810, 0x3842, 0x202b, 0x3772, 0x1, 0x0);
        gbc.writeMem(0x258f, { 0xd4, 0xb3, 0x79 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa30d, gbc.sp());
        EXPECT(0x2592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01A4
        gbc.setState(0x2866, 0xd55d, 0x9120, 0xa6a3, 0xffe3, 0x610d, 0x1, 0x1);
        gbc.writeMem(0x2866, { 0xd4, 0x44, 0xe8 });
        gbc.writeMem(0xd55b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd55b, gbc.sp());
        EXPECT(0xe844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd55b));
        EXPECT(0x28, gbc.readMem(0xd55c));
        // D4 01A6
        gbc.setState(0xb2fd, 0xa628, 0x41b0, 0x53be, 0x8f5, 0xa4a6, 0x1, 0x0);
        gbc.writeMem(0xb2fd, { 0xd4, 0xab, 0xce });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa628, gbc.sp());
        EXPECT(0xb300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb2fd));
        EXPECT(0xab, gbc.readMem(0xb2fe));
        EXPECT(0xce, gbc.readMem(0xb2ff));
        // D4 01A7
        gbc.setState(0x5378, 0xc5be, 0xb700, 0xbe20, 0xfc1f, 0xf6b4, 0x0, 0x1);
        gbc.writeMem(0x5378, { 0xd4, 0x5, 0xad });
        gbc.writeMem(0xc5bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc5bc, gbc.sp());
        EXPECT(0xad05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc5bc));
        EXPECT(0x53, gbc.readMem(0xc5bd));
        // D4 01A8
        gbc.setState(0xa885, 0x43b4, 0x84b0, 0x3e2b, 0x1717, 0x4029, 0x1, 0x0);
        gbc.writeMem(0xa885, { 0xd4, 0x4c, 0xa });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x43b4, gbc.sp());
        EXPECT(0xa888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa885));
        EXPECT(0x4c, gbc.readMem(0xa886));
        EXPECT(0xa, gbc.readMem(0xa887));
        // D4 01A9
        gbc.setState(0x1360, 0xe3f8, 0x7260, 0x32f, 0xe5a7, 0xa3c9, 0x0, 0x1);
        gbc.writeMem(0x1360, { 0xd4, 0x53, 0xb });
        gbc.writeMem(0xe3f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe3f6, gbc.sp());
        EXPECT(0xb53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xe3f6));
        EXPECT(0x13, gbc.readMem(0xe3f7));
        // D4 01AA
        gbc.setState(0xb136, 0x84d3, 0x47c0, 0x83bd, 0xb89a, 0xa6da, 0x1, 0x1);
        gbc.writeMem(0x84d1, { 0x0, 0x0 });
        gbc.writeMem(0xb136, { 0xd4, 0x45, 0x2f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x84d1, gbc.sp());
        EXPECT(0x2f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x84d1));
        EXPECT(0xb1, gbc.readMem(0x84d2));
        EXPECT(0xd4, gbc.readMem(0xb136));
        EXPECT(0x45, gbc.readMem(0xb137));
        EXPECT(0x2f, gbc.readMem(0xb138));
        // D4 01AB
        gbc.setState(0x973c, 0x3792, 0xc810, 0x8f95, 0x736, 0x339f, 0x0, 0x0);
        gbc.writeMem(0x973c, { 0xd4, 0x8b, 0xe0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3792, gbc.sp());
        EXPECT(0x973f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x973c));
        EXPECT(0x8b, gbc.readMem(0x973d));
        EXPECT(0xe0, gbc.readMem(0x973e));
        // D4 01AC
        gbc.setState(0x84aa, 0x969b, 0xaf20, 0x708d, 0xf873, 0x77fb, 0x0, 0x0);
        gbc.writeMem(0x84aa, { 0xd4, 0x46, 0x48 });
        gbc.writeMem(0x9699, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9699, gbc.sp());
        EXPECT(0x4846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x84aa));
        EXPECT(0x46, gbc.readMem(0x84ab));
        EXPECT(0x48, gbc.readMem(0x84ac));
        EXPECT(0xad, gbc.readMem(0x9699));
        EXPECT(0x84, gbc.readMem(0x969a));
        // D4 01AE
        gbc.setState(0xaf91, 0xa6a9, 0x65d0, 0xbcd3, 0xfc41, 0xf503, 0x1, 0x1);
        gbc.writeMem(0xaf91, { 0xd4, 0xad, 0x51 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa6a9, gbc.sp());
        EXPECT(0xaf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xaf91));
        EXPECT(0xad, gbc.readMem(0xaf92));
        EXPECT(0x51, gbc.readMem(0xaf93));
        // D4 01AF
        gbc.setState(0x729, 0x9596, 0x8bf0, 0xaf00, 0xf1ac, 0x51c2, 0x0, 0x0);
        gbc.writeMem(0x729, { 0xd4, 0x54, 0x49 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9596, gbc.sp());
        EXPECT(0x72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01B1
        gbc.setState(0x22d2, 0xb0dc, 0xe240, 0x6b80, 0x5d70, 0xd74f, 0x1, 0x0);
        gbc.writeMem(0x22d2, { 0xd4, 0x96, 0xaa });
        gbc.writeMem(0xb0da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb0da, gbc.sp());
        EXPECT(0xaa96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb0da));
        EXPECT(0x22, gbc.readMem(0xb0db));
        // D4 01B5
        gbc.setState(0xaabb, 0xf532, 0x2750, 0xcaae, 0xddfd, 0x6809, 0x1, 0x1);
        gbc.writeMem(0xaabb, { 0xd4, 0xd0, 0x74 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf532, gbc.sp());
        EXPECT(0xaabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xaabb));
        EXPECT(0xd0, gbc.readMem(0xaabc));
        EXPECT(0x74, gbc.readMem(0xaabd));
        // D4 01B6
        gbc.setState(0x3423, 0xa5bf, 0x87b0, 0xcd9, 0x594d, 0xb81d, 0x1, 0x0);
        gbc.writeMem(0x3423, { 0xd4, 0xf2, 0x77 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa5bf, gbc.sp());
        EXPECT(0x3426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01B7
        gbc.setState(0x5014, 0x15d2, 0xa3f0, 0x1bef, 0xf7b4, 0x4e9a, 0x0, 0x1);
        gbc.writeMem(0x5014, { 0xd4, 0xbf, 0x3a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x15d2, gbc.sp());
        EXPECT(0x5017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01B9
        gbc.setState(0x6c6, 0x16b5, 0x96d0, 0xe429, 0x5460, 0xf0ec, 0x1, 0x1);
        gbc.writeMem(0x6c6, { 0xd4, 0x73, 0x9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x16b5, gbc.sp());
        EXPECT(0x6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01BA
        gbc.setState(0x45c2, 0x4ec2, 0xdd0, 0xf77c, 0x799e, 0xd476, 0x1, 0x0);
        gbc.writeMem(0x45c2, { 0xd4, 0x19, 0x62 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4ec2, gbc.sp());
        EXPECT(0x45c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01BB
        gbc.setState(0xc962, 0xe8ce, 0x1770, 0xcc48, 0x16bc, 0xc75c, 0x0, 0x0);
        gbc.writeMem(0xc962, { 0xd4, 0x8a, 0x15 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe8ce, gbc.sp());
        EXPECT(0xc965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc962));
        EXPECT(0x8a, gbc.readMem(0xc963));
        EXPECT(0x15, gbc.readMem(0xc964));
        // D4 01BC
        gbc.setState(0x7c73, 0x4555, 0x3330, 0x7361, 0xdc47, 0xbe22, 0x0, 0x0);
        gbc.writeMem(0x7c73, { 0xd4, 0xee, 0x30 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4555, gbc.sp());
        EXPECT(0x7c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01BD
        gbc.setState(0xd9b1, 0x8ea3, 0x70c0, 0xea76, 0xbeb5, 0x4034, 0x1, 0x1);
        gbc.writeMem(0x8ea1, { 0x0, 0x0 });
        gbc.writeMem(0xd9b1, { 0xd4, 0x41, 0xee });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8ea1, gbc.sp());
        EXPECT(0xee41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x8ea1));
        EXPECT(0xd9, gbc.readMem(0x8ea2));
        EXPECT(0xd4, gbc.readMem(0xd9b1));
        EXPECT(0x41, gbc.readMem(0xd9b2));
        EXPECT(0xee, gbc.readMem(0xd9b3));
        // D4 01C0
        gbc.setState(0x4d44, 0xedf5, 0x3390, 0x4de2, 0x6950, 0x8888, 0x0, 0x0);
        gbc.writeMem(0x4d44, { 0xd4, 0x1e, 0x36 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xedf5, gbc.sp());
        EXPECT(0x4d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01C1
        gbc.setState(0x2e6e, 0x1f20, 0xcb70, 0x8088, 0x839f, 0x6c99, 0x1, 0x0);
        gbc.writeMem(0x2e6e, { 0xd4, 0xe, 0x6d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1f20, gbc.sp());
        EXPECT(0x2e71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01C2
        gbc.setState(0xaec6, 0xd85a, 0x6030, 0x20d0, 0xc5c2, 0x5266, 0x0, 0x1);
        gbc.writeMem(0xaec6, { 0xd4, 0xba, 0x61 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd85a, gbc.sp());
        EXPECT(0xaec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xaec6));
        EXPECT(0xba, gbc.readMem(0xaec7));
        EXPECT(0x61, gbc.readMem(0xaec8));
        // D4 01C3
        gbc.setState(0x7d3, 0x34d6, 0xabf0, 0x1013, 0xa21d, 0x2453, 0x0, 0x1);
        gbc.writeMem(0x7d3, { 0xd4, 0x9e, 0xf7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x34d6, gbc.sp());
        EXPECT(0x7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01C5
        gbc.setState(0x28c9, 0xb2de, 0x2810, 0xc9a7, 0x852, 0x1035, 0x0, 0x0);
        gbc.writeMem(0x28c9, { 0xd4, 0xe4, 0xf0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb2de, gbc.sp());
        EXPECT(0x28cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01C6
        gbc.setState(0x6a9c, 0x3d11, 0x9710, 0x1140, 0x778f, 0x76c, 0x1, 0x1);
        gbc.writeMem(0x6a9c, { 0xd4, 0xd, 0xf });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3d11, gbc.sp());
        EXPECT(0x6a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01C8
        gbc.setState(0xd1c9, 0x1a61, 0xf590, 0x750a, 0x859f, 0x2cdf, 0x1, 0x0);
        gbc.writeMem(0xd1c9, { 0xd4, 0x38, 0x89 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1a61, gbc.sp());
        EXPECT(0xd1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd1c9));
        EXPECT(0x38, gbc.readMem(0xd1ca));
        EXPECT(0x89, gbc.readMem(0xd1cb));
        // D4 01CB
        gbc.setState(0x9062, 0x8b33, 0x49c0, 0xb5a8, 0x341, 0x34a2, 0x0, 0x1);
        gbc.writeMem(0x8b31, { 0x0, 0x0 });
        gbc.writeMem(0x9062, { 0xd4, 0x41, 0xd4 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8b31, gbc.sp());
        EXPECT(0xd441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8b31));
        EXPECT(0x90, gbc.readMem(0x8b32));
        EXPECT(0xd4, gbc.readMem(0x9062));
        EXPECT(0x41, gbc.readMem(0x9063));
        EXPECT(0xd4, gbc.readMem(0x9064));
        // D4 01CD
        gbc.setState(0x7142, 0x561f, 0x7250, 0x969d, 0x527b, 0x9f9a, 0x0, 0x0);
        gbc.writeMem(0x7142, { 0xd4, 0xed, 0x2c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x561f, gbc.sp());
        EXPECT(0x7145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01CE
        gbc.setState(0x60ff, 0x7bec, 0x5fb0, 0x65ba, 0xc599, 0x3c2c, 0x0, 0x0);
        gbc.writeMem(0x60ff, { 0xd4, 0x2a, 0x84 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7bec, gbc.sp());
        EXPECT(0x6102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01D0
        gbc.setState(0x8ed7, 0x2d6f, 0x7e90, 0x6f70, 0x5e7c, 0x40c5, 0x0, 0x1);
        gbc.writeMem(0x8ed7, { 0xd4, 0xf, 0x35 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2d6f, gbc.sp());
        EXPECT(0x8eda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8ed7));
        EXPECT(0xf, gbc.readMem(0x8ed8));
        EXPECT(0x35, gbc.readMem(0x8ed9));
        // D4 01D1
        gbc.setState(0x664e, 0xe701, 0xeee0, 0x458d, 0xc002, 0x78e2, 0x0, 0x1);
        gbc.writeMem(0x664e, { 0xd4, 0xb9, 0x8d });
        gbc.writeMem(0xe6ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe6ff, gbc.sp());
        EXPECT(0x8db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xe6ff));
        EXPECT(0x66, gbc.readMem(0xe700));
        // D4 01D5
        gbc.setState(0x480c, 0xbaa1, 0xfaa0, 0xe3b, 0xae69, 0xe953, 0x1, 0x1);
        gbc.writeMem(0x480c, { 0xd4, 0x49, 0xe1 });
        gbc.writeMem(0xba9f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xba9f, gbc.sp());
        EXPECT(0xe149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xba9f));
        EXPECT(0x48, gbc.readMem(0xbaa0));
        // D4 01D6
        gbc.setState(0x2afb, 0xb4c1, 0xcd30, 0x5a3c, 0x707d, 0xd161, 0x0, 0x0);
        gbc.writeMem(0x2afb, { 0xd4, 0x3b, 0x3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb4c1, gbc.sp());
        EXPECT(0x2afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01D7
        gbc.setState(0x6d8b, 0xda4c, 0x3d10, 0x985d, 0x8544, 0xcce3, 0x0, 0x1);
        gbc.writeMem(0x6d8b, { 0xd4, 0x21, 0x8b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xda4c, gbc.sp());
        EXPECT(0x6d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01D8
        gbc.setState(0x3617, 0x53f9, 0x2350, 0x4d1d, 0x45aa, 0x4124, 0x0, 0x0);
        gbc.writeMem(0x3617, { 0xd4, 0xe1, 0xfc });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x53f9, gbc.sp());
        EXPECT(0x361a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01DB
        gbc.setState(0x24ec, 0x93bc, 0x50c0, 0x9cc1, 0x3004, 0x3541, 0x0, 0x0);
        gbc.writeMem(0x24ec, { 0xd4, 0x28, 0xb1 });
        gbc.writeMem(0x93ba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x93ba, gbc.sp());
        EXPECT(0xb128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x93ba));
        EXPECT(0x24, gbc.readMem(0x93bb));
        // D4 01DC
        gbc.setState(0x9ff3, 0x8a21, 0x7260, 0x934, 0x200f, 0xc4b9, 0x0, 0x1);
        gbc.writeMem(0x8a1f, { 0x0, 0x0 });
        gbc.writeMem(0x9ff3, { 0xd4, 0x1a, 0x2c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8a1f, gbc.sp());
        EXPECT(0x2c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x8a1f));
        EXPECT(0x9f, gbc.readMem(0x8a20));
        EXPECT(0xd4, gbc.readMem(0x9ff3));
        EXPECT(0x1a, gbc.readMem(0x9ff4));
        EXPECT(0x2c, gbc.readMem(0x9ff5));
        // D4 01DE
        gbc.setState(0x5449, 0xcbd0, 0xa540, 0x956c, 0x43c3, 0xb2de, 0x0, 0x0);
        gbc.writeMem(0x5449, { 0xd4, 0x99, 0x7 });
        gbc.writeMem(0xcbce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcbce, gbc.sp());
        EXPECT(0x799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xcbce));
        EXPECT(0x54, gbc.readMem(0xcbcf));
        // D4 01DF
        gbc.setState(0x64ae, 0x1c15, 0x510, 0xc4b2, 0x5e22, 0x640d, 0x1, 0x0);
        gbc.writeMem(0x64ae, { 0xd4, 0xde, 0x5a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1c15, gbc.sp());
        EXPECT(0x64b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01E0
        gbc.setState(0x6d32, 0x9103, 0x1ad0, 0x4554, 0xb5b5, 0x9c1a, 0x0, 0x0);
        gbc.writeMem(0x6d32, { 0xd4, 0xb1, 0xa9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9103, gbc.sp());
        EXPECT(0x6d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01E1
        gbc.setState(0x1d90, 0xe7a9, 0xda0, 0x17b3, 0x6dbb, 0xeea1, 0x0, 0x1);
        gbc.writeMem(0x1d90, { 0xd4, 0xa6, 0xb5 });
        gbc.writeMem(0xe7a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe7a7, gbc.sp());
        EXPECT(0xb5a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xe7a7));
        EXPECT(0x1d, gbc.readMem(0xe7a8));
        // D4 01E2
        gbc.setState(0xb759, 0xe2b2, 0xb960, 0xf77c, 0x231d, 0x4d99, 0x1, 0x0);
        gbc.writeMem(0xb759, { 0xd4, 0xd2, 0x17 });
        gbc.writeMem(0xe2b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe2b0, gbc.sp());
        EXPECT(0x17d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb759));
        EXPECT(0xd2, gbc.readMem(0xb75a));
        EXPECT(0x17, gbc.readMem(0xb75b));
        EXPECT(0x5c, gbc.readMem(0xe2b0));
        EXPECT(0xb7, gbc.readMem(0xe2b1));
        // D4 01E4
        gbc.setState(0x5712, 0xb390, 0x53a0, 0x59ef, 0xf4ad, 0xabff, 0x0, 0x0);
        gbc.writeMem(0x5712, { 0xd4, 0xf3, 0x96 });
        gbc.writeMem(0xb38e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb38e, gbc.sp());
        EXPECT(0x96f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb38e));
        EXPECT(0x57, gbc.readMem(0xb38f));
        // D4 01E5
        gbc.setState(0xb504, 0xe967, 0x3f00, 0xfa87, 0x9865, 0x1381, 0x0, 0x0);
        gbc.writeMem(0xb504, { 0xd4, 0xb7, 0x3b });
        gbc.writeMem(0xe965, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe965, gbc.sp());
        EXPECT(0x3bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb504));
        EXPECT(0xb7, gbc.readMem(0xb505));
        EXPECT(0x3b, gbc.readMem(0xb506));
        EXPECT(0x7, gbc.readMem(0xe965));
        EXPECT(0xb5, gbc.readMem(0xe966));
        // D4 01E7
        gbc.setState(0xc76f, 0x9467, 0xe200, 0xfbe7, 0x9e5c, 0xadb6, 0x0, 0x1);
        gbc.writeMem(0x9465, { 0x0, 0x0 });
        gbc.writeMem(0xc76f, { 0xd4, 0xb, 0x6a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9465, gbc.sp());
        EXPECT(0x6a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9465));
        EXPECT(0xc7, gbc.readMem(0x9466));
        EXPECT(0xd4, gbc.readMem(0xc76f));
        EXPECT(0xb, gbc.readMem(0xc770));
        EXPECT(0x6a, gbc.readMem(0xc771));
        // D4 01E9
        gbc.setState(0x93ee, 0x784b, 0x8d0, 0x560c, 0x30e9, 0x3a65, 0x1, 0x1);
        gbc.writeMem(0x93ee, { 0xd4, 0x46, 0x45 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x784b, gbc.sp());
        EXPECT(0x93f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x93ee));
        EXPECT(0x46, gbc.readMem(0x93ef));
        EXPECT(0x45, gbc.readMem(0x93f0));
        // D4 01EA
        gbc.setState(0x10ac, 0x9873, 0xb330, 0xe33, 0xb43, 0x98d4, 0x1, 0x0);
        gbc.writeMem(0x10ac, { 0xd4, 0xa6, 0x58 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9873, gbc.sp());
        EXPECT(0x10af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01EB
        gbc.setState(0x5730, 0x890b, 0xefc0, 0x66a3, 0xf190, 0x531, 0x1, 0x0);
        gbc.writeMem(0x5730, { 0xd4, 0xe6, 0xe3 });
        gbc.writeMem(0x8909, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8909, gbc.sp());
        EXPECT(0xe3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8909));
        EXPECT(0x57, gbc.readMem(0x890a));
        // D4 01EC
        gbc.setState(0x2438, 0xc8bb, 0x5e80, 0xf4b4, 0x9957, 0x1ad4, 0x0, 0x1);
        gbc.writeMem(0x2438, { 0xd4, 0x41, 0xb6 });
        gbc.writeMem(0xc8b9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc8b9, gbc.sp());
        EXPECT(0xb641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc8b9));
        EXPECT(0x24, gbc.readMem(0xc8ba));
        // D4 01ED
        gbc.setState(0x4bdf, 0x6a3, 0x8890, 0xe2c2, 0xa0a0, 0x344, 0x0, 0x1);
        gbc.writeMem(0x4bdf, { 0xd4, 0x70, 0x19 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6a3, gbc.sp());
        EXPECT(0x4be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01EE
        gbc.setState(0x9c22, 0xc6b7, 0x18f0, 0x6074, 0xb305, 0xbf25, 0x1, 0x1);
        gbc.writeMem(0x9c22, { 0xd4, 0xd6, 0x6a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc6b7, gbc.sp());
        EXPECT(0x9c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9c22));
        EXPECT(0xd6, gbc.readMem(0x9c23));
        EXPECT(0x6a, gbc.readMem(0x9c24));
        // D4 01EF
        gbc.setState(0x2e7d, 0x87b7, 0x40f0, 0xa611, 0x9647, 0xe77e, 0x0, 0x1);
        gbc.writeMem(0x2e7d, { 0xd4, 0xa3, 0x60 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x87b7, gbc.sp());
        EXPECT(0x2e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01F0
        gbc.setState(0x35d9, 0xd72c, 0xe510, 0x349b, 0x3619, 0x7304, 0x0, 0x0);
        gbc.writeMem(0x35d9, { 0xd4, 0x7a, 0x58 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd72c, gbc.sp());
        EXPECT(0x35dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01F1
        gbc.setState(0x3093, 0x86bd, 0xcd60, 0x6e68, 0x3ff5, 0x5b60, 0x0, 0x0);
        gbc.writeMem(0x3093, { 0xd4, 0x48, 0x9a });
        gbc.writeMem(0x86bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x86bb, gbc.sp());
        EXPECT(0x9a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x86bb));
        EXPECT(0x30, gbc.readMem(0x86bc));
        // D4 01F2
        gbc.setState(0xceca, 0x92a4, 0x8320, 0x4c0f, 0x2893, 0x8907, 0x1, 0x1);
        gbc.writeMem(0x92a2, { 0x0, 0x0 });
        gbc.writeMem(0xceca, { 0xd4, 0x69, 0xc4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x92a2, gbc.sp());
        EXPECT(0xc469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x92a2));
        EXPECT(0xce, gbc.readMem(0x92a3));
        EXPECT(0xd4, gbc.readMem(0xceca));
        EXPECT(0x69, gbc.readMem(0xcecb));
        EXPECT(0xc4, gbc.readMem(0xcecc));
        // D4 01F3
        gbc.setState(0xe7f6, 0x90c1, 0xde70, 0xc42e, 0xc75f, 0x885a, 0x1, 0x0);
        gbc.writeMem(0xe7f6, { 0xd4, 0x4b, 0x75 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x90c1, gbc.sp());
        EXPECT(0xe7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe7f6));
        EXPECT(0x4b, gbc.readMem(0xe7f7));
        EXPECT(0x75, gbc.readMem(0xe7f8));
        // D4 01F4
        gbc.setState(0x9b2b, 0x11a0, 0x490, 0x33f7, 0xe868, 0xeb04, 0x0, 0x0);
        gbc.writeMem(0x9b2b, { 0xd4, 0x9a, 0x3a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x11a0, gbc.sp());
        EXPECT(0x9b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9b2b));
        EXPECT(0x9a, gbc.readMem(0x9b2c));
        EXPECT(0x3a, gbc.readMem(0x9b2d));
        // D4 01F6
        gbc.setState(0xb7c8, 0xbc3, 0x56b0, 0x58a3, 0xc286, 0xec4a, 0x0, 0x1);
        gbc.writeMem(0xb7c8, { 0xd4, 0x74, 0xe0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbc3, gbc.sp());
        EXPECT(0xb7cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb7c8));
        EXPECT(0x74, gbc.readMem(0xb7c9));
        EXPECT(0xe0, gbc.readMem(0xb7ca));
        // D4 01F7
        gbc.setState(0x3075, 0xad2c, 0x9e70, 0xb3a1, 0x2ede, 0x7d7a, 0x1, 0x0);
        gbc.writeMem(0x3075, { 0xd4, 0x1b, 0x66 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xad2c, gbc.sp());
        EXPECT(0x3078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01F9
        gbc.setState(0xa916, 0x66af, 0x4e10, 0xc00b, 0x79c0, 0x76ce, 0x1, 0x1);
        gbc.writeMem(0xa916, { 0xd4, 0x86, 0x86 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x66af, gbc.sp());
        EXPECT(0xa919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa916));
        EXPECT(0x86, gbc.readMem(0xa917));
        EXPECT(0x86, gbc.readMem(0xa918));
        // D4 01FA
        gbc.setState(0x1b24, 0x1a1e, 0x1d50, 0xae0d, 0x8f3f, 0x428b, 0x0, 0x0);
        gbc.writeMem(0x1b24, { 0xd4, 0x87, 0xd4 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1a1e, gbc.sp());
        EXPECT(0x1b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 01FB
        gbc.setState(0x5582, 0x8e67, 0x7e00, 0x743c, 0x9754, 0x1846, 0x1, 0x0);
        gbc.writeMem(0x5582, { 0xd4, 0xea, 0x47 });
        gbc.writeMem(0x8e65, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8e65, gbc.sp());
        EXPECT(0x47ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8e65));
        EXPECT(0x55, gbc.readMem(0x8e66));
        // D4 01FD
        gbc.setState(0xd25b, 0xe6e5, 0x120, 0x6570, 0xcfba, 0xcff7, 0x0, 0x1);
        gbc.writeMem(0xd25b, { 0xd4, 0xfa, 0xce });
        gbc.writeMem(0xe6e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe6e3, gbc.sp());
        EXPECT(0xcefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd25b));
        EXPECT(0xfa, gbc.readMem(0xd25c));
        EXPECT(0xce, gbc.readMem(0xd25d));
        EXPECT(0x5e, gbc.readMem(0xe6e3));
        EXPECT(0xd2, gbc.readMem(0xe6e4));
        // D4 0200
        gbc.setState(0xeb0b, 0x6b7b, 0xba90, 0xb36f, 0xe74d, 0xbf67, 0x1, 0x0);
        gbc.writeMem(0xeb0b, { 0xd4, 0x10, 0x1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6b7b, gbc.sp());
        EXPECT(0xeb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xeb0b));
        EXPECT(0x10, gbc.readMem(0xeb0c));
        EXPECT(0x1, gbc.readMem(0xeb0d));
        // D4 0201
        gbc.setState(0x9529, 0xef10, 0xf490, 0xbb07, 0x4544, 0xbd20, 0x0, 0x0);
        gbc.writeMem(0x9529, { 0xd4, 0x3a, 0x7f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xef10, gbc.sp());
        EXPECT(0x952c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9529));
        EXPECT(0x3a, gbc.readMem(0x952a));
        EXPECT(0x7f, gbc.readMem(0x952b));
        // D4 0203
        gbc.setState(0x1245, 0x81b4, 0x8d90, 0x2422, 0x497c, 0x3ef7, 0x0, 0x1);
        gbc.writeMem(0x1245, { 0xd4, 0x2e, 0xc1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x81b4, gbc.sp());
        EXPECT(0x1248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0204
        gbc.setState(0x79bd, 0x603e, 0x38b0, 0xc40, 0xec18, 0xa6a, 0x0, 0x1);
        gbc.writeMem(0x79bd, { 0xd4, 0x29, 0x9c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x603e, gbc.sp());
        EXPECT(0x79c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0205
        gbc.setState(0xbd5a, 0x93a2, 0xe4c0, 0x3324, 0x2098, 0x3dac, 0x1, 0x0);
        gbc.writeMem(0x93a0, { 0x0, 0x0 });
        gbc.writeMem(0xbd5a, { 0xd4, 0x61, 0x82 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x93a0, gbc.sp());
        EXPECT(0x8261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x93a0));
        EXPECT(0xbd, gbc.readMem(0x93a1));
        EXPECT(0xd4, gbc.readMem(0xbd5a));
        EXPECT(0x61, gbc.readMem(0xbd5b));
        EXPECT(0x82, gbc.readMem(0xbd5c));
        // D4 0207
        gbc.setState(0x4459, 0xa1e7, 0xac20, 0x1aa9, 0x635d, 0xfefa, 0x0, 0x1);
        gbc.writeMem(0x4459, { 0xd4, 0xe2, 0x2f });
        gbc.writeMem(0xa1e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa1e5, gbc.sp());
        EXPECT(0x2fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xa1e5));
        EXPECT(0x44, gbc.readMem(0xa1e6));
        // D4 0208
        gbc.setState(0x380e, 0xb33d, 0x1050, 0x9227, 0x8f9d, 0xc9dd, 0x1, 0x0);
        gbc.writeMem(0x380e, { 0xd4, 0x81, 0x23 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb33d, gbc.sp());
        EXPECT(0x3811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 020A
        gbc.setState(0x1bc, 0x8789, 0xc130, 0x241c, 0xa4bc, 0x647b, 0x1, 0x0);
        gbc.writeMem(0x1bc, { 0xd4, 0x99, 0x87 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8789, gbc.sp());
        EXPECT(0x1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 020B
        gbc.setState(0xb5f9, 0xa784, 0x4f70, 0x4ab8, 0x24f3, 0xacbf, 0x0, 0x1);
        gbc.writeMem(0xb5f9, { 0xd4, 0x40, 0xd6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa784, gbc.sp());
        EXPECT(0xb5fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb5f9));
        EXPECT(0x40, gbc.readMem(0xb5fa));
        EXPECT(0xd6, gbc.readMem(0xb5fb));
        // D4 020C
        gbc.setState(0xdb8f, 0xe7c0, 0x5ba0, 0xd593, 0x86a5, 0x6e59, 0x0, 0x0);
        gbc.writeMem(0xdb8f, { 0xd4, 0x57, 0x10 });
        gbc.writeMem(0xe7be, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe7be, gbc.sp());
        EXPECT(0x1057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xdb8f));
        EXPECT(0x57, gbc.readMem(0xdb90));
        EXPECT(0x10, gbc.readMem(0xdb91));
        EXPECT(0x92, gbc.readMem(0xe7be));
        EXPECT(0xdb, gbc.readMem(0xe7bf));
        // D4 020D
        gbc.setState(0xde22, 0x2f79, 0x2c70, 0xe134, 0x3aeb, 0xf103, 0x0, 0x0);
        gbc.writeMem(0xde22, { 0xd4, 0x94, 0x96 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2f79, gbc.sp());
        EXPECT(0xde25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xde22));
        EXPECT(0x94, gbc.readMem(0xde23));
        EXPECT(0x96, gbc.readMem(0xde24));
        // D4 020E
        gbc.setState(0xec33, 0xed9e, 0xad70, 0x60f4, 0xe890, 0xbe85, 0x1, 0x0);
        gbc.writeMem(0xec33, { 0xd4, 0xa8, 0xd4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xed9e, gbc.sp());
        EXPECT(0xec36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xec33));
        EXPECT(0xa8, gbc.readMem(0xec34));
        EXPECT(0xd4, gbc.readMem(0xec35));
        // D4 020F
        gbc.setState(0xc6b1, 0x86b1, 0x7a50, 0xb887, 0x8111, 0xdfe6, 0x0, 0x0);
        gbc.writeMem(0xc6b1, { 0xd4, 0x0, 0x14 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x86b1, gbc.sp());
        EXPECT(0xc6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc6b1));
        EXPECT(0x0, gbc.readMem(0xc6b2));
        EXPECT(0x14, gbc.readMem(0xc6b3));
        // D4 0210
        gbc.setState(0x389, 0x613c, 0xb4b0, 0x1473, 0xece0, 0x9b29, 0x0, 0x1);
        gbc.writeMem(0x389, { 0xd4, 0x24, 0x9d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x613c, gbc.sp());
        EXPECT(0x38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0211
        gbc.setState(0x56ab, 0x48d9, 0x1ef0, 0x5706, 0x72a3, 0xf76c, 0x1, 0x0);
        gbc.writeMem(0x56ab, { 0xd4, 0x47, 0x80 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x48d9, gbc.sp());
        EXPECT(0x56ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0215
        gbc.setState(0x37fb, 0xc266, 0x1da0, 0x5503, 0x2eef, 0x3b87, 0x1, 0x1);
        gbc.writeMem(0x37fb, { 0xd4, 0xc3, 0x20 });
        gbc.writeMem(0xc264, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc264, gbc.sp());
        EXPECT(0x20c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc264));
        EXPECT(0x37, gbc.readMem(0xc265));
        // D4 0216
        gbc.setState(0x4b8, 0x892e, 0x2330, 0x2d01, 0x7fab, 0xdbcc, 0x1, 0x1);
        gbc.writeMem(0x4b8, { 0xd4, 0x4b, 0x8c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x892e, gbc.sp());
        EXPECT(0x4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0217
        gbc.setState(0xa525, 0xd7d9, 0xb850, 0x5e16, 0x6c93, 0xb78c, 0x0, 0x1);
        gbc.writeMem(0xa525, { 0xd4, 0x91, 0xd1 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd7d9, gbc.sp());
        EXPECT(0xa528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa525));
        EXPECT(0x91, gbc.readMem(0xa526));
        EXPECT(0xd1, gbc.readMem(0xa527));
        // D4 0219
        gbc.setState(0x1ec9, 0x65e5, 0xf10, 0x5418, 0x9105, 0x86e7, 0x1, 0x1);
        gbc.writeMem(0x1ec9, { 0xd4, 0x0, 0x85 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x65e5, gbc.sp());
        EXPECT(0x1ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 021B
        gbc.setState(0xb38f, 0xefc2, 0xd370, 0xb736, 0xaaaf, 0x715d, 0x0, 0x0);
        gbc.writeMem(0xb38f, { 0xd4, 0xc1, 0x77 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xefc2, gbc.sp());
        EXPECT(0xb392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb38f));
        EXPECT(0xc1, gbc.readMem(0xb390));
        EXPECT(0x77, gbc.readMem(0xb391));
        // D4 021C
        gbc.setState(0xaefd, 0x8ac7, 0xb260, 0xf0f8, 0xb320, 0x9bd, 0x0, 0x0);
        gbc.writeMem(0x8ac5, { 0x0, 0x0 });
        gbc.writeMem(0xaefd, { 0xd4, 0xc6, 0xf8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8ac5, gbc.sp());
        EXPECT(0xf8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8ac5));
        EXPECT(0xaf, gbc.readMem(0x8ac6));
        EXPECT(0xd4, gbc.readMem(0xaefd));
        EXPECT(0xc6, gbc.readMem(0xaefe));
        EXPECT(0xf8, gbc.readMem(0xaeff));
        // D4 021D
        gbc.setState(0x3b5b, 0x8aab, 0x2e80, 0x3fc5, 0x65e5, 0xccc3, 0x0, 0x1);
        gbc.writeMem(0x3b5b, { 0xd4, 0xcc, 0xfa });
        gbc.writeMem(0x8aa9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8aa9, gbc.sp());
        EXPECT(0xfacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8aa9));
        EXPECT(0x3b, gbc.readMem(0x8aaa));
        // D4 0220
        gbc.setState(0x98eb, 0x338a, 0xea90, 0x849f, 0xe9e8, 0xeb9f, 0x1, 0x0);
        gbc.writeMem(0x98eb, { 0xd4, 0x29, 0x7d });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x338a, gbc.sp());
        EXPECT(0x98ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x98eb));
        EXPECT(0x29, gbc.readMem(0x98ec));
        EXPECT(0x7d, gbc.readMem(0x98ed));
        // D4 0221
        gbc.setState(0x9628, 0xaa6b, 0x14f0, 0xe6b0, 0x37b9, 0x6004, 0x1, 0x0);
        gbc.writeMem(0x9628, { 0xd4, 0xbd, 0xe8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaa6b, gbc.sp());
        EXPECT(0x962b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9628));
        EXPECT(0xbd, gbc.readMem(0x9629));
        EXPECT(0xe8, gbc.readMem(0x962a));
        // D4 0222
        gbc.setState(0xe84a, 0x9a2b, 0xe100, 0x25d8, 0xef54, 0xf4e8, 0x1, 0x0);
        gbc.writeMem(0x9a29, { 0x0, 0x0 });
        gbc.writeMem(0xe84a, { 0xd4, 0xf2, 0x7a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9a29, gbc.sp());
        EXPECT(0x7af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9a29));
        EXPECT(0xe8, gbc.readMem(0x9a2a));
        EXPECT(0xd4, gbc.readMem(0xe84a));
        EXPECT(0xf2, gbc.readMem(0xe84b));
        EXPECT(0x7a, gbc.readMem(0xe84c));
        // D4 0224
        gbc.setState(0x7b87, 0x8e2f, 0x3940, 0x4d96, 0xa40a, 0xa7ea, 0x1, 0x1);
        gbc.writeMem(0x7b87, { 0xd4, 0xad, 0xe3 });
        gbc.writeMem(0x8e2d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8e2d, gbc.sp());
        EXPECT(0xe3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x8e2d));
        EXPECT(0x7b, gbc.readMem(0x8e2e));
        // D4 0225
        gbc.setState(0x44f0, 0xfe0b, 0x4630, 0x962f, 0x10f5, 0x59fa, 0x1, 0x0);
        gbc.writeMem(0x44f0, { 0xd4, 0x57, 0x71 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfe0b, gbc.sp());
        EXPECT(0x44f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0226
        gbc.setState(0x59be, 0xa249, 0x4170, 0x1258, 0x71ec, 0xc7bc, 0x1, 0x1);
        gbc.writeMem(0x59be, { 0xd4, 0x65, 0x81 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa249, gbc.sp());
        EXPECT(0x59c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0227
        gbc.setState(0x91de, 0xcec6, 0xc710, 0x1d7a, 0x9944, 0xe43a, 0x1, 0x1);
        gbc.writeMem(0x91de, { 0xd4, 0xa1, 0xae });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcec6, gbc.sp());
        EXPECT(0x91e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x91de));
        EXPECT(0xa1, gbc.readMem(0x91df));
        EXPECT(0xae, gbc.readMem(0x91e0));
        // D4 022A
        gbc.setState(0x23e2, 0xeb3b, 0xc7f0, 0x5adc, 0xf7da, 0x66c9, 0x0, 0x0);
        gbc.writeMem(0x23e2, { 0xd4, 0xa7, 0x42 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xeb3b, gbc.sp());
        EXPECT(0x23e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 022B
        gbc.setState(0xf1c, 0x4038, 0x73b0, 0xb5bc, 0x3666, 0xa51c, 0x1, 0x0);
        gbc.writeMem(0xf1c, { 0xd4, 0x99, 0xcc });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4038, gbc.sp());
        EXPECT(0xf1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 022C
        gbc.setState(0xb112, 0x39b5, 0x78b0, 0x5856, 0xd1ac, 0x1724, 0x1, 0x1);
        gbc.writeMem(0xb112, { 0xd4, 0x8d, 0x3c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x39b5, gbc.sp());
        EXPECT(0xb115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb112));
        EXPECT(0x8d, gbc.readMem(0xb113));
        EXPECT(0x3c, gbc.readMem(0xb114));
        // D4 022D
        gbc.setState(0x6388, 0xca92, 0x14c0, 0xf78e, 0x1a2a, 0xf470, 0x1, 0x1);
        gbc.writeMem(0x6388, { 0xd4, 0x98, 0x55 });
        gbc.writeMem(0xca90, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xca90, gbc.sp());
        EXPECT(0x5598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xca90));
        EXPECT(0x63, gbc.readMem(0xca91));
        // D4 022E
        gbc.setState(0x1d02, 0xed5a, 0x5070, 0x31b0, 0x4ba0, 0x9e84, 0x1, 0x1);
        gbc.writeMem(0x1d02, { 0xd4, 0xb, 0xd2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xed5a, gbc.sp());
        EXPECT(0x1d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 022F
        gbc.setState(0x73d4, 0xdce3, 0x6ec0, 0x26dd, 0x3e6c, 0x5843, 0x0, 0x1);
        gbc.writeMem(0x73d4, { 0xd4, 0x66, 0x4a });
        gbc.writeMem(0xdce1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xdce1, gbc.sp());
        EXPECT(0x4a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xdce1));
        EXPECT(0x73, gbc.readMem(0xdce2));
        // D4 0230
        gbc.setState(0xe6, 0xb6f1, 0x80f0, 0xdf9d, 0xe3b, 0x2038, 0x0, 0x1);
        gbc.writeMem(0xe6, { 0xd4, 0xb, 0x1d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb6f1, gbc.sp());
        EXPECT(0xe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0231
        gbc.setState(0xbc01, 0xc023, 0xfb90, 0x8a16, 0x3539, 0x6e81, 0x0, 0x1);
        gbc.writeMem(0xbc01, { 0xd4, 0x96, 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc023, gbc.sp());
        EXPECT(0xbc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbc01));
        EXPECT(0x96, gbc.readMem(0xbc02));
        EXPECT(0x44, gbc.readMem(0xbc03));
        // D4 0232
        gbc.setState(0xd41c, 0xc45d, 0x8fb0, 0x2bab, 0xdc14, 0x13fc, 0x0, 0x1);
        gbc.writeMem(0xd41c, { 0xd4, 0xa9, 0xf3 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc45d, gbc.sp());
        EXPECT(0xd41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd41c));
        EXPECT(0xa9, gbc.readMem(0xd41d));
        EXPECT(0xf3, gbc.readMem(0xd41e));
        // D4 0233
        gbc.setState(0x95c4, 0x9fe2, 0x3170, 0xea95, 0x182f, 0x8af5, 0x1, 0x0);
        gbc.writeMem(0x95c4, { 0xd4, 0x96, 0xcd });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9fe2, gbc.sp());
        EXPECT(0x95c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x95c4));
        EXPECT(0x96, gbc.readMem(0x95c5));
        EXPECT(0xcd, gbc.readMem(0x95c6));
        // D4 0234
        gbc.setState(0x272d, 0x4ef, 0xe310, 0xacc1, 0x5e5f, 0x7087, 0x0, 0x0);
        gbc.writeMem(0x272d, { 0xd4, 0xef, 0x86 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4ef, gbc.sp());
        EXPECT(0x2730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0236
        gbc.setState(0x455d, 0xa9c6, 0xaf70, 0xccc1, 0xf87f, 0xef8a, 0x1, 0x1);
        gbc.writeMem(0x455d, { 0xd4, 0x32, 0xab });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa9c6, gbc.sp());
        EXPECT(0x4560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0237
        gbc.setState(0x68ac, 0xb193, 0x1aa0, 0x5f17, 0xa145, 0x22b2, 0x1, 0x0);
        gbc.writeMem(0x68ac, { 0xd4, 0x5c, 0xf1 });
        gbc.writeMem(0xb191, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb191, gbc.sp());
        EXPECT(0xf15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xb191));
        EXPECT(0x68, gbc.readMem(0xb192));
        // D4 0239
        gbc.setState(0x1394, 0xc89e, 0xe650, 0x9d9a, 0xaf65, 0xa67d, 0x0, 0x0);
        gbc.writeMem(0x1394, { 0xd4, 0xc, 0x22 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc89e, gbc.sp());
        EXPECT(0x1397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 023B
        gbc.setState(0x4228, 0xe827, 0x7960, 0x9b52, 0xef9b, 0xf8ae, 0x0, 0x1);
        gbc.writeMem(0x4228, { 0xd4, 0xff, 0x4f });
        gbc.writeMem(0xe825, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe825, gbc.sp());
        EXPECT(0x4fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe825));
        EXPECT(0x42, gbc.readMem(0xe826));
        // D4 023C
        gbc.setState(0x9616, 0xc, 0x6790, 0x6a4a, 0xf275, 0x3072, 0x0, 0x0);
        gbc.writeMem(0x9616, { 0xd4, 0xa9, 0x73 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc, gbc.sp());
        EXPECT(0x9619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9616));
        EXPECT(0xa9, gbc.readMem(0x9617));
        EXPECT(0x73, gbc.readMem(0x9618));
        // D4 023D
        gbc.setState(0x8738, 0xe9a1, 0x2e40, 0x64bc, 0xe8e9, 0x430a, 0x1, 0x0);
        gbc.writeMem(0x8738, { 0xd4, 0xc0, 0xd0 });
        gbc.writeMem(0xe99f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe99f, gbc.sp());
        EXPECT(0xd0c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8738));
        EXPECT(0xc0, gbc.readMem(0x8739));
        EXPECT(0xd0, gbc.readMem(0x873a));
        EXPECT(0x3b, gbc.readMem(0xe99f));
        EXPECT(0x87, gbc.readMem(0xe9a0));
        // D4 023E
        gbc.setState(0x9d00, 0xcd17, 0x1d50, 0xa2bc, 0xa793, 0xcfb2, 0x1, 0x1);
        gbc.writeMem(0x9d00, { 0xd4, 0x5b, 0xca });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcd17, gbc.sp());
        EXPECT(0x9d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9d00));
        EXPECT(0x5b, gbc.readMem(0x9d01));
        EXPECT(0xca, gbc.readMem(0x9d02));
        // D4 023F
        gbc.setState(0x23eb, 0x8ad5, 0x54a0, 0x45bd, 0x66c9, 0x9c4f, 0x1, 0x1);
        gbc.writeMem(0x23eb, { 0xd4, 0x4b, 0x65 });
        gbc.writeMem(0x8ad3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8ad3, gbc.sp());
        EXPECT(0x654b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x8ad3));
        EXPECT(0x23, gbc.readMem(0x8ad4));
        // D4 0241
        gbc.setState(0xe57, 0xb422, 0xdef0, 0xe53, 0x528d, 0xa0d5, 0x0, 0x1);
        gbc.writeMem(0xe57, { 0xd4, 0xd5, 0x59 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb422, gbc.sp());
        EXPECT(0xe5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0245
        gbc.setState(0xd6ee, 0x5d3d, 0xf9f0, 0xae86, 0x1cd2, 0x90a9, 0x1, 0x1);
        gbc.writeMem(0xd6ee, { 0xd4, 0xc, 0x4c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5d3d, gbc.sp());
        EXPECT(0xd6f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd6ee));
        EXPECT(0xc, gbc.readMem(0xd6ef));
        EXPECT(0x4c, gbc.readMem(0xd6f0));
        // D4 0246
        gbc.setState(0xa0a, 0x358a, 0x1250, 0x829, 0xbee0, 0x591c, 0x1, 0x1);
        gbc.writeMem(0xa0a, { 0xd4, 0xea, 0x77 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x358a, gbc.sp());
        EXPECT(0xa0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0248
        gbc.setState(0x73e7, 0x9229, 0xde50, 0x8fdf, 0x425b, 0x2388, 0x1, 0x0);
        gbc.writeMem(0x73e7, { 0xd4, 0xf6, 0xb9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9229, gbc.sp());
        EXPECT(0x73ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0249
        gbc.setState(0x71b3, 0x1806, 0xedf0, 0xdbd7, 0xfc07, 0x1489, 0x0, 0x0);
        gbc.writeMem(0x71b3, { 0xd4, 0xb3, 0xde });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1806, gbc.sp());
        EXPECT(0x71b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 024A
        gbc.setState(0xa667, 0x8eb2, 0x7f00, 0xe390, 0x19d5, 0xfbde, 0x0, 0x1);
        gbc.writeMem(0x8eb0, { 0x0, 0x0 });
        gbc.writeMem(0xa667, { 0xd4, 0xb0, 0xad });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8eb0, gbc.sp());
        EXPECT(0xadb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8eb0));
        EXPECT(0xa6, gbc.readMem(0x8eb1));
        EXPECT(0xd4, gbc.readMem(0xa667));
        EXPECT(0xb0, gbc.readMem(0xa668));
        EXPECT(0xad, gbc.readMem(0xa669));
        // D4 024B
        gbc.setState(0xa1a2, 0x78a, 0x7e10, 0xcd9a, 0x7353, 0xeca0, 0x1, 0x0);
        gbc.writeMem(0xa1a2, { 0xd4, 0xfe, 0xfa });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x78a, gbc.sp());
        EXPECT(0xa1a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa1a2));
        EXPECT(0xfe, gbc.readMem(0xa1a3));
        EXPECT(0xfa, gbc.readMem(0xa1a4));
        // D4 024C
        gbc.setState(0x46b2, 0xc06b, 0xc540, 0x34ba, 0xd444, 0x120e, 0x0, 0x1);
        gbc.writeMem(0x46b2, { 0xd4, 0xeb, 0x8f });
        gbc.writeMem(0xc069, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc069, gbc.sp());
        EXPECT(0x8feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xc069));
        EXPECT(0x46, gbc.readMem(0xc06a));
        // D4 024D
        gbc.setState(0xe468, 0xcddd, 0x8f00, 0xa20, 0xbc3b, 0xdeb0, 0x0, 0x1);
        gbc.writeMem(0xcddb, { 0x0, 0x0 });
        gbc.writeMem(0xe468, { 0xd4, 0x5f, 0x2b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcddb, gbc.sp());
        EXPECT(0x2b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xcddb));
        EXPECT(0xe4, gbc.readMem(0xcddc));
        EXPECT(0xd4, gbc.readMem(0xe468));
        EXPECT(0x5f, gbc.readMem(0xe469));
        EXPECT(0x2b, gbc.readMem(0xe46a));
        // D4 024E
        gbc.setState(0x4275, 0x7bb9, 0x21f0, 0x1305, 0xcf7c, 0x9752, 0x1, 0x1);
        gbc.writeMem(0x4275, { 0xd4, 0x42, 0x27 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7bb9, gbc.sp());
        EXPECT(0x4278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 024F
        gbc.setState(0xd5c5, 0xdec5, 0x8bd0, 0x4af2, 0x5d3, 0x7df3, 0x1, 0x1);
        gbc.writeMem(0xd5c5, { 0xd4, 0x5c, 0xdf });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdec5, gbc.sp());
        EXPECT(0xd5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd5c5));
        EXPECT(0x5c, gbc.readMem(0xd5c6));
        EXPECT(0xdf, gbc.readMem(0xd5c7));
        // D4 0250
        gbc.setState(0xd997, 0x9d98, 0x7180, 0xe53e, 0xb09f, 0x2898, 0x0, 0x1);
        gbc.writeMem(0x9d96, { 0x0, 0x0 });
        gbc.writeMem(0xd997, { 0xd4, 0xba, 0xfc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9d96, gbc.sp());
        EXPECT(0xfcba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9d96));
        EXPECT(0xd9, gbc.readMem(0x9d97));
        EXPECT(0xd4, gbc.readMem(0xd997));
        EXPECT(0xba, gbc.readMem(0xd998));
        EXPECT(0xfc, gbc.readMem(0xd999));
        // D4 0251
        gbc.setState(0xb3c2, 0x9b29, 0xcc20, 0x5122, 0x6427, 0x1921, 0x0, 0x1);
        gbc.writeMem(0x9b27, { 0x0, 0x0 });
        gbc.writeMem(0xb3c2, { 0xd4, 0x2a, 0x36 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0x362a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9b27));
        EXPECT(0xb3, gbc.readMem(0x9b28));
        EXPECT(0xd4, gbc.readMem(0xb3c2));
        EXPECT(0x2a, gbc.readMem(0xb3c3));
        EXPECT(0x36, gbc.readMem(0xb3c4));
        // D4 0253
        gbc.setState(0x28ea, 0xbf1d, 0xde70, 0xc001, 0x1f5, 0x8b45, 0x1, 0x0);
        gbc.writeMem(0x28ea, { 0xd4, 0x23, 0xec });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbf1d, gbc.sp());
        EXPECT(0x28ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0254
        gbc.setState(0xb7fd, 0xb86f, 0x9490, 0x457c, 0x7134, 0xbb27, 0x0, 0x0);
        gbc.writeMem(0xb7fd, { 0xd4, 0x43, 0x73 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb86f, gbc.sp());
        EXPECT(0xb800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb7fd));
        EXPECT(0x43, gbc.readMem(0xb7fe));
        EXPECT(0x73, gbc.readMem(0xb7ff));
        // D4 0256
        gbc.setState(0xa58b, 0x917a, 0x11e0, 0xe644, 0x4b4f, 0x7c7b, 0x1, 0x0);
        gbc.writeMem(0x9178, { 0x0, 0x0 });
        gbc.writeMem(0xa58b, { 0xd4, 0x21, 0xdc });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x9178, gbc.sp());
        EXPECT(0xdc21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x9178));
        EXPECT(0xa5, gbc.readMem(0x9179));
        EXPECT(0xd4, gbc.readMem(0xa58b));
        EXPECT(0x21, gbc.readMem(0xa58c));
        EXPECT(0xdc, gbc.readMem(0xa58d));
        // D4 0257
        gbc.setState(0x3152, 0x975e, 0x6a50, 0x18f5, 0x9f99, 0xcd0a, 0x1, 0x0);
        gbc.writeMem(0x3152, { 0xd4, 0xba, 0x7f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x975e, gbc.sp());
        EXPECT(0x3155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0258
        gbc.setState(0xc506, 0x1ad6, 0xc8f0, 0x5c60, 0x1e3d, 0x25d1, 0x0, 0x0);
        gbc.writeMem(0xc506, { 0xd4, 0x4, 0x8a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1ad6, gbc.sp());
        EXPECT(0xc509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc506));
        EXPECT(0x4, gbc.readMem(0xc507));
        EXPECT(0x8a, gbc.readMem(0xc508));
        // D4 0259
        gbc.setState(0xa385, 0x9b25, 0xa140, 0xaa3f, 0xed0f, 0x6cef, 0x0, 0x0);
        gbc.writeMem(0x9b23, { 0x0, 0x0 });
        gbc.writeMem(0xa385, { 0xd4, 0x8c, 0x82 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9b23, gbc.sp());
        EXPECT(0x828c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9b23));
        EXPECT(0xa3, gbc.readMem(0x9b24));
        EXPECT(0xd4, gbc.readMem(0xa385));
        EXPECT(0x8c, gbc.readMem(0xa386));
        EXPECT(0x82, gbc.readMem(0xa387));
        // D4 025B
        gbc.setState(0xd2cf, 0x70ff, 0x39b0, 0x415f, 0x7ec2, 0xd2bd, 0x0, 0x0);
        gbc.writeMem(0xd2cf, { 0xd4, 0x1, 0xb2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x70ff, gbc.sp());
        EXPECT(0xd2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd2cf));
        EXPECT(0x1, gbc.readMem(0xd2d0));
        EXPECT(0xb2, gbc.readMem(0xd2d1));
        // D4 025C
        gbc.setState(0x46e2, 0x8c7a, 0x70f0, 0x5398, 0x7602, 0x2c51, 0x1, 0x0);
        gbc.writeMem(0x46e2, { 0xd4, 0xa7, 0x93 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8c7a, gbc.sp());
        EXPECT(0x46e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 025D
        gbc.setState(0x40e3, 0xf680, 0xff0, 0x246d, 0x2aa1, 0x7436, 0x0, 0x0);
        gbc.writeMem(0x40e3, { 0xd4, 0x39, 0xa5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf680, gbc.sp());
        EXPECT(0x40e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 025F
        gbc.setState(0x89b5, 0xbc89, 0x4fd0, 0x2387, 0x6a85, 0xafbd, 0x0, 0x1);
        gbc.writeMem(0x89b5, { 0xd4, 0x2d, 0xf2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbc89, gbc.sp());
        EXPECT(0x89b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x89b5));
        EXPECT(0x2d, gbc.readMem(0x89b6));
        EXPECT(0xf2, gbc.readMem(0x89b7));
        // D4 0260
        gbc.setState(0xbb7f, 0xb5d6, 0x1310, 0xd931, 0xd7c7, 0x1658, 0x0, 0x1);
        gbc.writeMem(0xbb7f, { 0xd4, 0xd1, 0x3c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb5d6, gbc.sp());
        EXPECT(0xbb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbb7f));
        EXPECT(0xd1, gbc.readMem(0xbb80));
        EXPECT(0x3c, gbc.readMem(0xbb81));
        // D4 0261
        gbc.setState(0xb6f2, 0xb788, 0x71d0, 0x2319, 0x998c, 0x8c13, 0x0, 0x0);
        gbc.writeMem(0xb6f2, { 0xd4, 0xa1, 0x30 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb788, gbc.sp());
        EXPECT(0xb6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb6f2));
        EXPECT(0xa1, gbc.readMem(0xb6f3));
        EXPECT(0x30, gbc.readMem(0xb6f4));
        // D4 0262
        gbc.setState(0xde, 0xac7c, 0xefc0, 0x48fd, 0x12b3, 0x9ca4, 0x0, 0x0);
        gbc.writeMem(0xde, { 0xd4, 0xa, 0x5c });
        gbc.writeMem(0xac7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xac7a, gbc.sp());
        EXPECT(0x5c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xac7a));
        EXPECT(0x0, gbc.readMem(0xac7b));
        // D4 0263
        gbc.setState(0xd959, 0xd867, 0xc6e0, 0x6492, 0xa55e, 0x9914, 0x1, 0x0);
        gbc.writeMem(0xd865, { 0x0, 0x0 });
        gbc.writeMem(0xd959, { 0xd4, 0x6f, 0x29 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd865, gbc.sp());
        EXPECT(0x296f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xd865));
        EXPECT(0xd9, gbc.readMem(0xd866));
        EXPECT(0xd4, gbc.readMem(0xd959));
        EXPECT(0x6f, gbc.readMem(0xd95a));
        EXPECT(0x29, gbc.readMem(0xd95b));
        // D4 0264
        gbc.setState(0x3b1f, 0xd120, 0xf190, 0x3be4, 0x6b28, 0x8b2c, 0x1, 0x0);
        gbc.writeMem(0x3b1f, { 0xd4, 0x36, 0xdc });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd120, gbc.sp());
        EXPECT(0x3b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0265
        gbc.setState(0x1e60, 0x1b70, 0x7ad0, 0x18b4, 0x9c0c, 0x423d, 0x0, 0x0);
        gbc.writeMem(0x1e60, { 0xd4, 0x25, 0x89 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1b70, gbc.sp());
        EXPECT(0x1e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0266
        gbc.setState(0x1479, 0x668e, 0x87f0, 0x3b13, 0xd82d, 0x227b, 0x1, 0x1);
        gbc.writeMem(0x1479, { 0xd4, 0x5f, 0xb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x668e, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0267
        gbc.setState(0x3537, 0x4822, 0x5db0, 0x6a0b, 0x6677, 0x63bf, 0x0, 0x0);
        gbc.writeMem(0x3537, { 0xd4, 0x43, 0x8d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4822, gbc.sp());
        EXPECT(0x353a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0268
        gbc.setState(0x813a, 0x6e50, 0xbf30, 0x1f59, 0x3c83, 0xd801, 0x0, 0x1);
        gbc.writeMem(0x813a, { 0xd4, 0x3, 0xc4 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6e50, gbc.sp());
        EXPECT(0x813d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x813a));
        EXPECT(0x3, gbc.readMem(0x813b));
        EXPECT(0xc4, gbc.readMem(0x813c));
        // D4 0269
        gbc.setState(0x3a62, 0xe04f, 0x6570, 0x79b9, 0xe1b1, 0x249c, 0x0, 0x0);
        gbc.writeMem(0x3a62, { 0xd4, 0xdd, 0x94 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe04f, gbc.sp());
        EXPECT(0x3a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 026A
        gbc.setState(0x94e8, 0x3b0d, 0x7990, 0xae12, 0xe483, 0x2fa5, 0x0, 0x1);
        gbc.writeMem(0x94e8, { 0xd4, 0x89, 0x5d });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3b0d, gbc.sp());
        EXPECT(0x94eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x94e8));
        EXPECT(0x89, gbc.readMem(0x94e9));
        EXPECT(0x5d, gbc.readMem(0x94ea));
        // D4 026B
        gbc.setState(0xabec, 0x6043, 0xcff0, 0xef26, 0xef3e, 0x845b, 0x1, 0x0);
        gbc.writeMem(0xabec, { 0xd4, 0x4a, 0xd1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6043, gbc.sp());
        EXPECT(0xabef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xabec));
        EXPECT(0x4a, gbc.readMem(0xabed));
        EXPECT(0xd1, gbc.readMem(0xabee));
        // D4 026C
        gbc.setState(0x5895, 0x4a36, 0x7170, 0xada0, 0x1bd0, 0x1252, 0x0, 0x1);
        gbc.writeMem(0x5895, { 0xd4, 0x14, 0x92 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4a36, gbc.sp());
        EXPECT(0x5898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 026E
        gbc.setState(0x4aee, 0xadfb, 0xe560, 0x4178, 0xad24, 0xb3fc, 0x0, 0x1);
        gbc.writeMem(0x4aee, { 0xd4, 0x30, 0xb9 });
        gbc.writeMem(0xadf9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xadf9, gbc.sp());
        EXPECT(0xb930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xadf9));
        EXPECT(0x4a, gbc.readMem(0xadfa));
        // D4 0272
        gbc.setState(0x3b51, 0xabe3, 0x16b0, 0xd8e5, 0x859, 0xc35d, 0x1, 0x1);
        gbc.writeMem(0x3b51, { 0xd4, 0xff, 0xc8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xabe3, gbc.sp());
        EXPECT(0x3b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0273
        gbc.setState(0xb53, 0x3035, 0xcb70, 0x1226, 0x93e3, 0xba97, 0x0, 0x0);
        gbc.writeMem(0xb53, { 0xd4, 0x6a, 0x58 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3035, gbc.sp());
        EXPECT(0xb56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0274
        gbc.setState(0x4027, 0xa406, 0x7d50, 0xcd29, 0x3cb6, 0x9cb7, 0x0, 0x1);
        gbc.writeMem(0x4027, { 0xd4, 0x11, 0xef });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa406, gbc.sp());
        EXPECT(0x402a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0275
        gbc.setState(0xd84c, 0xf090, 0x9540, 0x494a, 0x305a, 0xb320, 0x0, 0x0);
        gbc.writeMem(0xd84c, { 0xd4, 0x28, 0xa8 });
        gbc.writeMem(0xf08e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf08e, gbc.sp());
        EXPECT(0xa828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd84c));
        EXPECT(0x28, gbc.readMem(0xd84d));
        EXPECT(0xa8, gbc.readMem(0xd84e));
        EXPECT(0x4f, gbc.readMem(0xf08e));
        EXPECT(0xd8, gbc.readMem(0xf08f));
        // D4 0277
        gbc.setState(0xa192, 0x485, 0xfaf0, 0x5eae, 0xaba, 0xc3e9, 0x1, 0x0);
        gbc.writeMem(0xa192, { 0xd4, 0x1b, 0x84 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x485, gbc.sp());
        EXPECT(0xa195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa192));
        EXPECT(0x1b, gbc.readMem(0xa193));
        EXPECT(0x84, gbc.readMem(0xa194));
        // D4 0278
        gbc.setState(0x2d77, 0xd948, 0xaf70, 0x19af, 0xcdbf, 0xc3f5, 0x1, 0x0);
        gbc.writeMem(0x2d77, { 0xd4, 0x6c, 0x7d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd948, gbc.sp());
        EXPECT(0x2d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0279
        gbc.setState(0x6edc, 0x5d34, 0x57f0, 0x7f4c, 0x5df6, 0x87f7, 0x0, 0x1);
        gbc.writeMem(0x6edc, { 0xd4, 0xd6, 0xc3 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5d34, gbc.sp());
        EXPECT(0x6edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 027A
        gbc.setState(0xad59, 0xa6a1, 0x7d90, 0xc68, 0xf2f0, 0x84b5, 0x1, 0x1);
        gbc.writeMem(0xad59, { 0xd4, 0x6f, 0xdb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa6a1, gbc.sp());
        EXPECT(0xad5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xad59));
        EXPECT(0x6f, gbc.readMem(0xad5a));
        EXPECT(0xdb, gbc.readMem(0xad5b));
        // D4 027B
        gbc.setState(0xabde, 0xeaac, 0x5b0, 0xd803, 0x4e7, 0xf4b1, 0x1, 0x0);
        gbc.writeMem(0xabde, { 0xd4, 0xfb, 0xa9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xeaac, gbc.sp());
        EXPECT(0xabe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xabde));
        EXPECT(0xfb, gbc.readMem(0xabdf));
        EXPECT(0xa9, gbc.readMem(0xabe0));
        // D4 027D
        gbc.setState(0x1054, 0xca94, 0x40e0, 0x2e15, 0x85a8, 0x71b8, 0x1, 0x1);
        gbc.writeMem(0x1054, { 0xd4, 0x86, 0xa });
        gbc.writeMem(0xca92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xca92, gbc.sp());
        EXPECT(0xa86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xca92));
        EXPECT(0x10, gbc.readMem(0xca93));
        // D4 027E
        gbc.setState(0x2a79, 0xa2a8, 0x9bf0, 0x3f12, 0xea33, 0x1550, 0x1, 0x0);
        gbc.writeMem(0x2a79, { 0xd4, 0xd2, 0xb5 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa2a8, gbc.sp());
        EXPECT(0x2a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 027F
        gbc.setState(0x4fde, 0x6fd4, 0x7750, 0xe42a, 0x7072, 0xd94e, 0x1, 0x1);
        gbc.writeMem(0x4fde, { 0xd4, 0xd, 0x22 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6fd4, gbc.sp());
        EXPECT(0x4fe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0280
        gbc.setState(0x4c0b, 0x7b71, 0xc170, 0xcdc1, 0xc157, 0x91d5, 0x1, 0x1);
        gbc.writeMem(0x4c0b, { 0xd4, 0x15, 0x9c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7b71, gbc.sp());
        EXPECT(0x4c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0281
        gbc.setState(0x6d7f, 0xacc4, 0xba70, 0x2a18, 0x4d11, 0x3c48, 0x1, 0x0);
        gbc.writeMem(0x6d7f, { 0xd4, 0xe2, 0xe1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xacc4, gbc.sp());
        EXPECT(0x6d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0282
        gbc.setState(0x2fd2, 0x25de, 0x4930, 0xedec, 0xbf56, 0xb21f, 0x0, 0x0);
        gbc.writeMem(0x2fd2, { 0xd4, 0x5a, 0xde });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x25de, gbc.sp());
        EXPECT(0x2fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0285
        gbc.setState(0xcae, 0x9429, 0xe5e0, 0x3ff, 0x2ada, 0x4a4b, 0x0, 0x0);
        gbc.writeMem(0xcae, { 0xd4, 0x1c, 0x72 });
        gbc.writeMem(0x9427, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9427, gbc.sp());
        EXPECT(0x721c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9427));
        EXPECT(0xc, gbc.readMem(0x9428));
        // D4 0286
        gbc.setState(0x6760, 0xf0c7, 0xcd80, 0x355b, 0x97ae, 0xcd75, 0x1, 0x1);
        gbc.writeMem(0x6760, { 0xd4, 0xb5, 0x93 });
        gbc.writeMem(0xf0c5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf0c5, gbc.sp());
        EXPECT(0x93b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xf0c5));
        EXPECT(0x67, gbc.readMem(0xf0c6));
        // D4 0287
        gbc.setState(0xd7cd, 0x6e6a, 0x1330, 0xdc09, 0x4968, 0xa222, 0x1, 0x1);
        gbc.writeMem(0xd7cd, { 0xd4, 0x79, 0x24 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6e6a, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd7cd));
        EXPECT(0x79, gbc.readMem(0xd7ce));
        EXPECT(0x24, gbc.readMem(0xd7cf));
        // D4 0288
        gbc.setState(0x6aee, 0x7d5b, 0xbc30, 0xf691, 0x2e23, 0xe712, 0x1, 0x1);
        gbc.writeMem(0x6aee, { 0xd4, 0x72, 0x84 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7d5b, gbc.sp());
        EXPECT(0x6af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 028A
        gbc.setState(0x2476, 0xcf2a, 0xea10, 0x3b0b, 0xc58b, 0xe03d, 0x1, 0x1);
        gbc.writeMem(0x2476, { 0xd4, 0xfa, 0xd0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcf2a, gbc.sp());
        EXPECT(0x2479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 028B
        gbc.setState(0xa4da, 0x1c41, 0xe810, 0x8cba, 0x35aa, 0xa88b, 0x0, 0x1);
        gbc.writeMem(0xa4da, { 0xd4, 0xbd, 0xcc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1c41, gbc.sp());
        EXPECT(0xa4dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa4da));
        EXPECT(0xbd, gbc.readMem(0xa4db));
        EXPECT(0xcc, gbc.readMem(0xa4dc));
        // D4 028C
        gbc.setState(0x208a, 0x17e1, 0x8110, 0xac0e, 0xae67, 0x9b45, 0x1, 0x1);
        gbc.writeMem(0x208a, { 0xd4, 0x91, 0x84 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x17e1, gbc.sp());
        EXPECT(0x208d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 028D
        gbc.setState(0xa67d, 0x60da, 0xb010, 0x3a17, 0xf043, 0x9de8, 0x0, 0x1);
        gbc.writeMem(0xa67d, { 0xd4, 0x49, 0x8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x60da, gbc.sp());
        EXPECT(0xa680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa67d));
        EXPECT(0x49, gbc.readMem(0xa67e));
        EXPECT(0x8, gbc.readMem(0xa67f));
        // D4 028E
        gbc.setState(0xddb5, 0x2a6, 0x3230, 0xebb0, 0xba39, 0x9e73, 0x1, 0x1);
        gbc.writeMem(0xddb5, { 0xd4, 0xfb, 0xc1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2a6, gbc.sp());
        EXPECT(0xddb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xddb5));
        EXPECT(0xfb, gbc.readMem(0xddb6));
        EXPECT(0xc1, gbc.readMem(0xddb7));
        // D4 028F
        gbc.setState(0x3e19, 0xe776, 0x2c90, 0x1884, 0x4229, 0x89d5, 0x0, 0x0);
        gbc.writeMem(0x3e19, { 0xd4, 0xf0, 0x55 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe776, gbc.sp());
        EXPECT(0x3e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0291
        gbc.setState(0xe8d2, 0x29b9, 0x210, 0xa03e, 0xb5b, 0x5f07, 0x1, 0x0);
        gbc.writeMem(0xe8d2, { 0xd4, 0xc3, 0x42 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x29b9, gbc.sp());
        EXPECT(0xe8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe8d2));
        EXPECT(0xc3, gbc.readMem(0xe8d3));
        EXPECT(0x42, gbc.readMem(0xe8d4));
        // D4 0293
        gbc.setState(0xccef, 0x9069, 0x25f0, 0xf82b, 0xd15c, 0xb512, 0x1, 0x0);
        gbc.writeMem(0xccef, { 0xd4, 0xb2, 0x9c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9069, gbc.sp());
        EXPECT(0xccf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xccef));
        EXPECT(0xb2, gbc.readMem(0xccf0));
        EXPECT(0x9c, gbc.readMem(0xccf1));
        // D4 0294
        gbc.setState(0xe222, 0xcda9, 0x80d0, 0x7632, 0x417, 0x26f4, 0x1, 0x0);
        gbc.writeMem(0xe222, { 0xd4, 0xa2, 0x7d });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcda9, gbc.sp());
        EXPECT(0xe225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe222));
        EXPECT(0xa2, gbc.readMem(0xe223));
        EXPECT(0x7d, gbc.readMem(0xe224));
        // D4 0297
        gbc.setState(0x1f8f, 0x748b, 0xf8f0, 0x622c, 0xbe58, 0x1044, 0x1, 0x0);
        gbc.writeMem(0x1f8f, { 0xd4, 0xaa, 0x76 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x748b, gbc.sp());
        EXPECT(0x1f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0298
        gbc.setState(0xb68e, 0xcff4, 0x3490, 0xbdf9, 0xf21a, 0x59fb, 0x0, 0x0);
        gbc.writeMem(0xb68e, { 0xd4, 0x68, 0x66 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcff4, gbc.sp());
        EXPECT(0xb691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb68e));
        EXPECT(0x68, gbc.readMem(0xb68f));
        EXPECT(0x66, gbc.readMem(0xb690));
        // D4 0299
        gbc.setState(0x2193, 0x8e9a, 0xf1a0, 0x3ded, 0x4587, 0x60ad, 0x1, 0x0);
        gbc.writeMem(0x2193, { 0xd4, 0x3d, 0x66 });
        gbc.writeMem(0x8e98, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8e98, gbc.sp());
        EXPECT(0x663d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x8e98));
        EXPECT(0x21, gbc.readMem(0x8e99));
        // D4 029B
        gbc.setState(0x5ffc, 0x1d8c, 0x7370, 0x8658, 0x3e22, 0x35a4, 0x0, 0x1);
        gbc.writeMem(0x5ffc, { 0xd4, 0xea, 0x62 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1d8c, gbc.sp());
        EXPECT(0x5fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 029C
        gbc.setState(0x36bd, 0x95f2, 0x81b0, 0x89b, 0xaf4e, 0x85b8, 0x0, 0x0);
        gbc.writeMem(0x36bd, { 0xd4, 0x49, 0x9b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x95f2, gbc.sp());
        EXPECT(0x36c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 029E
        gbc.setState(0x7486, 0x990c, 0xe5c0, 0x1f0d, 0x1245, 0x8b0f, 0x0, 0x0);
        gbc.writeMem(0x7486, { 0xd4, 0x9f, 0xe5 });
        gbc.writeMem(0x990a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x990a, gbc.sp());
        EXPECT(0xe59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x990a));
        EXPECT(0x74, gbc.readMem(0x990b));
        // D4 029F
        gbc.setState(0x857c, 0xfe50, 0x1300, 0xdcda, 0x22c1, 0xbeae, 0x1, 0x0);
        gbc.writeMem(0x857c, { 0xd4, 0x3d, 0x30 });
        gbc.writeMem(0xfe4e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfe4e, gbc.sp());
        EXPECT(0x303d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x857c));
        EXPECT(0x3d, gbc.readMem(0x857d));
        EXPECT(0x30, gbc.readMem(0x857e));
        EXPECT(0x7f, gbc.readMem(0xfe4e));
        EXPECT(0x85, gbc.readMem(0xfe4f));
        // D4 02A0
        gbc.setState(0xbb6e, 0xf494, 0x3e00, 0xaa9f, 0xc92b, 0xbf34, 0x1, 0x0);
        gbc.writeMem(0xbb6e, { 0xd4, 0xe1, 0x86 });
        gbc.writeMem(0xf492, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf492, gbc.sp());
        EXPECT(0x86e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbb6e));
        EXPECT(0xe1, gbc.readMem(0xbb6f));
        EXPECT(0x86, gbc.readMem(0xbb70));
        EXPECT(0x71, gbc.readMem(0xf492));
        EXPECT(0xbb, gbc.readMem(0xf493));
        // D4 02A1
        gbc.setState(0x9562, 0xd485, 0x4d30, 0x4e72, 0xebf3, 0x8427, 0x0, 0x1);
        gbc.writeMem(0x9562, { 0xd4, 0xb8, 0x4e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd485, gbc.sp());
        EXPECT(0x9565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9562));
        EXPECT(0xb8, gbc.readMem(0x9563));
        EXPECT(0x4e, gbc.readMem(0x9564));
        // D4 02A2
        gbc.setState(0xde8d, 0xc66a, 0x69d0, 0xec2a, 0x9b25, 0x7ad4, 0x0, 0x1);
        gbc.writeMem(0xde8d, { 0xd4, 0x99, 0x2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc66a, gbc.sp());
        EXPECT(0xde90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xde8d));
        EXPECT(0x99, gbc.readMem(0xde8e));
        EXPECT(0x2, gbc.readMem(0xde8f));
        // D4 02A4
        gbc.setState(0x75a5, 0xad02, 0xf9c0, 0x772b, 0x5df3, 0x18b0, 0x0, 0x0);
        gbc.writeMem(0x75a5, { 0xd4, 0x1d, 0xd9 });
        gbc.writeMem(0xad00, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xad00, gbc.sp());
        EXPECT(0xd91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xad00));
        EXPECT(0x75, gbc.readMem(0xad01));
        // D4 02A5
        gbc.setState(0x39ca, 0xb5c6, 0x9fe0, 0x650a, 0x9c5, 0xe6c6, 0x0, 0x0);
        gbc.writeMem(0x39ca, { 0xd4, 0x9a, 0x5a });
        gbc.writeMem(0xb5c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb5c4, gbc.sp());
        EXPECT(0x5a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb5c4));
        EXPECT(0x39, gbc.readMem(0xb5c5));
        // D4 02A7
        gbc.setState(0xb445, 0xad55, 0x97c0, 0x64d1, 0x52d1, 0x3fa6, 0x1, 0x0);
        gbc.writeMem(0xad53, { 0x0, 0x0 });
        gbc.writeMem(0xb445, { 0xd4, 0xc3, 0xe6 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xad53, gbc.sp());
        EXPECT(0xe6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xad53));
        EXPECT(0xb4, gbc.readMem(0xad54));
        EXPECT(0xd4, gbc.readMem(0xb445));
        EXPECT(0xc3, gbc.readMem(0xb446));
        EXPECT(0xe6, gbc.readMem(0xb447));
        // D4 02A8
        gbc.setState(0x441a, 0xfb56, 0xccb0, 0x6b3f, 0xa9c7, 0xee3f, 0x1, 0x1);
        gbc.writeMem(0x441a, { 0xd4, 0xad, 0xe5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfb56, gbc.sp());
        EXPECT(0x441d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02A9
        gbc.setState(0x4cd, 0xc1fc, 0xe7a0, 0xca28, 0xaa0c, 0xee76, 0x0, 0x1);
        gbc.writeMem(0x4cd, { 0xd4, 0xbb, 0xb4 });
        gbc.writeMem(0xc1fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc1fa, gbc.sp());
        EXPECT(0xb4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xc1fa));
        EXPECT(0x4, gbc.readMem(0xc1fb));
        // D4 02AA
        gbc.setState(0xc246, 0x8c08, 0x6b10, 0xe351, 0x5863, 0xe590, 0x1, 0x0);
        gbc.writeMem(0xc246, { 0xd4, 0x58, 0x4d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8c08, gbc.sp());
        EXPECT(0xc249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc246));
        EXPECT(0x58, gbc.readMem(0xc247));
        EXPECT(0x4d, gbc.readMem(0xc248));
        // D4 02AC
        gbc.setState(0x9c5d, 0x292a, 0x250, 0x0, 0xf43e, 0xcdbd, 0x0, 0x0);
        gbc.writeMem(0x9c5d, { 0xd4, 0xeb, 0x8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x292a, gbc.sp());
        EXPECT(0x9c60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9c5d));
        EXPECT(0xeb, gbc.readMem(0x9c5e));
        EXPECT(0x8, gbc.readMem(0x9c5f));
        // D4 02AD
        gbc.setState(0xb2d1, 0xed9c, 0x2f40, 0xe850, 0x3cf2, 0xefd1, 0x1, 0x0);
        gbc.writeMem(0xb2d1, { 0xd4, 0xe8, 0x4a });
        gbc.writeMem(0xed9a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xed9a, gbc.sp());
        EXPECT(0x4ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb2d1));
        EXPECT(0xe8, gbc.readMem(0xb2d2));
        EXPECT(0x4a, gbc.readMem(0xb2d3));
        EXPECT(0xd4, gbc.readMem(0xed9a));
        EXPECT(0xb2, gbc.readMem(0xed9b));
        // D4 02AE
        gbc.setState(0x7cfa, 0xdc12, 0xc520, 0x66ea, 0x2d8d, 0x63ea, 0x0, 0x1);
        gbc.writeMem(0x7cfa, { 0xd4, 0x7, 0xfe });
        gbc.writeMem(0xdc10, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdc10, gbc.sp());
        EXPECT(0xfe07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xdc10));
        EXPECT(0x7c, gbc.readMem(0xdc11));
        // D4 02AF
        gbc.setState(0xd8c8, 0xe730, 0x3730, 0xf02b, 0xadb7, 0xf687, 0x1, 0x0);
        gbc.writeMem(0xd8c8, { 0xd4, 0x56, 0x6f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe730, gbc.sp());
        EXPECT(0xd8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd8c8));
        EXPECT(0x56, gbc.readMem(0xd8c9));
        EXPECT(0x6f, gbc.readMem(0xd8ca));
        // D4 02B2
        gbc.setState(0x604b, 0x5660, 0x1fb0, 0x9236, 0x5002, 0x425e, 0x1, 0x1);
        gbc.writeMem(0x604b, { 0xd4, 0x10, 0x52 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5660, gbc.sp());
        EXPECT(0x604e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02B5
        gbc.setState(0x69ed, 0xe349, 0x64d0, 0x71c, 0xaa3c, 0x755c, 0x1, 0x1);
        gbc.writeMem(0x69ed, { 0xd4, 0x45, 0x6c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe349, gbc.sp());
        EXPECT(0x69f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02B6
        gbc.setState(0xe464, 0xe362, 0xa5f0, 0x6c8b, 0x6866, 0xc2a8, 0x0, 0x1);
        gbc.writeMem(0xe464, { 0xd4, 0x79, 0x7a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe362, gbc.sp());
        EXPECT(0xe467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe464));
        EXPECT(0x79, gbc.readMem(0xe465));
        EXPECT(0x7a, gbc.readMem(0xe466));
        // D4 02B7
        gbc.setState(0x961c, 0xf605, 0xe790, 0xce8e, 0xf9c0, 0x3005, 0x0, 0x0);
        gbc.writeMem(0x961c, { 0xd4, 0xd, 0x1d });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf605, gbc.sp());
        EXPECT(0x961f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x961c));
        EXPECT(0xd, gbc.readMem(0x961d));
        EXPECT(0x1d, gbc.readMem(0x961e));
        // D4 02B8
        gbc.setState(0xb6b4, 0x4a33, 0x390, 0x875a, 0xe326, 0x77a2, 0x0, 0x0);
        gbc.writeMem(0xb6b4, { 0xd4, 0xa3, 0x82 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4a33, gbc.sp());
        EXPECT(0xb6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb6b4));
        EXPECT(0xa3, gbc.readMem(0xb6b5));
        EXPECT(0x82, gbc.readMem(0xb6b6));
        // D4 02B9
        gbc.setState(0x162f, 0x8497, 0x2890, 0x353b, 0xa3b9, 0xf1c6, 0x0, 0x1);
        gbc.writeMem(0x162f, { 0xd4, 0x1b, 0x4d });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8497, gbc.sp());
        EXPECT(0x1632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02BB
        gbc.setState(0x35a4, 0xe1d9, 0xb590, 0x8f4c, 0x9c90, 0x2263, 0x1, 0x1);
        gbc.writeMem(0x35a4, { 0xd4, 0xbc, 0xe8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe1d9, gbc.sp());
        EXPECT(0x35a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02BF
        gbc.setState(0x66e0, 0x8cc3, 0xc830, 0xdbd2, 0x3574, 0xe804, 0x0, 0x0);
        gbc.writeMem(0x66e0, { 0xd4, 0x9d, 0x7c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8cc3, gbc.sp());
        EXPECT(0x66e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02C0
        gbc.setState(0xb7d7, 0x93c6, 0xde80, 0x5f79, 0xd611, 0x9769, 0x0, 0x1);
        gbc.writeMem(0x93c4, { 0x0, 0x0 });
        gbc.writeMem(0xb7d7, { 0xd4, 0x90, 0xea });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x93c4, gbc.sp());
        EXPECT(0xea90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x93c4));
        EXPECT(0xb7, gbc.readMem(0x93c5));
        EXPECT(0xd4, gbc.readMem(0xb7d7));
        EXPECT(0x90, gbc.readMem(0xb7d8));
        EXPECT(0xea, gbc.readMem(0xb7d9));
        // D4 02C2
        gbc.setState(0x154e, 0xd45, 0xe10, 0xcccb, 0xebf6, 0xd2e5, 0x1, 0x0);
        gbc.writeMem(0x154e, { 0xd4, 0xf9, 0x7d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd45, gbc.sp());
        EXPECT(0x1551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02C3
        gbc.setState(0xccc1, 0xd1a8, 0xa1c0, 0xb2b4, 0x81be, 0xca5f, 0x1, 0x0);
        gbc.writeMem(0xccc1, { 0xd4, 0xda, 0xf2 });
        gbc.writeMem(0xd1a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd1a6, gbc.sp());
        EXPECT(0xf2da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xccc1));
        EXPECT(0xda, gbc.readMem(0xccc2));
        EXPECT(0xf2, gbc.readMem(0xccc3));
        EXPECT(0xc4, gbc.readMem(0xd1a6));
        EXPECT(0xcc, gbc.readMem(0xd1a7));
        // D4 02C4
        gbc.setState(0x7d01, 0xb6c7, 0xf50, 0x29b, 0xf1a4, 0x8636, 0x0, 0x1);
        gbc.writeMem(0x7d01, { 0xd4, 0x25, 0xb5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb6c7, gbc.sp());
        EXPECT(0x7d04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02C5
        gbc.setState(0x2bac, 0xecc6, 0x2fe0, 0xff22, 0x5b68, 0xedbe, 0x0, 0x1);
        gbc.writeMem(0x2bac, { 0xd4, 0x1d, 0x2c });
        gbc.writeMem(0xecc4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xecc4, gbc.sp());
        EXPECT(0x2c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xecc4));
        EXPECT(0x2b, gbc.readMem(0xecc5));
        // D4 02C7
        gbc.setState(0x83d7, 0xc8fb, 0xd740, 0xc674, 0xe203, 0x5f0b, 0x0, 0x1);
        gbc.writeMem(0x83d7, { 0xd4, 0x7e, 0x20 });
        gbc.writeMem(0xc8f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc8f9, gbc.sp());
        EXPECT(0x207e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x83d7));
        EXPECT(0x7e, gbc.readMem(0x83d8));
        EXPECT(0x20, gbc.readMem(0x83d9));
        EXPECT(0xda, gbc.readMem(0xc8f9));
        EXPECT(0x83, gbc.readMem(0xc8fa));
        // D4 02CA
        gbc.setState(0xc779, 0x11f6, 0xe830, 0x8ef0, 0x8126, 0x3b4, 0x1, 0x0);
        gbc.writeMem(0xc779, { 0xd4, 0x70, 0x13 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x11f6, gbc.sp());
        EXPECT(0xc77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc779));
        EXPECT(0x70, gbc.readMem(0xc77a));
        EXPECT(0x13, gbc.readMem(0xc77b));
        // D4 02CB
        gbc.setState(0xcd2e, 0xe880, 0x290, 0x48d7, 0xce41, 0xf540, 0x0, 0x1);
        gbc.writeMem(0xcd2e, { 0xd4, 0xef, 0x13 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe880, gbc.sp());
        EXPECT(0xcd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xcd2e));
        EXPECT(0xef, gbc.readMem(0xcd2f));
        EXPECT(0x13, gbc.readMem(0xcd30));
        // D4 02CC
        gbc.setState(0x2f1f, 0x831f, 0xf30, 0xfd27, 0xbec2, 0x6d24, 0x1, 0x1);
        gbc.writeMem(0x2f1f, { 0xd4, 0x96, 0xcf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x831f, gbc.sp());
        EXPECT(0x2f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02CD
        gbc.setState(0x1f8b, 0x8443, 0xafa0, 0x8896, 0xaf99, 0x1c36, 0x0, 0x0);
        gbc.writeMem(0x1f8b, { 0xd4, 0x0, 0x3b });
        gbc.writeMem(0x8441, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8441, gbc.sp());
        EXPECT(0x3b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x8441));
        EXPECT(0x1f, gbc.readMem(0x8442));
        // D4 02CE
        gbc.setState(0x29e, 0x982f, 0xf780, 0xe1bf, 0xab84, 0xf68d, 0x0, 0x1);
        gbc.writeMem(0x29e, { 0xd4, 0xf9, 0x86 });
        gbc.writeMem(0x982d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x982d, gbc.sp());
        EXPECT(0x86f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x982d));
        EXPECT(0x2, gbc.readMem(0x982e));
        // D4 02CF
        gbc.setState(0x6da3, 0x422a, 0x8250, 0xe5af, 0x5800, 0x98a8, 0x1, 0x1);
        gbc.writeMem(0x6da3, { 0xd4, 0xff, 0x76 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x422a, gbc.sp());
        EXPECT(0x6da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02D0
        gbc.setState(0x3c83, 0x99d6, 0x9ac0, 0xfbd2, 0xb3f9, 0x3e59, 0x1, 0x1);
        gbc.writeMem(0x3c83, { 0xd4, 0x36, 0xfd });
        gbc.writeMem(0x99d4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x99d4, gbc.sp());
        EXPECT(0xfd36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x99d4));
        EXPECT(0x3c, gbc.readMem(0x99d5));
        // D4 02D1
        gbc.setState(0xe98, 0xf695, 0xef00, 0x6c8d, 0x59a2, 0x532f, 0x1, 0x1);
        gbc.writeMem(0xe98, { 0xd4, 0x9c, 0x2b });
        gbc.writeMem(0xf693, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf693, gbc.sp());
        EXPECT(0x2b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xf693));
        EXPECT(0xe, gbc.readMem(0xf694));
        // D4 02D2
        gbc.setState(0x5a46, 0xbde2, 0xedc0, 0x8478, 0x1c08, 0x9308, 0x1, 0x1);
        gbc.writeMem(0x5a46, { 0xd4, 0x6d, 0x1d });
        gbc.writeMem(0xbde0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbde0, gbc.sp());
        EXPECT(0x1d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbde0));
        EXPECT(0x5a, gbc.readMem(0xbde1));
        // D4 02D3
        gbc.setState(0x125c, 0x2869, 0xeed0, 0x1e96, 0xdce5, 0x9491, 0x0, 0x0);
        gbc.writeMem(0x125c, { 0xd4, 0x0, 0x86 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2869, gbc.sp());
        EXPECT(0x125f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02D5
        gbc.setState(0x2d67, 0xf373, 0xb6a0, 0x1437, 0xd40b, 0x94d7, 0x0, 0x0);
        gbc.writeMem(0x2d67, { 0xd4, 0x62, 0x3e });
        gbc.writeMem(0xf371, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf371, gbc.sp());
        EXPECT(0x3e62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xf371));
        EXPECT(0x2d, gbc.readMem(0xf372));
        // D4 02D6
        gbc.setState(0xab50, 0x1037, 0x4330, 0x5746, 0x9091, 0xd600, 0x0, 0x1);
        gbc.writeMem(0xab50, { 0xd4, 0x1a, 0x38 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1037, gbc.sp());
        EXPECT(0xab53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xab50));
        EXPECT(0x1a, gbc.readMem(0xab51));
        EXPECT(0x38, gbc.readMem(0xab52));
        // D4 02D7
        gbc.setState(0x4834, 0x303a, 0x73b0, 0xffcf, 0x1978, 0x98d, 0x1, 0x1);
        gbc.writeMem(0x4834, { 0xd4, 0x2, 0xf3 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x303a, gbc.sp());
        EXPECT(0x4837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02D8
        gbc.setState(0x7f55, 0xe4e1, 0x3740, 0x7050, 0xab7b, 0x80d9, 0x1, 0x0);
        gbc.writeMem(0x7f55, { 0xd4, 0x56, 0x4b });
        gbc.writeMem(0xe4df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe4df, gbc.sp());
        EXPECT(0x4b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe4df));
        EXPECT(0x7f, gbc.readMem(0xe4e0));
        // D4 02D9
        gbc.setState(0x436f, 0xcde2, 0x9180, 0xf738, 0x6e4d, 0x5129, 0x1, 0x1);
        gbc.writeMem(0x436f, { 0xd4, 0x7b, 0xa });
        gbc.writeMem(0xcde0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcde0, gbc.sp());
        EXPECT(0xa7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xcde0));
        EXPECT(0x43, gbc.readMem(0xcde1));
        // D4 02DB
        gbc.setState(0x2822, 0xba1f, 0xddf0, 0x1181, 0x2c1d, 0xe5d6, 0x1, 0x1);
        gbc.writeMem(0x2822, { 0xd4, 0xd8, 0x67 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xba1f, gbc.sp());
        EXPECT(0x2825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02DC
        gbc.setState(0x76af, 0xd9d8, 0xc840, 0x4929, 0xcd8d, 0x3021, 0x1, 0x1);
        gbc.writeMem(0x76af, { 0xd4, 0x45, 0x44 });
        gbc.writeMem(0xd9d6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd9d6, gbc.sp());
        EXPECT(0x4445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd9d6));
        EXPECT(0x76, gbc.readMem(0xd9d7));
        // D4 02DD
        gbc.setState(0x93ec, 0x5859, 0x7070, 0x4c22, 0xabc0, 0x8f95, 0x0, 0x1);
        gbc.writeMem(0x93ec, { 0xd4, 0x69, 0xde });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5859, gbc.sp());
        EXPECT(0x93ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x93ec));
        EXPECT(0x69, gbc.readMem(0x93ed));
        EXPECT(0xde, gbc.readMem(0x93ee));
        // D4 02DE
        gbc.setState(0x1846, 0xb78f, 0x5370, 0xa5ce, 0x3d4a, 0xf11c, 0x1, 0x0);
        gbc.writeMem(0x1846, { 0xd4, 0x2f, 0x87 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb78f, gbc.sp());
        EXPECT(0x1849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02DF
        gbc.setState(0xe993, 0xa168, 0xe3d0, 0xc3fa, 0x98dc, 0xbfec, 0x0, 0x0);
        gbc.writeMem(0xe993, { 0xd4, 0xff, 0x61 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa168, gbc.sp());
        EXPECT(0xe996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe993));
        EXPECT(0xff, gbc.readMem(0xe994));
        EXPECT(0x61, gbc.readMem(0xe995));
        // D4 02E1
        gbc.setState(0x695, 0xaee2, 0xa180, 0x3d06, 0x8960, 0x1cd2, 0x0, 0x0);
        gbc.writeMem(0x695, { 0xd4, 0x68, 0xc8 });
        gbc.writeMem(0xaee0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaee0, gbc.sp());
        EXPECT(0xc868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xaee0));
        EXPECT(0x6, gbc.readMem(0xaee1));
        // D4 02E2
        gbc.setState(0xe472, 0x13ae, 0x68f0, 0x7612, 0x2795, 0x10, 0x0, 0x0);
        gbc.writeMem(0xe472, { 0xd4, 0xaa, 0xa6 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x13ae, gbc.sp());
        EXPECT(0xe475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe472));
        EXPECT(0xaa, gbc.readMem(0xe473));
        EXPECT(0xa6, gbc.readMem(0xe474));
        // D4 02E3
        gbc.setState(0x2f2a, 0xbe6f, 0xfc50, 0xc4d9, 0xf400, 0x8621, 0x1, 0x1);
        gbc.writeMem(0x2f2a, { 0xd4, 0x6f, 0xa6 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbe6f, gbc.sp());
        EXPECT(0x2f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02E5
        gbc.setState(0x7ed2, 0xb3e, 0x6bf0, 0x229e, 0x1d97, 0x7bc, 0x1, 0x1);
        gbc.writeMem(0x7ed2, { 0xd4, 0xe7, 0x4a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb3e, gbc.sp());
        EXPECT(0x7ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02E7
        gbc.setState(0x964f, 0xe4cb, 0x2030, 0xeee2, 0xd97b, 0x145d, 0x1, 0x0);
        gbc.writeMem(0x964f, { 0xd4, 0xf7, 0x86 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe4cb, gbc.sp());
        EXPECT(0x9652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x964f));
        EXPECT(0xf7, gbc.readMem(0x9650));
        EXPECT(0x86, gbc.readMem(0x9651));
        // D4 02E9
        gbc.setState(0x2ff1, 0xc0bf, 0xc180, 0x59bc, 0xc726, 0x1516, 0x0, 0x1);
        gbc.writeMem(0x2ff1, { 0xd4, 0xef, 0x35 });
        gbc.writeMem(0xc0bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc0bd, gbc.sp());
        EXPECT(0x35ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xc0bd));
        EXPECT(0x2f, gbc.readMem(0xc0be));
        // D4 02EA
        gbc.setState(0x34cf, 0xe079, 0xba10, 0xb1cb, 0x3274, 0x62bb, 0x1, 0x1);
        gbc.writeMem(0x34cf, { 0xd4, 0x33, 0x43 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe079, gbc.sp());
        EXPECT(0x34d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02EC
        gbc.setState(0x80c2, 0xb098, 0xa450, 0x5680, 0x8e2f, 0xed7e, 0x0, 0x0);
        gbc.writeMem(0x80c2, { 0xd4, 0xeb, 0xa9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb098, gbc.sp());
        EXPECT(0x80c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x80c2));
        EXPECT(0xeb, gbc.readMem(0x80c3));
        EXPECT(0xa9, gbc.readMem(0x80c4));
        // D4 02ED
        gbc.setState(0xe07d, 0x693d, 0x23b0, 0x6439, 0x3671, 0x1fa4, 0x1, 0x1);
        gbc.writeMem(0xe07d, { 0xd4, 0xb2, 0x64 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x693d, gbc.sp());
        EXPECT(0xe080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe07d));
        EXPECT(0xb2, gbc.readMem(0xe07e));
        EXPECT(0x64, gbc.readMem(0xe07f));
        // D4 02EE
        gbc.setState(0xd005, 0x80e4, 0x96c0, 0xada9, 0x24e5, 0x4730, 0x0, 0x0);
        gbc.writeMem(0x80e2, { 0x0, 0x0 });
        gbc.writeMem(0xd005, { 0xd4, 0x79, 0x52 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x80e2, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x80e2));
        EXPECT(0xd0, gbc.readMem(0x80e3));
        EXPECT(0xd4, gbc.readMem(0xd005));
        EXPECT(0x79, gbc.readMem(0xd006));
        EXPECT(0x52, gbc.readMem(0xd007));
        // D4 02EF
        gbc.setState(0x79ad, 0xb08c, 0x40f0, 0xa6ee, 0x5990, 0xe58e, 0x0, 0x1);
        gbc.writeMem(0x79ad, { 0xd4, 0x63, 0x60 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb08c, gbc.sp());
        EXPECT(0x79b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02F0
        gbc.setState(0xd3e3, 0x4526, 0xb7b0, 0xcd3a, 0x6421, 0x8c4e, 0x0, 0x0);
        gbc.writeMem(0xd3e3, { 0xd4, 0xe9, 0x3b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4526, gbc.sp());
        EXPECT(0xd3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd3e3));
        EXPECT(0xe9, gbc.readMem(0xd3e4));
        EXPECT(0x3b, gbc.readMem(0xd3e5));
        // D4 02F1
        gbc.setState(0x1947, 0x7751, 0xdb30, 0x5cc4, 0xc5b1, 0xbbc, 0x0, 0x1);
        gbc.writeMem(0x1947, { 0xd4, 0x89, 0x64 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7751, gbc.sp());
        EXPECT(0x194a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02F2
        gbc.setState(0x22c1, 0x6c5, 0x8b50, 0xbc82, 0xad5, 0x3f47, 0x1, 0x0);
        gbc.writeMem(0x22c1, { 0xd4, 0xaa, 0xf0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6c5, gbc.sp());
        EXPECT(0x22c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02F3
        gbc.setState(0x9d60, 0x1320, 0x6530, 0x711b, 0x6c88, 0xa856, 0x1, 0x0);
        gbc.writeMem(0x9d60, { 0xd4, 0x55, 0x23 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1320, gbc.sp());
        EXPECT(0x9d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9d60));
        EXPECT(0x55, gbc.readMem(0x9d61));
        EXPECT(0x23, gbc.readMem(0x9d62));
        // D4 02F4
        gbc.setState(0xdd4b, 0x2975, 0xdf90, 0xb37, 0x1c03, 0xa228, 0x1, 0x0);
        gbc.writeMem(0xdd4b, { 0xd4, 0x16, 0x4 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2975, gbc.sp());
        EXPECT(0xdd4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xdd4b));
        EXPECT(0x16, gbc.readMem(0xdd4c));
        EXPECT(0x4, gbc.readMem(0xdd4d));
        // D4 02F5
        gbc.setState(0xca7b, 0xcc43, 0xb4a0, 0x652a, 0xcd2, 0x44f2, 0x1, 0x1);
        gbc.writeMem(0xca7b, { 0xd4, 0xca, 0x88 });
        gbc.writeMem(0xcc41, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcc41, gbc.sp());
        EXPECT(0x88ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xca7b));
        EXPECT(0xca, gbc.readMem(0xca7c));
        EXPECT(0x88, gbc.readMem(0xca7d));
        EXPECT(0x7e, gbc.readMem(0xcc41));
        EXPECT(0xca, gbc.readMem(0xcc42));
        // D4 02F6
        gbc.setState(0x560e, 0xfa57, 0x8a90, 0xaaeb, 0x82f5, 0x3349, 0x1, 0x0);
        gbc.writeMem(0x560e, { 0xd4, 0x52, 0xca });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfa57, gbc.sp());
        EXPECT(0x5611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02F7
        gbc.setState(0x6cb3, 0xfb9, 0x1730, 0x334f, 0x7aa1, 0x2def, 0x1, 0x0);
        gbc.writeMem(0x6cb3, { 0xd4, 0xe4, 0x32 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfb9, gbc.sp());
        EXPECT(0x6cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02FA
        gbc.setState(0xa48b, 0xa9b8, 0x9e80, 0x151a, 0x287f, 0xd050, 0x0, 0x0);
        gbc.writeMem(0xa48b, { 0xd4, 0x45, 0xa7 });
        gbc.writeMem(0xa9b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa9b6, gbc.sp());
        EXPECT(0xa745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa48b));
        EXPECT(0x45, gbc.readMem(0xa48c));
        EXPECT(0xa7, gbc.readMem(0xa48d));
        EXPECT(0x8e, gbc.readMem(0xa9b6));
        EXPECT(0xa4, gbc.readMem(0xa9b7));
        // D4 02FB
        gbc.setState(0xd892, 0xd45b, 0xc6b0, 0x47c6, 0xfe13, 0xfe99, 0x0, 0x1);
        gbc.writeMem(0xd892, { 0xd4, 0x5e, 0xa4 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd45b, gbc.sp());
        EXPECT(0xd895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd892));
        EXPECT(0x5e, gbc.readMem(0xd893));
        EXPECT(0xa4, gbc.readMem(0xd894));
        // D4 02FC
        gbc.setState(0x28f9, 0x5309, 0x42b0, 0x3d76, 0x4196, 0xe15e, 0x1, 0x1);
        gbc.writeMem(0x28f9, { 0xd4, 0x18, 0x6b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5309, gbc.sp());
        EXPECT(0x28fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 02FD
        gbc.setState(0x9909, 0x60f1, 0x9170, 0xc93f, 0x517f, 0xd951, 0x1, 0x0);
        gbc.writeMem(0x9909, { 0xd4, 0x4f, 0xac });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x60f1, gbc.sp());
        EXPECT(0x990c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9909));
        EXPECT(0x4f, gbc.readMem(0x990a));
        EXPECT(0xac, gbc.readMem(0x990b));
        // D4 02FE
        gbc.setState(0x9d23, 0xc78e, 0x2b70, 0x9373, 0xb1e7, 0xd0cf, 0x1, 0x1);
        gbc.writeMem(0x9d23, { 0xd4, 0x50, 0x6b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc78e, gbc.sp());
        EXPECT(0x9d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9d23));
        EXPECT(0x50, gbc.readMem(0x9d24));
        EXPECT(0x6b, gbc.readMem(0x9d25));
        // D4 02FF
        gbc.setState(0x98c7, 0x9ad, 0x3d70, 0x23aa, 0x5511, 0x7f06, 0x1, 0x0);
        gbc.writeMem(0x98c7, { 0xd4, 0xf2, 0x80 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9ad, gbc.sp());
        EXPECT(0x98ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x98c7));
        EXPECT(0xf2, gbc.readMem(0x98c8));
        EXPECT(0x80, gbc.readMem(0x98c9));
        // D4 0300
        gbc.setState(0x272a, 0xa919, 0x17e0, 0x5643, 0xf282, 0x95c9, 0x1, 0x1);
        gbc.writeMem(0x272a, { 0xd4, 0x11, 0xdd });
        gbc.writeMem(0xa917, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa917, gbc.sp());
        EXPECT(0xdd11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa917));
        EXPECT(0x27, gbc.readMem(0xa918));
        // D4 0301
        gbc.setState(0x2a31, 0xff26, 0x9730, 0xa4a, 0x3b8a, 0xf2dc, 0x1, 0x1);
        gbc.writeMem(0x2a31, { 0xd4, 0xdc, 0x94 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xff26, gbc.sp());
        EXPECT(0x2a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0302
        gbc.setState(0x3ad6, 0xe04b, 0x7d70, 0xc658, 0xbf32, 0x4f00, 0x0, 0x0);
        gbc.writeMem(0x3ad6, { 0xd4, 0xdc, 0x55 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe04b, gbc.sp());
        EXPECT(0x3ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0303
        gbc.setState(0x3ad5, 0xc556, 0xb830, 0x464d, 0x8bf1, 0x3325, 0x0, 0x1);
        gbc.writeMem(0x3ad5, { 0xd4, 0x67, 0xdc });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc556, gbc.sp());
        EXPECT(0x3ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0304
        gbc.setState(0xaab6, 0xb303, 0x7ce0, 0xa426, 0x2def, 0xb0af, 0x0, 0x1);
        gbc.writeMem(0xaab6, { 0xd4, 0x50, 0x52 });
        gbc.writeMem(0xb301, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb301, gbc.sp());
        EXPECT(0x5250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xaab6));
        EXPECT(0x50, gbc.readMem(0xaab7));
        EXPECT(0x52, gbc.readMem(0xaab8));
        EXPECT(0xb9, gbc.readMem(0xb301));
        EXPECT(0xaa, gbc.readMem(0xb302));
        // D4 0305
        gbc.setState(0x3fcc, 0xfbdb, 0xabd0, 0xcb44, 0x4b3f, 0x5738, 0x1, 0x0);
        gbc.writeMem(0x3fcc, { 0xd4, 0x39, 0xf3 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfbdb, gbc.sp());
        EXPECT(0x3fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0307
        gbc.setState(0xae8f, 0x8034, 0xc580, 0x6ce6, 0x68f8, 0xc39a, 0x0, 0x0);
        gbc.writeMem(0x8032, { 0x0, 0x0 });
        gbc.writeMem(0xae8f, { 0xd4, 0x11, 0x18 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8032, gbc.sp());
        EXPECT(0x1811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8032));
        EXPECT(0xae, gbc.readMem(0x8033));
        EXPECT(0xd4, gbc.readMem(0xae8f));
        EXPECT(0x11, gbc.readMem(0xae90));
        EXPECT(0x18, gbc.readMem(0xae91));
        // D4 0308
        gbc.setState(0xc6fa, 0x9123, 0x26c0, 0xd10d, 0x4cd1, 0x8ba2, 0x0, 0x1);
        gbc.writeMem(0x9121, { 0x0, 0x0 });
        gbc.writeMem(0xc6fa, { 0xd4, 0xa9, 0xd });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9121, gbc.sp());
        EXPECT(0xda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9121));
        EXPECT(0xc6, gbc.readMem(0x9122));
        EXPECT(0xd4, gbc.readMem(0xc6fa));
        EXPECT(0xa9, gbc.readMem(0xc6fb));
        EXPECT(0xd, gbc.readMem(0xc6fc));
        // D4 030A
        gbc.setState(0x429a, 0x376b, 0xbe70, 0x51c2, 0xba13, 0xeef5, 0x1, 0x1);
        gbc.writeMem(0x429a, { 0xd4, 0xa7, 0xc5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x376b, gbc.sp());
        EXPECT(0x429d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 030B
        gbc.setState(0x8181, 0xb5c4, 0xa300, 0x2cf4, 0xcb50, 0x8409, 0x1, 0x1);
        gbc.writeMem(0x8181, { 0xd4, 0x6e, 0xeb });
        gbc.writeMem(0xb5c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb5c2, gbc.sp());
        EXPECT(0xeb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8181));
        EXPECT(0x6e, gbc.readMem(0x8182));
        EXPECT(0xeb, gbc.readMem(0x8183));
        EXPECT(0x84, gbc.readMem(0xb5c2));
        EXPECT(0x81, gbc.readMem(0xb5c3));
        // D4 030C
        gbc.setState(0x3f60, 0xe2ad, 0x6350, 0xf1db, 0x46c5, 0xcf44, 0x1, 0x0);
        gbc.writeMem(0x3f60, { 0xd4, 0xe9, 0xfc });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe2ad, gbc.sp());
        EXPECT(0x3f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 030D
        gbc.setState(0x1745, 0xa5fd, 0x4320, 0xe8f8, 0x7b59, 0x4be6, 0x1, 0x1);
        gbc.writeMem(0x1745, { 0xd4, 0xf6, 0xed });
        gbc.writeMem(0xa5fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa5fb, gbc.sp());
        EXPECT(0xedf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa5fb));
        EXPECT(0x17, gbc.readMem(0xa5fc));
        // D4 030E
        gbc.setState(0xba2, 0xa92b, 0xbf0, 0x5b8b, 0x2ef3, 0xc876, 0x1, 0x0);
        gbc.writeMem(0xba2, { 0xd4, 0x6a, 0x4f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa92b, gbc.sp());
        EXPECT(0xba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 030F
        gbc.setState(0x3ca9, 0xf1be, 0x4f40, 0x9be6, 0x90b0, 0x2837, 0x0, 0x0);
        gbc.writeMem(0x3ca9, { 0xd4, 0x13, 0xe3 });
        gbc.writeMem(0xf1bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf1bc, gbc.sp());
        EXPECT(0xe313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xf1bc));
        EXPECT(0x3c, gbc.readMem(0xf1bd));
        // D4 0310
        gbc.setState(0x2f41, 0x49e3, 0x6e90, 0x357d, 0xff3f, 0x44f7, 0x0, 0x1);
        gbc.writeMem(0x2f41, { 0xd4, 0x49, 0xb5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x49e3, gbc.sp());
        EXPECT(0x2f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0311
        gbc.setState(0x6261, 0xa16a, 0xea10, 0x5b82, 0x4eec, 0x50e8, 0x0, 0x0);
        gbc.writeMem(0x6261, { 0xd4, 0x26, 0x19 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa16a, gbc.sp());
        EXPECT(0x6264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0312
        gbc.setState(0x6080, 0xf44, 0x1e10, 0x49e3, 0x56db, 0x8a53, 0x1, 0x1);
        gbc.writeMem(0x6080, { 0xd4, 0xb0, 0x6c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf44, gbc.sp());
        EXPECT(0x6083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0313
        gbc.setState(0x7098, 0xa08e, 0xedd0, 0xf0cd, 0x3712, 0x768b, 0x1, 0x1);
        gbc.writeMem(0x7098, { 0xd4, 0x7f, 0xc9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa08e, gbc.sp());
        EXPECT(0x709b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0314
        gbc.setState(0xe65f, 0xaf75, 0x1c70, 0x1c5b, 0xd0cb, 0x68b1, 0x1, 0x1);
        gbc.writeMem(0xe65f, { 0xd4, 0xc2, 0xaf });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaf75, gbc.sp());
        EXPECT(0xe662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe65f));
        EXPECT(0xc2, gbc.readMem(0xe660));
        EXPECT(0xaf, gbc.readMem(0xe661));
        // D4 0316
        gbc.setState(0x4cca, 0x1cbf, 0xa610, 0x452b, 0xb61e, 0x3a64, 0x1, 0x0);
        gbc.writeMem(0x4cca, { 0xd4, 0x3b, 0xb2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1cbf, gbc.sp());
        EXPECT(0x4ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0317
        gbc.setState(0xabbc, 0xabf0, 0x7630, 0x5e23, 0x324a, 0x961, 0x0, 0x0);
        gbc.writeMem(0xabbc, { 0xd4, 0x4e, 0xcf });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xabf0, gbc.sp());
        EXPECT(0xabbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xabbc));
        EXPECT(0x4e, gbc.readMem(0xabbd));
        EXPECT(0xcf, gbc.readMem(0xabbe));
        // D4 031A
        gbc.setState(0x3d39, 0x1fb4, 0x2230, 0x28b3, 0xc9eb, 0x5b2, 0x0, 0x1);
        gbc.writeMem(0x3d39, { 0xd4, 0x7e, 0x8d });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1fb4, gbc.sp());
        EXPECT(0x3d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 031B
        gbc.setState(0x673d, 0x6551, 0x2b0, 0xffba, 0xa544, 0xc4d6, 0x0, 0x0);
        gbc.writeMem(0x673d, { 0xd4, 0x66, 0x55 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6551, gbc.sp());
        EXPECT(0x6740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 031C
        gbc.setState(0x41f4, 0x5834, 0x5710, 0x7e8a, 0x68aa, 0x8f4d, 0x0, 0x0);
        gbc.writeMem(0x41f4, { 0xd4, 0x41, 0x9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5834, gbc.sp());
        EXPECT(0x41f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 031E
        gbc.setState(0x35d4, 0xc04e, 0x90c0, 0xa62, 0x2cf2, 0x473, 0x0, 0x0);
        gbc.writeMem(0x35d4, { 0xd4, 0x8c, 0x20 });
        gbc.writeMem(0xc04c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc04c, gbc.sp());
        EXPECT(0x208c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xc04c));
        EXPECT(0x35, gbc.readMem(0xc04d));
        // D4 031F
        gbc.setState(0xb9ed, 0xc05c, 0x1780, 0x1a8e, 0x650c, 0xc46b, 0x1, 0x0);
        gbc.writeMem(0xb9ed, { 0xd4, 0xbf, 0x23 });
        gbc.writeMem(0xc05a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc05a, gbc.sp());
        EXPECT(0x23bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb9ed));
        EXPECT(0xbf, gbc.readMem(0xb9ee));
        EXPECT(0x23, gbc.readMem(0xb9ef));
        EXPECT(0xf0, gbc.readMem(0xc05a));
        EXPECT(0xb9, gbc.readMem(0xc05b));
        // D4 0321
        gbc.setState(0x8412, 0xd059, 0x550, 0x295f, 0x3217, 0x638c, 0x1, 0x0);
        gbc.writeMem(0x8412, { 0xd4, 0xb7, 0x43 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd059, gbc.sp());
        EXPECT(0x8415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8412));
        EXPECT(0xb7, gbc.readMem(0x8413));
        EXPECT(0x43, gbc.readMem(0x8414));
        // D4 0325
        gbc.setState(0x14ff, 0x253f, 0x8870, 0x470b, 0x76d6, 0xa31e, 0x0, 0x0);
        gbc.writeMem(0x14ff, { 0xd4, 0x71, 0x8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x253f, gbc.sp());
        EXPECT(0x1502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0326
        gbc.setState(0xba83, 0x1ccc, 0xbbb0, 0x84be, 0x83a4, 0xa951, 0x0, 0x0);
        gbc.writeMem(0xba83, { 0xd4, 0x9d, 0x76 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1ccc, gbc.sp());
        EXPECT(0xba86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xba83));
        EXPECT(0x9d, gbc.readMem(0xba84));
        EXPECT(0x76, gbc.readMem(0xba85));
        // D4 0327
        gbc.setState(0xc732, 0xe80f, 0x4a90, 0x1765, 0xec54, 0x6d20, 0x1, 0x1);
        gbc.writeMem(0xc732, { 0xd4, 0x35, 0x7a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe80f, gbc.sp());
        EXPECT(0xc735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc732));
        EXPECT(0x35, gbc.readMem(0xc733));
        EXPECT(0x7a, gbc.readMem(0xc734));
        // D4 0328
        gbc.setState(0x6ae8, 0x8a15, 0x1790, 0xcd9a, 0xfa90, 0xa41d, 0x1, 0x0);
        gbc.writeMem(0x6ae8, { 0xd4, 0x7f, 0x64 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8a15, gbc.sp());
        EXPECT(0x6aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0329
        gbc.setState(0x8800, 0x3bfa, 0x2750, 0x2049, 0x52cb, 0x8098, 0x1, 0x1);
        gbc.writeMem(0x8800, { 0xd4, 0xbe, 0x28 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3bfa, gbc.sp());
        EXPECT(0x8803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8800));
        EXPECT(0xbe, gbc.readMem(0x8801));
        EXPECT(0x28, gbc.readMem(0x8802));
        // D4 032A
        gbc.setState(0xdd, 0xd571, 0x8c30, 0x7bf7, 0x5a08, 0x77a5, 0x1, 0x0);
        gbc.writeMem(0xdd, { 0xd4, 0xe0, 0xa });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd571, gbc.sp());
        EXPECT(0xe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 032B
        gbc.setState(0xe020, 0x4f9a, 0xfd50, 0x1fac, 0x6794, 0xa0ea, 0x0, 0x1);
        gbc.writeMem(0xe020, { 0xd4, 0xff, 0xbd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4f9a, gbc.sp());
        EXPECT(0xe023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe020));
        EXPECT(0xff, gbc.readMem(0xe021));
        EXPECT(0xbd, gbc.readMem(0xe022));
        // D4 032C
        gbc.setState(0xe8f7, 0xff7f, 0x40c0, 0xc6b8, 0x9767, 0x4164, 0x0, 0x1);
        gbc.writeMem(0xe8f7, { 0xd4, 0x0, 0x4b });
        gbc.writeMem(0xff7d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xff7d, gbc.sp());
        EXPECT(0x4b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe8f7));
        EXPECT(0x0, gbc.readMem(0xe8f8));
        EXPECT(0x4b, gbc.readMem(0xe8f9));
        EXPECT(0xfa, gbc.readMem(0xff7d));
        EXPECT(0xe8, gbc.readMem(0xff7e));
        // D4 032E
        gbc.setState(0x928a, 0xd80b, 0x2870, 0x3ba5, 0x19da, 0xed1b, 0x0, 0x1);
        gbc.writeMem(0x928a, { 0xd4, 0xeb, 0x58 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd80b, gbc.sp());
        EXPECT(0x928d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x928a));
        EXPECT(0xeb, gbc.readMem(0x928b));
        EXPECT(0x58, gbc.readMem(0x928c));
        // D4 0330
        gbc.setState(0xb955, 0xe547, 0xf2a0, 0xbd77, 0x79cd, 0xa659, 0x1, 0x0);
        gbc.writeMem(0xb955, { 0xd4, 0xe5, 0x96 });
        gbc.writeMem(0xe545, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe545, gbc.sp());
        EXPECT(0x96e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb955));
        EXPECT(0xe5, gbc.readMem(0xb956));
        EXPECT(0x96, gbc.readMem(0xb957));
        EXPECT(0x58, gbc.readMem(0xe545));
        EXPECT(0xb9, gbc.readMem(0xe546));
        // D4 0333
        gbc.setState(0xbc2d, 0x7b41, 0x2670, 0xe75a, 0x792e, 0x10ea, 0x0, 0x1);
        gbc.writeMem(0xbc2d, { 0xd4, 0xe0, 0x83 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7b41, gbc.sp());
        EXPECT(0xbc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbc2d));
        EXPECT(0xe0, gbc.readMem(0xbc2e));
        EXPECT(0x83, gbc.readMem(0xbc2f));
        // D4 0334
        gbc.setState(0xd3fb, 0xe964, 0xc440, 0xe173, 0xbba3, 0x930a, 0x0, 0x0);
        gbc.writeMem(0xd3fb, { 0xd4, 0xa6, 0x50 });
        gbc.writeMem(0xe962, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe962, gbc.sp());
        EXPECT(0x50a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd3fb));
        EXPECT(0xa6, gbc.readMem(0xd3fc));
        EXPECT(0x50, gbc.readMem(0xd3fd));
        EXPECT(0xfe, gbc.readMem(0xe962));
        EXPECT(0xd3, gbc.readMem(0xe963));
        // D4 0335
        gbc.setState(0x6e01, 0xad1a, 0xd30, 0x94eb, 0xc9bf, 0xbb32, 0x0, 0x1);
        gbc.writeMem(0x6e01, { 0xd4, 0x43, 0xfc });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xad1a, gbc.sp());
        EXPECT(0x6e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0336
        gbc.setState(0xb6d, 0x8ad0, 0x24e0, 0x1b94, 0x821d, 0xee84, 0x0, 0x1);
        gbc.writeMem(0xb6d, { 0xd4, 0x4f, 0x27 });
        gbc.writeMem(0x8ace, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8ace, gbc.sp());
        EXPECT(0x274f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x8ace));
        EXPECT(0xb, gbc.readMem(0x8acf));
        // D4 0338
        gbc.setState(0xcb6c, 0x80f6, 0xea40, 0x86b, 0xd3be, 0x8a49, 0x0, 0x0);
        gbc.writeMem(0x80f4, { 0x0, 0x0 });
        gbc.writeMem(0xcb6c, { 0xd4, 0x6f, 0xa9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x80f4, gbc.sp());
        EXPECT(0xa96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x80f4));
        EXPECT(0xcb, gbc.readMem(0x80f5));
        EXPECT(0xd4, gbc.readMem(0xcb6c));
        EXPECT(0x6f, gbc.readMem(0xcb6d));
        EXPECT(0xa9, gbc.readMem(0xcb6e));
        // D4 0339
        gbc.setState(0x851a, 0xb9a8, 0xff20, 0xf92c, 0xd860, 0x3270, 0x1, 0x1);
        gbc.writeMem(0x851a, { 0xd4, 0x56, 0x9c });
        gbc.writeMem(0xb9a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb9a6, gbc.sp());
        EXPECT(0x9c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x851a));
        EXPECT(0x56, gbc.readMem(0x851b));
        EXPECT(0x9c, gbc.readMem(0x851c));
        EXPECT(0x1d, gbc.readMem(0xb9a6));
        EXPECT(0x85, gbc.readMem(0xb9a7));
        // D4 033A
        gbc.setState(0xedc, 0xfe16, 0x51e0, 0xb446, 0x442, 0x19b2, 0x1, 0x0);
        gbc.writeMem(0xedc, { 0xd4, 0x4f, 0xd1 });
        gbc.writeMem(0xfe14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfe14, gbc.sp());
        EXPECT(0xd14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xfe14));
        EXPECT(0xe, gbc.readMem(0xfe15));
        // D4 033B
        gbc.setState(0x8218, 0xeed7, 0xbc90, 0xf3a1, 0xf439, 0x95bd, 0x0, 0x0);
        gbc.writeMem(0x8218, { 0xd4, 0x27, 0x7a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xeed7, gbc.sp());
        EXPECT(0x821b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8218));
        EXPECT(0x27, gbc.readMem(0x8219));
        EXPECT(0x7a, gbc.readMem(0x821a));
        // D4 033C
        gbc.setState(0x1cfb, 0x31a5, 0xb190, 0x5758, 0x40d4, 0x1f4e, 0x0, 0x1);
        gbc.writeMem(0x1cfb, { 0xd4, 0x7e, 0x33 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x31a5, gbc.sp());
        EXPECT(0x1cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 033E
        gbc.setState(0x9012, 0x2658, 0x2970, 0xc734, 0x4a28, 0x7430, 0x0, 0x0);
        gbc.writeMem(0x9012, { 0xd4, 0x1f, 0x26 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2658, gbc.sp());
        EXPECT(0x9015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9012));
        EXPECT(0x1f, gbc.readMem(0x9013));
        EXPECT(0x26, gbc.readMem(0x9014));
        // D4 0340
        gbc.setState(0x4bd8, 0x434f, 0x4190, 0xf59f, 0x394b, 0x55e9, 0x0, 0x1);
        gbc.writeMem(0x4bd8, { 0xd4, 0xf0, 0xb7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x434f, gbc.sp());
        EXPECT(0x4bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0341
        gbc.setState(0x449a, 0xa414, 0x72e0, 0x805e, 0x2d3b, 0x9c1a, 0x1, 0x1);
        gbc.writeMem(0x449a, { 0xd4, 0xe4, 0xe4 });
        gbc.writeMem(0xa412, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa412, gbc.sp());
        EXPECT(0xe4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xa412));
        EXPECT(0x44, gbc.readMem(0xa413));
        // D4 0343
        gbc.setState(0x9093, 0xd7e4, 0x9350, 0x617f, 0x6264, 0x9820, 0x1, 0x0);
        gbc.writeMem(0x9093, { 0xd4, 0xe0, 0x5c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd7e4, gbc.sp());
        EXPECT(0x9096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9093));
        EXPECT(0xe0, gbc.readMem(0x9094));
        EXPECT(0x5c, gbc.readMem(0x9095));
        // D4 0345
        gbc.setState(0x7e7e, 0xb49e, 0xd90, 0x539b, 0xdb7e, 0x2093, 0x0, 0x0);
        gbc.writeMem(0x7e7e, { 0xd4, 0x26, 0x57 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb49e, gbc.sp());
        EXPECT(0x7e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0346
        gbc.setState(0x9c89, 0xcff, 0x1810, 0x759d, 0x2f4e, 0x1624, 0x0, 0x1);
        gbc.writeMem(0x9c89, { 0xd4, 0x7e, 0x74 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcff, gbc.sp());
        EXPECT(0x9c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9c89));
        EXPECT(0x7e, gbc.readMem(0x9c8a));
        EXPECT(0x74, gbc.readMem(0x9c8b));
        // D4 0347
        gbc.setState(0xb0b4, 0x9e6b, 0x7740, 0xfb70, 0x6d02, 0x60c9, 0x0, 0x0);
        gbc.writeMem(0x9e69, { 0x0, 0x0 });
        gbc.writeMem(0xb0b4, { 0xd4, 0x21, 0x7d });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9e69, gbc.sp());
        EXPECT(0x7d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x9e69));
        EXPECT(0xb0, gbc.readMem(0x9e6a));
        EXPECT(0xd4, gbc.readMem(0xb0b4));
        EXPECT(0x21, gbc.readMem(0xb0b5));
        EXPECT(0x7d, gbc.readMem(0xb0b6));
        // D4 0348
        gbc.setState(0x5fcd, 0xbfdf, 0xdfc0, 0x468a, 0x6dd2, 0x58c9, 0x0, 0x0);
        gbc.writeMem(0x5fcd, { 0xd4, 0x87, 0x8d });
        gbc.writeMem(0xbfdd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbfdd, gbc.sp());
        EXPECT(0x8d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbfdd));
        EXPECT(0x5f, gbc.readMem(0xbfde));
        // D4 034A
        gbc.setState(0x852a, 0xc0e7, 0x9d00, 0x1eb5, 0x64ad, 0xf5e1, 0x1, 0x1);
        gbc.writeMem(0x852a, { 0xd4, 0x2a, 0xab });
        gbc.writeMem(0xc0e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc0e5, gbc.sp());
        EXPECT(0xab2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x852a));
        EXPECT(0x2a, gbc.readMem(0x852b));
        EXPECT(0xab, gbc.readMem(0x852c));
        EXPECT(0x2d, gbc.readMem(0xc0e5));
        EXPECT(0x85, gbc.readMem(0xc0e6));
        // D4 034B
        gbc.setState(0xa616, 0xe032, 0x66c0, 0xfda3, 0x611c, 0x69e4, 0x1, 0x1);
        gbc.writeMem(0xa616, { 0xd4, 0xc8, 0xfb });
        gbc.writeMem(0xe030, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe030, gbc.sp());
        EXPECT(0xfbc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa616));
        EXPECT(0xc8, gbc.readMem(0xa617));
        EXPECT(0xfb, gbc.readMem(0xa618));
        EXPECT(0x19, gbc.readMem(0xe030));
        EXPECT(0xa6, gbc.readMem(0xe031));
        // D4 034D
        gbc.setState(0x11e8, 0x81c8, 0xc060, 0x6a50, 0x7471, 0x67a9, 0x1, 0x0);
        gbc.writeMem(0x11e8, { 0xd4, 0xc6, 0xc8 });
        gbc.writeMem(0x81c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x81c6, gbc.sp());
        EXPECT(0xc8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x81c6));
        EXPECT(0x11, gbc.readMem(0x81c7));
        // D4 034F
        gbc.setState(0x6248, 0xc29f, 0xc9d0, 0xbf56, 0x1b32, 0x8f18, 0x1, 0x1);
        gbc.writeMem(0x6248, { 0xd4, 0x41, 0xcb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc29f, gbc.sp());
        EXPECT(0x624b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0350
        gbc.setState(0xc65f, 0xb626, 0xc630, 0xaff0, 0x7dfc, 0x5f1b, 0x1, 0x1);
        gbc.writeMem(0xc65f, { 0xd4, 0x1c, 0x12 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb626, gbc.sp());
        EXPECT(0xc662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc65f));
        EXPECT(0x1c, gbc.readMem(0xc660));
        EXPECT(0x12, gbc.readMem(0xc661));
        // D4 0351
        gbc.setState(0x3da3, 0x8e42, 0x7b60, 0x557d, 0xef41, 0xeb8d, 0x0, 0x0);
        gbc.writeMem(0x3da3, { 0xd4, 0xe0, 0x5a });
        gbc.writeMem(0x8e40, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8e40, gbc.sp());
        EXPECT(0x5ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8e40));
        EXPECT(0x3d, gbc.readMem(0x8e41));
        // D4 0353
        gbc.setState(0x341a, 0x8b30, 0xde20, 0x93cd, 0xbac3, 0xbff6, 0x1, 0x0);
        gbc.writeMem(0x341a, { 0xd4, 0xac, 0x6c });
        gbc.writeMem(0x8b2e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8b2e, gbc.sp());
        EXPECT(0x6cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8b2e));
        EXPECT(0x34, gbc.readMem(0x8b2f));
        // D4 0354
        gbc.setState(0x34f9, 0xb925, 0xfdf0, 0x924b, 0x4089, 0xccb4, 0x1, 0x1);
        gbc.writeMem(0x34f9, { 0xd4, 0x79, 0xeb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb925, gbc.sp());
        EXPECT(0x34fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0356
        gbc.setState(0xd776, 0xda41, 0x6cd0, 0xe2cc, 0xb8eb, 0x6a32, 0x1, 0x0);
        gbc.writeMem(0xd776, { 0xd4, 0x59, 0x69 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xda41, gbc.sp());
        EXPECT(0xd779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd776));
        EXPECT(0x59, gbc.readMem(0xd777));
        EXPECT(0x69, gbc.readMem(0xd778));
        // D4 0359
        gbc.setState(0xa22, 0x3fcf, 0xb650, 0x9ef3, 0xd8ab, 0xaf1c, 0x1, 0x0);
        gbc.writeMem(0xa22, { 0xd4, 0x4f, 0xae });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3fcf, gbc.sp());
        EXPECT(0xa25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 035A
        gbc.setState(0xe10c, 0x72db, 0x8a30, 0x107d, 0x2325, 0x480f, 0x1, 0x1);
        gbc.writeMem(0xe10c, { 0xd4, 0xbf, 0x91 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x72db, gbc.sp());
        EXPECT(0xe10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe10c));
        EXPECT(0xbf, gbc.readMem(0xe10d));
        EXPECT(0x91, gbc.readMem(0xe10e));
        // D4 035B
        gbc.setState(0xaa20, 0xecc7, 0x9d30, 0x1b51, 0xbfed, 0xcfd5, 0x1, 0x0);
        gbc.writeMem(0xaa20, { 0xd4, 0xba, 0xa8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xecc7, gbc.sp());
        EXPECT(0xaa23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xaa20));
        EXPECT(0xba, gbc.readMem(0xaa21));
        EXPECT(0xa8, gbc.readMem(0xaa22));
        // D4 035C
        gbc.setState(0xc12e, 0xa506, 0x9400, 0xc1e2, 0x1d69, 0x537, 0x0, 0x0);
        gbc.writeMem(0xa504, { 0x0, 0x0 });
        gbc.writeMem(0xc12e, { 0xd4, 0x52, 0x90 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa504, gbc.sp());
        EXPECT(0x9052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa504));
        EXPECT(0xc1, gbc.readMem(0xa505));
        EXPECT(0xd4, gbc.readMem(0xc12e));
        EXPECT(0x52, gbc.readMem(0xc12f));
        EXPECT(0x90, gbc.readMem(0xc130));
        // D4 035D
        gbc.setState(0xee3c, 0xb0e4, 0xeb20, 0x198, 0x4031, 0xdfcd, 0x1, 0x0);
        gbc.writeMem(0xb0e2, { 0x0, 0x0 });
        gbc.writeMem(0xee3c, { 0xd4, 0x41, 0x69 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb0e2, gbc.sp());
        EXPECT(0x6941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xb0e2));
        EXPECT(0xee, gbc.readMem(0xb0e3));
        EXPECT(0xd4, gbc.readMem(0xee3c));
        EXPECT(0x41, gbc.readMem(0xee3d));
        EXPECT(0x69, gbc.readMem(0xee3e));
        // D4 035F
        gbc.setState(0xb3c4, 0xa758, 0x30a0, 0xfa4a, 0x6430, 0xf89b, 0x0, 0x0);
        gbc.writeMem(0xa756, { 0x0, 0x0 });
        gbc.writeMem(0xb3c4, { 0xd4, 0xcd, 0x2b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa756, gbc.sp());
        EXPECT(0x2bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa756));
        EXPECT(0xb3, gbc.readMem(0xa757));
        EXPECT(0xd4, gbc.readMem(0xb3c4));
        EXPECT(0xcd, gbc.readMem(0xb3c5));
        EXPECT(0x2b, gbc.readMem(0xb3c6));
        // D4 0360
        gbc.setState(0xcf40, 0xa03d, 0xb370, 0x43a4, 0xc848, 0x82b2, 0x1, 0x0);
        gbc.writeMem(0xcf40, { 0xd4, 0x85, 0x6f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa03d, gbc.sp());
        EXPECT(0xcf43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xcf40));
        EXPECT(0x85, gbc.readMem(0xcf41));
        EXPECT(0x6f, gbc.readMem(0xcf42));
        // D4 0362
        gbc.setState(0x6f60, 0xf8dc, 0xee30, 0xeb45, 0x4, 0xb0af, 0x0, 0x0);
        gbc.writeMem(0x6f60, { 0xd4, 0x14, 0xdb });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf8dc, gbc.sp());
        EXPECT(0x6f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0364
        gbc.setState(0xeaaf, 0xd635, 0xb50, 0x1e3d, 0xd2fa, 0x17ad, 0x1, 0x0);
        gbc.writeMem(0xeaaf, { 0xd4, 0x33, 0xd1 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd635, gbc.sp());
        EXPECT(0xeab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xeaaf));
        EXPECT(0x33, gbc.readMem(0xeab0));
        EXPECT(0xd1, gbc.readMem(0xeab1));
        // D4 0365
        gbc.setState(0x7a72, 0x7d8, 0xd510, 0x6d61, 0xe144, 0x44e, 0x1, 0x0);
        gbc.writeMem(0x7a72, { 0xd4, 0x58, 0x4d });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7d8, gbc.sp());
        EXPECT(0x7a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0366
        gbc.setState(0xcac7, 0xa61e, 0x30, 0x8593, 0xee5c, 0x85d7, 0x1, 0x0);
        gbc.writeMem(0xcac7, { 0xd4, 0xc1, 0xf7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa61e, gbc.sp());
        EXPECT(0xcaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xcac7));
        EXPECT(0xc1, gbc.readMem(0xcac8));
        EXPECT(0xf7, gbc.readMem(0xcac9));
        // D4 0368
        gbc.setState(0xbff5, 0xf25c, 0xcbd0, 0x66ad, 0x81e6, 0x2031, 0x1, 0x1);
        gbc.writeMem(0xbff5, { 0xd4, 0x62, 0x5c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf25c, gbc.sp());
        EXPECT(0xbff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xbff5));
        EXPECT(0x62, gbc.readMem(0xbff6));
        EXPECT(0x5c, gbc.readMem(0xbff7));
        // D4 036A
        gbc.setState(0x26c5, 0x2436, 0xfeb0, 0x460e, 0x8d64, 0x99a7, 0x0, 0x1);
        gbc.writeMem(0x26c5, { 0xd4, 0xb2, 0x24 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2436, gbc.sp());
        EXPECT(0x26c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 036B
        gbc.setState(0xd824, 0x12ea, 0x710, 0x3d1, 0xa40, 0x6bee, 0x0, 0x0);
        gbc.writeMem(0xd824, { 0xd4, 0xa1, 0x3b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0xd827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd824));
        EXPECT(0xa1, gbc.readMem(0xd825));
        EXPECT(0x3b, gbc.readMem(0xd826));
        // D4 036C
        gbc.setState(0x29a9, 0x702c, 0x7d30, 0xbd33, 0xf44c, 0xd0e, 0x0, 0x1);
        gbc.writeMem(0x29a9, { 0xd4, 0x9b, 0x8a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x702c, gbc.sp());
        EXPECT(0x29ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 036E
        gbc.setState(0xd663, 0x7656, 0xd270, 0x2151, 0xe2bd, 0x6664, 0x0, 0x0);
        gbc.writeMem(0xd663, { 0xd4, 0x75, 0xc });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7656, gbc.sp());
        EXPECT(0xd666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd663));
        EXPECT(0x75, gbc.readMem(0xd664));
        EXPECT(0xc, gbc.readMem(0xd665));
        // D4 036F
        gbc.setState(0xc2a3, 0xa254, 0xd200, 0xa88f, 0xd5ed, 0x2767, 0x1, 0x0);
        gbc.writeMem(0xa252, { 0x0, 0x0 });
        gbc.writeMem(0xc2a3, { 0xd4, 0xc2, 0x82 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa252, gbc.sp());
        EXPECT(0x82c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xa252));
        EXPECT(0xc2, gbc.readMem(0xa253));
        EXPECT(0xd4, gbc.readMem(0xc2a3));
        EXPECT(0xc2, gbc.readMem(0xc2a4));
        EXPECT(0x82, gbc.readMem(0xc2a5));
        // D4 0370
        gbc.setState(0xe438, 0x30c9, 0xca10, 0x7034, 0xad5, 0xe231, 0x0, 0x0);
        gbc.writeMem(0xe438, { 0xd4, 0x64, 0x3 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x30c9, gbc.sp());
        EXPECT(0xe43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe438));
        EXPECT(0x64, gbc.readMem(0xe439));
        EXPECT(0x3, gbc.readMem(0xe43a));
        // D4 0371
        gbc.setState(0x622c, 0x9b1a, 0x2de0, 0xc99a, 0x279b, 0xa80, 0x0, 0x0);
        gbc.writeMem(0x622c, { 0xd4, 0x1c, 0x4 });
        gbc.writeMem(0x9b18, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9b18, gbc.sp());
        EXPECT(0x41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x9b18));
        EXPECT(0x62, gbc.readMem(0x9b19));
        // D4 0373
        gbc.setState(0x45b9, 0xf1f7, 0x71d0, 0xe2d7, 0x2377, 0xfd71, 0x1, 0x1);
        gbc.writeMem(0x45b9, { 0xd4, 0xe5, 0x7e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf1f7, gbc.sp());
        EXPECT(0x45bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0375
        gbc.setState(0xef89, 0xed31, 0x2e80, 0x3d25, 0x2938, 0xe21, 0x1, 0x1);
        gbc.writeMem(0xed2f, { 0x0, 0x0 });
        gbc.writeMem(0xef89, { 0xd4, 0x64, 0xc1 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xed2f, gbc.sp());
        EXPECT(0xc164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xed2f));
        EXPECT(0xef, gbc.readMem(0xed30));
        EXPECT(0xd4, gbc.readMem(0xef89));
        EXPECT(0x64, gbc.readMem(0xef8a));
        EXPECT(0xc1, gbc.readMem(0xef8b));
        // D4 0376
        gbc.setState(0x3ffb, 0x5992, 0x330, 0xa181, 0xbcd3, 0x5640, 0x1, 0x0);
        gbc.writeMem(0x3ffb, { 0xd4, 0xf6, 0x8a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5992, gbc.sp());
        EXPECT(0x3ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0378
        gbc.setState(0x8f9c, 0x89f5, 0x9250, 0x231a, 0xd9de, 0xec97, 0x0, 0x0);
        gbc.writeMem(0x8f9c, { 0xd4, 0x86, 0x32 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x89f5, gbc.sp());
        EXPECT(0x8f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8f9c));
        EXPECT(0x86, gbc.readMem(0x8f9d));
        EXPECT(0x32, gbc.readMem(0x8f9e));
        // D4 0379
        gbc.setState(0xdc6f, 0xea78, 0x8ff0, 0xbedd, 0x76eb, 0x3034, 0x1, 0x0);
        gbc.writeMem(0xdc6f, { 0xd4, 0x25, 0x1e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xea78, gbc.sp());
        EXPECT(0xdc72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xdc6f));
        EXPECT(0x25, gbc.readMem(0xdc70));
        EXPECT(0x1e, gbc.readMem(0xdc71));
        // D4 037A
        gbc.setState(0x7b60, 0xe651, 0x33c0, 0x16ff, 0xea14, 0x3734, 0x1, 0x0);
        gbc.writeMem(0x7b60, { 0xd4, 0x7d, 0xbe });
        gbc.writeMem(0xe64f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe64f, gbc.sp());
        EXPECT(0xbe7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xe64f));
        EXPECT(0x7b, gbc.readMem(0xe650));
        // D4 037B
        gbc.setState(0xdc1c, 0x9f2b, 0x2080, 0xe29a, 0x16b9, 0x3728, 0x0, 0x0);
        gbc.writeMem(0x9f29, { 0x0, 0x0 });
        gbc.writeMem(0xdc1c, { 0xd4, 0xd6, 0x31 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9f29, gbc.sp());
        EXPECT(0x31d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x9f29));
        EXPECT(0xdc, gbc.readMem(0x9f2a));
        EXPECT(0xd4, gbc.readMem(0xdc1c));
        EXPECT(0xd6, gbc.readMem(0xdc1d));
        EXPECT(0x31, gbc.readMem(0xdc1e));
        // D4 037C
        gbc.setState(0x4282, 0xb9d2, 0x7e10, 0x2ad8, 0xf5cc, 0xe9fb, 0x1, 0x1);
        gbc.writeMem(0x4282, { 0xd4, 0x8e, 0x6c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb9d2, gbc.sp());
        EXPECT(0x4285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 037D
        gbc.setState(0xa5bf, 0x22c5, 0x57d0, 0xcfd9, 0x22d0, 0x72b2, 0x1, 0x1);
        gbc.writeMem(0xa5bf, { 0xd4, 0x2c, 0x16 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x22c5, gbc.sp());
        EXPECT(0xa5c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa5bf));
        EXPECT(0x2c, gbc.readMem(0xa5c0));
        EXPECT(0x16, gbc.readMem(0xa5c1));
        // D4 037F
        gbc.setState(0x7627, 0xef87, 0x7820, 0xbac8, 0xf817, 0x35bb, 0x1, 0x0);
        gbc.writeMem(0x7627, { 0xd4, 0xd4, 0xbf });
        gbc.writeMem(0xef85, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xef85, gbc.sp());
        EXPECT(0xbfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xef85));
        EXPECT(0x76, gbc.readMem(0xef86));
        // D4 0381
        gbc.setState(0x769e, 0xa7d2, 0xcf20, 0x512c, 0xf9ea, 0x3281, 0x1, 0x0);
        gbc.writeMem(0x769e, { 0xd4, 0xca, 0x60 });
        gbc.writeMem(0xa7d0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa7d0, gbc.sp());
        EXPECT(0x60ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa7d0));
        EXPECT(0x76, gbc.readMem(0xa7d1));
        // D4 0382
        gbc.setState(0x8276, 0xd68f, 0x4f80, 0xce1f, 0x3594, 0x1269, 0x1, 0x1);
        gbc.writeMem(0x8276, { 0xd4, 0x37, 0x27 });
        gbc.writeMem(0xd68d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd68d, gbc.sp());
        EXPECT(0x2737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8276));
        EXPECT(0x37, gbc.readMem(0x8277));
        EXPECT(0x27, gbc.readMem(0x8278));
        EXPECT(0x79, gbc.readMem(0xd68d));
        EXPECT(0x82, gbc.readMem(0xd68e));
        // D4 0383
        gbc.setState(0xd80, 0x3863, 0x1730, 0xe387, 0x7e36, 0x37c7, 0x0, 0x0);
        gbc.writeMem(0xd80, { 0xd4, 0x1f, 0x77 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3863, gbc.sp());
        EXPECT(0xd83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0385
        gbc.setState(0x4149, 0x969a, 0xa660, 0x9ffd, 0xb103, 0xee15, 0x0, 0x1);
        gbc.writeMem(0x4149, { 0xd4, 0x6b, 0xbb });
        gbc.writeMem(0x9698, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9698, gbc.sp());
        EXPECT(0xbb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9698));
        EXPECT(0x41, gbc.readMem(0x9699));
        // D4 0386
        gbc.setState(0x28e0, 0x215, 0x1230, 0x45ce, 0xe68d, 0x8957, 0x1, 0x1);
        gbc.writeMem(0x28e0, { 0xd4, 0x24, 0xcb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x215, gbc.sp());
        EXPECT(0x28e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0389
        gbc.setState(0x4ba3, 0x26a9, 0x1cd0, 0xae0c, 0xdd13, 0x3c14, 0x0, 0x0);
        gbc.writeMem(0x4ba3, { 0xd4, 0x9b, 0xdc });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x26a9, gbc.sp());
        EXPECT(0x4ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 038A
        gbc.setState(0x3b11, 0xbd34, 0x5210, 0xe3ba, 0xf26d, 0xcf9c, 0x1, 0x0);
        gbc.writeMem(0x3b11, { 0xd4, 0x94, 0x54 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbd34, gbc.sp());
        EXPECT(0x3b14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 038B
        gbc.setState(0x5d43, 0x980e, 0x2ad0, 0xc348, 0x825d, 0x2512, 0x1, 0x1);
        gbc.writeMem(0x5d43, { 0xd4, 0x95, 0x98 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x980e, gbc.sp());
        EXPECT(0x5d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 038C
        gbc.setState(0x388e, 0xfcc4, 0xdd00, 0xf827, 0x19a8, 0xa0b6, 0x1, 0x0);
        gbc.writeMem(0x388e, { 0xd4, 0x1f, 0x7a });
        gbc.writeMem(0xfcc2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfcc2, gbc.sp());
        EXPECT(0x7a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xfcc2));
        EXPECT(0x38, gbc.readMem(0xfcc3));
        // D4 038D
        gbc.setState(0xc52, 0x5934, 0xc9b0, 0xd007, 0xaf42, 0x1bb, 0x1, 0x1);
        gbc.writeMem(0xc52, { 0xd4, 0xf9, 0x29 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5934, gbc.sp());
        EXPECT(0xc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 038F
        gbc.setState(0x7463, 0xdc39, 0x4400, 0x6ec1, 0xf5db, 0xe013, 0x0, 0x0);
        gbc.writeMem(0x7463, { 0xd4, 0x1c, 0xc6 });
        gbc.writeMem(0xdc37, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdc37, gbc.sp());
        EXPECT(0xc61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xdc37));
        EXPECT(0x74, gbc.readMem(0xdc38));
        // D4 0390
        gbc.setState(0xe375, 0x73df, 0x9090, 0xe244, 0x7724, 0x75d3, 0x0, 0x0);
        gbc.writeMem(0xe375, { 0xd4, 0xbe, 0x35 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x73df, gbc.sp());
        EXPECT(0xe378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe375));
        EXPECT(0xbe, gbc.readMem(0xe376));
        EXPECT(0x35, gbc.readMem(0xe377));
        // D4 0392
        gbc.setState(0x35de, 0xbbfb, 0x6bf0, 0xe1bb, 0xefbc, 0xc8f6, 0x0, 0x1);
        gbc.writeMem(0x35de, { 0xd4, 0xa5, 0xf6 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbbfb, gbc.sp());
        EXPECT(0x35e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 0394
        gbc.setState(0xe537, 0x151f, 0xab0, 0xda5b, 0x95b8, 0xa69e, 0x1, 0x1);
        gbc.writeMem(0xe537, { 0xd4, 0x35, 0x84 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x151f, gbc.sp());
        EXPECT(0xe53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe537));
        EXPECT(0x35, gbc.readMem(0xe538));
        EXPECT(0x84, gbc.readMem(0xe539));
        // D4 0397
        gbc.setState(0xb13f, 0xbeb5, 0x2e20, 0x6da7, 0xb206, 0xb569, 0x1, 0x0);
        gbc.writeMem(0xb13f, { 0xd4, 0x61, 0x2c });
        gbc.writeMem(0xbeb3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbeb3, gbc.sp());
        EXPECT(0x2c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb13f));
        EXPECT(0x61, gbc.readMem(0xb140));
        EXPECT(0x2c, gbc.readMem(0xb141));
        EXPECT(0x42, gbc.readMem(0xbeb3));
        EXPECT(0xb1, gbc.readMem(0xbeb4));
        // D4 0399
        gbc.setState(0x9f78, 0x8993, 0xe8e0, 0x161c, 0x1f28, 0x8332, 0x0, 0x1);
        gbc.writeMem(0x8991, { 0x0, 0x0 });
        gbc.writeMem(0x9f78, { 0xd4, 0xff, 0xcc });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8991, gbc.sp());
        EXPECT(0xccff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8991));
        EXPECT(0x9f, gbc.readMem(0x8992));
        EXPECT(0xd4, gbc.readMem(0x9f78));
        EXPECT(0xff, gbc.readMem(0x9f79));
        EXPECT(0xcc, gbc.readMem(0x9f7a));
        // D4 039A
        gbc.setState(0xa651, 0xe496, 0x3180, 0x4525, 0x71ad, 0xa839, 0x0, 0x1);
        gbc.writeMem(0xa651, { 0xd4, 0x25, 0x28 });
        gbc.writeMem(0xe494, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe494, gbc.sp());
        EXPECT(0x2825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa651));
        EXPECT(0x25, gbc.readMem(0xa652));
        EXPECT(0x28, gbc.readMem(0xa653));
        EXPECT(0x54, gbc.readMem(0xe494));
        EXPECT(0xa6, gbc.readMem(0xe495));
        // D4 039B
        gbc.setState(0x7f1a, 0xa3e8, 0xed10, 0x9b8, 0xb411, 0x762a, 0x0, 0x0);
        gbc.writeMem(0x7f1a, { 0xd4, 0xdc, 0xb7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa3e8, gbc.sp());
        EXPECT(0x7f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 039C
        gbc.setState(0x25e8, 0xb4e1, 0x35e0, 0x58e1, 0x8726, 0x8bd2, 0x0, 0x0);
        gbc.writeMem(0x25e8, { 0xd4, 0xc2, 0x32 });
        gbc.writeMem(0xb4df, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb4df, gbc.sp());
        EXPECT(0x32c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xb4df));
        EXPECT(0x25, gbc.readMem(0xb4e0));
        // D4 039D
        gbc.setState(0x5170, 0x7964, 0xac70, 0x1db, 0x37d3, 0x946b, 0x1, 0x1);
        gbc.writeMem(0x5170, { 0xd4, 0xdf, 0xf2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7964, gbc.sp());
        EXPECT(0x5173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03A0
        gbc.setState(0x347a, 0x825e, 0x5a0, 0x4d4a, 0x3be, 0x984a, 0x0, 0x1);
        gbc.writeMem(0x347a, { 0xd4, 0x4b, 0xcc });
        gbc.writeMem(0x825c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x825c, gbc.sp());
        EXPECT(0xcc4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x825c));
        EXPECT(0x34, gbc.readMem(0x825d));
        // D4 03A1
        gbc.setState(0xa7b4, 0x92b5, 0xafe0, 0xed7a, 0x70b0, 0x2ec2, 0x0, 0x1);
        gbc.writeMem(0x92b3, { 0x0, 0x0 });
        gbc.writeMem(0xa7b4, { 0xd4, 0x43, 0xde });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x92b3, gbc.sp());
        EXPECT(0xde43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x92b3));
        EXPECT(0xa7, gbc.readMem(0x92b4));
        EXPECT(0xd4, gbc.readMem(0xa7b4));
        EXPECT(0x43, gbc.readMem(0xa7b5));
        EXPECT(0xde, gbc.readMem(0xa7b6));
        // D4 03A3
        gbc.setState(0x53fa, 0xe808, 0xaa40, 0x7bc2, 0xfed, 0x1299, 0x1, 0x0);
        gbc.writeMem(0x53fa, { 0xd4, 0x10, 0x2d });
        gbc.writeMem(0xe806, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe806, gbc.sp());
        EXPECT(0x2d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xe806));
        EXPECT(0x53, gbc.readMem(0xe807));
        // D4 03A4
        gbc.setState(0xa404, 0x779, 0x6ad0, 0x9bcf, 0x60b2, 0x3ebb, 0x0, 0x0);
        gbc.writeMem(0xa404, { 0xd4, 0x56, 0xf8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x779, gbc.sp());
        EXPECT(0xa407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa404));
        EXPECT(0x56, gbc.readMem(0xa405));
        EXPECT(0xf8, gbc.readMem(0xa406));
        // D4 03A5
        gbc.setState(0xb96, 0xde32, 0x890, 0x959f, 0xbe5a, 0xea54, 0x1, 0x1);
        gbc.writeMem(0xb96, { 0xd4, 0xb, 0x58 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xde32, gbc.sp());
        EXPECT(0xb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03A6
        gbc.setState(0xaaaa, 0xd50c, 0x73d0, 0x62b, 0xf56d, 0x4b77, 0x0, 0x0);
        gbc.writeMem(0xaaaa, { 0xd4, 0x45, 0x97 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd50c, gbc.sp());
        EXPECT(0xaaad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xaaaa));
        EXPECT(0x45, gbc.readMem(0xaaab));
        EXPECT(0x97, gbc.readMem(0xaaac));
        // D4 03A7
        gbc.setState(0xa548, 0xf86d, 0x5960, 0xe94c, 0xdcc2, 0x2030, 0x1, 0x1);
        gbc.writeMem(0xa548, { 0xd4, 0x69, 0xe9 });
        gbc.writeMem(0xf86b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf86b, gbc.sp());
        EXPECT(0xe969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa548));
        EXPECT(0x69, gbc.readMem(0xa549));
        EXPECT(0xe9, gbc.readMem(0xa54a));
        EXPECT(0x4b, gbc.readMem(0xf86b));
        EXPECT(0xa5, gbc.readMem(0xf86c));
        // D4 03A8
        gbc.setState(0x7998, 0xdce6, 0xf620, 0x2be9, 0xf352, 0x6452, 0x0, 0x0);
        gbc.writeMem(0x7998, { 0xd4, 0xc9, 0x25 });
        gbc.writeMem(0xdce4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdce4, gbc.sp());
        EXPECT(0x25c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xdce4));
        EXPECT(0x79, gbc.readMem(0xdce5));
        // D4 03A9
        gbc.setState(0xb55c, 0xca74, 0x6c60, 0x87ad, 0x6098, 0x2367, 0x1, 0x1);
        gbc.writeMem(0xb55c, { 0xd4, 0xb, 0xfc });
        gbc.writeMem(0xca72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xca72, gbc.sp());
        EXPECT(0xfc0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb55c));
        EXPECT(0xb, gbc.readMem(0xb55d));
        EXPECT(0xfc, gbc.readMem(0xb55e));
        EXPECT(0x5f, gbc.readMem(0xca72));
        EXPECT(0xb5, gbc.readMem(0xca73));
        // D4 03AD
        gbc.setState(0x9bbe, 0xe057, 0xd150, 0xd059, 0xc91a, 0x9214, 0x0, 0x1);
        gbc.writeMem(0x9bbe, { 0xd4, 0x34, 0x4a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe057, gbc.sp());
        EXPECT(0x9bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x9bbe));
        EXPECT(0x34, gbc.readMem(0x9bbf));
        EXPECT(0x4a, gbc.readMem(0x9bc0));
        // D4 03AF
        gbc.setState(0xeb11, 0xcb06, 0x2d90, 0xd05e, 0x93a0, 0x46b1, 0x0, 0x0);
        gbc.writeMem(0xeb11, { 0xd4, 0x4d, 0x8f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcb06, gbc.sp());
        EXPECT(0xeb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xeb11));
        EXPECT(0x4d, gbc.readMem(0xeb12));
        EXPECT(0x8f, gbc.readMem(0xeb13));
        // D4 03B1
        gbc.setState(0xa97a, 0x3f1e, 0x2530, 0xca9b, 0x85a1, 0x2cac, 0x0, 0x0);
        gbc.writeMem(0xa97a, { 0xd4, 0xa2, 0x6c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3f1e, gbc.sp());
        EXPECT(0xa97d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa97a));
        EXPECT(0xa2, gbc.readMem(0xa97b));
        EXPECT(0x6c, gbc.readMem(0xa97c));
        // D4 03B2
        gbc.setState(0xa87f, 0xa32e, 0x31e0, 0x602f, 0x7e44, 0x16, 0x1, 0x1);
        gbc.writeMem(0xa32c, { 0x0, 0x0 });
        gbc.writeMem(0xa87f, { 0xd4, 0x1b, 0x25 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa32c, gbc.sp());
        EXPECT(0x251b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa32c));
        EXPECT(0xa8, gbc.readMem(0xa32d));
        EXPECT(0xd4, gbc.readMem(0xa87f));
        EXPECT(0x1b, gbc.readMem(0xa880));
        EXPECT(0x25, gbc.readMem(0xa881));
        // D4 03B3
        gbc.setState(0x8cd3, 0x7328, 0x4a70, 0x4c7c, 0xbe08, 0xa5f4, 0x0, 0x0);
        gbc.writeMem(0x8cd3, { 0xd4, 0x8, 0x2a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7328, gbc.sp());
        EXPECT(0x8cd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8cd3));
        EXPECT(0x8, gbc.readMem(0x8cd4));
        EXPECT(0x2a, gbc.readMem(0x8cd5));
        // D4 03B4
        gbc.setState(0x91fd, 0xe9b6, 0x9c40, 0xf74d, 0x16b, 0xd7a9, 0x0, 0x1);
        gbc.writeMem(0x91fd, { 0xd4, 0x21, 0xb9 });
        gbc.writeMem(0xe9b4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe9b4, gbc.sp());
        EXPECT(0xb921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x91fd));
        EXPECT(0x21, gbc.readMem(0x91fe));
        EXPECT(0xb9, gbc.readMem(0x91ff));
        EXPECT(0x0, gbc.readMem(0xe9b4));
        EXPECT(0x92, gbc.readMem(0xe9b5));
        // D4 03B5
        gbc.setState(0x493, 0x92ce, 0x3270, 0xb167, 0x5943, 0xced2, 0x1, 0x0);
        gbc.writeMem(0x493, { 0xd4, 0x8c, 0xfa });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x92ce, gbc.sp());
        EXPECT(0x496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03B6
        gbc.setState(0xe5fd, 0xd30a, 0x32e0, 0x566, 0xef4b, 0x8400, 0x0, 0x1);
        gbc.writeMem(0xd308, { 0x0, 0x0 });
        gbc.writeMem(0xe5fd, { 0xd4, 0xe1, 0xbb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd308, gbc.sp());
        EXPECT(0xbbe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd308));
        EXPECT(0xe6, gbc.readMem(0xd309));
        EXPECT(0xd4, gbc.readMem(0xe5fd));
        EXPECT(0xe1, gbc.readMem(0xe5fe));
        EXPECT(0xbb, gbc.readMem(0xe5ff));
        // D4 03B9
        gbc.setState(0x6add, 0xb93, 0xf570, 0x21a1, 0xda9e, 0x3118, 0x0, 0x0);
        gbc.writeMem(0x6add, { 0xd4, 0xba, 0x4f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb93, gbc.sp());
        EXPECT(0x6ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03BA
        gbc.setState(0x62d, 0x90eb, 0x8b70, 0x2f4f, 0x31a1, 0x9888, 0x1, 0x1);
        gbc.writeMem(0x62d, { 0xd4, 0x88, 0x9b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x90eb, gbc.sp());
        EXPECT(0x630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03BB
        gbc.setState(0x5001, 0xf6d2, 0x29d0, 0x7741, 0x8f2f, 0x30f2, 0x0, 0x1);
        gbc.writeMem(0x5001, { 0xd4, 0x91, 0x18 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf6d2, gbc.sp());
        EXPECT(0x5004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03BC
        gbc.setState(0x4047, 0x6d78, 0x2eb0, 0x51de, 0x34a6, 0xa991, 0x0, 0x1);
        gbc.writeMem(0x4047, { 0xd4, 0x96, 0x65 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6d78, gbc.sp());
        EXPECT(0x404a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03BD
        gbc.setState(0x28a4, 0x696d, 0x8af0, 0x5275, 0x2382, 0xa578, 0x0, 0x0);
        gbc.writeMem(0x28a4, { 0xd4, 0xfc, 0x64 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x696d, gbc.sp());
        EXPECT(0x28a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03BE
        gbc.setState(0x7d96, 0x3458, 0x69b0, 0x6454, 0x98ef, 0xbe6a, 0x1, 0x0);
        gbc.writeMem(0x7d96, { 0xd4, 0x2, 0xb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3458, gbc.sp());
        EXPECT(0x7d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03C0
        gbc.setState(0x4981, 0x8ff3, 0xb1d0, 0x1d8f, 0x29a, 0xe8e6, 0x1, 0x0);
        gbc.writeMem(0x4981, { 0xd4, 0x46, 0x50 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8ff3, gbc.sp());
        EXPECT(0x4984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03C1
        gbc.setState(0xded2, 0xaec4, 0x2660, 0x2610, 0x5768, 0x383b, 0x1, 0x1);
        gbc.writeMem(0xaec2, { 0x0, 0x0 });
        gbc.writeMem(0xded2, { 0xd4, 0x69, 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xaec2, gbc.sp());
        EXPECT(0x4469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xaec2));
        EXPECT(0xde, gbc.readMem(0xaec3));
        EXPECT(0xd4, gbc.readMem(0xded2));
        EXPECT(0x69, gbc.readMem(0xded3));
        EXPECT(0x44, gbc.readMem(0xded4));
        // D4 03C2
        gbc.setState(0x12fb, 0x36f4, 0x3830, 0x75ce, 0xdbcc, 0x2f7, 0x0, 0x1);
        gbc.writeMem(0x12fb, { 0xd4, 0x47, 0x64 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x36f4, gbc.sp());
        EXPECT(0x12fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03C3
        gbc.setState(0x73e0, 0x34b3, 0x7d70, 0xae7e, 0xa56a, 0x151a, 0x0, 0x0);
        gbc.writeMem(0x73e0, { 0xd4, 0x40, 0x53 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x34b3, gbc.sp());
        EXPECT(0x73e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03C5
        gbc.setState(0x6a4f, 0x7b85, 0x5530, 0x7475, 0xd199, 0x71f9, 0x1, 0x1);
        gbc.writeMem(0x6a4f, { 0xd4, 0xf4, 0x43 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7b85, gbc.sp());
        EXPECT(0x6a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03C6
        gbc.setState(0xb167, 0xd4e8, 0x5750, 0x4333, 0x630e, 0x9676, 0x0, 0x0);
        gbc.writeMem(0xb167, { 0xd4, 0x77, 0xcd });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd4e8, gbc.sp());
        EXPECT(0xb16a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xb167));
        EXPECT(0x77, gbc.readMem(0xb168));
        EXPECT(0xcd, gbc.readMem(0xb169));
        // D4 03C7
        gbc.setState(0x1ca0, 0x3997, 0x1810, 0xc603, 0xf4c6, 0x21ea, 0x1, 0x0);
        gbc.writeMem(0x1ca0, { 0xd4, 0x68, 0x69 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3997, gbc.sp());
        EXPECT(0x1ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03C8
        gbc.setState(0x760e, 0x2918, 0xd570, 0x3dcc, 0xe379, 0x1797, 0x0, 0x0);
        gbc.writeMem(0x760e, { 0xd4, 0x66, 0xde });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2918, gbc.sp());
        EXPECT(0x7611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03CA
        gbc.setState(0xa8bb, 0xc4a7, 0xe7e0, 0x8dab, 0xfe08, 0x94c7, 0x0, 0x0);
        gbc.writeMem(0xa8bb, { 0xd4, 0xa0, 0x2f });
        gbc.writeMem(0xc4a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc4a5, gbc.sp());
        EXPECT(0x2fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa8bb));
        EXPECT(0xa0, gbc.readMem(0xa8bc));
        EXPECT(0x2f, gbc.readMem(0xa8bd));
        EXPECT(0xbe, gbc.readMem(0xc4a5));
        EXPECT(0xa8, gbc.readMem(0xc4a6));
        // D4 03CB
        gbc.setState(0x5e53, 0xfad5, 0x9d60, 0x73f2, 0x15f4, 0xc073, 0x1, 0x0);
        gbc.writeMem(0x5e53, { 0xd4, 0xe0, 0x8e });
        gbc.writeMem(0xfad3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfad3, gbc.sp());
        EXPECT(0x8ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xfad3));
        EXPECT(0x5e, gbc.readMem(0xfad4));
        // D4 03CC
        gbc.setState(0xec28, 0x2f0, 0xead0, 0xeede, 0x369, 0xe4a9, 0x1, 0x1);
        gbc.writeMem(0xec28, { 0xd4, 0x66, 0x14 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2f0, gbc.sp());
        EXPECT(0xec2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xec28));
        EXPECT(0x66, gbc.readMem(0xec29));
        EXPECT(0x14, gbc.readMem(0xec2a));
        // D4 03D0
        gbc.setState(0x192c, 0x846b, 0x8a0, 0x706a, 0xf1ea, 0xb2, 0x1, 0x0);
        gbc.writeMem(0x192c, { 0xd4, 0xe4, 0xef });
        gbc.writeMem(0x8469, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8469, gbc.sp());
        EXPECT(0xefe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8469));
        EXPECT(0x19, gbc.readMem(0x846a));
        // D4 03D1
        gbc.setState(0xc58c, 0xc2ff, 0x9c90, 0xfe44, 0xbd48, 0xdcc, 0x1, 0x0);
        gbc.writeMem(0xc58c, { 0xd4, 0x21, 0xf4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc2ff, gbc.sp());
        EXPECT(0xc58f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xc58c));
        EXPECT(0x21, gbc.readMem(0xc58d));
        EXPECT(0xf4, gbc.readMem(0xc58e));
        // D4 03D2
        gbc.setState(0x8190, 0xeab5, 0xe70, 0x46cf, 0x449b, 0x2c6c, 0x1, 0x1);
        gbc.writeMem(0x8190, { 0xd4, 0x63, 0x36 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xeab5, gbc.sp());
        EXPECT(0x8193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8190));
        EXPECT(0x63, gbc.readMem(0x8191));
        EXPECT(0x36, gbc.readMem(0x8192));
        // D4 03D3
        gbc.setState(0x77dc, 0x82b8, 0xacf0, 0x51f9, 0xa1de, 0x252f, 0x0, 0x1);
        gbc.writeMem(0x77dc, { 0xd4, 0x74, 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x82b8, gbc.sp());
        EXPECT(0x77df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03D6
        gbc.setState(0x97d7, 0x2143, 0x3d30, 0x188e, 0x458c, 0xf2e9, 0x0, 0x0);
        gbc.writeMem(0x97d7, { 0xd4, 0xd5, 0x9d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2143, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x97d7));
        EXPECT(0xd5, gbc.readMem(0x97d8));
        EXPECT(0x9d, gbc.readMem(0x97d9));
        // D4 03D7
        gbc.setState(0x6c39, 0xa94, 0x5170, 0x76e8, 0xab82, 0xa1f7, 0x0, 0x1);
        gbc.writeMem(0x6c39, { 0xd4, 0x9e, 0xb2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa94, gbc.sp());
        EXPECT(0x6c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03DA
        gbc.setState(0x137b, 0x3096, 0xb2b0, 0xa125, 0xda74, 0x4dbf, 0x1, 0x1);
        gbc.writeMem(0x137b, { 0xd4, 0x98, 0xb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3096, gbc.sp());
        EXPECT(0x137e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03DB
        gbc.setState(0x8b05, 0x1c02, 0x12b0, 0x145c, 0xc7e0, 0x1270, 0x1, 0x1);
        gbc.writeMem(0x8b05, { 0xd4, 0x32, 0x9b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1c02, gbc.sp());
        EXPECT(0x8b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8b05));
        EXPECT(0x32, gbc.readMem(0x8b06));
        EXPECT(0x9b, gbc.readMem(0x8b07));
        // D4 03DC
        gbc.setState(0xca3b, 0x37f, 0x9050, 0x4254, 0x965f, 0xa3e6, 0x0, 0x1);
        gbc.writeMem(0xca3b, { 0xd4, 0xa0, 0x99 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x37f, gbc.sp());
        EXPECT(0xca3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xca3b));
        EXPECT(0xa0, gbc.readMem(0xca3c));
        EXPECT(0x99, gbc.readMem(0xca3d));
        // D4 03DD
        gbc.setState(0xd80f, 0x1d90, 0x2f30, 0xb801, 0x227b, 0x7aac, 0x1, 0x0);
        gbc.writeMem(0xd80f, { 0xd4, 0x4d, 0x33 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1d90, gbc.sp());
        EXPECT(0xd812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd80f));
        EXPECT(0x4d, gbc.readMem(0xd810));
        EXPECT(0x33, gbc.readMem(0xd811));
        // D4 03DE
        gbc.setState(0xd717, 0x4c04, 0x2450, 0xce78, 0x527b, 0xcd08, 0x0, 0x0);
        gbc.writeMem(0xd717, { 0xd4, 0xd8, 0x1b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4c04, gbc.sp());
        EXPECT(0xd71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xd717));
        EXPECT(0xd8, gbc.readMem(0xd718));
        EXPECT(0x1b, gbc.readMem(0xd719));
        // D4 03DF
        gbc.setState(0xa2c5, 0x3fcb, 0x1c30, 0x2455, 0xb931, 0xbdc6, 0x1, 0x1);
        gbc.writeMem(0xa2c5, { 0xd4, 0x4, 0x9f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3fcb, gbc.sp());
        EXPECT(0xa2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa2c5));
        EXPECT(0x4, gbc.readMem(0xa2c6));
        EXPECT(0x9f, gbc.readMem(0xa2c7));
        // D4 03E2
        gbc.setState(0x165d, 0x2056, 0xd130, 0x8c42, 0x4ef0, 0xfd96, 0x0, 0x0);
        gbc.writeMem(0x165d, { 0xd4, 0xed, 0x3f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2056, gbc.sp());
        EXPECT(0x1660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // D4 03E3
        gbc.setState(0xc290, 0x8b47, 0xb360, 0x9e8c, 0xa17f, 0x9060, 0x1, 0x0);
        gbc.writeMem(0x8b45, { 0x0, 0x0 });
        gbc.writeMem(0xc290, { 0xd4, 0xc5, 0x71 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8b45, gbc.sp());
        EXPECT(0x71c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8b45));
        EXPECT(0xc2, gbc.readMem(0x8b46));
        EXPECT(0xd4, gbc.readMem(0xc290));
        EXPECT(0xc5, gbc.readMem(0xc291));
        EXPECT(0x71, gbc.readMem(0xc292));
        // D4 03E6
        gbc.setState(0x35c8, 0xaf24, 0x2fc0, 0x486c, 0x6579, 0xe4cf, 0x1, 0x1);
        gbc.writeMem(0x35c8, { 0xd4, 0x80, 0xe6 });
        gbc.writeMem(0xaf22, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xaf22, gbc.sp());
        EXPECT(0xe680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf22));
        EXPECT(0x35, gbc.readMem(0xaf23));
        // D4 03E7
        gbc.setState(0x4e12, 0x1a56, 0x9e90, 0xf323, 0xe367, 0xd9e5, 0x0, 0x1);
        gbc.writeMem(0x4e12, { 0xd4, 0xc1, 0xad });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1a56, gbc.sp());
        EXPECT(0x4e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
