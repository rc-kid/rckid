    TEST(gbcemu, opcode_fe) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // FE 0001
        gbc.setState(0xe8fb, 0x7ae3, 0x5de0, 0x9dc, 0x2653, 0x78ae, 0x0, 0x1);
        gbc.writeMem(0xe8fb, { 0xfe, 0xe9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7ae3, gbc.sp());
        EXPECT(0xe8fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe8fb));
        EXPECT(0xe9, gbc.readMem(0xe8fc));
        // FE 0002
        gbc.setState(0x17de, 0xbdb9, 0xf6b0, 0x6eb, 0x805b, 0xe394, 0x0, 0x1);
        gbc.writeMem(0x17de, { 0xfe, 0x52 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbdb9, gbc.sp());
        EXPECT(0x17e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0003
        gbc.setState(0xceaa, 0xcd17, 0xd330, 0x8bd9, 0xc924, 0xac57, 0x0, 0x0);
        gbc.writeMem(0xceaa, { 0xfe, 0xe7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcd17, gbc.sp());
        EXPECT(0xceac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xceaa));
        EXPECT(0xe7, gbc.readMem(0xceab));
        // FE 0004
        gbc.setState(0x4a50, 0xd447, 0x88a0, 0x66ab, 0x7012, 0xc316, 0x1, 0x0);
        gbc.writeMem(0x4a50, { 0xfe, 0x8d });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd447, gbc.sp());
        EXPECT(0x4a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0005
        gbc.setState(0x838e, 0xdee8, 0xfda0, 0x6cf6, 0x808b, 0xdf95, 0x0, 0x0);
        gbc.writeMem(0x838e, { 0xfe, 0xc7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdee8, gbc.sp());
        EXPECT(0x8390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x838e));
        EXPECT(0xc7, gbc.readMem(0x838f));
        // FE 0006
        gbc.setState(0x7c36, 0x8f53, 0xb930, 0x3a52, 0xcc45, 0xd6e5, 0x0, 0x0);
        gbc.writeMem(0x7c36, { 0xfe, 0x2d });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8f53, gbc.sp());
        EXPECT(0x7c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0007
        gbc.setState(0x7d0a, 0xe0b6, 0xeeb0, 0x5a27, 0x223d, 0xf2c, 0x0, 0x1);
        gbc.writeMem(0x7d0a, { 0xfe, 0x46 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe0b6, gbc.sp());
        EXPECT(0x7d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0009
        gbc.setState(0xd06f, 0xaa89, 0xd50, 0x348, 0x9085, 0x2925, 0x0, 0x0);
        gbc.writeMem(0xd06f, { 0xfe, 0x53 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xaa89, gbc.sp());
        EXPECT(0xd071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd06f));
        EXPECT(0x53, gbc.readMem(0xd070));
        // FE 000A
        gbc.setState(0x8f33, 0xf615, 0x2a00, 0xc175, 0x8d39, 0x8195, 0x1, 0x0);
        gbc.writeMem(0x8f33, { 0xfe, 0x88 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf615, gbc.sp());
        EXPECT(0x8f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8f33));
        EXPECT(0x88, gbc.readMem(0x8f34));
        // FE 000B
        gbc.setState(0xa494, 0xff53, 0xbbf0, 0x4c2d, 0x1de3, 0x60a2, 0x0, 0x1);
        gbc.writeMem(0xa494, { 0xfe, 0x5a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xff53, gbc.sp());
        EXPECT(0xa496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa494));
        EXPECT(0x5a, gbc.readMem(0xa495));
        // FE 000C
        gbc.setState(0xc5c1, 0xa0c4, 0x4e70, 0x2eda, 0x2ba6, 0x978c, 0x1, 0x1);
        gbc.writeMem(0xc5c1, { 0xfe, 0x38 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa0c4, gbc.sp());
        EXPECT(0xc5c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc5c1));
        EXPECT(0x38, gbc.readMem(0xc5c2));
        // FE 000D
        gbc.setState(0x5b87, 0x482a, 0x1fc0, 0xcd7a, 0xc09b, 0x23cb, 0x0, 0x0);
        gbc.writeMem(0x5b87, { 0xfe, 0x24 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x482a, gbc.sp());
        EXPECT(0x5b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 000E
        gbc.setState(0x6400, 0x27d6, 0x56b0, 0xd129, 0x56ef, 0x3915, 0x0, 0x0);
        gbc.writeMem(0x6400, { 0xfe, 0xa5 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x27d6, gbc.sp());
        EXPECT(0x6402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 000F
        gbc.setState(0x3130, 0x2b03, 0x1660, 0x2c85, 0xd890, 0xce1e, 0x0, 0x1);
        gbc.writeMem(0x3130, { 0xfe, 0xe8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2b03, gbc.sp());
        EXPECT(0x3132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0010
        gbc.setState(0x2b3e, 0x16ae, 0x7bc0, 0xe73e, 0x4848, 0xd8a1, 0x0, 0x0);
        gbc.writeMem(0x2b3e, { 0xfe, 0xc5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x16ae, gbc.sp());
        EXPECT(0x2b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0011
        gbc.setState(0xac, 0x6490, 0x5a10, 0x1790, 0x368a, 0x85a6, 0x1, 0x1);
        gbc.writeMem(0xac, { 0xfe, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6490, gbc.sp());
        EXPECT(0xae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0012
        gbc.setState(0x961c, 0xdd6b, 0x7050, 0x29e4, 0xbbd, 0x853b, 0x0, 0x0);
        gbc.writeMem(0x961c, { 0xfe, 0xd });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdd6b, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x961c));
        EXPECT(0xd, gbc.readMem(0x961d));
        // FE 0013
        gbc.setState(0x77cc, 0xad5c, 0x60a0, 0xec6c, 0x37d0, 0xc326, 0x1, 0x1);
        gbc.writeMem(0x77cc, { 0xfe, 0xb4 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xad5c, gbc.sp());
        EXPECT(0x77ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0014
        gbc.setState(0xa80, 0xe929, 0xd120, 0x65ab, 0xa719, 0xc8bd, 0x1, 0x0);
        gbc.writeMem(0xa80, { 0xfe, 0x53 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe929, gbc.sp());
        EXPECT(0xa82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0015
        gbc.setState(0xc882, 0x666f, 0xa5e0, 0xf662, 0x1cc6, 0xd906, 0x0, 0x0);
        gbc.writeMem(0xc882, { 0xfe, 0x6e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x666f, gbc.sp());
        EXPECT(0xc884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc882));
        EXPECT(0x6e, gbc.readMem(0xc883));
        // FE 0016
        gbc.setState(0x54c3, 0x3c33, 0xdab0, 0xd56a, 0x1028, 0xf02b, 0x1, 0x0);
        gbc.writeMem(0x54c3, { 0xfe, 0xf1 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3c33, gbc.sp());
        EXPECT(0x54c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0017
        gbc.setState(0x6f85, 0x607f, 0xa420, 0x2bb, 0xf90e, 0x6c19, 0x0, 0x1);
        gbc.writeMem(0x6f85, { 0xfe, 0x11 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x607f, gbc.sp());
        EXPECT(0x6f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0018
        gbc.setState(0x231b, 0x54f4, 0x9e70, 0x42a, 0x9576, 0xb564, 0x0, 0x1);
        gbc.writeMem(0x231b, { 0xfe, 0x61 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x54f4, gbc.sp());
        EXPECT(0x231d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0019
        gbc.setState(0x2496, 0x5c51, 0x6e70, 0x2fa0, 0xfd8c, 0xf1d2, 0x0, 0x0);
        gbc.writeMem(0x2496, { 0xfe, 0x4a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5c51, gbc.sp());
        EXPECT(0x2498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 001B
        gbc.setState(0x9d79, 0x1e1e, 0xc570, 0x24b4, 0xa908, 0x4147, 0x0, 0x0);
        gbc.writeMem(0x9d79, { 0xfe, 0x6d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1e1e, gbc.sp());
        EXPECT(0x9d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9d79));
        EXPECT(0x6d, gbc.readMem(0x9d7a));
        // FE 001C
        gbc.setState(0x5d78, 0x4cad, 0xf760, 0xd8ea, 0xf27b, 0x5e06, 0x1, 0x1);
        gbc.writeMem(0x5d78, { 0xfe, 0x32 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4cad, gbc.sp());
        EXPECT(0x5d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 001D
        gbc.setState(0x9b2a, 0xc272, 0x1d10, 0xd4da, 0x5da6, 0xe36, 0x0, 0x0);
        gbc.writeMem(0x9b2a, { 0xfe, 0xa5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc272, gbc.sp());
        EXPECT(0x9b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9b2a));
        EXPECT(0xa5, gbc.readMem(0x9b2b));
        // FE 001E
        gbc.setState(0xa4de, 0x3dc6, 0xce40, 0xb3cf, 0xaf29, 0x7947, 0x1, 0x0);
        gbc.writeMem(0xa4de, { 0xfe, 0x4f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3dc6, gbc.sp());
        EXPECT(0xa4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa4de));
        EXPECT(0x4f, gbc.readMem(0xa4df));
        // FE 001F
        gbc.setState(0xee50, 0x321, 0x4e0, 0xe38c, 0xf69b, 0xaa9, 0x1, 0x0);
        gbc.writeMem(0xee50, { 0xfe, 0x34 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x321, gbc.sp());
        EXPECT(0xee52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xee50));
        EXPECT(0x34, gbc.readMem(0xee51));
        // FE 0020
        gbc.setState(0x1ef3, 0xd78, 0xdec0, 0x2bbd, 0xfe7, 0x8098, 0x1, 0x1);
        gbc.writeMem(0x1ef3, { 0xfe, 0x53 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd78, gbc.sp());
        EXPECT(0x1ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0021
        gbc.setState(0xb98, 0xcaba, 0xe050, 0xc9bf, 0xe0d8, 0x5e09, 0x1, 0x1);
        gbc.writeMem(0xb98, { 0xfe, 0xa9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcaba, gbc.sp());
        EXPECT(0xb9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0022
        gbc.setState(0x4615, 0xadb2, 0x43e0, 0x63d0, 0x44c7, 0xfaaa, 0x0, 0x0);
        gbc.writeMem(0x4615, { 0xfe, 0xfd });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xadb2, gbc.sp());
        EXPECT(0x4617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0023
        gbc.setState(0xb3f6, 0xca43, 0x6370, 0x2feb, 0xfc7b, 0x320b, 0x0, 0x0);
        gbc.writeMem(0xb3f6, { 0xfe, 0x70 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xca43, gbc.sp());
        EXPECT(0xb3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb3f6));
        EXPECT(0x70, gbc.readMem(0xb3f7));
        // FE 0024
        gbc.setState(0x884a, 0x597e, 0x50b0, 0xd274, 0xc3e1, 0x9818, 0x1, 0x0);
        gbc.writeMem(0x884a, { 0xfe, 0xc3 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x597e, gbc.sp());
        EXPECT(0x884c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x884a));
        EXPECT(0xc3, gbc.readMem(0x884b));
        // FE 0025
        gbc.setState(0x1bad, 0x4fcf, 0xa800, 0x456e, 0xc046, 0x670d, 0x1, 0x0);
        gbc.writeMem(0x1bad, { 0xfe, 0x76 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4fcf, gbc.sp());
        EXPECT(0x1baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0026
        gbc.setState(0x942b, 0xb5be, 0xcc0, 0x3f58, 0x8d0b, 0x9ff0, 0x1, 0x0);
        gbc.writeMem(0x942b, { 0xfe, 0xb1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb5be, gbc.sp());
        EXPECT(0x942d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x942b));
        EXPECT(0xb1, gbc.readMem(0x942c));
        // FE 0027
        gbc.setState(0x227, 0xe0d9, 0xed80, 0xdd9a, 0x137d, 0x9083, 0x0, 0x0);
        gbc.writeMem(0x227, { 0xfe, 0x27 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe0d9, gbc.sp());
        EXPECT(0x229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0028
        gbc.setState(0x3705, 0x692, 0x9880, 0x973d, 0xb93b, 0x31e, 0x0, 0x0);
        gbc.writeMem(0x3705, { 0xfe, 0xf0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x692, gbc.sp());
        EXPECT(0x3707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0029
        gbc.setState(0x6420, 0xf1d2, 0x77e0, 0xd400, 0xe120, 0xc7b7, 0x0, 0x0);
        gbc.writeMem(0x6420, { 0xfe, 0x14 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf1d2, gbc.sp());
        EXPECT(0x6422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 002A
        gbc.setState(0xd5a9, 0x806d, 0xc0b0, 0x9a5e, 0x9f3, 0x4958, 0x0, 0x0);
        gbc.writeMem(0xd5a9, { 0xfe, 0x78 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x806d, gbc.sp());
        EXPECT(0xd5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd5a9));
        EXPECT(0x78, gbc.readMem(0xd5aa));
        // FE 002B
        gbc.setState(0x5445, 0x358c, 0x7cc0, 0xb5b2, 0x2abd, 0x3ad6, 0x0, 0x0);
        gbc.writeMem(0x5445, { 0xfe, 0x57 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x358c, gbc.sp());
        EXPECT(0x5447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 002D
        gbc.setState(0xb1b9, 0x798e, 0xb560, 0x5728, 0xcbd4, 0xd953, 0x1, 0x1);
        gbc.writeMem(0xb1b9, { 0xfe, 0xaf });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x798e, gbc.sp());
        EXPECT(0xb1bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb1b9));
        EXPECT(0xaf, gbc.readMem(0xb1ba));
        // FE 002E
        gbc.setState(0x4341, 0x7cbb, 0x1ce0, 0x7672, 0x23c1, 0xbfd8, 0x0, 0x1);
        gbc.writeMem(0x4341, { 0xfe, 0x19 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7cbb, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 002F
        gbc.setState(0x484f, 0xabaa, 0xad40, 0x9393, 0xd39, 0x1b3d, 0x1, 0x0);
        gbc.writeMem(0x484f, { 0xfe, 0x24 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xabaa, gbc.sp());
        EXPECT(0x4851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0030
        gbc.setState(0x414d, 0x8304, 0x5290, 0x649d, 0x9297, 0x9e8c, 0x1, 0x0);
        gbc.writeMem(0x414d, { 0xfe, 0x1c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8304, gbc.sp());
        EXPECT(0x414f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0031
        gbc.setState(0x6a95, 0x6698, 0x3bd0, 0xb22e, 0xc627, 0x3294, 0x1, 0x0);
        gbc.writeMem(0x6a95, { 0xfe, 0x86 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6698, gbc.sp());
        EXPECT(0x6a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0032
        gbc.setState(0xcdaf, 0xffe1, 0x9880, 0xe17e, 0xd55e, 0x2a9f, 0x0, 0x1);
        gbc.writeMem(0xcdaf, { 0xfe, 0x5a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xffe1, gbc.sp());
        EXPECT(0xcdb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcdaf));
        EXPECT(0x5a, gbc.readMem(0xcdb0));
        // FE 0033
        gbc.setState(0x98e6, 0x44c7, 0xe0, 0xb295, 0xfdbf, 0x8cb0, 0x1, 0x0);
        gbc.writeMem(0x98e6, { 0xfe, 0xbd });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x44c7, gbc.sp());
        EXPECT(0x98e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x98e6));
        EXPECT(0xbd, gbc.readMem(0x98e7));
        // FE 0034
        gbc.setState(0xa90c, 0xc01, 0x8090, 0xaabe, 0x254d, 0x3e85, 0x0, 0x1);
        gbc.writeMem(0xa90c, { 0xfe, 0x32 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc01, gbc.sp());
        EXPECT(0xa90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa90c));
        EXPECT(0x32, gbc.readMem(0xa90d));
        // FE 0036
        gbc.setState(0x53b4, 0xd1a9, 0x6470, 0x734d, 0xee57, 0x64ee, 0x1, 0x0);
        gbc.writeMem(0x53b4, { 0xfe, 0x8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd1a9, gbc.sp());
        EXPECT(0x53b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0037
        gbc.setState(0xdf4, 0x11cc, 0x8c30, 0x3b15, 0x186, 0x56e9, 0x0, 0x1);
        gbc.writeMem(0xdf4, { 0xfe, 0x13 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x11cc, gbc.sp());
        EXPECT(0xdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0038
        gbc.setState(0x587d, 0x2a24, 0xfac0, 0x5766, 0xe90f, 0xc471, 0x0, 0x0);
        gbc.writeMem(0x587d, { 0xfe, 0x67 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2a24, gbc.sp());
        EXPECT(0x587f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0039
        gbc.setState(0xcbe, 0xf472, 0x1260, 0x9349, 0xcf68, 0x6b7c, 0x1, 0x0);
        gbc.writeMem(0xcbe, { 0xfe, 0x83 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf472, gbc.sp());
        EXPECT(0xcc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 003A
        gbc.setState(0x10b1, 0x2953, 0x120, 0xb2d4, 0x4c44, 0xdcae, 0x0, 0x1);
        gbc.writeMem(0x10b1, { 0xfe, 0x75 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2953, gbc.sp());
        EXPECT(0x10b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 003B
        gbc.setState(0x1ec4, 0x1b5b, 0x2130, 0x3674, 0x7345, 0xaa09, 0x0, 0x0);
        gbc.writeMem(0x1ec4, { 0xfe, 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1b5b, gbc.sp());
        EXPECT(0x1ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 003C
        gbc.setState(0x4ec2, 0x192a, 0x8ab0, 0x5bd6, 0x6022, 0x82b5, 0x0, 0x1);
        gbc.writeMem(0x4ec2, { 0xfe, 0xb4 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x192a, gbc.sp());
        EXPECT(0x4ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 003D
        gbc.setState(0x74b7, 0x4d2f, 0xda50, 0xaf6d, 0xaf2a, 0x60d6, 0x1, 0x0);
        gbc.writeMem(0x74b7, { 0xfe, 0xa7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4d2f, gbc.sp());
        EXPECT(0x74b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 003E
        gbc.setState(0xa6d3, 0x110, 0xfa30, 0x4514, 0x765b, 0xd920, 0x1, 0x1);
        gbc.writeMem(0xa6d3, { 0xfe, 0x92 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x110, gbc.sp());
        EXPECT(0xa6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa6d3));
        EXPECT(0x92, gbc.readMem(0xa6d4));
        // FE 003F
        gbc.setState(0xc2a3, 0xdc75, 0x4db0, 0xef4d, 0x3bf4, 0xd5f9, 0x0, 0x1);
        gbc.writeMem(0xc2a3, { 0xfe, 0xc2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdc75, gbc.sp());
        EXPECT(0xc2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc2a3));
        EXPECT(0xc2, gbc.readMem(0xc2a4));
        // FE 0040
        gbc.setState(0xe994, 0x988b, 0xcda0, 0x15a0, 0x8c56, 0x5497, 0x0, 0x0);
        gbc.writeMem(0xe994, { 0xfe, 0x61 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x988b, gbc.sp());
        EXPECT(0xe996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe994));
        EXPECT(0x61, gbc.readMem(0xe995));
        // FE 0041
        gbc.setState(0xcf85, 0x1d09, 0x4d10, 0xa93d, 0x2d11, 0xf3cb, 0x1, 0x1);
        gbc.writeMem(0xcf85, { 0xfe, 0x2f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1d09, gbc.sp());
        EXPECT(0xcf87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcf85));
        EXPECT(0x2f, gbc.readMem(0xcf86));
        // FE 0042
        gbc.setState(0xbfdd, 0x518b, 0x5530, 0x6105, 0xf7ea, 0xb351, 0x0, 0x0);
        gbc.writeMem(0xbfdd, { 0xfe, 0xaa });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x518b, gbc.sp());
        EXPECT(0xbfdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbfdd));
        EXPECT(0xaa, gbc.readMem(0xbfde));
        // FE 0043
        gbc.setState(0x6b27, 0x6e52, 0x6e00, 0x1a75, 0x1cca, 0x1c81, 0x1, 0x0);
        gbc.writeMem(0x6b27, { 0xfe, 0x7f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6e52, gbc.sp());
        EXPECT(0x6b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0044
        gbc.setState(0xef30, 0x6ebd, 0x4e60, 0xf15a, 0x94fa, 0xebd, 0x1, 0x0);
        gbc.writeMem(0xef30, { 0xfe, 0x31 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6ebd, gbc.sp());
        EXPECT(0xef32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xef30));
        EXPECT(0x31, gbc.readMem(0xef31));
        // FE 0045
        gbc.setState(0x3403, 0xda94, 0xd530, 0x5e3b, 0x2b46, 0x7967, 0x1, 0x1);
        gbc.writeMem(0x3403, { 0xfe, 0xec });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xda94, gbc.sp());
        EXPECT(0x3405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0046
        gbc.setState(0x6e78, 0x9e4f, 0x6330, 0xfe09, 0x55eb, 0x8f6e, 0x0, 0x1);
        gbc.writeMem(0x6e78, { 0xfe, 0x7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9e4f, gbc.sp());
        EXPECT(0x6e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0047
        gbc.setState(0x3fd9, 0x9d7d, 0x9280, 0xb15b, 0xd269, 0x730d, 0x1, 0x0);
        gbc.writeMem(0x3fd9, { 0xfe, 0x87 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9d7d, gbc.sp());
        EXPECT(0x3fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0048
        gbc.setState(0xc7c4, 0x1235, 0x7660, 0x9835, 0xc085, 0xd085, 0x0, 0x0);
        gbc.writeMem(0xc7c4, { 0xfe, 0x5f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1235, gbc.sp());
        EXPECT(0xc7c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc7c4));
        EXPECT(0x5f, gbc.readMem(0xc7c5));
        // FE 0049
        gbc.setState(0xbe8a, 0xedba, 0x7bd0, 0x5885, 0x6528, 0xc134, 0x0, 0x0);
        gbc.writeMem(0xbe8a, { 0xfe, 0xdf });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xedba, gbc.sp());
        EXPECT(0xbe8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbe8a));
        EXPECT(0xdf, gbc.readMem(0xbe8b));
        // FE 004A
        gbc.setState(0xdfe3, 0xf310, 0x7af0, 0xaa3a, 0xf027, 0x2f48, 0x1, 0x1);
        gbc.writeMem(0xdfe3, { 0xfe, 0x91 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf310, gbc.sp());
        EXPECT(0xdfe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdfe3));
        EXPECT(0x91, gbc.readMem(0xdfe4));
        // FE 004B
        gbc.setState(0x4c83, 0x3470, 0x5a40, 0x237c, 0x4c39, 0xe2aa, 0x1, 0x1);
        gbc.writeMem(0x4c83, { 0xfe, 0xac });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3470, gbc.sp());
        EXPECT(0x4c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 004C
        gbc.setState(0x5147, 0x5e30, 0xb940, 0x3a23, 0xd76d, 0x1cce, 0x1, 0x1);
        gbc.writeMem(0x5147, { 0xfe, 0x53 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5e30, gbc.sp());
        EXPECT(0x5149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 004D
        gbc.setState(0x3909, 0x42a9, 0xc8b0, 0xaae5, 0xe745, 0xeb65, 0x1, 0x1);
        gbc.writeMem(0x3909, { 0xfe, 0xfd });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x42a9, gbc.sp());
        EXPECT(0x390b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 004E
        gbc.setState(0x8cd2, 0x5db2, 0x5af0, 0x2541, 0xc138, 0x639e, 0x0, 0x1);
        gbc.writeMem(0x8cd2, { 0xfe, 0x38 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5db2, gbc.sp());
        EXPECT(0x8cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8cd2));
        EXPECT(0x38, gbc.readMem(0x8cd3));
        // FE 0050
        gbc.setState(0x63f8, 0x1a6, 0xa740, 0xb6fb, 0x9e5e, 0xe86, 0x1, 0x1);
        gbc.writeMem(0x63f8, { 0xfe, 0xbd });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1a6, gbc.sp());
        EXPECT(0x63fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0051
        gbc.setState(0xd17b, 0x3208, 0xb660, 0xb06c, 0x9d49, 0x60f1, 0x1, 0x0);
        gbc.writeMem(0xd17b, { 0xfe, 0xed });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3208, gbc.sp());
        EXPECT(0xd17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd17b));
        EXPECT(0xed, gbc.readMem(0xd17c));
        // FE 0052
        gbc.setState(0xa715, 0x40e2, 0x21c0, 0xd8be, 0xc076, 0x78b6, 0x0, 0x0);
        gbc.writeMem(0xa715, { 0xfe, 0x2f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x40e2, gbc.sp());
        EXPECT(0xa717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa715));
        EXPECT(0x2f, gbc.readMem(0xa716));
        // FE 0053
        gbc.setState(0xc07f, 0x8a05, 0xad00, 0x73a, 0xd2c7, 0x8ffa, 0x0, 0x1);
        gbc.writeMem(0xc07f, { 0xfe, 0x60 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8a05, gbc.sp());
        EXPECT(0xc081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc07f));
        EXPECT(0x60, gbc.readMem(0xc080));
        // FE 0054
        gbc.setState(0xe692, 0x3db6, 0xe880, 0xecee, 0xe3d1, 0x209c, 0x1, 0x1);
        gbc.writeMem(0xe692, { 0xfe, 0x46 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3db6, gbc.sp());
        EXPECT(0xe694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe692));
        EXPECT(0x46, gbc.readMem(0xe693));
        // FE 0056
        gbc.setState(0x36dc, 0xc3d1, 0x740, 0x6fb8, 0x1f8d, 0x10ca, 0x1, 0x0);
        gbc.writeMem(0x36dc, { 0xfe, 0xf9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc3d1, gbc.sp());
        EXPECT(0x36de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0057
        gbc.setState(0x1417, 0xb162, 0xa2f0, 0xd4b6, 0x1a83, 0xe825, 0x1, 0x0);
        gbc.writeMem(0x1417, { 0xfe, 0xc });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb162, gbc.sp());
        EXPECT(0x1419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0058
        gbc.setState(0x5a84, 0xecb3, 0xeaa0, 0xe5df, 0x988, 0x75d8, 0x1, 0x0);
        gbc.writeMem(0x5a84, { 0xfe, 0x80 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xecb3, gbc.sp());
        EXPECT(0x5a86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 005A
        gbc.setState(0xb5f3, 0xcc30, 0x9860, 0x7848, 0x4b21, 0xbf7c, 0x1, 0x1);
        gbc.writeMem(0xb5f3, { 0xfe, 0x58 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcc30, gbc.sp());
        EXPECT(0xb5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb5f3));
        EXPECT(0x58, gbc.readMem(0xb5f4));
        // FE 005B
        gbc.setState(0xb9ad, 0x4948, 0x2350, 0xdb53, 0x5721, 0xc38f, 0x0, 0x1);
        gbc.writeMem(0xb9ad, { 0xfe, 0x69 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4948, gbc.sp());
        EXPECT(0xb9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb9ad));
        EXPECT(0x69, gbc.readMem(0xb9ae));
        // FE 005C
        gbc.setState(0x17aa, 0x25fa, 0x5d0, 0xa7c8, 0xcf27, 0x6cd1, 0x1, 0x0);
        gbc.writeMem(0x17aa, { 0xfe, 0xa0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x25fa, gbc.sp());
        EXPECT(0x17ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 005D
        gbc.setState(0x40eb, 0x993b, 0x18a0, 0x33cd, 0x5de4, 0x800b, 0x1, 0x0);
        gbc.writeMem(0x40eb, { 0xfe, 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x993b, gbc.sp());
        EXPECT(0x40ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 005E
        gbc.setState(0x1c8a, 0x4fd2, 0xdea0, 0x9957, 0xfdb, 0x331e, 0x1, 0x1);
        gbc.writeMem(0x1c8a, { 0xfe, 0x8b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4fd2, gbc.sp());
        EXPECT(0x1c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 005F
        gbc.setState(0x2934, 0x8e64, 0x440, 0x535c, 0xb490, 0x2a50, 0x1, 0x1);
        gbc.writeMem(0x2934, { 0xfe, 0xcc });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8e64, gbc.sp());
        EXPECT(0x2936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0060
        gbc.setState(0x4ffc, 0xf495, 0x960, 0xa033, 0xd6d2, 0x89ab, 0x0, 0x1);
        gbc.writeMem(0x4ffc, { 0xfe, 0x28 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf495, gbc.sp());
        EXPECT(0x4ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0061
        gbc.setState(0xbcc0, 0xf292, 0x7a0, 0x57a0, 0x1df6, 0xbd28, 0x0, 0x1);
        gbc.writeMem(0xbcc0, { 0xfe, 0xcb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf292, gbc.sp());
        EXPECT(0xbcc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbcc0));
        EXPECT(0xcb, gbc.readMem(0xbcc1));
        // FE 0062
        gbc.setState(0xb2a3, 0x65c2, 0xafa0, 0xd50, 0xb387, 0xfc97, 0x1, 0x0);
        gbc.writeMem(0xb2a3, { 0xfe, 0xd9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x65c2, gbc.sp());
        EXPECT(0xb2a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb2a3));
        EXPECT(0xd9, gbc.readMem(0xb2a4));
        // FE 0063
        gbc.setState(0xd19a, 0x60fa, 0x6710, 0x9c46, 0x5cc8, 0x8e71, 0x0, 0x1);
        gbc.writeMem(0xd19a, { 0xfe, 0xcd });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x60fa, gbc.sp());
        EXPECT(0xd19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd19a));
        EXPECT(0xcd, gbc.readMem(0xd19b));
        // FE 0064
        gbc.setState(0xe399, 0x4ea0, 0xfc90, 0xcc07, 0x9cb9, 0x241a, 0x1, 0x1);
        gbc.writeMem(0xe399, { 0xfe, 0xb8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4ea0, gbc.sp());
        EXPECT(0xe39b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe399));
        EXPECT(0xb8, gbc.readMem(0xe39a));
        // FE 0066
        gbc.setState(0xb104, 0x4cfb, 0x83b0, 0xe2ac, 0x9c06, 0x1f46, 0x0, 0x1);
        gbc.writeMem(0xb104, { 0xfe, 0x4d });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4cfb, gbc.sp());
        EXPECT(0xb106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb104));
        EXPECT(0x4d, gbc.readMem(0xb105));
        // FE 0067
        gbc.setState(0x634e, 0x2ce7, 0x8b50, 0x637, 0xdc1a, 0x804c, 0x0, 0x0);
        gbc.writeMem(0x634e, { 0xfe, 0x9d });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2ce7, gbc.sp());
        EXPECT(0x6350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0068
        gbc.setState(0x7aba, 0x1a8f, 0xf330, 0x3ef7, 0xcac6, 0x93d4, 0x0, 0x0);
        gbc.writeMem(0x7aba, { 0xfe, 0xf });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1a8f, gbc.sp());
        EXPECT(0x7abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0069
        gbc.setState(0x3836, 0x4517, 0x8e60, 0xc758, 0xd68e, 0xe62e, 0x0, 0x1);
        gbc.writeMem(0x3836, { 0xfe, 0x4d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4517, gbc.sp());
        EXPECT(0x3838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 006A
        gbc.setState(0x5bfc, 0x126b, 0xbe40, 0xc4bb, 0x6133, 0x2b3, 0x0, 0x0);
        gbc.writeMem(0x5bfc, { 0xfe, 0xee });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x126b, gbc.sp());
        EXPECT(0x5bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 006B
        gbc.setState(0x1485, 0xf0ef, 0xc180, 0x2a06, 0xbe9, 0xf069, 0x0, 0x1);
        gbc.writeMem(0x1485, { 0xfe, 0x6a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf0ef, gbc.sp());
        EXPECT(0x1487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 006C
        gbc.setState(0xd241, 0xd5e1, 0x5bd0, 0x27d4, 0x1a34, 0x99b6, 0x1, 0x1);
        gbc.writeMem(0xd241, { 0xfe, 0xb2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd5e1, gbc.sp());
        EXPECT(0xd243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd241));
        EXPECT(0xb2, gbc.readMem(0xd242));
        // FE 006D
        gbc.setState(0xd1a9, 0x3137, 0xa4c0, 0xe2c4, 0x7413, 0x7bd9, 0x1, 0x1);
        gbc.writeMem(0xd1a9, { 0xfe, 0x84 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3137, gbc.sp());
        EXPECT(0xd1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd1a9));
        EXPECT(0x84, gbc.readMem(0xd1aa));
        // FE 006E
        gbc.setState(0x8d71, 0x97e3, 0xe7d0, 0xb79c, 0x2961, 0x8a5, 0x0, 0x0);
        gbc.writeMem(0x8d71, { 0xfe, 0x4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x97e3, gbc.sp());
        EXPECT(0x8d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8d71));
        EXPECT(0x4, gbc.readMem(0x8d72));
        // FE 006F
        gbc.setState(0x77a7, 0x6c5f, 0x7e30, 0xbe11, 0x9d06, 0x4281, 0x0, 0x0);
        gbc.writeMem(0x77a7, { 0xfe, 0x85 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6c5f, gbc.sp());
        EXPECT(0x77a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0070
        gbc.setState(0x7365, 0x180c, 0xa3e0, 0x8809, 0xa36b, 0x283c, 0x1, 0x1);
        gbc.writeMem(0x7365, { 0xfe, 0x5d });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x180c, gbc.sp());
        EXPECT(0x7367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0071
        gbc.setState(0x82bb, 0xf1bb, 0xf120, 0x3170, 0xf1ca, 0x2a21, 0x1, 0x0);
        gbc.writeMem(0x82bb, { 0xfe, 0xd9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf1bb, gbc.sp());
        EXPECT(0x82bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x82bb));
        EXPECT(0xd9, gbc.readMem(0x82bc));
        // FE 0072
        gbc.setState(0x85d3, 0x6573, 0x18c0, 0xced2, 0x7137, 0x229e, 0x0, 0x0);
        gbc.writeMem(0x85d3, { 0xfe, 0xd });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6573, gbc.sp());
        EXPECT(0x85d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x85d3));
        EXPECT(0xd, gbc.readMem(0x85d4));
        // FE 0073
        gbc.setState(0xdee2, 0x9645, 0x3930, 0x49e3, 0xe96f, 0xf125, 0x0, 0x0);
        gbc.writeMem(0xdee2, { 0xfe, 0x98 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9645, gbc.sp());
        EXPECT(0xdee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdee2));
        EXPECT(0x98, gbc.readMem(0xdee3));
        // FE 0074
        gbc.setState(0xbfe9, 0xce5d, 0xcc70, 0x9be9, 0xcf9c, 0x9431, 0x0, 0x0);
        gbc.writeMem(0xbfe9, { 0xfe, 0x10 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xce5d, gbc.sp());
        EXPECT(0xbfeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbfe9));
        EXPECT(0x10, gbc.readMem(0xbfea));
        // FE 0075
        gbc.setState(0x9522, 0x3783, 0xd130, 0x28a4, 0xa2bb, 0xde29, 0x0, 0x1);
        gbc.writeMem(0x9522, { 0xfe, 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3783, gbc.sp());
        EXPECT(0x9524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9522));
        EXPECT(0xac, gbc.readMem(0x9523));
        // FE 0076
        gbc.setState(0xdafa, 0x89d6, 0x3a90, 0x99a8, 0xf007, 0xdfdc, 0x0, 0x1);
        gbc.writeMem(0xdafa, { 0xfe, 0x71 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x89d6, gbc.sp());
        EXPECT(0xdafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdafa));
        EXPECT(0x71, gbc.readMem(0xdafb));
        // FE 0077
        gbc.setState(0xdfbf, 0x2651, 0x6e0, 0x4cd7, 0x5b8e, 0xc6f0, 0x1, 0x0);
        gbc.writeMem(0xdfbf, { 0xfe, 0x82 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2651, gbc.sp());
        EXPECT(0xdfc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdfbf));
        EXPECT(0x82, gbc.readMem(0xdfc0));
        // FE 0078
        gbc.setState(0x2e88, 0x23a1, 0x3b40, 0x4a29, 0xcf7e, 0x9684, 0x0, 0x0);
        gbc.writeMem(0x2e88, { 0xfe, 0x3a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x23a1, gbc.sp());
        EXPECT(0x2e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0079
        gbc.setState(0xcfc4, 0xc04a, 0xee80, 0xb9a, 0x5c31, 0x4fe7, 0x0, 0x0);
        gbc.writeMem(0xcfc4, { 0xfe, 0x3d });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc04a, gbc.sp());
        EXPECT(0xcfc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcfc4));
        EXPECT(0x3d, gbc.readMem(0xcfc5));
        // FE 007A
        gbc.setState(0x39f9, 0x6454, 0x26d0, 0xee9b, 0x77b2, 0x4d4f, 0x0, 0x1);
        gbc.writeMem(0x39f9, { 0xfe, 0x51 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6454, gbc.sp());
        EXPECT(0x39fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 007B
        gbc.setState(0x44ba, 0xd1ff, 0xfad0, 0xe7f9, 0x1068, 0xc61, 0x1, 0x1);
        gbc.writeMem(0x44ba, { 0xfe, 0xbe });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd1ff, gbc.sp());
        EXPECT(0x44bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 007C
        gbc.setState(0x7169, 0xb4b9, 0x500, 0x74c1, 0x616b, 0x2b35, 0x0, 0x0);
        gbc.writeMem(0x7169, { 0xfe, 0xa4 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb4b9, gbc.sp());
        EXPECT(0x716b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 007D
        gbc.setState(0x3b87, 0xaa7f, 0x4e50, 0x873e, 0x778b, 0xa2f8, 0x1, 0x0);
        gbc.writeMem(0x3b87, { 0xfe, 0xae });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xaa7f, gbc.sp());
        EXPECT(0x3b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 007E
        gbc.setState(0x85c3, 0xd31e, 0xa8e0, 0x94da, 0xf644, 0x5296, 0x0, 0x0);
        gbc.writeMem(0x85c3, { 0xfe, 0x72 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd31e, gbc.sp());
        EXPECT(0x85c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x85c3));
        EXPECT(0x72, gbc.readMem(0x85c4));
        // FE 007F
        gbc.setState(0x2b0, 0x4dbb, 0xbf30, 0x4513, 0x9de5, 0xf552, 0x1, 0x1);
        gbc.writeMem(0x2b0, { 0xfe, 0x22 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x4dbb, gbc.sp());
        EXPECT(0x2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0080
        gbc.setState(0x7d14, 0x6d15, 0x9490, 0xc73e, 0xf65, 0x80b0, 0x1, 0x0);
        gbc.writeMem(0x7d14, { 0xfe, 0x2a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6d15, gbc.sp());
        EXPECT(0x7d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0081
        gbc.setState(0x25e7, 0x3846, 0xb410, 0xa3e0, 0xed2c, 0x8ed9, 0x1, 0x0);
        gbc.writeMem(0x25e7, { 0xfe, 0x2e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3846, gbc.sp());
        EXPECT(0x25e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0082
        gbc.setState(0xe38c, 0xae14, 0x4510, 0xdce5, 0xd90b, 0x2ccb, 0x1, 0x1);
        gbc.writeMem(0xe38c, { 0xfe, 0x6a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xae14, gbc.sp());
        EXPECT(0xe38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe38c));
        EXPECT(0x6a, gbc.readMem(0xe38d));
        // FE 0083
        gbc.setState(0x759f, 0xb23c, 0xfc30, 0xcaab, 0x21e5, 0x82ba, 0x0, 0x1);
        gbc.writeMem(0x759f, { 0xfe, 0xf9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb23c, gbc.sp());
        EXPECT(0x75a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0084
        gbc.setState(0x993c, 0x8c6d, 0x31a0, 0x86ce, 0x32d9, 0xbea6, 0x0, 0x1);
        gbc.writeMem(0x993c, { 0xfe, 0x5d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8c6d, gbc.sp());
        EXPECT(0x993e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x993c));
        EXPECT(0x5d, gbc.readMem(0x993d));
        // FE 0085
        gbc.setState(0x6417, 0x6e59, 0x7fc0, 0xd070, 0xb7c, 0x6176, 0x0, 0x0);
        gbc.writeMem(0x6417, { 0xfe, 0xc });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6e59, gbc.sp());
        EXPECT(0x6419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0086
        gbc.setState(0x4052, 0x9a48, 0x8a40, 0x299c, 0xc615, 0xd5b7, 0x1, 0x1);
        gbc.writeMem(0x4052, { 0xfe, 0x23 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9a48, gbc.sp());
        EXPECT(0x4054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0087
        gbc.setState(0xb4d6, 0xf48b, 0x71c0, 0xf120, 0x728b, 0xff2f, 0x0, 0x0);
        gbc.writeMem(0xb4d6, { 0xfe, 0x33 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf48b, gbc.sp());
        EXPECT(0xb4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb4d6));
        EXPECT(0x33, gbc.readMem(0xb4d7));
        // FE 0088
        gbc.setState(0xa20, 0xe02e, 0xf0a0, 0xc326, 0xbe9e, 0x5d05, 0x0, 0x0);
        gbc.writeMem(0xa20, { 0xfe, 0xd5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe02e, gbc.sp());
        EXPECT(0xa22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0089
        gbc.setState(0x4f9f, 0xeee6, 0xb6a0, 0xaeb3, 0xfe0, 0xebb0, 0x0, 0x1);
        gbc.writeMem(0x4f9f, { 0xfe, 0x8a });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0x4fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 008A
        gbc.setState(0x5b11, 0xe45b, 0x8490, 0x29e3, 0x8c74, 0x20a0, 0x1, 0x1);
        gbc.writeMem(0x5b11, { 0xfe, 0x8c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe45b, gbc.sp());
        EXPECT(0x5b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 008B
        gbc.setState(0xe12e, 0xe162, 0x8d20, 0x28c, 0x3aee, 0x2619, 0x1, 0x1);
        gbc.writeMem(0xe12e, { 0xfe, 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe162, gbc.sp());
        EXPECT(0xe130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe12e));
        EXPECT(0x8f, gbc.readMem(0xe12f));
        // FE 008C
        gbc.setState(0xa6e8, 0x3c6e, 0xe740, 0x8cb3, 0xffb6, 0x6925, 0x1, 0x1);
        gbc.writeMem(0xa6e8, { 0xfe, 0x80 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3c6e, gbc.sp());
        EXPECT(0xa6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa6e8));
        EXPECT(0x80, gbc.readMem(0xa6e9));
        // FE 008D
        gbc.setState(0x8ad, 0x1915, 0x6280, 0x198d, 0x32b, 0x138, 0x0, 0x1);
        gbc.writeMem(0x8ad, { 0xfe, 0x72 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1915, gbc.sp());
        EXPECT(0x8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 008E
        gbc.setState(0x85ee, 0x50c0, 0x9460, 0xe916, 0x3d5c, 0x3768, 0x1, 0x0);
        gbc.writeMem(0x85ee, { 0xfe, 0xd3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x50c0, gbc.sp());
        EXPECT(0x85f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x85ee));
        EXPECT(0xd3, gbc.readMem(0x85ef));
        // FE 008F
        gbc.setState(0x3f36, 0xaaae, 0xf8f0, 0xe40e, 0x1588, 0x6f23, 0x0, 0x1);
        gbc.writeMem(0x3f36, { 0xfe, 0x8e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaaae, gbc.sp());
        EXPECT(0x3f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0090
        gbc.setState(0x6df0, 0x1428, 0xaaa0, 0x266a, 0xa94e, 0x86db, 0x1, 0x0);
        gbc.writeMem(0x6df0, { 0xfe, 0xec });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1428, gbc.sp());
        EXPECT(0x6df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0091
        gbc.setState(0x88c8, 0x726d, 0x6820, 0xa80b, 0xe606, 0xd1df, 0x0, 0x0);
        gbc.writeMem(0x88c8, { 0xfe, 0x11 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x726d, gbc.sp());
        EXPECT(0x88ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x88c8));
        EXPECT(0x11, gbc.readMem(0x88c9));
        // FE 0092
        gbc.setState(0xa9d4, 0x80f7, 0xdca0, 0x2d2f, 0x7ff1, 0x35d4, 0x1, 0x1);
        gbc.writeMem(0xa9d4, { 0xfe, 0x14 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x80f7, gbc.sp());
        EXPECT(0xa9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa9d4));
        EXPECT(0x14, gbc.readMem(0xa9d5));
        // FE 0093
        gbc.setState(0xdcc3, 0xf060, 0xad10, 0xc23b, 0xb77d, 0xe4a4, 0x1, 0x1);
        gbc.writeMem(0xdcc3, { 0xfe, 0x78 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf060, gbc.sp());
        EXPECT(0xdcc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdcc3));
        EXPECT(0x78, gbc.readMem(0xdcc4));
        // FE 0094
        gbc.setState(0x71f8, 0x51df, 0xc2c0, 0x8c29, 0xbdf1, 0x39f0, 0x1, 0x1);
        gbc.writeMem(0x71f8, { 0xfe, 0xab });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x51df, gbc.sp());
        EXPECT(0x71fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0095
        gbc.setState(0x77a, 0x91d1, 0x6b50, 0x45a3, 0xea72, 0xb164, 0x0, 0x0);
        gbc.writeMem(0x77a, { 0xfe, 0x2e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x91d1, gbc.sp());
        EXPECT(0x77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0096
        gbc.setState(0x2880, 0x87db, 0xd2d0, 0x5920, 0xe075, 0x1cd3, 0x1, 0x0);
        gbc.writeMem(0x2880, { 0xfe, 0x96 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x87db, gbc.sp());
        EXPECT(0x2882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0097
        gbc.setState(0xd046, 0x5762, 0x4a40, 0x2712, 0x28a6, 0x30a9, 0x1, 0x0);
        gbc.writeMem(0xd046, { 0xfe, 0x31 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5762, gbc.sp());
        EXPECT(0xd048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd046));
        EXPECT(0x31, gbc.readMem(0xd047));
        // FE 0098
        gbc.setState(0x9a81, 0x4e43, 0x1310, 0x979e, 0x52f3, 0x84e0, 0x1, 0x1);
        gbc.writeMem(0x9a81, { 0xfe, 0x41 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4e43, gbc.sp());
        EXPECT(0x9a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9a81));
        EXPECT(0x41, gbc.readMem(0x9a82));
        // FE 0099
        gbc.setState(0x3a02, 0x1da7, 0xaa10, 0x9f94, 0x5099, 0xf47a, 0x1, 0x0);
        gbc.writeMem(0x3a02, { 0xfe, 0xef });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1da7, gbc.sp());
        EXPECT(0x3a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 009A
        gbc.setState(0x2711, 0x662a, 0x6c80, 0xd0b4, 0x7454, 0xfa98, 0x1, 0x1);
        gbc.writeMem(0x2711, { 0xfe, 0x92 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x662a, gbc.sp());
        EXPECT(0x2713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 009B
        gbc.setState(0xc0e9, 0x6fc4, 0xdd10, 0xa770, 0x5f86, 0x6220, 0x0, 0x0);
        gbc.writeMem(0xc0e9, { 0xfe, 0xbe });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6fc4, gbc.sp());
        EXPECT(0xc0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc0e9));
        EXPECT(0xbe, gbc.readMem(0xc0ea));
        // FE 009C
        gbc.setState(0xa75, 0x9548, 0x6940, 0xeba6, 0x6a05, 0xa621, 0x0, 0x0);
        gbc.writeMem(0xa75, { 0xfe, 0x28 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9548, gbc.sp());
        EXPECT(0xa77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 009D
        gbc.setState(0x27cb, 0x4377, 0x11a0, 0x13fb, 0x7f8c, 0x5ef8, 0x0, 0x0);
        gbc.writeMem(0x27cb, { 0xfe, 0x55 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4377, gbc.sp());
        EXPECT(0x27cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 009E
        gbc.setState(0x2543, 0x356b, 0x1520, 0xdd4a, 0x6bb0, 0x3e80, 0x1, 0x0);
        gbc.writeMem(0x2543, { 0xfe, 0xb8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x356b, gbc.sp());
        EXPECT(0x2545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 009F
        gbc.setState(0x712f, 0x3ce3, 0x560, 0x8e24, 0x6d14, 0xbccd, 0x1, 0x0);
        gbc.writeMem(0x712f, { 0xfe, 0x2c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3ce3, gbc.sp());
        EXPECT(0x7131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00A0
        gbc.setState(0x8fc5, 0xd989, 0xf310, 0xdf79, 0x5af6, 0xf628, 0x0, 0x0);
        gbc.writeMem(0x8fc5, { 0xfe, 0x3b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd989, gbc.sp());
        EXPECT(0x8fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8fc5));
        EXPECT(0x3b, gbc.readMem(0x8fc6));
        // FE 00A1
        gbc.setState(0x7be4, 0x5060, 0x7960, 0x72d7, 0x4d60, 0x2fbe, 0x1, 0x0);
        gbc.writeMem(0x7be4, { 0xfe, 0x75 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5060, gbc.sp());
        EXPECT(0x7be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00A2
        gbc.setState(0x41fa, 0xd0d4, 0x7f00, 0x1cc2, 0x4312, 0x63ef, 0x1, 0x0);
        gbc.writeMem(0x41fa, { 0xfe, 0x5d });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd0d4, gbc.sp());
        EXPECT(0x41fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00A3
        gbc.setState(0x7e3c, 0x2416, 0xa110, 0x7f19, 0xda00, 0x9356, 0x0, 0x0);
        gbc.writeMem(0x7e3c, { 0xfe, 0x4 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2416, gbc.sp());
        EXPECT(0x7e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00A4
        gbc.setState(0x82c8, 0xdc89, 0x4440, 0xfec7, 0x7a5e, 0x5812, 0x1, 0x1);
        gbc.writeMem(0x82c8, { 0xfe, 0xd4 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdc89, gbc.sp());
        EXPECT(0x82ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x82c8));
        EXPECT(0xd4, gbc.readMem(0x82c9));
        // FE 00A5
        gbc.setState(0x9bbd, 0xc517, 0x75a0, 0xf6c5, 0x7c97, 0x10ea, 0x1, 0x0);
        gbc.writeMem(0x9bbd, { 0xfe, 0x3f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc517, gbc.sp());
        EXPECT(0x9bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9bbd));
        EXPECT(0x3f, gbc.readMem(0x9bbe));
        // FE 00A6
        gbc.setState(0x5a30, 0x2b38, 0x6bc0, 0x7d32, 0x5dcf, 0x2a88, 0x1, 0x0);
        gbc.writeMem(0x5a30, { 0xfe, 0x8d });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2b38, gbc.sp());
        EXPECT(0x5a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00A7
        gbc.setState(0x16f8, 0xf07e, 0xaf80, 0xfd59, 0xfae0, 0x289, 0x1, 0x0);
        gbc.writeMem(0x16f8, { 0xfe, 0x80 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf07e, gbc.sp());
        EXPECT(0x16fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00A8
        gbc.setState(0x76ae, 0x8b1e, 0xf30, 0x3317, 0x1426, 0xeebf, 0x0, 0x0);
        gbc.writeMem(0x76ae, { 0xfe, 0xd5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8b1e, gbc.sp());
        EXPECT(0x76b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00A9
        gbc.setState(0xd818, 0xade2, 0xfff0, 0xbacc, 0x98bc, 0x4b96, 0x0, 0x0);
        gbc.writeMem(0xd818, { 0xfe, 0x33 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xade2, gbc.sp());
        EXPECT(0xd81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd818));
        EXPECT(0x33, gbc.readMem(0xd819));
        // FE 00AA
        gbc.setState(0xe03, 0x7430, 0xde0, 0xc77a, 0x94e1, 0xdf94, 0x0, 0x0);
        gbc.writeMem(0xe03, { 0xfe, 0xd9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7430, gbc.sp());
        EXPECT(0xe05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00AB
        gbc.setState(0x8479, 0x92c3, 0x6340, 0x6c6f, 0x5ede, 0x1159, 0x1, 0x1);
        gbc.writeMem(0x8479, { 0xfe, 0x9e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x92c3, gbc.sp());
        EXPECT(0x847b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8479));
        EXPECT(0x9e, gbc.readMem(0x847a));
        // FE 00AC
        gbc.setState(0x2ece, 0xc386, 0x8760, 0x88ea, 0x5be, 0xf503, 0x0, 0x0);
        gbc.writeMem(0x2ece, { 0xfe, 0x9f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc386, gbc.sp());
        EXPECT(0x2ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00AE
        gbc.setState(0xb3e0, 0x7777, 0x86f0, 0x19f8, 0x4275, 0x4a05, 0x1, 0x1);
        gbc.writeMem(0xb3e0, { 0xfe, 0x96 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7777, gbc.sp());
        EXPECT(0xb3e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb3e0));
        EXPECT(0x96, gbc.readMem(0xb3e1));
        // FE 00AF
        gbc.setState(0x74b0, 0xf40f, 0x69c0, 0xabc4, 0x1da5, 0xd2d7, 0x0, 0x1);
        gbc.writeMem(0x74b0, { 0xfe, 0x3a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf40f, gbc.sp());
        EXPECT(0x74b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00B0
        gbc.setState(0x1bbe, 0x5b40, 0x23b0, 0xc131, 0x3444, 0xaf97, 0x1, 0x0);
        gbc.writeMem(0x1bbe, { 0xfe, 0xfd });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5b40, gbc.sp());
        EXPECT(0x1bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00B1
        gbc.setState(0x9a2a, 0xc2a9, 0x6d30, 0x3d9c, 0x7a8d, 0x2adf, 0x0, 0x1);
        gbc.writeMem(0x9a2a, { 0xfe, 0x88 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc2a9, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9a2a));
        EXPECT(0x88, gbc.readMem(0x9a2b));
        // FE 00B2
        gbc.setState(0xac41, 0x4f54, 0x3440, 0x1abd, 0x9ed3, 0x4f10, 0x1, 0x0);
        gbc.writeMem(0xac41, { 0xfe, 0x83 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4f54, gbc.sp());
        EXPECT(0xac43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xac41));
        EXPECT(0x83, gbc.readMem(0xac42));
        // FE 00B3
        gbc.setState(0xbca8, 0x2d8b, 0xb930, 0x9a0b, 0xbd2f, 0x86b, 0x1, 0x1);
        gbc.writeMem(0xbca8, { 0xfe, 0x25 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2d8b, gbc.sp());
        EXPECT(0xbcaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbca8));
        EXPECT(0x25, gbc.readMem(0xbca9));
        // FE 00B5
        gbc.setState(0x254, 0xb04f, 0xa380, 0xcba0, 0x632a, 0x6d7, 0x0, 0x0);
        gbc.writeMem(0x254, { 0xfe, 0xd8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb04f, gbc.sp());
        EXPECT(0x256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00B6
        gbc.setState(0x4fed, 0xe32a, 0x3220, 0x9c23, 0x85db, 0x3ccb, 0x0, 0x0);
        gbc.writeMem(0x4fed, { 0xfe, 0xc6 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe32a, gbc.sp());
        EXPECT(0x4fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00B7
        gbc.setState(0x75ac, 0x548f, 0x8170, 0x88bf, 0xf74, 0x539d, 0x0, 0x0);
        gbc.writeMem(0x75ac, { 0xfe, 0x8c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x548f, gbc.sp());
        EXPECT(0x75ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00B8
        gbc.setState(0x9715, 0x3840, 0xfc20, 0xc3d5, 0xb8e2, 0x4739, 0x0, 0x0);
        gbc.writeMem(0x9715, { 0xfe, 0xdd });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3840, gbc.sp());
        EXPECT(0x9717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9715));
        EXPECT(0xdd, gbc.readMem(0x9716));
        // FE 00B9
        gbc.setState(0x4d60, 0x550b, 0x7ca0, 0x7c9b, 0x3ee0, 0xf022, 0x1, 0x1);
        gbc.writeMem(0x4d60, { 0xfe, 0x84 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x550b, gbc.sp());
        EXPECT(0x4d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00BA
        gbc.setState(0xa484, 0x3585, 0x26b0, 0x1882, 0x10cc, 0xb613, 0x1, 0x1);
        gbc.writeMem(0xa484, { 0xfe, 0x73 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3585, gbc.sp());
        EXPECT(0xa486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa484));
        EXPECT(0x73, gbc.readMem(0xa485));
        // FE 00BB
        gbc.setState(0xb8af, 0x6cbe, 0x730, 0xf9b, 0x3aa1, 0x384, 0x0, 0x0);
        gbc.writeMem(0xb8af, { 0xfe, 0x87 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6cbe, gbc.sp());
        EXPECT(0xb8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb8af));
        EXPECT(0x87, gbc.readMem(0xb8b0));
        // FE 00BC
        gbc.setState(0x14ed, 0x12af, 0xdcc0, 0x8bff, 0xd476, 0x6930, 0x0, 0x0);
        gbc.writeMem(0x14ed, { 0xfe, 0x32 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x12af, gbc.sp());
        EXPECT(0x14ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00BD
        gbc.setState(0xca7a, 0x8fa5, 0x6590, 0x835, 0xd1d3, 0x94fb, 0x0, 0x1);
        gbc.writeMem(0xca7a, { 0xfe, 0x30 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8fa5, gbc.sp());
        EXPECT(0xca7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xca7a));
        EXPECT(0x30, gbc.readMem(0xca7b));
        // FE 00BE
        gbc.setState(0x6d06, 0x40a0, 0x820, 0x96bb, 0x9a9, 0x85a7, 0x1, 0x0);
        gbc.writeMem(0x6d06, { 0xfe, 0xc1 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x40a0, gbc.sp());
        EXPECT(0x6d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00C0
        gbc.setState(0xb3f, 0xf14a, 0xbc60, 0x5205, 0x65e8, 0x2cc2, 0x0, 0x1);
        gbc.writeMem(0xb3f, { 0xfe, 0xc8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf14a, gbc.sp());
        EXPECT(0xb41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00C1
        gbc.setState(0x6de2, 0x1f78, 0x9a70, 0x5a60, 0x2d9b, 0xcd7f, 0x1, 0x0);
        gbc.writeMem(0x6de2, { 0xfe, 0xb1 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1f78, gbc.sp());
        EXPECT(0x6de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00C2
        gbc.setState(0xac5d, 0xcfcd, 0x6b70, 0x500f, 0xc666, 0x36ae, 0x1, 0x1);
        gbc.writeMem(0xac5d, { 0xfe, 0x82 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcfcd, gbc.sp());
        EXPECT(0xac5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xac5d));
        EXPECT(0x82, gbc.readMem(0xac5e));
        // FE 00C3
        gbc.setState(0x7219, 0xd1d3, 0x7030, 0x18c2, 0xc5b, 0x6eae, 0x0, 0x1);
        gbc.writeMem(0x7219, { 0xfe, 0x9f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd1d3, gbc.sp());
        EXPECT(0x721b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00C5
        gbc.setState(0x58db, 0x6772, 0x840, 0xddb6, 0x354e, 0xf128, 0x1, 0x0);
        gbc.writeMem(0x58db, { 0xfe, 0x97 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6772, gbc.sp());
        EXPECT(0x58dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00C7
        gbc.setState(0x3a50, 0xf504, 0xdd70, 0x912d, 0x48d7, 0x54f7, 0x1, 0x1);
        gbc.writeMem(0x3a50, { 0xfe, 0x1f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf504, gbc.sp());
        EXPECT(0x3a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00C8
        gbc.setState(0x747f, 0x75f1, 0xa380, 0xc213, 0x73f7, 0x6a5, 0x0, 0x0);
        gbc.writeMem(0x747f, { 0xfe, 0x38 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x75f1, gbc.sp());
        EXPECT(0x7481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00C9
        gbc.setState(0xee57, 0xb7ce, 0x2860, 0xecb9, 0xcc79, 0x1ae, 0x0, 0x1);
        gbc.writeMem(0xee57, { 0xfe, 0x9c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb7ce, gbc.sp());
        EXPECT(0xee59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xee57));
        EXPECT(0x9c, gbc.readMem(0xee58));
        // FE 00CA
        gbc.setState(0xaf22, 0x23be, 0x8a20, 0x3dd5, 0xbf7a, 0x59d, 0x1, 0x1);
        gbc.writeMem(0xaf22, { 0xfe, 0xcd });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x23be, gbc.sp());
        EXPECT(0xaf24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xaf22));
        EXPECT(0xcd, gbc.readMem(0xaf23));
        // FE 00CB
        gbc.setState(0x36ac, 0x6fc7, 0x2500, 0x5468, 0x20e2, 0x80d2, 0x1, 0x0);
        gbc.writeMem(0x36ac, { 0xfe, 0x5e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6fc7, gbc.sp());
        EXPECT(0x36ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00CC
        gbc.setState(0xdece, 0x74b, 0x51c0, 0x787e, 0x46ba, 0x1df8, 0x0, 0x0);
        gbc.writeMem(0xdece, { 0xfe, 0x8e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x74b, gbc.sp());
        EXPECT(0xded0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdece));
        EXPECT(0x8e, gbc.readMem(0xdecf));
        // FE 00CD
        gbc.setState(0x659a, 0xcaaf, 0x3ad0, 0xe7b9, 0xbe6a, 0x7228, 0x0, 0x1);
        gbc.writeMem(0x659a, { 0xfe, 0xd7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xcaaf, gbc.sp());
        EXPECT(0x659c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00CE
        gbc.setState(0x23b3, 0x5bf2, 0xd270, 0xd28a, 0x6cfe, 0xe214, 0x1, 0x0);
        gbc.writeMem(0x23b3, { 0xfe, 0xf7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5bf2, gbc.sp());
        EXPECT(0x23b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00CF
        gbc.setState(0xcd19, 0xac1d, 0xb460, 0x6a8c, 0x331a, 0x4c, 0x0, 0x0);
        gbc.writeMem(0xcd19, { 0xfe, 0x7d });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xac1d, gbc.sp());
        EXPECT(0xcd1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcd19));
        EXPECT(0x7d, gbc.readMem(0xcd1a));
        // FE 00D0
        gbc.setState(0x128, 0xb45, 0xcb70, 0x4226, 0xf959, 0xd923, 0x0, 0x0);
        gbc.writeMem(0x128, { 0xfe, 0x60 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb45, gbc.sp());
        EXPECT(0x12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00D1
        gbc.setState(0xd2f9, 0x93f7, 0x4d30, 0xb20e, 0xf3f4, 0xdc43, 0x1, 0x0);
        gbc.writeMem(0xd2f9, { 0xfe, 0x29 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x93f7, gbc.sp());
        EXPECT(0xd2fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd2f9));
        EXPECT(0x29, gbc.readMem(0xd2fa));
        // FE 00D2
        gbc.setState(0xa803, 0x194e, 0xad30, 0xa40d, 0xa5a5, 0xbda2, 0x0, 0x0);
        gbc.writeMem(0xa803, { 0xfe, 0xf1 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x194e, gbc.sp());
        EXPECT(0xa805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa803));
        EXPECT(0xf1, gbc.readMem(0xa804));
        // FE 00D4
        gbc.setState(0xe4a9, 0x8e12, 0x5510, 0x5ef2, 0x26a8, 0x479, 0x1, 0x1);
        gbc.writeMem(0xe4a9, { 0xfe, 0x9b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8e12, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe4a9));
        EXPECT(0x9b, gbc.readMem(0xe4aa));
        // FE 00D5
        gbc.setState(0x28e6, 0x2ddb, 0x6a00, 0x8d90, 0xbbac, 0x6dcb, 0x1, 0x1);
        gbc.writeMem(0x28e6, { 0xfe, 0xc9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2ddb, gbc.sp());
        EXPECT(0x28e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00D6
        gbc.setState(0x96e0, 0xfbd0, 0x6210, 0x4b7e, 0x47a2, 0x1496, 0x0, 0x1);
        gbc.writeMem(0x96e0, { 0xfe, 0xf1 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfbd0, gbc.sp());
        EXPECT(0x96e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x96e0));
        EXPECT(0xf1, gbc.readMem(0x96e1));
        // FE 00D7
        gbc.setState(0x89ea, 0xd63, 0xd990, 0x37a6, 0x48d4, 0x2537, 0x1, 0x1);
        gbc.writeMem(0x89ea, { 0xfe, 0x43 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd63, gbc.sp());
        EXPECT(0x89ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x89ea));
        EXPECT(0x43, gbc.readMem(0x89eb));
        // FE 00D8
        gbc.setState(0x10d1, 0x89e8, 0xb420, 0x4ddc, 0xaf18, 0x44ef, 0x0, 0x1);
        gbc.writeMem(0x10d1, { 0xfe, 0x86 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x89e8, gbc.sp());
        EXPECT(0x10d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00D9
        gbc.setState(0x7a1e, 0x751c, 0x90, 0xff18, 0x2772, 0x3da5, 0x0, 0x0);
        gbc.writeMem(0x7a1e, { 0xfe, 0x79 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x751c, gbc.sp());
        EXPECT(0x7a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00DA
        gbc.setState(0x801a, 0x3e61, 0x1990, 0x4a4e, 0x36b9, 0x96a1, 0x0, 0x0);
        gbc.writeMem(0x801a, { 0xfe, 0x5d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3e61, gbc.sp());
        EXPECT(0x801c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x801a));
        EXPECT(0x5d, gbc.readMem(0x801b));
        // FE 00DB
        gbc.setState(0x1179, 0xc171, 0x2ca0, 0xff0f, 0xa505, 0x8577, 0x1, 0x1);
        gbc.writeMem(0x1179, { 0xfe, 0xfa });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc171, gbc.sp());
        EXPECT(0x117b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00DD
        gbc.setState(0x5c90, 0xffac, 0x14e0, 0xb968, 0x6860, 0x4406, 0x1, 0x1);
        gbc.writeMem(0x5c90, { 0xfe, 0xeb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xffac, gbc.sp());
        EXPECT(0x5c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00DE
        gbc.setState(0xae14, 0xbaac, 0x7080, 0x3c5c, 0xc8a8, 0xd999, 0x0, 0x0);
        gbc.writeMem(0xae14, { 0xfe, 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbaac, gbc.sp());
        EXPECT(0xae16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xae14));
        EXPECT(0x9b, gbc.readMem(0xae15));
        // FE 00DF
        gbc.setState(0x261b, 0x7c24, 0x73b0, 0x4cfa, 0xcbfa, 0xbc6a, 0x1, 0x1);
        gbc.writeMem(0x261b, { 0xfe, 0x75 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7c24, gbc.sp());
        EXPECT(0x261d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00E0
        gbc.setState(0xe9c7, 0x63d2, 0xd410, 0xcd1d, 0x103c, 0xe274, 0x1, 0x0);
        gbc.writeMem(0xe9c7, { 0xfe, 0xcf });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x63d2, gbc.sp());
        EXPECT(0xe9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe9c7));
        EXPECT(0xcf, gbc.readMem(0xe9c8));
        // FE 00E1
        gbc.setState(0xb7e8, 0x717, 0x3b60, 0xa0ca, 0xf9f0, 0x3c30, 0x0, 0x1);
        gbc.writeMem(0xb7e8, { 0xfe, 0xea });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x717, gbc.sp());
        EXPECT(0xb7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb7e8));
        EXPECT(0xea, gbc.readMem(0xb7e9));
        // FE 00E2
        gbc.setState(0x85, 0xecad, 0xc9f0, 0xe77f, 0x717d, 0xa8f6, 0x1, 0x1);
        gbc.writeMem(0x85, { 0xfe, 0x38 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xecad, gbc.sp());
        EXPECT(0x87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00E3
        gbc.setState(0x9a49, 0xd27d, 0xa4f0, 0xf887, 0x12af, 0x2c04, 0x1, 0x0);
        gbc.writeMem(0x9a49, { 0xfe, 0xbf });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd27d, gbc.sp());
        EXPECT(0x9a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9a49));
        EXPECT(0xbf, gbc.readMem(0x9a4a));
        // FE 00E4
        gbc.setState(0xe163, 0x4d3, 0xfb90, 0xe1a9, 0x544e, 0x3556, 0x0, 0x0);
        gbc.writeMem(0xe163, { 0xfe, 0xed });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4d3, gbc.sp());
        EXPECT(0xe165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe163));
        EXPECT(0xed, gbc.readMem(0xe164));
        // FE 00E5
        gbc.setState(0xe1d5, 0x5010, 0xe250, 0xebc7, 0x744, 0xd0f6, 0x0, 0x1);
        gbc.writeMem(0xe1d5, { 0xfe, 0xea });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5010, gbc.sp());
        EXPECT(0xe1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe1d5));
        EXPECT(0xea, gbc.readMem(0xe1d6));
        // FE 00E6
        gbc.setState(0xc870, 0xb3bc, 0x7cf0, 0x6a17, 0xa869, 0x242c, 0x0, 0x0);
        gbc.writeMem(0xc870, { 0xfe, 0xd4 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb3bc, gbc.sp());
        EXPECT(0xc872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc870));
        EXPECT(0xd4, gbc.readMem(0xc871));
        // FE 00E7
        gbc.setState(0x9fd8, 0x6e80, 0x5040, 0x4396, 0x47fc, 0x43ed, 0x1, 0x1);
        gbc.writeMem(0x9fd8, { 0xfe, 0xaa });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6e80, gbc.sp());
        EXPECT(0x9fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9fd8));
        EXPECT(0xaa, gbc.readMem(0x9fd9));
        // FE 00E8
        gbc.setState(0xda28, 0xbe9e, 0xce0, 0x704d, 0xc7d8, 0x85b5, 0x0, 0x1);
        gbc.writeMem(0xda28, { 0xfe, 0x25 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbe9e, gbc.sp());
        EXPECT(0xda2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xda28));
        EXPECT(0x25, gbc.readMem(0xda29));
        // FE 00E9
        gbc.setState(0x7d6c, 0x862b, 0xb720, 0x708, 0x1477, 0xc5ec, 0x1, 0x1);
        gbc.writeMem(0x7d6c, { 0xfe, 0x26 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x862b, gbc.sp());
        EXPECT(0x7d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00EB
        gbc.setState(0xc53e, 0x365e, 0x68b0, 0x23e5, 0xa8ce, 0x17a, 0x0, 0x1);
        gbc.writeMem(0xc53e, { 0xfe, 0xf6 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x365e, gbc.sp());
        EXPECT(0xc540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc53e));
        EXPECT(0xf6, gbc.readMem(0xc53f));
        // FE 00EC
        gbc.setState(0x40f7, 0xe383, 0x6950, 0xb5dc, 0xac8d, 0x1b5a, 0x0, 0x0);
        gbc.writeMem(0x40f7, { 0xfe, 0x6a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe383, gbc.sp());
        EXPECT(0x40f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00ED
        gbc.setState(0xdbca, 0xf641, 0x2840, 0x27a8, 0xc8e2, 0xb756, 0x0, 0x0);
        gbc.writeMem(0xdbca, { 0xfe, 0x11 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf641, gbc.sp());
        EXPECT(0xdbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdbca));
        EXPECT(0x11, gbc.readMem(0xdbcb));
        // FE 00EE
        gbc.setState(0x2c7c, 0x46f3, 0xecf0, 0xc7bd, 0x5ccf, 0x3042, 0x0, 0x1);
        gbc.writeMem(0x2c7c, { 0xfe, 0x8d });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x46f3, gbc.sp());
        EXPECT(0x2c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00EF
        gbc.setState(0x58ae, 0xa8f2, 0x100, 0x6a4c, 0x236d, 0x6bf5, 0x0, 0x0);
        gbc.writeMem(0x58ae, { 0xfe, 0xd1 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa8f2, gbc.sp());
        EXPECT(0x58b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00F0
        gbc.setState(0xc9d0, 0x779d, 0x1260, 0xa559, 0xd321, 0xeedd, 0x0, 0x0);
        gbc.writeMem(0xc9d0, { 0xfe, 0x2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x779d, gbc.sp());
        EXPECT(0xc9d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc9d0));
        EXPECT(0x2, gbc.readMem(0xc9d1));
        // FE 00F1
        gbc.setState(0xbda2, 0x2abf, 0xd920, 0x3513, 0x77e0, 0x33ee, 0x1, 0x1);
        gbc.writeMem(0xbda2, { 0xfe, 0xa9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2abf, gbc.sp());
        EXPECT(0xbda4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbda2));
        EXPECT(0xa9, gbc.readMem(0xbda3));
        // FE 00F2
        gbc.setState(0x7f5d, 0xe88f, 0x5e90, 0x16d0, 0x1eab, 0xe133, 0x1, 0x1);
        gbc.writeMem(0x7f5d, { 0xfe, 0x6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe88f, gbc.sp());
        EXPECT(0x7f5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00F3
        gbc.setState(0x9913, 0x8f6, 0x85b0, 0x140b, 0xda56, 0x3bf9, 0x0, 0x1);
        gbc.writeMem(0x9913, { 0xfe, 0x51 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8f6, gbc.sp());
        EXPECT(0x9915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9913));
        EXPECT(0x51, gbc.readMem(0x9914));
        // FE 00F4
        gbc.setState(0xc7dc, 0x5d70, 0x7790, 0xdbf9, 0xc3de, 0xb9ad, 0x0, 0x0);
        gbc.writeMem(0xc7dc, { 0xfe, 0x85 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5d70, gbc.sp());
        EXPECT(0xc7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc7dc));
        EXPECT(0x85, gbc.readMem(0xc7dd));
        // FE 00F5
        gbc.setState(0x5478, 0xbcc1, 0x2d60, 0xe8a3, 0x36e, 0x1143, 0x0, 0x1);
        gbc.writeMem(0x5478, { 0xfe, 0x82 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbcc1, gbc.sp());
        EXPECT(0x547a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00F6
        gbc.setState(0x3b1f, 0x7e1f, 0x98b0, 0xe92f, 0xd67c, 0xcd71, 0x1, 0x1);
        gbc.writeMem(0x3b1f, { 0xfe, 0x36 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7e1f, gbc.sp());
        EXPECT(0x3b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00F7
        gbc.setState(0xc11c, 0x84f3, 0xfd40, 0xd42d, 0x2ffb, 0x2cb8, 0x1, 0x0);
        gbc.writeMem(0xc11c, { 0xfe, 0x7f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x84f3, gbc.sp());
        EXPECT(0xc11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc11c));
        EXPECT(0x7f, gbc.readMem(0xc11d));
        // FE 00F8
        gbc.setState(0xb966, 0xe670, 0x8d90, 0x79dc, 0x9a6b, 0x16ce, 0x0, 0x0);
        gbc.writeMem(0xb966, { 0xfe, 0x55 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe670, gbc.sp());
        EXPECT(0xb968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb966));
        EXPECT(0x55, gbc.readMem(0xb967));
        // FE 00F9
        gbc.setState(0xd0bf, 0x3b63, 0x39b0, 0x692e, 0xf48e, 0xb9a6, 0x1, 0x0);
        gbc.writeMem(0xd0bf, { 0xfe, 0x24 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3b63, gbc.sp());
        EXPECT(0xd0c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd0bf));
        EXPECT(0x24, gbc.readMem(0xd0c0));
        // FE 00FA
        gbc.setState(0xeb94, 0x45b9, 0x3290, 0xaca9, 0xaa96, 0x5a7b, 0x1, 0x0);
        gbc.writeMem(0xeb94, { 0xfe, 0xd2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x45b9, gbc.sp());
        EXPECT(0xeb96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xeb94));
        EXPECT(0xd2, gbc.readMem(0xeb95));
        // FE 00FB
        gbc.setState(0x7326, 0x1259, 0xdbb0, 0x89c0, 0x4608, 0x6fce, 0x1, 0x0);
        gbc.writeMem(0x7326, { 0xfe, 0x2a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1259, gbc.sp());
        EXPECT(0x7328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00FC
        gbc.setState(0xc1ad, 0x57b1, 0x2af0, 0x7529, 0x15d, 0xe0fd, 0x1, 0x1);
        gbc.writeMem(0xc1ad, { 0xfe, 0xf7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x57b1, gbc.sp());
        EXPECT(0xc1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc1ad));
        EXPECT(0xf7, gbc.readMem(0xc1ae));
        // FE 00FD
        gbc.setState(0x6ede, 0x6fb1, 0xc3e0, 0xe9bc, 0xc2b0, 0x5c02, 0x1, 0x0);
        gbc.writeMem(0x6ede, { 0xfe, 0xb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6fb1, gbc.sp());
        EXPECT(0x6ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 00FE
        gbc.setState(0x4e3e, 0x2b35, 0xc00, 0xa1e3, 0xaf30, 0xe30b, 0x1, 0x0);
        gbc.writeMem(0x4e3e, { 0xfe, 0x6e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2b35, gbc.sp());
        EXPECT(0x4e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 00FF
        gbc.setState(0x1012, 0x595e, 0xd80, 0x54d, 0x9a6d, 0xb81a, 0x0, 0x1);
        gbc.writeMem(0x1012, { 0xfe, 0x90 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x595e, gbc.sp());
        EXPECT(0x1014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0100
        gbc.setState(0xaca6, 0x3462, 0xf7e0, 0xcc59, 0xa735, 0x1004, 0x0, 0x1);
        gbc.writeMem(0xaca6, { 0xfe, 0xd8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3462, gbc.sp());
        EXPECT(0xaca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xaca6));
        EXPECT(0xd8, gbc.readMem(0xaca7));
        // FE 0101
        gbc.setState(0x7dee, 0x5263, 0x87f0, 0x7a16, 0x68cf, 0xb026, 0x0, 0x0);
        gbc.writeMem(0x7dee, { 0xfe, 0x35 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5263, gbc.sp());
        EXPECT(0x7df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0102
        gbc.setState(0xb76d, 0x9f45, 0xa510, 0x9f6d, 0x3966, 0x88d6, 0x1, 0x1);
        gbc.writeMem(0xb76d, { 0xfe, 0xfa });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9f45, gbc.sp());
        EXPECT(0xb76f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb76d));
        EXPECT(0xfa, gbc.readMem(0xb76e));
        // FE 0103
        gbc.setState(0x3a4f, 0x52d1, 0x71a0, 0x769f, 0x7357, 0x2244, 0x0, 0x1);
        gbc.writeMem(0x3a4f, { 0xfe, 0xe7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x52d1, gbc.sp());
        EXPECT(0x3a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0104
        gbc.setState(0x2415, 0x8da8, 0x26f0, 0x227c, 0x61bc, 0x4e2e, 0x0, 0x0);
        gbc.writeMem(0x2415, { 0xfe, 0xea });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8da8, gbc.sp());
        EXPECT(0x2417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0105
        gbc.setState(0xd92, 0x15a4, 0x4720, 0x25e6, 0xf16d, 0x4ef7, 0x1, 0x1);
        gbc.writeMem(0xd92, { 0xfe, 0x12 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x15a4, gbc.sp());
        EXPECT(0xd94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0106
        gbc.setState(0x3a61, 0x61e6, 0x5a60, 0xf97a, 0xe5fb, 0x260b, 0x1, 0x0);
        gbc.writeMem(0x3a61, { 0xfe, 0x56 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x61e6, gbc.sp());
        EXPECT(0x3a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0107
        gbc.setState(0x5af0, 0x28e3, 0xbe90, 0x21b, 0xc09c, 0xf618, 0x1, 0x0);
        gbc.writeMem(0x5af0, { 0xfe, 0xe5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x28e3, gbc.sp());
        EXPECT(0x5af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0108
        gbc.setState(0xbc64, 0x9600, 0x4f20, 0xa44e, 0x506c, 0x2141, 0x1, 0x1);
        gbc.writeMem(0xbc64, { 0xfe, 0xb8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9600, gbc.sp());
        EXPECT(0xbc66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbc64));
        EXPECT(0xb8, gbc.readMem(0xbc65));
        // FE 0109
        gbc.setState(0x222e, 0xa556, 0x51d0, 0xe5d1, 0xdd8a, 0xf4d7, 0x1, 0x0);
        gbc.writeMem(0x222e, { 0xfe, 0x39 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa556, gbc.sp());
        EXPECT(0x2230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 010A
        gbc.setState(0xe34c, 0x6d3f, 0xedc0, 0x5cff, 0x7bbb, 0x654a, 0x1, 0x1);
        gbc.writeMem(0xe34c, { 0xfe, 0xd5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6d3f, gbc.sp());
        EXPECT(0xe34e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe34c));
        EXPECT(0xd5, gbc.readMem(0xe34d));
        // FE 010B
        gbc.setState(0x374c, 0x390d, 0xd590, 0x718b, 0x6bec, 0x8359, 0x1, 0x1);
        gbc.writeMem(0x374c, { 0xfe, 0xd6 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x390d, gbc.sp());
        EXPECT(0x374e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 010C
        gbc.setState(0x183, 0x26a1, 0x3640, 0x5c4e, 0x62a7, 0x604e, 0x0, 0x0);
        gbc.writeMem(0x183, { 0xfe, 0x64 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x26a1, gbc.sp());
        EXPECT(0x185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 010D
        gbc.setState(0x6ba5, 0x13e8, 0x46b0, 0x8b37, 0x687a, 0xf9bd, 0x0, 0x0);
        gbc.writeMem(0x6ba5, { 0xfe, 0x9d });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x13e8, gbc.sp());
        EXPECT(0x6ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 010E
        gbc.setState(0xdc7b, 0xc260, 0xc810, 0xaf26, 0x87d0, 0xd2fa, 0x0, 0x0);
        gbc.writeMem(0xdc7b, { 0xfe, 0x21 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc260, gbc.sp());
        EXPECT(0xdc7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdc7b));
        EXPECT(0x21, gbc.readMem(0xdc7c));
        // FE 010F
        gbc.setState(0x4904, 0x20f8, 0xfa40, 0x251c, 0xdc2d, 0xc60b, 0x1, 0x1);
        gbc.writeMem(0x4904, { 0xfe, 0xfc });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x20f8, gbc.sp());
        EXPECT(0x4906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0110
        gbc.setState(0xae5d, 0x658c, 0x92b0, 0xd1a5, 0x797e, 0x113c, 0x1, 0x0);
        gbc.writeMem(0xae5d, { 0xfe, 0xb4 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x658c, gbc.sp());
        EXPECT(0xae5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xae5d));
        EXPECT(0xb4, gbc.readMem(0xae5e));
        // FE 0111
        gbc.setState(0xbf3, 0x915e, 0xb480, 0x4185, 0x8444, 0x2ddf, 0x0, 0x0);
        gbc.writeMem(0xbf3, { 0xfe, 0x10 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x915e, gbc.sp());
        EXPECT(0xbf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0112
        gbc.setState(0xc813, 0x68d0, 0x2ee0, 0xf66b, 0xd3df, 0x534c, 0x0, 0x0);
        gbc.writeMem(0xc813, { 0xfe, 0x17 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x68d0, gbc.sp());
        EXPECT(0xc815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc813));
        EXPECT(0x17, gbc.readMem(0xc814));
        // FE 0113
        gbc.setState(0x6439, 0xa95e, 0x2d50, 0x2f24, 0x4173, 0xa434, 0x0, 0x1);
        gbc.writeMem(0x6439, { 0xfe, 0x58 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa95e, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0114
        gbc.setState(0x7f41, 0x9b06, 0xbc80, 0x60a, 0x7e1f, 0x702d, 0x0, 0x1);
        gbc.writeMem(0x7f41, { 0xfe, 0x58 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9b06, gbc.sp());
        EXPECT(0x7f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0115
        gbc.setState(0x1506, 0xe6e7, 0x6040, 0x1d8b, 0x28a1, 0x11d2, 0x0, 0x1);
        gbc.writeMem(0x1506, { 0xfe, 0x2f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe6e7, gbc.sp());
        EXPECT(0x1508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0116
        gbc.setState(0x45ef, 0x36bd, 0x1830, 0xa7a0, 0xaf49, 0x81fd, 0x1, 0x0);
        gbc.writeMem(0x45ef, { 0xfe, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x36bd, gbc.sp());
        EXPECT(0x45f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0117
        gbc.setState(0x1d96, 0x3537, 0xec30, 0xd035, 0x67a3, 0x4335, 0x1, 0x1);
        gbc.writeMem(0x1d96, { 0xfe, 0x48 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3537, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0119
        gbc.setState(0x76ec, 0xf8ff, 0xc810, 0xa5db, 0xfa07, 0x9ac5, 0x1, 0x0);
        gbc.writeMem(0x76ec, { 0xfe, 0x52 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf8ff, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 011A
        gbc.setState(0xb9bd, 0xc63c, 0xc630, 0x1b72, 0xc68, 0x6981, 0x0, 0x0);
        gbc.writeMem(0xb9bd, { 0xfe, 0xf9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc63c, gbc.sp());
        EXPECT(0xb9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb9bd));
        EXPECT(0xf9, gbc.readMem(0xb9be));
        // FE 011B
        gbc.setState(0x8a83, 0xc57a, 0x2030, 0x42c9, 0x6892, 0x3021, 0x0, 0x0);
        gbc.writeMem(0x8a83, { 0xfe, 0xe4 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc57a, gbc.sp());
        EXPECT(0x8a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8a83));
        EXPECT(0xe4, gbc.readMem(0x8a84));
        // FE 011C
        gbc.setState(0x98de, 0x1c0d, 0xc890, 0xdd3c, 0x8463, 0x36e, 0x0, 0x0);
        gbc.writeMem(0x98de, { 0xfe, 0x7b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1c0d, gbc.sp());
        EXPECT(0x98e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x98de));
        EXPECT(0x7b, gbc.readMem(0x98df));
        // FE 011D
        gbc.setState(0x578a, 0xdbe, 0xc690, 0xf887, 0x84a2, 0xfd19, 0x0, 0x0);
        gbc.writeMem(0x578a, { 0xfe, 0x15 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdbe, gbc.sp());
        EXPECT(0x578c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 011E
        gbc.setState(0xd13b, 0xbad4, 0x5540, 0xebd4, 0x2ccf, 0xa6f, 0x0, 0x0);
        gbc.writeMem(0xd13b, { 0xfe, 0xcd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbad4, gbc.sp());
        EXPECT(0xd13d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd13b));
        EXPECT(0xcd, gbc.readMem(0xd13c));
        // FE 0120
        gbc.setState(0xbca0, 0x1211, 0xe0d0, 0x7c40, 0x4a96, 0xc877, 0x0, 0x1);
        gbc.writeMem(0xbca0, { 0xfe, 0x85 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1211, gbc.sp());
        EXPECT(0xbca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbca0));
        EXPECT(0x85, gbc.readMem(0xbca1));
        // FE 0121
        gbc.setState(0x3b05, 0xe95e, 0x2050, 0xdbd6, 0x4f7a, 0x53b9, 0x0, 0x1);
        gbc.writeMem(0x3b05, { 0xfe, 0xaf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe95e, gbc.sp());
        EXPECT(0x3b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0122
        gbc.setState(0x5c75, 0xc82c, 0x3440, 0xf72f, 0xef2, 0xd892, 0x1, 0x0);
        gbc.writeMem(0x5c75, { 0xfe, 0xb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc82c, gbc.sp());
        EXPECT(0x5c77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0123
        gbc.setState(0x9f26, 0x9aaa, 0xd210, 0xd22e, 0xb21c, 0xfad7, 0x0, 0x0);
        gbc.writeMem(0x9f26, { 0xfe, 0x90 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9aaa, gbc.sp());
        EXPECT(0x9f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9f26));
        EXPECT(0x90, gbc.readMem(0x9f27));
        // FE 0124
        gbc.setState(0xd7b0, 0xfe4e, 0x7df0, 0xb641, 0xcfca, 0x2734, 0x1, 0x1);
        gbc.writeMem(0xd7b0, { 0xfe, 0x89 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfe4e, gbc.sp());
        EXPECT(0xd7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd7b0));
        EXPECT(0x89, gbc.readMem(0xd7b1));
        // FE 0125
        gbc.setState(0x44a2, 0x7471, 0x6930, 0x5cb2, 0x45d4, 0x4de8, 0x1, 0x0);
        gbc.writeMem(0x44a2, { 0xfe, 0xd });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7471, gbc.sp());
        EXPECT(0x44a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0126
        gbc.setState(0x7e40, 0xc2b2, 0xc970, 0xeea7, 0xeace, 0xd163, 0x0, 0x0);
        gbc.writeMem(0x7e40, { 0xfe, 0x19 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc2b2, gbc.sp());
        EXPECT(0x7e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0127
        gbc.setState(0xe324, 0xed79, 0x2dd0, 0x96cd, 0x525, 0x7301, 0x0, 0x0);
        gbc.writeMem(0xe324, { 0xfe, 0x69 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xed79, gbc.sp());
        EXPECT(0xe326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe324));
        EXPECT(0x69, gbc.readMem(0xe325));
        // FE 0128
        gbc.setState(0x5fcb, 0x8073, 0xec0, 0xdeb5, 0xa1e9, 0xca14, 0x1, 0x1);
        gbc.writeMem(0x5fcb, { 0xfe, 0x3b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8073, gbc.sp());
        EXPECT(0x5fcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0129
        gbc.setState(0xb2a6, 0x4a6, 0x1a30, 0xf0a0, 0x55e9, 0x170e, 0x0, 0x1);
        gbc.writeMem(0xb2a6, { 0xfe, 0x3 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4a6, gbc.sp());
        EXPECT(0xb2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb2a6));
        EXPECT(0x3, gbc.readMem(0xb2a7));
        // FE 012A
        gbc.setState(0x1cb6, 0xf135, 0x4d50, 0x4684, 0xaa18, 0x723e, 0x1, 0x1);
        gbc.writeMem(0x1cb6, { 0xfe, 0x4e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf135, gbc.sp());
        EXPECT(0x1cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 012B
        gbc.setState(0xc65e, 0xb9b9, 0x1ef0, 0x7dc8, 0x7cce, 0xacb1, 0x1, 0x1);
        gbc.writeMem(0xc65e, { 0xfe, 0xcd });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb9b9, gbc.sp());
        EXPECT(0xc660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc65e));
        EXPECT(0xcd, gbc.readMem(0xc65f));
        // FE 012C
        gbc.setState(0xc3c3, 0x5541, 0xd400, 0x6cef, 0x14ca, 0xdf19, 0x1, 0x0);
        gbc.writeMem(0xc3c3, { 0xfe, 0x54 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5541, gbc.sp());
        EXPECT(0xc3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc3c3));
        EXPECT(0x54, gbc.readMem(0xc3c4));
        // FE 012D
        gbc.setState(0x281, 0x1570, 0x7070, 0xadf, 0xc677, 0x91cd, 0x0, 0x1);
        gbc.writeMem(0x281, { 0xfe, 0xfe });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1570, gbc.sp());
        EXPECT(0x283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 012E
        gbc.setState(0x5f78, 0xc218, 0x6280, 0x197b, 0x4433, 0x88b8, 0x0, 0x1);
        gbc.writeMem(0x5f78, { 0xfe, 0x7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc218, gbc.sp());
        EXPECT(0x5f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 012F
        gbc.setState(0x36d5, 0x94c8, 0x1a80, 0xb158, 0x4619, 0xb76a, 0x0, 0x0);
        gbc.writeMem(0x36d5, { 0xfe, 0xa0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x94c8, gbc.sp());
        EXPECT(0x36d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0130
        gbc.setState(0x3d47, 0x20b8, 0xb7b0, 0xdcc5, 0x8946, 0xdbca, 0x1, 0x1);
        gbc.writeMem(0x3d47, { 0xfe, 0xca });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x20b8, gbc.sp());
        EXPECT(0x3d49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0131
        gbc.setState(0x130f, 0xed54, 0xebc0, 0xa4f, 0xdc8c, 0xb7db, 0x0, 0x1);
        gbc.writeMem(0x130f, { 0xfe, 0x87 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xed54, gbc.sp());
        EXPECT(0x1311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0132
        gbc.setState(0x785d, 0xb798, 0x97f0, 0xfb4a, 0x14a, 0xac3f, 0x0, 0x0);
        gbc.writeMem(0x785d, { 0xfe, 0xa3 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb798, gbc.sp());
        EXPECT(0x785f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0133
        gbc.setState(0x7d92, 0x1de5, 0x9f90, 0x7782, 0xeec, 0x2f34, 0x1, 0x1);
        gbc.writeMem(0x7d92, { 0xfe, 0x98 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1de5, gbc.sp());
        EXPECT(0x7d94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0134
        gbc.setState(0x41c2, 0xfc85, 0x84d0, 0x4955, 0xa1d5, 0x6844, 0x1, 0x0);
        gbc.writeMem(0x41c2, { 0xfe, 0x35 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfc85, gbc.sp());
        EXPECT(0x41c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0135
        gbc.setState(0xe53f, 0xaa9a, 0x4f70, 0x6d8d, 0x5003, 0x4bbc, 0x0, 0x1);
        gbc.writeMem(0xe53f, { 0xfe, 0x3b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaa9a, gbc.sp());
        EXPECT(0xe541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe53f));
        EXPECT(0x3b, gbc.readMem(0xe540));
        // FE 0136
        gbc.setState(0x1169, 0xa209, 0x50c0, 0x8800, 0x97b7, 0xab58, 0x1, 0x0);
        gbc.writeMem(0x1169, { 0xfe, 0x32 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa209, gbc.sp());
        EXPECT(0x116b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0137
        gbc.setState(0xcb5, 0x2bc4, 0xb1a0, 0xa147, 0x9015, 0x3312, 0x1, 0x1);
        gbc.writeMem(0xcb5, { 0xfe, 0xcf });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2bc4, gbc.sp());
        EXPECT(0xcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0138
        gbc.setState(0xc2a4, 0xfdab, 0x36c0, 0x8bc7, 0x4260, 0x9fc2, 0x0, 0x1);
        gbc.writeMem(0xc2a4, { 0xfe, 0x82 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfdab, gbc.sp());
        EXPECT(0xc2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc2a4));
        EXPECT(0x82, gbc.readMem(0xc2a5));
        // FE 0139
        gbc.setState(0xc509, 0xde6e, 0xa7b0, 0xe938, 0x4e38, 0xe41, 0x1, 0x1);
        gbc.writeMem(0xc509, { 0xfe, 0xf9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xde6e, gbc.sp());
        EXPECT(0xc50b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc509));
        EXPECT(0xf9, gbc.readMem(0xc50a));
        // FE 013A
        gbc.setState(0x1c84, 0x23a8, 0xb2c0, 0x1c0c, 0x1ef3, 0xaf3f, 0x0, 0x1);
        gbc.writeMem(0x1c84, { 0xfe, 0xcb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x23a8, gbc.sp());
        EXPECT(0x1c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 013B
        gbc.setState(0x2af5, 0x5d93, 0xbfe0, 0xf3be, 0x4b84, 0x76bd, 0x1, 0x0);
        gbc.writeMem(0x2af5, { 0xfe, 0xc9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5d93, gbc.sp());
        EXPECT(0x2af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 013C
        gbc.setState(0xb110, 0x6133, 0xb0e0, 0xc2a3, 0x42d2, 0x1497, 0x1, 0x0);
        gbc.writeMem(0xb110, { 0xfe, 0x67 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6133, gbc.sp());
        EXPECT(0xb112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb110));
        EXPECT(0x67, gbc.readMem(0xb111));
        // FE 013D
        gbc.setState(0x1929, 0x4d86, 0xabd0, 0x216e, 0xd735, 0x9c80, 0x0, 0x0);
        gbc.writeMem(0x1929, { 0xfe, 0xb0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4d86, gbc.sp());
        EXPECT(0x192b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 013E
        gbc.setState(0x44af, 0x3aa4, 0x35a0, 0xff0b, 0x5e38, 0x6505, 0x0, 0x0);
        gbc.writeMem(0x44af, { 0xfe, 0x82 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3aa4, gbc.sp());
        EXPECT(0x44b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 013F
        gbc.setState(0x4eb4, 0x875a, 0x4300, 0x6c6c, 0x16f7, 0x98f3, 0x0, 0x1);
        gbc.writeMem(0x4eb4, { 0xfe, 0x32 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x875a, gbc.sp());
        EXPECT(0x4eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0140
        gbc.setState(0x59d7, 0x20f8, 0x8210, 0xb7c5, 0x5b4b, 0x4d0c, 0x1, 0x1);
        gbc.writeMem(0x59d7, { 0xfe, 0xa });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x20f8, gbc.sp());
        EXPECT(0x59d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0141
        gbc.setState(0x6227, 0xbef3, 0x6cc0, 0xad61, 0x66a0, 0xa2cb, 0x1, 0x1);
        gbc.writeMem(0x6227, { 0xfe, 0xc5 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbef3, gbc.sp());
        EXPECT(0x6229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0142
        gbc.setState(0xd032, 0x2800, 0x3000, 0xa3ed, 0xe737, 0xdb1d, 0x0, 0x1);
        gbc.writeMem(0xd032, { 0xfe, 0x68 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2800, gbc.sp());
        EXPECT(0xd034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd032));
        EXPECT(0x68, gbc.readMem(0xd033));
        // FE 0143
        gbc.setState(0x81f6, 0x1318, 0x3fe0, 0xd3a2, 0xc862, 0xb2d0, 0x1, 0x0);
        gbc.writeMem(0x81f6, { 0xfe, 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1318, gbc.sp());
        EXPECT(0x81f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x81f6));
        EXPECT(0xb0, gbc.readMem(0x81f7));
        // FE 0144
        gbc.setState(0x44e6, 0x68e9, 0x64a0, 0x6022, 0xc4a1, 0xc3cc, 0x1, 0x0);
        gbc.writeMem(0x44e6, { 0xfe, 0x4a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x68e9, gbc.sp());
        EXPECT(0x44e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0145
        gbc.setState(0xad80, 0x64ba, 0x1110, 0x72a2, 0xa6e, 0x4b6a, 0x1, 0x0);
        gbc.writeMem(0xad80, { 0xfe, 0x1b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x64ba, gbc.sp());
        EXPECT(0xad82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xad80));
        EXPECT(0x1b, gbc.readMem(0xad81));
        // FE 0148
        gbc.setState(0x93fc, 0xd01c, 0x7330, 0xd9aa, 0x351e, 0xf3b7, 0x1, 0x1);
        gbc.writeMem(0x93fc, { 0xfe, 0x81 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd01c, gbc.sp());
        EXPECT(0x93fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x93fc));
        EXPECT(0x81, gbc.readMem(0x93fd));
        // FE 014A
        gbc.setState(0x1977, 0xe422, 0xcda0, 0x346b, 0x4112, 0xb3cc, 0x0, 0x0);
        gbc.writeMem(0x1977, { 0xfe, 0xca });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe422, gbc.sp());
        EXPECT(0x1979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 014B
        gbc.setState(0xa5db, 0x2a1, 0x3130, 0xbef3, 0x86b3, 0x8481, 0x1, 0x1);
        gbc.writeMem(0xa5db, { 0xfe, 0xe5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2a1, gbc.sp());
        EXPECT(0xa5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa5db));
        EXPECT(0xe5, gbc.readMem(0xa5dc));
        // FE 014C
        gbc.setState(0x9e0e, 0x7d21, 0xfe20, 0x7572, 0x4a38, 0x4b57, 0x0, 0x1);
        gbc.writeMem(0x9e0e, { 0xfe, 0xb8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7d21, gbc.sp());
        EXPECT(0x9e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9e0e));
        EXPECT(0xb8, gbc.readMem(0x9e0f));
        // FE 014D
        gbc.setState(0xe0e3, 0x4207, 0x9750, 0x27f7, 0xd1fb, 0xafb9, 0x1, 0x0);
        gbc.writeMem(0xe0e3, { 0xfe, 0x13 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4207, gbc.sp());
        EXPECT(0xe0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe0e3));
        EXPECT(0x13, gbc.readMem(0xe0e4));
        // FE 014E
        gbc.setState(0x264a, 0x165d, 0x43c0, 0xe5c7, 0x86cf, 0x745b, 0x1, 0x1);
        gbc.writeMem(0x264a, { 0xfe, 0x58 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x165d, gbc.sp());
        EXPECT(0x264c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 014F
        gbc.setState(0x557, 0x5684, 0xf520, 0xacf4, 0x1ab9, 0x9b23, 0x0, 0x0);
        gbc.writeMem(0x557, { 0xfe, 0x54 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5684, gbc.sp());
        EXPECT(0x559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0150
        gbc.setState(0xca4d, 0x9a70, 0xd6e0, 0xbbeb, 0xd01a, 0x753, 0x0, 0x0);
        gbc.writeMem(0xca4d, { 0xfe, 0x60 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0xca4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xca4d));
        EXPECT(0x60, gbc.readMem(0xca4e));
        // FE 0151
        gbc.setState(0x2ce5, 0x208d, 0x9d30, 0xbbef, 0x2c6, 0x9cc0, 0x0, 0x0);
        gbc.writeMem(0x2ce5, { 0xfe, 0xf6 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x208d, gbc.sp());
        EXPECT(0x2ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0152
        gbc.setState(0xd8d0, 0xdd63, 0xf9f0, 0x1879, 0xd7d8, 0x2524, 0x0, 0x1);
        gbc.writeMem(0xd8d0, { 0xfe, 0x4d });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdd63, gbc.sp());
        EXPECT(0xd8d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd8d0));
        EXPECT(0x4d, gbc.readMem(0xd8d1));
        // FE 0153
        gbc.setState(0x6b7a, 0x221e, 0xdc20, 0xcab4, 0x31ea, 0x243d, 0x1, 0x1);
        gbc.writeMem(0x6b7a, { 0xfe, 0x63 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x221e, gbc.sp());
        EXPECT(0x6b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0154
        gbc.setState(0x995c, 0x9a05, 0x4970, 0x1be, 0xd30f, 0x3ec8, 0x0, 0x0);
        gbc.writeMem(0x995c, { 0xfe, 0xa1 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9a05, gbc.sp());
        EXPECT(0x995e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x995c));
        EXPECT(0xa1, gbc.readMem(0x995d));
        // FE 0155
        gbc.setState(0xe133, 0xfe58, 0x17f0, 0xa488, 0xc590, 0xf42c, 0x0, 0x1);
        gbc.writeMem(0xe133, { 0xfe, 0x19 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfe58, gbc.sp());
        EXPECT(0xe135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe133));
        EXPECT(0x19, gbc.readMem(0xe134));
        // FE 0156
        gbc.setState(0x7ed9, 0xbf6c, 0xa590, 0x2e6a, 0xcfd9, 0xd15e, 0x1, 0x1);
        gbc.writeMem(0x7ed9, { 0xfe, 0xf6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbf6c, gbc.sp());
        EXPECT(0x7edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0157
        gbc.setState(0x1837, 0x862b, 0x67c0, 0xc52c, 0xa143, 0xa48b, 0x0, 0x0);
        gbc.writeMem(0x1837, { 0xfe, 0xf6 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x862b, gbc.sp());
        EXPECT(0x1839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0158
        gbc.setState(0xdf52, 0x8e71, 0x8ce0, 0xedbd, 0x1496, 0xd4af, 0x1, 0x1);
        gbc.writeMem(0xdf52, { 0xfe, 0xc5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8e71, gbc.sp());
        EXPECT(0xdf54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdf52));
        EXPECT(0xc5, gbc.readMem(0xdf53));
        // FE 0159
        gbc.setState(0x5eec, 0x7ab3, 0x9d90, 0x70f, 0x2a2f, 0x48bb, 0x1, 0x0);
        gbc.writeMem(0x5eec, { 0xfe, 0x6c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7ab3, gbc.sp());
        EXPECT(0x5eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 015A
        gbc.setState(0x13fa, 0xba27, 0xed30, 0x9cec, 0x1175, 0x6a71, 0x0, 0x1);
        gbc.writeMem(0x13fa, { 0xfe, 0x64 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xba27, gbc.sp());
        EXPECT(0x13fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 015B
        gbc.setState(0x7d7, 0xc10c, 0x450, 0x8cd8, 0x8e04, 0x345c, 0x1, 0x0);
        gbc.writeMem(0x7d7, { 0xfe, 0x9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc10c, gbc.sp());
        EXPECT(0x7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 015C
        gbc.setState(0xed46, 0xc399, 0xcd40, 0x7ef7, 0xed67, 0xe85d, 0x1, 0x1);
        gbc.writeMem(0xed46, { 0xfe, 0x8c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc399, gbc.sp());
        EXPECT(0xed48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xed46));
        EXPECT(0x8c, gbc.readMem(0xed47));
        // FE 015D
        gbc.setState(0x9fb0, 0xbe5d, 0x9d0, 0xcc17, 0x8cae, 0x755, 0x0, 0x1);
        gbc.writeMem(0x9fb0, { 0xfe, 0xea });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbe5d, gbc.sp());
        EXPECT(0x9fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9fb0));
        EXPECT(0xea, gbc.readMem(0x9fb1));
        // FE 015E
        gbc.setState(0xdab8, 0xefee, 0xe780, 0x3fd0, 0x225e, 0x80, 0x1, 0x0);
        gbc.writeMem(0xdab8, { 0xfe, 0xa1 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xefee, gbc.sp());
        EXPECT(0xdaba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdab8));
        EXPECT(0xa1, gbc.readMem(0xdab9));
        // FE 015F
        gbc.setState(0x7582, 0x23ce, 0x1e50, 0x1b88, 0x602a, 0x6196, 0x0, 0x1);
        gbc.writeMem(0x7582, { 0xfe, 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x23ce, gbc.sp());
        EXPECT(0x7584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0160
        gbc.setState(0x9395, 0x4839, 0x3910, 0xc6d6, 0xadd0, 0x8389, 0x0, 0x1);
        gbc.writeMem(0x9395, { 0xfe, 0xa1 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4839, gbc.sp());
        EXPECT(0x9397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9395));
        EXPECT(0xa1, gbc.readMem(0x9396));
        // FE 0161
        gbc.setState(0x4002, 0xe155, 0xbad0, 0x5603, 0xad5b, 0x9e09, 0x0, 0x0);
        gbc.writeMem(0x4002, { 0xfe, 0x10 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe155, gbc.sp());
        EXPECT(0x4004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0162
        gbc.setState(0x9323, 0xf3fe, 0x5760, 0x470b, 0xc779, 0xefb4, 0x1, 0x1);
        gbc.writeMem(0x9323, { 0xfe, 0xba });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf3fe, gbc.sp());
        EXPECT(0x9325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9323));
        EXPECT(0xba, gbc.readMem(0x9324));
        // FE 0163
        gbc.setState(0x71f5, 0xb7f7, 0xca10, 0x2a99, 0x7f7d, 0x8f30, 0x1, 0x0);
        gbc.writeMem(0x71f5, { 0xfe, 0x36 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb7f7, gbc.sp());
        EXPECT(0x71f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0164
        gbc.setState(0x3397, 0x87a3, 0x76a0, 0x1962, 0x23de, 0xaac3, 0x1, 0x1);
        gbc.writeMem(0x3397, { 0xfe, 0xb9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x87a3, gbc.sp());
        EXPECT(0x3399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0165
        gbc.setState(0x9a19, 0x8ca5, 0x9720, 0xab99, 0x55fc, 0xed09, 0x1, 0x1);
        gbc.writeMem(0x9a19, { 0xfe, 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8ca5, gbc.sp());
        EXPECT(0x9a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9a19));
        EXPECT(0xb9, gbc.readMem(0x9a1a));
        // FE 0167
        gbc.setState(0xc489, 0xe601, 0x8e70, 0xf65, 0xd4f6, 0xe080, 0x0, 0x1);
        gbc.writeMem(0xc489, { 0xfe, 0xc5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe601, gbc.sp());
        EXPECT(0xc48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc489));
        EXPECT(0xc5, gbc.readMem(0xc48a));
        // FE 0168
        gbc.setState(0x4341, 0x617d, 0x75e0, 0x8a03, 0x455f, 0x324e, 0x1, 0x0);
        gbc.writeMem(0x4341, { 0xfe, 0x19 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x617d, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0169
        gbc.setState(0xbad0, 0x8b0e, 0x3120, 0xb43e, 0x62c4, 0x7ef5, 0x1, 0x0);
        gbc.writeMem(0xbad0, { 0xfe, 0x4 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8b0e, gbc.sp());
        EXPECT(0xbad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbad0));
        EXPECT(0x4, gbc.readMem(0xbad1));
        // FE 016A
        gbc.setState(0x843e, 0xde61, 0xfd30, 0xe122, 0x36ba, 0xfebd, 0x1, 0x0);
        gbc.writeMem(0x843e, { 0xfe, 0x53 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xde61, gbc.sp());
        EXPECT(0x8440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x843e));
        EXPECT(0x53, gbc.readMem(0x843f));
        // FE 016B
        gbc.setState(0x1946, 0x260a, 0xdeb0, 0xded8, 0x7704, 0x91aa, 0x1, 0x1);
        gbc.writeMem(0x1946, { 0xfe, 0xc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x260a, gbc.sp());
        EXPECT(0x1948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 016C
        gbc.setState(0xe539, 0xfb24, 0xdf80, 0x9244, 0xf4bc, 0x3df, 0x0, 0x0);
        gbc.writeMem(0xe539, { 0xfe, 0x25 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfb24, gbc.sp());
        EXPECT(0xe53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe539));
        EXPECT(0x25, gbc.readMem(0xe53a));
        // FE 016D
        gbc.setState(0x16d4, 0x441e, 0xf0, 0x44d9, 0x9f4d, 0xb78f, 0x1, 0x1);
        gbc.writeMem(0x16d4, { 0xfe, 0x90 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x441e, gbc.sp());
        EXPECT(0x16d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 016E
        gbc.setState(0x6694, 0x8c1e, 0x7e30, 0x48b1, 0xf040, 0x4600, 0x1, 0x0);
        gbc.writeMem(0x6694, { 0xfe, 0xe5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8c1e, gbc.sp());
        EXPECT(0x6696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 016F
        gbc.setState(0x7153, 0xb8fd, 0x3830, 0xebd7, 0x70a2, 0xf61, 0x1, 0x1);
        gbc.writeMem(0x7153, { 0xfe, 0xd8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb8fd, gbc.sp());
        EXPECT(0x7155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0170
        gbc.setState(0xb4a0, 0xf193, 0xc3d0, 0x40a3, 0x458c, 0x2228, 0x1, 0x1);
        gbc.writeMem(0xb4a0, { 0xfe, 0x7a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf193, gbc.sp());
        EXPECT(0xb4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb4a0));
        EXPECT(0x7a, gbc.readMem(0xb4a1));
        // FE 0171
        gbc.setState(0xb8ff, 0x7b0, 0xbbb0, 0x8943, 0xf4da, 0x5c63, 0x0, 0x1);
        gbc.writeMem(0xb8ff, { 0xfe, 0xf7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7b0, gbc.sp());
        EXPECT(0xb901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb8ff));
        EXPECT(0xf7, gbc.readMem(0xb900));
        // FE 0172
        gbc.setState(0x3155, 0x6085, 0x9060, 0xd38f, 0x3884, 0xe601, 0x1, 0x0);
        gbc.writeMem(0x3155, { 0xfe, 0x3f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6085, gbc.sp());
        EXPECT(0x3157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0174
        gbc.setState(0x35fd, 0x61e2, 0xbea0, 0x2bc7, 0x4e7f, 0x2aa3, 0x0, 0x1);
        gbc.writeMem(0x35fd, { 0xfe, 0x32 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x61e2, gbc.sp());
        EXPECT(0x35ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0175
        gbc.setState(0x18e8, 0x5525, 0xd440, 0x9216, 0x7eec, 0xc0e2, 0x1, 0x1);
        gbc.writeMem(0x18e8, { 0xfe, 0xba });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5525, gbc.sp());
        EXPECT(0x18ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0176
        gbc.setState(0x496d, 0x3f40, 0x3c60, 0x6b39, 0x2a21, 0xd581, 0x1, 0x0);
        gbc.writeMem(0x496d, { 0xfe, 0x78 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3f40, gbc.sp());
        EXPECT(0x496f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0177
        gbc.setState(0x5f1f, 0x11ff, 0xa710, 0x2c2, 0xceea, 0x89cd, 0x1, 0x0);
        gbc.writeMem(0x5f1f, { 0xfe, 0x73 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x11ff, gbc.sp());
        EXPECT(0x5f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0178
        gbc.setState(0x59b2, 0x8fbc, 0x7910, 0x790b, 0xe8cb, 0x2236, 0x1, 0x1);
        gbc.writeMem(0x59b2, { 0xfe, 0x31 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8fbc, gbc.sp());
        EXPECT(0x59b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0179
        gbc.setState(0x1f5e, 0x383d, 0xe910, 0xfa3c, 0xd41c, 0x732d, 0x1, 0x1);
        gbc.writeMem(0x1f5e, { 0xfe, 0xd6 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x383d, gbc.sp());
        EXPECT(0x1f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 017A
        gbc.setState(0xa53b, 0xdda4, 0xba00, 0x6610, 0x1e80, 0x668b, 0x1, 0x0);
        gbc.writeMem(0xa53b, { 0xfe, 0x29 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdda4, gbc.sp());
        EXPECT(0xa53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa53b));
        EXPECT(0x29, gbc.readMem(0xa53c));
        // FE 017B
        gbc.setState(0xcbb4, 0xe54c, 0x36e0, 0xf0ed, 0x410c, 0xc1c1, 0x1, 0x1);
        gbc.writeMem(0xcbb4, { 0xfe, 0xfa });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe54c, gbc.sp());
        EXPECT(0xcbb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcbb4));
        EXPECT(0xfa, gbc.readMem(0xcbb5));
        // FE 017C
        gbc.setState(0x3cb7, 0xcb1b, 0xc20, 0xcc22, 0xb82b, 0xc31d, 0x0, 0x1);
        gbc.writeMem(0x3cb7, { 0xfe, 0x1b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcb1b, gbc.sp());
        EXPECT(0x3cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 017D
        gbc.setState(0x93d, 0xae74, 0xd890, 0xfcfb, 0x64ff, 0xfbaa, 0x0, 0x1);
        gbc.writeMem(0x93d, { 0xfe, 0x41 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xae74, gbc.sp());
        EXPECT(0x93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 017E
        gbc.setState(0x86b1, 0xbc3c, 0x57d0, 0x7f37, 0x9ac9, 0xa23, 0x0, 0x0);
        gbc.writeMem(0x86b1, { 0xfe, 0xb7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbc3c, gbc.sp());
        EXPECT(0x86b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x86b1));
        EXPECT(0xb7, gbc.readMem(0x86b2));
        // FE 017F
        gbc.setState(0x8e33, 0x14d3, 0xf400, 0xa6af, 0xa94d, 0xdd93, 0x0, 0x0);
        gbc.writeMem(0x8e33, { 0xfe, 0x8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x14d3, gbc.sp());
        EXPECT(0x8e35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8e33));
        EXPECT(0x8, gbc.readMem(0x8e34));
        // FE 0180
        gbc.setState(0x6607, 0xe73b, 0x4820, 0xf6c8, 0xc509, 0x7b5a, 0x0, 0x0);
        gbc.writeMem(0x6607, { 0xfe, 0x49 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe73b, gbc.sp());
        EXPECT(0x6609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0181
        gbc.setState(0x29dc, 0x9a3a, 0x7c10, 0xd8e2, 0xb262, 0x741e, 0x0, 0x0);
        gbc.writeMem(0x29dc, { 0xfe, 0x10 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9a3a, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0182
        gbc.setState(0x54ac, 0x1083, 0xbe20, 0x569a, 0xe6dd, 0xaf38, 0x0, 0x0);
        gbc.writeMem(0x54ac, { 0xfe, 0x79 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1083, gbc.sp());
        EXPECT(0x54ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0183
        gbc.setState(0xd6cb, 0xccd9, 0x5a10, 0xd8fb, 0xbcd7, 0x5bf2, 0x1, 0x0);
        gbc.writeMem(0xd6cb, { 0xfe, 0xb0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xccd9, gbc.sp());
        EXPECT(0xd6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd6cb));
        EXPECT(0xb0, gbc.readMem(0xd6cc));
        // FE 0184
        gbc.setState(0xb283, 0x2511, 0xcfe0, 0x332c, 0xdcca, 0xb9cf, 0x0, 0x0);
        gbc.writeMem(0xb283, { 0xfe, 0xdf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2511, gbc.sp());
        EXPECT(0xb285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb283));
        EXPECT(0xdf, gbc.readMem(0xb284));
        // FE 0186
        gbc.setState(0x2071, 0xa7b8, 0x52e0, 0xe68f, 0xc0e2, 0x6a16, 0x1, 0x0);
        gbc.writeMem(0x2071, { 0xfe, 0x3d });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa7b8, gbc.sp());
        EXPECT(0x2073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0187
        gbc.setState(0xcb7c, 0xb697, 0x8910, 0x127e, 0x9781, 0x8b69, 0x1, 0x0);
        gbc.writeMem(0xcb7c, { 0xfe, 0x16 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xb697, gbc.sp());
        EXPECT(0xcb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcb7c));
        EXPECT(0x16, gbc.readMem(0xcb7d));
        // FE 0188
        gbc.setState(0x2be9, 0x1f0c, 0x7f10, 0xd029, 0x23f8, 0x5e4f, 0x0, 0x0);
        gbc.writeMem(0x2be9, { 0xfe, 0xda });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0x2beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0189
        gbc.setState(0xb40a, 0x3bf6, 0x9aa0, 0x72eb, 0x64d0, 0x69bc, 0x1, 0x0);
        gbc.writeMem(0xb40a, { 0xfe, 0xa6 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3bf6, gbc.sp());
        EXPECT(0xb40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb40a));
        EXPECT(0xa6, gbc.readMem(0xb40b));
        // FE 018A
        gbc.setState(0xbf46, 0x81cf, 0xd930, 0xf312, 0xfae3, 0x270e, 0x0, 0x0);
        gbc.writeMem(0xbf46, { 0xfe, 0xe0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x81cf, gbc.sp());
        EXPECT(0xbf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbf46));
        EXPECT(0xe0, gbc.readMem(0xbf47));
        // FE 018B
        gbc.setState(0xb2cd, 0x57b8, 0xaac0, 0xcdc1, 0x8ea2, 0x7368, 0x1, 0x1);
        gbc.writeMem(0xb2cd, { 0xfe, 0x9b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x57b8, gbc.sp());
        EXPECT(0xb2cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb2cd));
        EXPECT(0x9b, gbc.readMem(0xb2ce));
        // FE 018C
        gbc.setState(0x4d18, 0x922c, 0x910, 0xabbb, 0xfc63, 0x10c1, 0x0, 0x1);
        gbc.writeMem(0x4d18, { 0xfe, 0x5d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x922c, gbc.sp());
        EXPECT(0x4d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 018D
        gbc.setState(0x10e9, 0x463f, 0xa8c0, 0xe13c, 0x6d2f, 0xd188, 0x1, 0x0);
        gbc.writeMem(0x10e9, { 0xfe, 0xdc });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x463f, gbc.sp());
        EXPECT(0x10eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 018E
        gbc.setState(0x6290, 0x5deb, 0x5c80, 0x717e, 0xa126, 0x192c, 0x0, 0x0);
        gbc.writeMem(0x6290, { 0xfe, 0x3a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5deb, gbc.sp());
        EXPECT(0x6292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 018F
        gbc.setState(0x799f, 0x30b2, 0xfc00, 0xc4ba, 0xaa9a, 0xc5f1, 0x1, 0x0);
        gbc.writeMem(0x799f, { 0xfe, 0xf0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x30b2, gbc.sp());
        EXPECT(0x79a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0190
        gbc.setState(0xa095, 0x9752, 0x2e60, 0x817c, 0xbdb3, 0x24d6, 0x1, 0x0);
        gbc.writeMem(0xa095, { 0xfe, 0xd6 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9752, gbc.sp());
        EXPECT(0xa097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa095));
        EXPECT(0xd6, gbc.readMem(0xa096));
        // FE 0191
        gbc.setState(0xeca2, 0x2529, 0xc7b0, 0xe898, 0x86d2, 0xacb1, 0x0, 0x1);
        gbc.writeMem(0xeca2, { 0xfe, 0x98 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2529, gbc.sp());
        EXPECT(0xeca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xeca2));
        EXPECT(0x98, gbc.readMem(0xeca3));
        // FE 0192
        gbc.setState(0xeba0, 0xd05c, 0x8e50, 0xbd78, 0x22c4, 0x4e00, 0x1, 0x1);
        gbc.writeMem(0xeba0, { 0xfe, 0x8a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd05c, gbc.sp());
        EXPECT(0xeba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xeba0));
        EXPECT(0x8a, gbc.readMem(0xeba1));
        // FE 0193
        gbc.setState(0x639f, 0xfa20, 0x1fa0, 0x776e, 0x4946, 0xab9c, 0x1, 0x1);
        gbc.writeMem(0x639f, { 0xfe, 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfa20, gbc.sp());
        EXPECT(0x63a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0194
        gbc.setState(0x81f6, 0xd1d3, 0x72c0, 0x9e5e, 0x49, 0xbb8e, 0x0, 0x1);
        gbc.writeMem(0x81f6, { 0xfe, 0xb0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd1d3, gbc.sp());
        EXPECT(0x81f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x81f6));
        EXPECT(0xb0, gbc.readMem(0x81f7));
        // FE 0195
        gbc.setState(0xd21b, 0xd246, 0x3360, 0x60c, 0x3d2f, 0xee32, 0x0, 0x1);
        gbc.writeMem(0xd21b, { 0xfe, 0x1c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd246, gbc.sp());
        EXPECT(0xd21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd21b));
        EXPECT(0x1c, gbc.readMem(0xd21c));
        // FE 0196
        gbc.setState(0x80a1, 0x19f4, 0x64d0, 0x1da6, 0x2264, 0x3f30, 0x0, 0x1);
        gbc.writeMem(0x80a1, { 0xfe, 0xe7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x19f4, gbc.sp());
        EXPECT(0x80a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x80a1));
        EXPECT(0xe7, gbc.readMem(0x80a2));
        // FE 0197
        gbc.setState(0x64a1, 0x73be, 0x8cf0, 0xd2ea, 0x6344, 0x9a01, 0x0, 0x1);
        gbc.writeMem(0x64a1, { 0xfe, 0x81 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x73be, gbc.sp());
        EXPECT(0x64a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0198
        gbc.setState(0xb523, 0x9d60, 0x3fc0, 0xbc13, 0xca09, 0xc25d, 0x0, 0x1);
        gbc.writeMem(0xb523, { 0xfe, 0x10 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9d60, gbc.sp());
        EXPECT(0xb525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb523));
        EXPECT(0x10, gbc.readMem(0xb524));
        // FE 0199
        gbc.setState(0x2be1, 0x3b12, 0xe930, 0x5530, 0x3720, 0x1d8a, 0x0, 0x0);
        gbc.writeMem(0x2be1, { 0xfe, 0xd5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3b12, gbc.sp());
        EXPECT(0x2be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 019A
        gbc.setState(0x692, 0xba6f, 0x5a10, 0x6394, 0x1a98, 0xdefb, 0x1, 0x0);
        gbc.writeMem(0x692, { 0xfe, 0xe6 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xba6f, gbc.sp());
        EXPECT(0x694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 019B
        gbc.setState(0xb2c5, 0x72f5, 0x75a0, 0xb7f5, 0xf1c7, 0x5e3b, 0x1, 0x1);
        gbc.writeMem(0xb2c5, { 0xfe, 0x38 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x72f5, gbc.sp());
        EXPECT(0xb2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb2c5));
        EXPECT(0x38, gbc.readMem(0xb2c6));
        // FE 019C
        gbc.setState(0x7e7d, 0x6ceb, 0x7850, 0x6728, 0xf61b, 0xf77c, 0x1, 0x0);
        gbc.writeMem(0x7e7d, { 0xfe, 0x7f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6ceb, gbc.sp());
        EXPECT(0x7e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 019D
        gbc.setState(0x6a, 0x8d90, 0xfd0, 0x405, 0x6aad, 0x3cac, 0x1, 0x1);
        gbc.writeMem(0x6a, { 0xfe, 0xef });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8d90, gbc.sp());
        EXPECT(0x6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 019E
        gbc.setState(0xd9dc, 0x1a9d, 0x2930, 0x9d35, 0x334d, 0xdd8a, 0x1, 0x1);
        gbc.writeMem(0xd9dc, { 0xfe, 0x3c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1a9d, gbc.sp());
        EXPECT(0xd9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd9dc));
        EXPECT(0x3c, gbc.readMem(0xd9dd));
        // FE 019F
        gbc.setState(0x4b3d, 0x8ee9, 0x98d0, 0xa5d6, 0x8086, 0x56df, 0x1, 0x1);
        gbc.writeMem(0x4b3d, { 0xfe, 0x7a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8ee9, gbc.sp());
        EXPECT(0x4b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01A0
        gbc.setState(0x2a9a, 0x91e2, 0x9d30, 0x6055, 0x678a, 0x40a2, 0x1, 0x0);
        gbc.writeMem(0x2a9a, { 0xfe, 0x2a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x91e2, gbc.sp());
        EXPECT(0x2a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01A1
        gbc.setState(0x5989, 0x2248, 0x6730, 0xca9a, 0x898c, 0x6f52, 0x0, 0x1);
        gbc.writeMem(0x5989, { 0xfe, 0xf });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2248, gbc.sp());
        EXPECT(0x598b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01A2
        gbc.setState(0x3645, 0x621d, 0x930, 0xb328, 0x9388, 0x3682, 0x0, 0x1);
        gbc.writeMem(0x3645, { 0xfe, 0x36 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x621d, gbc.sp());
        EXPECT(0x3647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01A4
        gbc.setState(0x1db7, 0x6be9, 0x2250, 0x5f73, 0xd0c5, 0x35df, 0x0, 0x1);
        gbc.writeMem(0x1db7, { 0xfe, 0x2e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6be9, gbc.sp());
        EXPECT(0x1db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01A5
        gbc.setState(0xbe86, 0xa2aa, 0x9a60, 0xeefa, 0x7183, 0xbba2, 0x0, 0x0);
        gbc.writeMem(0xbe86, { 0xfe, 0x53 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa2aa, gbc.sp());
        EXPECT(0xbe88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbe86));
        EXPECT(0x53, gbc.readMem(0xbe87));
        // FE 01A6
        gbc.setState(0x1320, 0x5e2a, 0xcfb0, 0xfbcc, 0x678f, 0x602c, 0x1, 0x0);
        gbc.writeMem(0x1320, { 0xfe, 0xdf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5e2a, gbc.sp());
        EXPECT(0x1322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01A7
        gbc.setState(0x4e88, 0x488, 0x1f10, 0xa9bc, 0x8d6d, 0x7ec5, 0x0, 0x1);
        gbc.writeMem(0x4e88, { 0xfe, 0x9f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x488, gbc.sp());
        EXPECT(0x4e8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01A8
        gbc.setState(0xced7, 0xe4f5, 0x7bd0, 0x37b1, 0x4daf, 0x677a, 0x0, 0x1);
        gbc.writeMem(0xced7, { 0xfe, 0xc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe4f5, gbc.sp());
        EXPECT(0xced9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xced7));
        EXPECT(0xc, gbc.readMem(0xced8));
        // FE 01A9
        gbc.setState(0x286d, 0xbc1c, 0x4d80, 0xd899, 0xcd08, 0xf6dc, 0x0, 0x0);
        gbc.writeMem(0x286d, { 0xfe, 0x92 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbc1c, gbc.sp());
        EXPECT(0x286f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01AA
        gbc.setState(0xed3, 0x376a, 0xf4c0, 0x821a, 0x919d, 0x34c9, 0x0, 0x1);
        gbc.writeMem(0xed3, { 0xfe, 0xb4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x376a, gbc.sp());
        EXPECT(0xed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01AB
        gbc.setState(0x39c9, 0x60c9, 0xfb60, 0x7215, 0x230d, 0xaa3e, 0x0, 0x1);
        gbc.writeMem(0x39c9, { 0xfe, 0x1c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x60c9, gbc.sp());
        EXPECT(0x39cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01AC
        gbc.setState(0xd0ec, 0x5163, 0xec90, 0x85e1, 0x9b3c, 0x817a, 0x0, 0x0);
        gbc.writeMem(0xd0ec, { 0xfe, 0xdd });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5163, gbc.sp());
        EXPECT(0xd0ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd0ec));
        EXPECT(0xdd, gbc.readMem(0xd0ed));
        // FE 01AD
        gbc.setState(0x1d93, 0x4ea7, 0xdec0, 0xcc54, 0x84ad, 0x6581, 0x0, 0x0);
        gbc.writeMem(0x1d93, { 0xfe, 0x3b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4ea7, gbc.sp());
        EXPECT(0x1d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01AE
        gbc.setState(0x913f, 0x9995, 0x28c0, 0x14e5, 0xfe68, 0xb955, 0x0, 0x0);
        gbc.writeMem(0x913f, { 0xfe, 0x16 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9995, gbc.sp());
        EXPECT(0x9141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x913f));
        EXPECT(0x16, gbc.readMem(0x9140));
        // FE 01AF
        gbc.setState(0xbf5e, 0x2a42, 0xd210, 0xda71, 0x29f2, 0xaf77, 0x1, 0x1);
        gbc.writeMem(0xbf5e, { 0xfe, 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2a42, gbc.sp());
        EXPECT(0xbf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbf5e));
        EXPECT(0x7a, gbc.readMem(0xbf5f));
        // FE 01B0
        gbc.setState(0x73e1, 0x630d, 0xab0, 0x32c2, 0xe67a, 0x4d1e, 0x1, 0x1);
        gbc.writeMem(0x73e1, { 0xfe, 0x53 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x630d, gbc.sp());
        EXPECT(0x73e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01B1
        gbc.setState(0x2e3f, 0x7490, 0x47e0, 0x35b5, 0xecd9, 0x9973, 0x1, 0x1);
        gbc.writeMem(0x2e3f, { 0xfe, 0xeb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7490, gbc.sp());
        EXPECT(0x2e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01B2
        gbc.setState(0x288d, 0x35cc, 0xcd80, 0x7f25, 0x63e7, 0x6c62, 0x0, 0x0);
        gbc.writeMem(0x288d, { 0xfe, 0x46 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x35cc, gbc.sp());
        EXPECT(0x288f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01B3
        gbc.setState(0x8db5, 0xc6e4, 0x7650, 0xa52, 0x8a2b, 0xcc62, 0x1, 0x1);
        gbc.writeMem(0x8db5, { 0xfe, 0x51 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc6e4, gbc.sp());
        EXPECT(0x8db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8db5));
        EXPECT(0x51, gbc.readMem(0x8db6));
        // FE 01B4
        gbc.setState(0xa588, 0x10c5, 0xfd60, 0x381, 0xb1d4, 0xeed3, 0x1, 0x1);
        gbc.writeMem(0xa588, { 0xfe, 0x41 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x10c5, gbc.sp());
        EXPECT(0xa58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa588));
        EXPECT(0x41, gbc.readMem(0xa589));
        // FE 01B5
        gbc.setState(0xa99c, 0x99fd, 0x1f30, 0x242f, 0x5e7, 0x4eaa, 0x1, 0x0);
        gbc.writeMem(0xa99c, { 0xfe, 0x7f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x99fd, gbc.sp());
        EXPECT(0xa99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa99c));
        EXPECT(0x7f, gbc.readMem(0xa99d));
        // FE 01B6
        gbc.setState(0x4a69, 0x9cd5, 0x7a80, 0x37d5, 0x9f5c, 0x4809, 0x1, 0x0);
        gbc.writeMem(0x4a69, { 0xfe, 0xb1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9cd5, gbc.sp());
        EXPECT(0x4a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01B7
        gbc.setState(0x90ae, 0xaf1f, 0xc640, 0xe234, 0xadc3, 0xcc5e, 0x0, 0x1);
        gbc.writeMem(0x90ae, { 0xfe, 0x82 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xaf1f, gbc.sp());
        EXPECT(0x90b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x90ae));
        EXPECT(0x82, gbc.readMem(0x90af));
        // FE 01B8
        gbc.setState(0x7add, 0x992b, 0x2aa0, 0x19c, 0x1b12, 0x1185, 0x1, 0x1);
        gbc.writeMem(0x7add, { 0xfe, 0xd9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x992b, gbc.sp());
        EXPECT(0x7adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01B9
        gbc.setState(0x451f, 0x6d95, 0x74f0, 0x8298, 0xd55, 0xf499, 0x0, 0x1);
        gbc.writeMem(0x451f, { 0xfe, 0x44 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6d95, gbc.sp());
        EXPECT(0x4521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01BA
        gbc.setState(0x991f, 0xeca7, 0x72d0, 0x223f, 0x4ca9, 0xc9cc, 0x0, 0x0);
        gbc.writeMem(0x991f, { 0xfe, 0x5a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xeca7, gbc.sp());
        EXPECT(0x9921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x991f));
        EXPECT(0x5a, gbc.readMem(0x9920));
        // FE 01BB
        gbc.setState(0x1e6d, 0x8756, 0x61f0, 0xa76a, 0x807a, 0x696b, 0x0, 0x1);
        gbc.writeMem(0x1e6d, { 0xfe, 0xaa });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8756, gbc.sp());
        EXPECT(0x1e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01BC
        gbc.setState(0xe421, 0x238b, 0x2ce0, 0x1a12, 0xaa1b, 0x7456, 0x1, 0x1);
        gbc.writeMem(0xe421, { 0xfe, 0x76 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x238b, gbc.sp());
        EXPECT(0xe423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe421));
        EXPECT(0x76, gbc.readMem(0xe422));
        // FE 01BE
        gbc.setState(0x7f48, 0x8f86, 0x5d50, 0x4db6, 0xa930, 0x478a, 0x0, 0x1);
        gbc.writeMem(0x7f48, { 0xfe, 0x3e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8f86, gbc.sp());
        EXPECT(0x7f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01BF
        gbc.setState(0x700b, 0x523a, 0x79b0, 0xfbd8, 0x30ab, 0x53da, 0x0, 0x0);
        gbc.writeMem(0x700b, { 0xfe, 0x88 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x523a, gbc.sp());
        EXPECT(0x700d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01C0
        gbc.setState(0x7ec0, 0x2b3f, 0xc260, 0xe413, 0x6a6, 0x6aca, 0x0, 0x1);
        gbc.writeMem(0x7ec0, { 0xfe, 0xf5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2b3f, gbc.sp());
        EXPECT(0x7ec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01C1
        gbc.setState(0x2557, 0x5248, 0xedd0, 0xe17e, 0x967a, 0x957c, 0x1, 0x1);
        gbc.writeMem(0x2557, { 0xfe, 0x81 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5248, gbc.sp());
        EXPECT(0x2559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01C2
        gbc.setState(0xe78a, 0xfe93, 0xe630, 0x5809, 0x37ba, 0xd7ad, 0x0, 0x1);
        gbc.writeMem(0xe78a, { 0xfe, 0x71 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfe93, gbc.sp());
        EXPECT(0xe78c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe78a));
        EXPECT(0x71, gbc.readMem(0xe78b));
        // FE 01C3
        gbc.setState(0xdc9, 0xd070, 0xd890, 0x8cd3, 0x2e29, 0x236c, 0x1, 0x0);
        gbc.writeMem(0xdc9, { 0xfe, 0x53 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd070, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01C4
        gbc.setState(0x2a09, 0xae59, 0xdb30, 0xb5f0, 0x4a68, 0xb99e, 0x1, 0x1);
        gbc.writeMem(0x2a09, { 0xfe, 0x5e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xae59, gbc.sp());
        EXPECT(0x2a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01C5
        gbc.setState(0x533c, 0x3e3a, 0x60e0, 0xfbdf, 0x11d2, 0xd47b, 0x0, 0x0);
        gbc.writeMem(0x533c, { 0xfe, 0xa });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3e3a, gbc.sp());
        EXPECT(0x533e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01C6
        gbc.setState(0xc8ac, 0xb771, 0xb3a0, 0x63aa, 0x696b, 0xa8dc, 0x1, 0x1);
        gbc.writeMem(0xc8ac, { 0xfe, 0xb5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb771, gbc.sp());
        EXPECT(0xc8ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc8ac));
        EXPECT(0xb5, gbc.readMem(0xc8ad));
        // FE 01C7
        gbc.setState(0x9bda, 0xff26, 0x9f90, 0xad57, 0xffa, 0xd35d, 0x0, 0x1);
        gbc.writeMem(0x9bda, { 0xfe, 0x80 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xff26, gbc.sp());
        EXPECT(0x9bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9bda));
        EXPECT(0x80, gbc.readMem(0x9bdb));
        // FE 01C8
        gbc.setState(0xeb71, 0x2074, 0x82e0, 0x4a7d, 0x7a80, 0x25d1, 0x1, 0x0);
        gbc.writeMem(0xeb71, { 0xfe, 0x52 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2074, gbc.sp());
        EXPECT(0xeb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xeb71));
        EXPECT(0x52, gbc.readMem(0xeb72));
        // FE 01C9
        gbc.setState(0xa5a5, 0x89e2, 0x9080, 0xe741, 0xb1db, 0x1c5a, 0x1, 0x0);
        gbc.writeMem(0xa5a5, { 0xfe, 0x57 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x89e2, gbc.sp());
        EXPECT(0xa5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa5a5));
        EXPECT(0x57, gbc.readMem(0xa5a6));
        // FE 01CA
        gbc.setState(0x41ab, 0xc0f9, 0xef40, 0x3609, 0x36d7, 0x4ae1, 0x1, 0x1);
        gbc.writeMem(0x41ab, { 0xfe, 0x2a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc0f9, gbc.sp());
        EXPECT(0x41ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01CC
        gbc.setState(0x239f, 0x2bcc, 0x6c50, 0x8fe1, 0x9f8f, 0x2688, 0x1, 0x0);
        gbc.writeMem(0x239f, { 0xfe, 0xfb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2bcc, gbc.sp());
        EXPECT(0x23a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01CD
        gbc.setState(0xdc77, 0xb87b, 0x9700, 0xbcb0, 0x9383, 0xc1aa, 0x1, 0x1);
        gbc.writeMem(0xdc77, { 0xfe, 0xe });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb87b, gbc.sp());
        EXPECT(0xdc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdc77));
        EXPECT(0xe, gbc.readMem(0xdc78));
        // FE 01CE
        gbc.setState(0x51f5, 0x4421, 0xf870, 0x983c, 0x5061, 0xfcf8, 0x0, 0x0);
        gbc.writeMem(0x51f5, { 0xfe, 0xe5 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4421, gbc.sp());
        EXPECT(0x51f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01CF
        gbc.setState(0x4671, 0x9584, 0x8c80, 0x60, 0x8f06, 0x2ec, 0x1, 0x1);
        gbc.writeMem(0x4671, { 0xfe, 0xd6 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9584, gbc.sp());
        EXPECT(0x4673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01D0
        gbc.setState(0x165f, 0xd3f2, 0xc560, 0xb7d4, 0xe57e, 0x6894, 0x1, 0x0);
        gbc.writeMem(0x165f, { 0xfe, 0x24 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd3f2, gbc.sp());
        EXPECT(0x1661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01D1
        gbc.setState(0xd707, 0x71eb, 0xd3a0, 0x238a, 0xb03c, 0xd15b, 0x1, 0x1);
        gbc.writeMem(0xd707, { 0xfe, 0xe5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x71eb, gbc.sp());
        EXPECT(0xd709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd707));
        EXPECT(0xe5, gbc.readMem(0xd708));
        // FE 01D2
        gbc.setState(0x44d1, 0x1eb4, 0xe3a0, 0x9064, 0xbca0, 0xf940, 0x0, 0x0);
        gbc.writeMem(0x44d1, { 0xfe, 0xf7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1eb4, gbc.sp());
        EXPECT(0x44d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01D3
        gbc.setState(0xfd5, 0x4b35, 0xda80, 0x3605, 0xb9ec, 0x3fcc, 0x0, 0x1);
        gbc.writeMem(0xfd5, { 0xfe, 0x80 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4b35, gbc.sp());
        EXPECT(0xfd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01D4
        gbc.setState(0x8945, 0xc0f2, 0x6840, 0x740c, 0x89af, 0xf8f2, 0x1, 0x0);
        gbc.writeMem(0x8945, { 0xfe, 0xa7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc0f2, gbc.sp());
        EXPECT(0x8947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8945));
        EXPECT(0xa7, gbc.readMem(0x8946));
        // FE 01D5
        gbc.setState(0x7126, 0xe02e, 0x17c0, 0x226e, 0x799, 0x1bfa, 0x0, 0x0);
        gbc.writeMem(0x7126, { 0xfe, 0x6d });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe02e, gbc.sp());
        EXPECT(0x7128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01D6
        gbc.setState(0x84d2, 0xfbec, 0x1870, 0xe771, 0xce83, 0x73c6, 0x1, 0x0);
        gbc.writeMem(0x84d2, { 0xfe, 0x3f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfbec, gbc.sp());
        EXPECT(0x84d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x84d2));
        EXPECT(0x3f, gbc.readMem(0x84d3));
        // FE 01D7
        gbc.setState(0xe99d, 0xcb2c, 0x9010, 0x93fd, 0xfe9c, 0x7220, 0x1, 0x1);
        gbc.writeMem(0xe99d, { 0xfe, 0x48 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcb2c, gbc.sp());
        EXPECT(0xe99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe99d));
        EXPECT(0x48, gbc.readMem(0xe99e));
        // FE 01D8
        gbc.setState(0xe33b, 0xd21f, 0x8140, 0x8f76, 0x7222, 0x8cab, 0x0, 0x1);
        gbc.writeMem(0xe33b, { 0xfe, 0x21 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd21f, gbc.sp());
        EXPECT(0xe33d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe33b));
        EXPECT(0x21, gbc.readMem(0xe33c));
        // FE 01D9
        gbc.setState(0x1dcf, 0x1a80, 0x9990, 0x4bcc, 0xfa58, 0x9d23, 0x1, 0x1);
        gbc.writeMem(0x1dcf, { 0xfe, 0x26 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1a80, gbc.sp());
        EXPECT(0x1dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01DA
        gbc.setState(0xa5f2, 0x4999, 0xc940, 0xd65d, 0x350f, 0x35, 0x0, 0x0);
        gbc.writeMem(0xa5f2, { 0xfe, 0xcc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4999, gbc.sp());
        EXPECT(0xa5f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa5f2));
        EXPECT(0xcc, gbc.readMem(0xa5f3));
        // FE 01DB
        gbc.setState(0x115f, 0x9cfa, 0xa90, 0x94cb, 0x4424, 0x370, 0x0, 0x1);
        gbc.writeMem(0x115f, { 0xfe, 0xee });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9cfa, gbc.sp());
        EXPECT(0x1161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01DC
        gbc.setState(0xbfc3, 0x32c, 0x9340, 0x2b7, 0x60d8, 0xfb86, 0x0, 0x1);
        gbc.writeMem(0xbfc3, { 0xfe, 0x89 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x32c, gbc.sp());
        EXPECT(0xbfc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbfc3));
        EXPECT(0x89, gbc.readMem(0xbfc4));
        // FE 01DD
        gbc.setState(0x7b18, 0xe0b5, 0x3130, 0x7605, 0xa661, 0x9f34, 0x1, 0x1);
        gbc.writeMem(0x7b18, { 0xfe, 0x60 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe0b5, gbc.sp());
        EXPECT(0x7b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01DE
        gbc.setState(0xe7b2, 0xb8b2, 0xa2d0, 0x79f0, 0x547b, 0xd712, 0x1, 0x1);
        gbc.writeMem(0xe7b2, { 0xfe, 0x20 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb8b2, gbc.sp());
        EXPECT(0xe7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe7b2));
        EXPECT(0x20, gbc.readMem(0xe7b3));
        // FE 01DF
        gbc.setState(0x1cc9, 0x7b95, 0x1ad0, 0xcb32, 0x6314, 0x2d9c, 0x0, 0x1);
        gbc.writeMem(0x1cc9, { 0xfe, 0x67 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7b95, gbc.sp());
        EXPECT(0x1ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01E0
        gbc.setState(0x6928, 0x3b88, 0x2a10, 0x1d09, 0x10b7, 0x5679, 0x1, 0x0);
        gbc.writeMem(0x6928, { 0xfe, 0x6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3b88, gbc.sp());
        EXPECT(0x692a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01E1
        gbc.setState(0x84e3, 0x1de9, 0x2c80, 0x664c, 0x847c, 0x791c, 0x1, 0x1);
        gbc.writeMem(0x84e3, { 0xfe, 0xfb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1de9, gbc.sp());
        EXPECT(0x84e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x84e3));
        EXPECT(0xfb, gbc.readMem(0x84e4));
        // FE 01E2
        gbc.setState(0x7e38, 0xc729, 0xce30, 0x2c5e, 0x66fd, 0xeb4c, 0x1, 0x0);
        gbc.writeMem(0x7e38, { 0xfe, 0xe4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc729, gbc.sp());
        EXPECT(0x7e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01E3
        gbc.setState(0x87d8, 0xba2e, 0x9ff0, 0x1d5c, 0x223f, 0xee1e, 0x1, 0x0);
        gbc.writeMem(0x87d8, { 0xfe, 0x60 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xba2e, gbc.sp());
        EXPECT(0x87da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x87d8));
        EXPECT(0x60, gbc.readMem(0x87d9));
        // FE 01E4
        gbc.setState(0x5c80, 0x6cf5, 0x9540, 0xb042, 0xaae3, 0xebc0, 0x0, 0x0);
        gbc.writeMem(0x5c80, { 0xfe, 0xcd });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6cf5, gbc.sp());
        EXPECT(0x5c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01E5
        gbc.setState(0x7a14, 0x1864, 0x2e30, 0x2dd2, 0xc679, 0xfd3, 0x0, 0x0);
        gbc.writeMem(0x7a14, { 0xfe, 0xc8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1864, gbc.sp());
        EXPECT(0x7a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01E6
        gbc.setState(0x9f05, 0xf140, 0x34d0, 0xb9a5, 0x33c9, 0x7ec7, 0x0, 0x1);
        gbc.writeMem(0x9f05, { 0xfe, 0x27 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf140, gbc.sp());
        EXPECT(0x9f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9f05));
        EXPECT(0x27, gbc.readMem(0x9f06));
        // FE 01E7
        gbc.setState(0xa4c7, 0x196e, 0x6020, 0x6c2a, 0x6ab5, 0x431a, 0x1, 0x1);
        gbc.writeMem(0xa4c7, { 0xfe, 0x47 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x196e, gbc.sp());
        EXPECT(0xa4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa4c7));
        EXPECT(0x47, gbc.readMem(0xa4c8));
        // FE 01E8
        gbc.setState(0xd40a, 0xa15a, 0x6f50, 0xa167, 0x229f, 0xc94a, 0x0, 0x0);
        gbc.writeMem(0xd40a, { 0xfe, 0x13 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa15a, gbc.sp());
        EXPECT(0xd40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd40a));
        EXPECT(0x13, gbc.readMem(0xd40b));
        // FE 01E9
        gbc.setState(0x4b44, 0xdd12, 0xb630, 0x2cad, 0x51c1, 0x1dd6, 0x0, 0x1);
        gbc.writeMem(0x4b44, { 0xfe, 0x86 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdd12, gbc.sp());
        EXPECT(0x4b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01EA
        gbc.setState(0xbf21, 0xcbf3, 0x7440, 0x2f7b, 0x5b42, 0x2382, 0x0, 0x1);
        gbc.writeMem(0xbf21, { 0xfe, 0x5b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcbf3, gbc.sp());
        EXPECT(0xbf23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbf21));
        EXPECT(0x5b, gbc.readMem(0xbf22));
        // FE 01EB
        gbc.setState(0x2943, 0x66f6, 0xa200, 0x40ea, 0xd226, 0x3649, 0x1, 0x1);
        gbc.writeMem(0x2943, { 0xfe, 0xeb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x66f6, gbc.sp());
        EXPECT(0x2945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01EC
        gbc.setState(0x86f0, 0x7c22, 0x2a00, 0x3b35, 0xe8a, 0x600d, 0x0, 0x0);
        gbc.writeMem(0x86f0, { 0xfe, 0xb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7c22, gbc.sp());
        EXPECT(0x86f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x86f0));
        EXPECT(0xb, gbc.readMem(0x86f1));
        // FE 01ED
        gbc.setState(0x4f6a, 0x749a, 0xa230, 0xb385, 0x3ee9, 0x4fe1, 0x1, 0x0);
        gbc.writeMem(0x4f6a, { 0xfe, 0xcf });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x749a, gbc.sp());
        EXPECT(0x4f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01EE
        gbc.setState(0xbe9b, 0x83b2, 0x3900, 0x91d1, 0x8e46, 0x2963, 0x0, 0x1);
        gbc.writeMem(0xbe9b, { 0xfe, 0x69 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x83b2, gbc.sp());
        EXPECT(0xbe9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbe9b));
        EXPECT(0x69, gbc.readMem(0xbe9c));
        // FE 01EF
        gbc.setState(0xc350, 0x33d3, 0x9ad0, 0x1b25, 0xa29, 0x8238, 0x1, 0x0);
        gbc.writeMem(0xc350, { 0xfe, 0x30 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x33d3, gbc.sp());
        EXPECT(0xc352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc350));
        EXPECT(0x30, gbc.readMem(0xc351));
        // FE 01F0
        gbc.setState(0x9ca6, 0x3580, 0xc090, 0xf24f, 0x978, 0xe4a, 0x0, 0x0);
        gbc.writeMem(0x9ca6, { 0xfe, 0xe6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3580, gbc.sp());
        EXPECT(0x9ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9ca6));
        EXPECT(0xe6, gbc.readMem(0x9ca7));
        // FE 01F1
        gbc.setState(0x50d, 0x73ff, 0xadf0, 0xf852, 0xdf45, 0x21a1, 0x1, 0x0);
        gbc.writeMem(0x50d, { 0xfe, 0xe5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x73ff, gbc.sp());
        EXPECT(0x50f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01F2
        gbc.setState(0xefdf, 0xe812, 0x79b0, 0x6395, 0xa27f, 0x455, 0x0, 0x1);
        gbc.writeMem(0xefdf, { 0xfe, 0xad });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe812, gbc.sp());
        EXPECT(0xefe1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xefdf));
        EXPECT(0xad, gbc.readMem(0xefe0));
        // FE 01F3
        gbc.setState(0x128d, 0x892e, 0x5b00, 0x3f3a, 0x5f84, 0xc20e, 0x0, 0x1);
        gbc.writeMem(0x128d, { 0xfe, 0xa8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x892e, gbc.sp());
        EXPECT(0x128f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01F4
        gbc.setState(0xb320, 0xc9fb, 0xb5f0, 0xf0cc, 0x4e03, 0xc992, 0x0, 0x0);
        gbc.writeMem(0xb320, { 0xfe, 0x7d });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc9fb, gbc.sp());
        EXPECT(0xb322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb320));
        EXPECT(0x7d, gbc.readMem(0xb321));
        // FE 01F5
        gbc.setState(0xa585, 0xc9ac, 0x4c30, 0xf850, 0x9752, 0xc91f, 0x0, 0x1);
        gbc.writeMem(0xa585, { 0xfe, 0xd3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc9ac, gbc.sp());
        EXPECT(0xa587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa585));
        EXPECT(0xd3, gbc.readMem(0xa586));
        // FE 01F6
        gbc.setState(0x2a26, 0x3206, 0xf3c0, 0xe48b, 0x73db, 0xea6c, 0x1, 0x1);
        gbc.writeMem(0x2a26, { 0xfe, 0xf0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3206, gbc.sp());
        EXPECT(0x2a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01F7
        gbc.setState(0x1403, 0xd5b3, 0x6fd0, 0xe1aa, 0xe6a6, 0x2332, 0x0, 0x1);
        gbc.writeMem(0x1403, { 0xfe, 0x39 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd5b3, gbc.sp());
        EXPECT(0x1405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 01F8
        gbc.setState(0x314b, 0x35ec, 0x8a40, 0xc7cd, 0x374d, 0x37b4, 0x1, 0x0);
        gbc.writeMem(0x314b, { 0xfe, 0xed });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x35ec, gbc.sp());
        EXPECT(0x314d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01FA
        gbc.setState(0x27ed, 0xaa0d, 0x8c90, 0x5c17, 0x72b9, 0xb7ee, 0x1, 0x1);
        gbc.writeMem(0x27ed, { 0xfe, 0xcd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaa0d, gbc.sp());
        EXPECT(0x27ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01FB
        gbc.setState(0xcd48, 0x6758, 0xf740, 0xadd5, 0x43ba, 0x8935, 0x0, 0x0);
        gbc.writeMem(0xcd48, { 0xfe, 0xb4 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6758, gbc.sp());
        EXPECT(0xcd4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcd48));
        EXPECT(0xb4, gbc.readMem(0xcd49));
        // FE 01FC
        gbc.setState(0x1cd7, 0xd3da, 0x1f80, 0xb95e, 0x234a, 0xde30, 0x0, 0x0);
        gbc.writeMem(0x1cd7, { 0xfe, 0x7e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd3da, gbc.sp());
        EXPECT(0x1cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 01FD
        gbc.setState(0xdea3, 0x120b, 0x3600, 0x2477, 0xeb97, 0x1f56, 0x0, 0x1);
        gbc.writeMem(0xdea3, { 0xfe, 0x69 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x120b, gbc.sp());
        EXPECT(0xdea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdea3));
        EXPECT(0x69, gbc.readMem(0xdea4));
        // FE 01FE
        gbc.setState(0x982d, 0xe296, 0xf3a0, 0x7b60, 0x58e0, 0x5051, 0x1, 0x0);
        gbc.writeMem(0x982d, { 0xfe, 0xef });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe296, gbc.sp());
        EXPECT(0x982f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x982d));
        EXPECT(0xef, gbc.readMem(0x982e));
        // FE 01FF
        gbc.setState(0x5d82, 0x66ab, 0x54b0, 0x7666, 0xc074, 0x63d3, 0x1, 0x0);
        gbc.writeMem(0x5d82, { 0xfe, 0xd });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x66ab, gbc.sp());
        EXPECT(0x5d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0200
        gbc.setState(0xb9ac, 0x7f31, 0x66a0, 0x8ef7, 0x2d07, 0x8a8e, 0x0, 0x0);
        gbc.writeMem(0xb9ac, { 0xfe, 0xb6 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7f31, gbc.sp());
        EXPECT(0xb9ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb9ac));
        EXPECT(0xb6, gbc.readMem(0xb9ad));
        // FE 0201
        gbc.setState(0x2b6, 0x1945, 0x850, 0x9c38, 0x5b48, 0x807e, 0x0, 0x1);
        gbc.writeMem(0x2b6, { 0xfe, 0xa8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1945, gbc.sp());
        EXPECT(0x2b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0202
        gbc.setState(0xc04f, 0x6f48, 0xee0, 0xd2a3, 0x2da3, 0xa356, 0x0, 0x1);
        gbc.writeMem(0xc04f, { 0xfe, 0xdc });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6f48, gbc.sp());
        EXPECT(0xc051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc04f));
        EXPECT(0xdc, gbc.readMem(0xc050));
        // FE 0203
        gbc.setState(0x453f, 0x47d3, 0x1130, 0x6f, 0x1627, 0x1076, 0x1, 0x0);
        gbc.writeMem(0x453f, { 0xfe, 0x57 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x47d3, gbc.sp());
        EXPECT(0x4541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0204
        gbc.setState(0xd500, 0x3fea, 0xc1e0, 0xc043, 0xde63, 0xde05, 0x0, 0x0);
        gbc.writeMem(0xd500, { 0xfe, 0x8a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3fea, gbc.sp());
        EXPECT(0xd502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd500));
        EXPECT(0x8a, gbc.readMem(0xd501));
        // FE 0205
        gbc.setState(0xcb06, 0xbf32, 0x9d0, 0xd21d, 0x91f3, 0x3bb9, 0x1, 0x1);
        gbc.writeMem(0xcb06, { 0xfe, 0xf });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbf32, gbc.sp());
        EXPECT(0xcb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcb06));
        EXPECT(0xf, gbc.readMem(0xcb07));
        // FE 0206
        gbc.setState(0xa133, 0x5778, 0xc440, 0x994e, 0x8580, 0xfd3f, 0x0, 0x1);
        gbc.writeMem(0xa133, { 0xfe, 0x81 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5778, gbc.sp());
        EXPECT(0xa135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa133));
        EXPECT(0x81, gbc.readMem(0xa134));
        // FE 0207
        gbc.setState(0xbc6f, 0x606b, 0xf280, 0xb414, 0xc038, 0x39a4, 0x1, 0x1);
        gbc.writeMem(0xbc6f, { 0xfe, 0x66 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x606b, gbc.sp());
        EXPECT(0xbc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbc6f));
        EXPECT(0x66, gbc.readMem(0xbc70));
        // FE 0208
        gbc.setState(0x89b0, 0xc459, 0x1ba0, 0x6238, 0xd8c5, 0x4423, 0x0, 0x1);
        gbc.writeMem(0x89b0, { 0xfe, 0x33 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc459, gbc.sp());
        EXPECT(0x89b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x89b0));
        EXPECT(0x33, gbc.readMem(0x89b1));
        // FE 0209
        gbc.setState(0x3c93, 0xf15f, 0x7100, 0x34d2, 0x1351, 0x7dc4, 0x1, 0x0);
        gbc.writeMem(0x3c93, { 0xfe, 0xdf });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf15f, gbc.sp());
        EXPECT(0x3c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 020A
        gbc.setState(0xa3ce, 0x2fa3, 0xfa40, 0xb9d8, 0x3351, 0xcb01, 0x0, 0x0);
        gbc.writeMem(0xa3ce, { 0xfe, 0x69 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2fa3, gbc.sp());
        EXPECT(0xa3d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa3ce));
        EXPECT(0x69, gbc.readMem(0xa3cf));
        // FE 020B
        gbc.setState(0xdc74, 0xe17d, 0x5f70, 0x123f, 0x77bd, 0x12d5, 0x1, 0x0);
        gbc.writeMem(0xdc74, { 0xfe, 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe17d, gbc.sp());
        EXPECT(0xdc76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdc74));
        EXPECT(0x4b, gbc.readMem(0xdc75));
        // FE 020C
        gbc.setState(0xd7a5, 0xffea, 0x1ff0, 0x81b9, 0xdeed, 0xfd8, 0x1, 0x1);
        gbc.writeMem(0xd7a5, { 0xfe, 0x77 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xffea, gbc.sp());
        EXPECT(0xd7a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd7a5));
        EXPECT(0x77, gbc.readMem(0xd7a6));
        // FE 020D
        gbc.setState(0xb93c, 0x57d1, 0x1fd0, 0x8779, 0xaf11, 0xff92, 0x0, 0x0);
        gbc.writeMem(0xb93c, { 0xfe, 0xb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x57d1, gbc.sp());
        EXPECT(0xb93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb93c));
        EXPECT(0xb, gbc.readMem(0xb93d));
        // FE 020F
        gbc.setState(0x96d1, 0xd6d8, 0xd3d0, 0x680d, 0xbf3a, 0xa308, 0x0, 0x0);
        gbc.writeMem(0x96d1, { 0xfe, 0xb5 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd6d8, gbc.sp());
        EXPECT(0x96d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x96d1));
        EXPECT(0xb5, gbc.readMem(0x96d2));
        // FE 0210
        gbc.setState(0x1927, 0x1535, 0xa490, 0xabe5, 0x9cf3, 0x81b3, 0x0, 0x0);
        gbc.writeMem(0x1927, { 0xfe, 0xb9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1535, gbc.sp());
        EXPECT(0x1929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0211
        gbc.setState(0x7e92, 0x5262, 0xb680, 0x4b56, 0xabb9, 0x961f, 0x0, 0x0);
        gbc.writeMem(0x7e92, { 0xfe, 0xd2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5262, gbc.sp());
        EXPECT(0x7e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0212
        gbc.setState(0xd7cf, 0x8de2, 0x6420, 0xaa71, 0x88f5, 0x32c7, 0x1, 0x1);
        gbc.writeMem(0xd7cf, { 0xfe, 0x8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8de2, gbc.sp());
        EXPECT(0xd7d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd7cf));
        EXPECT(0x8, gbc.readMem(0xd7d0));
        // FE 0213
        gbc.setState(0x47fe, 0xf8a8, 0xb4f0, 0xe1c3, 0xb926, 0x4a55, 0x0, 0x1);
        gbc.writeMem(0x47fe, { 0xfe, 0x72 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf8a8, gbc.sp());
        EXPECT(0x4800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0214
        gbc.setState(0x752b, 0x26d6, 0x9310, 0x1b23, 0x7421, 0x681c, 0x1, 0x1);
        gbc.writeMem(0x752b, { 0xfe, 0xd8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x26d6, gbc.sp());
        EXPECT(0x752d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0215
        gbc.setState(0x96a0, 0x4ca0, 0x9910, 0x674f, 0x1fdb, 0x5895, 0x1, 0x0);
        gbc.writeMem(0x96a0, { 0xfe, 0x37 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4ca0, gbc.sp());
        EXPECT(0x96a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x96a0));
        EXPECT(0x37, gbc.readMem(0x96a1));
        // FE 0216
        gbc.setState(0x492, 0x18a7, 0x6540, 0x147d, 0x263e, 0xf348, 0x0, 0x0);
        gbc.writeMem(0x492, { 0xfe, 0x28 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x18a7, gbc.sp());
        EXPECT(0x494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0217
        gbc.setState(0x4c5, 0x3f4b, 0xb370, 0x53d7, 0xdccd, 0x7e0e, 0x0, 0x1);
        gbc.writeMem(0x4c5, { 0xfe, 0x25 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3f4b, gbc.sp());
        EXPECT(0x4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0218
        gbc.setState(0xeaa9, 0xe7be, 0x9480, 0x27fe, 0xcbea, 0x8f2d, 0x0, 0x1);
        gbc.writeMem(0xeaa9, { 0xfe, 0x3f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe7be, gbc.sp());
        EXPECT(0xeaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xeaa9));
        EXPECT(0x3f, gbc.readMem(0xeaaa));
        // FE 0219
        gbc.setState(0xe483, 0x77ef, 0xd4f0, 0x4f4d, 0xc474, 0x9b0f, 0x1, 0x1);
        gbc.writeMem(0xe483, { 0xfe, 0x68 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x77ef, gbc.sp());
        EXPECT(0xe485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe483));
        EXPECT(0x68, gbc.readMem(0xe484));
        // FE 021A
        gbc.setState(0xd136, 0xce80, 0x7670, 0x33f9, 0x9eff, 0x7b5e, 0x1, 0x0);
        gbc.writeMem(0xd136, { 0xfe, 0xc9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xce80, gbc.sp());
        EXPECT(0xd138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd136));
        EXPECT(0xc9, gbc.readMem(0xd137));
        // FE 021B
        gbc.setState(0xbd91, 0x8e74, 0xe410, 0x5039, 0xa2b1, 0xf83d, 0x1, 0x0);
        gbc.writeMem(0xbd91, { 0xfe, 0xa4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8e74, gbc.sp());
        EXPECT(0xbd93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbd91));
        EXPECT(0xa4, gbc.readMem(0xbd92));
        // FE 021C
        gbc.setState(0x6cef, 0xc984, 0xd060, 0xcaf3, 0x18eb, 0xd5c3, 0x0, 0x1);
        gbc.writeMem(0x6cef, { 0xfe, 0x9b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc984, gbc.sp());
        EXPECT(0x6cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 021D
        gbc.setState(0x3246, 0x7a70, 0x8de0, 0xb235, 0xc220, 0x5033, 0x1, 0x0);
        gbc.writeMem(0x3246, { 0xfe, 0xfd });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7a70, gbc.sp());
        EXPECT(0x3248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 021E
        gbc.setState(0x66f4, 0xb0ea, 0x9860, 0xe882, 0xfc19, 0x4e4d, 0x0, 0x0);
        gbc.writeMem(0x66f4, { 0xfe, 0x74 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb0ea, gbc.sp());
        EXPECT(0x66f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 021F
        gbc.setState(0xcea8, 0x58e0, 0xc0d0, 0x3e13, 0x342, 0x71d6, 0x0, 0x0);
        gbc.writeMem(0xcea8, { 0xfe, 0xca });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x58e0, gbc.sp());
        EXPECT(0xceaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcea8));
        EXPECT(0xca, gbc.readMem(0xcea9));
        // FE 0220
        gbc.setState(0x305, 0xff31, 0xc420, 0x2da6, 0x3620, 0x1294, 0x1, 0x0);
        gbc.writeMem(0x305, { 0xfe, 0xdc });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xff31, gbc.sp());
        EXPECT(0x307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0221
        gbc.setState(0x2e06, 0x5a6f, 0xf0c0, 0x961f, 0xc245, 0x4ef1, 0x1, 0x0);
        gbc.writeMem(0x2e06, { 0xfe, 0x59 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5a6f, gbc.sp());
        EXPECT(0x2e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0222
        gbc.setState(0x4093, 0x9884, 0xaff0, 0x97e6, 0xf3cb, 0xdb13, 0x0, 0x1);
        gbc.writeMem(0x4093, { 0xfe, 0x1a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9884, gbc.sp());
        EXPECT(0x4095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0223
        gbc.setState(0x67e0, 0x9a29, 0xada0, 0xb91f, 0x7a4b, 0xa59c, 0x1, 0x0);
        gbc.writeMem(0x67e0, { 0xfe, 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9a29, gbc.sp());
        EXPECT(0x67e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0224
        gbc.setState(0x9c8c, 0x85e5, 0xadb0, 0x6fe6, 0x63d2, 0x81a6, 0x1, 0x1);
        gbc.writeMem(0x9c8c, { 0xfe, 0xd0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x85e5, gbc.sp());
        EXPECT(0x9c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9c8c));
        EXPECT(0xd0, gbc.readMem(0x9c8d));
        // FE 0225
        gbc.setState(0x4188, 0xe838, 0xfbf0, 0x5965, 0x74ea, 0x50d, 0x0, 0x0);
        gbc.writeMem(0x4188, { 0xfe, 0xa3 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe838, gbc.sp());
        EXPECT(0x418a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0226
        gbc.setState(0xd8e3, 0xde83, 0x5c70, 0x41d4, 0x88f5, 0xfc8d, 0x0, 0x0);
        gbc.writeMem(0xd8e3, { 0xfe, 0xf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xde83, gbc.sp());
        EXPECT(0xd8e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd8e3));
        EXPECT(0xf, gbc.readMem(0xd8e4));
        // FE 0227
        gbc.setState(0xc2f3, 0x2ca4, 0xcec0, 0x5018, 0x441f, 0xf7f9, 0x1, 0x1);
        gbc.writeMem(0xc2f3, { 0xfe, 0xb9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2ca4, gbc.sp());
        EXPECT(0xc2f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc2f3));
        EXPECT(0xb9, gbc.readMem(0xc2f4));
        // FE 0228
        gbc.setState(0x49c2, 0x273f, 0xe580, 0x8007, 0x751a, 0xbed0, 0x1, 0x1);
        gbc.writeMem(0x49c2, { 0xfe, 0xd2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x273f, gbc.sp());
        EXPECT(0x49c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0229
        gbc.setState(0xab5, 0xc9d0, 0xf720, 0xea50, 0xb7ad, 0xcf32, 0x0, 0x1);
        gbc.writeMem(0xab5, { 0xfe, 0x7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc9d0, gbc.sp());
        EXPECT(0xab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 022B
        gbc.setState(0xa608, 0x1893, 0x99e0, 0x4cd3, 0xb398, 0x40b1, 0x0, 0x0);
        gbc.writeMem(0xa608, { 0xfe, 0xe });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1893, gbc.sp());
        EXPECT(0xa60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa608));
        EXPECT(0xe, gbc.readMem(0xa609));
        // FE 022C
        gbc.setState(0x3878, 0xb71e, 0x1ca0, 0xcf3b, 0xfdec, 0x3be3, 0x0, 0x0);
        gbc.writeMem(0x3878, { 0xfe, 0x48 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb71e, gbc.sp());
        EXPECT(0x387a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 022D
        gbc.setState(0xad, 0x35a5, 0x7450, 0x7d24, 0x2e24, 0x35bc, 0x1, 0x0);
        gbc.writeMem(0xad, { 0xfe, 0xfd });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x35a5, gbc.sp());
        EXPECT(0xaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 022E
        gbc.setState(0x3fc3, 0x6875, 0x3200, 0x6a98, 0xa00d, 0x8a18, 0x1, 0x1);
        gbc.writeMem(0x3fc3, { 0xfe, 0xd7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6875, gbc.sp());
        EXPECT(0x3fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 022F
        gbc.setState(0xd2ec, 0x1168, 0xc780, 0x7ac5, 0xae7f, 0x11a8, 0x0, 0x0);
        gbc.writeMem(0xd2ec, { 0xfe, 0xd7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1168, gbc.sp());
        EXPECT(0xd2ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd2ec));
        EXPECT(0xd7, gbc.readMem(0xd2ed));
        // FE 0230
        gbc.setState(0x4cbb, 0x3d41, 0x7340, 0x1635, 0x2244, 0xed55, 0x1, 0x0);
        gbc.writeMem(0x4cbb, { 0xfe, 0xf0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x3d41, gbc.sp());
        EXPECT(0x4cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0232
        gbc.setState(0x7475, 0xc463, 0x30, 0x888f, 0xad36, 0xee87, 0x1, 0x1);
        gbc.writeMem(0x7475, { 0xfe, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc463, gbc.sp());
        EXPECT(0x7477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0233
        gbc.setState(0xfa5, 0x863, 0x3e40, 0xb1c, 0xe03c, 0xc5cc, 0x1, 0x1);
        gbc.writeMem(0xfa5, { 0xfe, 0x89 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x863, gbc.sp());
        EXPECT(0xfa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0234
        gbc.setState(0xdb9, 0xc692, 0x3420, 0x1ca6, 0x72e9, 0x5e01, 0x0, 0x0);
        gbc.writeMem(0xdb9, { 0xfe, 0x95 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc692, gbc.sp());
        EXPECT(0xdbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0235
        gbc.setState(0x8589, 0xc681, 0x3840, 0xca4e, 0x451c, 0x72f1, 0x1, 0x1);
        gbc.writeMem(0x8589, { 0xfe, 0xa5 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc681, gbc.sp());
        EXPECT(0x858b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8589));
        EXPECT(0xa5, gbc.readMem(0x858a));
        // FE 0236
        gbc.setState(0x98e7, 0x14a8, 0x6260, 0x9f82, 0x756d, 0xb718, 0x1, 0x0);
        gbc.writeMem(0x98e7, { 0xfe, 0xb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x14a8, gbc.sp());
        EXPECT(0x98e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x98e7));
        EXPECT(0xb, gbc.readMem(0x98e8));
        // FE 0237
        gbc.setState(0x4c76, 0x488, 0x5860, 0xe7b, 0x4d67, 0x490f, 0x0, 0x0);
        gbc.writeMem(0x4c76, { 0xfe, 0xed });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x488, gbc.sp());
        EXPECT(0x4c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0238
        gbc.setState(0xde24, 0x6676, 0x2540, 0x1627, 0x4dc9, 0xac81, 0x0, 0x0);
        gbc.writeMem(0xde24, { 0xfe, 0xe1 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6676, gbc.sp());
        EXPECT(0xde26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xde24));
        EXPECT(0xe1, gbc.readMem(0xde25));
        // FE 0239
        gbc.setState(0x9f7d, 0x9ffe, 0xf250, 0xc01a, 0x4bf9, 0x2931, 0x0, 0x0);
        gbc.writeMem(0x9f7d, { 0xfe, 0xea });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9ffe, gbc.sp());
        EXPECT(0x9f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9f7d));
        EXPECT(0xea, gbc.readMem(0x9f7e));
        // FE 023A
        gbc.setState(0x92a0, 0x108, 0xbe10, 0xed84, 0x6438, 0xca1c, 0x0, 0x0);
        gbc.writeMem(0x92a0, { 0xfe, 0xee });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x108, gbc.sp());
        EXPECT(0x92a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x92a0));
        EXPECT(0xee, gbc.readMem(0x92a1));
        // FE 023B
        gbc.setState(0xbcd0, 0x6ca3, 0xed0, 0xdba5, 0xf3f5, 0x482f, 0x0, 0x1);
        gbc.writeMem(0xbcd0, { 0xfe, 0x19 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6ca3, gbc.sp());
        EXPECT(0xbcd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbcd0));
        EXPECT(0x19, gbc.readMem(0xbcd1));
        // FE 023C
        gbc.setState(0x9cb3, 0xd517, 0xab70, 0xda41, 0x561d, 0xfa9d, 0x1, 0x0);
        gbc.writeMem(0x9cb3, { 0xfe, 0xdb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd517, gbc.sp());
        EXPECT(0x9cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9cb3));
        EXPECT(0xdb, gbc.readMem(0x9cb4));
        // FE 023D
        gbc.setState(0x5646, 0x6e6c, 0x8a10, 0x3f58, 0x67f2, 0xd5ca, 0x0, 0x1);
        gbc.writeMem(0x5646, { 0xfe, 0xce });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6e6c, gbc.sp());
        EXPECT(0x5648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 023E
        gbc.setState(0x7562, 0x978a, 0xc120, 0xc1ae, 0x1501, 0xd7d0, 0x1, 0x0);
        gbc.writeMem(0x7562, { 0xfe, 0x86 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x978a, gbc.sp());
        EXPECT(0x7564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 023F
        gbc.setState(0x61a1, 0xf97e, 0xaac0, 0x759a, 0xe2f4, 0xf33, 0x1, 0x1);
        gbc.writeMem(0x61a1, { 0xfe, 0x92 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf97e, gbc.sp());
        EXPECT(0x61a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0240
        gbc.setState(0x5655, 0xc2f9, 0x4ab0, 0x255, 0x35ae, 0xa62e, 0x0, 0x0);
        gbc.writeMem(0x5655, { 0xfe, 0xe5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc2f9, gbc.sp());
        EXPECT(0x5657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0241
        gbc.setState(0xa52b, 0x5d59, 0x1740, 0x471, 0x4162, 0x97a, 0x1, 0x0);
        gbc.writeMem(0xa52b, { 0xfe, 0x13 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5d59, gbc.sp());
        EXPECT(0xa52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa52b));
        EXPECT(0x13, gbc.readMem(0xa52c));
        // FE 0242
        gbc.setState(0x509b, 0xd1d7, 0xae40, 0x36c9, 0x8f36, 0xeb9b, 0x1, 0x1);
        gbc.writeMem(0x509b, { 0xfe, 0x3d });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd1d7, gbc.sp());
        EXPECT(0x509d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0243
        gbc.setState(0xae3c, 0x70fb, 0xae20, 0x6fec, 0xe4af, 0x9572, 0x1, 0x0);
        gbc.writeMem(0xae3c, { 0xfe, 0x88 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x70fb, gbc.sp());
        EXPECT(0xae3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xae3c));
        EXPECT(0x88, gbc.readMem(0xae3d));
        // FE 0245
        gbc.setState(0x6319, 0x1be6, 0x2370, 0x2c6d, 0xf64, 0xbf68, 0x1, 0x1);
        gbc.writeMem(0x6319, { 0xfe, 0x94 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1be6, gbc.sp());
        EXPECT(0x631b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0246
        gbc.setState(0x6d0f, 0xbbea, 0x6af0, 0x191a, 0x6d4d, 0x6f6c, 0x1, 0x1);
        gbc.writeMem(0x6d0f, { 0xfe, 0xdc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbbea, gbc.sp());
        EXPECT(0x6d11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0247
        gbc.setState(0xd36d, 0xe8bd, 0x680, 0x525f, 0x8016, 0x2580, 0x0, 0x1);
        gbc.writeMem(0xd36d, { 0xfe, 0xd9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe8bd, gbc.sp());
        EXPECT(0xd36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd36d));
        EXPECT(0xd9, gbc.readMem(0xd36e));
        // FE 0248
        gbc.setState(0xe86f, 0x79f0, 0x3530, 0x79e1, 0x1c60, 0xc417, 0x0, 0x0);
        gbc.writeMem(0xe86f, { 0xfe, 0xeb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x79f0, gbc.sp());
        EXPECT(0xe871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe86f));
        EXPECT(0xeb, gbc.readMem(0xe870));
        // FE 024A
        gbc.setState(0x8b50, 0x17cc, 0xe0f0, 0x480, 0x697d, 0x11f4, 0x1, 0x1);
        gbc.writeMem(0x8b50, { 0xfe, 0xa2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x17cc, gbc.sp());
        EXPECT(0x8b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8b50));
        EXPECT(0xa2, gbc.readMem(0x8b51));
        // FE 024B
        gbc.setState(0x54f3, 0x68d7, 0x94a0, 0xcc6a, 0x8e58, 0xc77c, 0x1, 0x1);
        gbc.writeMem(0x54f3, { 0xfe, 0x99 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x68d7, gbc.sp());
        EXPECT(0x54f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 024C
        gbc.setState(0x8bd, 0x6584, 0xcf0, 0xc9f3, 0x4a7d, 0xc7bb, 0x1, 0x1);
        gbc.writeMem(0x8bd, { 0xfe, 0x27 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6584, gbc.sp());
        EXPECT(0x8bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 024D
        gbc.setState(0x32f5, 0x8014, 0xfe00, 0x39f8, 0x651e, 0xbfd2, 0x1, 0x0);
        gbc.writeMem(0x32f5, { 0xfe, 0xa6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8014, gbc.sp());
        EXPECT(0x32f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 024E
        gbc.setState(0xef7d, 0x3ee0, 0x1110, 0xb21d, 0x427, 0x2880, 0x0, 0x1);
        gbc.writeMem(0xef7d, { 0xfe, 0xd7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3ee0, gbc.sp());
        EXPECT(0xef7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xef7d));
        EXPECT(0xd7, gbc.readMem(0xef7e));
        // FE 024F
        gbc.setState(0x5e13, 0xc381, 0xe020, 0x58a2, 0xe38, 0x2fd3, 0x1, 0x0);
        gbc.writeMem(0x5e13, { 0xfe, 0x76 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc381, gbc.sp());
        EXPECT(0x5e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0250
        gbc.setState(0x5314, 0x6ea3, 0xb600, 0x95b, 0x8848, 0x18c3, 0x1, 0x0);
        gbc.writeMem(0x5314, { 0xfe, 0xf6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6ea3, gbc.sp());
        EXPECT(0x5316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0251
        gbc.setState(0x1b5d, 0xde83, 0xeed0, 0x2ea5, 0x2ae8, 0x2092, 0x1, 0x1);
        gbc.writeMem(0x1b5d, { 0xfe, 0x5a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xde83, gbc.sp());
        EXPECT(0x1b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0252
        gbc.setState(0x8723, 0x8fc3, 0x8640, 0x2436, 0xf2f7, 0x88fa, 0x0, 0x1);
        gbc.writeMem(0x8723, { 0xfe, 0x40 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8fc3, gbc.sp());
        EXPECT(0x8725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8723));
        EXPECT(0x40, gbc.readMem(0x8724));
        // FE 0253
        gbc.setState(0x28c7, 0x184c, 0x68c0, 0xccd9, 0x73c5, 0x7864, 0x0, 0x0);
        gbc.writeMem(0x28c7, { 0xfe, 0x9f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x184c, gbc.sp());
        EXPECT(0x28c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0254
        gbc.setState(0x3695, 0x3dfe, 0x47e0, 0xecd8, 0xf6b7, 0x3c57, 0x1, 0x0);
        gbc.writeMem(0x3695, { 0xfe, 0x84 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3dfe, gbc.sp());
        EXPECT(0x3697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0255
        gbc.setState(0xa5be, 0x2386, 0x87a0, 0xa7a0, 0x3465, 0x5eb3, 0x0, 0x1);
        gbc.writeMem(0xa5be, { 0xfe, 0x34 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2386, gbc.sp());
        EXPECT(0xa5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa5be));
        EXPECT(0x34, gbc.readMem(0xa5bf));
        // FE 0256
        gbc.setState(0xb25c, 0x77eb, 0xc480, 0xda2a, 0xffc4, 0x721d, 0x0, 0x1);
        gbc.writeMem(0xb25c, { 0xfe, 0x2a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x77eb, gbc.sp());
        EXPECT(0xb25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb25c));
        EXPECT(0x2a, gbc.readMem(0xb25d));
        // FE 0257
        gbc.setState(0x15a2, 0xfd09, 0xb8c0, 0xe292, 0xcb1d, 0x6379, 0x1, 0x0);
        gbc.writeMem(0x15a2, { 0xfe, 0xaa });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfd09, gbc.sp());
        EXPECT(0x15a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0259
        gbc.setState(0x8c59, 0x25be, 0x89e0, 0xf4c4, 0x3c6, 0x14d2, 0x1, 0x1);
        gbc.writeMem(0x8c59, { 0xfe, 0xd0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x25be, gbc.sp());
        EXPECT(0x8c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8c59));
        EXPECT(0xd0, gbc.readMem(0x8c5a));
        // FE 025A
        gbc.setState(0x72d, 0x53bc, 0x5b10, 0xe75f, 0xa4c3, 0x1e3f, 0x1, 0x0);
        gbc.writeMem(0x72d, { 0xfe, 0x5a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x53bc, gbc.sp());
        EXPECT(0x72f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 025B
        gbc.setState(0xcc19, 0xcc98, 0xc3e0, 0x2228, 0x5c27, 0x8909, 0x0, 0x1);
        gbc.writeMem(0xcc19, { 0xfe, 0xa0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcc98, gbc.sp());
        EXPECT(0xcc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcc19));
        EXPECT(0xa0, gbc.readMem(0xcc1a));
        // FE 025C
        gbc.setState(0x4da1, 0x896e, 0x7070, 0x8e88, 0xdf91, 0xe7ce, 0x1, 0x1);
        gbc.writeMem(0x4da1, { 0xfe, 0xf2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x896e, gbc.sp());
        EXPECT(0x4da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 025D
        gbc.setState(0x2fd0, 0x2885, 0xaa20, 0x1dce, 0xfc39, 0xcc93, 0x0, 0x1);
        gbc.writeMem(0x2fd0, { 0xfe, 0x26 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2885, gbc.sp());
        EXPECT(0x2fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 025E
        gbc.setState(0x4b51, 0x2e23, 0xc120, 0x160f, 0xd9be, 0x34a6, 0x0, 0x0);
        gbc.writeMem(0x4b51, { 0xfe, 0x58 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2e23, gbc.sp());
        EXPECT(0x4b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0260
        gbc.setState(0x4688, 0xf806, 0xec70, 0x5823, 0x341, 0x9e18, 0x1, 0x1);
        gbc.writeMem(0x4688, { 0xfe, 0x44 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf806, gbc.sp());
        EXPECT(0x468a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0261
        gbc.setState(0x2f06, 0xc3ec, 0x29f0, 0xe6a9, 0x5d2d, 0x581e, 0x0, 0x1);
        gbc.writeMem(0x2f06, { 0xfe, 0x8b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc3ec, gbc.sp());
        EXPECT(0x2f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0262
        gbc.setState(0x8965, 0x6557, 0x39d0, 0xa722, 0x9ada, 0x6219, 0x0, 0x0);
        gbc.writeMem(0x8965, { 0xfe, 0x2b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6557, gbc.sp());
        EXPECT(0x8967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8965));
        EXPECT(0x2b, gbc.readMem(0x8966));
        // FE 0263
        gbc.setState(0x7f90, 0x15b8, 0x5a20, 0xf736, 0x8d5b, 0xb70d, 0x0, 0x1);
        gbc.writeMem(0x7f90, { 0xfe, 0x89 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x15b8, gbc.sp());
        EXPECT(0x7f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0264
        gbc.setState(0x5a4b, 0xd0cc, 0xbe60, 0x19a2, 0xab29, 0x6ab, 0x0, 0x1);
        gbc.writeMem(0x5a4b, { 0xfe, 0x1a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd0cc, gbc.sp());
        EXPECT(0x5a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0265
        gbc.setState(0xaeb5, 0x6cc6, 0xa780, 0xa1ac, 0x4bc5, 0x9107, 0x0, 0x0);
        gbc.writeMem(0xaeb5, { 0xfe, 0x64 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6cc6, gbc.sp());
        EXPECT(0xaeb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xaeb5));
        EXPECT(0x64, gbc.readMem(0xaeb6));
        // FE 0266
        gbc.setState(0xcf84, 0xf71, 0xca50, 0xf3f, 0xb09f, 0x82a5, 0x1, 0x0);
        gbc.writeMem(0xcf84, { 0xfe, 0x7b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf71, gbc.sp());
        EXPECT(0xcf86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcf84));
        EXPECT(0x7b, gbc.readMem(0xcf85));
        // FE 0267
        gbc.setState(0x160a, 0x1c30, 0xba80, 0x90a4, 0xb524, 0xf145, 0x1, 0x0);
        gbc.writeMem(0x160a, { 0xfe, 0x5 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1c30, gbc.sp());
        EXPECT(0x160c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0268
        gbc.setState(0x520e, 0x5daa, 0xf1b0, 0x59a8, 0x504f, 0xc58c, 0x1, 0x0);
        gbc.writeMem(0x520e, { 0xfe, 0x38 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5daa, gbc.sp());
        EXPECT(0x5210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0269
        gbc.setState(0x222d, 0xd5c7, 0x3510, 0xa41d, 0xb5d6, 0x8580, 0x0, 0x1);
        gbc.writeMem(0x222d, { 0xfe, 0x8b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd5c7, gbc.sp());
        EXPECT(0x222f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 026B
        gbc.setState(0xde0b, 0x1bf0, 0x8cc0, 0xce92, 0x5498, 0xbf40, 0x0, 0x0);
        gbc.writeMem(0xde0b, { 0xfe, 0x1f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1bf0, gbc.sp());
        EXPECT(0xde0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xde0b));
        EXPECT(0x1f, gbc.readMem(0xde0c));
        // FE 026C
        gbc.setState(0x82f6, 0x2a98, 0x8270, 0x7618, 0xe18, 0xd510, 0x0, 0x1);
        gbc.writeMem(0x82f6, { 0xfe, 0x7a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2a98, gbc.sp());
        EXPECT(0x82f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x82f6));
        EXPECT(0x7a, gbc.readMem(0x82f7));
        // FE 026D
        gbc.setState(0x6207, 0x91bb, 0x7210, 0x155a, 0x50ee, 0x5b09, 0x1, 0x0);
        gbc.writeMem(0x6207, { 0xfe, 0xb0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x91bb, gbc.sp());
        EXPECT(0x6209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 026E
        gbc.setState(0x2f83, 0xaf21, 0xd880, 0xeed6, 0x3b7e, 0xdd6b, 0x0, 0x1);
        gbc.writeMem(0x2f83, { 0xfe, 0x98 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xaf21, gbc.sp());
        EXPECT(0x2f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 026F
        gbc.setState(0xb0b8, 0x95aa, 0x5fc0, 0x2a0c, 0xec79, 0xeb8e, 0x0, 0x0);
        gbc.writeMem(0xb0b8, { 0xfe, 0x97 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x95aa, gbc.sp());
        EXPECT(0xb0ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb0b8));
        EXPECT(0x97, gbc.readMem(0xb0b9));
        // FE 0270
        gbc.setState(0xd88c, 0x9382, 0x5c50, 0x548d, 0xdae7, 0xc0a4, 0x1, 0x0);
        gbc.writeMem(0xd88c, { 0xfe, 0x10 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9382, gbc.sp());
        EXPECT(0xd88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd88c));
        EXPECT(0x10, gbc.readMem(0xd88d));
        // FE 0271
        gbc.setState(0x8732, 0x4d21, 0xab00, 0x128a, 0x377, 0x26c7, 0x1, 0x0);
        gbc.writeMem(0x8732, { 0xfe, 0x9a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4d21, gbc.sp());
        EXPECT(0x8734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8732));
        EXPECT(0x9a, gbc.readMem(0x8733));
        // FE 0272
        gbc.setState(0x297, 0x63f4, 0xb110, 0x741a, 0x7d40, 0x600e, 0x0, 0x1);
        gbc.writeMem(0x297, { 0xfe, 0x44 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x63f4, gbc.sp());
        EXPECT(0x299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0273
        gbc.setState(0x517f, 0x161a, 0xf440, 0x7124, 0xd068, 0xb559, 0x1, 0x1);
        gbc.writeMem(0x517f, { 0xfe, 0x57 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x161a, gbc.sp());
        EXPECT(0x5181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0274
        gbc.setState(0x879, 0x5537, 0x1620, 0x126a, 0x21cf, 0x2d51, 0x0, 0x0);
        gbc.writeMem(0x879, { 0xfe, 0x1a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5537, gbc.sp());
        EXPECT(0x87b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0275
        gbc.setState(0x828, 0x7455, 0x7740, 0x1f8f, 0xc5c3, 0x43a0, 0x1, 0x0);
        gbc.writeMem(0x828, { 0xfe, 0xff });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7455, gbc.sp());
        EXPECT(0x82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0276
        gbc.setState(0xa1a5, 0xe354, 0xdce0, 0x8ffd, 0xf127, 0x42be, 0x0, 0x1);
        gbc.writeMem(0xa1a5, { 0xfe, 0xd0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe354, gbc.sp());
        EXPECT(0xa1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa1a5));
        EXPECT(0xd0, gbc.readMem(0xa1a6));
        // FE 0277
        gbc.setState(0x94de, 0xa54b, 0xe4c0, 0x4ce6, 0xb51b, 0xd5c0, 0x0, 0x1);
        gbc.writeMem(0x94de, { 0xfe, 0x79 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa54b, gbc.sp());
        EXPECT(0x94e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x94de));
        EXPECT(0x79, gbc.readMem(0x94df));
        // FE 0278
        gbc.setState(0x3a37, 0x5cfa, 0xc560, 0x6f17, 0xfe08, 0xd9cf, 0x1, 0x1);
        gbc.writeMem(0x3a37, { 0xfe, 0x61 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5cfa, gbc.sp());
        EXPECT(0x3a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 027A
        gbc.setState(0x7000, 0x5e60, 0x1250, 0xd51a, 0xa78b, 0x219b, 0x1, 0x0);
        gbc.writeMem(0x7000, { 0xfe, 0xa0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5e60, gbc.sp());
        EXPECT(0x7002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 027B
        gbc.setState(0xdb25, 0x2705, 0x1140, 0xfb46, 0xd8e8, 0xf4e9, 0x0, 0x0);
        gbc.writeMem(0xdb25, { 0xfe, 0x60 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2705, gbc.sp());
        EXPECT(0xdb27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdb25));
        EXPECT(0x60, gbc.readMem(0xdb26));
        // FE 027C
        gbc.setState(0x99b7, 0x30d2, 0x7050, 0xd936, 0xb22e, 0xb255, 0x0, 0x0);
        gbc.writeMem(0x99b7, { 0xfe, 0xd7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x30d2, gbc.sp());
        EXPECT(0x99b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x99b7));
        EXPECT(0xd7, gbc.readMem(0x99b8));
        // FE 027E
        gbc.setState(0x74eb, 0x82cd, 0xcd90, 0x3413, 0x10a, 0x85d6, 0x0, 0x0);
        gbc.writeMem(0x74eb, { 0xfe, 0x1 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x82cd, gbc.sp());
        EXPECT(0x74ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 027F
        gbc.setState(0xa1ef, 0x9992, 0xf1d0, 0x39ed, 0xa8fc, 0x327, 0x0, 0x0);
        gbc.writeMem(0xa1ef, { 0xfe, 0x14 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9992, gbc.sp());
        EXPECT(0xa1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa1ef));
        EXPECT(0x14, gbc.readMem(0xa1f0));
        // FE 0280
        gbc.setState(0x8c93, 0x5f5c, 0xa360, 0x2b43, 0xa474, 0x9eee, 0x0, 0x0);
        gbc.writeMem(0x8c93, { 0xfe, 0x99 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5f5c, gbc.sp());
        EXPECT(0x8c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8c93));
        EXPECT(0x99, gbc.readMem(0x8c94));
        // FE 0281
        gbc.setState(0xb564, 0xb41c, 0x5260, 0xe5fe, 0x91c, 0x9d74, 0x0, 0x0);
        gbc.writeMem(0xb564, { 0xfe, 0x86 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb41c, gbc.sp());
        EXPECT(0xb566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb564));
        EXPECT(0x86, gbc.readMem(0xb565));
        // FE 0282
        gbc.setState(0x3bb7, 0xa187, 0xef40, 0xdac5, 0x6ea7, 0xb7c9, 0x1, 0x0);
        gbc.writeMem(0x3bb7, { 0xfe, 0xb1 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa187, gbc.sp());
        EXPECT(0x3bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0284
        gbc.setState(0x52bd, 0x8d09, 0xd510, 0x638e, 0xf965, 0x6465, 0x0, 0x1);
        gbc.writeMem(0x52bd, { 0xfe, 0x3e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8d09, gbc.sp());
        EXPECT(0x52bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0285
        gbc.setState(0xbd1f, 0x9cf5, 0xd320, 0x5217, 0xf094, 0xa86, 0x0, 0x1);
        gbc.writeMem(0xbd1f, { 0xfe, 0xd1 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9cf5, gbc.sp());
        EXPECT(0xbd21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbd1f));
        EXPECT(0xd1, gbc.readMem(0xbd20));
        // FE 0286
        gbc.setState(0xebf, 0x6e9d, 0x7f70, 0xf475, 0x1c8, 0xd268, 0x1, 0x0);
        gbc.writeMem(0xebf, { 0xfe, 0xf8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6e9d, gbc.sp());
        EXPECT(0xec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0287
        gbc.setState(0x8db8, 0xb9ab, 0x68c0, 0x980d, 0xa5b4, 0x623, 0x0, 0x1);
        gbc.writeMem(0x8db8, { 0xfe, 0xc4 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb9ab, gbc.sp());
        EXPECT(0x8dba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8db8));
        EXPECT(0xc4, gbc.readMem(0x8db9));
        // FE 0288
        gbc.setState(0x5aec, 0x746a, 0xecc0, 0xef00, 0x1ee9, 0x5a85, 0x1, 0x1);
        gbc.writeMem(0x5aec, { 0xfe, 0x9b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x746a, gbc.sp());
        EXPECT(0x5aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 028A
        gbc.setState(0x21cd, 0xedf6, 0x4a70, 0x39e4, 0xaeec, 0x4fc6, 0x1, 0x1);
        gbc.writeMem(0x21cd, { 0xfe, 0x8c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xedf6, gbc.sp());
        EXPECT(0x21cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 028B
        gbc.setState(0x8d86, 0xf101, 0x91f0, 0x2137, 0x710f, 0xb5db, 0x1, 0x0);
        gbc.writeMem(0x8d86, { 0xfe, 0xdc });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf101, gbc.sp());
        EXPECT(0x8d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8d86));
        EXPECT(0xdc, gbc.readMem(0x8d87));
        // FE 028C
        gbc.setState(0x84f1, 0x9489, 0xc380, 0x410b, 0x7e59, 0xa37f, 0x1, 0x1);
        gbc.writeMem(0x84f1, { 0xfe, 0xe2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9489, gbc.sp());
        EXPECT(0x84f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x84f1));
        EXPECT(0xe2, gbc.readMem(0x84f2));
        // FE 028D
        gbc.setState(0xdd58, 0x1be4, 0x9700, 0xc7b5, 0x85f0, 0x27bf, 0x1, 0x0);
        gbc.writeMem(0xdd58, { 0xfe, 0xf8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1be4, gbc.sp());
        EXPECT(0xdd5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdd58));
        EXPECT(0xf8, gbc.readMem(0xdd59));
        // FE 028E
        gbc.setState(0x73fc, 0xdb51, 0xe4d0, 0xe4f7, 0xd3f2, 0x67f6, 0x0, 0x0);
        gbc.writeMem(0x73fc, { 0xfe, 0x43 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdb51, gbc.sp());
        EXPECT(0x73fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 028F
        gbc.setState(0x63f8, 0x5d41, 0xdf70, 0x7c50, 0x3d3d, 0x35d0, 0x0, 0x1);
        gbc.writeMem(0x63f8, { 0xfe, 0xbd });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5d41, gbc.sp());
        EXPECT(0x63fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0290
        gbc.setState(0x7e65, 0x8bb2, 0xf3d0, 0x8237, 0x513e, 0x3825, 0x0, 0x0);
        gbc.writeMem(0x7e65, { 0xfe, 0x58 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8bb2, gbc.sp());
        EXPECT(0x7e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0291
        gbc.setState(0x35c9, 0x4a10, 0x4990, 0x2201, 0xc4e, 0x26d6, 0x1, 0x0);
        gbc.writeMem(0x35c9, { 0xfe, 0xe6 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4a10, gbc.sp());
        EXPECT(0x35cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0292
        gbc.setState(0xef4c, 0x4782, 0x7340, 0xafaf, 0xab11, 0x76b6, 0x0, 0x1);
        gbc.writeMem(0xef4c, { 0xfe, 0xce });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4782, gbc.sp());
        EXPECT(0xef4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xef4c));
        EXPECT(0xce, gbc.readMem(0xef4d));
        // FE 0293
        gbc.setState(0x3d4d, 0x4eac, 0xed80, 0xe23d, 0xc09a, 0xe29d, 0x1, 0x0);
        gbc.writeMem(0x3d4d, { 0xfe, 0x32 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4eac, gbc.sp());
        EXPECT(0x3d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0294
        gbc.setState(0xa656, 0xd43b, 0xb440, 0xdce6, 0xb4fc, 0x4afe, 0x1, 0x0);
        gbc.writeMem(0xa656, { 0xfe, 0x17 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd43b, gbc.sp());
        EXPECT(0xa658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa656));
        EXPECT(0x17, gbc.readMem(0xa657));
        // FE 0295
        gbc.setState(0xb3f6, 0x584b, 0xf380, 0x6242, 0x2bb, 0xa492, 0x1, 0x1);
        gbc.writeMem(0xb3f6, { 0xfe, 0x70 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x584b, gbc.sp());
        EXPECT(0xb3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb3f6));
        EXPECT(0x70, gbc.readMem(0xb3f7));
        // FE 0296
        gbc.setState(0x6f99, 0x70e7, 0x2b40, 0x33ef, 0x1aaa, 0x132f, 0x0, 0x0);
        gbc.writeMem(0x6f99, { 0xfe, 0xca });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x70e7, gbc.sp());
        EXPECT(0x6f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0297
        gbc.setState(0xc362, 0x1943, 0x3ae0, 0xcd9d, 0x4c89, 0xb9d7, 0x0, 0x1);
        gbc.writeMem(0xc362, { 0xfe, 0xf3 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1943, gbc.sp());
        EXPECT(0xc364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc362));
        EXPECT(0xf3, gbc.readMem(0xc363));
        // FE 0298
        gbc.setState(0x2e9f, 0x3055, 0x2540, 0xb90d, 0xde36, 0xd94e, 0x1, 0x1);
        gbc.writeMem(0x2e9f, { 0xfe, 0x72 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3055, gbc.sp());
        EXPECT(0x2ea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0299
        gbc.setState(0xeaff, 0x1f4a, 0xfee0, 0x8666, 0xf251, 0xb9c0, 0x1, 0x1);
        gbc.writeMem(0xeaff, { 0xfe, 0xa8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1f4a, gbc.sp());
        EXPECT(0xeb01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xeaff));
        EXPECT(0xa8, gbc.readMem(0xeb00));
        // FE 029A
        gbc.setState(0xd264, 0xddc3, 0xcca0, 0x9bae, 0x85d, 0xb5ad, 0x0, 0x1);
        gbc.writeMem(0xd264, { 0xfe, 0x90 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xddc3, gbc.sp());
        EXPECT(0xd266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd264));
        EXPECT(0x90, gbc.readMem(0xd265));
        // FE 029B
        gbc.setState(0xc9af, 0x720d, 0xb540, 0xff8b, 0x6e0c, 0x776, 0x1, 0x1);
        gbc.writeMem(0xc9af, { 0xfe, 0x54 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x720d, gbc.sp());
        EXPECT(0xc9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc9af));
        EXPECT(0x54, gbc.readMem(0xc9b0));
        // FE 029C
        gbc.setState(0xe0ae, 0x9f3f, 0xb300, 0x3812, 0x73b4, 0x8ce8, 0x1, 0x0);
        gbc.writeMem(0xe0ae, { 0xfe, 0x78 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9f3f, gbc.sp());
        EXPECT(0xe0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe0ae));
        EXPECT(0x78, gbc.readMem(0xe0af));
        // FE 029D
        gbc.setState(0x2235, 0x22a, 0xdba0, 0x5cf6, 0xab2d, 0xa712, 0x1, 0x0);
        gbc.writeMem(0x2235, { 0xfe, 0x5 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x22a, gbc.sp());
        EXPECT(0x2237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 029E
        gbc.setState(0x5fc3, 0xc73, 0xcd50, 0x9e93, 0xb624, 0x827a, 0x0, 0x0);
        gbc.writeMem(0x5fc3, { 0xfe, 0x70 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc73, gbc.sp());
        EXPECT(0x5fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 029F
        gbc.setState(0x7042, 0x4364, 0x81a0, 0xb565, 0x8be5, 0x1376, 0x1, 0x0);
        gbc.writeMem(0x7042, { 0xfe, 0xd7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4364, gbc.sp());
        EXPECT(0x7044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02A0
        gbc.setState(0xa9e3, 0xdf3e, 0x6dc0, 0xcdb3, 0x4bdd, 0x1ebb, 0x1, 0x0);
        gbc.writeMem(0xa9e3, { 0xfe, 0x54 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdf3e, gbc.sp());
        EXPECT(0xa9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa9e3));
        EXPECT(0x54, gbc.readMem(0xa9e4));
        // FE 02A2
        gbc.setState(0xb1b9, 0x655d, 0xde80, 0x7acf, 0xddc7, 0x5a4b, 0x0, 0x0);
        gbc.writeMem(0xb1b9, { 0xfe, 0xaf });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x655d, gbc.sp());
        EXPECT(0xb1bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb1b9));
        EXPECT(0xaf, gbc.readMem(0xb1ba));
        // FE 02A4
        gbc.setState(0xd9ca, 0xb3c5, 0x3d90, 0x5ead, 0x1b4, 0xd347, 0x1, 0x1);
        gbc.writeMem(0xd9ca, { 0xfe, 0x7e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb3c5, gbc.sp());
        EXPECT(0xd9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd9ca));
        EXPECT(0x7e, gbc.readMem(0xd9cb));
        // FE 02A5
        gbc.setState(0x41c6, 0x84db, 0xf280, 0x86ee, 0xfec5, 0x87c9, 0x0, 0x0);
        gbc.writeMem(0x41c6, { 0xfe, 0x3e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x84db, gbc.sp());
        EXPECT(0x41c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02A6
        gbc.setState(0x4f1d, 0x2493, 0x5d50, 0x9b75, 0x63ba, 0xf8b, 0x1, 0x1);
        gbc.writeMem(0x4f1d, { 0xfe, 0x82 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2493, gbc.sp());
        EXPECT(0x4f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02A7
        gbc.setState(0x5285, 0xc11a, 0xc420, 0x1c4c, 0x6ee5, 0x7283, 0x1, 0x0);
        gbc.writeMem(0x5285, { 0xfe, 0x4c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc11a, gbc.sp());
        EXPECT(0x5287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02A8
        gbc.setState(0xa8a2, 0xc6f4, 0x66b0, 0xe95d, 0x9a01, 0x15f2, 0x0, 0x1);
        gbc.writeMem(0xa8a2, { 0xfe, 0x78 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc6f4, gbc.sp());
        EXPECT(0xa8a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa8a2));
        EXPECT(0x78, gbc.readMem(0xa8a3));
        // FE 02A9
        gbc.setState(0xd3b1, 0x8967, 0xb090, 0x6025, 0xb10e, 0x943c, 0x1, 0x0);
        gbc.writeMem(0xd3b1, { 0xfe, 0x42 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8967, gbc.sp());
        EXPECT(0xd3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd3b1));
        EXPECT(0x42, gbc.readMem(0xd3b2));
        // FE 02AA
        gbc.setState(0x8555, 0x3d3e, 0x71e0, 0x1021, 0x5deb, 0xe993, 0x1, 0x0);
        gbc.writeMem(0x8555, { 0xfe, 0x22 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3d3e, gbc.sp());
        EXPECT(0x8557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8555));
        EXPECT(0x22, gbc.readMem(0x8556));
        // FE 02AB
        gbc.setState(0xcaa5, 0x24ff, 0xe10, 0xb568, 0x2c93, 0x93ef, 0x1, 0x1);
        gbc.writeMem(0xcaa5, { 0xfe, 0x88 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x24ff, gbc.sp());
        EXPECT(0xcaa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcaa5));
        EXPECT(0x88, gbc.readMem(0xcaa6));
        // FE 02AC
        gbc.setState(0xb06c, 0xd026, 0xc0e0, 0x1eba, 0x9b91, 0x33c3, 0x1, 0x0);
        gbc.writeMem(0xb06c, { 0xfe, 0x4c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd026, gbc.sp());
        EXPECT(0xb06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb06c));
        EXPECT(0x4c, gbc.readMem(0xb06d));
        // FE 02AD
        gbc.setState(0x343, 0x5a21, 0x2810, 0x9a77, 0x784a, 0x6bf2, 0x0, 0x0);
        gbc.writeMem(0x343, { 0xfe, 0x6e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5a21, gbc.sp());
        EXPECT(0x345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02AE
        gbc.setState(0x8e42, 0xaab5, 0xdc40, 0x5cb9, 0xd62e, 0x8029, 0x0, 0x1);
        gbc.writeMem(0x8e42, { 0xfe, 0xf6 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xaab5, gbc.sp());
        EXPECT(0x8e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8e42));
        EXPECT(0xf6, gbc.readMem(0x8e43));
        // FE 02AF
        gbc.setState(0x63af, 0x790f, 0x17d0, 0xdc6e, 0x58ec, 0x7d1c, 0x0, 0x1);
        gbc.writeMem(0x63af, { 0xfe, 0xf6 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x790f, gbc.sp());
        EXPECT(0x63b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02B0
        gbc.setState(0x19ee, 0x3b5a, 0x8070, 0xe83e, 0x6503, 0xdcf9, 0x1, 0x1);
        gbc.writeMem(0x19ee, { 0xfe, 0x62 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3b5a, gbc.sp());
        EXPECT(0x19f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02B1
        gbc.setState(0x2f3f, 0x13f7, 0x400, 0x7098, 0xf23d, 0x5d63, 0x1, 0x0);
        gbc.writeMem(0x2f3f, { 0xfe, 0x8e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x13f7, gbc.sp());
        EXPECT(0x2f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02B2
        gbc.setState(0x5bf3, 0x81af, 0x1420, 0x16f7, 0x38d9, 0x79d3, 0x0, 0x0);
        gbc.writeMem(0x5bf3, { 0xfe, 0x89 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x81af, gbc.sp());
        EXPECT(0x5bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02B4
        gbc.setState(0xebe5, 0x9cd8, 0xa9e0, 0x4934, 0x98e2, 0xb774, 0x1, 0x0);
        gbc.writeMem(0xebe5, { 0xfe, 0x40 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9cd8, gbc.sp());
        EXPECT(0xebe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xebe5));
        EXPECT(0x40, gbc.readMem(0xebe6));
        // FE 02B5
        gbc.setState(0xd9c6, 0xaaa, 0x2e40, 0x5c3c, 0x8d2e, 0xf942, 0x1, 0x1);
        gbc.writeMem(0xd9c6, { 0xfe, 0x27 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaaa, gbc.sp());
        EXPECT(0xd9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd9c6));
        EXPECT(0x27, gbc.readMem(0xd9c7));
        // FE 02B6
        gbc.setState(0x34a2, 0xe38d, 0x9260, 0x8b50, 0x5ec3, 0x3632, 0x0, 0x1);
        gbc.writeMem(0x34a2, { 0xfe, 0xe5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe38d, gbc.sp());
        EXPECT(0x34a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02B7
        gbc.setState(0xc5aa, 0x551, 0xa110, 0xb70d, 0xe0ca, 0x21fc, 0x1, 0x1);
        gbc.writeMem(0xc5aa, { 0xfe, 0xc6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x551, gbc.sp());
        EXPECT(0xc5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc5aa));
        EXPECT(0xc6, gbc.readMem(0xc5ab));
        // FE 02B8
        gbc.setState(0xa59d, 0x2b16, 0xea70, 0xbd14, 0xf706, 0x3482, 0x1, 0x0);
        gbc.writeMem(0xa59d, { 0xfe, 0x71 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2b16, gbc.sp());
        EXPECT(0xa59f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa59d));
        EXPECT(0x71, gbc.readMem(0xa59e));
        // FE 02B9
        gbc.setState(0x6db0, 0x8177, 0x4860, 0xc506, 0x6755, 0x2c40, 0x1, 0x1);
        gbc.writeMem(0x6db0, { 0xfe, 0x43 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8177, gbc.sp());
        EXPECT(0x6db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02BB
        gbc.setState(0xcd41, 0x5c1c, 0x75f0, 0x5983, 0xd643, 0x47f5, 0x1, 0x1);
        gbc.writeMem(0xcd41, { 0xfe, 0xfb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5c1c, gbc.sp());
        EXPECT(0xcd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcd41));
        EXPECT(0xfb, gbc.readMem(0xcd42));
        // FE 02BC
        gbc.setState(0xcc54, 0xa264, 0xa590, 0xe253, 0x38cc, 0xe5cf, 0x1, 0x1);
        gbc.writeMem(0xcc54, { 0xfe, 0x4f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa264, gbc.sp());
        EXPECT(0xcc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcc54));
        EXPECT(0x4f, gbc.readMem(0xcc55));
        // FE 02BD
        gbc.setState(0x7bff, 0xe35f, 0x6e10, 0xac50, 0x47d9, 0x5ff3, 0x1, 0x0);
        gbc.writeMem(0x7bff, { 0xfe, 0x83 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe35f, gbc.sp());
        EXPECT(0x7c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02BE
        gbc.setState(0xb07e, 0xfe27, 0xa3c0, 0x9353, 0x871d, 0x8029, 0x1, 0x1);
        gbc.writeMem(0xb07e, { 0xfe, 0x63 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfe27, gbc.sp());
        EXPECT(0xb080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb07e));
        EXPECT(0x63, gbc.readMem(0xb07f));
        // FE 02BF
        gbc.setState(0xccca, 0xf84f, 0xa410, 0x6949, 0xfd6f, 0x55c6, 0x1, 0x1);
        gbc.writeMem(0xccca, { 0xfe, 0x69 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf84f, gbc.sp());
        EXPECT(0xcccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xccca));
        EXPECT(0x69, gbc.readMem(0xcccb));
        // FE 02C0
        gbc.setState(0x9d42, 0x7c04, 0x1960, 0x2e47, 0x5d2, 0x2552, 0x1, 0x0);
        gbc.writeMem(0x9d42, { 0xfe, 0xd4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7c04, gbc.sp());
        EXPECT(0x9d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9d42));
        EXPECT(0xd4, gbc.readMem(0x9d43));
        // FE 02C1
        gbc.setState(0x3fb8, 0xa8e2, 0xf470, 0xd2a, 0x2150, 0x545f, 0x0, 0x1);
        gbc.writeMem(0x3fb8, { 0xfe, 0x5f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa8e2, gbc.sp());
        EXPECT(0x3fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02C2
        gbc.setState(0x4d6f, 0x3339, 0xbe60, 0xe676, 0x7bf0, 0x27b7, 0x1, 0x0);
        gbc.writeMem(0x4d6f, { 0xfe, 0x24 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3339, gbc.sp());
        EXPECT(0x4d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02C3
        gbc.setState(0x4f1a, 0xfa57, 0xb670, 0x3232, 0x924f, 0x678e, 0x0, 0x0);
        gbc.writeMem(0x4f1a, { 0xfe, 0x80 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfa57, gbc.sp());
        EXPECT(0x4f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02C4
        gbc.setState(0xa3b1, 0x67c4, 0xceb0, 0x4b5e, 0xecc1, 0xea07, 0x0, 0x1);
        gbc.writeMem(0xa3b1, { 0xfe, 0x98 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x67c4, gbc.sp());
        EXPECT(0xa3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa3b1));
        EXPECT(0x98, gbc.readMem(0xa3b2));
        // FE 02C5
        gbc.setState(0x59b5, 0x73e4, 0x5de0, 0xd72a, 0x7f04, 0xa37e, 0x0, 0x1);
        gbc.writeMem(0x59b5, { 0xfe, 0xd2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x73e4, gbc.sp());
        EXPECT(0x59b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02C6
        gbc.setState(0x3c7a, 0xb95c, 0xf7d0, 0x1156, 0xbe7c, 0xc625, 0x0, 0x1);
        gbc.writeMem(0x3c7a, { 0xfe, 0xf3 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb95c, gbc.sp());
        EXPECT(0x3c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02C7
        gbc.setState(0xe3b6, 0x922f, 0xda60, 0x5db3, 0x48bc, 0x34c0, 0x0, 0x0);
        gbc.writeMem(0xe3b6, { 0xfe, 0x78 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x922f, gbc.sp());
        EXPECT(0xe3b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe3b6));
        EXPECT(0x78, gbc.readMem(0xe3b7));
        // FE 02C8
        gbc.setState(0x9b6f, 0x67b0, 0xb3b0, 0x411, 0x20a8, 0xb07f, 0x0, 0x1);
        gbc.writeMem(0x9b6f, { 0xfe, 0xe });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x67b0, gbc.sp());
        EXPECT(0x9b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9b6f));
        EXPECT(0xe, gbc.readMem(0x9b70));
        // FE 02C9
        gbc.setState(0x7ea1, 0x83eb, 0x7590, 0xfb30, 0x90db, 0x815e, 0x0, 0x0);
        gbc.writeMem(0x7ea1, { 0xfe, 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x83eb, gbc.sp());
        EXPECT(0x7ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02CA
        gbc.setState(0x9f85, 0xcb18, 0x1e30, 0x17e2, 0xc55d, 0xdedf, 0x1, 0x1);
        gbc.writeMem(0x9f85, { 0xfe, 0x10 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcb18, gbc.sp());
        EXPECT(0x9f87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9f85));
        EXPECT(0x10, gbc.readMem(0x9f86));
        // FE 02CB
        gbc.setState(0x47f7, 0x5e8, 0xc0c0, 0xf6e6, 0xa52e, 0x9f6d, 0x0, 0x1);
        gbc.writeMem(0x47f7, { 0xfe, 0xaf });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5e8, gbc.sp());
        EXPECT(0x47f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02CC
        gbc.setState(0x17e, 0x3649, 0x3270, 0xf7cf, 0x5949, 0x63eb, 0x0, 0x0);
        gbc.writeMem(0x17e, { 0xfe, 0x82 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3649, gbc.sp());
        EXPECT(0x180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02CD
        gbc.setState(0xb5ce, 0x7ca4, 0x500, 0x6e62, 0xbf17, 0xab38, 0x0, 0x0);
        gbc.writeMem(0xb5ce, { 0xfe, 0xc7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7ca4, gbc.sp());
        EXPECT(0xb5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb5ce));
        EXPECT(0xc7, gbc.readMem(0xb5cf));
        // FE 02CE
        gbc.setState(0x8131, 0xbb6c, 0x6800, 0xd541, 0xd26f, 0xc017, 0x1, 0x1);
        gbc.writeMem(0x8131, { 0xfe, 0x20 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbb6c, gbc.sp());
        EXPECT(0x8133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8131));
        EXPECT(0x20, gbc.readMem(0x8132));
        // FE 02CF
        gbc.setState(0x64ac, 0x2692, 0x60e0, 0xda78, 0xc1c7, 0xfe5b, 0x0, 0x1);
        gbc.writeMem(0x64ac, { 0xfe, 0x1 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2692, gbc.sp());
        EXPECT(0x64ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02D0
        gbc.setState(0x720b, 0x96a4, 0x6000, 0x7edf, 0xaf2a, 0x419d, 0x1, 0x0);
        gbc.writeMem(0x720b, { 0xfe, 0x6d });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x96a4, gbc.sp());
        EXPECT(0x720d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02D1
        gbc.setState(0x9357, 0x2957, 0x9cd0, 0x22c1, 0x4b3, 0x80a6, 0x0, 0x1);
        gbc.writeMem(0x9357, { 0xfe, 0x54 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2957, gbc.sp());
        EXPECT(0x9359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9357));
        EXPECT(0x54, gbc.readMem(0x9358));
        // FE 02D2
        gbc.setState(0xcca3, 0xc78, 0x8350, 0x2ae3, 0x6c0f, 0x56ca, 0x0, 0x0);
        gbc.writeMem(0xcca3, { 0xfe, 0xb3 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc78, gbc.sp());
        EXPECT(0xcca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcca3));
        EXPECT(0xb3, gbc.readMem(0xcca4));
        // FE 02D3
        gbc.setState(0xcaa7, 0x8a3e, 0xbad0, 0xe6d9, 0x1fe6, 0x1714, 0x0, 0x1);
        gbc.writeMem(0xcaa7, { 0xfe, 0xb9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8a3e, gbc.sp());
        EXPECT(0xcaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcaa7));
        EXPECT(0xb9, gbc.readMem(0xcaa8));
        // FE 02D4
        gbc.setState(0x9338, 0xa5a, 0x5500, 0x34de, 0xf261, 0xd33f, 0x1, 0x0);
        gbc.writeMem(0x9338, { 0xfe, 0x88 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa5a, gbc.sp());
        EXPECT(0x933a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9338));
        EXPECT(0x88, gbc.readMem(0x9339));
        // FE 02D5
        gbc.setState(0x2e15, 0xd33, 0xbe30, 0x67a, 0xf559, 0x6a7b, 0x1, 0x0);
        gbc.writeMem(0x2e15, { 0xfe, 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd33, gbc.sp());
        EXPECT(0x2e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02D6
        gbc.setState(0x4de1, 0x887d, 0xd130, 0x6ab0, 0xc5fe, 0x2de9, 0x0, 0x1);
        gbc.writeMem(0x4de1, { 0xfe, 0xc3 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x887d, gbc.sp());
        EXPECT(0x4de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02D7
        gbc.setState(0x49ae, 0x7ca3, 0xa160, 0xaaf7, 0x12b9, 0x9497, 0x1, 0x0);
        gbc.writeMem(0x49ae, { 0xfe, 0xa6 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7ca3, gbc.sp());
        EXPECT(0x49b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02D8
        gbc.setState(0x9929, 0x7587, 0xaab0, 0x5d, 0xe4ee, 0x577a, 0x1, 0x1);
        gbc.writeMem(0x9929, { 0xfe, 0xfb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7587, gbc.sp());
        EXPECT(0x992b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9929));
        EXPECT(0xfb, gbc.readMem(0x992a));
        // FE 02D9
        gbc.setState(0x5bd6, 0x81fd, 0xab00, 0xbe0c, 0x2cc0, 0xf3a1, 0x0, 0x0);
        gbc.writeMem(0x5bd6, { 0xfe, 0x4a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x81fd, gbc.sp());
        EXPECT(0x5bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02DA
        gbc.setState(0xe694, 0x803, 0x5dc0, 0xcdd9, 0xa940, 0x9f5d, 0x1, 0x0);
        gbc.writeMem(0xe694, { 0xfe, 0xb8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x803, gbc.sp());
        EXPECT(0xe696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe694));
        EXPECT(0xb8, gbc.readMem(0xe695));
        // FE 02DB
        gbc.setState(0xad9c, 0x433, 0x830, 0x84d1, 0xea62, 0x4d4, 0x1, 0x0);
        gbc.writeMem(0xad9c, { 0xfe, 0x8d });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x433, gbc.sp());
        EXPECT(0xad9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xad9c));
        EXPECT(0x8d, gbc.readMem(0xad9d));
        // FE 02DC
        gbc.setState(0x5f08, 0x7914, 0xbe30, 0xbf67, 0xcc85, 0xb321, 0x0, 0x0);
        gbc.writeMem(0x5f08, { 0xfe, 0x27 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7914, gbc.sp());
        EXPECT(0x5f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02DD
        gbc.setState(0x581e, 0x2da, 0x57f0, 0x403b, 0xdc6f, 0xc16e, 0x0, 0x1);
        gbc.writeMem(0x581e, { 0xfe, 0x88 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2da, gbc.sp());
        EXPECT(0x5820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02DE
        gbc.setState(0x4675, 0x4e42, 0x940, 0x630c, 0x3f7, 0x8567, 0x0, 0x0);
        gbc.writeMem(0x4675, { 0xfe, 0xcb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4e42, gbc.sp());
        EXPECT(0x4677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02DF
        gbc.setState(0x9ffe, 0x334f, 0x2c90, 0x3eca, 0x8abc, 0xbf38, 0x1, 0x0);
        gbc.writeMem(0x9ffe, { 0xfe, 0x22 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x334f, gbc.sp());
        EXPECT(0xa000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9ffe));
        EXPECT(0x22, gbc.readMem(0x9fff));
        // FE 02E0
        gbc.setState(0x8be4, 0x95c5, 0xfd80, 0x224c, 0x42c4, 0xb227, 0x0, 0x1);
        gbc.writeMem(0x8be4, { 0xfe, 0xf7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x95c5, gbc.sp());
        EXPECT(0x8be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8be4));
        EXPECT(0xf7, gbc.readMem(0x8be5));
        // FE 02E1
        gbc.setState(0x14e0, 0xc790, 0xd5c0, 0x7919, 0x2d10, 0xbb4f, 0x0, 0x1);
        gbc.writeMem(0x14e0, { 0xfe, 0xb5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc790, gbc.sp());
        EXPECT(0x14e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02E2
        gbc.setState(0xddf2, 0xb4b1, 0xa490, 0x3d5c, 0x64d9, 0x7f01, 0x0, 0x0);
        gbc.writeMem(0xddf2, { 0xfe, 0x1f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb4b1, gbc.sp());
        EXPECT(0xddf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xddf2));
        EXPECT(0x1f, gbc.readMem(0xddf3));
        // FE 02E3
        gbc.setState(0xe08, 0x70ed, 0x5470, 0x90f1, 0xc45, 0x17fa, 0x1, 0x0);
        gbc.writeMem(0xe08, { 0xfe, 0xb5 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x70ed, gbc.sp());
        EXPECT(0xe0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02E4
        gbc.setState(0xe89e, 0xefbd, 0x87e0, 0x7d5d, 0xcea7, 0x26b3, 0x1, 0x0);
        gbc.writeMem(0xe89e, { 0xfe, 0x14 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xefbd, gbc.sp());
        EXPECT(0xe8a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe89e));
        EXPECT(0x14, gbc.readMem(0xe89f));
        // FE 02E5
        gbc.setState(0xe258, 0x45ed, 0x1df0, 0x7a4, 0x4745, 0x5f01, 0x0, 0x0);
        gbc.writeMem(0xe258, { 0xfe, 0x49 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x45ed, gbc.sp());
        EXPECT(0xe25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe258));
        EXPECT(0x49, gbc.readMem(0xe259));
        // FE 02E7
        gbc.setState(0x6a99, 0x17d8, 0x5730, 0x3c85, 0x84c8, 0x780c, 0x1, 0x1);
        gbc.writeMem(0x6a99, { 0xfe, 0x41 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x17d8, gbc.sp());
        EXPECT(0x6a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02E8
        gbc.setState(0xdf2d, 0xe1b, 0xec50, 0x6bec, 0xcab, 0x5bf7, 0x0, 0x1);
        gbc.writeMem(0xdf2d, { 0xfe, 0xa6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe1b, gbc.sp());
        EXPECT(0xdf2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdf2d));
        EXPECT(0xa6, gbc.readMem(0xdf2e));
        // FE 02EA
        gbc.setState(0xe6b8, 0xa7f9, 0x7780, 0xa16e, 0x9bf7, 0x2d11, 0x1, 0x0);
        gbc.writeMem(0xe6b8, { 0xfe, 0x39 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa7f9, gbc.sp());
        EXPECT(0xe6ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe6b8));
        EXPECT(0x39, gbc.readMem(0xe6b9));
        // FE 02EB
        gbc.setState(0x6128, 0xb412, 0x41e0, 0x2144, 0x85a5, 0xb054, 0x1, 0x1);
        gbc.writeMem(0x6128, { 0xfe, 0xa9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb412, gbc.sp());
        EXPECT(0x612a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02EC
        gbc.setState(0x3b1, 0x8ba5, 0x95c0, 0xd9df, 0x205a, 0xa1b3, 0x1, 0x1);
        gbc.writeMem(0x3b1, { 0xfe, 0xa6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8ba5, gbc.sp());
        EXPECT(0x3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02ED
        gbc.setState(0x38a6, 0x9539, 0xf820, 0x657d, 0xbf9c, 0xac30, 0x0, 0x0);
        gbc.writeMem(0x38a6, { 0xfe, 0xb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9539, gbc.sp());
        EXPECT(0x38a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02EE
        gbc.setState(0x27f9, 0xacad, 0x9a80, 0x30e9, 0x4870, 0x3f37, 0x1, 0x0);
        gbc.writeMem(0x27f9, { 0xfe, 0x6e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xacad, gbc.sp());
        EXPECT(0x27fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02EF
        gbc.setState(0xb205, 0xce01, 0xa640, 0x53d0, 0x8ef9, 0x9de5, 0x0, 0x1);
        gbc.writeMem(0xb205, { 0xfe, 0x51 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xce01, gbc.sp());
        EXPECT(0xb207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb205));
        EXPECT(0x51, gbc.readMem(0xb206));
        // FE 02F0
        gbc.setState(0xdd9e, 0x9839, 0x27f0, 0x1194, 0xa9e3, 0x104c, 0x0, 0x1);
        gbc.writeMem(0xdd9e, { 0xfe, 0x5f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9839, gbc.sp());
        EXPECT(0xdda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdd9e));
        EXPECT(0x5f, gbc.readMem(0xdd9f));
        // FE 02F1
        gbc.setState(0x48dd, 0x4d43, 0x2050, 0xae30, 0xe49c, 0x71d, 0x0, 0x0);
        gbc.writeMem(0x48dd, { 0xfe, 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4d43, gbc.sp());
        EXPECT(0x48df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02F2
        gbc.setState(0x4976, 0x1180, 0x2100, 0xc33c, 0x95b7, 0xde1b, 0x1, 0x0);
        gbc.writeMem(0x4976, { 0xfe, 0x6d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1180, gbc.sp());
        EXPECT(0x4978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02F3
        gbc.setState(0x4915, 0x2635, 0x4db0, 0x51e0, 0x1d52, 0xb56a, 0x1, 0x0);
        gbc.writeMem(0x4915, { 0xfe, 0x24 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2635, gbc.sp());
        EXPECT(0x4917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02F4
        gbc.setState(0x2567, 0x9cee, 0x4250, 0xbd09, 0xe78, 0x4c56, 0x0, 0x1);
        gbc.writeMem(0x2567, { 0xfe, 0x1e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9cee, gbc.sp());
        EXPECT(0x2569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02F6
        gbc.setState(0x8372, 0xf473, 0x89a0, 0x61f1, 0x5db3, 0x7b32, 0x1, 0x0);
        gbc.writeMem(0x8372, { 0xfe, 0x98 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf473, gbc.sp());
        EXPECT(0x8374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8372));
        EXPECT(0x98, gbc.readMem(0x8373));
        // FE 02F7
        gbc.setState(0x1cc3, 0xea49, 0x800, 0x9aec, 0xe5bd, 0xb3ca, 0x0, 0x0);
        gbc.writeMem(0x1cc3, { 0xfe, 0x7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xea49, gbc.sp());
        EXPECT(0x1cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02F8
        gbc.setState(0x15a4, 0x9f54, 0xe6f0, 0x5de2, 0x568e, 0x1540, 0x0, 0x1);
        gbc.writeMem(0x15a4, { 0xfe, 0xfd });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9f54, gbc.sp());
        EXPECT(0x15a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 02F9
        gbc.setState(0x579, 0x81d6, 0xb5f0, 0x2eb7, 0x292, 0xdb44, 0x0, 0x0);
        gbc.writeMem(0x579, { 0xfe, 0xa3 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x81d6, gbc.sp());
        EXPECT(0x57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02FA
        gbc.setState(0x562b, 0xafc2, 0xeac0, 0x6428, 0x2975, 0x3a71, 0x1, 0x1);
        gbc.writeMem(0x562b, { 0xfe, 0x4e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xafc2, gbc.sp());
        EXPECT(0x562d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02FB
        gbc.setState(0x2103, 0xc271, 0xf1c0, 0x2eab, 0x81bb, 0x57dc, 0x0, 0x1);
        gbc.writeMem(0x2103, { 0xfe, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc271, gbc.sp());
        EXPECT(0x2105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02FC
        gbc.setState(0x7d9a, 0xbae6, 0xdf10, 0x4d6d, 0x212c, 0x8325, 0x1, 0x1);
        gbc.writeMem(0x7d9a, { 0xfe, 0xb2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbae6, gbc.sp());
        EXPECT(0x7d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 02FD
        gbc.setState(0x8d09, 0xef44, 0xb540, 0x53d9, 0x116a, 0xf42d, 0x1, 0x0);
        gbc.writeMem(0x8d09, { 0xfe, 0xc1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xef44, gbc.sp());
        EXPECT(0x8d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8d09));
        EXPECT(0xc1, gbc.readMem(0x8d0a));
        // FE 02FE
        gbc.setState(0x4a8f, 0x6f6b, 0x50f0, 0x6b82, 0x6249, 0x2fe8, 0x0, 0x0);
        gbc.writeMem(0x4a8f, { 0xfe, 0xcb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6f6b, gbc.sp());
        EXPECT(0x4a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0301
        gbc.setState(0x29ed, 0x6e79, 0x6180, 0x576e, 0x45e7, 0xdf38, 0x1, 0x0);
        gbc.writeMem(0x29ed, { 0xfe, 0xab });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6e79, gbc.sp());
        EXPECT(0x29ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0302
        gbc.setState(0x513e, 0xb7ba, 0x6fa0, 0x8372, 0x6eb0, 0x6d0a, 0x1, 0x0);
        gbc.writeMem(0x513e, { 0xfe, 0x49 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb7ba, gbc.sp());
        EXPECT(0x5140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0303
        gbc.setState(0x119a, 0x3a31, 0x8ec0, 0x3c03, 0x979e, 0x4807, 0x1, 0x1);
        gbc.writeMem(0x119a, { 0xfe, 0x3d });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3a31, gbc.sp());
        EXPECT(0x119c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0304
        gbc.setState(0xec9a, 0xc1a1, 0x8180, 0xbdfe, 0xee7b, 0x7132, 0x1, 0x1);
        gbc.writeMem(0xec9a, { 0xfe, 0xa1 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc1a1, gbc.sp());
        EXPECT(0xec9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xec9a));
        EXPECT(0xa1, gbc.readMem(0xec9b));
        // FE 0305
        gbc.setState(0x6fc7, 0xe09a, 0x6c50, 0x1734, 0xc91a, 0xd406, 0x0, 0x1);
        gbc.writeMem(0x6fc7, { 0xfe, 0xbe });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe09a, gbc.sp());
        EXPECT(0x6fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0306
        gbc.setState(0xc1e6, 0x5663, 0x7ee0, 0x1b57, 0x11c4, 0x9b0, 0x0, 0x1);
        gbc.writeMem(0xc1e6, { 0xfe, 0x80 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5663, gbc.sp());
        EXPECT(0xc1e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc1e6));
        EXPECT(0x80, gbc.readMem(0xc1e7));
        // FE 0308
        gbc.setState(0x30e6, 0x4e2f, 0xd7d0, 0xbd43, 0x9a8, 0xf97a, 0x0, 0x1);
        gbc.writeMem(0x30e6, { 0xfe, 0x6d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4e2f, gbc.sp());
        EXPECT(0x30e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0309
        gbc.setState(0xd3ac, 0x388b, 0xb1c0, 0x9df6, 0xe4fe, 0xdf8a, 0x0, 0x1);
        gbc.writeMem(0xd3ac, { 0xfe, 0x64 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x388b, gbc.sp());
        EXPECT(0xd3ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd3ac));
        EXPECT(0x64, gbc.readMem(0xd3ad));
        // FE 030A
        gbc.setState(0x877d, 0x97a3, 0x1210, 0x4139, 0x86e0, 0xcd42, 0x0, 0x1);
        gbc.writeMem(0x877d, { 0xfe, 0xde });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x97a3, gbc.sp());
        EXPECT(0x877f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x877d));
        EXPECT(0xde, gbc.readMem(0x877e));
        // FE 030B
        gbc.setState(0x9366, 0xb8fd, 0x61d0, 0x74b7, 0xa485, 0xa588, 0x0, 0x0);
        gbc.writeMem(0x9366, { 0xfe, 0x33 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb8fd, gbc.sp());
        EXPECT(0x9368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9366));
        EXPECT(0x33, gbc.readMem(0x9367));
        // FE 030C
        gbc.setState(0x59f3, 0x643e, 0x2480, 0x1b63, 0x5746, 0x9ebb, 0x0, 0x1);
        gbc.writeMem(0x59f3, { 0xfe, 0x7a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x643e, gbc.sp());
        EXPECT(0x59f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 030D
        gbc.setState(0xdf42, 0x30b0, 0xcb60, 0x1740, 0x1c35, 0x84b1, 0x1, 0x0);
        gbc.writeMem(0xdf42, { 0xfe, 0xc });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x30b0, gbc.sp());
        EXPECT(0xdf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xdf42));
        EXPECT(0xc, gbc.readMem(0xdf43));
        // FE 030E
        gbc.setState(0x1296, 0x75d5, 0x78b0, 0xf09f, 0x9684, 0x334a, 0x1, 0x1);
        gbc.writeMem(0x1296, { 0xfe, 0xd8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x75d5, gbc.sp());
        EXPECT(0x1298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 030F
        gbc.setState(0x6076, 0xe82f, 0xc3e0, 0xbeeb, 0xc986, 0xe814, 0x1, 0x1);
        gbc.writeMem(0x6076, { 0xfe, 0x1e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe82f, gbc.sp());
        EXPECT(0x6078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0310
        gbc.setState(0x1eda, 0xf841, 0xe900, 0x9e1c, 0x3391, 0x9b0c, 0x1, 0x0);
        gbc.writeMem(0x1eda, { 0xfe, 0x76 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf841, gbc.sp());
        EXPECT(0x1edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0311
        gbc.setState(0x809c, 0x4aa8, 0x9120, 0x5558, 0x99f, 0x9f59, 0x1, 0x1);
        gbc.writeMem(0x809c, { 0xfe, 0x5f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4aa8, gbc.sp());
        EXPECT(0x809e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x809c));
        EXPECT(0x5f, gbc.readMem(0x809d));
        // FE 0312
        gbc.setState(0x721b, 0xabf5, 0x7cc0, 0x1be8, 0x8a79, 0xa822, 0x1, 0x0);
        gbc.writeMem(0x721b, { 0xfe, 0xf8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xabf5, gbc.sp());
        EXPECT(0x721d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0313
        gbc.setState(0xca9b, 0x2a40, 0x1620, 0x5dff, 0x58f4, 0xf6e3, 0x1, 0x0);
        gbc.writeMem(0xca9b, { 0xfe, 0x61 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2a40, gbc.sp());
        EXPECT(0xca9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xca9b));
        EXPECT(0x61, gbc.readMem(0xca9c));
        // FE 0314
        gbc.setState(0xd6c8, 0x973c, 0xee70, 0x3797, 0x54b0, 0x3681, 0x0, 0x1);
        gbc.writeMem(0xd6c8, { 0xfe, 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x973c, gbc.sp());
        EXPECT(0xd6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd6c8));
        EXPECT(0xa7, gbc.readMem(0xd6c9));
        // FE 0315
        gbc.setState(0x6700, 0xb424, 0x9cf0, 0xbe7b, 0x68c9, 0xfbed, 0x1, 0x0);
        gbc.writeMem(0x6700, { 0xfe, 0x27 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb424, gbc.sp());
        EXPECT(0x6702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0316
        gbc.setState(0x4faf, 0x2e29, 0xa750, 0xfa30, 0xf2b1, 0xf0c8, 0x0, 0x1);
        gbc.writeMem(0x4faf, { 0xfe, 0x91 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2e29, gbc.sp());
        EXPECT(0x4fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0317
        gbc.setState(0x3ba7, 0x3d9c, 0xa4d0, 0x643e, 0xe861, 0x15fd, 0x0, 0x1);
        gbc.writeMem(0x3ba7, { 0xfe, 0x6a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3d9c, gbc.sp());
        EXPECT(0x3ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0318
        gbc.setState(0x1a00, 0x54e1, 0x6a40, 0x79df, 0xa156, 0xd0b1, 0x1, 0x1);
        gbc.writeMem(0x1a00, { 0xfe, 0x1e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x54e1, gbc.sp());
        EXPECT(0x1a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0319
        gbc.setState(0x7663, 0x4a4b, 0x5a90, 0x75e6, 0xf258, 0xd7ef, 0x1, 0x1);
        gbc.writeMem(0x7663, { 0xfe, 0x81 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4a4b, gbc.sp());
        EXPECT(0x7665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 031A
        gbc.setState(0x66d4, 0x40d3, 0xb7f0, 0x6d8b, 0x232c, 0xc054, 0x0, 0x1);
        gbc.writeMem(0x66d4, { 0xfe, 0x5f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x40d3, gbc.sp());
        EXPECT(0x66d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 031B
        gbc.setState(0x75d0, 0xe767, 0x7880, 0xb840, 0xe06f, 0x6601, 0x0, 0x1);
        gbc.writeMem(0x75d0, { 0xfe, 0x9b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xe767, gbc.sp());
        EXPECT(0x75d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 031C
        gbc.setState(0xd483, 0xb83, 0xf510, 0xac6, 0x87c3, 0x2dc6, 0x0, 0x1);
        gbc.writeMem(0xd483, { 0xfe, 0x6d });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb83, gbc.sp());
        EXPECT(0xd485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd483));
        EXPECT(0x6d, gbc.readMem(0xd484));
        // FE 031E
        gbc.setState(0x9be0, 0xce71, 0x9f00, 0x2035, 0xabe7, 0x94ba, 0x1, 0x0);
        gbc.writeMem(0x9be0, { 0xfe, 0xf0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xce71, gbc.sp());
        EXPECT(0x9be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9be0));
        EXPECT(0xf0, gbc.readMem(0x9be1));
        // FE 031F
        gbc.setState(0xbde0, 0xc366, 0xab30, 0x67ca, 0xd670, 0x7a9c, 0x0, 0x1);
        gbc.writeMem(0xbde0, { 0xfe, 0xd8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc366, gbc.sp());
        EXPECT(0xbde2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbde0));
        EXPECT(0xd8, gbc.readMem(0xbde1));
        // FE 0320
        gbc.setState(0x255b, 0xf91d, 0xed60, 0xd7fa, 0x1da2, 0x8c1c, 0x0, 0x1);
        gbc.writeMem(0x255b, { 0xfe, 0xcc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf91d, gbc.sp());
        EXPECT(0x255d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0321
        gbc.setState(0x219, 0xd6d6, 0xf0e0, 0x18c0, 0x5999, 0xd0ae, 0x0, 0x1);
        gbc.writeMem(0x219, { 0xfe, 0x66 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd6d6, gbc.sp());
        EXPECT(0x21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0322
        gbc.setState(0x2724, 0xb695, 0x86d0, 0x973a, 0x238b, 0x3850, 0x1, 0x0);
        gbc.writeMem(0x2724, { 0xfe, 0xda });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb695, gbc.sp());
        EXPECT(0x2726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0323
        gbc.setState(0x60bf, 0xeff5, 0x330, 0x728b, 0x4eaa, 0xc904, 0x0, 0x0);
        gbc.writeMem(0x60bf, { 0xfe, 0xfd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xeff5, gbc.sp());
        EXPECT(0x60c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0324
        gbc.setState(0xe314, 0x25e1, 0xb040, 0x3479, 0x6bf5, 0x3282, 0x0, 0x1);
        gbc.writeMem(0xe314, { 0xfe, 0x90 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x25e1, gbc.sp());
        EXPECT(0xe316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe314));
        EXPECT(0x90, gbc.readMem(0xe315));
        // FE 0325
        gbc.setState(0x601c, 0xc310, 0xe1e0, 0xf80f, 0x5cf5, 0xd535, 0x0, 0x1);
        gbc.writeMem(0x601c, { 0xfe, 0x5a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc310, gbc.sp());
        EXPECT(0x601e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0326
        gbc.setState(0x683d, 0xdaa3, 0x4e0, 0xaf66, 0xfe7, 0x16c0, 0x0, 0x0);
        gbc.writeMem(0x683d, { 0xfe, 0xea });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdaa3, gbc.sp());
        EXPECT(0x683f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0327
        gbc.setState(0x1ee4, 0x3b84, 0x6b50, 0xbb42, 0xe443, 0xec0f, 0x1, 0x1);
        gbc.writeMem(0x1ee4, { 0xfe, 0xd });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3b84, gbc.sp());
        EXPECT(0x1ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0328
        gbc.setState(0x93e7, 0x95c8, 0xb200, 0xa105, 0xad0c, 0xdb00, 0x0, 0x0);
        gbc.writeMem(0x93e7, { 0xfe, 0xda });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x95c8, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x93e7));
        EXPECT(0xda, gbc.readMem(0x93e8));
        // FE 0329
        gbc.setState(0x2420, 0xe298, 0x12a0, 0xabd6, 0xddf6, 0x9ef8, 0x0, 0x1);
        gbc.writeMem(0x2420, { 0xfe, 0x80 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe298, gbc.sp());
        EXPECT(0x2422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 032A
        gbc.setState(0x4e73, 0xc6, 0xeeb0, 0x556c, 0xfeb9, 0x3876, 0x0, 0x0);
        gbc.writeMem(0x4e73, { 0xfe, 0x22 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc6, gbc.sp());
        EXPECT(0x4e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 032B
        gbc.setState(0xe4c1, 0x4268, 0xcda0, 0x83d0, 0xdb3e, 0x922, 0x1, 0x1);
        gbc.writeMem(0xe4c1, { 0xfe, 0x6d });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4268, gbc.sp());
        EXPECT(0xe4c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe4c1));
        EXPECT(0x6d, gbc.readMem(0xe4c2));
        // FE 032C
        gbc.setState(0x1f04, 0xd9d4, 0xae10, 0x310d, 0x8f76, 0xaf41, 0x1, 0x0);
        gbc.writeMem(0x1f04, { 0xfe, 0x46 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd9d4, gbc.sp());
        EXPECT(0x1f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 032D
        gbc.setState(0xc0ef, 0xcc92, 0x7c50, 0x9281, 0x5ab6, 0xd2d8, 0x0, 0x0);
        gbc.writeMem(0xc0ef, { 0xfe, 0x91 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcc92, gbc.sp());
        EXPECT(0xc0f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc0ef));
        EXPECT(0x91, gbc.readMem(0xc0f0));
        // FE 032E
        gbc.setState(0x598f, 0xf33e, 0x7a0, 0x9037, 0x474, 0x99f5, 0x0, 0x1);
        gbc.writeMem(0x598f, { 0xfe, 0x9f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf33e, gbc.sp());
        EXPECT(0x5991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 032F
        gbc.setState(0xa415, 0xd1e, 0x7a40, 0x73e7, 0x7852, 0x5696, 0x0, 0x1);
        gbc.writeMem(0xa415, { 0xfe, 0xbd });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd1e, gbc.sp());
        EXPECT(0xa417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa415));
        EXPECT(0xbd, gbc.readMem(0xa416));
        // FE 0330
        gbc.setState(0x54c2, 0x6bd4, 0xfcf0, 0x92ee, 0x705c, 0xf41b, 0x1, 0x0);
        gbc.writeMem(0x54c2, { 0xfe, 0xf7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6bd4, gbc.sp());
        EXPECT(0x54c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0331
        gbc.setState(0xad4e, 0x73a9, 0xf7f0, 0xf301, 0x9474, 0xdb9b, 0x0, 0x1);
        gbc.writeMem(0xad4e, { 0xfe, 0xdb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x73a9, gbc.sp());
        EXPECT(0xad50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xad4e));
        EXPECT(0xdb, gbc.readMem(0xad4f));
        // FE 0332
        gbc.setState(0xe1ca, 0x320b, 0xbc80, 0x31df, 0x3e1c, 0x3e70, 0x1, 0x1);
        gbc.writeMem(0xe1ca, { 0xfe, 0x53 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x320b, gbc.sp());
        EXPECT(0xe1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe1ca));
        EXPECT(0x53, gbc.readMem(0xe1cb));
        // FE 0333
        gbc.setState(0x1c20, 0x8e5a, 0x3da0, 0xdcdc, 0x543b, 0x1c89, 0x0, 0x1);
        gbc.writeMem(0x1c20, { 0xfe, 0x4e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8e5a, gbc.sp());
        EXPECT(0x1c22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0334
        gbc.setState(0xc2b7, 0xdc6d, 0x6d0, 0x3c17, 0xf368, 0x3d53, 0x1, 0x1);
        gbc.writeMem(0xc2b7, { 0xfe, 0xd7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdc6d, gbc.sp());
        EXPECT(0xc2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc2b7));
        EXPECT(0xd7, gbc.readMem(0xc2b8));
        // FE 0335
        gbc.setState(0xa916, 0xeefa, 0x3470, 0xf7dc, 0xf30e, 0x8197, 0x1, 0x1);
        gbc.writeMem(0xa916, { 0xfe, 0x86 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xeefa, gbc.sp());
        EXPECT(0xa918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa916));
        EXPECT(0x86, gbc.readMem(0xa917));
        // FE 0336
        gbc.setState(0x733a, 0xa535, 0xf7c0, 0x54b8, 0xea3e, 0xc567, 0x1, 0x1);
        gbc.writeMem(0x733a, { 0xfe, 0x5b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa535, gbc.sp());
        EXPECT(0x733c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0337
        gbc.setState(0x6c28, 0xb12e, 0xf530, 0x442, 0x53e1, 0x66a9, 0x1, 0x0);
        gbc.writeMem(0x6c28, { 0xfe, 0xb2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb12e, gbc.sp());
        EXPECT(0x6c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0338
        gbc.setState(0x1da8, 0x46b, 0x85f0, 0x5f92, 0x8d91, 0x63cd, 0x0, 0x1);
        gbc.writeMem(0x1da8, { 0xfe, 0xaa });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x46b, gbc.sp());
        EXPECT(0x1daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0339
        gbc.setState(0xe1cb, 0xd083, 0xa050, 0xeb24, 0x5a34, 0x757b, 0x1, 0x1);
        gbc.writeMem(0xe1cb, { 0xfe, 0x2b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd083, gbc.sp());
        EXPECT(0xe1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe1cb));
        EXPECT(0x2b, gbc.readMem(0xe1cc));
        // FE 033A
        gbc.setState(0x4ba9, 0x21b7, 0xe570, 0xd1db, 0xbb7b, 0xd93c, 0x1, 0x1);
        gbc.writeMem(0x4ba9, { 0xfe, 0x16 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x21b7, gbc.sp());
        EXPECT(0x4bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 033B
        gbc.setState(0xde30, 0x1dff, 0xa360, 0xf208, 0x4dce, 0xf02a, 0x1, 0x0);
        gbc.writeMem(0xde30, { 0xfe, 0x6b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1dff, gbc.sp());
        EXPECT(0xde32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xde30));
        EXPECT(0x6b, gbc.readMem(0xde31));
        // FE 033C
        gbc.setState(0xad83, 0x5d49, 0x3350, 0x2c43, 0x7e31, 0xd095, 0x0, 0x1);
        gbc.writeMem(0xad83, { 0xfe, 0x4 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5d49, gbc.sp());
        EXPECT(0xad85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xad83));
        EXPECT(0x4, gbc.readMem(0xad84));
        // FE 033D
        gbc.setState(0xbf6d, 0xb43a, 0x3b80, 0xd13d, 0xd109, 0x8858, 0x1, 0x0);
        gbc.writeMem(0xbf6d, { 0xfe, 0xa0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb43a, gbc.sp());
        EXPECT(0xbf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbf6d));
        EXPECT(0xa0, gbc.readMem(0xbf6e));
        // FE 033E
        gbc.setState(0xbf5d, 0xf704, 0xe170, 0xae6, 0xf36c, 0xce02, 0x1, 0x0);
        gbc.writeMem(0xbf5d, { 0xfe, 0x8b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf704, gbc.sp());
        EXPECT(0xbf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbf5d));
        EXPECT(0x8b, gbc.readMem(0xbf5e));
        // FE 033F
        gbc.setState(0x9c77, 0x673d, 0xce50, 0xec0, 0xa61c, 0xbe7, 0x0, 0x0);
        gbc.writeMem(0x9c77, { 0xfe, 0xf4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x673d, gbc.sp());
        EXPECT(0x9c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9c77));
        EXPECT(0xf4, gbc.readMem(0x9c78));
        // FE 0340
        gbc.setState(0x5f60, 0xa409, 0x8d00, 0xd29c, 0xbe13, 0x489c, 0x1, 0x1);
        gbc.writeMem(0x5f60, { 0xfe, 0xa4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa409, gbc.sp());
        EXPECT(0x5f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0341
        gbc.setState(0xbdff, 0x417b, 0x3600, 0x25b8, 0x730e, 0x7df, 0x0, 0x1);
        gbc.writeMem(0xbdff, { 0xfe, 0xb5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x417b, gbc.sp());
        EXPECT(0xbe01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbdff));
        EXPECT(0xb5, gbc.readMem(0xbe00));
        // FE 0342
        gbc.setState(0x8918, 0xd72c, 0x5000, 0xf6f, 0xbb82, 0x778e, 0x1, 0x0);
        gbc.writeMem(0x8918, { 0xfe, 0x8f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd72c, gbc.sp());
        EXPECT(0x891a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8918));
        EXPECT(0x8f, gbc.readMem(0x8919));
        // FE 0343
        gbc.setState(0x2ec7, 0x5a5e, 0xe7e0, 0x846c, 0x5e06, 0xe73e, 0x1, 0x1);
        gbc.writeMem(0x2ec7, { 0xfe, 0xe8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5a5e, gbc.sp());
        EXPECT(0x2ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0344
        gbc.setState(0x7d8c, 0x86ca, 0x8470, 0x5ac4, 0xb2ba, 0x198b, 0x1, 0x0);
        gbc.writeMem(0x7d8c, { 0xfe, 0x41 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x86ca, gbc.sp());
        EXPECT(0x7d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0345
        gbc.setState(0xe032, 0x5660, 0x13f0, 0x2753, 0x555e, 0xc73c, 0x0, 0x0);
        gbc.writeMem(0xe032, { 0xfe, 0x88 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5660, gbc.sp());
        EXPECT(0xe034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe032));
        EXPECT(0x88, gbc.readMem(0xe033));
        // FE 0346
        gbc.setState(0xbd03, 0xad34, 0x9700, 0x2ba5, 0x7164, 0xedfd, 0x1, 0x1);
        gbc.writeMem(0xbd03, { 0xfe, 0x47 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xad34, gbc.sp());
        EXPECT(0xbd05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbd03));
        EXPECT(0x47, gbc.readMem(0xbd04));
        // FE 0347
        gbc.setState(0xe852, 0x675, 0xbbe0, 0x193f, 0x5b75, 0xe578, 0x1, 0x0);
        gbc.writeMem(0xe852, { 0xfe, 0x64 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x675, gbc.sp());
        EXPECT(0xe854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe852));
        EXPECT(0x64, gbc.readMem(0xe853));
        // FE 0348
        gbc.setState(0x4421, 0xe99b, 0x5ef0, 0x44, 0x82df, 0x66ff, 0x0, 0x1);
        gbc.writeMem(0x4421, { 0xfe, 0x82 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe99b, gbc.sp());
        EXPECT(0x4423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0349
        gbc.setState(0x46a, 0x376d, 0xe260, 0x4ae7, 0xe5ce, 0xd4dc, 0x0, 0x1);
        gbc.writeMem(0x46a, { 0xfe, 0x2e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x376d, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 034A
        gbc.setState(0x9e58, 0x122, 0xb0d0, 0x95a, 0xd4b, 0x3a1b, 0x0, 0x1);
        gbc.writeMem(0x9e58, { 0xfe, 0x87 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x122, gbc.sp());
        EXPECT(0x9e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9e58));
        EXPECT(0x87, gbc.readMem(0x9e59));
        // FE 034B
        gbc.setState(0x868, 0x694, 0xec90, 0xf038, 0xff62, 0xf6be, 0x0, 0x1);
        gbc.writeMem(0x868, { 0xfe, 0x65 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x694, gbc.sp());
        EXPECT(0x86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 034C
        gbc.setState(0x1c1a, 0xbce0, 0x69a0, 0xd00a, 0x4193, 0x332, 0x1, 0x0);
        gbc.writeMem(0x1c1a, { 0xfe, 0x90 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbce0, gbc.sp());
        EXPECT(0x1c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 034D
        gbc.setState(0x76d3, 0x4a0e, 0xfd80, 0xa28a, 0x8959, 0x5b1c, 0x0, 0x1);
        gbc.writeMem(0x76d3, { 0xfe, 0x3 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4a0e, gbc.sp());
        EXPECT(0x76d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 034F
        gbc.setState(0x4a8, 0x667c, 0x1ec0, 0xe0dd, 0x90bc, 0x8fe1, 0x0, 0x0);
        gbc.writeMem(0x4a8, { 0xfe, 0xd1 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x667c, gbc.sp());
        EXPECT(0x4aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0350
        gbc.setState(0x4888, 0x6307, 0x17b0, 0x8253, 0xb679, 0xf260, 0x1, 0x1);
        gbc.writeMem(0x4888, { 0xfe, 0x1f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6307, gbc.sp());
        EXPECT(0x488a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0351
        gbc.setState(0xa333, 0xf411, 0x1330, 0x2414, 0x292e, 0xbb18, 0x1, 0x1);
        gbc.writeMem(0xa333, { 0xfe, 0x90 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf411, gbc.sp());
        EXPECT(0xa335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa333));
        EXPECT(0x90, gbc.readMem(0xa334));
        // FE 0352
        gbc.setState(0x4812, 0x6453, 0x35f0, 0x4712, 0x4819, 0x6c73, 0x0, 0x0);
        gbc.writeMem(0x4812, { 0xfe, 0x58 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6453, gbc.sp());
        EXPECT(0x4814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0353
        gbc.setState(0xd77c, 0x8fc8, 0x4b60, 0x6e2a, 0x3bf2, 0x5d4e, 0x1, 0x1);
        gbc.writeMem(0xd77c, { 0xfe, 0x5e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8fc8, gbc.sp());
        EXPECT(0xd77e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd77c));
        EXPECT(0x5e, gbc.readMem(0xd77d));
        // FE 0354
        gbc.setState(0x6060, 0xd84e, 0xce80, 0xed80, 0xe12a, 0xf827, 0x1, 0x1);
        gbc.writeMem(0x6060, { 0xfe, 0x82 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd84e, gbc.sp());
        EXPECT(0x6062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0355
        gbc.setState(0x772b, 0xa6e, 0xc1f0, 0xa9ac, 0x7882, 0x5a74, 0x1, 0x1);
        gbc.writeMem(0x772b, { 0xfe, 0xf6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa6e, gbc.sp());
        EXPECT(0x772d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0356
        gbc.setState(0xac70, 0x1bfe, 0x2bd0, 0xe57f, 0xa678, 0x26d4, 0x0, 0x0);
        gbc.writeMem(0xac70, { 0xfe, 0x1f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1bfe, gbc.sp());
        EXPECT(0xac72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xac70));
        EXPECT(0x1f, gbc.readMem(0xac71));
        // FE 0357
        gbc.setState(0x45d, 0xe176, 0x2c20, 0x88a2, 0x4583, 0x2c79, 0x1, 0x0);
        gbc.writeMem(0x45d, { 0xfe, 0xed });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe176, gbc.sp());
        EXPECT(0x45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0358
        gbc.setState(0x4eda, 0xa641, 0xa280, 0xbe7b, 0xcf56, 0x29a6, 0x0, 0x0);
        gbc.writeMem(0x4eda, { 0xfe, 0x56 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa641, gbc.sp());
        EXPECT(0x4edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0359
        gbc.setState(0x83b4, 0xb21, 0xadd0, 0x1a94, 0x9736, 0x85d, 0x0, 0x0);
        gbc.writeMem(0x83b4, { 0xfe, 0xab });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb21, gbc.sp());
        EXPECT(0x83b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x83b4));
        EXPECT(0xab, gbc.readMem(0x83b5));
        // FE 035A
        gbc.setState(0x793a, 0xe073, 0x6140, 0x38f7, 0xa79e, 0x893c, 0x1, 0x0);
        gbc.writeMem(0x793a, { 0xfe, 0xf0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe073, gbc.sp());
        EXPECT(0x793c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 035C
        gbc.setState(0x6a62, 0xb6a2, 0x8830, 0x961b, 0x6958, 0x77df, 0x0, 0x1);
        gbc.writeMem(0x6a62, { 0xfe, 0xb2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb6a2, gbc.sp());
        EXPECT(0x6a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 035D
        gbc.setState(0x7f4c, 0xdde4, 0x14e0, 0x8b0d, 0xa8b2, 0x5ef7, 0x1, 0x1);
        gbc.writeMem(0x7f4c, { 0xfe, 0x55 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdde4, gbc.sp());
        EXPECT(0x7f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 035E
        gbc.setState(0xaf54, 0x44c7, 0x7350, 0x6947, 0x6f39, 0xe821, 0x0, 0x0);
        gbc.writeMem(0xaf54, { 0xfe, 0xbb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x44c7, gbc.sp());
        EXPECT(0xaf56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xaf54));
        EXPECT(0xbb, gbc.readMem(0xaf55));
        // FE 035F
        gbc.setState(0x4537, 0xde93, 0xc560, 0x279e, 0xe315, 0xe8ec, 0x0, 0x0);
        gbc.writeMem(0x4537, { 0xfe, 0x8b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xde93, gbc.sp());
        EXPECT(0x4539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0360
        gbc.setState(0x627f, 0xc912, 0x7c80, 0xfda8, 0xd4ad, 0x8994, 0x1, 0x0);
        gbc.writeMem(0x627f, { 0xfe, 0x1e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc912, gbc.sp());
        EXPECT(0x6281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0361
        gbc.setState(0xd15d, 0xb131, 0xe8e0, 0x218b, 0xfce7, 0x9ca, 0x0, 0x1);
        gbc.writeMem(0xd15d, { 0xfe, 0xc1 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb131, gbc.sp());
        EXPECT(0xd15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd15d));
        EXPECT(0xc1, gbc.readMem(0xd15e));
        // FE 0362
        gbc.setState(0x3857, 0xedba, 0x3700, 0xd97a, 0xe263, 0x6777, 0x0, 0x1);
        gbc.writeMem(0x3857, { 0xfe, 0xad });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xedba, gbc.sp());
        EXPECT(0x3859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0363
        gbc.setState(0xa138, 0x6795, 0x5a0, 0x20d0, 0x56a1, 0xc8c0, 0x0, 0x0);
        gbc.writeMem(0xa138, { 0xfe, 0x61 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6795, gbc.sp());
        EXPECT(0xa13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa138));
        EXPECT(0x61, gbc.readMem(0xa139));
        // FE 0364
        gbc.setState(0x83b5, 0xcf92, 0xd450, 0x933c, 0x6ed1, 0xf777, 0x0, 0x0);
        gbc.writeMem(0x83b5, { 0xfe, 0x9a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcf92, gbc.sp());
        EXPECT(0x83b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x83b5));
        EXPECT(0x9a, gbc.readMem(0x83b6));
        // FE 0365
        gbc.setState(0xc6b9, 0xbe8f, 0x4c30, 0xde1, 0xb58e, 0x5a03, 0x0, 0x0);
        gbc.writeMem(0xc6b9, { 0xfe, 0xff });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbe8f, gbc.sp());
        EXPECT(0xc6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc6b9));
        EXPECT(0xff, gbc.readMem(0xc6ba));
        // FE 0366
        gbc.setState(0xada4, 0x998a, 0x300, 0xf0f8, 0x3414, 0x60cd, 0x0, 0x0);
        gbc.writeMem(0xada4, { 0xfe, 0xc1 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x998a, gbc.sp());
        EXPECT(0xada6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xada4));
        EXPECT(0xc1, gbc.readMem(0xada5));
        // FE 0367
        gbc.setState(0x7eb2, 0x9f92, 0x6090, 0x581f, 0x31ec, 0x65b8, 0x1, 0x1);
        gbc.writeMem(0x7eb2, { 0xfe, 0xb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9f92, gbc.sp());
        EXPECT(0x7eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0368
        gbc.setState(0x41aa, 0x41, 0xbb90, 0x5ba4, 0x1772, 0x4126, 0x0, 0x1);
        gbc.writeMem(0x41aa, { 0xfe, 0x6c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x41, gbc.sp());
        EXPECT(0x41ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0369
        gbc.setState(0x63a5, 0x2adb, 0x20e0, 0xe3f1, 0xd37e, 0xc9b5, 0x1, 0x0);
        gbc.writeMem(0x63a5, { 0xfe, 0x26 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2adb, gbc.sp());
        EXPECT(0x63a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 036A
        gbc.setState(0x54d2, 0xe034, 0x10c0, 0xcf87, 0xfd15, 0x1040, 0x0, 0x1);
        gbc.writeMem(0x54d2, { 0xfe, 0xaf });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe034, gbc.sp());
        EXPECT(0x54d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 036B
        gbc.setState(0x4ddd, 0x5aca, 0xcf10, 0x835c, 0x497d, 0x69b6, 0x0, 0x0);
        gbc.writeMem(0x4ddd, { 0xfe, 0x67 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5aca, gbc.sp());
        EXPECT(0x4ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 036D
        gbc.setState(0x95b2, 0x19b2, 0xee10, 0xc20f, 0x1d8a, 0x5b8, 0x0, 0x1);
        gbc.writeMem(0x95b2, { 0xfe, 0x72 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x19b2, gbc.sp());
        EXPECT(0x95b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x95b2));
        EXPECT(0x72, gbc.readMem(0x95b3));
        // FE 036E
        gbc.setState(0xde41, 0x84b9, 0x88d0, 0x4d8a, 0x6914, 0x585a, 0x1, 0x0);
        gbc.writeMem(0xde41, { 0xfe, 0x8a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x84b9, gbc.sp());
        EXPECT(0xde43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xde41));
        EXPECT(0x8a, gbc.readMem(0xde42));
        // FE 036F
        gbc.setState(0x92d1, 0x4a47, 0x8bf0, 0xe0b5, 0xdce0, 0x65d6, 0x0, 0x0);
        gbc.writeMem(0x92d1, { 0xfe, 0x4f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4a47, gbc.sp());
        EXPECT(0x92d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x92d1));
        EXPECT(0x4f, gbc.readMem(0x92d2));
        // FE 0370
        gbc.setState(0xc7a6, 0x355b, 0xd9c0, 0x36d5, 0x5309, 0x147, 0x0, 0x0);
        gbc.writeMem(0xc7a6, { 0xfe, 0x83 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x355b, gbc.sp());
        EXPECT(0xc7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc7a6));
        EXPECT(0x83, gbc.readMem(0xc7a7));
        // FE 0371
        gbc.setState(0x2dab, 0x206b, 0xfff0, 0x8b2, 0xd272, 0x614e, 0x0, 0x1);
        gbc.writeMem(0x2dab, { 0xfe, 0xfd });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x206b, gbc.sp());
        EXPECT(0x2dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0373
        gbc.setState(0x339e, 0x4108, 0x7980, 0x9734, 0x3ad1, 0xaf53, 0x0, 0x0);
        gbc.writeMem(0x339e, { 0xfe, 0x24 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4108, gbc.sp());
        EXPECT(0x33a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0374
        gbc.setState(0x3371, 0xaeaa, 0x9c20, 0xbac5, 0x5da9, 0x6c60, 0x1, 0x1);
        gbc.writeMem(0x3371, { 0xfe, 0x73 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaeaa, gbc.sp());
        EXPECT(0x3373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0375
        gbc.setState(0x3f1f, 0xf3de, 0x5e50, 0x1555, 0x497a, 0x76f6, 0x1, 0x1);
        gbc.writeMem(0x3f1f, { 0xfe, 0x2e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf3de, gbc.sp());
        EXPECT(0x3f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0376
        gbc.setState(0x2d80, 0xb246, 0x8c90, 0xef6c, 0xcd25, 0xd4de, 0x1, 0x0);
        gbc.writeMem(0x2d80, { 0xfe, 0xd9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb246, gbc.sp());
        EXPECT(0x2d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0377
        gbc.setState(0x21e4, 0xd6c5, 0x61b0, 0x506b, 0xd725, 0xbf00, 0x1, 0x0);
        gbc.writeMem(0x21e4, { 0xfe, 0x56 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd6c5, gbc.sp());
        EXPECT(0x21e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0378
        gbc.setState(0xe08c, 0x8b44, 0xe7e0, 0xbc6a, 0x382a, 0xcfdb, 0x0, 0x0);
        gbc.writeMem(0xe08c, { 0xfe, 0x85 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8b44, gbc.sp());
        EXPECT(0xe08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe08c));
        EXPECT(0x85, gbc.readMem(0xe08d));
        // FE 0379
        gbc.setState(0x2913, 0x7348, 0xeb90, 0xf594, 0x4d3c, 0x4210, 0x1, 0x0);
        gbc.writeMem(0x2913, { 0xfe, 0x79 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7348, gbc.sp());
        EXPECT(0x2915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 037A
        gbc.setState(0x3794, 0xa819, 0x1860, 0x4061, 0x1f4e, 0xc772, 0x0, 0x1);
        gbc.writeMem(0x3794, { 0xfe, 0x91 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa819, gbc.sp());
        EXPECT(0x3796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 037B
        gbc.setState(0xd7fc, 0xe1f0, 0xc9b0, 0xc209, 0x2a76, 0x4cb8, 0x0, 0x1);
        gbc.writeMem(0xd7fc, { 0xfe, 0xfc });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe1f0, gbc.sp());
        EXPECT(0xd7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd7fc));
        EXPECT(0xfc, gbc.readMem(0xd7fd));
        // FE 037C
        gbc.setState(0x18d8, 0x5cf4, 0xdcf0, 0x774c, 0x5b88, 0xc6fb, 0x0, 0x0);
        gbc.writeMem(0x18d8, { 0xfe, 0xdd });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5cf4, gbc.sp());
        EXPECT(0x18da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 037D
        gbc.setState(0x3f6, 0x9fa2, 0xa2c0, 0xd393, 0x521a, 0xf00a, 0x0, 0x0);
        gbc.writeMem(0x3f6, { 0xfe, 0xf2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9fa2, gbc.sp());
        EXPECT(0x3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 037E
        gbc.setState(0xe114, 0x4e52, 0xc130, 0x154c, 0x33ad, 0x2814, 0x1, 0x1);
        gbc.writeMem(0xe114, { 0xfe, 0x86 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4e52, gbc.sp());
        EXPECT(0xe116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe114));
        EXPECT(0x86, gbc.readMem(0xe115));
        // FE 037F
        gbc.setState(0x8932, 0x9046, 0xdee0, 0x5f00, 0x1f43, 0xda59, 0x1, 0x0);
        gbc.writeMem(0x8932, { 0xfe, 0x30 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9046, gbc.sp());
        EXPECT(0x8934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8932));
        EXPECT(0x30, gbc.readMem(0x8933));
        // FE 0380
        gbc.setState(0xa508, 0x4558, 0xd000, 0x9c9a, 0x88c5, 0xc60f, 0x0, 0x0);
        gbc.writeMem(0xa508, { 0xfe, 0x1a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4558, gbc.sp());
        EXPECT(0xa50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa508));
        EXPECT(0x1a, gbc.readMem(0xa509));
        // FE 0381
        gbc.setState(0x79e8, 0x9841, 0x41e0, 0xc727, 0x50ec, 0xea5c, 0x1, 0x0);
        gbc.writeMem(0x79e8, { 0xfe, 0xfb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9841, gbc.sp());
        EXPECT(0x79ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0382
        gbc.setState(0x23ee, 0x631d, 0x2b20, 0x5823, 0x703d, 0xb96b, 0x1, 0x1);
        gbc.writeMem(0x23ee, { 0xfe, 0xab });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x631d, gbc.sp());
        EXPECT(0x23f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0383
        gbc.setState(0x837d, 0xc443, 0x9dc0, 0x7e42, 0x8058, 0x17b6, 0x1, 0x1);
        gbc.writeMem(0x837d, { 0xfe, 0xa1 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc443, gbc.sp());
        EXPECT(0x837f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x837d));
        EXPECT(0xa1, gbc.readMem(0x837e));
        // FE 0384
        gbc.setState(0x8cda, 0xf882, 0x7cd0, 0x96b4, 0x86f9, 0x1d0b, 0x0, 0x0);
        gbc.writeMem(0x8cda, { 0xfe, 0x53 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf882, gbc.sp());
        EXPECT(0x8cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8cda));
        EXPECT(0x53, gbc.readMem(0x8cdb));
        // FE 0385
        gbc.setState(0xbd3d, 0x1dbe, 0x58f0, 0xf38d, 0x1461, 0x6a09, 0x1, 0x0);
        gbc.writeMem(0xbd3d, { 0xfe, 0x2d });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1dbe, gbc.sp());
        EXPECT(0xbd3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbd3d));
        EXPECT(0x2d, gbc.readMem(0xbd3e));
        // FE 0386
        gbc.setState(0x55d0, 0x2db3, 0xe080, 0xa37c, 0x5f1b, 0xb37b, 0x0, 0x0);
        gbc.writeMem(0x55d0, { 0xfe, 0xf8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2db3, gbc.sp());
        EXPECT(0x55d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0387
        gbc.setState(0xb5b5, 0xe18b, 0xebb0, 0xc480, 0x70a5, 0xe466, 0x1, 0x1);
        gbc.writeMem(0xb5b5, { 0xfe, 0xce });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe18b, gbc.sp());
        EXPECT(0xb5b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb5b5));
        EXPECT(0xce, gbc.readMem(0xb5b6));
        // FE 0388
        gbc.setState(0x3263, 0x2d49, 0x68d0, 0xa81b, 0x17c7, 0xbf18, 0x0, 0x0);
        gbc.writeMem(0x3263, { 0xfe, 0xa1 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2d49, gbc.sp());
        EXPECT(0x3265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0389
        gbc.setState(0x1e05, 0x1bac, 0xdb50, 0xc16c, 0xe8fa, 0x66fc, 0x1, 0x1);
        gbc.writeMem(0x1e05, { 0xfe, 0xe });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1bac, gbc.sp());
        EXPECT(0x1e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 038A
        gbc.setState(0x43fb, 0xa1fc, 0xd780, 0x136e, 0x795, 0x64d0, 0x1, 0x1);
        gbc.writeMem(0x43fb, { 0xfe, 0xdd });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa1fc, gbc.sp());
        EXPECT(0x43fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 038B
        gbc.setState(0x26f9, 0x692d, 0x79c0, 0x5be9, 0xee4d, 0x222b, 0x0, 0x1);
        gbc.writeMem(0x26f9, { 0xfe, 0x42 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x692d, gbc.sp());
        EXPECT(0x26fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 038C
        gbc.setState(0x749b, 0xa10a, 0x1f40, 0x1661, 0x3eaa, 0x816d, 0x1, 0x1);
        gbc.writeMem(0x749b, { 0xfe, 0xe0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa10a, gbc.sp());
        EXPECT(0x749d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 038D
        gbc.setState(0xea36, 0xef1c, 0x9b50, 0x8838, 0x6491, 0xca70, 0x1, 0x0);
        gbc.writeMem(0xea36, { 0xfe, 0x42 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xef1c, gbc.sp());
        EXPECT(0xea38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xea36));
        EXPECT(0x42, gbc.readMem(0xea37));
        // FE 038E
        gbc.setState(0xa99b, 0x2e7f, 0x7970, 0x8fd9, 0x1919, 0x1acd, 0x0, 0x1);
        gbc.writeMem(0xa99b, { 0xfe, 0xe5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2e7f, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa99b));
        EXPECT(0xe5, gbc.readMem(0xa99c));
        // FE 038F
        gbc.setState(0x54e0, 0xb77d, 0x3e90, 0x978, 0xae56, 0xb85d, 0x1, 0x0);
        gbc.writeMem(0x54e0, { 0xfe, 0xab });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb77d, gbc.sp());
        EXPECT(0x54e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0390
        gbc.setState(0x2170, 0x649e, 0xf90, 0x5698, 0xcea2, 0x39ff, 0x1, 0x0);
        gbc.writeMem(0x2170, { 0xfe, 0x14 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x649e, gbc.sp());
        EXPECT(0x2172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0392
        gbc.setState(0x691f, 0xb9f5, 0x3020, 0xe4fc, 0x4bb9, 0x6317, 0x0, 0x0);
        gbc.writeMem(0x691f, { 0xfe, 0x9b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb9f5, gbc.sp());
        EXPECT(0x6921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0393
        gbc.setState(0x167b, 0xcde4, 0x82a0, 0xf7f8, 0x9fbd, 0x1ef2, 0x1, 0x0);
        gbc.writeMem(0x167b, { 0xfe, 0x91 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcde4, gbc.sp());
        EXPECT(0x167d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0394
        gbc.setState(0x5d2c, 0x9d20, 0x98d0, 0x9ecc, 0x5176, 0xfbe9, 0x1, 0x0);
        gbc.writeMem(0x5d2c, { 0xfe, 0xeb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9d20, gbc.sp());
        EXPECT(0x5d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 0395
        gbc.setState(0x3591, 0xa26e, 0x99d0, 0xefa1, 0x1661, 0xc042, 0x0, 0x1);
        gbc.writeMem(0x3591, { 0xfe, 0x19 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa26e, gbc.sp());
        EXPECT(0x3593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0396
        gbc.setState(0x7058, 0xe25b, 0x5500, 0xa431, 0xbec8, 0x4cf5, 0x0, 0x0);
        gbc.writeMem(0x7058, { 0xfe, 0x48 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe25b, gbc.sp());
        EXPECT(0x705a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0397
        gbc.setState(0xba90, 0x77e8, 0xa420, 0x2e0, 0x6091, 0xb477, 0x0, 0x0);
        gbc.writeMem(0xba90, { 0xfe, 0x16 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x77e8, gbc.sp());
        EXPECT(0xba92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xba90));
        EXPECT(0x16, gbc.readMem(0xba91));
        // FE 0398
        gbc.setState(0x2eac, 0xff3d, 0xcc10, 0xac9f, 0x7c6e, 0xab5b, 0x0, 0x0);
        gbc.writeMem(0x2eac, { 0xfe, 0xb0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xff3d, gbc.sp());
        EXPECT(0x2eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 0399
        gbc.setState(0x6e3f, 0x9ce6, 0xe170, 0xd84b, 0x63c2, 0x1364, 0x1, 0x0);
        gbc.writeMem(0x6e3f, { 0xfe, 0x68 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9ce6, gbc.sp());
        EXPECT(0x6e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 039A
        gbc.setState(0x9152, 0x69e8, 0xdc80, 0x823f, 0x98dd, 0x4bb4, 0x0, 0x1);
        gbc.writeMem(0x9152, { 0xfe, 0x1f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x69e8, gbc.sp());
        EXPECT(0x9154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9152));
        EXPECT(0x1f, gbc.readMem(0x9153));
        // FE 039B
        gbc.setState(0x2c49, 0xf511, 0xe8e0, 0x264, 0xce26, 0x8d45, 0x0, 0x0);
        gbc.writeMem(0x2c49, { 0xfe, 0xa9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf511, gbc.sp());
        EXPECT(0x2c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 039C
        gbc.setState(0xe82c, 0xfd93, 0xfd90, 0x315d, 0x88ff, 0xad78, 0x1, 0x0);
        gbc.writeMem(0xe82c, { 0xfe, 0x30 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfd93, gbc.sp());
        EXPECT(0xe82e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe82c));
        EXPECT(0x30, gbc.readMem(0xe82d));
        // FE 039D
        gbc.setState(0x185, 0x3b79, 0xf420, 0x95f8, 0x497, 0xafb3, 0x1, 0x1);
        gbc.writeMem(0x185, { 0xfe, 0x2b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3b79, gbc.sp());
        EXPECT(0x187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 039E
        gbc.setState(0x6643, 0x67d4, 0x7d90, 0x69a2, 0xd356, 0x968, 0x0, 0x1);
        gbc.writeMem(0x6643, { 0xfe, 0x62 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x67d4, gbc.sp());
        EXPECT(0x6645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 039F
        gbc.setState(0x4ed3, 0xbe21, 0x8fc0, 0x208e, 0x6ba6, 0x522b, 0x1, 0x1);
        gbc.writeMem(0x4ed3, { 0xfe, 0xc1 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbe21, gbc.sp());
        EXPECT(0x4ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03A0
        gbc.setState(0x8096, 0x4ac1, 0x2c10, 0xb42b, 0x7aa5, 0x2ddf, 0x1, 0x0);
        gbc.writeMem(0x8096, { 0xfe, 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4ac1, gbc.sp());
        EXPECT(0x8098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8096));
        EXPECT(0x2c, gbc.readMem(0x8097));
        // FE 03A1
        gbc.setState(0x4307, 0x24fe, 0x90a0, 0xc284, 0xc167, 0x6831, 0x0, 0x1);
        gbc.writeMem(0x4307, { 0xfe, 0x1d });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x24fe, gbc.sp());
        EXPECT(0x4309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 03A2
        gbc.setState(0x2c28, 0xf14f, 0x5670, 0x9f6e, 0x9e8b, 0x8360, 0x1, 0x1);
        gbc.writeMem(0x2c28, { 0xfe, 0x95 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf14f, gbc.sp());
        EXPECT(0x2c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03A3
        gbc.setState(0x4b59, 0x29c, 0x7540, 0x4bf9, 0x3de6, 0xad36, 0x1, 0x1);
        gbc.writeMem(0x4b59, { 0xfe, 0x8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x29c, gbc.sp());
        EXPECT(0x4b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 03A4
        gbc.setState(0x46b4, 0x78f, 0x9810, 0xc038, 0x7ef8, 0xd5f6, 0x1, 0x0);
        gbc.writeMem(0x46b4, { 0xfe, 0x65 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x78f, gbc.sp());
        EXPECT(0x46b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 03A6
        gbc.setState(0xe3aa, 0x649d, 0xb0, 0xd86, 0x556d, 0x46a, 0x0, 0x1);
        gbc.writeMem(0xe3aa, { 0xfe, 0x32 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x649d, gbc.sp());
        EXPECT(0xe3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe3aa));
        EXPECT(0x32, gbc.readMem(0xe3ab));
        // FE 03A7
        gbc.setState(0x40e4, 0xb953, 0x4ab0, 0xd5d7, 0x4a71, 0xa2dc, 0x1, 0x0);
        gbc.writeMem(0x40e4, { 0xfe, 0xa5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb953, gbc.sp());
        EXPECT(0x40e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03A8
        gbc.setState(0xef60, 0xf78d, 0xc750, 0x3b89, 0xefc3, 0xded0, 0x1, 0x1);
        gbc.writeMem(0xef60, { 0xfe, 0x1f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf78d, gbc.sp());
        EXPECT(0xef62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xef60));
        EXPECT(0x1f, gbc.readMem(0xef61));
        // FE 03A9
        gbc.setState(0xa8f, 0x8a4d, 0x3b40, 0xc747, 0x14c3, 0x5d64, 0x0, 0x0);
        gbc.writeMem(0xa8f, { 0xfe, 0x3e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8a4d, gbc.sp());
        EXPECT(0xa91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03AA
        gbc.setState(0x9a34, 0x1fa4, 0xcab0, 0xbc1b, 0x78aa, 0x993d, 0x1, 0x0);
        gbc.writeMem(0x9a34, { 0xfe, 0xce });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1fa4, gbc.sp());
        EXPECT(0x9a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9a34));
        EXPECT(0xce, gbc.readMem(0x9a35));
        // FE 03AB
        gbc.setState(0x5237, 0x31bf, 0x2580, 0x991f, 0x9d29, 0xfe55, 0x0, 0x1);
        gbc.writeMem(0x5237, { 0xfe, 0xdb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x31bf, gbc.sp());
        EXPECT(0x5239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03AC
        gbc.setState(0xc972, 0x4758, 0xe290, 0x6e80, 0x10a1, 0x4501, 0x0, 0x1);
        gbc.writeMem(0xc972, { 0xfe, 0x1a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4758, gbc.sp());
        EXPECT(0xc974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc972));
        EXPECT(0x1a, gbc.readMem(0xc973));
        // FE 03AD
        gbc.setState(0x732b, 0x8da0, 0x8b60, 0xf6ef, 0xb01c, 0xdc87, 0x1, 0x1);
        gbc.writeMem(0x732b, { 0xfe, 0xb1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8da0, gbc.sp());
        EXPECT(0x732d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03AF
        gbc.setState(0x601d, 0x8752, 0x4710, 0xab1b, 0x4dbd, 0x7e4c, 0x0, 0x1);
        gbc.writeMem(0x601d, { 0xfe, 0x6f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8752, gbc.sp());
        EXPECT(0x601f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03B0
        gbc.setState(0x362c, 0xde8b, 0x1130, 0x3c93, 0xecad, 0x7cda, 0x1, 0x0);
        gbc.writeMem(0x362c, { 0xfe, 0x9f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xde8b, gbc.sp());
        EXPECT(0x362e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03B1
        gbc.setState(0x8d96, 0xf301, 0x9740, 0x8c7d, 0xdfa4, 0x2ac3, 0x1, 0x1);
        gbc.writeMem(0x8d96, { 0xfe, 0x21 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf301, gbc.sp());
        EXPECT(0x8d98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8d96));
        EXPECT(0x21, gbc.readMem(0x8d97));
        // FE 03B2
        gbc.setState(0xb1a2, 0xe708, 0x1920, 0xadce, 0xaca, 0xada6, 0x0, 0x0);
        gbc.writeMem(0xb1a2, { 0xfe, 0x35 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe708, gbc.sp());
        EXPECT(0xb1a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb1a2));
        EXPECT(0x35, gbc.readMem(0xb1a3));
        // FE 03B3
        gbc.setState(0x9792, 0x7bc6, 0x1430, 0xcbe7, 0xe326, 0xc82b, 0x0, 0x0);
        gbc.writeMem(0x9792, { 0xfe, 0x39 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7bc6, gbc.sp());
        EXPECT(0x9794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9792));
        EXPECT(0x39, gbc.readMem(0x9793));
        // FE 03B4
        gbc.setState(0x4a8a, 0x76ea, 0x3090, 0x364f, 0x375c, 0x484c, 0x0, 0x1);
        gbc.writeMem(0x4a8a, { 0xfe, 0xe5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x76ea, gbc.sp());
        EXPECT(0x4a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03B5
        gbc.setState(0xa6ee, 0x84ca, 0xbf0, 0x7e5e, 0x5cbe, 0xc264, 0x0, 0x1);
        gbc.writeMem(0xa6ee, { 0xfe, 0x76 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x84ca, gbc.sp());
        EXPECT(0xa6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa6ee));
        EXPECT(0x76, gbc.readMem(0xa6ef));
        // FE 03B6
        gbc.setState(0x986b, 0xdaec, 0xd350, 0xc6a, 0xa51e, 0x38cf, 0x0, 0x0);
        gbc.writeMem(0x986b, { 0xfe, 0x2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdaec, gbc.sp());
        EXPECT(0x986d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x986b));
        EXPECT(0x2, gbc.readMem(0x986c));
        // FE 03B7
        gbc.setState(0xb68a, 0x2c3, 0xbd80, 0x777f, 0xdb66, 0x9b97, 0x1, 0x0);
        gbc.writeMem(0xb68a, { 0xfe, 0x19 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2c3, gbc.sp());
        EXPECT(0xb68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb68a));
        EXPECT(0x19, gbc.readMem(0xb68b));
        // FE 03B8
        gbc.setState(0xee26, 0x769a, 0xcde0, 0x9739, 0x971e, 0xea7d, 0x0, 0x0);
        gbc.writeMem(0xee26, { 0xfe, 0x6 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x769a, gbc.sp());
        EXPECT(0xee28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xee26));
        EXPECT(0x6, gbc.readMem(0xee27));
        // FE 03B9
        gbc.setState(0x5e1, 0x30b1, 0x4860, 0xbd03, 0xcbb6, 0xb9f6, 0x0, 0x1);
        gbc.writeMem(0x5e1, { 0xfe, 0xe1 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x30b1, gbc.sp());
        EXPECT(0x5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03BA
        gbc.setState(0x7d28, 0x54fa, 0x93d0, 0x3878, 0x8671, 0x19ec, 0x0, 0x1);
        gbc.writeMem(0x7d28, { 0xfe, 0xa8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x54fa, gbc.sp());
        EXPECT(0x7d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03BB
        gbc.setState(0x46f6, 0xce3f, 0xb4e0, 0x4fb7, 0x1d3, 0xd06e, 0x1, 0x1);
        gbc.writeMem(0x46f6, { 0xfe, 0x85 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xce3f, gbc.sp());
        EXPECT(0x46f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 03BC
        gbc.setState(0xd04, 0x9c8c, 0xf4a0, 0xeaab, 0x6553, 0xa4e3, 0x1, 0x1);
        gbc.writeMem(0xd04, { 0xfe, 0xb1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9c8c, gbc.sp());
        EXPECT(0xd06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 03BD
        gbc.setState(0x957f, 0x5af0, 0x8100, 0x597a, 0xc39b, 0x8985, 0x0, 0x1);
        gbc.writeMem(0x957f, { 0xfe, 0xdb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5af0, gbc.sp());
        EXPECT(0x9581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x957f));
        EXPECT(0xdb, gbc.readMem(0x9580));
        // FE 03BE
        gbc.setState(0x98cb, 0xcb42, 0x5ed0, 0xb31a, 0x5af2, 0xb9d3, 0x0, 0x1);
        gbc.writeMem(0x98cb, { 0xfe, 0xb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcb42, gbc.sp());
        EXPECT(0x98cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x98cb));
        EXPECT(0xb, gbc.readMem(0x98cc));
        // FE 03BF
        gbc.setState(0xb9b9, 0x8db3, 0x47d0, 0xf42e, 0xc7eb, 0xbcaa, 0x0, 0x0);
        gbc.writeMem(0xb9b9, { 0xfe, 0x9f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8db3, gbc.sp());
        EXPECT(0xb9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb9b9));
        EXPECT(0x9f, gbc.readMem(0xb9ba));
        // FE 03C0
        gbc.setState(0xcf12, 0xe25a, 0x1700, 0x3ad7, 0xba31, 0xe5d0, 0x0, 0x1);
        gbc.writeMem(0xcf12, { 0xfe, 0x34 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe25a, gbc.sp());
        EXPECT(0xcf14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xcf12));
        EXPECT(0x34, gbc.readMem(0xcf13));
        // FE 03C1
        gbc.setState(0x7b4a, 0x99b9, 0x9e90, 0x308f, 0xa9d8, 0x1c94, 0x1, 0x0);
        gbc.writeMem(0x7b4a, { 0xfe, 0xd3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x99b9, gbc.sp());
        EXPECT(0x7b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03C2
        gbc.setState(0x5acf, 0x3f97, 0x2470, 0xcd18, 0x1fcc, 0x1f58, 0x1, 0x1);
        gbc.writeMem(0x5acf, { 0xfe, 0x59 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3f97, gbc.sp());
        EXPECT(0x5ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03C3
        gbc.setState(0xe22e, 0xa1ce, 0x67a0, 0x10cd, 0x99bf, 0x42d, 0x0, 0x0);
        gbc.writeMem(0xe22e, { 0xfe, 0x5f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa1ce, gbc.sp());
        EXPECT(0xe230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe22e));
        EXPECT(0x5f, gbc.readMem(0xe22f));
        // FE 03C4
        gbc.setState(0xec98, 0x87a7, 0x4a40, 0xa42c, 0x2399, 0x196f, 0x1, 0x0);
        gbc.writeMem(0xec98, { 0xfe, 0xf9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x87a7, gbc.sp());
        EXPECT(0xec9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xec98));
        EXPECT(0xf9, gbc.readMem(0xec99));
        // FE 03C5
        gbc.setState(0x312e, 0x76, 0x11f0, 0xa515, 0x9066, 0x8d4b, 0x0, 0x1);
        gbc.writeMem(0x312e, { 0xfe, 0x2b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x76, gbc.sp());
        EXPECT(0x3130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03C6
        gbc.setState(0xb81c, 0xde32, 0x2af0, 0xc246, 0x45a4, 0x7209, 0x1, 0x1);
        gbc.writeMem(0xb81c, { 0xfe, 0x3e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xde32, gbc.sp());
        EXPECT(0xb81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb81c));
        EXPECT(0x3e, gbc.readMem(0xb81d));
        // FE 03C7
        gbc.setState(0x50b0, 0xa773, 0x4e90, 0x18c9, 0x4edc, 0xecd9, 0x0, 0x0);
        gbc.writeMem(0x50b0, { 0xfe, 0xec });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa773, gbc.sp());
        EXPECT(0x50b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03C8
        gbc.setState(0xe590, 0x56d0, 0x2e70, 0x786a, 0x265, 0x3ca5, 0x0, 0x0);
        gbc.writeMem(0xe590, { 0xfe, 0xef });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x56d0, gbc.sp());
        EXPECT(0xe592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xe590));
        EXPECT(0xef, gbc.readMem(0xe591));
        // FE 03C9
        gbc.setState(0xa600, 0x47c, 0x44c0, 0x8c62, 0xdd17, 0x62f, 0x0, 0x1);
        gbc.writeMem(0xa600, { 0xfe, 0xd3 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x47c, gbc.sp());
        EXPECT(0xa602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa600));
        EXPECT(0xd3, gbc.readMem(0xa601));
        // FE 03CA
        gbc.setState(0xa99e, 0xb74e, 0xb250, 0xbb51, 0x6526, 0xb34a, 0x1, 0x0);
        gbc.writeMem(0xa99e, { 0xfe, 0xf7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb74e, gbc.sp());
        EXPECT(0xa9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xa99e));
        EXPECT(0xf7, gbc.readMem(0xa99f));
        // FE 03CB
        gbc.setState(0x9319, 0xb822, 0xbe60, 0x232f, 0x340d, 0x44a3, 0x0, 0x0);
        gbc.writeMem(0x9319, { 0xfe, 0x9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb822, gbc.sp());
        EXPECT(0x931b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9319));
        EXPECT(0x9, gbc.readMem(0x931a));
        // FE 03CC
        gbc.setState(0x4a7c, 0x9be7, 0xfb50, 0x8b70, 0x2901, 0x36e9, 0x0, 0x0);
        gbc.writeMem(0x4a7c, { 0xfe, 0x4a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9be7, gbc.sp());
        EXPECT(0x4a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 03CD
        gbc.setState(0xd299, 0xb3b4, 0x9700, 0x831f, 0x4c63, 0xd013, 0x1, 0x0);
        gbc.writeMem(0xd299, { 0xfe, 0x84 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb3b4, gbc.sp());
        EXPECT(0xd29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd299));
        EXPECT(0x84, gbc.readMem(0xd29a));
        // FE 03CE
        gbc.setState(0xaecb, 0xbb65, 0x5100, 0xe03b, 0xe6cd, 0x910, 0x0, 0x0);
        gbc.writeMem(0xaecb, { 0xfe, 0xfa });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbb65, gbc.sp());
        EXPECT(0xaecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xaecb));
        EXPECT(0xfa, gbc.readMem(0xaecc));
        // FE 03CF
        gbc.setState(0x6fea, 0x9b3b, 0x57f0, 0xff82, 0x95ee, 0x9d87, 0x0, 0x0);
        gbc.writeMem(0x6fea, { 0xfe, 0x45 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9b3b, gbc.sp());
        EXPECT(0x6fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 03D0
        gbc.setState(0xceeb, 0xfa05, 0x1970, 0x6411, 0xd886, 0xc4a5, 0x0, 0x0);
        gbc.writeMem(0xceeb, { 0xfe, 0xd5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfa05, gbc.sp());
        EXPECT(0xceed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xceeb));
        EXPECT(0xd5, gbc.readMem(0xceec));
        // FE 03D1
        gbc.setState(0x8e52, 0xcf55, 0xa4e0, 0xb37d, 0x312f, 0x648c, 0x0, 0x1);
        gbc.writeMem(0x8e52, { 0xfe, 0x5c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcf55, gbc.sp());
        EXPECT(0x8e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8e52));
        EXPECT(0x5c, gbc.readMem(0x8e53));
        // FE 03D2
        gbc.setState(0x6c83, 0x240b, 0x4a60, 0xb6e1, 0xd7e1, 0xdf0, 0x1, 0x0);
        gbc.writeMem(0x6c83, { 0xfe, 0xe3 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x240b, gbc.sp());
        EXPECT(0x6c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03D4
        gbc.setState(0x3d40, 0x4b11, 0xdaa0, 0x6d06, 0x6dcd, 0x5120, 0x0, 0x1);
        gbc.writeMem(0x3d40, { 0xfe, 0xaa });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4b11, gbc.sp());
        EXPECT(0x3d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 03D6
        gbc.setState(0x97be, 0x7b42, 0xe580, 0x481b, 0x3cdf, 0xbbd2, 0x0, 0x1);
        gbc.writeMem(0x97be, { 0xfe, 0xf0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7b42, gbc.sp());
        EXPECT(0x97c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x97be));
        EXPECT(0xf0, gbc.readMem(0x97bf));
        // FE 03D7
        gbc.setState(0x93e7, 0xa684, 0x6010, 0xae45, 0x5e8, 0x32cf, 0x0, 0x1);
        gbc.writeMem(0x93e7, { 0xfe, 0xda });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa684, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x93e7));
        EXPECT(0xda, gbc.readMem(0x93e8));
        // FE 03D8
        gbc.setState(0x81e8, 0xaf8a, 0xff20, 0xeee8, 0xd663, 0xeab9, 0x0, 0x0);
        gbc.writeMem(0x81e8, { 0xfe, 0x98 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xaf8a, gbc.sp());
        EXPECT(0x81ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x81e8));
        EXPECT(0x98, gbc.readMem(0x81e9));
        // FE 03D9
        gbc.setState(0x704b, 0xe155, 0xa40, 0x874f, 0xe72d, 0x97da, 0x1, 0x0);
        gbc.writeMem(0x704b, { 0xfe, 0xdd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe155, gbc.sp());
        EXPECT(0x704d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03DA
        gbc.setState(0x50f, 0xaa26, 0xce50, 0x4dc0, 0x6a84, 0x464b, 0x1, 0x1);
        gbc.writeMem(0x50f, { 0xfe, 0xb6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xaa26, gbc.sp());
        EXPECT(0x511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 03DB
        gbc.setState(0x8a71, 0xa89d, 0x3ab0, 0x670f, 0xd946, 0xf352, 0x1, 0x0);
        gbc.writeMem(0x8a71, { 0xfe, 0xe1 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa89d, gbc.sp());
        EXPECT(0x8a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x8a71));
        EXPECT(0xe1, gbc.readMem(0x8a72));
        // FE 03DC
        gbc.setState(0x708d, 0x4be8, 0x7af0, 0x9be1, 0xa4c3, 0xa9fd, 0x1, 0x1);
        gbc.writeMem(0x708d, { 0xfe, 0x1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4be8, gbc.sp());
        EXPECT(0x708f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // FE 03DD
        gbc.setState(0x3724, 0x1659, 0x1340, 0xa88d, 0xf553, 0xfb6, 0x0, 0x1);
        gbc.writeMem(0x3724, { 0xfe, 0xde });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1659, gbc.sp());
        EXPECT(0x3726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03DE
        gbc.setState(0xd316, 0x3f2c, 0x3360, 0xcaae, 0x5506, 0x8f38, 0x0, 0x1);
        gbc.writeMem(0xd316, { 0xfe, 0x81 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3f2c, gbc.sp());
        EXPECT(0xd318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd316));
        EXPECT(0x81, gbc.readMem(0xd317));
        // FE 03DF
        gbc.setState(0x9296, 0x1dcb, 0xb090, 0xef2b, 0xe6ff, 0xcfca, 0x1, 0x1);
        gbc.writeMem(0x9296, { 0xfe, 0xf9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1dcb, gbc.sp());
        EXPECT(0x9298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9296));
        EXPECT(0xf9, gbc.readMem(0x9297));
        // FE 03E0
        gbc.setState(0xc272, 0x9736, 0x9120, 0x9b96, 0x12a1, 0x9921, 0x1, 0x1);
        gbc.writeMem(0xc272, { 0xfe, 0x38 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9736, gbc.sp());
        EXPECT(0xc274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xc272));
        EXPECT(0x38, gbc.readMem(0xc273));
        // FE 03E1
        gbc.setState(0x283c, 0x1e2c, 0x1de0, 0xad14, 0x194e, 0xb1e8, 0x0, 0x1);
        gbc.writeMem(0x283c, { 0xfe, 0xe9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1e2c, gbc.sp());
        EXPECT(0x283e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03E2
        gbc.setState(0x2d9, 0x256f, 0x7680, 0xba96, 0xac32, 0xd22f, 0x1, 0x1);
        gbc.writeMem(0x2d9, { 0xfe, 0xb3 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x256f, gbc.sp());
        EXPECT(0x2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03E3
        gbc.setState(0xd620, 0x6afe, 0xcf70, 0xc9f2, 0x8ec7, 0x9547, 0x0, 0x0);
        gbc.writeMem(0xd620, { 0xfe, 0x99 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6afe, gbc.sp());
        EXPECT(0xd622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd620));
        EXPECT(0x99, gbc.readMem(0xd621));
        // FE 03E4
        gbc.setState(0xd310, 0x9287, 0x4930, 0xcd7e, 0x9657, 0x3f61, 0x1, 0x0);
        gbc.writeMem(0xd310, { 0xfe, 0xdb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9287, gbc.sp());
        EXPECT(0xd312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xd310));
        EXPECT(0xdb, gbc.readMem(0xd311));
        // FE 03E5
        gbc.setState(0x301, 0x1dba, 0x46f0, 0xcc1b, 0x4711, 0x52e4, 0x0, 0x0);
        gbc.writeMem(0x301, { 0xfe, 0x52 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1dba, gbc.sp());
        EXPECT(0x303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03E6
        gbc.setState(0x180d, 0x8bf1, 0x9780, 0x355b, 0xd4c, 0x358c, 0x0, 0x1);
        gbc.writeMem(0x180d, { 0xfe, 0xc1 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8bf1, gbc.sp());
        EXPECT(0x180f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // FE 03E7
        gbc.setState(0x9295, 0x38d9, 0xa2a0, 0xf4a3, 0x1ef4, 0xba4c, 0x1, 0x0);
        gbc.writeMem(0x9295, { 0xfe, 0xf });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x38d9, gbc.sp());
        EXPECT(0x9297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x9295));
        EXPECT(0xf, gbc.readMem(0x9296));
    }
