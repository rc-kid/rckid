    TEST(gbcemu, opcode_94) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 94 0000
        gbc.setState(0x8ec6, 0x11fe, 0xec30, 0x9156, 0xe045, 0xb799, 0x0, 0x0);
        gbc.writeMem(0x8ec6, { 0x94 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x11fe, gbc.sp());
        EXPECT(0x8ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8ec6));
        // 94 0001
        gbc.setState(0x6c90, 0xe2cd, 0x2970, 0x9513, 0x5fde, 0x5fa9, 0x1, 0x0);
        gbc.writeMem(0x6c90, { 0x94 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe2cd, gbc.sp());
        EXPECT(0x6c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0002
        gbc.setState(0x6066, 0x7c52, 0xa350, 0x429e, 0xce6a, 0xa332, 0x0, 0x1);
        gbc.writeMem(0x6066, { 0x94 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7c52, gbc.sp());
        EXPECT(0x6067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0003
        gbc.setState(0x947, 0x3bd7, 0xa8a0, 0x2823, 0xef61, 0x7a16, 0x0, 0x1);
        gbc.writeMem(0x947, { 0x94 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3bd7, gbc.sp());
        EXPECT(0x948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0004
        gbc.setState(0xecb, 0xec92, 0xf560, 0xf1b4, 0xdda4, 0xc424, 0x0, 0x1);
        gbc.writeMem(0xecb, { 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xec92, gbc.sp());
        EXPECT(0xecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0005
        gbc.setState(0x12af, 0xe77c, 0x4320, 0x5c0f, 0xa849, 0xaaba, 0x1, 0x1);
        gbc.writeMem(0x12af, { 0x94 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe77c, gbc.sp());
        EXPECT(0x12b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0006
        gbc.setState(0xe1eb, 0xf6a8, 0xe6f0, 0xf250, 0xb889, 0x9a4e, 0x0, 0x1);
        gbc.writeMem(0xe1eb, { 0x94 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf6a8, gbc.sp());
        EXPECT(0xe1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe1eb));
        // 94 0007
        gbc.setState(0x950d, 0x70b5, 0x3160, 0xd0be, 0xefac, 0xd425, 0x1, 0x0);
        gbc.writeMem(0x950d, { 0x94 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x70b5, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x950d));
        // 94 0008
        gbc.setState(0xee11, 0x84b0, 0x5980, 0xfac0, 0x15db, 0xb33b, 0x0, 0x1);
        gbc.writeMem(0xee11, { 0x94 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x84b0, gbc.sp());
        EXPECT(0xee12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xee11));
        // 94 0009
        gbc.setState(0xc9ee, 0x522b, 0x2150, 0xb40a, 0x57fb, 0x3162, 0x1, 0x0);
        gbc.writeMem(0xc9ee, { 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x522b, gbc.sp());
        EXPECT(0xc9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc9ee));
        // 94 000A
        gbc.setState(0x4b9c, 0x674, 0x7260, 0x930, 0x6067, 0x8797, 0x1, 0x0);
        gbc.writeMem(0x4b9c, { 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x674, gbc.sp());
        EXPECT(0x4b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 000B
        gbc.setState(0xa767, 0xa91, 0xe2c0, 0x415d, 0x823b, 0x1dfa, 0x1, 0x1);
        gbc.writeMem(0xa767, { 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa91, gbc.sp());
        EXPECT(0xa768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa767));
        // 94 000C
        gbc.setState(0xceaa, 0xf5ee, 0xf600, 0xef4f, 0x4024, 0x883a, 0x1, 0x0);
        gbc.writeMem(0xceaa, { 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf5ee, gbc.sp());
        EXPECT(0xceab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xceaa));
        // 94 000D
        gbc.setState(0x770d, 0x45e0, 0xf9d0, 0x1271, 0xdd2, 0xade0, 0x1, 0x1);
        gbc.writeMem(0x770d, { 0x94 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x45e0, gbc.sp());
        EXPECT(0x770e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 000F
        gbc.setState(0xb59f, 0xf5bd, 0xa1d0, 0x3b23, 0x14bd, 0x5b48, 0x0, 0x0);
        gbc.writeMem(0xb59f, { 0x94 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf5bd, gbc.sp());
        EXPECT(0xb5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb59f));
        // 94 0010
        gbc.setState(0x3405, 0xbddb, 0xd7e0, 0xedcf, 0x4738, 0xb6bf, 0x1, 0x1);
        gbc.writeMem(0x3405, { 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbddb, gbc.sp());
        EXPECT(0x3406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0011
        gbc.setState(0xac6, 0x87e5, 0x3e90, 0xb524, 0x39d5, 0x2992, 0x1, 0x0);
        gbc.writeMem(0xac6, { 0x94 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x87e5, gbc.sp());
        EXPECT(0xac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0012
        gbc.setState(0x3f6f, 0x8a30, 0xf2d0, 0xd6f7, 0x3f50, 0xc1db, 0x0, 0x0);
        gbc.writeMem(0x3f6f, { 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8a30, gbc.sp());
        EXPECT(0x3f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0013
        gbc.setState(0x7196, 0x8b81, 0x5280, 0xcc77, 0x7717, 0xf702, 0x1, 0x0);
        gbc.writeMem(0x7196, { 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8b81, gbc.sp());
        EXPECT(0x7197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0014
        gbc.setState(0xb4a2, 0xab95, 0x14f0, 0x5d78, 0x15ea, 0xa203, 0x0, 0x1);
        gbc.writeMem(0xb4a2, { 0x94 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xab95, gbc.sp());
        EXPECT(0xb4a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb4a2));
        // 94 0015
        gbc.setState(0x3118, 0xb8b2, 0x54b0, 0x63b5, 0xe61c, 0x34cb, 0x0, 0x0);
        gbc.writeMem(0x3118, { 0x94 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb8b2, gbc.sp());
        EXPECT(0x3119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0016
        gbc.setState(0x4cd2, 0x3b28, 0xaeb0, 0x6217, 0x865c, 0x68d0, 0x0, 0x1);
        gbc.writeMem(0x4cd2, { 0x94 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3b28, gbc.sp());
        EXPECT(0x4cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0017
        gbc.setState(0xc93e, 0xabf0, 0x2740, 0x7ff4, 0xfb7d, 0xc816, 0x0, 0x1);
        gbc.writeMem(0xc93e, { 0x94 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xabf0, gbc.sp());
        EXPECT(0xc93f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc93e));
        // 94 0018
        gbc.setState(0x270b, 0x6e19, 0xbd80, 0xd2a9, 0xa24f, 0x18e8, 0x0, 0x1);
        gbc.writeMem(0x270b, { 0x94 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6e19, gbc.sp());
        EXPECT(0x270c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0019
        gbc.setState(0x6d1, 0xff05, 0xf860, 0x823b, 0xae38, 0xb405, 0x1, 0x0);
        gbc.writeMem(0x6d1, { 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xff05, gbc.sp());
        EXPECT(0x6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 001A
        gbc.setState(0xefe3, 0x1978, 0x4210, 0x1b6d, 0x4acf, 0x2d32, 0x1, 0x1);
        gbc.writeMem(0xefe3, { 0x94 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1978, gbc.sp());
        EXPECT(0xefe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xefe3));
        // 94 001B
        gbc.setState(0xd263, 0x5395, 0xc110, 0x26a0, 0x3292, 0x9369, 0x0, 0x1);
        gbc.writeMem(0xd263, { 0x94 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5395, gbc.sp());
        EXPECT(0xd264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd263));
        // 94 001C
        gbc.setState(0xe11e, 0xf4de, 0x6440, 0x4ec2, 0x5166, 0x94b3, 0x1, 0x0);
        gbc.writeMem(0xe11e, { 0x94 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf4de, gbc.sp());
        EXPECT(0xe11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe11e));
        // 94 001D
        gbc.setState(0x8b3a, 0x80b6, 0x800, 0xc749, 0x5709, 0xe762, 0x1, 0x1);
        gbc.writeMem(0x8b3a, { 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x80b6, gbc.sp());
        EXPECT(0x8b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8b3a));
        // 94 001E
        gbc.setState(0x2476, 0x85ba, 0x8b80, 0x65cc, 0x4a40, 0x8e54, 0x1, 0x1);
        gbc.writeMem(0x2476, { 0x94 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x85ba, gbc.sp());
        EXPECT(0x2477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0020
        gbc.setState(0x58e4, 0x68a5, 0x74b0, 0xde97, 0xf65e, 0x8754, 0x0, 0x1);
        gbc.writeMem(0x58e4, { 0x94 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x68a5, gbc.sp());
        EXPECT(0x58e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0021
        gbc.setState(0x71bc, 0xfb2a, 0xcf70, 0x4f6e, 0xb374, 0xd324, 0x1, 0x0);
        gbc.writeMem(0x71bc, { 0x94 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfb2a, gbc.sp());
        EXPECT(0x71bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0022
        gbc.setState(0x7605, 0x783, 0x3540, 0xa56f, 0xdaf4, 0x9f0a, 0x0, 0x0);
        gbc.writeMem(0x7605, { 0x94 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x783, gbc.sp());
        EXPECT(0x7606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0023
        gbc.setState(0x1b5c, 0xbb48, 0xcb80, 0x1364, 0xbefb, 0x1f86, 0x0, 0x0);
        gbc.writeMem(0x1b5c, { 0x94 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbb48, gbc.sp());
        EXPECT(0x1b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0024
        gbc.setState(0x755a, 0xb997, 0x5230, 0xb7b, 0x1180, 0xd96c, 0x0, 0x1);
        gbc.writeMem(0x755a, { 0x94 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb997, gbc.sp());
        EXPECT(0x755b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0025
        gbc.setState(0x3c44, 0x86ef, 0xd5a0, 0xcff0, 0x2217, 0xca6a, 0x0, 0x1);
        gbc.writeMem(0x3c44, { 0x94 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x86ef, gbc.sp());
        EXPECT(0x3c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0026
        gbc.setState(0x6731, 0x39df, 0xd600, 0x2593, 0xbf89, 0xfab, 0x0, 0x0);
        gbc.writeMem(0x6731, { 0x94 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x39df, gbc.sp());
        EXPECT(0x6732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0027
        gbc.setState(0x60b3, 0xf993, 0x9620, 0x4a55, 0x57e9, 0x243e, 0x1, 0x1);
        gbc.writeMem(0x60b3, { 0x94 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf993, gbc.sp());
        EXPECT(0x60b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0029
        gbc.setState(0x4784, 0x8282, 0xcd0, 0x3363, 0xa117, 0x6ba4, 0x0, 0x1);
        gbc.writeMem(0x4784, { 0x94 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8282, gbc.sp());
        EXPECT(0x4785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 002A
        gbc.setState(0x38e5, 0x3b83, 0x1210, 0x57aa, 0x35e2, 0x59b1, 0x0, 0x0);
        gbc.writeMem(0x38e5, { 0x94 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3b83, gbc.sp());
        EXPECT(0x38e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 002B
        gbc.setState(0xbc38, 0x799, 0x97c0, 0x96e5, 0x3341, 0xbcf, 0x0, 0x1);
        gbc.writeMem(0xbc38, { 0x94 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x799, gbc.sp());
        EXPECT(0xbc39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbc38));
        // 94 002C
        gbc.setState(0x95b9, 0xde96, 0xe470, 0xf8fb, 0x555f, 0xa93d, 0x1, 0x1);
        gbc.writeMem(0x95b9, { 0x94 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xde96, gbc.sp());
        EXPECT(0x95ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x95b9));
        // 94 002D
        gbc.setState(0x2233, 0xfad6, 0x2a90, 0xa290, 0xc901, 0x48eb, 0x0, 0x1);
        gbc.writeMem(0x2233, { 0x94 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfad6, gbc.sp());
        EXPECT(0x2234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 002E
        gbc.setState(0xc861, 0xe01b, 0x3280, 0xd7dc, 0xdb09, 0x623e, 0x1, 0x1);
        gbc.writeMem(0xc861, { 0x94 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe01b, gbc.sp());
        EXPECT(0xc862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc861));
        // 94 002F
        gbc.setState(0x2668, 0xc70e, 0x760, 0xb58, 0xdd51, 0x8063, 0x1, 0x1);
        gbc.writeMem(0x2668, { 0x94 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc70e, gbc.sp());
        EXPECT(0x2669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0030
        gbc.setState(0xb5ce, 0x19b1, 0x3e30, 0xc6a9, 0x845, 0xd3bf, 0x0, 0x1);
        gbc.writeMem(0xb5ce, { 0x94 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x19b1, gbc.sp());
        EXPECT(0xb5cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb5ce));
        // 94 0031
        gbc.setState(0x6204, 0x5367, 0x5450, 0x2411, 0x2f35, 0xfa7f, 0x1, 0x1);
        gbc.writeMem(0x6204, { 0x94 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5367, gbc.sp());
        EXPECT(0x6205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0032
        gbc.setState(0x2e59, 0xd897, 0x2690, 0x3a37, 0x4fe2, 0xb7f0, 0x0, 0x0);
        gbc.writeMem(0x2e59, { 0x94 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd897, gbc.sp());
        EXPECT(0x2e5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0033
        gbc.setState(0x61c9, 0x35b4, 0x5660, 0x1811, 0x6987, 0xff9c, 0x1, 0x1);
        gbc.writeMem(0x61c9, { 0x94 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x35b4, gbc.sp());
        EXPECT(0x61ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0034
        gbc.setState(0x4bcd, 0xd95, 0x2610, 0x7d0e, 0xba7e, 0xec79, 0x0, 0x0);
        gbc.writeMem(0x4bcd, { 0x94 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd95, gbc.sp());
        EXPECT(0x4bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0035
        gbc.setState(0xa28a, 0x6b5c, 0xd070, 0xbd80, 0xa864, 0xef86, 0x0, 0x1);
        gbc.writeMem(0xa28a, { 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6b5c, gbc.sp());
        EXPECT(0xa28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa28a));
        // 94 0036
        gbc.setState(0x3293, 0x8f16, 0x7db0, 0xb333, 0x6013, 0x190f, 0x1, 0x1);
        gbc.writeMem(0x3293, { 0x94 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8f16, gbc.sp());
        EXPECT(0x3294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0037
        gbc.setState(0x9468, 0xc4a1, 0xfcf0, 0xd2ef, 0x7420, 0xa328, 0x1, 0x1);
        gbc.writeMem(0x9468, { 0x94 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc4a1, gbc.sp());
        EXPECT(0x9469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9468));
        // 94 0038
        gbc.setState(0xa1aa, 0x5b10, 0xbea0, 0x1d70, 0x3a8a, 0x95af, 0x0, 0x0);
        gbc.writeMem(0xa1aa, { 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5b10, gbc.sp());
        EXPECT(0xa1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa1aa));
        // 94 0039
        gbc.setState(0x3261, 0x6c32, 0xb900, 0x6e12, 0x34fd, 0x3700, 0x0, 0x0);
        gbc.writeMem(0x3261, { 0x94 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6c32, gbc.sp());
        EXPECT(0x3262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 003A
        gbc.setState(0x739, 0x1022, 0x8b50, 0x8ccd, 0x86f2, 0x9834, 0x1, 0x0);
        gbc.writeMem(0x739, { 0x94 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1022, gbc.sp());
        EXPECT(0x73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 003B
        gbc.setState(0x173b, 0xf2b1, 0x20a0, 0x3650, 0x882c, 0x45d6, 0x1, 0x0);
        gbc.writeMem(0x173b, { 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf2b1, gbc.sp());
        EXPECT(0x173c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 003C
        gbc.setState(0xdffb, 0xa950, 0xa60, 0xccd3, 0x9de0, 0x9e58, 0x0, 0x1);
        gbc.writeMem(0xdffb, { 0x94 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa950, gbc.sp());
        EXPECT(0xdffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdffb));
        // 94 003D
        gbc.setState(0x5b9d, 0xa854, 0x4dc0, 0x8cce, 0xad5, 0x5c5e, 0x0, 0x1);
        gbc.writeMem(0x5b9d, { 0x94 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa854, gbc.sp());
        EXPECT(0x5b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 003E
        gbc.setState(0x8eaf, 0xdf14, 0xadc0, 0x31dc, 0x2b3f, 0xd291, 0x0, 0x0);
        gbc.writeMem(0x8eaf, { 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdf14, gbc.sp());
        EXPECT(0x8eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8eaf));
        // 94 003F
        gbc.setState(0x4dda, 0x46b7, 0x2560, 0xd563, 0x5639, 0x3c2, 0x0, 0x1);
        gbc.writeMem(0x4dda, { 0x94 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x46b7, gbc.sp());
        EXPECT(0x4ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0040
        gbc.setState(0x8890, 0x7c4a, 0x2500, 0x3c61, 0xf85b, 0x554e, 0x1, 0x1);
        gbc.writeMem(0x8890, { 0x94 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7c4a, gbc.sp());
        EXPECT(0x8891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8890));
        // 94 0041
        gbc.setState(0xcfd8, 0x7075, 0xfa70, 0xdee8, 0xd2f5, 0xa0b, 0x0, 0x0);
        gbc.writeMem(0xcfd8, { 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7075, gbc.sp());
        EXPECT(0xcfd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcfd8));
        // 94 0044
        gbc.setState(0xc2ed, 0x6391, 0xbee0, 0x594e, 0x7824, 0x2ec9, 0x0, 0x1);
        gbc.writeMem(0xc2ed, { 0x94 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6391, gbc.sp());
        EXPECT(0xc2ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc2ed));
        // 94 0045
        gbc.setState(0xba4d, 0x9ded, 0x3c10, 0x62c6, 0x94ae, 0x71ff, 0x1, 0x1);
        gbc.writeMem(0xba4d, { 0x94 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9ded, gbc.sp());
        EXPECT(0xba4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xba4d));
        // 94 0046
        gbc.setState(0x875c, 0x45d6, 0xea70, 0xe837, 0x3723, 0x8a57, 0x0, 0x0);
        gbc.writeMem(0x875c, { 0x94 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x45d6, gbc.sp());
        EXPECT(0x875d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x875c));
        // 94 0048
        gbc.setState(0x5dfe, 0xf038, 0x42d0, 0xbe62, 0x69d3, 0x38e2, 0x1, 0x1);
        gbc.writeMem(0x5dfe, { 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf038, gbc.sp());
        EXPECT(0x5dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 004A
        gbc.setState(0x2cad, 0xd03a, 0xdd80, 0xda4b, 0xbf14, 0x99fb, 0x1, 0x0);
        gbc.writeMem(0x2cad, { 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd03a, gbc.sp());
        EXPECT(0x2cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 004B
        gbc.setState(0x1206, 0xcd1f, 0x93b0, 0x1ff9, 0x2b81, 0x56e3, 0x0, 0x1);
        gbc.writeMem(0x1206, { 0x94 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xcd1f, gbc.sp());
        EXPECT(0x1207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 004C
        gbc.setState(0x731c, 0xde03, 0xa190, 0x5977, 0xe3ec, 0x58fe, 0x1, 0x0);
        gbc.writeMem(0x731c, { 0x94 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xde03, gbc.sp());
        EXPECT(0x731d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 004D
        gbc.setState(0x6af2, 0x877, 0xa6d0, 0xd759, 0x623e, 0xcfb9, 0x0, 0x1);
        gbc.writeMem(0x6af2, { 0x94 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x877, gbc.sp());
        EXPECT(0x6af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 004E
        gbc.setState(0x17e5, 0xbca, 0xa080, 0x786a, 0xeddd, 0xfd51, 0x0, 0x0);
        gbc.writeMem(0x17e5, { 0x94 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbca, gbc.sp());
        EXPECT(0x17e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 004F
        gbc.setState(0x9f7b, 0x1891, 0x4510, 0xe5a1, 0x984a, 0xf8df, 0x0, 0x0);
        gbc.writeMem(0x9f7b, { 0x94 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1891, gbc.sp());
        EXPECT(0x9f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9f7b));
        // 94 0050
        gbc.setState(0x442f, 0xf045, 0xf930, 0x85de, 0xff2b, 0x9542, 0x0, 0x0);
        gbc.writeMem(0x442f, { 0x94 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf045, gbc.sp());
        EXPECT(0x4430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0051
        gbc.setState(0xe632, 0xd021, 0x20e0, 0x6f09, 0x674b, 0xbb09, 0x0, 0x0);
        gbc.writeMem(0xe632, { 0x94 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd021, gbc.sp());
        EXPECT(0xe633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe632));
        // 94 0052
        gbc.setState(0xcd78, 0x6f65, 0xd5f0, 0xa208, 0x67df, 0xef6a, 0x0, 0x0);
        gbc.writeMem(0xcd78, { 0x94 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6f65, gbc.sp());
        EXPECT(0xcd79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcd78));
        // 94 0053
        gbc.setState(0xc989, 0xbdcc, 0x5170, 0x6879, 0x81ae, 0x8345, 0x0, 0x0);
        gbc.writeMem(0xc989, { 0x94 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbdcc, gbc.sp());
        EXPECT(0xc98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc989));
        // 94 0054
        gbc.setState(0x6396, 0xeb54, 0x68b0, 0x6a56, 0x8364, 0xcced, 0x0, 0x1);
        gbc.writeMem(0x6396, { 0x94 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xeb54, gbc.sp());
        EXPECT(0x6397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0055
        gbc.setState(0xfff, 0x9d19, 0x22a0, 0xa711, 0x6fc0, 0xec60, 0x1, 0x0);
        gbc.writeMem(0xfff, { 0x94 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9d19, gbc.sp());
        EXPECT(0x1000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0056
        gbc.setState(0x6c39, 0xbcc9, 0x8190, 0x8dd3, 0x61d5, 0x164, 0x1, 0x0);
        gbc.writeMem(0x6c39, { 0x94 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbcc9, gbc.sp());
        EXPECT(0x6c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0058
        gbc.setState(0x9d8b, 0x6c32, 0x1070, 0x6182, 0x677a, 0xe936, 0x1, 0x0);
        gbc.writeMem(0x9d8b, { 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6c32, gbc.sp());
        EXPECT(0x9d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9d8b));
        // 94 0059
        gbc.setState(0x27de, 0xc4f, 0x8f00, 0x1795, 0xd665, 0xf69d, 0x1, 0x0);
        gbc.writeMem(0x27de, { 0x94 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc4f, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 005A
        gbc.setState(0x5ba2, 0xb20a, 0x28c0, 0x48e8, 0x679a, 0x7600, 0x0, 0x0);
        gbc.writeMem(0x5ba2, { 0x94 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb20a, gbc.sp());
        EXPECT(0x5ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 005B
        gbc.setState(0x153d, 0x2460, 0x8dd0, 0x998b, 0xd089, 0x5c8a, 0x0, 0x0);
        gbc.writeMem(0x153d, { 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2460, gbc.sp());
        EXPECT(0x153e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 005C
        gbc.setState(0xbdad, 0x3e34, 0x96d0, 0xff6b, 0xd220, 0xdd1f, 0x1, 0x1);
        gbc.writeMem(0xbdad, { 0x94 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3e34, gbc.sp());
        EXPECT(0xbdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbdad));
        // 94 005D
        gbc.setState(0xe702, 0xd3f4, 0x3e50, 0x2e8d, 0xcfed, 0xb5d, 0x0, 0x0);
        gbc.writeMem(0xe702, { 0x94 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd3f4, gbc.sp());
        EXPECT(0xe703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe702));
        // 94 005E
        gbc.setState(0xa4d3, 0xb6d2, 0xa130, 0xdb74, 0x8e33, 0xffa1, 0x1, 0x1);
        gbc.writeMem(0xa4d3, { 0x94 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb6d2, gbc.sp());
        EXPECT(0xa4d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa4d3));
        // 94 005F
        gbc.setState(0x26f6, 0x8b4a, 0xa110, 0xe644, 0x7d9b, 0xf75c, 0x0, 0x0);
        gbc.writeMem(0x26f6, { 0x94 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8b4a, gbc.sp());
        EXPECT(0x26f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0060
        gbc.setState(0x73ee, 0x3368, 0xde40, 0xa756, 0x5e21, 0x6668, 0x1, 0x1);
        gbc.writeMem(0x73ee, { 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3368, gbc.sp());
        EXPECT(0x73ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0061
        gbc.setState(0x7a31, 0x5e21, 0x8f10, 0x9ecc, 0x7282, 0x65c1, 0x1, 0x1);
        gbc.writeMem(0x7a31, { 0x94 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5e21, gbc.sp());
        EXPECT(0x7a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0062
        gbc.setState(0xca99, 0xdc02, 0x5950, 0x5b33, 0x5706, 0xe074, 0x1, 0x0);
        gbc.writeMem(0xca99, { 0x94 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdc02, gbc.sp());
        EXPECT(0xca9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xca99));
        // 94 0063
        gbc.setState(0xce5e, 0xbc7a, 0x5530, 0xbf41, 0xb46f, 0xc494, 0x0, 0x1);
        gbc.writeMem(0xce5e, { 0x94 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbc7a, gbc.sp());
        EXPECT(0xce5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xce5e));
        // 94 0064
        gbc.setState(0xb799, 0xd620, 0x10c0, 0x5248, 0xe0f8, 0x5b93, 0x0, 0x1);
        gbc.writeMem(0xb799, { 0x94 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd620, gbc.sp());
        EXPECT(0xb79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb799));
        // 94 0065
        gbc.setState(0xd429, 0x269e, 0xecc0, 0x5dcd, 0xf06a, 0xc68a, 0x0, 0x1);
        gbc.writeMem(0xd429, { 0x94 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x269e, gbc.sp());
        EXPECT(0xd42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd429));
        // 94 0066
        gbc.setState(0x530f, 0x4fb5, 0xc3f0, 0x45bc, 0x716c, 0x571e, 0x0, 0x1);
        gbc.writeMem(0x530f, { 0x94 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4fb5, gbc.sp());
        EXPECT(0x5310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0067
        gbc.setState(0x91d8, 0x2290, 0x4e10, 0x2bab, 0x9df0, 0x29a9, 0x0, 0x1);
        gbc.writeMem(0x91d8, { 0x94 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2290, gbc.sp());
        EXPECT(0x91d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x91d8));
        // 94 0068
        gbc.setState(0xad1b, 0xbe6a, 0x82d0, 0xcec, 0x2b35, 0x7544, 0x0, 0x1);
        gbc.writeMem(0xad1b, { 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbe6a, gbc.sp());
        EXPECT(0xad1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xad1b));
        // 94 0069
        gbc.setState(0x3bb3, 0xaa0c, 0xda40, 0x85db, 0xe368, 0xbf3c, 0x1, 0x1);
        gbc.writeMem(0x3bb3, { 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaa0c, gbc.sp());
        EXPECT(0x3bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 006A
        gbc.setState(0xd916, 0xb1e8, 0xc010, 0xc984, 0x4de8, 0x989e, 0x0, 0x1);
        gbc.writeMem(0xd916, { 0x94 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb1e8, gbc.sp());
        EXPECT(0xd917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd916));
        // 94 006B
        gbc.setState(0x33a3, 0x78c8, 0xb0c0, 0x3081, 0x48dc, 0xaf11, 0x0, 0x1);
        gbc.writeMem(0x33a3, { 0x94 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x78c8, gbc.sp());
        EXPECT(0x33a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 006D
        gbc.setState(0x14ef, 0x9bcf, 0x4d10, 0xf8d, 0xeb2, 0x468e, 0x1, 0x0);
        gbc.writeMem(0x14ef, { 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9bcf, gbc.sp());
        EXPECT(0x14f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 006E
        gbc.setState(0x42fa, 0xee07, 0xa120, 0x4df8, 0xd7ba, 0xa22b, 0x0, 0x0);
        gbc.writeMem(0x42fa, { 0x94 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xee07, gbc.sp());
        EXPECT(0x42fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 006F
        gbc.setState(0x451a, 0x806, 0xb9b0, 0xf2a0, 0x9602, 0xae93, 0x1, 0x1);
        gbc.writeMem(0x451a, { 0x94 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x806, gbc.sp());
        EXPECT(0x451b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0070
        gbc.setState(0x6148, 0x90f8, 0xe2d0, 0xd302, 0xdec, 0x3343, 0x1, 0x0);
        gbc.writeMem(0x6148, { 0x94 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x90f8, gbc.sp());
        EXPECT(0x6149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0071
        gbc.setState(0x8d55, 0x9fdf, 0xce40, 0x7ce3, 0x7464, 0x3e2a, 0x0, 0x1);
        gbc.writeMem(0x8d55, { 0x94 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9fdf, gbc.sp());
        EXPECT(0x8d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8d55));
        // 94 0072
        gbc.setState(0x9a92, 0x1a5c, 0xb770, 0x59df, 0xf1e4, 0x22ba, 0x0, 0x0);
        gbc.writeMem(0x9a92, { 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1a5c, gbc.sp());
        EXPECT(0x9a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9a92));
        // 94 0073
        gbc.setState(0xe277, 0x15c8, 0x70, 0x1a93, 0xc0a4, 0xa104, 0x1, 0x1);
        gbc.writeMem(0xe277, { 0x94 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x15c8, gbc.sp());
        EXPECT(0xe278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe277));
        // 94 0074
        gbc.setState(0xdace, 0x8010, 0x77c0, 0xbf26, 0x2bbc, 0xd4c0, 0x1, 0x1);
        gbc.writeMem(0xdace, { 0x94 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8010, gbc.sp());
        EXPECT(0xdacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdace));
        // 94 0075
        gbc.setState(0x9f9b, 0x6e0d, 0x7230, 0xd756, 0x269f, 0xdf16, 0x0, 0x1);
        gbc.writeMem(0x9f9b, { 0x94 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6e0d, gbc.sp());
        EXPECT(0x9f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9f9b));
        // 94 0076
        gbc.setState(0x9925, 0x2b11, 0xcf20, 0xc5e4, 0x6ae6, 0x8668, 0x1, 0x1);
        gbc.writeMem(0x9925, { 0x94 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2b11, gbc.sp());
        EXPECT(0x9926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9925));
        // 94 0077
        gbc.setState(0x1979, 0x3e31, 0x44a0, 0xe100, 0x70f4, 0x6e8b, 0x1, 0x0);
        gbc.writeMem(0x1979, { 0x94 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3e31, gbc.sp());
        EXPECT(0x197a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0078
        gbc.setState(0x6436, 0x4561, 0xdfb0, 0x3fa5, 0xb241, 0x6886, 0x0, 0x1);
        gbc.writeMem(0x6436, { 0x94 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4561, gbc.sp());
        EXPECT(0x6437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0079
        gbc.setState(0xc5fc, 0xc983, 0x6230, 0x1fa3, 0x381d, 0xaa42, 0x0, 0x0);
        gbc.writeMem(0xc5fc, { 0x94 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc983, gbc.sp());
        EXPECT(0xc5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc5fc));
        // 94 007A
        gbc.setState(0xa025, 0x609f, 0xe340, 0x3ab7, 0xb978, 0x4bff, 0x0, 0x1);
        gbc.writeMem(0xa025, { 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x609f, gbc.sp());
        EXPECT(0xa026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa025));
        // 94 007B
        gbc.setState(0x7af4, 0x97d5, 0xf8b0, 0x39f, 0x1717, 0x37ec, 0x0, 0x0);
        gbc.writeMem(0x7af4, { 0x94 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x97d5, gbc.sp());
        EXPECT(0x7af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 007C
        gbc.setState(0xa292, 0x8943, 0xb5d0, 0x7de6, 0x702d, 0xd723, 0x1, 0x1);
        gbc.writeMem(0xa292, { 0x94 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8943, gbc.sp());
        EXPECT(0xa293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa292));
        // 94 007D
        gbc.setState(0xae6e, 0xfa6e, 0xc370, 0xa216, 0xbbc2, 0x3e2d, 0x0, 0x0);
        gbc.writeMem(0xae6e, { 0x94 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfa6e, gbc.sp());
        EXPECT(0xae6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xae6e));
        // 94 007E
        gbc.setState(0xc799, 0x2164, 0x1210, 0x602c, 0x2e88, 0xae3d, 0x0, 0x1);
        gbc.writeMem(0xc799, { 0x94 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2164, gbc.sp());
        EXPECT(0xc79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc799));
        // 94 007F
        gbc.setState(0xa7ef, 0x579c, 0x2ba0, 0x4927, 0x54f4, 0xec9f, 0x0, 0x0);
        gbc.writeMem(0xa7ef, { 0x94 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x579c, gbc.sp());
        EXPECT(0xa7f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa7ef));
        // 94 0080
        gbc.setState(0x57ba, 0xadd3, 0x3f10, 0x6431, 0x84fd, 0x27c0, 0x0, 0x0);
        gbc.writeMem(0x57ba, { 0x94 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xadd3, gbc.sp());
        EXPECT(0x57bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0081
        gbc.setState(0x120e, 0xdd8c, 0xe0e0, 0x4aa8, 0x55fe, 0xed89, 0x0, 0x0);
        gbc.writeMem(0x120e, { 0x94 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdd8c, gbc.sp());
        EXPECT(0x120f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0082
        gbc.setState(0x3dec, 0x9908, 0xc6a0, 0xd2ab, 0xba60, 0xe31d, 0x1, 0x0);
        gbc.writeMem(0x3dec, { 0x94 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9908, gbc.sp());
        EXPECT(0x3ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0084
        gbc.setState(0x48b4, 0xb953, 0xe0e0, 0x7ab9, 0xaeb, 0x10d2, 0x1, 0x1);
        gbc.writeMem(0x48b4, { 0x94 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb953, gbc.sp());
        EXPECT(0x48b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0085
        gbc.setState(0xe0aa, 0x116b, 0xe960, 0xaf24, 0xadd9, 0x4877, 0x1, 0x1);
        gbc.writeMem(0xe0aa, { 0x94 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x116b, gbc.sp());
        EXPECT(0xe0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe0aa));
        // 94 0086
        gbc.setState(0x90f5, 0x3364, 0x2fe0, 0xbeb8, 0x245e, 0x7281, 0x0, 0x0);
        gbc.writeMem(0x90f5, { 0x94 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3364, gbc.sp());
        EXPECT(0x90f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x90f5));
        // 94 0088
        gbc.setState(0x389c, 0x9575, 0x1970, 0xe011, 0xda45, 0xb14a, 0x0, 0x1);
        gbc.writeMem(0x389c, { 0x94 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9575, gbc.sp());
        EXPECT(0x389d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0089
        gbc.setState(0x6b18, 0xac22, 0x2300, 0x932b, 0x38ef, 0x57d0, 0x0, 0x0);
        gbc.writeMem(0x6b18, { 0x94 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xac22, gbc.sp());
        EXPECT(0x6b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 008B
        gbc.setState(0xd340, 0x2b71, 0x4c10, 0x31ee, 0x3c35, 0x420f, 0x1, 0x1);
        gbc.writeMem(0xd340, { 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2b71, gbc.sp());
        EXPECT(0xd341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd340));
        // 94 008C
        gbc.setState(0xb02f, 0x1079, 0xe040, 0x1865, 0xbba, 0x54b8, 0x0, 0x1);
        gbc.writeMem(0xb02f, { 0x94 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1079, gbc.sp());
        EXPECT(0xb030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb02f));
        // 94 008D
        gbc.setState(0x9b8a, 0xd48d, 0x9420, 0x675d, 0x6f70, 0x4334, 0x1, 0x1);
        gbc.writeMem(0x9b8a, { 0x94 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd48d, gbc.sp());
        EXPECT(0x9b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9b8a));
        // 94 008F
        gbc.setState(0x40a9, 0x2492, 0xc5a0, 0xf1bb, 0x1bcb, 0x2496, 0x0, 0x0);
        gbc.writeMem(0x40a9, { 0x94 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2492, gbc.sp());
        EXPECT(0x40aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0090
        gbc.setState(0x3feb, 0x1e49, 0x7fd0, 0x3960, 0x3d2, 0x646c, 0x1, 0x1);
        gbc.writeMem(0x3feb, { 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1e49, gbc.sp());
        EXPECT(0x3fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0091
        gbc.setState(0x6e45, 0x1519, 0x14e0, 0x711f, 0x2c29, 0x41f0, 0x0, 0x1);
        gbc.writeMem(0x6e45, { 0x94 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1519, gbc.sp());
        EXPECT(0x6e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0092
        gbc.setState(0x1396, 0x79e9, 0xb040, 0x2385, 0x5bd2, 0x4618, 0x1, 0x1);
        gbc.writeMem(0x1396, { 0x94 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x79e9, gbc.sp());
        EXPECT(0x1397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0093
        gbc.setState(0x16fc, 0x4802, 0xaf70, 0x1723, 0xa39d, 0xd2fb, 0x0, 0x0);
        gbc.writeMem(0x16fc, { 0x94 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4802, gbc.sp());
        EXPECT(0x16fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0094
        gbc.setState(0x6b50, 0x5c50, 0xc640, 0xf1e4, 0xc1c, 0x285a, 0x0, 0x0);
        gbc.writeMem(0x6b50, { 0x94 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5c50, gbc.sp());
        EXPECT(0x6b51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0095
        gbc.setState(0x4b2d, 0xffd, 0x6170, 0x11ef, 0x6377, 0xacde, 0x1, 0x0);
        gbc.writeMem(0x4b2d, { 0x94 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xffd, gbc.sp());
        EXPECT(0x4b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0096
        gbc.setState(0x2177, 0x318a, 0xa450, 0x7061, 0x8a4b, 0x395b, 0x0, 0x1);
        gbc.writeMem(0x2177, { 0x94 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x318a, gbc.sp());
        EXPECT(0x2178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0097
        gbc.setState(0x5d10, 0x989d, 0xf890, 0x913f, 0xe0d2, 0x3bad, 0x0, 0x1);
        gbc.writeMem(0x5d10, { 0x94 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x989d, gbc.sp());
        EXPECT(0x5d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0098
        gbc.setState(0xad02, 0x33d2, 0x6380, 0xd875, 0xebbd, 0x4f9e, 0x1, 0x0);
        gbc.writeMem(0xad02, { 0x94 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x33d2, gbc.sp());
        EXPECT(0xad03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xad02));
        // 94 0099
        gbc.setState(0xaab0, 0x6a3f, 0x2100, 0x3d6f, 0xcb07, 0xf99f, 0x0, 0x0);
        gbc.writeMem(0xaab0, { 0x94 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6a3f, gbc.sp());
        EXPECT(0xaab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaab0));
        // 94 009A
        gbc.setState(0x44c1, 0x8649, 0x4770, 0x8a21, 0xd083, 0x14ea, 0x1, 0x1);
        gbc.writeMem(0x44c1, { 0x94 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8649, gbc.sp());
        EXPECT(0x44c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 009B
        gbc.setState(0xde98, 0xddac, 0x4890, 0xfe28, 0x8d54, 0x1807, 0x0, 0x0);
        gbc.writeMem(0xde98, { 0x94 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xddac, gbc.sp());
        EXPECT(0xde99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xde98));
        // 94 009C
        gbc.setState(0x840d, 0x1215, 0xb3c0, 0xcb55, 0x6d42, 0x9018, 0x1, 0x1);
        gbc.writeMem(0x840d, { 0x94 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1215, gbc.sp());
        EXPECT(0x840e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x840d));
        // 94 009E
        gbc.setState(0x30d5, 0x670d, 0xf240, 0xd94c, 0xa586, 0x274, 0x0, 0x1);
        gbc.writeMem(0x30d5, { 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x670d, gbc.sp());
        EXPECT(0x30d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 009F
        gbc.setState(0x3206, 0x18ca, 0x89c0, 0x19b8, 0x12fa, 0x3f11, 0x1, 0x1);
        gbc.writeMem(0x3206, { 0x94 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x18ca, gbc.sp());
        EXPECT(0x3207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00A0
        gbc.setState(0xde02, 0xde00, 0x7010, 0xb10b, 0xfb35, 0x8229, 0x0, 0x1);
        gbc.writeMem(0xde02, { 0x94 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xde00, gbc.sp());
        EXPECT(0xde03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xde02));
        // 94 00A1
        gbc.setState(0x1d44, 0x527, 0xffb0, 0x1361, 0xe3f0, 0xc03b, 0x1, 0x0);
        gbc.writeMem(0x1d44, { 0x94 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x527, gbc.sp());
        EXPECT(0x1d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00A2
        gbc.setState(0xaa66, 0xe44e, 0xc890, 0xb0f1, 0x73ef, 0x7293, 0x1, 0x1);
        gbc.writeMem(0xaa66, { 0x94 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe44e, gbc.sp());
        EXPECT(0xaa67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaa66));
        // 94 00A3
        gbc.setState(0x78e5, 0x63c8, 0x4d70, 0xc01f, 0x6500, 0x3499, 0x0, 0x1);
        gbc.writeMem(0x78e5, { 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x63c8, gbc.sp());
        EXPECT(0x78e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00A4
        gbc.setState(0x28e7, 0x1a2f, 0xebf0, 0xcb35, 0x33df, 0xe277, 0x1, 0x0);
        gbc.writeMem(0x28e7, { 0x94 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1a2f, gbc.sp());
        EXPECT(0x28e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00A5
        gbc.setState(0x1f2, 0x5930, 0x1eb0, 0x4b95, 0xd32, 0xf2d3, 0x0, 0x1);
        gbc.writeMem(0x1f2, { 0x94 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5930, gbc.sp());
        EXPECT(0x1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00A6
        gbc.setState(0x8832, 0x872, 0xc880, 0xe35f, 0xb45e, 0x4fb, 0x1, 0x1);
        gbc.writeMem(0x8832, { 0x94 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x872, gbc.sp());
        EXPECT(0x8833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8832));
        // 94 00A7
        gbc.setState(0xea17, 0x2552, 0xc1a0, 0x8cbc, 0xf18b, 0x8cb5, 0x0, 0x1);
        gbc.writeMem(0xea17, { 0x94 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2552, gbc.sp());
        EXPECT(0xea18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xea17));
        // 94 00A8
        gbc.setState(0x62ed, 0xf4d4, 0xa870, 0x7a81, 0x68cd, 0x3ee7, 0x0, 0x1);
        gbc.writeMem(0x62ed, { 0x94 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf4d4, gbc.sp());
        EXPECT(0x62ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00A9
        gbc.setState(0x4135, 0x7ac1, 0x50f0, 0xad31, 0x79d0, 0xe478, 0x0, 0x0);
        gbc.writeMem(0x4135, { 0x94 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7ac1, gbc.sp());
        EXPECT(0x4136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00AA
        gbc.setState(0xa695, 0x463c, 0xbd90, 0xd05e, 0x9d9, 0x32ad, 0x0, 0x1);
        gbc.writeMem(0xa695, { 0x94 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x463c, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa695));
        // 94 00AB
        gbc.setState(0x222d, 0xe150, 0x510, 0x5a7a, 0x8518, 0x76c5, 0x1, 0x1);
        gbc.writeMem(0x222d, { 0x94 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe150, gbc.sp());
        EXPECT(0x222e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00AC
        gbc.setState(0x138a, 0x42f5, 0x6700, 0xaa9a, 0xb587, 0x2097, 0x1, 0x1);
        gbc.writeMem(0x138a, { 0x94 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x42f5, gbc.sp());
        EXPECT(0x138b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00AD
        gbc.setState(0xdd91, 0xb83c, 0x48f0, 0xf0, 0x2f6e, 0x3796, 0x0, 0x1);
        gbc.writeMem(0xdd91, { 0x94 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb83c, gbc.sp());
        EXPECT(0xdd92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdd91));
        // 94 00AE
        gbc.setState(0xde19, 0x47d1, 0xcf40, 0xcb4f, 0x64c4, 0x45c6, 0x0, 0x0);
        gbc.writeMem(0xde19, { 0x94 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x47d1, gbc.sp());
        EXPECT(0xde1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xde19));
        // 94 00AF
        gbc.setState(0xbbd, 0xcc4b, 0x8620, 0x87cb, 0x7f68, 0x44, 0x1, 0x1);
        gbc.writeMem(0xbbd, { 0x94 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcc4b, gbc.sp());
        EXPECT(0xbbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00B1
        gbc.setState(0xaf54, 0xa85e, 0x2360, 0xda86, 0x3b26, 0x4504, 0x0, 0x1);
        gbc.writeMem(0xaf54, { 0x94 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa85e, gbc.sp());
        EXPECT(0xaf55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaf54));
        // 94 00B2
        gbc.setState(0x211b, 0x874f, 0x3c0, 0xff8, 0xd7e2, 0xe661, 0x1, 0x0);
        gbc.writeMem(0x211b, { 0x94 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x874f, gbc.sp());
        EXPECT(0x211c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00B3
        gbc.setState(0x79d3, 0x6f78, 0xa560, 0x51f7, 0x1a12, 0xa0a6, 0x1, 0x1);
        gbc.writeMem(0x79d3, { 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6f78, gbc.sp());
        EXPECT(0x79d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00B4
        gbc.setState(0x1c8, 0xbea4, 0xa5d0, 0xf0c5, 0x3bdd, 0xe468, 0x0, 0x0);
        gbc.writeMem(0x1c8, { 0x94 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbea4, gbc.sp());
        EXPECT(0x1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00B5
        gbc.setState(0x9855, 0xe0e, 0xf190, 0x1aff, 0xde05, 0x3fe4, 0x0, 0x0);
        gbc.writeMem(0x9855, { 0x94 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe0e, gbc.sp());
        EXPECT(0x9856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9855));
        // 94 00B6
        gbc.setState(0xc6a1, 0xb29c, 0x90, 0xb857, 0x1271, 0xe522, 0x1, 0x0);
        gbc.writeMem(0xc6a1, { 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb29c, gbc.sp());
        EXPECT(0xc6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc6a1));
        // 94 00B7
        gbc.setState(0xdfe9, 0x4f7a, 0x8420, 0x7123, 0x3fd, 0xd839, 0x0, 0x0);
        gbc.writeMem(0xdfe9, { 0x94 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4f7a, gbc.sp());
        EXPECT(0xdfea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdfe9));
        // 94 00B8
        gbc.setState(0x3ede, 0x8fc, 0xfd20, 0xeeaa, 0x35e7, 0x7aad, 0x0, 0x1);
        gbc.writeMem(0x3ede, { 0x94 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8fc, gbc.sp());
        EXPECT(0x3edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00B9
        gbc.setState(0xa8b3, 0x5a, 0x13c0, 0x45f0, 0xe92f, 0x97f3, 0x0, 0x0);
        gbc.writeMem(0xa8b3, { 0x94 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5a, gbc.sp());
        EXPECT(0xa8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa8b3));
        // 94 00BA
        gbc.setState(0xbf8a, 0xcd0b, 0x19e0, 0x5354, 0xa36, 0xac3e, 0x1, 0x1);
        gbc.writeMem(0xbf8a, { 0x94 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcd0b, gbc.sp());
        EXPECT(0xbf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbf8a));
        // 94 00BB
        gbc.setState(0x606a, 0x5c52, 0x6720, 0x3885, 0xcabd, 0xfb50, 0x1, 0x1);
        gbc.writeMem(0x606a, { 0x94 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5c52, gbc.sp());
        EXPECT(0x606b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00BD
        gbc.setState(0x40c7, 0x18d4, 0x40f0, 0xc613, 0x1e28, 0x1063, 0x0, 0x1);
        gbc.writeMem(0x40c7, { 0x94 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x18d4, gbc.sp());
        EXPECT(0x40c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00BE
        gbc.setState(0xe986, 0xf10b, 0x8890, 0xc339, 0xcef7, 0xc746, 0x1, 0x0);
        gbc.writeMem(0xe986, { 0x94 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf10b, gbc.sp());
        EXPECT(0xe987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe986));
        // 94 00BF
        gbc.setState(0x36be, 0x2bf5, 0x3160, 0xb4f0, 0x8d45, 0x5363, 0x0, 0x1);
        gbc.writeMem(0x36be, { 0x94 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2bf5, gbc.sp());
        EXPECT(0x36bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00C0
        gbc.setState(0x3539, 0x570e, 0x3fe0, 0x6d1, 0x4c2e, 0xc3a7, 0x1, 0x1);
        gbc.writeMem(0x3539, { 0x94 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x570e, gbc.sp());
        EXPECT(0x353a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00C1
        gbc.setState(0x1546, 0xccfd, 0x45d0, 0x8ca9, 0x3849, 0x81c4, 0x1, 0x0);
        gbc.writeMem(0x1546, { 0x94 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xccfd, gbc.sp());
        EXPECT(0x1547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00C2
        gbc.setState(0x22b8, 0x6e92, 0xaee0, 0xc5bb, 0x4c9b, 0x94de, 0x1, 0x1);
        gbc.writeMem(0x22b8, { 0x94 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6e92, gbc.sp());
        EXPECT(0x22b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00C3
        gbc.setState(0x6389, 0x609a, 0xda80, 0x876b, 0x5c3d, 0x6259, 0x0, 0x1);
        gbc.writeMem(0x6389, { 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x609a, gbc.sp());
        EXPECT(0x638a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00C4
        gbc.setState(0x3191, 0x1411, 0x5650, 0xd1f1, 0x731a, 0xaebd, 0x1, 0x1);
        gbc.writeMem(0x3191, { 0x94 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1411, gbc.sp());
        EXPECT(0x3192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00C5
        gbc.setState(0xbde8, 0xea3, 0x88c0, 0x6dce, 0xbf00, 0x8cba, 0x0, 0x1);
        gbc.writeMem(0xbde8, { 0x94 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xea3, gbc.sp());
        EXPECT(0xbde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbde8));
        // 94 00C6
        gbc.setState(0x3a64, 0x75af, 0x51c0, 0xfad4, 0x6659, 0x6279, 0x1, 0x1);
        gbc.writeMem(0x3a64, { 0x94 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x75af, gbc.sp());
        EXPECT(0x3a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00C7
        gbc.setState(0xcdbf, 0xf76c, 0xacc0, 0xf50a, 0x82de, 0x57de, 0x0, 0x1);
        gbc.writeMem(0xcdbf, { 0x94 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf76c, gbc.sp());
        EXPECT(0xcdc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcdbf));
        // 94 00C8
        gbc.setState(0x1817, 0xf6f7, 0x4d70, 0xf210, 0xef7c, 0xae11, 0x0, 0x0);
        gbc.writeMem(0x1817, { 0x94 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf6f7, gbc.sp());
        EXPECT(0x1818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00C9
        gbc.setState(0x9cdd, 0x4572, 0xc360, 0xc6db, 0xce3d, 0x1563, 0x1, 0x1);
        gbc.writeMem(0x9cdd, { 0x94 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4572, gbc.sp());
        EXPECT(0x9cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9cdd));
        // 94 00CA
        gbc.setState(0x8459, 0xc481, 0x4fd0, 0x12c4, 0xd292, 0x8469, 0x0, 0x1);
        gbc.writeMem(0x8459, { 0x94 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc481, gbc.sp());
        EXPECT(0x845a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8459));
        // 94 00CB
        gbc.setState(0x1ab0, 0x2e4f, 0xe4a0, 0x3d0e, 0x8aba, 0xff3b, 0x0, 0x1);
        gbc.writeMem(0x1ab0, { 0x94 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2e4f, gbc.sp());
        EXPECT(0x1ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00CC
        gbc.setState(0x9512, 0x75d9, 0x6440, 0xbfdf, 0xa014, 0x240b, 0x0, 0x1);
        gbc.writeMem(0x9512, { 0x94 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x75d9, gbc.sp());
        EXPECT(0x9513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9512));
        // 94 00CD
        gbc.setState(0xb2b4, 0xf002, 0x66c0, 0x265a, 0x8191, 0xdd12, 0x1, 0x1);
        gbc.writeMem(0xb2b4, { 0x94 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf002, gbc.sp());
        EXPECT(0xb2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb2b4));
        // 94 00CE
        gbc.setState(0xeb60, 0xf315, 0xf1a0, 0x3929, 0x7e51, 0x6c3f, 0x0, 0x1);
        gbc.writeMem(0xeb60, { 0x94 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf315, gbc.sp());
        EXPECT(0xeb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xeb60));
        // 94 00CF
        gbc.setState(0x100c, 0x81c7, 0x3a70, 0x2c9f, 0xb07d, 0x1906, 0x1, 0x1);
        gbc.writeMem(0x100c, { 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x81c7, gbc.sp());
        EXPECT(0x100d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00D0
        gbc.setState(0x987c, 0x74c8, 0x20, 0xfa1b, 0xb638, 0x8385, 0x1, 0x0);
        gbc.writeMem(0x987c, { 0x94 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x74c8, gbc.sp());
        EXPECT(0x987d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x987c));
        // 94 00D1
        gbc.setState(0xc253, 0x5422, 0x4150, 0x22ee, 0x30d9, 0x91c5, 0x0, 0x0);
        gbc.writeMem(0xc253, { 0x94 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5422, gbc.sp());
        EXPECT(0xc254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc253));
        // 94 00D2
        gbc.setState(0x24c3, 0xc22a, 0xa4d0, 0x53a0, 0x4d0b, 0xcb6d, 0x1, 0x1);
        gbc.writeMem(0x24c3, { 0x94 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc22a, gbc.sp());
        EXPECT(0x24c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00D3
        gbc.setState(0x640b, 0xb564, 0x1b80, 0x5cc8, 0xe76f, 0xf0b9, 0x0, 0x0);
        gbc.writeMem(0x640b, { 0x94 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb564, gbc.sp());
        EXPECT(0x640c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00D4
        gbc.setState(0x6b2e, 0x338d, 0x8980, 0x3c71, 0x1ed6, 0x4248, 0x0, 0x0);
        gbc.writeMem(0x6b2e, { 0x94 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x338d, gbc.sp());
        EXPECT(0x6b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00D5
        gbc.setState(0x6b3f, 0xf414, 0xc9f0, 0x5f5b, 0x26d9, 0xaf16, 0x1, 0x1);
        gbc.writeMem(0x6b3f, { 0x94 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf414, gbc.sp());
        EXPECT(0x6b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00D6
        gbc.setState(0x718f, 0x92bb, 0x2360, 0xa36e, 0xa33d, 0xb4bb, 0x1, 0x0);
        gbc.writeMem(0x718f, { 0x94 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x92bb, gbc.sp());
        EXPECT(0x7190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00D7
        gbc.setState(0xcd22, 0x6c96, 0xd620, 0x9416, 0xc5b9, 0x7c09, 0x0, 0x0);
        gbc.writeMem(0xcd22, { 0x94 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6c96, gbc.sp());
        EXPECT(0xcd23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcd22));
        // 94 00D8
        gbc.setState(0x81d3, 0x69f9, 0xb900, 0x8a60, 0xfc86, 0xf4c3, 0x1, 0x0);
        gbc.writeMem(0x81d3, { 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x69f9, gbc.sp());
        EXPECT(0x81d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x81d3));
        // 94 00D9
        gbc.setState(0x3855, 0x92ba, 0x6d10, 0xbbe1, 0xd20e, 0xaeca, 0x0, 0x0);
        gbc.writeMem(0x3855, { 0x94 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x92ba, gbc.sp());
        EXPECT(0x3856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00DA
        gbc.setState(0x278a, 0x9dfb, 0xd5b0, 0xc8c4, 0xa646, 0x7067, 0x1, 0x1);
        gbc.writeMem(0x278a, { 0x94 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9dfb, gbc.sp());
        EXPECT(0x278b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00DB
        gbc.setState(0xaed9, 0x4be9, 0xc4b0, 0x53c1, 0xe84a, 0x3244, 0x1, 0x1);
        gbc.writeMem(0xaed9, { 0x94 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4be9, gbc.sp());
        EXPECT(0xaeda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaed9));
        // 94 00DC
        gbc.setState(0xcb8e, 0x6eae, 0xbc10, 0xe278, 0x8c8e, 0xbe6, 0x0, 0x0);
        gbc.writeMem(0xcb8e, { 0x94 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6eae, gbc.sp());
        EXPECT(0xcb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcb8e));
        // 94 00DD
        gbc.setState(0x8214, 0x5922, 0xf220, 0xc17d, 0xe24, 0xb803, 0x0, 0x1);
        gbc.writeMem(0x8214, { 0x94 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5922, gbc.sp());
        EXPECT(0x8215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8214));
        // 94 00DE
        gbc.setState(0x9b41, 0xec44, 0x64c0, 0x84ca, 0xd75a, 0xbd50, 0x1, 0x1);
        gbc.writeMem(0x9b41, { 0x94 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xec44, gbc.sp());
        EXPECT(0x9b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9b41));
        // 94 00E0
        gbc.setState(0xecbb, 0x898e, 0x3ee0, 0x4270, 0xb88d, 0x5699, 0x1, 0x0);
        gbc.writeMem(0xecbb, { 0x94 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x898e, gbc.sp());
        EXPECT(0xecbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xecbb));
        // 94 00E1
        gbc.setState(0xc62, 0x8986, 0xbcc0, 0x1e5b, 0x552d, 0x3b90, 0x0, 0x1);
        gbc.writeMem(0xc62, { 0x94 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8986, gbc.sp());
        EXPECT(0xc63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00E2
        gbc.setState(0x78bb, 0x3472, 0xe240, 0xeada, 0xfbe0, 0xe128, 0x1, 0x1);
        gbc.writeMem(0x78bb, { 0x94 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3472, gbc.sp());
        EXPECT(0x78bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00E3
        gbc.setState(0xd39f, 0xa8a5, 0x3b30, 0x1efc, 0x82df, 0xb646, 0x1, 0x0);
        gbc.writeMem(0xd39f, { 0x94 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa8a5, gbc.sp());
        EXPECT(0xd3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd39f));
        // 94 00E4
        gbc.setState(0x91f2, 0x446f, 0x9b60, 0x80, 0x64e1, 0x69fb, 0x0, 0x0);
        gbc.writeMem(0x91f2, { 0x94 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x446f, gbc.sp());
        EXPECT(0x91f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x91f2));
        // 94 00E5
        gbc.setState(0x3b93, 0xb635, 0x3e70, 0x162a, 0x5bd7, 0x95c8, 0x1, 0x1);
        gbc.writeMem(0x3b93, { 0x94 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb635, gbc.sp());
        EXPECT(0x3b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00E6
        gbc.setState(0x37aa, 0xefec, 0x8030, 0x694d, 0x52ad, 0xd6e6, 0x0, 0x1);
        gbc.writeMem(0x37aa, { 0x94 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xefec, gbc.sp());
        EXPECT(0x37ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00E7
        gbc.setState(0x2138, 0xcd, 0xf460, 0x7cba, 0x8b9a, 0xae76, 0x0, 0x1);
        gbc.writeMem(0x2138, { 0x94 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcd, gbc.sp());
        EXPECT(0x2139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00E8
        gbc.setState(0x8b1f, 0xffac, 0x4940, 0xa156, 0xc918, 0xbd21, 0x1, 0x0);
        gbc.writeMem(0x8b1f, { 0x94 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xffac, gbc.sp());
        EXPECT(0x8b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8b1f));
        // 94 00E9
        gbc.setState(0xc2c4, 0xb196, 0x45e0, 0xd393, 0x698, 0x8e2d, 0x0, 0x1);
        gbc.writeMem(0xc2c4, { 0x94 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb196, gbc.sp());
        EXPECT(0xc2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc2c4));
        // 94 00EA
        gbc.setState(0x6cff, 0x665, 0x660, 0xebf6, 0xadfc, 0x64bc, 0x0, 0x0);
        gbc.writeMem(0x6cff, { 0x94 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x665, gbc.sp());
        EXPECT(0x6d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00EB
        gbc.setState(0xcb66, 0xc302, 0xb760, 0x190f, 0x4b5f, 0xbc81, 0x1, 0x0);
        gbc.writeMem(0xcb66, { 0x94 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc302, gbc.sp());
        EXPECT(0xcb67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcb66));
        // 94 00EC
        gbc.setState(0x8730, 0xd8e3, 0x760, 0x75, 0xc8c1, 0xd7d9, 0x1, 0x1);
        gbc.writeMem(0x8730, { 0x94 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd8e3, gbc.sp());
        EXPECT(0x8731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8730));
        // 94 00EF
        gbc.setState(0xc76e, 0xdabb, 0xbf60, 0x5fc2, 0xeea8, 0xb729, 0x0, 0x1);
        gbc.writeMem(0xc76e, { 0x94 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdabb, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc76e));
        // 94 00F0
        gbc.setState(0xc0e8, 0x5b34, 0xd890, 0x73a2, 0xc4fd, 0xee0a, 0x1, 0x0);
        gbc.writeMem(0xc0e8, { 0x94 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5b34, gbc.sp());
        EXPECT(0xc0e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc0e8));
        // 94 00F1
        gbc.setState(0xb20b, 0xa3b9, 0xfe90, 0x9cf2, 0x6ed9, 0x6f6, 0x1, 0x1);
        gbc.writeMem(0xb20b, { 0x94 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa3b9, gbc.sp());
        EXPECT(0xb20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb20b));
        // 94 00F2
        gbc.setState(0xe2b9, 0x8d4d, 0xb00, 0x3256, 0x1024, 0xf496, 0x1, 0x1);
        gbc.writeMem(0xe2b9, { 0x94 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8d4d, gbc.sp());
        EXPECT(0xe2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe2b9));
        // 94 00F3
        gbc.setState(0x512c, 0x3d86, 0xa390, 0x3882, 0x2835, 0x944, 0x1, 0x0);
        gbc.writeMem(0x512c, { 0x94 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3d86, gbc.sp());
        EXPECT(0x512d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00F4
        gbc.setState(0xcda6, 0xe607, 0xe10, 0xc3ab, 0x2bd, 0x86a7, 0x1, 0x1);
        gbc.writeMem(0xcda6, { 0x94 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe607, gbc.sp());
        EXPECT(0xcda7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcda6));
        // 94 00F5
        gbc.setState(0xc8fd, 0x94f3, 0x7b50, 0xba73, 0x79e3, 0x5128, 0x0, 0x1);
        gbc.writeMem(0xc8fd, { 0x94 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x94f3, gbc.sp());
        EXPECT(0xc8fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc8fd));
        // 94 00F6
        gbc.setState(0x474f, 0x5230, 0x1e50, 0x454a, 0x73e5, 0xe6a4, 0x1, 0x0);
        gbc.writeMem(0x474f, { 0x94 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5230, gbc.sp());
        EXPECT(0x4750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00F8
        gbc.setState(0xcf98, 0xfae1, 0x32e0, 0x54cb, 0x2e0f, 0xd471, 0x0, 0x0);
        gbc.writeMem(0xcf98, { 0x94 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfae1, gbc.sp());
        EXPECT(0xcf99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcf98));
        // 94 00F9
        gbc.setState(0x3f00, 0x3de0, 0xc130, 0xb3b1, 0x3602, 0xd8ca, 0x1, 0x1);
        gbc.writeMem(0x3f00, { 0x94 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3de0, gbc.sp());
        EXPECT(0x3f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 00FB
        gbc.setState(0x1b85, 0x7faf, 0xafc0, 0xe9d6, 0x4478, 0x31df, 0x0, 0x1);
        gbc.writeMem(0x1b85, { 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7faf, gbc.sp());
        EXPECT(0x1b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00FC
        gbc.setState(0x5dd8, 0x8e39, 0x3530, 0x53c4, 0xd13b, 0x1e8a, 0x0, 0x1);
        gbc.writeMem(0x5dd8, { 0x94 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8e39, gbc.sp());
        EXPECT(0x5dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00FD
        gbc.setState(0x3bbe, 0x277a, 0x8dc0, 0x60cb, 0x8b4c, 0x5cfc, 0x1, 0x0);
        gbc.writeMem(0x3bbe, { 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x277a, gbc.sp());
        EXPECT(0x3bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00FE
        gbc.setState(0x1f8a, 0xd051, 0xe6f0, 0x2ab8, 0x7e48, 0x8ec9, 0x0, 0x0);
        gbc.writeMem(0x1f8a, { 0x94 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd051, gbc.sp());
        EXPECT(0x1f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 00FF
        gbc.setState(0xa2bd, 0x51f, 0xc930, 0x6512, 0x5a41, 0x8822, 0x0, 0x1);
        gbc.writeMem(0xa2bd, { 0x94 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x51f, gbc.sp());
        EXPECT(0xa2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa2bd));
        // 94 0100
        gbc.setState(0xa957, 0x96ea, 0x6790, 0xa842, 0x2edb, 0x3bd8, 0x1, 0x0);
        gbc.writeMem(0xa957, { 0x94 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x96ea, gbc.sp());
        EXPECT(0xa958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa957));
        // 94 0101
        gbc.setState(0x7263, 0xd043, 0x4ca0, 0x20f6, 0x1ca7, 0x59b, 0x0, 0x1);
        gbc.writeMem(0x7263, { 0x94 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd043, gbc.sp());
        EXPECT(0x7264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0102
        gbc.setState(0x172, 0x8aea, 0xe00, 0x4fc0, 0xae41, 0x758e, 0x0, 0x1);
        gbc.writeMem(0x172, { 0x94 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8aea, gbc.sp());
        EXPECT(0x173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0103
        gbc.setState(0xee0b, 0xef20, 0x8870, 0x1442, 0xfb47, 0xd53, 0x0, 0x1);
        gbc.writeMem(0xee0b, { 0x94 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xef20, gbc.sp());
        EXPECT(0xee0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xee0b));
        // 94 0104
        gbc.setState(0x39e9, 0x5bd3, 0x4f30, 0x8ea8, 0x943c, 0x9804, 0x0, 0x0);
        gbc.writeMem(0x39e9, { 0x94 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5bd3, gbc.sp());
        EXPECT(0x39ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0105
        gbc.setState(0x3613, 0xd548, 0x60d0, 0xf9f7, 0x7d4e, 0x39bd, 0x1, 0x1);
        gbc.writeMem(0x3613, { 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd548, gbc.sp());
        EXPECT(0x3614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0106
        gbc.setState(0x5ea9, 0x56fd, 0xb4f0, 0xb667, 0xcbe5, 0xc7b, 0x0, 0x0);
        gbc.writeMem(0x5ea9, { 0x94 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x56fd, gbc.sp());
        EXPECT(0x5eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0107
        gbc.setState(0x5a51, 0x24f2, 0x1bc0, 0x1c2, 0x5a51, 0xe41e, 0x1, 0x1);
        gbc.writeMem(0x5a51, { 0x94 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x24f2, gbc.sp());
        EXPECT(0x5a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0108
        gbc.setState(0x7c3c, 0x777a, 0x9c80, 0x4681, 0xdbaa, 0x3bf, 0x1, 0x0);
        gbc.writeMem(0x7c3c, { 0x94 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x777a, gbc.sp());
        EXPECT(0x7c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0109
        gbc.setState(0xbaf9, 0x86e0, 0xee50, 0x5e2f, 0x2c56, 0x20b2, 0x0, 0x1);
        gbc.writeMem(0xbaf9, { 0x94 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x86e0, gbc.sp());
        EXPECT(0xbafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbaf9));
        // 94 010A
        gbc.setState(0x39c1, 0x7e9b, 0x7a60, 0x1741, 0x64e3, 0xd47f, 0x1, 0x0);
        gbc.writeMem(0x39c1, { 0x94 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7e9b, gbc.sp());
        EXPECT(0x39c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 010B
        gbc.setState(0x9a72, 0xaf2c, 0xba30, 0xa9d, 0x246b, 0x5e08, 0x1, 0x1);
        gbc.writeMem(0x9a72, { 0x94 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xaf2c, gbc.sp());
        EXPECT(0x9a73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9a72));
        // 94 010C
        gbc.setState(0x5675, 0xb8e5, 0x9d90, 0x272, 0xb8b9, 0xc58, 0x0, 0x1);
        gbc.writeMem(0x5675, { 0x94 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb8e5, gbc.sp());
        EXPECT(0x5676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 010D
        gbc.setState(0xc1f9, 0x2b56, 0x2a10, 0xa5dd, 0x3c22, 0x640f, 0x1, 0x1);
        gbc.writeMem(0xc1f9, { 0x94 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2b56, gbc.sp());
        EXPECT(0xc1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc1f9));
        // 94 010E
        gbc.setState(0xeb51, 0x1e09, 0x9220, 0x41cc, 0xa860, 0x40b4, 0x1, 0x1);
        gbc.writeMem(0xeb51, { 0x94 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1e09, gbc.sp());
        EXPECT(0xeb52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xeb51));
        // 94 010F
        gbc.setState(0xa5e7, 0xf4f2, 0x9760, 0xc5d3, 0xf116, 0x95e4, 0x0, 0x1);
        gbc.writeMem(0xa5e7, { 0x94 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf4f2, gbc.sp());
        EXPECT(0xa5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa5e7));
        // 94 0110
        gbc.setState(0xeefc, 0x875b, 0x41b0, 0xaeee, 0xc934, 0xd095, 0x0, 0x1);
        gbc.writeMem(0xeefc, { 0x94 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x875b, gbc.sp());
        EXPECT(0xeefd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xeefc));
        // 94 0111
        gbc.setState(0x38b, 0x61a, 0xc790, 0xe3c0, 0x2524, 0x6e80, 0x1, 0x1);
        gbc.writeMem(0x38b, { 0x94 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x61a, gbc.sp());
        EXPECT(0x38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0112
        gbc.setState(0xc619, 0x38cb, 0xbeb0, 0xacc0, 0x1431, 0x8938, 0x0, 0x0);
        gbc.writeMem(0xc619, { 0x94 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x38cb, gbc.sp());
        EXPECT(0xc61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc619));
        // 94 0113
        gbc.setState(0xd861, 0x8255, 0x5150, 0x1b8a, 0x590e, 0x5593, 0x1, 0x0);
        gbc.writeMem(0xd861, { 0x94 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8255, gbc.sp());
        EXPECT(0xd862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd861));
        // 94 0115
        gbc.setState(0xc869, 0x22ab, 0xdb10, 0x148d, 0x5eb7, 0x5d4b, 0x0, 0x0);
        gbc.writeMem(0xc869, { 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x22ab, gbc.sp());
        EXPECT(0xc86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc869));
        // 94 0116
        gbc.setState(0x9d42, 0xd462, 0x6460, 0x393d, 0x4a5f, 0xaa85, 0x0, 0x1);
        gbc.writeMem(0x9d42, { 0x94 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd462, gbc.sp());
        EXPECT(0x9d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9d42));
        // 94 0117
        gbc.setState(0xd18a, 0x316b, 0xed70, 0x727e, 0x1662, 0x6985, 0x0, 0x1);
        gbc.writeMem(0xd18a, { 0x94 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x316b, gbc.sp());
        EXPECT(0xd18b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd18a));
        // 94 0118
        gbc.setState(0xc5da, 0x3fe5, 0x2c80, 0xd2f8, 0x5b0c, 0x882a, 0x0, 0x1);
        gbc.writeMem(0xc5da, { 0x94 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3fe5, gbc.sp());
        EXPECT(0xc5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc5da));
        // 94 0119
        gbc.setState(0x7243, 0xaec5, 0x4260, 0x3795, 0xec0d, 0x5b95, 0x1, 0x0);
        gbc.writeMem(0x7243, { 0x94 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xaec5, gbc.sp());
        EXPECT(0x7244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 011A
        gbc.setState(0x707e, 0xfbc0, 0xd1e0, 0x22c8, 0x75bf, 0x1e30, 0x0, 0x1);
        gbc.writeMem(0x707e, { 0x94 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfbc0, gbc.sp());
        EXPECT(0x707f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 011B
        gbc.setState(0xa3de, 0x3db0, 0x89e0, 0xb7b7, 0xb467, 0xa530, 0x1, 0x1);
        gbc.writeMem(0xa3de, { 0x94 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3db0, gbc.sp());
        EXPECT(0xa3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa3de));
        // 94 011C
        gbc.setState(0x95de, 0x515a, 0xd530, 0xbcda, 0x848d, 0x9ff9, 0x1, 0x0);
        gbc.writeMem(0x95de, { 0x94 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x515a, gbc.sp());
        EXPECT(0x95df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x95de));
        // 94 011D
        gbc.setState(0x50c8, 0x1cce, 0x1430, 0xda14, 0xe4db, 0x73b2, 0x0, 0x0);
        gbc.writeMem(0x50c8, { 0x94 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1cce, gbc.sp());
        EXPECT(0x50c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 011E
        gbc.setState(0x10b, 0x93b1, 0x1f10, 0x1425, 0x2871, 0xcf60, 0x0, 0x1);
        gbc.writeMem(0x10b, { 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x93b1, gbc.sp());
        EXPECT(0x10c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 011F
        gbc.setState(0xb425, 0xe04c, 0x1370, 0x14a6, 0x317, 0x8268, 0x0, 0x0);
        gbc.writeMem(0xb425, { 0x94 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe04c, gbc.sp());
        EXPECT(0xb426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb425));
        // 94 0120
        gbc.setState(0x7e5f, 0x4893, 0x260, 0x7405, 0x43b0, 0x193f, 0x0, 0x1);
        gbc.writeMem(0x7e5f, { 0x94 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4893, gbc.sp());
        EXPECT(0x7e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0121
        gbc.setState(0xb302, 0x4388, 0x63f0, 0x89ed, 0xad6, 0xf4, 0x0, 0x0);
        gbc.writeMem(0xb302, { 0x94 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4388, gbc.sp());
        EXPECT(0xb303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb302));
        // 94 0122
        gbc.setState(0xe7b8, 0xddd4, 0x120, 0xbc10, 0x4455, 0x4737, 0x0, 0x1);
        gbc.writeMem(0xe7b8, { 0x94 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xddd4, gbc.sp());
        EXPECT(0xe7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe7b8));
        // 94 0123
        gbc.setState(0x13e0, 0x844a, 0x91b0, 0x1561, 0x7c03, 0xe3b6, 0x0, 0x0);
        gbc.writeMem(0x13e0, { 0x94 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0x13e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0124
        gbc.setState(0xd518, 0xa1ec, 0x68f0, 0x3d61, 0x6ea5, 0xb03d, 0x1, 0x1);
        gbc.writeMem(0xd518, { 0x94 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa1ec, gbc.sp());
        EXPECT(0xd519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd518));
        // 94 0125
        gbc.setState(0x666c, 0x4bea, 0xd4d0, 0x3aed, 0x4d91, 0xb251, 0x0, 0x0);
        gbc.writeMem(0x666c, { 0x94 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4bea, gbc.sp());
        EXPECT(0x666d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0126
        gbc.setState(0x6246, 0x83c7, 0x46c0, 0x57a1, 0x4d4b, 0x44d0, 0x1, 0x0);
        gbc.writeMem(0x6246, { 0x94 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x83c7, gbc.sp());
        EXPECT(0x6247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0128
        gbc.setState(0xa43c, 0x77e4, 0x8a50, 0x87de, 0x947a, 0x8366, 0x1, 0x1);
        gbc.writeMem(0xa43c, { 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x77e4, gbc.sp());
        EXPECT(0xa43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa43c));
        // 94 0129
        gbc.setState(0x26b3, 0xeaae, 0xa910, 0x912b, 0x3e26, 0x3358, 0x0, 0x0);
        gbc.writeMem(0x26b3, { 0x94 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xeaae, gbc.sp());
        EXPECT(0x26b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 012A
        gbc.setState(0x6375, 0x8b41, 0x2c60, 0xdcaf, 0x2504, 0x9126, 0x0, 0x1);
        gbc.writeMem(0x6375, { 0x94 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8b41, gbc.sp());
        EXPECT(0x6376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 012B
        gbc.setState(0xb6eb, 0x8095, 0xb3f0, 0xfa06, 0x246e, 0x5696, 0x0, 0x1);
        gbc.writeMem(0xb6eb, { 0x94 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8095, gbc.sp());
        EXPECT(0xb6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb6eb));
        // 94 012C
        gbc.setState(0x2cb1, 0xb681, 0x15f0, 0x81aa, 0xa3a8, 0x32bc, 0x1, 0x0);
        gbc.writeMem(0x2cb1, { 0x94 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb681, gbc.sp());
        EXPECT(0x2cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 012D
        gbc.setState(0x3415, 0x9a20, 0x77e0, 0x807c, 0x9e43, 0xe20d, 0x0, 0x0);
        gbc.writeMem(0x3415, { 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9a20, gbc.sp());
        EXPECT(0x3416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 012E
        gbc.setState(0xc010, 0x5155, 0xcb0, 0x5e35, 0x4ca8, 0xd9e3, 0x0, 0x0);
        gbc.writeMem(0xc010, { 0x94 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5155, gbc.sp());
        EXPECT(0xc011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc010));
        // 94 012F
        gbc.setState(0xc66f, 0x8ac1, 0x1ff0, 0x4de1, 0xaac1, 0x8105, 0x0, 0x1);
        gbc.writeMem(0xc66f, { 0x94 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8ac1, gbc.sp());
        EXPECT(0xc670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc66f));
        // 94 0130
        gbc.setState(0x9e1a, 0x7f5c, 0x69b0, 0x4c8b, 0x63f9, 0xb334, 0x1, 0x0);
        gbc.writeMem(0x9e1a, { 0x94 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7f5c, gbc.sp());
        EXPECT(0x9e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9e1a));
        // 94 0131
        gbc.setState(0xbb5a, 0x2e90, 0x98d0, 0xe1cc, 0xcc60, 0x8a4f, 0x0, 0x0);
        gbc.writeMem(0xbb5a, { 0x94 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2e90, gbc.sp());
        EXPECT(0xbb5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbb5a));
        // 94 0133
        gbc.setState(0x8248, 0x2fd0, 0x8980, 0xab81, 0x7c6, 0xddfd, 0x0, 0x1);
        gbc.writeMem(0x8248, { 0x94 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2fd0, gbc.sp());
        EXPECT(0x8249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8248));
        // 94 0134
        gbc.setState(0x6281, 0xeec7, 0xf2f0, 0x3228, 0x1e21, 0xb0fd, 0x0, 0x1);
        gbc.writeMem(0x6281, { 0x94 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xeec7, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0135
        gbc.setState(0x5ba6, 0x2ae3, 0x4ce0, 0xfb80, 0x11c5, 0x1263, 0x0, 0x1);
        gbc.writeMem(0x5ba6, { 0x94 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2ae3, gbc.sp());
        EXPECT(0x5ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0136
        gbc.setState(0xeaea, 0x66f0, 0xb510, 0xbfb3, 0x527c, 0xab0e, 0x0, 0x1);
        gbc.writeMem(0xeaea, { 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x66f0, gbc.sp());
        EXPECT(0xeaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xeaea));
        // 94 0137
        gbc.setState(0xc7ef, 0x71f6, 0x5b40, 0x21fc, 0xbf98, 0x9e3a, 0x1, 0x1);
        gbc.writeMem(0xc7ef, { 0x94 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x71f6, gbc.sp());
        EXPECT(0xc7f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc7ef));
        // 94 0138
        gbc.setState(0x7b49, 0x6fb, 0x7e40, 0xf0db, 0x742a, 0x7b59, 0x0, 0x0);
        gbc.writeMem(0x7b49, { 0x94 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6fb, gbc.sp());
        EXPECT(0x7b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 013A
        gbc.setState(0x4a6b, 0x9a17, 0x75a0, 0x6595, 0xfc50, 0x4f71, 0x1, 0x1);
        gbc.writeMem(0x4a6b, { 0x94 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9a17, gbc.sp());
        EXPECT(0x4a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 013B
        gbc.setState(0x2aa1, 0xd710, 0xb890, 0x4e00, 0x41b7, 0x5437, 0x0, 0x0);
        gbc.writeMem(0x2aa1, { 0x94 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd710, gbc.sp());
        EXPECT(0x2aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 013C
        gbc.setState(0xbb71, 0x5f6f, 0xddf0, 0x4315, 0x79d4, 0x3eaf, 0x0, 0x0);
        gbc.writeMem(0xbb71, { 0x94 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0xbb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbb71));
        // 94 013D
        gbc.setState(0x6840, 0x542d, 0x9cd0, 0x153e, 0xc1d, 0xd51e, 0x0, 0x0);
        gbc.writeMem(0x6840, { 0x94 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x542d, gbc.sp());
        EXPECT(0x6841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 013E
        gbc.setState(0x2a9a, 0xcf1f, 0x4700, 0xc2fd, 0xa452, 0xafbd, 0x0, 0x0);
        gbc.writeMem(0x2a9a, { 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcf1f, gbc.sp());
        EXPECT(0x2a9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 013F
        gbc.setState(0x3278, 0x6751, 0xdcc0, 0x8f24, 0x5d9f, 0xc65a, 0x0, 0x1);
        gbc.writeMem(0x3278, { 0x94 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6751, gbc.sp());
        EXPECT(0x3279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0140
        gbc.setState(0xf71, 0xb6f, 0xba30, 0x3c50, 0x2438, 0x2ce7, 0x0, 0x0);
        gbc.writeMem(0xf71, { 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb6f, gbc.sp());
        EXPECT(0xf72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0141
        gbc.setState(0x939a, 0x185c, 0x2ad0, 0x9423, 0x41b, 0x949a, 0x0, 0x0);
        gbc.writeMem(0x939a, { 0x94 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x185c, gbc.sp());
        EXPECT(0x939b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x939a));
        // 94 0142
        gbc.setState(0x652b, 0xe8ee, 0x7110, 0xf8d1, 0x11e7, 0x967f, 0x1, 0x0);
        gbc.writeMem(0x652b, { 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe8ee, gbc.sp());
        EXPECT(0x652c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0143
        gbc.setState(0xc455, 0x6c4b, 0x1ed0, 0x7bdb, 0x613d, 0xb1d7, 0x0, 0x0);
        gbc.writeMem(0xc455, { 0x94 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6c4b, gbc.sp());
        EXPECT(0xc456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc455));
        // 94 0144
        gbc.setState(0xa64a, 0xe2ad, 0x6110, 0x491f, 0xbac3, 0xcf42, 0x1, 0x1);
        gbc.writeMem(0xa64a, { 0x94 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe2ad, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa64a));
        // 94 0145
        gbc.setState(0x6bdb, 0x697d, 0x6b40, 0x48ae, 0xef6, 0x7d41, 0x0, 0x0);
        gbc.writeMem(0x6bdb, { 0x94 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x697d, gbc.sp());
        EXPECT(0x6bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0146
        gbc.setState(0x77fe, 0x50a0, 0x45e0, 0xe364, 0x7bb0, 0x1ed2, 0x1, 0x0);
        gbc.writeMem(0x77fe, { 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x50a0, gbc.sp());
        EXPECT(0x77ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0147
        gbc.setState(0x4887, 0x5b2a, 0x3890, 0xfd20, 0x6261, 0xd7c5, 0x0, 0x1);
        gbc.writeMem(0x4887, { 0x94 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5b2a, gbc.sp());
        EXPECT(0x4888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0148
        gbc.setState(0x52ec, 0xc3e2, 0x49e0, 0xc65f, 0xd0ad, 0x8a6c, 0x1, 0x1);
        gbc.writeMem(0x52ec, { 0x94 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc3e2, gbc.sp());
        EXPECT(0x52ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0149
        gbc.setState(0x761e, 0x19e, 0x6630, 0x7000, 0x5ff2, 0x8743, 0x1, 0x1);
        gbc.writeMem(0x761e, { 0x94 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x19e, gbc.sp());
        EXPECT(0x761f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 014A
        gbc.setState(0x97c0, 0xf927, 0xc220, 0x277a, 0xf978, 0xc0b0, 0x1, 0x1);
        gbc.writeMem(0x97c0, { 0x94 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf927, gbc.sp());
        EXPECT(0x97c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x97c0));
        // 94 014B
        gbc.setState(0x78b1, 0x7ccb, 0x8960, 0xf8cb, 0xd9aa, 0x9087, 0x1, 0x0);
        gbc.writeMem(0x78b1, { 0x94 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7ccb, gbc.sp());
        EXPECT(0x78b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 014C
        gbc.setState(0x7eee, 0xdae0, 0x2d20, 0x13e5, 0xf4bc, 0x864d, 0x0, 0x1);
        gbc.writeMem(0x7eee, { 0x94 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdae0, gbc.sp());
        EXPECT(0x7eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 014D
        gbc.setState(0xd519, 0xfabf, 0xc1d0, 0x3269, 0xe703, 0x3827, 0x1, 0x1);
        gbc.writeMem(0xd519, { 0x94 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfabf, gbc.sp());
        EXPECT(0xd51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd519));
        // 94 014E
        gbc.setState(0xbdb3, 0x9602, 0xa590, 0x75f2, 0x5b95, 0x4cf2, 0x1, 0x1);
        gbc.writeMem(0xbdb3, { 0x94 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9602, gbc.sp());
        EXPECT(0xbdb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbdb3));
        // 94 014F
        gbc.setState(0xa356, 0x164e, 0xaab0, 0xfa36, 0xd28d, 0xb42d, 0x1, 0x0);
        gbc.writeMem(0xa356, { 0x94 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x164e, gbc.sp());
        EXPECT(0xa357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa356));
        // 94 0150
        gbc.setState(0xaa59, 0x6c36, 0x11f0, 0xb475, 0xb831, 0x4cf, 0x0, 0x0);
        gbc.writeMem(0xaa59, { 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6c36, gbc.sp());
        EXPECT(0xaa5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaa59));
        // 94 0151
        gbc.setState(0x9723, 0x4631, 0xd5c0, 0xe0af, 0x560d, 0x6561, 0x0, 0x1);
        gbc.writeMem(0x9723, { 0x94 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4631, gbc.sp());
        EXPECT(0x9724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9723));
        // 94 0152
        gbc.setState(0xd06, 0x256e, 0x2160, 0xe887, 0x6bec, 0x6797, 0x1, 0x1);
        gbc.writeMem(0xd06, { 0x94 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x256e, gbc.sp());
        EXPECT(0xd07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0153
        gbc.setState(0x13c3, 0xd8b4, 0x5e90, 0x581b, 0x776d, 0x7de1, 0x1, 0x0);
        gbc.writeMem(0x13c3, { 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd8b4, gbc.sp());
        EXPECT(0x13c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0154
        gbc.setState(0xe10, 0x761a, 0x200, 0xe54a, 0x5194, 0x65dd, 0x1, 0x0);
        gbc.writeMem(0xe10, { 0x94 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x761a, gbc.sp());
        EXPECT(0xe11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0155
        gbc.setState(0x5cfd, 0x1e1f, 0xfca0, 0x6c84, 0xc7cb, 0xaed3, 0x1, 0x0);
        gbc.writeMem(0x5cfd, { 0x94 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1e1f, gbc.sp());
        EXPECT(0x5cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0156
        gbc.setState(0x3353, 0x770d, 0x3e70, 0xacf6, 0x4cae, 0x4471, 0x1, 0x0);
        gbc.writeMem(0x3353, { 0x94 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x770d, gbc.sp());
        EXPECT(0x3354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0157
        gbc.setState(0xbc80, 0x54cd, 0xa240, 0x5afe, 0x5ef1, 0x9ed5, 0x1, 0x1);
        gbc.writeMem(0xbc80, { 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x54cd, gbc.sp());
        EXPECT(0xbc81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbc80));
        // 94 0158
        gbc.setState(0x52e8, 0x72a7, 0xc290, 0xb86c, 0x601a, 0x8e3a, 0x1, 0x0);
        gbc.writeMem(0x52e8, { 0x94 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x72a7, gbc.sp());
        EXPECT(0x52e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0159
        gbc.setState(0x7cb4, 0xe3f, 0xa970, 0x50af, 0x6b0e, 0x11ae, 0x0, 0x0);
        gbc.writeMem(0x7cb4, { 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe3f, gbc.sp());
        EXPECT(0x7cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 015A
        gbc.setState(0x4642, 0xcdb3, 0xb0b0, 0x637d, 0xc0fd, 0xbdbb, 0x1, 0x1);
        gbc.writeMem(0x4642, { 0x94 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcdb3, gbc.sp());
        EXPECT(0x4643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 015B
        gbc.setState(0x4f75, 0xa070, 0x4900, 0x8d1a, 0x5420, 0xa018, 0x1, 0x0);
        gbc.writeMem(0x4f75, { 0x94 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa070, gbc.sp());
        EXPECT(0x4f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 015C
        gbc.setState(0x37b7, 0x1c30, 0x81a0, 0xde7c, 0x5289, 0xb173, 0x0, 0x0);
        gbc.writeMem(0x37b7, { 0x94 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1c30, gbc.sp());
        EXPECT(0x37b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 015E
        gbc.setState(0xd45d, 0xaaae, 0x64c0, 0xdfb5, 0x5cfd, 0xb956, 0x1, 0x1);
        gbc.writeMem(0xd45d, { 0x94 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xaaae, gbc.sp());
        EXPECT(0xd45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd45d));
        // 94 015F
        gbc.setState(0xb49d, 0x2e36, 0x16e0, 0x8a74, 0x9b03, 0xe366, 0x1, 0x0);
        gbc.writeMem(0xb49d, { 0x94 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2e36, gbc.sp());
        EXPECT(0xb49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb49d));
        // 94 0160
        gbc.setState(0x1399, 0xacd1, 0xb450, 0x4fb5, 0xa427, 0x7d8, 0x1, 0x1);
        gbc.writeMem(0x1399, { 0x94 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xacd1, gbc.sp());
        EXPECT(0x139a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0161
        gbc.setState(0xd66d, 0x3201, 0xf040, 0x70e, 0x4e80, 0xaac6, 0x0, 0x0);
        gbc.writeMem(0xd66d, { 0x94 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3201, gbc.sp());
        EXPECT(0xd66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd66d));
        // 94 0162
        gbc.setState(0xa7ce, 0x8384, 0x6550, 0xc06f, 0xebe4, 0x75a2, 0x0, 0x0);
        gbc.writeMem(0xa7ce, { 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8384, gbc.sp());
        EXPECT(0xa7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa7ce));
        // 94 0163
        gbc.setState(0x5a11, 0x402e, 0xb4b0, 0x5842, 0x8f60, 0x4c93, 0x1, 0x0);
        gbc.writeMem(0x5a11, { 0x94 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x402e, gbc.sp());
        EXPECT(0x5a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0164
        gbc.setState(0x8771, 0x918d, 0x1240, 0xf43, 0x6295, 0x221c, 0x1, 0x1);
        gbc.writeMem(0x8771, { 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x918d, gbc.sp());
        EXPECT(0x8772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8771));
        // 94 0165
        gbc.setState(0xbd00, 0x2c69, 0xbb90, 0x72bc, 0x2fb4, 0xd091, 0x0, 0x0);
        gbc.writeMem(0xbd00, { 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2c69, gbc.sp());
        EXPECT(0xbd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbd00));
        // 94 0166
        gbc.setState(0x86b8, 0xdd26, 0x85e0, 0xbb6e, 0xade6, 0x4a91, 0x0, 0x0);
        gbc.writeMem(0x86b8, { 0x94 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdd26, gbc.sp());
        EXPECT(0x86b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x86b8));
        // 94 0167
        gbc.setState(0xd555, 0x6051, 0x3e80, 0x80cf, 0xf8d4, 0x8f32, 0x0, 0x0);
        gbc.writeMem(0xd555, { 0x94 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6051, gbc.sp());
        EXPECT(0xd556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd555));
        // 94 0168
        gbc.setState(0xdc24, 0xb77d, 0x75e0, 0x9f20, 0x8757, 0x95eb, 0x0, 0x0);
        gbc.writeMem(0xdc24, { 0x94 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb77d, gbc.sp());
        EXPECT(0xdc25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdc24));
        // 94 0169
        gbc.setState(0x444d, 0x90cd, 0x2440, 0xac08, 0xb71a, 0xd533, 0x0, 0x0);
        gbc.writeMem(0x444d, { 0x94 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x90cd, gbc.sp());
        EXPECT(0x444e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 016A
        gbc.setState(0xbef4, 0x812c, 0x4ce0, 0x14b7, 0x2181, 0xe35d, 0x0, 0x1);
        gbc.writeMem(0xbef4, { 0x94 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x812c, gbc.sp());
        EXPECT(0xbef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbef4));
        // 94 016B
        gbc.setState(0xeb95, 0xe4de, 0xfab0, 0xca3c, 0xcc67, 0xd166, 0x0, 0x0);
        gbc.writeMem(0xeb95, { 0x94 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe4de, gbc.sp());
        EXPECT(0xeb96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xeb95));
        // 94 016D
        gbc.setState(0x4e4a, 0xd72, 0xac40, 0xd15e, 0x2fc7, 0x90e5, 0x1, 0x0);
        gbc.writeMem(0x4e4a, { 0x94 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd72, gbc.sp());
        EXPECT(0x4e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 016E
        gbc.setState(0x208f, 0x4fbe, 0xefb0, 0x882, 0x86ec, 0x82ff, 0x1, 0x0);
        gbc.writeMem(0x208f, { 0x94 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4fbe, gbc.sp());
        EXPECT(0x2090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 016F
        gbc.setState(0x5e58, 0x53d1, 0x2bf0, 0xfa68, 0xeedf, 0xbdda, 0x1, 0x1);
        gbc.writeMem(0x5e58, { 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x53d1, gbc.sp());
        EXPECT(0x5e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0170
        gbc.setState(0xbdf3, 0xa282, 0xd80, 0x9cbc, 0x3b55, 0x39ce, 0x0, 0x0);
        gbc.writeMem(0xbdf3, { 0x94 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa282, gbc.sp());
        EXPECT(0xbdf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbdf3));
        // 94 0171
        gbc.setState(0x58ed, 0x8aef, 0x8200, 0x4203, 0xe40c, 0xaf95, 0x0, 0x1);
        gbc.writeMem(0x58ed, { 0x94 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8aef, gbc.sp());
        EXPECT(0x58ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0172
        gbc.setState(0x7cc1, 0x7b1d, 0x3530, 0x4d2d, 0x4f7f, 0xe8d2, 0x0, 0x0);
        gbc.writeMem(0x7cc1, { 0x94 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7b1d, gbc.sp());
        EXPECT(0x7cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0173
        gbc.setState(0xb26f, 0xd10d, 0xde0, 0xd5a3, 0xaae8, 0xc01, 0x1, 0x1);
        gbc.writeMem(0xb26f, { 0x94 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd10d, gbc.sp());
        EXPECT(0xb270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb26f));
        // 94 0175
        gbc.setState(0x77b2, 0xd896, 0x25e0, 0x51b2, 0xfec0, 0x7bf9, 0x0, 0x0);
        gbc.writeMem(0x77b2, { 0x94 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd896, gbc.sp());
        EXPECT(0x77b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0176
        gbc.setState(0xd468, 0x3346, 0x6160, 0x6a8f, 0x4441, 0x2144, 0x0, 0x1);
        gbc.writeMem(0xd468, { 0x94 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3346, gbc.sp());
        EXPECT(0xd469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd468));
        // 94 0177
        gbc.setState(0x7c27, 0xa2b2, 0xa20, 0x31c8, 0x573a, 0xf071, 0x0, 0x1);
        gbc.writeMem(0x7c27, { 0x94 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa2b2, gbc.sp());
        EXPECT(0x7c28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0178
        gbc.setState(0xdf4c, 0x9803, 0x4f60, 0xe3c4, 0xeed9, 0xea80, 0x0, 0x0);
        gbc.writeMem(0xdf4c, { 0x94 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9803, gbc.sp());
        EXPECT(0xdf4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdf4c));
        // 94 017A
        gbc.setState(0x7d61, 0xa534, 0xcd90, 0xc147, 0x721e, 0xdf1a, 0x1, 0x0);
        gbc.writeMem(0x7d61, { 0x94 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa534, gbc.sp());
        EXPECT(0x7d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 017B
        gbc.setState(0x46cb, 0x3f7f, 0x2b90, 0x5773, 0xecc7, 0xa56e, 0x1, 0x1);
        gbc.writeMem(0x46cb, { 0x94 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3f7f, gbc.sp());
        EXPECT(0x46cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 017C
        gbc.setState(0xf37, 0xd40c, 0xaf00, 0x4b21, 0x9201, 0x117e, 0x1, 0x1);
        gbc.writeMem(0xf37, { 0x94 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd40c, gbc.sp());
        EXPECT(0xf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 017D
        gbc.setState(0x6d91, 0xa344, 0xd1c0, 0xe4fe, 0xf4b, 0x4df7, 0x0, 0x0);
        gbc.writeMem(0x6d91, { 0x94 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa344, gbc.sp());
        EXPECT(0x6d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 017E
        gbc.setState(0x4c87, 0x9ec5, 0xdc30, 0xacac, 0x4748, 0xe991, 0x1, 0x1);
        gbc.writeMem(0x4c87, { 0x94 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9ec5, gbc.sp());
        EXPECT(0x4c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 017F
        gbc.setState(0xcba4, 0x6ed5, 0xa6c0, 0xe803, 0xaf5e, 0x904f, 0x0, 0x0);
        gbc.writeMem(0xcba4, { 0x94 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6ed5, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcba4));
        // 94 0180
        gbc.setState(0x6751, 0xd1f5, 0xfdf0, 0x9a68, 0xdb92, 0xe4ba, 0x1, 0x1);
        gbc.writeMem(0x6751, { 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd1f5, gbc.sp());
        EXPECT(0x6752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0181
        gbc.setState(0xe2b7, 0x3acf, 0x54a0, 0xd265, 0xc52e, 0xb9fc, 0x1, 0x1);
        gbc.writeMem(0xe2b7, { 0x94 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3acf, gbc.sp());
        EXPECT(0xe2b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe2b7));
        // 94 0182
        gbc.setState(0x8cf1, 0x9f1f, 0x9420, 0x20e7, 0xc9bd, 0x8778, 0x0, 0x0);
        gbc.writeMem(0x8cf1, { 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9f1f, gbc.sp());
        EXPECT(0x8cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8cf1));
        // 94 0183
        gbc.setState(0xa637, 0xbd17, 0xc890, 0x6b9e, 0x1209, 0x8a7c, 0x1, 0x0);
        gbc.writeMem(0xa637, { 0x94 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbd17, gbc.sp());
        EXPECT(0xa638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa637));
        // 94 0184
        gbc.setState(0x1c23, 0xf5ad, 0x40e0, 0xd5c8, 0x91af, 0x584, 0x1, 0x1);
        gbc.writeMem(0x1c23, { 0x94 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf5ad, gbc.sp());
        EXPECT(0x1c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0185
        gbc.setState(0x2f9e, 0xd26e, 0x3f10, 0xd3ac, 0x50f6, 0xbd5e, 0x1, 0x0);
        gbc.writeMem(0x2f9e, { 0x94 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd26e, gbc.sp());
        EXPECT(0x2f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0186
        gbc.setState(0xbe6, 0x3ca5, 0x1a0, 0xa17d, 0x1a15, 0xa9b7, 0x0, 0x0);
        gbc.writeMem(0xbe6, { 0x94 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3ca5, gbc.sp());
        EXPECT(0xbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0187
        gbc.setState(0xc8e, 0xf5a0, 0x1710, 0xe4fe, 0xbac8, 0xadee, 0x1, 0x1);
        gbc.writeMem(0xc8e, { 0x94 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf5a0, gbc.sp());
        EXPECT(0xc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0188
        gbc.setState(0x9878, 0x5ddd, 0x3040, 0xc928, 0x25e8, 0xeac0, 0x0, 0x1);
        gbc.writeMem(0x9878, { 0x94 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5ddd, gbc.sp());
        EXPECT(0x9879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9878));
        // 94 0189
        gbc.setState(0x7157, 0x6114, 0x5b30, 0x9819, 0x4af, 0xae4e, 0x1, 0x0);
        gbc.writeMem(0x7157, { 0x94 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6114, gbc.sp());
        EXPECT(0x7158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 018A
        gbc.setState(0x122b, 0x4611, 0x9980, 0xf30e, 0x6e72, 0x9544, 0x1, 0x1);
        gbc.writeMem(0x122b, { 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4611, gbc.sp());
        EXPECT(0x122c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 018B
        gbc.setState(0x3e68, 0x8912, 0x3ed0, 0x92a9, 0xf028, 0x199c, 0x1, 0x1);
        gbc.writeMem(0x3e68, { 0x94 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8912, gbc.sp());
        EXPECT(0x3e69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 018C
        gbc.setState(0x52f0, 0x48ce, 0x3200, 0x797e, 0x897f, 0x8886, 0x1, 0x1);
        gbc.writeMem(0x52f0, { 0x94 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x48ce, gbc.sp());
        EXPECT(0x52f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 018D
        gbc.setState(0x4a33, 0xab31, 0xf1c0, 0x3272, 0x18bd, 0xe383, 0x1, 0x1);
        gbc.writeMem(0x4a33, { 0x94 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xab31, gbc.sp());
        EXPECT(0x4a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 018E
        gbc.setState(0xfaa, 0x9e7d, 0xfd30, 0x91a6, 0xf51, 0x265e, 0x0, 0x0);
        gbc.writeMem(0xfaa, { 0x94 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9e7d, gbc.sp());
        EXPECT(0xfab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 018F
        gbc.setState(0x2de0, 0x2ba7, 0x14b0, 0x803c, 0x762d, 0x5379, 0x0, 0x0);
        gbc.writeMem(0x2de0, { 0x94 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2ba7, gbc.sp());
        EXPECT(0x2de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0190
        gbc.setState(0x40d9, 0xf866, 0x15f0, 0x1949, 0x8708, 0xfca5, 0x1, 0x0);
        gbc.writeMem(0x40d9, { 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf866, gbc.sp());
        EXPECT(0x40da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0191
        gbc.setState(0x58f4, 0xde93, 0x8260, 0xe7e8, 0x933, 0xad7c, 0x0, 0x1);
        gbc.writeMem(0x58f4, { 0x94 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xde93, gbc.sp());
        EXPECT(0x58f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0192
        gbc.setState(0xdb12, 0x29a4, 0x2bd0, 0xd9bf, 0x6c33, 0xb331, 0x0, 0x0);
        gbc.writeMem(0xdb12, { 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x29a4, gbc.sp());
        EXPECT(0xdb13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdb12));
        // 94 0193
        gbc.setState(0x9d77, 0x5ac8, 0xd120, 0xcb94, 0xd79e, 0xc9ac, 0x1, 0x1);
        gbc.writeMem(0x9d77, { 0x94 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5ac8, gbc.sp());
        EXPECT(0x9d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9d77));
        // 94 0194
        gbc.setState(0x4d02, 0x1bbf, 0x2630, 0xcb9, 0xacef, 0x167c, 0x0, 0x0);
        gbc.writeMem(0x4d02, { 0x94 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1bbf, gbc.sp());
        EXPECT(0x4d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0195
        gbc.setState(0x601a, 0xa2a1, 0x2cf0, 0xa7fa, 0x426c, 0xc97a, 0x1, 0x1);
        gbc.writeMem(0x601a, { 0x94 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa2a1, gbc.sp());
        EXPECT(0x601b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0196
        gbc.setState(0x723b, 0xd7df, 0x3a60, 0x32d9, 0xa8a8, 0x22b3, 0x0, 0x1);
        gbc.writeMem(0x723b, { 0x94 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd7df, gbc.sp());
        EXPECT(0x723c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0197
        gbc.setState(0x8693, 0x963a, 0x4d50, 0x4a0b, 0x2ac0, 0xf370, 0x1, 0x1);
        gbc.writeMem(0x8693, { 0x94 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x963a, gbc.sp());
        EXPECT(0x8694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8693));
        // 94 0198
        gbc.setState(0x4b20, 0xc937, 0xf270, 0x1435, 0x9f0b, 0xd2ab, 0x1, 0x1);
        gbc.writeMem(0x4b20, { 0x94 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc937, gbc.sp());
        EXPECT(0x4b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0199
        gbc.setState(0x3772, 0xa4c1, 0x40a0, 0x5a42, 0xc060, 0x8cae, 0x0, 0x1);
        gbc.writeMem(0x3772, { 0x94 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa4c1, gbc.sp());
        EXPECT(0x3773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 019A
        gbc.setState(0x584c, 0x429f, 0x5560, 0xf341, 0xbf79, 0x38de, 0x1, 0x0);
        gbc.writeMem(0x584c, { 0x94 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x429f, gbc.sp());
        EXPECT(0x584d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 019B
        gbc.setState(0x5b30, 0xb67f, 0x1bd0, 0xcde0, 0xa34e, 0x59f5, 0x1, 0x0);
        gbc.writeMem(0x5b30, { 0x94 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb67f, gbc.sp());
        EXPECT(0x5b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 019C
        gbc.setState(0xa9b4, 0x172, 0xbba0, 0xab63, 0x2ec1, 0xe8e6, 0x1, 0x0);
        gbc.writeMem(0xa9b4, { 0x94 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x172, gbc.sp());
        EXPECT(0xa9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa9b4));
        // 94 019D
        gbc.setState(0xdf48, 0x82a6, 0x76d0, 0x4854, 0xe0c0, 0x1cd6, 0x0, 0x0);
        gbc.writeMem(0xdf48, { 0x94 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x82a6, gbc.sp());
        EXPECT(0xdf49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdf48));
        // 94 019E
        gbc.setState(0xd869, 0x40c3, 0xd6e0, 0x2840, 0x8a99, 0x1e1f, 0x1, 0x0);
        gbc.writeMem(0xd869, { 0x94 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x40c3, gbc.sp());
        EXPECT(0xd86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd869));
        // 94 019F
        gbc.setState(0xad08, 0xf67c, 0x330, 0xaa26, 0x8dc9, 0xb0bb, 0x1, 0x1);
        gbc.writeMem(0xad08, { 0x94 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf67c, gbc.sp());
        EXPECT(0xad09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xad08));
        // 94 01A0
        gbc.setState(0x27c3, 0x1130, 0x250, 0x18ab, 0x3735, 0x3eba, 0x1, 0x0);
        gbc.writeMem(0x27c3, { 0x94 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1130, gbc.sp());
        EXPECT(0x27c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01A1
        gbc.setState(0xcf8e, 0x5f3d, 0x1f20, 0x7090, 0xc1a0, 0xe7d, 0x0, 0x0);
        gbc.writeMem(0xcf8e, { 0x94 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5f3d, gbc.sp());
        EXPECT(0xcf8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcf8e));
        // 94 01A2
        gbc.setState(0x5cf6, 0xec0e, 0xbad0, 0x6419, 0x77b8, 0x66f0, 0x1, 0x1);
        gbc.writeMem(0x5cf6, { 0x94 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xec0e, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01A3
        gbc.setState(0x84d1, 0x8944, 0x4bc0, 0x8a99, 0x1b49, 0xcd6d, 0x0, 0x1);
        gbc.writeMem(0x84d1, { 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8944, gbc.sp());
        EXPECT(0x84d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x84d1));
        // 94 01A4
        gbc.setState(0x47f2, 0x6845, 0x5160, 0x819b, 0xfbdd, 0xc943, 0x1, 0x0);
        gbc.writeMem(0x47f2, { 0x94 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6845, gbc.sp());
        EXPECT(0x47f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01A5
        gbc.setState(0xbf9b, 0x7473, 0xdf00, 0x9802, 0x1429, 0x6f30, 0x1, 0x0);
        gbc.writeMem(0xbf9b, { 0x94 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7473, gbc.sp());
        EXPECT(0xbf9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbf9b));
        // 94 01A6
        gbc.setState(0x9861, 0x492a, 0xbee0, 0x1c05, 0x2543, 0xf605, 0x1, 0x0);
        gbc.writeMem(0x9861, { 0x94 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x492a, gbc.sp());
        EXPECT(0x9862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9861));
        // 94 01A7
        gbc.setState(0x5e01, 0x8c36, 0xf290, 0xb29b, 0xb9db, 0xc238, 0x1, 0x1);
        gbc.writeMem(0x5e01, { 0x94 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8c36, gbc.sp());
        EXPECT(0x5e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01A8
        gbc.setState(0x1b11, 0x409b, 0xe590, 0x3009, 0x17f2, 0xcd97, 0x1, 0x1);
        gbc.writeMem(0x1b11, { 0x94 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x409b, gbc.sp());
        EXPECT(0x1b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01A9
        gbc.setState(0x7f33, 0xf2af, 0xdd70, 0x772b, 0x7eb9, 0x7b6a, 0x0, 0x0);
        gbc.writeMem(0x7f33, { 0x94 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf2af, gbc.sp());
        EXPECT(0x7f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01AA
        gbc.setState(0x1aac, 0x99c3, 0x6370, 0xb68f, 0xd636, 0x6e08, 0x1, 0x1);
        gbc.writeMem(0x1aac, { 0x94 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x99c3, gbc.sp());
        EXPECT(0x1aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01AB
        gbc.setState(0x5400, 0x72d5, 0xf290, 0x878b, 0x7b39, 0x9b63, 0x0, 0x0);
        gbc.writeMem(0x5400, { 0x94 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x72d5, gbc.sp());
        EXPECT(0x5401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01AC
        gbc.setState(0xed6a, 0x5891, 0xf6d0, 0x50cc, 0x55a5, 0x8da2, 0x1, 0x1);
        gbc.writeMem(0xed6a, { 0x94 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5891, gbc.sp());
        EXPECT(0xed6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xed6a));
        // 94 01AD
        gbc.setState(0x1dba, 0x67d1, 0x18e0, 0x3b77, 0x30e0, 0xdc6f, 0x1, 0x1);
        gbc.writeMem(0x1dba, { 0x94 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x67d1, gbc.sp());
        EXPECT(0x1dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01AE
        gbc.setState(0x87c3, 0xf5ca, 0x5bc0, 0x6a85, 0xe786, 0xca3b, 0x0, 0x0);
        gbc.writeMem(0x87c3, { 0x94 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf5ca, gbc.sp());
        EXPECT(0x87c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x87c3));
        // 94 01AF
        gbc.setState(0x5e04, 0x4f7f, 0x900, 0x645a, 0x9896, 0xa957, 0x0, 0x0);
        gbc.writeMem(0x5e04, { 0x94 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4f7f, gbc.sp());
        EXPECT(0x5e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01B1
        gbc.setState(0x648e, 0xd165, 0xc8f0, 0xd6b8, 0x3bfb, 0x8739, 0x0, 0x1);
        gbc.writeMem(0x648e, { 0x94 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd165, gbc.sp());
        EXPECT(0x648f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01B2
        gbc.setState(0x32ad, 0x5e9, 0x1100, 0xe7b1, 0xd1db, 0x9d37, 0x0, 0x1);
        gbc.writeMem(0x32ad, { 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5e9, gbc.sp());
        EXPECT(0x32ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01B3
        gbc.setState(0x9057, 0xf06e, 0x3010, 0x9bef, 0xa561, 0x1520, 0x1, 0x0);
        gbc.writeMem(0x9057, { 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf06e, gbc.sp());
        EXPECT(0x9058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9057));
        // 94 01B4
        gbc.setState(0x3bee, 0xc28f, 0x9f10, 0xf36f, 0x98e3, 0xc2db, 0x1, 0x0);
        gbc.writeMem(0x3bee, { 0x94 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc28f, gbc.sp());
        EXPECT(0x3bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01B5
        gbc.setState(0xaed3, 0xf9d7, 0xe530, 0x6ef3, 0xf0c3, 0x5789, 0x1, 0x1);
        gbc.writeMem(0xaed3, { 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf9d7, gbc.sp());
        EXPECT(0xaed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaed3));
        // 94 01B6
        gbc.setState(0x8f35, 0x266e, 0x84e0, 0xffdc, 0x464e, 0x9531, 0x1, 0x1);
        gbc.writeMem(0x8f35, { 0x94 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x266e, gbc.sp());
        EXPECT(0x8f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8f35));
        // 94 01B7
        gbc.setState(0x9113, 0xb908, 0xfc10, 0x5d60, 0x4c38, 0x96fb, 0x0, 0x0);
        gbc.writeMem(0x9113, { 0x94 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb908, gbc.sp());
        EXPECT(0x9114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9113));
        // 94 01B8
        gbc.setState(0xd78c, 0x7685, 0xaf30, 0xbd6e, 0xa4ce, 0xa58e, 0x1, 0x1);
        gbc.writeMem(0xd78c, { 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7685, gbc.sp());
        EXPECT(0xd78d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd78c));
        // 94 01B9
        gbc.setState(0xc546, 0x5078, 0xc10, 0x7919, 0xea6c, 0x4102, 0x1, 0x1);
        gbc.writeMem(0xc546, { 0x94 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5078, gbc.sp());
        EXPECT(0xc547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc546));
        // 94 01BA
        gbc.setState(0x2cde, 0x441, 0x9110, 0xa21c, 0x5285, 0x95fb, 0x0, 0x0);
        gbc.writeMem(0x2cde, { 0x94 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x441, gbc.sp());
        EXPECT(0x2cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01BC
        gbc.setState(0x92fe, 0x9398, 0xed60, 0x8a78, 0x9c61, 0x4e23, 0x0, 0x0);
        gbc.writeMem(0x92fe, { 0x94 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9398, gbc.sp());
        EXPECT(0x92ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x92fe));
        // 94 01BD
        gbc.setState(0xd4fd, 0x66d8, 0x1110, 0xa155, 0x9d21, 0x3d0a, 0x0, 0x0);
        gbc.writeMem(0xd4fd, { 0x94 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x66d8, gbc.sp());
        EXPECT(0xd4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd4fd));
        // 94 01BE
        gbc.setState(0x5b3a, 0x2ddc, 0xcea0, 0x97ea, 0xba13, 0xcdaa, 0x1, 0x0);
        gbc.writeMem(0x5b3a, { 0x94 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2ddc, gbc.sp());
        EXPECT(0x5b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01BF
        gbc.setState(0x6834, 0xc094, 0x7250, 0xde40, 0x94fe, 0x4b9f, 0x0, 0x0);
        gbc.writeMem(0x6834, { 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc094, gbc.sp());
        EXPECT(0x6835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01C1
        gbc.setState(0x6b75, 0x7b13, 0xa650, 0x337a, 0x5e03, 0x1828, 0x0, 0x0);
        gbc.writeMem(0x6b75, { 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7b13, gbc.sp());
        EXPECT(0x6b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01C2
        gbc.setState(0xe227, 0xb40, 0x5e20, 0x615e, 0xe21c, 0x879f, 0x1, 0x0);
        gbc.writeMem(0xe227, { 0x94 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb40, gbc.sp());
        EXPECT(0xe228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe227));
        // 94 01C3
        gbc.setState(0xaf3b, 0x8cf2, 0x3440, 0x1755, 0xd5a2, 0xe307, 0x0, 0x1);
        gbc.writeMem(0xaf3b, { 0x94 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8cf2, gbc.sp());
        EXPECT(0xaf3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaf3b));
        // 94 01C4
        gbc.setState(0xdddd, 0xa4da, 0x3f0, 0x5346, 0xe00a, 0x47d9, 0x1, 0x1);
        gbc.writeMem(0xdddd, { 0x94 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa4da, gbc.sp());
        EXPECT(0xddde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdddd));
        // 94 01C5
        gbc.setState(0xaf93, 0xfdd9, 0x5280, 0xd195, 0xefc8, 0x5c0, 0x1, 0x1);
        gbc.writeMem(0xaf93, { 0x94 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfdd9, gbc.sp());
        EXPECT(0xaf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaf93));
        // 94 01C6
        gbc.setState(0xe4aa, 0x3d23, 0xbc00, 0xc941, 0x37f5, 0x31a3, 0x0, 0x1);
        gbc.writeMem(0xe4aa, { 0x94 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3d23, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe4aa));
        // 94 01C7
        gbc.setState(0x372, 0x1a46, 0x5ae0, 0xcf36, 0x5168, 0xe84b, 0x0, 0x0);
        gbc.writeMem(0x372, { 0x94 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1a46, gbc.sp());
        EXPECT(0x373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01C8
        gbc.setState(0xdfa1, 0x9c8b, 0x57f0, 0xf82, 0xb9b2, 0x6c8c, 0x0, 0x1);
        gbc.writeMem(0xdfa1, { 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9c8b, gbc.sp());
        EXPECT(0xdfa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdfa1));
        // 94 01C9
        gbc.setState(0x443a, 0x9b55, 0x4f10, 0x3c57, 0xf2fd, 0x796b, 0x0, 0x1);
        gbc.writeMem(0x443a, { 0x94 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9b55, gbc.sp());
        EXPECT(0x443b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01CA
        gbc.setState(0x89f7, 0x3b15, 0xbb0, 0xa0fc, 0x2811, 0x60e7, 0x1, 0x0);
        gbc.writeMem(0x89f7, { 0x94 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3b15, gbc.sp());
        EXPECT(0x89f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x89f7));
        // 94 01CB
        gbc.setState(0xd7ac, 0x2205, 0x2f30, 0xea6d, 0xe8f0, 0x7f66, 0x1, 0x1);
        gbc.writeMem(0xd7ac, { 0x94 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2205, gbc.sp());
        EXPECT(0xd7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd7ac));
        // 94 01CC
        gbc.setState(0x3a76, 0x113c, 0x5ba0, 0xe272, 0xca6d, 0x3a0c, 0x0, 0x0);
        gbc.writeMem(0x3a76, { 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x113c, gbc.sp());
        EXPECT(0x3a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01CD
        gbc.setState(0x1b9, 0x20dc, 0x5600, 0xac74, 0xdbee, 0x427a, 0x1, 0x1);
        gbc.writeMem(0x1b9, { 0x94 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x20dc, gbc.sp());
        EXPECT(0x1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01CE
        gbc.setState(0x33e9, 0xdcc8, 0xa4e0, 0x2fca, 0xdd2f, 0xa5e9, 0x1, 0x1);
        gbc.writeMem(0x33e9, { 0x94 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdcc8, gbc.sp());
        EXPECT(0x33ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01CF
        gbc.setState(0x9f52, 0x4d2d, 0x55a0, 0x77e0, 0x6b19, 0x87ab, 0x1, 0x0);
        gbc.writeMem(0x9f52, { 0x94 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4d2d, gbc.sp());
        EXPECT(0x9f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9f52));
        // 94 01D0
        gbc.setState(0xa94c, 0x7dd, 0xcc0, 0x9b92, 0xa23f, 0x6e66, 0x0, 0x1);
        gbc.writeMem(0xa94c, { 0x94 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7dd, gbc.sp());
        EXPECT(0xa94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa94c));
        // 94 01D1
        gbc.setState(0x13b7, 0xfb6c, 0xef00, 0x7d32, 0x706a, 0x1ea6, 0x0, 0x1);
        gbc.writeMem(0x13b7, { 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfb6c, gbc.sp());
        EXPECT(0x13b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01D2
        gbc.setState(0x2524, 0xdd29, 0x3c70, 0x37e8, 0xdccc, 0x259a, 0x0, 0x0);
        gbc.writeMem(0x2524, { 0x94 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdd29, gbc.sp());
        EXPECT(0x2525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01D3
        gbc.setState(0x8858, 0x1272, 0x4800, 0xb252, 0xc96f, 0xc266, 0x1, 0x1);
        gbc.writeMem(0x8858, { 0x94 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1272, gbc.sp());
        EXPECT(0x8859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8858));
        // 94 01D4
        gbc.setState(0x5be6, 0xf521, 0x2910, 0x80c8, 0x395e, 0xcd07, 0x0, 0x0);
        gbc.writeMem(0x5be6, { 0x94 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf521, gbc.sp());
        EXPECT(0x5be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01D5
        gbc.setState(0x1e59, 0x35ca, 0xbf60, 0xa68d, 0x6c54, 0xb295, 0x1, 0x1);
        gbc.writeMem(0x1e59, { 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x35ca, gbc.sp());
        EXPECT(0x1e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01D6
        gbc.setState(0x8325, 0x2335, 0x4b0, 0x8e4, 0xf677, 0xc268, 0x0, 0x1);
        gbc.writeMem(0x8325, { 0x94 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2335, gbc.sp());
        EXPECT(0x8326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8325));
        // 94 01D7
        gbc.setState(0xaf58, 0x64e3, 0xec80, 0x7365, 0x36bd, 0x50af, 0x0, 0x0);
        gbc.writeMem(0xaf58, { 0x94 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x64e3, gbc.sp());
        EXPECT(0xaf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaf58));
        // 94 01D8
        gbc.setState(0x727a, 0x5694, 0x27d0, 0x4ef1, 0x23e7, 0x4f83, 0x0, 0x1);
        gbc.writeMem(0x727a, { 0x94 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5694, gbc.sp());
        EXPECT(0x727b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01D9
        gbc.setState(0x2a63, 0x523a, 0x2590, 0x2953, 0xea3d, 0x70eb, 0x1, 0x1);
        gbc.writeMem(0x2a63, { 0x94 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x523a, gbc.sp());
        EXPECT(0x2a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01DA
        gbc.setState(0x2368, 0x9a3d, 0xc800, 0x30d3, 0x801c, 0xffdf, 0x0, 0x0);
        gbc.writeMem(0x2368, { 0x94 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9a3d, gbc.sp());
        EXPECT(0x2369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01DB
        gbc.setState(0xaa4e, 0x7726, 0x1450, 0x8237, 0x1c56, 0x84b5, 0x0, 0x1);
        gbc.writeMem(0xaa4e, { 0x94 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7726, gbc.sp());
        EXPECT(0xaa4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaa4e));
        // 94 01DC
        gbc.setState(0x8c00, 0x51ca, 0x3760, 0xce64, 0x3103, 0x261b, 0x1, 0x0);
        gbc.writeMem(0x8c00, { 0x94 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x51ca, gbc.sp());
        EXPECT(0x8c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8c00));
        // 94 01DD
        gbc.setState(0x45f9, 0xe5a9, 0x8b20, 0x855d, 0x456a, 0xec9d, 0x1, 0x0);
        gbc.writeMem(0x45f9, { 0x94 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe5a9, gbc.sp());
        EXPECT(0x45fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01DE
        gbc.setState(0xc69b, 0x6244, 0xc440, 0x1b15, 0x2866, 0x3644, 0x1, 0x0);
        gbc.writeMem(0xc69b, { 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6244, gbc.sp());
        EXPECT(0xc69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc69b));
        // 94 01DF
        gbc.setState(0x2c8a, 0x4905, 0x45d0, 0x4bf3, 0xcdf5, 0x9f45, 0x0, 0x1);
        gbc.writeMem(0x2c8a, { 0x94 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4905, gbc.sp());
        EXPECT(0x2c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01E0
        gbc.setState(0xe45c, 0x8fa1, 0x480, 0x4078, 0xca7b, 0xd7ca, 0x0, 0x1);
        gbc.writeMem(0xe45c, { 0x94 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8fa1, gbc.sp());
        EXPECT(0xe45d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe45c));
        // 94 01E1
        gbc.setState(0x48f9, 0x5190, 0x3f90, 0x6072, 0x2958, 0xf6ec, 0x0, 0x0);
        gbc.writeMem(0x48f9, { 0x94 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5190, gbc.sp());
        EXPECT(0x48fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01E2
        gbc.setState(0x8fd4, 0x5221, 0xf980, 0xa560, 0x4d8a, 0x3fc0, 0x0, 0x1);
        gbc.writeMem(0x8fd4, { 0x94 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5221, gbc.sp());
        EXPECT(0x8fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8fd4));
        // 94 01E3
        gbc.setState(0x41c1, 0x2678, 0xa2b0, 0x1e2, 0x7234, 0x1f4f, 0x0, 0x1);
        gbc.writeMem(0x41c1, { 0x94 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2678, gbc.sp());
        EXPECT(0x41c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01E4
        gbc.setState(0x4b49, 0x7a4a, 0x77c0, 0x8389, 0x1a33, 0x5c3c, 0x0, 0x0);
        gbc.writeMem(0x4b49, { 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7a4a, gbc.sp());
        EXPECT(0x4b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01E5
        gbc.setState(0x3ef3, 0x5852, 0xdc90, 0xcdbf, 0xfd05, 0xd7b1, 0x0, 0x1);
        gbc.writeMem(0x3ef3, { 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5852, gbc.sp());
        EXPECT(0x3ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01E6
        gbc.setState(0xc627, 0x155a, 0x5cf0, 0x9d25, 0x9fd7, 0xaaf8, 0x0, 0x0);
        gbc.writeMem(0xc627, { 0x94 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x155a, gbc.sp());
        EXPECT(0xc628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc627));
        // 94 01E8
        gbc.setState(0x115e, 0x8b9c, 0x1760, 0x28ff, 0xc5a7, 0xf3f8, 0x0, 0x1);
        gbc.writeMem(0x115e, { 0x94 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8b9c, gbc.sp());
        EXPECT(0x115f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01E9
        gbc.setState(0x35e5, 0x467b, 0x7880, 0xb9a6, 0xdfeb, 0x9a3a, 0x1, 0x0);
        gbc.writeMem(0x35e5, { 0x94 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x467b, gbc.sp());
        EXPECT(0x35e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01EA
        gbc.setState(0xee96, 0xb2b7, 0x2690, 0xd3ff, 0x5656, 0x8e7f, 0x1, 0x0);
        gbc.writeMem(0xee96, { 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb2b7, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xee96));
        // 94 01EB
        gbc.setState(0x707c, 0xe730, 0xb0a0, 0xb056, 0x144b, 0x9912, 0x0, 0x0);
        gbc.writeMem(0x707c, { 0x94 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe730, gbc.sp());
        EXPECT(0x707d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01EC
        gbc.setState(0x1e2e, 0xc237, 0x81f0, 0xbed4, 0xe5f5, 0xaa06, 0x1, 0x0);
        gbc.writeMem(0x1e2e, { 0x94 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc237, gbc.sp());
        EXPECT(0x1e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01ED
        gbc.setState(0x5f73, 0xea42, 0x7c50, 0xce13, 0x24e9, 0xe1bb, 0x0, 0x1);
        gbc.writeMem(0x5f73, { 0x94 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xea42, gbc.sp());
        EXPECT(0x5f74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01EE
        gbc.setState(0x2ee6, 0xffb9, 0x2050, 0x2ffa, 0xcfda, 0xd4a6, 0x0, 0x0);
        gbc.writeMem(0x2ee6, { 0x94 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xffb9, gbc.sp());
        EXPECT(0x2ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01EF
        gbc.setState(0xe920, 0xfe29, 0x67d0, 0x1a77, 0xabf0, 0x5d4b, 0x0, 0x0);
        gbc.writeMem(0xe920, { 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfe29, gbc.sp());
        EXPECT(0xe921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe920));
        // 94 01F0
        gbc.setState(0xd953, 0x6f04, 0x6770, 0xcf90, 0xa4a4, 0x3757, 0x1, 0x0);
        gbc.writeMem(0xd953, { 0x94 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6f04, gbc.sp());
        EXPECT(0xd954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd953));
        // 94 01F1
        gbc.setState(0x4f83, 0xde38, 0xe5d0, 0xc5c4, 0x293f, 0xc361, 0x0, 0x1);
        gbc.writeMem(0x4f83, { 0x94 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xde38, gbc.sp());
        EXPECT(0x4f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01F2
        gbc.setState(0x4a5, 0x8229, 0x9080, 0x2be7, 0xcc7c, 0x50f6, 0x0, 0x1);
        gbc.writeMem(0x4a5, { 0x94 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8229, gbc.sp());
        EXPECT(0x4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01F3
        gbc.setState(0x80a2, 0x6234, 0xf7a0, 0x82ab, 0x4e5c, 0xe497, 0x0, 0x0);
        gbc.writeMem(0x80a2, { 0x94 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6234, gbc.sp());
        EXPECT(0x80a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x80a2));
        // 94 01F4
        gbc.setState(0xdcfa, 0x42e6, 0x3e0, 0x131b, 0xfbd1, 0x82d, 0x1, 0x0);
        gbc.writeMem(0xdcfa, { 0x94 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x42e6, gbc.sp());
        EXPECT(0xdcfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdcfa));
        // 94 01F5
        gbc.setState(0xb39f, 0x3fdd, 0xa210, 0x5944, 0x2027, 0x373f, 0x0, 0x1);
        gbc.writeMem(0xb39f, { 0x94 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3fdd, gbc.sp());
        EXPECT(0xb3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb39f));
        // 94 01F6
        gbc.setState(0x5bdc, 0x7ba4, 0x190, 0x2cb3, 0xcab4, 0x956b, 0x0, 0x1);
        gbc.writeMem(0x5bdc, { 0x94 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7ba4, gbc.sp());
        EXPECT(0x5bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01F7
        gbc.setState(0x32c5, 0x1285, 0xb9b0, 0xf953, 0xefd0, 0x4304, 0x1, 0x0);
        gbc.writeMem(0x32c5, { 0x94 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1285, gbc.sp());
        EXPECT(0x32c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01F8
        gbc.setState(0x81ea, 0xde5d, 0xab50, 0x236, 0x655a, 0xf306, 0x1, 0x1);
        gbc.writeMem(0x81ea, { 0x94 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xde5d, gbc.sp());
        EXPECT(0x81eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x81ea));
        // 94 01F9
        gbc.setState(0x5f60, 0xf001, 0xae80, 0xbb2c, 0x1f51, 0xa462, 0x1, 0x0);
        gbc.writeMem(0x5f60, { 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf001, gbc.sp());
        EXPECT(0x5f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01FA
        gbc.setState(0x859, 0xee59, 0xd150, 0x2276, 0x232c, 0x770, 0x0, 0x0);
        gbc.writeMem(0x859, { 0x94 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xee59, gbc.sp());
        EXPECT(0x85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 01FB
        gbc.setState(0xe74c, 0x2aeb, 0xdb70, 0x3ce8, 0xbf81, 0xff94, 0x0, 0x1);
        gbc.writeMem(0xe74c, { 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2aeb, gbc.sp());
        EXPECT(0xe74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe74c));
        // 94 01FC
        gbc.setState(0x60cd, 0xb8ab, 0x9220, 0xce31, 0x19b0, 0xb13c, 0x0, 0x1);
        gbc.writeMem(0x60cd, { 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb8ab, gbc.sp());
        EXPECT(0x60ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01FD
        gbc.setState(0xb3e7, 0xec4b, 0xc640, 0x6c5a, 0xe6e5, 0x5a0b, 0x0, 0x0);
        gbc.writeMem(0xb3e7, { 0x94 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xec4b, gbc.sp());
        EXPECT(0xb3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb3e7));
        // 94 01FE
        gbc.setState(0x65a7, 0xed7a, 0x1130, 0x6a4, 0xa5cc, 0x22e7, 0x1, 0x1);
        gbc.writeMem(0x65a7, { 0x94 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xed7a, gbc.sp());
        EXPECT(0x65a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 01FF
        gbc.setState(0x96cc, 0x2b93, 0xdc70, 0xc45f, 0xadb8, 0xcb10, 0x1, 0x0);
        gbc.writeMem(0x96cc, { 0x94 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2b93, gbc.sp());
        EXPECT(0x96cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x96cc));
        // 94 0200
        gbc.setState(0x6d00, 0x5173, 0x6d50, 0x9714, 0xae90, 0x52c8, 0x0, 0x0);
        gbc.writeMem(0x6d00, { 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5173, gbc.sp());
        EXPECT(0x6d01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0201
        gbc.setState(0x8e60, 0x7ef5, 0xde00, 0xc49, 0x478e, 0x782, 0x1, 0x1);
        gbc.writeMem(0x8e60, { 0x94 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7ef5, gbc.sp());
        EXPECT(0x8e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8e60));
        // 94 0202
        gbc.setState(0xc05c, 0xfc0a, 0xb070, 0x66fb, 0x7e5a, 0x66a, 0x1, 0x0);
        gbc.writeMem(0xc05c, { 0x94 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfc0a, gbc.sp());
        EXPECT(0xc05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc05c));
        // 94 0203
        gbc.setState(0x6ff5, 0xf197, 0x55c0, 0xb428, 0x6680, 0x9160, 0x1, 0x0);
        gbc.writeMem(0x6ff5, { 0x94 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf197, gbc.sp());
        EXPECT(0x6ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0205
        gbc.setState(0x4269, 0xc9ac, 0xf800, 0xcf99, 0x65a4, 0xa43b, 0x0, 0x1);
        gbc.writeMem(0x4269, { 0x94 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc9ac, gbc.sp());
        EXPECT(0x426a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0206
        gbc.setState(0x8c25, 0x5e2f, 0x4660, 0x7bf5, 0x5243, 0x2c6c, 0x1, 0x0);
        gbc.writeMem(0x8c25, { 0x94 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5e2f, gbc.sp());
        EXPECT(0x8c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8c25));
        // 94 0207
        gbc.setState(0x5237, 0x588c, 0x6530, 0xffe5, 0x235b, 0x5d65, 0x0, 0x0);
        gbc.writeMem(0x5237, { 0x94 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x588c, gbc.sp());
        EXPECT(0x5238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0208
        gbc.setState(0xae08, 0x4737, 0x1f0, 0x3a30, 0x3d02, 0x8922, 0x0, 0x1);
        gbc.writeMem(0xae08, { 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4737, gbc.sp());
        EXPECT(0xae09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xae08));
        // 94 0209
        gbc.setState(0x1eef, 0xed6f, 0x3b50, 0x4d4b, 0xfdd7, 0x1b53, 0x0, 0x0);
        gbc.writeMem(0x1eef, { 0x94 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xed6f, gbc.sp());
        EXPECT(0x1ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 020A
        gbc.setState(0x93bf, 0xbd7f, 0x77f0, 0x1aed, 0xdc5a, 0x2389, 0x1, 0x1);
        gbc.writeMem(0x93bf, { 0x94 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbd7f, gbc.sp());
        EXPECT(0x93c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x93bf));
        // 94 020B
        gbc.setState(0xb582, 0xb013, 0xf400, 0x8bfb, 0xfcc, 0xdcce, 0x1, 0x1);
        gbc.writeMem(0xb582, { 0x94 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb013, gbc.sp());
        EXPECT(0xb583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb582));
        // 94 020C
        gbc.setState(0x88bc, 0xf086, 0xfe0, 0x5506, 0xf6d3, 0x91c9, 0x0, 0x0);
        gbc.writeMem(0x88bc, { 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf086, gbc.sp());
        EXPECT(0x88bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x88bc));
        // 94 020D
        gbc.setState(0x46ad, 0xa776, 0xfef0, 0x34d2, 0xd8e8, 0x5f99, 0x1, 0x0);
        gbc.writeMem(0x46ad, { 0x94 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa776, gbc.sp());
        EXPECT(0x46ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 020F
        gbc.setState(0x418a, 0x64ce, 0xf240, 0xa2c7, 0x9bf8, 0xe907, 0x1, 0x0);
        gbc.writeMem(0x418a, { 0x94 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x64ce, gbc.sp());
        EXPECT(0x418b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0210
        gbc.setState(0xa8fe, 0x5010, 0x3780, 0x734b, 0x4362, 0x7014, 0x0, 0x0);
        gbc.writeMem(0xa8fe, { 0x94 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5010, gbc.sp());
        EXPECT(0xa8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa8fe));
        // 94 0211
        gbc.setState(0x6f14, 0x190c, 0xc540, 0x4fd6, 0x2a4c, 0x1c3e, 0x0, 0x0);
        gbc.writeMem(0x6f14, { 0x94 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x190c, gbc.sp());
        EXPECT(0x6f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0212
        gbc.setState(0x242e, 0x9d64, 0xdc00, 0x6772, 0xc639, 0xd6b0, 0x1, 0x0);
        gbc.writeMem(0x242e, { 0x94 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9d64, gbc.sp());
        EXPECT(0x242f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0213
        gbc.setState(0x81dd, 0x5cf9, 0x86e0, 0x9a15, 0xa6b0, 0x8cbd, 0x0, 0x1);
        gbc.writeMem(0x81dd, { 0x94 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5cf9, gbc.sp());
        EXPECT(0x81de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x81dd));
        // 94 0214
        gbc.setState(0x8f7b, 0x6d78, 0x33f0, 0x55d5, 0x323a, 0x777d, 0x0, 0x1);
        gbc.writeMem(0x8f7b, { 0x94 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6d78, gbc.sp());
        EXPECT(0x8f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8f7b));
        // 94 0215
        gbc.setState(0x8837, 0x4e2f, 0xe8f0, 0x9564, 0xf106, 0x6ea0, 0x1, 0x0);
        gbc.writeMem(0x8837, { 0x94 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4e2f, gbc.sp());
        EXPECT(0x8838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8837));
        // 94 0216
        gbc.setState(0x819a, 0x60eb, 0xc380, 0x9f56, 0x5d19, 0xc3f5, 0x1, 0x1);
        gbc.writeMem(0x819a, { 0x94 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x60eb, gbc.sp());
        EXPECT(0x819b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x819a));
        // 94 0217
        gbc.setState(0x9d76, 0xcba2, 0xae20, 0xb38a, 0xbbf0, 0x3b2, 0x1, 0x1);
        gbc.writeMem(0x9d76, { 0x94 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcba2, gbc.sp());
        EXPECT(0x9d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9d76));
        // 94 0218
        gbc.setState(0x73f3, 0x498c, 0xf590, 0x31b0, 0x1bb1, 0xecc4, 0x0, 0x1);
        gbc.writeMem(0x73f3, { 0x94 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x498c, gbc.sp());
        EXPECT(0x73f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0219
        gbc.setState(0x73b, 0x3206, 0xbfd0, 0x7f2d, 0x8817, 0xab3d, 0x1, 0x1);
        gbc.writeMem(0x73b, { 0x94 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3206, gbc.sp());
        EXPECT(0x73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 021A
        gbc.setState(0xbe90, 0xc38c, 0xf210, 0xa45a, 0xb098, 0x2974, 0x1, 0x0);
        gbc.writeMem(0xbe90, { 0x94 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc38c, gbc.sp());
        EXPECT(0xbe91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbe90));
        // 94 021B
        gbc.setState(0x5580, 0x6057, 0xa420, 0x2e5d, 0x909e, 0xd622, 0x0, 0x1);
        gbc.writeMem(0x5580, { 0x94 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6057, gbc.sp());
        EXPECT(0x5581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 021C
        gbc.setState(0xd1ab, 0xde24, 0x68d0, 0x20e7, 0xa2f, 0xbc5b, 0x0, 0x1);
        gbc.writeMem(0xd1ab, { 0x94 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xde24, gbc.sp());
        EXPECT(0xd1ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd1ab));
        // 94 021D
        gbc.setState(0x716d, 0xef06, 0x4c10, 0xf9c2, 0xfc5d, 0xd0ba, 0x0, 0x0);
        gbc.writeMem(0x716d, { 0x94 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xef06, gbc.sp());
        EXPECT(0x716e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 021E
        gbc.setState(0x836, 0xca4e, 0x7800, 0xddf6, 0x1000, 0xf2f5, 0x1, 0x0);
        gbc.writeMem(0x836, { 0x94 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xca4e, gbc.sp());
        EXPECT(0x837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 021F
        gbc.setState(0x2219, 0x4320, 0x8330, 0xa2b8, 0x4cf9, 0xa107, 0x1, 0x1);
        gbc.writeMem(0x2219, { 0x94 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4320, gbc.sp());
        EXPECT(0x221a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0220
        gbc.setState(0x93e3, 0x8081, 0xa300, 0x47fd, 0xf5df, 0x90a, 0x1, 0x1);
        gbc.writeMem(0x93e3, { 0x94 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8081, gbc.sp());
        EXPECT(0x93e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x93e3));
        // 94 0221
        gbc.setState(0x91, 0x44c7, 0x9d40, 0x2ded, 0x6430, 0x9d3c, 0x1, 0x0);
        gbc.writeMem(0x91, { 0x94 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x44c7, gbc.sp());
        EXPECT(0x92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0223
        gbc.setState(0x3abe, 0xd895, 0x7060, 0x74dc, 0x3e1c, 0xd1a6, 0x1, 0x1);
        gbc.writeMem(0x3abe, { 0x94 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd895, gbc.sp());
        EXPECT(0x3abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0224
        gbc.setState(0x370a, 0x2296, 0x32a0, 0xa31d, 0x10f8, 0x15a8, 0x0, 0x0);
        gbc.writeMem(0x370a, { 0x94 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2296, gbc.sp());
        EXPECT(0x370b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0225
        gbc.setState(0x135f, 0x3b74, 0xa8b0, 0x14a7, 0x8d2a, 0xfb6b, 0x1, 0x1);
        gbc.writeMem(0x135f, { 0x94 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3b74, gbc.sp());
        EXPECT(0x1360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0226
        gbc.setState(0x6447, 0x481f, 0xb7d0, 0x52ed, 0x48e7, 0xe80a, 0x1, 0x0);
        gbc.writeMem(0x6447, { 0x94 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x481f, gbc.sp());
        EXPECT(0x6448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0227
        gbc.setState(0xa31d, 0xe29e, 0x4210, 0xdbde, 0xe77, 0x7914, 0x0, 0x0);
        gbc.writeMem(0xa31d, { 0x94 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe29e, gbc.sp());
        EXPECT(0xa31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa31d));
        // 94 0228
        gbc.setState(0x60c0, 0xe10a, 0x4c50, 0x6510, 0x5fd4, 0xd552, 0x1, 0x1);
        gbc.writeMem(0x60c0, { 0x94 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe10a, gbc.sp());
        EXPECT(0x60c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0229
        gbc.setState(0x483f, 0x88c0, 0xfbd0, 0x6ddc, 0x22cd, 0xe9, 0x1, 0x0);
        gbc.writeMem(0x483f, { 0x94 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x88c0, gbc.sp());
        EXPECT(0x4840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 022A
        gbc.setState(0xc74a, 0x2720, 0x1730, 0x508, 0xe22d, 0x83ab, 0x0, 0x0);
        gbc.writeMem(0xc74a, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2720, gbc.sp());
        EXPECT(0xc74b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc74a));
        // 94 022C
        gbc.setState(0x2563, 0x6be6, 0x3b00, 0x13ff, 0x85e, 0xe858, 0x0, 0x1);
        gbc.writeMem(0x2563, { 0x94 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6be6, gbc.sp());
        EXPECT(0x2564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 022D
        gbc.setState(0xe13, 0x640b, 0x8150, 0xc577, 0xde33, 0x6b16, 0x1, 0x0);
        gbc.writeMem(0xe13, { 0x94 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x640b, gbc.sp());
        EXPECT(0xe14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 022E
        gbc.setState(0x3822, 0xfe09, 0x34d0, 0x419e, 0x891f, 0x61d9, 0x0, 0x1);
        gbc.writeMem(0x3822, { 0x94 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfe09, gbc.sp());
        EXPECT(0x3823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 022F
        gbc.setState(0x5895, 0x914a, 0x4870, 0x2425, 0x8eba, 0xfa0, 0x0, 0x1);
        gbc.writeMem(0x5895, { 0x94 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x914a, gbc.sp());
        EXPECT(0x5896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0230
        gbc.setState(0x12bf, 0xe470, 0xda20, 0xc3f8, 0x866b, 0xf530, 0x1, 0x1);
        gbc.writeMem(0x12bf, { 0x94 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe470, gbc.sp());
        EXPECT(0x12c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0231
        gbc.setState(0x4aba, 0x6ee2, 0x2e50, 0xf485, 0xbd67, 0x1156, 0x1, 0x1);
        gbc.writeMem(0x4aba, { 0x94 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6ee2, gbc.sp());
        EXPECT(0x4abb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0232
        gbc.setState(0x1b3c, 0xcd43, 0x2310, 0xdaec, 0xf4a7, 0x1363, 0x0, 0x0);
        gbc.writeMem(0x1b3c, { 0x94 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcd43, gbc.sp());
        EXPECT(0x1b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0233
        gbc.setState(0x488a, 0x67b9, 0x62c0, 0xf746, 0xa9cf, 0x9593, 0x0, 0x1);
        gbc.writeMem(0x488a, { 0x94 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x67b9, gbc.sp());
        EXPECT(0x488b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0234
        gbc.setState(0xe7d6, 0x3af9, 0xe310, 0x71f9, 0x110e, 0xb1e3, 0x0, 0x1);
        gbc.writeMem(0xe7d6, { 0x94 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0xe7d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe7d6));
        // 94 0235
        gbc.setState(0x53cc, 0xe972, 0x95a0, 0x18a5, 0x6d19, 0x4f52, 0x0, 0x1);
        gbc.writeMem(0x53cc, { 0x94 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe972, gbc.sp());
        EXPECT(0x53cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0236
        gbc.setState(0x9e9b, 0x6343, 0x1a50, 0xe1b4, 0x2691, 0x2425, 0x1, 0x1);
        gbc.writeMem(0x9e9b, { 0x94 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6343, gbc.sp());
        EXPECT(0x9e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9e9b));
        // 94 0237
        gbc.setState(0xea41, 0x432e, 0xed80, 0xd10e, 0x3cfc, 0x989e, 0x1, 0x0);
        gbc.writeMem(0xea41, { 0x94 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x432e, gbc.sp());
        EXPECT(0xea42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xea41));
        // 94 0238
        gbc.setState(0x143d, 0xf731, 0xe600, 0xc733, 0xb4ab, 0x6523, 0x1, 0x0);
        gbc.writeMem(0x143d, { 0x94 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf731, gbc.sp());
        EXPECT(0x143e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0239
        gbc.setState(0x1933, 0x2121, 0x4990, 0xc616, 0x3154, 0xe9c6, 0x0, 0x0);
        gbc.writeMem(0x1933, { 0x94 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2121, gbc.sp());
        EXPECT(0x1934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 023A
        gbc.setState(0xc0b8, 0xc777, 0x3a10, 0x4cf0, 0xae74, 0x6970, 0x0, 0x1);
        gbc.writeMem(0xc0b8, { 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc777, gbc.sp());
        EXPECT(0xc0b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc0b8));
        // 94 023D
        gbc.setState(0x91d4, 0x8523, 0x6450, 0xf72, 0x73d3, 0x9378, 0x0, 0x0);
        gbc.writeMem(0x91d4, { 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8523, gbc.sp());
        EXPECT(0x91d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x91d4));
        // 94 023E
        gbc.setState(0xeb9d, 0xa617, 0xe010, 0x8ace, 0x9ae9, 0x4885, 0x0, 0x1);
        gbc.writeMem(0xeb9d, { 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa617, gbc.sp());
        EXPECT(0xeb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xeb9d));
        // 94 023F
        gbc.setState(0xb1f5, 0x67e, 0x23b0, 0xa14e, 0x5c2b, 0x2457, 0x0, 0x1);
        gbc.writeMem(0xb1f5, { 0x94 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x67e, gbc.sp());
        EXPECT(0xb1f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb1f5));
        // 94 0240
        gbc.setState(0x7ba3, 0xd856, 0x56e0, 0x70a9, 0xc6d2, 0xbe9d, 0x1, 0x0);
        gbc.writeMem(0x7ba3, { 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd856, gbc.sp());
        EXPECT(0x7ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0241
        gbc.setState(0x303d, 0xf426, 0xd7f0, 0x937, 0x9ea6, 0x7283, 0x0, 0x1);
        gbc.writeMem(0x303d, { 0x94 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf426, gbc.sp());
        EXPECT(0x303e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0242
        gbc.setState(0x130a, 0x5850, 0x300, 0x105c, 0x451, 0x127c, 0x1, 0x0);
        gbc.writeMem(0x130a, { 0x94 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5850, gbc.sp());
        EXPECT(0x130b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0244
        gbc.setState(0xbef8, 0xb330, 0x9100, 0x900e, 0x63bb, 0xf2b9, 0x1, 0x0);
        gbc.writeMem(0xbef8, { 0x94 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb330, gbc.sp());
        EXPECT(0xbef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbef8));
        // 94 0245
        gbc.setState(0x46f9, 0xc5f7, 0x1260, 0x3432, 0xfb29, 0x4def, 0x1, 0x1);
        gbc.writeMem(0x46f9, { 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc5f7, gbc.sp());
        EXPECT(0x46fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0246
        gbc.setState(0x206c, 0x234c, 0x4b60, 0x22d, 0xe324, 0xc141, 0x0, 0x0);
        gbc.writeMem(0x206c, { 0x94 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x234c, gbc.sp());
        EXPECT(0x206d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0247
        gbc.setState(0xe05f, 0xbe9a, 0x1190, 0x8ae1, 0x8ab4, 0x4f85, 0x1, 0x0);
        gbc.writeMem(0xe05f, { 0x94 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbe9a, gbc.sp());
        EXPECT(0xe060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe05f));
        // 94 0248
        gbc.setState(0x9f35, 0x632a, 0x94c0, 0xe967, 0xf11, 0x4486, 0x1, 0x0);
        gbc.writeMem(0x9f35, { 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x632a, gbc.sp());
        EXPECT(0x9f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9f35));
        // 94 0249
        gbc.setState(0xb34b, 0x86f0, 0x7da0, 0xce5f, 0xeef, 0x78ff, 0x0, 0x1);
        gbc.writeMem(0xb34b, { 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x86f0, gbc.sp());
        EXPECT(0xb34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb34b));
        // 94 024A
        gbc.setState(0x8c80, 0x755b, 0x460, 0x6b50, 0xfbf0, 0xe137, 0x1, 0x1);
        gbc.writeMem(0x8c80, { 0x94 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x755b, gbc.sp());
        EXPECT(0x8c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8c80));
        // 94 024B
        gbc.setState(0xc8a, 0xa3fd, 0x14f0, 0xb96b, 0x380c, 0x469d, 0x1, 0x1);
        gbc.writeMem(0xc8a, { 0x94 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa3fd, gbc.sp());
        EXPECT(0xc8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 024C
        gbc.setState(0x3155, 0xf6f5, 0x1180, 0x7e7f, 0xbb49, 0xc571, 0x0, 0x0);
        gbc.writeMem(0x3155, { 0x94 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf6f5, gbc.sp());
        EXPECT(0x3156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 024D
        gbc.setState(0x2f4e, 0x49e2, 0xb940, 0xb6d8, 0xcb7e, 0xc9a9, 0x1, 0x0);
        gbc.writeMem(0x2f4e, { 0x94 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x49e2, gbc.sp());
        EXPECT(0x2f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 024E
        gbc.setState(0x78b, 0x278d, 0x790, 0x6bf, 0x7e12, 0xfdb5, 0x1, 0x0);
        gbc.writeMem(0x78b, { 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x278d, gbc.sp());
        EXPECT(0x78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 024F
        gbc.setState(0x286, 0x282e, 0xb120, 0xbede, 0xbda5, 0x2dd5, 0x1, 0x1);
        gbc.writeMem(0x286, { 0x94 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x282e, gbc.sp());
        EXPECT(0x287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0250
        gbc.setState(0xaca0, 0xc46, 0x90, 0x744, 0xee43, 0x8b01, 0x0, 0x1);
        gbc.writeMem(0xaca0, { 0x94 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc46, gbc.sp());
        EXPECT(0xaca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaca0));
        // 94 0251
        gbc.setState(0x102c, 0xb9b2, 0xa8f0, 0x7800, 0x29d1, 0xbb81, 0x1, 0x1);
        gbc.writeMem(0x102c, { 0x94 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb9b2, gbc.sp());
        EXPECT(0x102d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0252
        gbc.setState(0x5ca8, 0x87a3, 0xf590, 0x41cb, 0x2b1b, 0xe6fc, 0x1, 0x1);
        gbc.writeMem(0x5ca8, { 0x94 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x87a3, gbc.sp());
        EXPECT(0x5ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0253
        gbc.setState(0xc6ff, 0x9dd7, 0x5630, 0x9f3f, 0x6366, 0xc5bb, 0x0, 0x0);
        gbc.writeMem(0xc6ff, { 0x94 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9dd7, gbc.sp());
        EXPECT(0xc700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc6ff));
        // 94 0254
        gbc.setState(0xa54a, 0x5f1e, 0xc200, 0xee6d, 0x8875, 0xc30d, 0x1, 0x1);
        gbc.writeMem(0xa54a, { 0x94 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5f1e, gbc.sp());
        EXPECT(0xa54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa54a));
        // 94 0255
        gbc.setState(0x764a, 0xbdf1, 0xb8a0, 0x1e13, 0xb4a5, 0x435e, 0x0, 0x1);
        gbc.writeMem(0x764a, { 0x94 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbdf1, gbc.sp());
        EXPECT(0x764b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0256
        gbc.setState(0xdbfa, 0xeb02, 0x8d50, 0xab4c, 0x68dd, 0xb90e, 0x1, 0x0);
        gbc.writeMem(0xdbfa, { 0x94 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xeb02, gbc.sp());
        EXPECT(0xdbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdbfa));
        // 94 0257
        gbc.setState(0xcb8a, 0xac73, 0x4230, 0xf654, 0x6bde, 0x272, 0x1, 0x0);
        gbc.writeMem(0xcb8a, { 0x94 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xac73, gbc.sp());
        EXPECT(0xcb8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcb8a));
        // 94 0258
        gbc.setState(0x1696, 0xe3ab, 0x8620, 0x1b02, 0xcd32, 0xf360, 0x1, 0x0);
        gbc.writeMem(0x1696, { 0x94 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe3ab, gbc.sp());
        EXPECT(0x1697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0259
        gbc.setState(0xcd0c, 0xe83b, 0xb340, 0xdae1, 0x6c8b, 0x6fc7, 0x0, 0x0);
        gbc.writeMem(0xcd0c, { 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe83b, gbc.sp());
        EXPECT(0xcd0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcd0c));
        // 94 025A
        gbc.setState(0x8f9, 0x2874, 0x5250, 0x366f, 0xd7ed, 0x7001, 0x1, 0x0);
        gbc.writeMem(0x8f9, { 0x94 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2874, gbc.sp());
        EXPECT(0x8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 025B
        gbc.setState(0x376f, 0x9ba, 0x89b0, 0x415b, 0xe6fb, 0x4edd, 0x1, 0x0);
        gbc.writeMem(0x376f, { 0x94 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9ba, gbc.sp());
        EXPECT(0x3770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 025C
        gbc.setState(0xae68, 0xb686, 0x8280, 0xa392, 0xa037, 0xedf0, 0x0, 0x0);
        gbc.writeMem(0xae68, { 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb686, gbc.sp());
        EXPECT(0xae69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xae68));
        // 94 025D
        gbc.setState(0x3c0a, 0x8bd2, 0xe5a0, 0x7d00, 0x6dc3, 0xca4b, 0x1, 0x1);
        gbc.writeMem(0x3c0a, { 0x94 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8bd2, gbc.sp());
        EXPECT(0x3c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 025E
        gbc.setState(0x7114, 0x8f62, 0x2e50, 0x6bda, 0x3d12, 0xbc31, 0x1, 0x1);
        gbc.writeMem(0x7114, { 0x94 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8f62, gbc.sp());
        EXPECT(0x7115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 025F
        gbc.setState(0x3e89, 0x97be, 0x29c0, 0xa9a3, 0xed5e, 0x1726, 0x1, 0x0);
        gbc.writeMem(0x3e89, { 0x94 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x97be, gbc.sp());
        EXPECT(0x3e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0260
        gbc.setState(0xbab, 0x8976, 0x7370, 0xd068, 0xa0eb, 0x1f8c, 0x1, 0x1);
        gbc.writeMem(0xbab, { 0x94 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8976, gbc.sp());
        EXPECT(0xbac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0261
        gbc.setState(0x58c5, 0xfdc7, 0xd7a0, 0xb90f, 0xab4b, 0x7aec, 0x0, 0x0);
        gbc.writeMem(0x58c5, { 0x94 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfdc7, gbc.sp());
        EXPECT(0x58c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0262
        gbc.setState(0xe994, 0x4b97, 0x2410, 0x4f6b, 0x735f, 0xdd5, 0x1, 0x1);
        gbc.writeMem(0xe994, { 0x94 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4b97, gbc.sp());
        EXPECT(0xe995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe994));
        // 94 0263
        gbc.setState(0xe6b6, 0xee73, 0x66c0, 0xd186, 0xe54b, 0x6ee2, 0x0, 0x1);
        gbc.writeMem(0xe6b6, { 0x94 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xee73, gbc.sp());
        EXPECT(0xe6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe6b6));
        // 94 0264
        gbc.setState(0x747a, 0x3079, 0xc6c0, 0xe048, 0x9b18, 0x742b, 0x1, 0x1);
        gbc.writeMem(0x747a, { 0x94 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3079, gbc.sp());
        EXPECT(0x747b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0265
        gbc.setState(0x305b, 0xf9ea, 0xe40, 0xb90, 0x5d69, 0x61e3, 0x1, 0x1);
        gbc.writeMem(0x305b, { 0x94 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf9ea, gbc.sp());
        EXPECT(0x305c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0266
        gbc.setState(0x1765, 0x1b3b, 0x90a0, 0x43bc, 0x2aec, 0x593b, 0x1, 0x1);
        gbc.writeMem(0x1765, { 0x94 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1b3b, gbc.sp());
        EXPECT(0x1766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0267
        gbc.setState(0x63d9, 0xfcb7, 0xe210, 0x3e7e, 0x14d6, 0x54c5, 0x0, 0x0);
        gbc.writeMem(0x63d9, { 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfcb7, gbc.sp());
        EXPECT(0x63da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0268
        gbc.setState(0x3486, 0x217e, 0x3170, 0xa294, 0x4cff, 0x6e9b, 0x0, 0x1);
        gbc.writeMem(0x3486, { 0x94 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x217e, gbc.sp());
        EXPECT(0x3487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0269
        gbc.setState(0x60cb, 0x293d, 0x9ec0, 0x84c8, 0x7b2d, 0x724f, 0x0, 0x0);
        gbc.writeMem(0x60cb, { 0x94 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x293d, gbc.sp());
        EXPECT(0x60cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 026A
        gbc.setState(0x592d, 0x668f, 0xf730, 0x36d6, 0xf861, 0x6390, 0x1, 0x1);
        gbc.writeMem(0x592d, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x668f, gbc.sp());
        EXPECT(0x592e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 026B
        gbc.setState(0x5ac1, 0x27c2, 0xaf10, 0x3f4e, 0x936f, 0x8d70, 0x1, 0x0);
        gbc.writeMem(0x5ac1, { 0x94 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x27c2, gbc.sp());
        EXPECT(0x5ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 026C
        gbc.setState(0xf14, 0x3051, 0x6ea0, 0xf461, 0x77d6, 0xb75d, 0x1, 0x0);
        gbc.writeMem(0xf14, { 0x94 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3051, gbc.sp());
        EXPECT(0xf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 026D
        gbc.setState(0x7e67, 0xfa90, 0x16a0, 0x13ab, 0x3bf4, 0xa8f3, 0x0, 0x1);
        gbc.writeMem(0x7e67, { 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xfa90, gbc.sp());
        EXPECT(0x7e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 026E
        gbc.setState(0x9f86, 0x44e2, 0x1c10, 0xe4e3, 0x9684, 0x5ed0, 0x0, 0x0);
        gbc.writeMem(0x9f86, { 0x94 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x44e2, gbc.sp());
        EXPECT(0x9f87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9f86));
        // 94 026F
        gbc.setState(0xdc18, 0x23a2, 0xf5e0, 0xd22, 0x904b, 0x3ce9, 0x1, 0x0);
        gbc.writeMem(0xdc18, { 0x94 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x23a2, gbc.sp());
        EXPECT(0xdc19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdc18));
        // 94 0270
        gbc.setState(0xe89a, 0xb226, 0x9a20, 0xf413, 0x9c5d, 0xc2cc, 0x1, 0x1);
        gbc.writeMem(0xe89a, { 0x94 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb226, gbc.sp());
        EXPECT(0xe89b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe89a));
        // 94 0271
        gbc.setState(0xdf17, 0x5d7a, 0x3420, 0x80d7, 0x2bb2, 0x1325, 0x1, 0x0);
        gbc.writeMem(0xdf17, { 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5d7a, gbc.sp());
        EXPECT(0xdf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdf17));
        // 94 0272
        gbc.setState(0x5ca1, 0xdd2f, 0x5cf0, 0xbeb8, 0x7da5, 0x4cc8, 0x0, 0x0);
        gbc.writeMem(0x5ca1, { 0x94 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdd2f, gbc.sp());
        EXPECT(0x5ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0273
        gbc.setState(0x5e39, 0xd3cd, 0xdef0, 0xd152, 0x9761, 0x708c, 0x1, 0x0);
        gbc.writeMem(0x5e39, { 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd3cd, gbc.sp());
        EXPECT(0x5e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0274
        gbc.setState(0x2eef, 0x28ae, 0x9680, 0xdbf8, 0xd375, 0x3033, 0x1, 0x0);
        gbc.writeMem(0x2eef, { 0x94 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x28ae, gbc.sp());
        EXPECT(0x2ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0275
        gbc.setState(0x32db, 0xf22f, 0x4980, 0x238c, 0xcc5b, 0x2834, 0x1, 0x0);
        gbc.writeMem(0x32db, { 0x94 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf22f, gbc.sp());
        EXPECT(0x32dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0276
        gbc.setState(0x64ba, 0xd21a, 0x88a0, 0x4c24, 0xbd95, 0xad7b, 0x0, 0x1);
        gbc.writeMem(0x64ba, { 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd21a, gbc.sp());
        EXPECT(0x64bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0277
        gbc.setState(0x8036, 0xf72d, 0xb930, 0x712, 0x7096, 0x6289, 0x0, 0x1);
        gbc.writeMem(0x8036, { 0x94 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf72d, gbc.sp());
        EXPECT(0x8037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8036));
        // 94 0278
        gbc.setState(0x7872, 0x688, 0xc2c0, 0xfc38, 0x4da3, 0xcade, 0x0, 0x0);
        gbc.writeMem(0x7872, { 0x94 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x688, gbc.sp());
        EXPECT(0x7873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0279
        gbc.setState(0x8825, 0xbd6b, 0x9b90, 0x39c6, 0xe043, 0x4f9a, 0x1, 0x0);
        gbc.writeMem(0x8825, { 0x94 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbd6b, gbc.sp());
        EXPECT(0x8826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8825));
        // 94 027A
        gbc.setState(0xaa58, 0xefda, 0x9d60, 0xd6a0, 0xa632, 0x7214, 0x0, 0x0);
        gbc.writeMem(0xaa58, { 0x94 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xefda, gbc.sp());
        EXPECT(0xaa59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaa58));
        // 94 027B
        gbc.setState(0xdfc7, 0x8d87, 0xe3c0, 0xb959, 0xa9d9, 0x837d, 0x1, 0x1);
        gbc.writeMem(0xdfc7, { 0x94 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8d87, gbc.sp());
        EXPECT(0xdfc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdfc7));
        // 94 027C
        gbc.setState(0x61ba, 0xb2d9, 0x8e60, 0x9093, 0x22b0, 0x6f53, 0x0, 0x0);
        gbc.writeMem(0x61ba, { 0x94 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb2d9, gbc.sp());
        EXPECT(0x61bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 027D
        gbc.setState(0x9293, 0x7c6d, 0x4910, 0x21ab, 0xbd9b, 0x1847, 0x1, 0x1);
        gbc.writeMem(0x9293, { 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7c6d, gbc.sp());
        EXPECT(0x9294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9293));
        // 94 027E
        gbc.setState(0x86c8, 0x5e60, 0x4600, 0x34af, 0xf8cb, 0xc193, 0x1, 0x1);
        gbc.writeMem(0x86c8, { 0x94 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5e60, gbc.sp());
        EXPECT(0x86c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x86c8));
        // 94 027F
        gbc.setState(0x6ecc, 0x72d2, 0x1190, 0x2fbc, 0xe745, 0xcf0c, 0x1, 0x1);
        gbc.writeMem(0x6ecc, { 0x94 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x72d2, gbc.sp());
        EXPECT(0x6ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0280
        gbc.setState(0x5419, 0xa4e2, 0x2120, 0xf32d, 0x5535, 0x3714, 0x0, 0x0);
        gbc.writeMem(0x5419, { 0x94 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa4e2, gbc.sp());
        EXPECT(0x541a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0281
        gbc.setState(0x2e06, 0xfba0, 0xe750, 0x323f, 0xf05b, 0xad81, 0x1, 0x0);
        gbc.writeMem(0x2e06, { 0x94 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfba0, gbc.sp());
        EXPECT(0x2e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0282
        gbc.setState(0x2f60, 0x3591, 0x83a0, 0x26d1, 0x7cd1, 0x8eb3, 0x1, 0x1);
        gbc.writeMem(0x2f60, { 0x94 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3591, gbc.sp());
        EXPECT(0x2f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0283
        gbc.setState(0x6285, 0x913b, 0xd790, 0xf48c, 0x7f60, 0x5516, 0x1, 0x0);
        gbc.writeMem(0x6285, { 0x94 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x913b, gbc.sp());
        EXPECT(0x6286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0284
        gbc.setState(0xb6bc, 0x53b9, 0xfcf0, 0x4969, 0xb6ab, 0x383a, 0x0, 0x0);
        gbc.writeMem(0xb6bc, { 0x94 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x53b9, gbc.sp());
        EXPECT(0xb6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb6bc));
        // 94 0285
        gbc.setState(0xefdc, 0x789f, 0x3e90, 0xe10b, 0x3ac9, 0xcb09, 0x0, 0x1);
        gbc.writeMem(0xefdc, { 0x94 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x789f, gbc.sp());
        EXPECT(0xefdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xefdc));
        // 94 0286
        gbc.setState(0xebc6, 0xd44a, 0x59e0, 0xbdc7, 0x73f2, 0x148, 0x1, 0x0);
        gbc.writeMem(0xebc6, { 0x94 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd44a, gbc.sp());
        EXPECT(0xebc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xebc6));
        // 94 0287
        gbc.setState(0x4499, 0xe16b, 0xf9d0, 0x5abb, 0x5013, 0x9479, 0x0, 0x1);
        gbc.writeMem(0x4499, { 0x94 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe16b, gbc.sp());
        EXPECT(0x449a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0288
        gbc.setState(0x631e, 0xf144, 0xd740, 0x3fb6, 0xb5d2, 0x99cb, 0x0, 0x0);
        gbc.writeMem(0x631e, { 0x94 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf144, gbc.sp());
        EXPECT(0x631f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0289
        gbc.setState(0x788c, 0xdcbe, 0xb0a0, 0xda28, 0x5e46, 0xed8e, 0x0, 0x1);
        gbc.writeMem(0x788c, { 0x94 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdcbe, gbc.sp());
        EXPECT(0x788d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 028A
        gbc.setState(0x316a, 0x13d1, 0x8440, 0x4e67, 0x3dc0, 0x473e, 0x1, 0x0);
        gbc.writeMem(0x316a, { 0x94 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x13d1, gbc.sp());
        EXPECT(0x316b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 028B
        gbc.setState(0x68e5, 0xc350, 0x33f0, 0xa9a9, 0x62ab, 0x918c, 0x1, 0x1);
        gbc.writeMem(0x68e5, { 0x94 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc350, gbc.sp());
        EXPECT(0x68e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 028C
        gbc.setState(0x906e, 0x4dfb, 0x7710, 0xec65, 0x23eb, 0x1e8a, 0x1, 0x0);
        gbc.writeMem(0x906e, { 0x94 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4dfb, gbc.sp());
        EXPECT(0x906f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x906e));
        // 94 028D
        gbc.setState(0xd3e2, 0xe3b3, 0x6e70, 0xb1d5, 0x627a, 0x9b22, 0x0, 0x0);
        gbc.writeMem(0xd3e2, { 0x94 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe3b3, gbc.sp());
        EXPECT(0xd3e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd3e2));
        // 94 028E
        gbc.setState(0x1a45, 0x5f9f, 0x6180, 0xac18, 0x7c9a, 0xa1a8, 0x1, 0x1);
        gbc.writeMem(0x1a45, { 0x94 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5f9f, gbc.sp());
        EXPECT(0x1a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 028F
        gbc.setState(0x298f, 0x91e1, 0x210, 0x54b1, 0x38ed, 0x5a2b, 0x0, 0x0);
        gbc.writeMem(0x298f, { 0x94 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x91e1, gbc.sp());
        EXPECT(0x2990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0290
        gbc.setState(0x6886, 0x5e75, 0xecd0, 0xb263, 0x1cb5, 0x4e70, 0x1, 0x0);
        gbc.writeMem(0x6886, { 0x94 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5e75, gbc.sp());
        EXPECT(0x6887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0291
        gbc.setState(0x64e5, 0xfd7, 0x6020, 0x954e, 0x3be7, 0xd70d, 0x0, 0x1);
        gbc.writeMem(0x64e5, { 0x94 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfd7, gbc.sp());
        EXPECT(0x64e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0292
        gbc.setState(0x281, 0x346b, 0xfda0, 0xb3bf, 0x8b53, 0x64d4, 0x0, 0x1);
        gbc.writeMem(0x281, { 0x94 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x346b, gbc.sp());
        EXPECT(0x282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0293
        gbc.setState(0xdf53, 0x4a08, 0x25a0, 0xc277, 0x97e6, 0x626f, 0x1, 0x0);
        gbc.writeMem(0xdf53, { 0x94 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4a08, gbc.sp());
        EXPECT(0xdf54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdf53));
        // 94 0294
        gbc.setState(0x42d3, 0xdc66, 0xd1d0, 0xd07b, 0xd3be, 0xd53c, 0x0, 0x1);
        gbc.writeMem(0x42d3, { 0x94 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdc66, gbc.sp());
        EXPECT(0x42d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0295
        gbc.setState(0x5cca, 0x31f0, 0x9610, 0xcf77, 0x4ba9, 0x6b68, 0x1, 0x0);
        gbc.writeMem(0x5cca, { 0x94 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x31f0, gbc.sp());
        EXPECT(0x5ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0296
        gbc.setState(0xead6, 0x453d, 0x6890, 0xd791, 0x8a05, 0xac33, 0x1, 0x0);
        gbc.writeMem(0xead6, { 0x94 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x453d, gbc.sp());
        EXPECT(0xead7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xead6));
        // 94 0297
        gbc.setState(0xe65a, 0xcf13, 0xc640, 0x1d1a, 0x4182, 0xb05b, 0x0, 0x0);
        gbc.writeMem(0xe65a, { 0x94 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcf13, gbc.sp());
        EXPECT(0xe65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe65a));
        // 94 0298
        gbc.setState(0xc3f3, 0xe779, 0x37a0, 0x9924, 0x8438, 0xb957, 0x1, 0x1);
        gbc.writeMem(0xc3f3, { 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe779, gbc.sp());
        EXPECT(0xc3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc3f3));
        // 94 0299
        gbc.setState(0x485c, 0x5802, 0xa450, 0x769f, 0x23b9, 0xbf50, 0x0, 0x0);
        gbc.writeMem(0x485c, { 0x94 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5802, gbc.sp());
        EXPECT(0x485d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 029A
        gbc.setState(0x955f, 0x971d, 0x8f70, 0x9f5f, 0x5cf, 0x5bab, 0x0, 0x0);
        gbc.writeMem(0x955f, { 0x94 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x971d, gbc.sp());
        EXPECT(0x9560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x955f));
        // 94 029B
        gbc.setState(0xc5ae, 0x9b86, 0x35a0, 0x9c5c, 0x4aea, 0x2dba, 0x1, 0x0);
        gbc.writeMem(0xc5ae, { 0x94 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9b86, gbc.sp());
        EXPECT(0xc5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc5ae));
        // 94 029E
        gbc.setState(0x5137, 0xa2ed, 0x9070, 0x648a, 0xbfce, 0x326, 0x0, 0x0);
        gbc.writeMem(0x5137, { 0x94 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa2ed, gbc.sp());
        EXPECT(0x5138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 029F
        gbc.setState(0x41a, 0xb811, 0x7f50, 0xa4bc, 0xc5aa, 0xda9b, 0x0, 0x1);
        gbc.writeMem(0x41a, { 0x94 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb811, gbc.sp());
        EXPECT(0x41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02A0
        gbc.setState(0x2f7b, 0xc490, 0xc760, 0x2347, 0xab37, 0x4c3c, 0x1, 0x0);
        gbc.writeMem(0x2f7b, { 0x94 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc490, gbc.sp());
        EXPECT(0x2f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02A1
        gbc.setState(0x8e1f, 0x416d, 0xc890, 0x75b4, 0xbb20, 0x7e6c, 0x0, 0x0);
        gbc.writeMem(0x8e1f, { 0x94 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x416d, gbc.sp());
        EXPECT(0x8e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8e1f));
        // 94 02A2
        gbc.setState(0x13de, 0xe316, 0x9b00, 0xe249, 0xa45f, 0x31ee, 0x0, 0x0);
        gbc.writeMem(0x13de, { 0x94 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe316, gbc.sp());
        EXPECT(0x13df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02A3
        gbc.setState(0x129f, 0x128e, 0x5f0, 0xd588, 0x41a1, 0xa2b0, 0x0, 0x1);
        gbc.writeMem(0x129f, { 0x94 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x128e, gbc.sp());
        EXPECT(0x12a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02A4
        gbc.setState(0x958b, 0x26a0, 0x4840, 0x2dcf, 0x7d15, 0x8c8e, 0x0, 0x0);
        gbc.writeMem(0x958b, { 0x94 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x26a0, gbc.sp());
        EXPECT(0x958c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x958b));
        // 94 02A5
        gbc.setState(0xd0cc, 0x87c6, 0x8680, 0x3d91, 0x246c, 0xa6c8, 0x1, 0x1);
        gbc.writeMem(0xd0cc, { 0x94 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x87c6, gbc.sp());
        EXPECT(0xd0cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd0cc));
        // 94 02A6
        gbc.setState(0xe76b, 0x3a16, 0x2860, 0x6fdf, 0x1d96, 0xa46c, 0x1, 0x0);
        gbc.writeMem(0xe76b, { 0x94 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3a16, gbc.sp());
        EXPECT(0xe76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe76b));
        // 94 02A7
        gbc.setState(0x42dc, 0xa8c8, 0x8990, 0x35bb, 0x3478, 0x59b, 0x0, 0x1);
        gbc.writeMem(0x42dc, { 0x94 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa8c8, gbc.sp());
        EXPECT(0x42dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02A8
        gbc.setState(0xc281, 0xa8a6, 0xc0c0, 0xc938, 0x3966, 0x7a4c, 0x1, 0x0);
        gbc.writeMem(0xc281, { 0x94 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa8a6, gbc.sp());
        EXPECT(0xc282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc281));
        // 94 02A9
        gbc.setState(0x3b45, 0x6349, 0xbbb0, 0xd94, 0xbd66, 0x515d, 0x1, 0x0);
        gbc.writeMem(0x3b45, { 0x94 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6349, gbc.sp());
        EXPECT(0x3b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02AA
        gbc.setState(0xefdc, 0x5093, 0xf640, 0x13c3, 0x342d, 0x6a5a, 0x1, 0x0);
        gbc.writeMem(0xefdc, { 0x94 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5093, gbc.sp());
        EXPECT(0xefdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xefdc));
        // 94 02AB
        gbc.setState(0xb489, 0xbd24, 0x8e10, 0xdd0b, 0xec6, 0xf60, 0x0, 0x1);
        gbc.writeMem(0xb489, { 0x94 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbd24, gbc.sp());
        EXPECT(0xb48a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb489));
        // 94 02AC
        gbc.setState(0x4c26, 0x996, 0x62a0, 0xefe3, 0x2f54, 0x6de6, 0x1, 0x1);
        gbc.writeMem(0x4c26, { 0x94 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x996, gbc.sp());
        EXPECT(0x4c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02AD
        gbc.setState(0xbd56, 0xd60f, 0x94a0, 0xfd37, 0x3c0b, 0x85bf, 0x0, 0x1);
        gbc.writeMem(0xbd56, { 0x94 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd60f, gbc.sp());
        EXPECT(0xbd57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbd56));
        // 94 02AE
        gbc.setState(0xbbfe, 0x30bc, 0xb580, 0x2e44, 0xbc1d, 0x1be3, 0x0, 0x0);
        gbc.writeMem(0xbbfe, { 0x94 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x30bc, gbc.sp());
        EXPECT(0xbbff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbbfe));
        // 94 02AF
        gbc.setState(0xcb93, 0x8b7d, 0xe930, 0xe90e, 0x49cf, 0xbf3e, 0x1, 0x0);
        gbc.writeMem(0xcb93, { 0x94 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8b7d, gbc.sp());
        EXPECT(0xcb94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcb93));
        // 94 02B0
        gbc.setState(0x4a38, 0x755, 0x5e80, 0x6fd8, 0x8fe3, 0xd4db, 0x1, 0x0);
        gbc.writeMem(0x4a38, { 0x94 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x755, gbc.sp());
        EXPECT(0x4a39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02B2
        gbc.setState(0xd60a, 0xf20, 0x7760, 0x11e1, 0x3071, 0xdb2d, 0x0, 0x1);
        gbc.writeMem(0xd60a, { 0x94 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf20, gbc.sp());
        EXPECT(0xd60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd60a));
        // 94 02B3
        gbc.setState(0xa219, 0x80a0, 0x8830, 0x3fb9, 0xfcf5, 0x38d7, 0x0, 0x0);
        gbc.writeMem(0xa219, { 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x80a0, gbc.sp());
        EXPECT(0xa21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa219));
        // 94 02B4
        gbc.setState(0x9f6d, 0x4f56, 0xd760, 0x4d95, 0x280d, 0x855, 0x1, 0x1);
        gbc.writeMem(0x9f6d, { 0x94 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4f56, gbc.sp());
        EXPECT(0x9f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9f6d));
        // 94 02B5
        gbc.setState(0xa4bc, 0x2e1f, 0xa4b0, 0x26e5, 0x9cf9, 0x6fdb, 0x0, 0x1);
        gbc.writeMem(0xa4bc, { 0x94 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2e1f, gbc.sp());
        EXPECT(0xa4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa4bc));
        // 94 02B6
        gbc.setState(0x2f67, 0x4710, 0xba10, 0x4da, 0x5d86, 0x9efc, 0x1, 0x0);
        gbc.writeMem(0x2f67, { 0x94 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4710, gbc.sp());
        EXPECT(0x2f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02B9
        gbc.setState(0xa1c, 0x4c55, 0x1c20, 0xc4d, 0x94df, 0xc12b, 0x1, 0x1);
        gbc.writeMem(0xa1c, { 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4c55, gbc.sp());
        EXPECT(0xa1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02BA
        gbc.setState(0xcb4f, 0x2662, 0x1e0, 0xf379, 0x1e72, 0x518b, 0x0, 0x0);
        gbc.writeMem(0xcb4f, { 0x94 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2662, gbc.sp());
        EXPECT(0xcb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcb4f));
        // 94 02BB
        gbc.setState(0x44a5, 0x6225, 0x13a0, 0xb97e, 0x10a8, 0x6dd8, 0x0, 0x1);
        gbc.writeMem(0x44a5, { 0x94 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6225, gbc.sp());
        EXPECT(0x44a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02BC
        gbc.setState(0x3602, 0xf01f, 0x7260, 0x410a, 0x392c, 0xf7f0, 0x0, 0x1);
        gbc.writeMem(0x3602, { 0x94 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf01f, gbc.sp());
        EXPECT(0x3603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02BD
        gbc.setState(0x7ff5, 0x43ab, 0xf380, 0x8c88, 0xf404, 0xa3e3, 0x1, 0x0);
        gbc.writeMem(0x7ff5, { 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x43ab, gbc.sp());
        EXPECT(0x7ff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02BE
        gbc.setState(0x99ca, 0x45ee, 0xcf60, 0x25b4, 0xff01, 0x343c, 0x1, 0x1);
        gbc.writeMem(0x99ca, { 0x94 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x45ee, gbc.sp());
        EXPECT(0x99cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x99ca));
        // 94 02C0
        gbc.setState(0xb7e2, 0x77c3, 0x3e0, 0xc8e, 0x4b4a, 0xfe2d, 0x1, 0x0);
        gbc.writeMem(0xb7e2, { 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x77c3, gbc.sp());
        EXPECT(0xb7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb7e2));
        // 94 02C2
        gbc.setState(0x79ab, 0x8720, 0xdb10, 0x567, 0x157b, 0xf7ff, 0x0, 0x1);
        gbc.writeMem(0x79ab, { 0x94 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8720, gbc.sp());
        EXPECT(0x79ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02C3
        gbc.setState(0x7933, 0x9262, 0x8b50, 0xb084, 0x77f3, 0xd861, 0x0, 0x1);
        gbc.writeMem(0x7933, { 0x94 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9262, gbc.sp());
        EXPECT(0x7934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02C4
        gbc.setState(0xdc25, 0xce82, 0x2ff0, 0x46aa, 0xbfc3, 0x68dd, 0x0, 0x1);
        gbc.writeMem(0xdc25, { 0x94 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xce82, gbc.sp());
        EXPECT(0xdc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdc25));
        // 94 02C5
        gbc.setState(0xbd01, 0x19cc, 0x1ab0, 0xf333, 0xe9bd, 0x7ebd, 0x0, 0x1);
        gbc.writeMem(0xbd01, { 0x94 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x19cc, gbc.sp());
        EXPECT(0xbd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbd01));
        // 94 02C6
        gbc.setState(0x296c, 0x3f5f, 0xf8d0, 0xff5d, 0x77e6, 0xcbba, 0x1, 0x1);
        gbc.writeMem(0x296c, { 0x94 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3f5f, gbc.sp());
        EXPECT(0x296d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02C7
        gbc.setState(0xba4, 0x444f, 0x3370, 0xe36d, 0xfa69, 0x4bc1, 0x1, 0x1);
        gbc.writeMem(0xba4, { 0x94 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x444f, gbc.sp());
        EXPECT(0xba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02C8
        gbc.setState(0x59df, 0x552e, 0x69e0, 0x2015, 0x9a1b, 0x9cad, 0x0, 0x0);
        gbc.writeMem(0x59df, { 0x94 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x552e, gbc.sp());
        EXPECT(0x59e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02C9
        gbc.setState(0x954c, 0xd086, 0xe7a0, 0x16ea, 0xaa50, 0x7973, 0x0, 0x0);
        gbc.writeMem(0x954c, { 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd086, gbc.sp());
        EXPECT(0x954d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x954c));
        // 94 02CA
        gbc.setState(0xd13f, 0x9da6, 0x350, 0x6b28, 0x2218, 0xf3ff, 0x1, 0x0);
        gbc.writeMem(0xd13f, { 0x94 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9da6, gbc.sp());
        EXPECT(0xd140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd13f));
        // 94 02CC
        gbc.setState(0x73a7, 0x4be5, 0xe8f0, 0xaa22, 0xfe6c, 0x632c, 0x0, 0x0);
        gbc.writeMem(0x73a7, { 0x94 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4be5, gbc.sp());
        EXPECT(0x73a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02CD
        gbc.setState(0xcd75, 0xad5, 0xe1c0, 0x403a, 0xde5d, 0x85e6, 0x1, 0x0);
        gbc.writeMem(0xcd75, { 0x94 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xad5, gbc.sp());
        EXPECT(0xcd76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcd75));
        // 94 02CE
        gbc.setState(0x7582, 0x6204, 0xb90, 0xf330, 0x2f0e, 0xe707, 0x0, 0x0);
        gbc.writeMem(0x7582, { 0x94 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6204, gbc.sp());
        EXPECT(0x7583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02CF
        gbc.setState(0xdb7c, 0xf323, 0xdf10, 0x346c, 0x5c97, 0xb2ec, 0x0, 0x0);
        gbc.writeMem(0xdb7c, { 0x94 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf323, gbc.sp());
        EXPECT(0xdb7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdb7c));
        // 94 02D0
        gbc.setState(0xa05a, 0xdd82, 0xc830, 0xa2cf, 0xd6cf, 0xc2ae, 0x0, 0x0);
        gbc.writeMem(0xa05a, { 0x94 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdd82, gbc.sp());
        EXPECT(0xa05b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa05a));
        // 94 02D1
        gbc.setState(0x9caf, 0x857c, 0xdcc0, 0x66b7, 0x8dc2, 0x64dd, 0x0, 0x1);
        gbc.writeMem(0x9caf, { 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x857c, gbc.sp());
        EXPECT(0x9cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9caf));
        // 94 02D2
        gbc.setState(0x181e, 0x62e2, 0xb9b0, 0x3c67, 0xb2ef, 0xac75, 0x1, 0x1);
        gbc.writeMem(0x181e, { 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x62e2, gbc.sp());
        EXPECT(0x181f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02D3
        gbc.setState(0x5393, 0xec93, 0xb000, 0x3889, 0xab02, 0x6574, 0x1, 0x1);
        gbc.writeMem(0x5393, { 0x94 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xec93, gbc.sp());
        EXPECT(0x5394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02D4
        gbc.setState(0xb4db, 0xf59a, 0x9480, 0x5aaf, 0x49eb, 0x7e6d, 0x0, 0x1);
        gbc.writeMem(0xb4db, { 0x94 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf59a, gbc.sp());
        EXPECT(0xb4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb4db));
        // 94 02D5
        gbc.setState(0x454c, 0x50c3, 0x2f70, 0xf321, 0x3c43, 0x2b5d, 0x1, 0x1);
        gbc.writeMem(0x454c, { 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x50c3, gbc.sp());
        EXPECT(0x454d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02D6
        gbc.setState(0x17bb, 0xbed1, 0x1c30, 0x9385, 0x4f08, 0x77f7, 0x1, 0x0);
        gbc.writeMem(0x17bb, { 0x94 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbed1, gbc.sp());
        EXPECT(0x17bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02D8
        gbc.setState(0x78d6, 0x506b, 0x64e0, 0x4e87, 0x21fa, 0xa647, 0x1, 0x0);
        gbc.writeMem(0x78d6, { 0x94 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x506b, gbc.sp());
        EXPECT(0x78d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02D9
        gbc.setState(0x7de2, 0x87ea, 0x88e0, 0x8e21, 0x1165, 0xe53a, 0x0, 0x1);
        gbc.writeMem(0x7de2, { 0x94 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x87ea, gbc.sp());
        EXPECT(0x7de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02DA
        gbc.setState(0x96a0, 0x286e, 0x93a0, 0xfac4, 0x727d, 0x461a, 0x1, 0x0);
        gbc.writeMem(0x96a0, { 0x94 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x286e, gbc.sp());
        EXPECT(0x96a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x96a0));
        // 94 02DB
        gbc.setState(0x38, 0x59c3, 0xa4b0, 0xbba3, 0x8054, 0x9d42, 0x0, 0x1);
        gbc.writeMem(0x38, { 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x59c3, gbc.sp());
        EXPECT(0x39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02DC
        gbc.setState(0x8a50, 0xedd4, 0x7380, 0x3edf, 0xddb4, 0xbc1c, 0x0, 0x1);
        gbc.writeMem(0x8a50, { 0x94 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xedd4, gbc.sp());
        EXPECT(0x8a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8a50));
        // 94 02DD
        gbc.setState(0x1e04, 0x9f17, 0x680, 0xfb73, 0xbbab, 0xe962, 0x1, 0x1);
        gbc.writeMem(0x1e04, { 0x94 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9f17, gbc.sp());
        EXPECT(0x1e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02DE
        gbc.setState(0x3a5b, 0x713f, 0x3510, 0x97b0, 0xe780, 0x5a06, 0x0, 0x1);
        gbc.writeMem(0x3a5b, { 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x713f, gbc.sp());
        EXPECT(0x3a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02DF
        gbc.setState(0x13aa, 0xfa76, 0xb000, 0x68b1, 0x36d9, 0x706d, 0x0, 0x0);
        gbc.writeMem(0x13aa, { 0x94 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfa76, gbc.sp());
        EXPECT(0x13ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02E0
        gbc.setState(0x99e9, 0xce24, 0x9720, 0xd348, 0xf761, 0x364e, 0x1, 0x1);
        gbc.writeMem(0x99e9, { 0x94 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xce24, gbc.sp());
        EXPECT(0x99ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x99e9));
        // 94 02E1
        gbc.setState(0x1091, 0x8d99, 0xe1c0, 0xbb71, 0x8197, 0x8a8e, 0x0, 0x1);
        gbc.writeMem(0x1091, { 0x94 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8d99, gbc.sp());
        EXPECT(0x1092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02E2
        gbc.setState(0x99bb, 0x6bce, 0xf9d0, 0xee7e, 0x9c58, 0xd38, 0x0, 0x0);
        gbc.writeMem(0x99bb, { 0x94 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6bce, gbc.sp());
        EXPECT(0x99bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x99bb));
        // 94 02E3
        gbc.setState(0x42a2, 0xcbcb, 0x8f50, 0x9860, 0x1531, 0xa9c9, 0x0, 0x0);
        gbc.writeMem(0x42a2, { 0x94 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcbcb, gbc.sp());
        EXPECT(0x42a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02E4
        gbc.setState(0xa3c9, 0x5d8f, 0x7200, 0xc8be, 0x2718, 0xa38a, 0x0, 0x0);
        gbc.writeMem(0xa3c9, { 0x94 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5d8f, gbc.sp());
        EXPECT(0xa3ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa3c9));
        // 94 02E5
        gbc.setState(0x5e05, 0xd9fe, 0xc000, 0x123b, 0x79da, 0x9ccd, 0x1, 0x1);
        gbc.writeMem(0x5e05, { 0x94 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd9fe, gbc.sp());
        EXPECT(0x5e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02E6
        gbc.setState(0x504c, 0xdf7, 0x8230, 0xfc94, 0xbc15, 0xc3cd, 0x1, 0x0);
        gbc.writeMem(0x504c, { 0x94 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdf7, gbc.sp());
        EXPECT(0x504d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02E7
        gbc.setState(0x1074, 0x779a, 0xb050, 0x3429, 0xc169, 0xb013, 0x0, 0x0);
        gbc.writeMem(0x1074, { 0x94 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x779a, gbc.sp());
        EXPECT(0x1075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02E8
        gbc.setState(0x8466, 0xfd5a, 0x3c10, 0xf61e, 0x5491, 0xbc1d, 0x1, 0x0);
        gbc.writeMem(0x8466, { 0x94 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfd5a, gbc.sp());
        EXPECT(0x8467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8466));
        // 94 02E9
        gbc.setState(0x505b, 0x7cc7, 0x97d0, 0xbc6c, 0xcaaf, 0x4694, 0x1, 0x1);
        gbc.writeMem(0x505b, { 0x94 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7cc7, gbc.sp());
        EXPECT(0x505c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02EA
        gbc.setState(0x887d, 0xbc34, 0xecd0, 0x7074, 0x1c64, 0x159, 0x1, 0x0);
        gbc.writeMem(0x887d, { 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xbc34, gbc.sp());
        EXPECT(0x887e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x887d));
        // 94 02EB
        gbc.setState(0x31a6, 0x5390, 0x8960, 0x73af, 0xbf40, 0x29f2, 0x1, 0x0);
        gbc.writeMem(0x31a6, { 0x94 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5390, gbc.sp());
        EXPECT(0x31a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02EC
        gbc.setState(0x579, 0x51d8, 0x2d10, 0xb305, 0xc72e, 0x201b, 0x0, 0x1);
        gbc.writeMem(0x579, { 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x51d8, gbc.sp());
        EXPECT(0x57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02ED
        gbc.setState(0xc4e5, 0xca72, 0xa370, 0xd848, 0x8173, 0xe0fb, 0x1, 0x0);
        gbc.writeMem(0xc4e5, { 0x94 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xca72, gbc.sp());
        EXPECT(0xc4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc4e5));
        // 94 02EF
        gbc.setState(0x5678, 0x247c, 0x4f10, 0xf91f, 0x2838, 0x8566, 0x0, 0x0);
        gbc.writeMem(0x5678, { 0x94 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x247c, gbc.sp());
        EXPECT(0x5679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02F1
        gbc.setState(0xe9c9, 0x6da0, 0x5290, 0x5c7a, 0xbd24, 0x759c, 0x1, 0x0);
        gbc.writeMem(0xe9c9, { 0x94 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6da0, gbc.sp());
        EXPECT(0xe9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe9c9));
        // 94 02F2
        gbc.setState(0xbb2e, 0xf713, 0xafc0, 0xfe8d, 0xd108, 0x7e22, 0x0, 0x0);
        gbc.writeMem(0xbb2e, { 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf713, gbc.sp());
        EXPECT(0xbb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbb2e));
        // 94 02F3
        gbc.setState(0xc01f, 0x8fe4, 0xb920, 0x5f10, 0xa64f, 0x9b68, 0x1, 0x1);
        gbc.writeMem(0xc01f, { 0x94 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8fe4, gbc.sp());
        EXPECT(0xc020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc01f));
        // 94 02F4
        gbc.setState(0x80ec, 0x86cf, 0xa500, 0x3325, 0x8d33, 0x4a27, 0x0, 0x0);
        gbc.writeMem(0x80ec, { 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x86cf, gbc.sp());
        EXPECT(0x80ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x80ec));
        // 94 02F5
        gbc.setState(0x3ef, 0x71ef, 0x18f0, 0x67df, 0x355, 0xa920, 0x0, 0x1);
        gbc.writeMem(0x3ef, { 0x94 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x71ef, gbc.sp());
        EXPECT(0x3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02F6
        gbc.setState(0x7019, 0x8584, 0x6500, 0x7860, 0x2278, 0x6805, 0x1, 0x0);
        gbc.writeMem(0x7019, { 0x94 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8584, gbc.sp());
        EXPECT(0x701a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02F7
        gbc.setState(0x3aae, 0x4874, 0x7c60, 0x928, 0xb74, 0x56b5, 0x0, 0x0);
        gbc.writeMem(0x3aae, { 0x94 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4874, gbc.sp());
        EXPECT(0x3aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02F8
        gbc.setState(0x2ac3, 0x6fed, 0x9cf0, 0xd4d5, 0xa59b, 0x7583, 0x0, 0x0);
        gbc.writeMem(0x2ac3, { 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6fed, gbc.sp());
        EXPECT(0x2ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02F9
        gbc.setState(0x1712, 0x61b, 0x6e30, 0x1d07, 0xb63e, 0x15df, 0x0, 0x0);
        gbc.writeMem(0x1712, { 0x94 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x61b, gbc.sp());
        EXPECT(0x1713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02FA
        gbc.setState(0x69a5, 0x10f3, 0x9c30, 0xe7f4, 0x6931, 0x1c99, 0x0, 0x1);
        gbc.writeMem(0x69a5, { 0x94 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x10f3, gbc.sp());
        EXPECT(0x69a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02FB
        gbc.setState(0x157d, 0x891, 0x3bf0, 0xc528, 0x9b94, 0xcc9b, 0x1, 0x0);
        gbc.writeMem(0x157d, { 0x94 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x891, gbc.sp());
        EXPECT(0x157e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 02FC
        gbc.setState(0x881e, 0xba87, 0x7550, 0x5a5, 0xb97a, 0xf1c0, 0x0, 0x1);
        gbc.writeMem(0x881e, { 0x94 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xba87, gbc.sp());
        EXPECT(0x881f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x881e));
        // 94 02FD
        gbc.setState(0x47f6, 0x55d8, 0xc980, 0x94dd, 0xeca3, 0x2710, 0x1, 0x0);
        gbc.writeMem(0x47f6, { 0x94 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x55d8, gbc.sp());
        EXPECT(0x47f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 02FE
        gbc.setState(0xc73f, 0xcd47, 0x7590, 0x351a, 0x37bb, 0x8286, 0x0, 0x1);
        gbc.writeMem(0xc73f, { 0x94 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcd47, gbc.sp());
        EXPECT(0xc740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc73f));
        // 94 02FF
        gbc.setState(0xe4f2, 0xba65, 0xd390, 0x3a14, 0x333c, 0x7fc9, 0x1, 0x0);
        gbc.writeMem(0xe4f2, { 0x94 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xba65, gbc.sp());
        EXPECT(0xe4f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe4f2));
        // 94 0300
        gbc.setState(0x5c04, 0xd79c, 0x87a0, 0xcf8e, 0xeb00, 0x5f6b, 0x1, 0x1);
        gbc.writeMem(0x5c04, { 0x94 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd79c, gbc.sp());
        EXPECT(0x5c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0301
        gbc.setState(0x618c, 0xab7e, 0x4580, 0x915e, 0xc6ff, 0xe212, 0x0, 0x1);
        gbc.writeMem(0x618c, { 0x94 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xab7e, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0302
        gbc.setState(0x21a, 0x8179, 0x2f90, 0xf9e6, 0x7640, 0xde7, 0x1, 0x1);
        gbc.writeMem(0x21a, { 0x94 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8179, gbc.sp());
        EXPECT(0x21b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0303
        gbc.setState(0x5577, 0x8375, 0xcbb0, 0x38b3, 0x2da4, 0x20c7, 0x0, 0x0);
        gbc.writeMem(0x5577, { 0x94 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8375, gbc.sp());
        EXPECT(0x5578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0304
        gbc.setState(0xe57f, 0xe613, 0x2c50, 0x72df, 0xa160, 0xb2df, 0x1, 0x0);
        gbc.writeMem(0xe57f, { 0x94 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe613, gbc.sp());
        EXPECT(0xe580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe57f));
        // 94 0305
        gbc.setState(0x8439, 0x1a21, 0x5220, 0xc3a4, 0x8ce2, 0x40bd, 0x1, 0x0);
        gbc.writeMem(0x8439, { 0x94 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1a21, gbc.sp());
        EXPECT(0x843a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8439));
        // 94 0306
        gbc.setState(0x769c, 0x3156, 0xd9e0, 0x8172, 0xdf3c, 0x7bb6, 0x0, 0x0);
        gbc.writeMem(0x769c, { 0x94 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3156, gbc.sp());
        EXPECT(0x769d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0307
        gbc.setState(0x49f2, 0xa057, 0x9460, 0x68dc, 0xfb7a, 0x8cc1, 0x1, 0x1);
        gbc.writeMem(0x49f2, { 0x94 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa057, gbc.sp());
        EXPECT(0x49f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0308
        gbc.setState(0x94f4, 0xc9f3, 0xcd20, 0xa7ff, 0x45a9, 0xa0d0, 0x0, 0x0);
        gbc.writeMem(0x94f4, { 0x94 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc9f3, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x94f4));
        // 94 0309
        gbc.setState(0xdb1, 0xe2df, 0xcd90, 0xa513, 0xcffc, 0x3d0, 0x1, 0x0);
        gbc.writeMem(0xdb1, { 0x94 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe2df, gbc.sp());
        EXPECT(0xdb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 030A
        gbc.setState(0x90d3, 0x14c3, 0x2730, 0x7535, 0xa5c7, 0x8cba, 0x0, 0x0);
        gbc.writeMem(0x90d3, { 0x94 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x14c3, gbc.sp());
        EXPECT(0x90d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x90d3));
        // 94 030B
        gbc.setState(0x20a7, 0x6141, 0xd7a0, 0xe1c3, 0x2f47, 0x81ec, 0x0, 0x1);
        gbc.writeMem(0x20a7, { 0x94 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6141, gbc.sp());
        EXPECT(0x20a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 030C
        gbc.setState(0xb229, 0x6883, 0x1880, 0x2ca0, 0xb43e, 0xb057, 0x1, 0x1);
        gbc.writeMem(0xb229, { 0x94 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6883, gbc.sp());
        EXPECT(0xb22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb229));
        // 94 030D
        gbc.setState(0x79, 0x9818, 0xfb60, 0xd37d, 0x5a46, 0x59df, 0x1, 0x0);
        gbc.writeMem(0x79, { 0x94 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9818, gbc.sp());
        EXPECT(0x7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 030E
        gbc.setState(0x91c4, 0xd0fa, 0xf960, 0xc7db, 0x4161, 0xc6e3, 0x1, 0x1);
        gbc.writeMem(0x91c4, { 0x94 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd0fa, gbc.sp());
        EXPECT(0x91c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x91c4));
        // 94 030F
        gbc.setState(0x36f5, 0x7d1a, 0x9ec0, 0xcd71, 0x649, 0x640a, 0x1, 0x1);
        gbc.writeMem(0x36f5, { 0x94 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7d1a, gbc.sp());
        EXPECT(0x36f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0310
        gbc.setState(0xe5e0, 0x623d, 0xf230, 0x41c8, 0x93d1, 0x3dc0, 0x0, 0x1);
        gbc.writeMem(0xe5e0, { 0x94 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x623d, gbc.sp());
        EXPECT(0xe5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe5e0));
        // 94 0311
        gbc.setState(0x404, 0x26bd, 0xbd40, 0xbb3a, 0x2e9f, 0xa364, 0x1, 0x1);
        gbc.writeMem(0x404, { 0x94 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x26bd, gbc.sp());
        EXPECT(0x405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0312
        gbc.setState(0x835d, 0x7d29, 0x1b70, 0x867, 0x1f1a, 0x70ce, 0x0, 0x1);
        gbc.writeMem(0x835d, { 0x94 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7d29, gbc.sp());
        EXPECT(0x835e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x835d));
        // 94 0313
        gbc.setState(0x93bc, 0x4300, 0x8440, 0x70cb, 0x781d, 0x34df, 0x1, 0x0);
        gbc.writeMem(0x93bc, { 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4300, gbc.sp());
        EXPECT(0x93bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x93bc));
        // 94 0314
        gbc.setState(0xa308, 0x6139, 0xfa50, 0x29cb, 0xa792, 0x8665, 0x1, 0x1);
        gbc.writeMem(0xa308, { 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6139, gbc.sp());
        EXPECT(0xa309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa308));
        // 94 0315
        gbc.setState(0x2ffa, 0xaf41, 0x5230, 0xc917, 0xb023, 0x6484, 0x0, 0x1);
        gbc.writeMem(0x2ffa, { 0x94 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xaf41, gbc.sp());
        EXPECT(0x2ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0316
        gbc.setState(0x9f5d, 0x232e, 0x6460, 0xffc8, 0xd26e, 0x3d9b, 0x1, 0x0);
        gbc.writeMem(0x9f5d, { 0x94 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x232e, gbc.sp());
        EXPECT(0x9f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9f5d));
        // 94 0317
        gbc.setState(0x238d, 0xc832, 0x3c90, 0x5b48, 0x8490, 0x9f21, 0x0, 0x0);
        gbc.writeMem(0x238d, { 0x94 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc832, gbc.sp());
        EXPECT(0x238e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0318
        gbc.setState(0xb08f, 0x7f09, 0x4a00, 0x551c, 0x108e, 0x8e83, 0x1, 0x0);
        gbc.writeMem(0xb08f, { 0x94 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7f09, gbc.sp());
        EXPECT(0xb090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb08f));
        // 94 0319
        gbc.setState(0xdff4, 0x882e, 0x24f0, 0x5883, 0xe26b, 0x5566, 0x1, 0x0);
        gbc.writeMem(0xdff4, { 0x94 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x882e, gbc.sp());
        EXPECT(0xdff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdff4));
        // 94 031A
        gbc.setState(0x565d, 0x7014, 0x8350, 0x4cb2, 0x5b39, 0x63c5, 0x0, 0x1);
        gbc.writeMem(0x565d, { 0x94 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7014, gbc.sp());
        EXPECT(0x565e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 031B
        gbc.setState(0x6064, 0xcf7c, 0x4880, 0x633a, 0xa7c3, 0x83ee, 0x0, 0x0);
        gbc.writeMem(0x6064, { 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcf7c, gbc.sp());
        EXPECT(0x6065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 031C
        gbc.setState(0x42bf, 0x115f, 0x8fe0, 0xe2ca, 0x4274, 0x5be9, 0x0, 0x1);
        gbc.writeMem(0x42bf, { 0x94 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x115f, gbc.sp());
        EXPECT(0x42c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 031D
        gbc.setState(0xcfa4, 0x72d2, 0x3760, 0xa45e, 0xc2c4, 0x254e, 0x0, 0x1);
        gbc.writeMem(0xcfa4, { 0x94 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x72d2, gbc.sp());
        EXPECT(0xcfa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcfa4));
        // 94 031E
        gbc.setState(0x3c32, 0x941d, 0xa4b0, 0x25cb, 0xdadb, 0xb9b4, 0x1, 0x1);
        gbc.writeMem(0x3c32, { 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x941d, gbc.sp());
        EXPECT(0x3c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 031F
        gbc.setState(0x2fe5, 0x913d, 0x62a0, 0xa6df, 0x61cb, 0x5b6b, 0x0, 0x0);
        gbc.writeMem(0x2fe5, { 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x913d, gbc.sp());
        EXPECT(0x2fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0320
        gbc.setState(0xa6e4, 0xa17, 0xafa0, 0x407c, 0xe3ed, 0xf33a, 0x1, 0x1);
        gbc.writeMem(0xa6e4, { 0x94 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa17, gbc.sp());
        EXPECT(0xa6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa6e4));
        // 94 0321
        gbc.setState(0x8beb, 0xe42d, 0xb110, 0x3d05, 0xb73e, 0xb27a, 0x0, 0x0);
        gbc.writeMem(0x8beb, { 0x94 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe42d, gbc.sp());
        EXPECT(0x8bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8beb));
        // 94 0322
        gbc.setState(0x5b7d, 0x60d1, 0xf690, 0x5b6d, 0x6d11, 0xf8c7, 0x0, 0x0);
        gbc.writeMem(0x5b7d, { 0x94 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x60d1, gbc.sp());
        EXPECT(0x5b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0323
        gbc.setState(0x8d86, 0xc665, 0xdf80, 0x6648, 0xeae4, 0x9b5b, 0x0, 0x0);
        gbc.writeMem(0x8d86, { 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc665, gbc.sp());
        EXPECT(0x8d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8d86));
        // 94 0324
        gbc.setState(0xbad9, 0x6812, 0x41b0, 0x9cd0, 0x6e0d, 0x86a, 0x1, 0x1);
        gbc.writeMem(0xbad9, { 0x94 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6812, gbc.sp());
        EXPECT(0xbada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbad9));
        // 94 0325
        gbc.setState(0xd8e2, 0xa2f7, 0x1cf0, 0x34a3, 0x68b, 0xb868, 0x0, 0x1);
        gbc.writeMem(0xd8e2, { 0x94 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa2f7, gbc.sp());
        EXPECT(0xd8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd8e2));
        // 94 0327
        gbc.setState(0xa790, 0x1c90, 0x2a40, 0x32b7, 0x7780, 0xb6d8, 0x0, 0x0);
        gbc.writeMem(0xa790, { 0x94 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1c90, gbc.sp());
        EXPECT(0xa791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa790));
        // 94 0328
        gbc.setState(0x63f8, 0xe577, 0x2540, 0x14bc, 0x266, 0xa74a, 0x0, 0x1);
        gbc.writeMem(0x63f8, { 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe577, gbc.sp());
        EXPECT(0x63f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0329
        gbc.setState(0x4df2, 0x33bf, 0xb9d0, 0x26b9, 0xcfc0, 0x2a28, 0x0, 0x0);
        gbc.writeMem(0x4df2, { 0x94 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x33bf, gbc.sp());
        EXPECT(0x4df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 032A
        gbc.setState(0x7274, 0xc255, 0x4320, 0xfe11, 0x7e27, 0xe689, 0x1, 0x1);
        gbc.writeMem(0x7274, { 0x94 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc255, gbc.sp());
        EXPECT(0x7275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 032B
        gbc.setState(0xc414, 0xf4aa, 0x3930, 0x94bd, 0x800d, 0x681d, 0x0, 0x1);
        gbc.writeMem(0xc414, { 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf4aa, gbc.sp());
        EXPECT(0xc415, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc414));
        // 94 032C
        gbc.setState(0x2637, 0xf790, 0x6a0, 0xf91b, 0xb572, 0xc6ef, 0x0, 0x0);
        gbc.writeMem(0x2637, { 0x94 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf790, gbc.sp());
        EXPECT(0x2638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 032D
        gbc.setState(0x9ec1, 0x6f41, 0x2270, 0x1ea8, 0xcce2, 0x8c7d, 0x1, 0x0);
        gbc.writeMem(0x9ec1, { 0x94 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6f41, gbc.sp());
        EXPECT(0x9ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9ec1));
        // 94 032E
        gbc.setState(0xe8fa, 0xafbf, 0x6e80, 0x66ef, 0x805, 0x28ba, 0x0, 0x1);
        gbc.writeMem(0xe8fa, { 0x94 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xafbf, gbc.sp());
        EXPECT(0xe8fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe8fa));
        // 94 032F
        gbc.setState(0x1fd7, 0x65eb, 0xe090, 0x9a3f, 0xc733, 0xcef9, 0x1, 0x1);
        gbc.writeMem(0x1fd7, { 0x94 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x65eb, gbc.sp());
        EXPECT(0x1fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0330
        gbc.setState(0x40ee, 0x6fe1, 0x2d10, 0xaae4, 0x64c, 0x1404, 0x1, 0x1);
        gbc.writeMem(0x40ee, { 0x94 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6fe1, gbc.sp());
        EXPECT(0x40ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0331
        gbc.setState(0xb4f4, 0x1f40, 0x8f60, 0x57d9, 0xde8, 0x5f26, 0x0, 0x0);
        gbc.writeMem(0xb4f4, { 0x94 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1f40, gbc.sp());
        EXPECT(0xb4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb4f4));
        // 94 0332
        gbc.setState(0x345e, 0xe2af, 0xc290, 0x3c43, 0x5f48, 0xbdf3, 0x0, 0x1);
        gbc.writeMem(0x345e, { 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe2af, gbc.sp());
        EXPECT(0x345f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0333
        gbc.setState(0x1302, 0xcff2, 0xc700, 0xbb3e, 0x1f0c, 0xb699, 0x1, 0x0);
        gbc.writeMem(0x1302, { 0x94 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcff2, gbc.sp());
        EXPECT(0x1303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0334
        gbc.setState(0xc832, 0x7a69, 0xa4f0, 0x564e, 0x27bd, 0x8d6c, 0x0, 0x0);
        gbc.writeMem(0xc832, { 0x94 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7a69, gbc.sp());
        EXPECT(0xc833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc832));
        // 94 0335
        gbc.setState(0x4efd, 0x2da6, 0x7ce0, 0x7548, 0xc406, 0x85e5, 0x0, 0x1);
        gbc.writeMem(0x4efd, { 0x94 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2da6, gbc.sp());
        EXPECT(0x4efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0337
        gbc.setState(0x3cfe, 0xda59, 0x4c10, 0x2f00, 0xfb23, 0x2228, 0x1, 0x1);
        gbc.writeMem(0x3cfe, { 0x94 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xda59, gbc.sp());
        EXPECT(0x3cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0338
        gbc.setState(0x96c0, 0x4ba3, 0x1180, 0x5c07, 0x8f28, 0xb8d, 0x0, 0x1);
        gbc.writeMem(0x96c0, { 0x94 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4ba3, gbc.sp());
        EXPECT(0x96c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x96c0));
        // 94 0339
        gbc.setState(0xaf86, 0xc344, 0xa390, 0xe168, 0x3d3, 0x7297, 0x1, 0x0);
        gbc.writeMem(0xaf86, { 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc344, gbc.sp());
        EXPECT(0xaf87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaf86));
        // 94 033A
        gbc.setState(0x21df, 0x4e00, 0x700, 0x8bc6, 0xd063, 0x2cf8, 0x1, 0x1);
        gbc.writeMem(0x21df, { 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4e00, gbc.sp());
        EXPECT(0x21e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 033B
        gbc.setState(0x732b, 0x92d7, 0x75c0, 0x90c9, 0x6e62, 0x14b9, 0x1, 0x0);
        gbc.writeMem(0x732b, { 0x94 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x92d7, gbc.sp());
        EXPECT(0x732c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 033C
        gbc.setState(0xa9f7, 0x25d1, 0xe710, 0x2ab4, 0x97b1, 0xc547, 0x0, 0x0);
        gbc.writeMem(0xa9f7, { 0x94 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x25d1, gbc.sp());
        EXPECT(0xa9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa9f7));
        // 94 033D
        gbc.setState(0x5474, 0x8ae0, 0x780, 0xf124, 0xc1b9, 0x7e4c, 0x0, 0x1);
        gbc.writeMem(0x5474, { 0x94 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8ae0, gbc.sp());
        EXPECT(0x5475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 033E
        gbc.setState(0x9d2e, 0xaba2, 0xd6c0, 0x1fba, 0x7802, 0xf52d, 0x0, 0x0);
        gbc.writeMem(0x9d2e, { 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xaba2, gbc.sp());
        EXPECT(0x9d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9d2e));
        // 94 033F
        gbc.setState(0x39a0, 0x3f31, 0xabb0, 0x52ad, 0xc6dd, 0x3c70, 0x1, 0x0);
        gbc.writeMem(0x39a0, { 0x94 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3f31, gbc.sp());
        EXPECT(0x39a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0340
        gbc.setState(0x7895, 0xb94e, 0xbd0, 0x95da, 0x3d77, 0x2043, 0x1, 0x1);
        gbc.writeMem(0x7895, { 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb94e, gbc.sp());
        EXPECT(0x7896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0341
        gbc.setState(0xc568, 0x7686, 0x4be0, 0x74f5, 0xb3cd, 0xeae1, 0x0, 0x0);
        gbc.writeMem(0xc568, { 0x94 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7686, gbc.sp());
        EXPECT(0xc569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc568));
        // 94 0343
        gbc.setState(0x4103, 0x6c9, 0x2f50, 0xf153, 0x28cb, 0x4909, 0x1, 0x1);
        gbc.writeMem(0x4103, { 0x94 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6c9, gbc.sp());
        EXPECT(0x4104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0344
        gbc.setState(0x72, 0x3216, 0x2340, 0xedfd, 0x2bf5, 0xd735, 0x1, 0x1);
        gbc.writeMem(0x72, { 0x94 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3216, gbc.sp());
        EXPECT(0x73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0345
        gbc.setState(0x1028, 0xbcf1, 0x2010, 0x94b1, 0x7916, 0x9c88, 0x0, 0x0);
        gbc.writeMem(0x1028, { 0x94 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbcf1, gbc.sp());
        EXPECT(0x1029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0346
        gbc.setState(0x914, 0x1518, 0xc870, 0x2ab1, 0xcc3f, 0xc07e, 0x1, 0x1);
        gbc.writeMem(0x914, { 0x94 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1518, gbc.sp());
        EXPECT(0x915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0347
        gbc.setState(0xbe07, 0x5100, 0xb90, 0xc85a, 0xd99a, 0x2b92, 0x1, 0x0);
        gbc.writeMem(0xbe07, { 0x94 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5100, gbc.sp());
        EXPECT(0xbe08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbe07));
        // 94 0348
        gbc.setState(0x8755, 0x3825, 0x9310, 0xdafd, 0xbbed, 0x1662, 0x0, 0x1);
        gbc.writeMem(0x8755, { 0x94 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3825, gbc.sp());
        EXPECT(0x8756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8755));
        // 94 0349
        gbc.setState(0x69c7, 0xa0a0, 0x8d50, 0xd9f5, 0x52e6, 0x2107, 0x0, 0x1);
        gbc.writeMem(0x69c7, { 0x94 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa0a0, gbc.sp());
        EXPECT(0x69c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 034A
        gbc.setState(0x3389, 0xcb99, 0xf6a0, 0x49a5, 0x5442, 0x56b5, 0x1, 0x0);
        gbc.writeMem(0x3389, { 0x94 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcb99, gbc.sp());
        EXPECT(0x338a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 034B
        gbc.setState(0x80f4, 0xd4f6, 0xfc50, 0xfabd, 0x2a0f, 0x8457, 0x1, 0x1);
        gbc.writeMem(0x80f4, { 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd4f6, gbc.sp());
        EXPECT(0x80f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x80f4));
        // 94 034C
        gbc.setState(0x8888, 0xc227, 0x4d10, 0xb7b5, 0x395e, 0x3ca3, 0x1, 0x1);
        gbc.writeMem(0x8888, { 0x94 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc227, gbc.sp());
        EXPECT(0x8889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8888));
        // 94 034D
        gbc.setState(0xe821, 0xd235, 0xe320, 0xc8d8, 0x5e66, 0x4b14, 0x1, 0x1);
        gbc.writeMem(0xe821, { 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd235, gbc.sp());
        EXPECT(0xe822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe821));
        // 94 034E
        gbc.setState(0x6508, 0xd05, 0x4080, 0xe343, 0xc069, 0xe120, 0x0, 0x1);
        gbc.writeMem(0x6508, { 0x94 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd05, gbc.sp());
        EXPECT(0x6509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 034F
        gbc.setState(0x58e1, 0x612e, 0xc270, 0x859c, 0x200a, 0xd5fe, 0x0, 0x0);
        gbc.writeMem(0x58e1, { 0x94 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x612e, gbc.sp());
        EXPECT(0x58e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0350
        gbc.setState(0x4d41, 0xddfb, 0x4c10, 0x5bdd, 0x39a7, 0x4aec, 0x1, 0x1);
        gbc.writeMem(0x4d41, { 0x94 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xddfb, gbc.sp());
        EXPECT(0x4d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0351
        gbc.setState(0x4f2a, 0x86b8, 0x2580, 0xaede, 0xeb, 0x1ed3, 0x1, 0x1);
        gbc.writeMem(0x4f2a, { 0x94 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x86b8, gbc.sp());
        EXPECT(0x4f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0352
        gbc.setState(0x88aa, 0xe72c, 0xab0, 0x943f, 0x9b71, 0xfd5f, 0x1, 0x0);
        gbc.writeMem(0x88aa, { 0x94 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe72c, gbc.sp());
        EXPECT(0x88ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x88aa));
        // 94 0354
        gbc.setState(0x967d, 0xd051, 0x9670, 0x7856, 0x2179, 0x48ae, 0x1, 0x0);
        gbc.writeMem(0x967d, { 0x94 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd051, gbc.sp());
        EXPECT(0x967e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x967d));
        // 94 0355
        gbc.setState(0x4bbe, 0xc371, 0xfc60, 0x572b, 0xde8f, 0x11a2, 0x0, 0x0);
        gbc.writeMem(0x4bbe, { 0x94 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc371, gbc.sp());
        EXPECT(0x4bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0356
        gbc.setState(0x9384, 0x8f0c, 0xb020, 0x6426, 0x2e65, 0x67f2, 0x0, 0x1);
        gbc.writeMem(0x9384, { 0x94 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8f0c, gbc.sp());
        EXPECT(0x9385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9384));
        // 94 0357
        gbc.setState(0x6e41, 0x576f, 0x6010, 0xa954, 0x7616, 0xc1d7, 0x1, 0x0);
        gbc.writeMem(0x6e41, { 0x94 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x576f, gbc.sp());
        EXPECT(0x6e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0358
        gbc.setState(0x3834, 0x22f9, 0x72f0, 0x394e, 0x7b24, 0x72bd, 0x1, 0x1);
        gbc.writeMem(0x3834, { 0x94 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x22f9, gbc.sp());
        EXPECT(0x3835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0359
        gbc.setState(0x146a, 0xb3ea, 0x3850, 0x1865, 0x4bff, 0xe83a, 0x0, 0x1);
        gbc.writeMem(0x146a, { 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb3ea, gbc.sp());
        EXPECT(0x146b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 035A
        gbc.setState(0x114, 0x5165, 0x75f0, 0x2164, 0x5cf7, 0x6359, 0x0, 0x0);
        gbc.writeMem(0x114, { 0x94 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5165, gbc.sp());
        EXPECT(0x115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 035B
        gbc.setState(0xca14, 0x9bf6, 0x8700, 0x3233, 0x1879, 0xef4b, 0x0, 0x1);
        gbc.writeMem(0xca14, { 0x94 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9bf6, gbc.sp());
        EXPECT(0xca15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xca14));
        // 94 035D
        gbc.setState(0x493e, 0xf274, 0x5580, 0xeac5, 0x790c, 0x93e7, 0x0, 0x1);
        gbc.writeMem(0x493e, { 0x94 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf274, gbc.sp());
        EXPECT(0x493f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 035E
        gbc.setState(0xe4ae, 0x7761, 0x6030, 0x80ce, 0x926f, 0x1665, 0x0, 0x0);
        gbc.writeMem(0xe4ae, { 0x94 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7761, gbc.sp());
        EXPECT(0xe4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe4ae));
        // 94 035F
        gbc.setState(0x5e13, 0x9480, 0xce40, 0x7138, 0xd3fc, 0x7e3a, 0x1, 0x0);
        gbc.writeMem(0x5e13, { 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9480, gbc.sp());
        EXPECT(0x5e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0360
        gbc.setState(0xbb10, 0x37c7, 0x27a0, 0x752c, 0xd7a7, 0xd466, 0x0, 0x1);
        gbc.writeMem(0xbb10, { 0x94 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x37c7, gbc.sp());
        EXPECT(0xbb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbb10));
        // 94 0361
        gbc.setState(0xbe0a, 0x462d, 0x3710, 0x9309, 0x716e, 0xa5ff, 0x0, 0x0);
        gbc.writeMem(0xbe0a, { 0x94 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x462d, gbc.sp());
        EXPECT(0xbe0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbe0a));
        // 94 0362
        gbc.setState(0x6a9f, 0x5720, 0xdb80, 0x3753, 0x62f1, 0x1e07, 0x1, 0x1);
        gbc.writeMem(0x6a9f, { 0x94 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5720, gbc.sp());
        EXPECT(0x6aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0363
        gbc.setState(0x43fc, 0x3114, 0x7f80, 0x605b, 0x8e36, 0x9cdc, 0x1, 0x0);
        gbc.writeMem(0x43fc, { 0x94 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3114, gbc.sp());
        EXPECT(0x43fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0364
        gbc.setState(0xbc79, 0xdfcd, 0xd5e0, 0x531d, 0x9788, 0xd095, 0x0, 0x0);
        gbc.writeMem(0xbc79, { 0x94 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdfcd, gbc.sp());
        EXPECT(0xbc7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbc79));
        // 94 0365
        gbc.setState(0x28b6, 0xed17, 0x770, 0xaea3, 0x2b84, 0x5c8, 0x0, 0x0);
        gbc.writeMem(0x28b6, { 0x94 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xed17, gbc.sp());
        EXPECT(0x28b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0366
        gbc.setState(0xca3b, 0x4994, 0xa870, 0x74f5, 0xbd3, 0x44dc, 0x1, 0x1);
        gbc.writeMem(0xca3b, { 0x94 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4994, gbc.sp());
        EXPECT(0xca3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xca3b));
        // 94 0367
        gbc.setState(0x113f, 0xc4c2, 0xcf90, 0x6f23, 0xc2fd, 0xa4d8, 0x1, 0x1);
        gbc.writeMem(0x113f, { 0x94 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc4c2, gbc.sp());
        EXPECT(0x1140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0368
        gbc.setState(0x6fb, 0x49e2, 0xdcd0, 0xd386, 0xf66f, 0xcbfd, 0x0, 0x1);
        gbc.writeMem(0x6fb, { 0x94 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x49e2, gbc.sp());
        EXPECT(0x6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0369
        gbc.setState(0x2cef, 0xf762, 0x4970, 0x6289, 0x7671, 0xd819, 0x0, 0x1);
        gbc.writeMem(0x2cef, { 0x94 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf762, gbc.sp());
        EXPECT(0x2cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 036A
        gbc.setState(0x92bf, 0xae4d, 0x5690, 0xdba7, 0xf10a, 0xc133, 0x1, 0x1);
        gbc.writeMem(0x92bf, { 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xae4d, gbc.sp());
        EXPECT(0x92c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x92bf));
        // 94 036B
        gbc.setState(0x1971, 0xbbb, 0x20c0, 0x1d47, 0xcc6e, 0xf367, 0x0, 0x0);
        gbc.writeMem(0x1971, { 0x94 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbbb, gbc.sp());
        EXPECT(0x1972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 036C
        gbc.setState(0xb851, 0x82d7, 0xad30, 0x5db3, 0x823f, 0x1c40, 0x1, 0x0);
        gbc.writeMem(0xb851, { 0x94 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x82d7, gbc.sp());
        EXPECT(0xb852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb851));
        // 94 036D
        gbc.setState(0xacd8, 0x4f97, 0x2b20, 0x51ed, 0xdbb5, 0x1558, 0x0, 0x1);
        gbc.writeMem(0xacd8, { 0x94 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4f97, gbc.sp());
        EXPECT(0xacd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xacd8));
        // 94 036E
        gbc.setState(0xadf6, 0x826d, 0x9c10, 0x7900, 0x94ec, 0xdfcf, 0x1, 0x1);
        gbc.writeMem(0xadf6, { 0x94 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x826d, gbc.sp());
        EXPECT(0xadf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xadf6));
        // 94 036F
        gbc.setState(0x5ce2, 0xe416, 0xb340, 0xc023, 0x1913, 0x1ef1, 0x0, 0x1);
        gbc.writeMem(0x5ce2, { 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe416, gbc.sp());
        EXPECT(0x5ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0370
        gbc.setState(0xa70d, 0x57e2, 0xc0, 0x9a8c, 0xba7b, 0x1dcf, 0x1, 0x1);
        gbc.writeMem(0xa70d, { 0x94 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x57e2, gbc.sp());
        EXPECT(0xa70e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa70d));
        // 94 0371
        gbc.setState(0x34e1, 0xd524, 0xb200, 0x385a, 0x5a3b, 0xeddb, 0x0, 0x0);
        gbc.writeMem(0x34e1, { 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd524, gbc.sp());
        EXPECT(0x34e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0372
        gbc.setState(0xecf9, 0xa6a5, 0xe100, 0xb2cb, 0x5c2b, 0xdd86, 0x0, 0x1);
        gbc.writeMem(0xecf9, { 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa6a5, gbc.sp());
        EXPECT(0xecfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xecf9));
        // 94 0373
        gbc.setState(0x536d, 0xdf1c, 0xd530, 0xa21, 0x3517, 0x142d, 0x1, 0x0);
        gbc.writeMem(0x536d, { 0x94 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdf1c, gbc.sp());
        EXPECT(0x536e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0374
        gbc.setState(0x4900, 0x8c7c, 0x5fc0, 0xbfad, 0xea8c, 0x3abd, 0x1, 0x0);
        gbc.writeMem(0x4900, { 0x94 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8c7c, gbc.sp());
        EXPECT(0x4901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0376
        gbc.setState(0xb875, 0x5f5b, 0x7270, 0x560, 0x6564, 0x927, 0x0, 0x0);
        gbc.writeMem(0xb875, { 0x94 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5f5b, gbc.sp());
        EXPECT(0xb876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb875));
        // 94 0378
        gbc.setState(0x8dd1, 0x4a46, 0xc1b0, 0x3999, 0x22a4, 0x314d, 0x0, 0x0);
        gbc.writeMem(0x8dd1, { 0x94 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4a46, gbc.sp());
        EXPECT(0x8dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8dd1));
        // 94 0379
        gbc.setState(0x7456, 0xc35a, 0x550, 0x3625, 0x35d4, 0x7503, 0x0, 0x0);
        gbc.writeMem(0x7456, { 0x94 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc35a, gbc.sp());
        EXPECT(0x7457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 037A
        gbc.setState(0xadb5, 0x7608, 0x3d50, 0x962e, 0x5148, 0x5dce, 0x0, 0x0);
        gbc.writeMem(0xadb5, { 0x94 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7608, gbc.sp());
        EXPECT(0xadb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xadb5));
        // 94 037B
        gbc.setState(0xa1a, 0xefc4, 0x1510, 0xba60, 0x492b, 0xca76, 0x0, 0x1);
        gbc.writeMem(0xa1a, { 0x94 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xefc4, gbc.sp());
        EXPECT(0xa1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 037C
        gbc.setState(0x1688, 0x495e, 0x3520, 0x9fb4, 0xc75a, 0xd5db, 0x0, 0x1);
        gbc.writeMem(0x1688, { 0x94 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x495e, gbc.sp());
        EXPECT(0x1689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 037D
        gbc.setState(0x828b, 0x98ef, 0x790, 0x6102, 0x5978, 0xed9, 0x0, 0x0);
        gbc.writeMem(0x828b, { 0x94 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x98ef, gbc.sp());
        EXPECT(0x828c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x828b));
        // 94 037E
        gbc.setState(0x972d, 0x76ee, 0xd340, 0x6e85, 0xbde9, 0x7e9e, 0x0, 0x0);
        gbc.writeMem(0x972d, { 0x94 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x76ee, gbc.sp());
        EXPECT(0x972e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x972d));
        // 94 037F
        gbc.setState(0x98e0, 0x5031, 0x5590, 0x5d39, 0xe0e0, 0x3f4b, 0x1, 0x0);
        gbc.writeMem(0x98e0, { 0x94 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5031, gbc.sp());
        EXPECT(0x98e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x98e0));
        // 94 0380
        gbc.setState(0x2c62, 0x8549, 0xe620, 0x9c34, 0x4e9e, 0x3d12, 0x1, 0x0);
        gbc.writeMem(0x2c62, { 0x94 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8549, gbc.sp());
        EXPECT(0x2c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0381
        gbc.setState(0xe5a0, 0x8444, 0x72d0, 0x3df6, 0x6e47, 0xd8ca, 0x0, 0x0);
        gbc.writeMem(0xe5a0, { 0x94 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8444, gbc.sp());
        EXPECT(0xe5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe5a0));
        // 94 0382
        gbc.setState(0x4b45, 0xd68c, 0x11f0, 0xd6a8, 0xf69b, 0x6e33, 0x0, 0x1);
        gbc.writeMem(0x4b45, { 0x94 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd68c, gbc.sp());
        EXPECT(0x4b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0383
        gbc.setState(0x15f7, 0xa6b2, 0xd310, 0x83fd, 0xfdd, 0xcf01, 0x0, 0x0);
        gbc.writeMem(0x15f7, { 0x94 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa6b2, gbc.sp());
        EXPECT(0x15f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0384
        gbc.setState(0xd4f0, 0xcb7d, 0xedd0, 0x8b14, 0xac28, 0x9243, 0x1, 0x0);
        gbc.writeMem(0xd4f0, { 0x94 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcb7d, gbc.sp());
        EXPECT(0xd4f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd4f0));
        // 94 0385
        gbc.setState(0x56c8, 0x202b, 0xe800, 0xc7ce, 0x736, 0x5304, 0x0, 0x0);
        gbc.writeMem(0x56c8, { 0x94 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x202b, gbc.sp());
        EXPECT(0x56c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0386
        gbc.setState(0x5e3e, 0x3474, 0xa970, 0xf04a, 0xdd4f, 0x8406, 0x1, 0x1);
        gbc.writeMem(0x5e3e, { 0x94 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3474, gbc.sp());
        EXPECT(0x5e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0387
        gbc.setState(0x6e7d, 0xff3d, 0x1e70, 0x65ae, 0x107b, 0xe5b1, 0x0, 0x1);
        gbc.writeMem(0x6e7d, { 0x94 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xff3d, gbc.sp());
        EXPECT(0x6e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0388
        gbc.setState(0x5a5a, 0xde10, 0xe070, 0x6fa5, 0x253e, 0x5aa5, 0x1, 0x0);
        gbc.writeMem(0x5a5a, { 0x94 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xde10, gbc.sp());
        EXPECT(0x5a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 038A
        gbc.setState(0x7f16, 0x456a, 0x8da0, 0x5331, 0x6b9c, 0x1a38, 0x0, 0x0);
        gbc.writeMem(0x7f16, { 0x94 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x456a, gbc.sp());
        EXPECT(0x7f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 038B
        gbc.setState(0xaae6, 0x8e26, 0xa110, 0x3f40, 0xe084, 0xbce4, 0x0, 0x1);
        gbc.writeMem(0xaae6, { 0x94 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8e26, gbc.sp());
        EXPECT(0xaae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaae6));
        // 94 038C
        gbc.setState(0x82c5, 0xa585, 0x9ac0, 0x5fb2, 0xd639, 0x6203, 0x0, 0x0);
        gbc.writeMem(0x82c5, { 0x94 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa585, gbc.sp());
        EXPECT(0x82c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x82c5));
        // 94 038D
        gbc.setState(0x3048, 0xdf0f, 0xca60, 0x34d6, 0x94cb, 0x9991, 0x1, 0x1);
        gbc.writeMem(0x3048, { 0x94 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdf0f, gbc.sp());
        EXPECT(0x3049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 038E
        gbc.setState(0x9452, 0xf451, 0x8710, 0xed82, 0x5053, 0x51ac, 0x0, 0x0);
        gbc.writeMem(0x9452, { 0x94 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf451, gbc.sp());
        EXPECT(0x9453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9452));
        // 94 038F
        gbc.setState(0x8784, 0x34b3, 0x8d60, 0x5657, 0xa64a, 0x79ee, 0x1, 0x0);
        gbc.writeMem(0x8784, { 0x94 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x34b3, gbc.sp());
        EXPECT(0x8785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8784));
        // 94 0390
        gbc.setState(0x9a4a, 0x9085, 0xc400, 0xf9ec, 0x86af, 0x7639, 0x1, 0x0);
        gbc.writeMem(0x9a4a, { 0x94 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9085, gbc.sp());
        EXPECT(0x9a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9a4a));
        // 94 0391
        gbc.setState(0xbe40, 0x5222, 0x81d0, 0x133f, 0xa586, 0x93bb, 0x1, 0x1);
        gbc.writeMem(0xbe40, { 0x94 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5222, gbc.sp());
        EXPECT(0xbe41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbe40));
        // 94 0392
        gbc.setState(0x80c2, 0x7e3c, 0x71d0, 0xdf17, 0x5792, 0x95dc, 0x1, 0x0);
        gbc.writeMem(0x80c2, { 0x94 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7e3c, gbc.sp());
        EXPECT(0x80c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x80c2));
        // 94 0393
        gbc.setState(0x4c49, 0x1c9c, 0x7470, 0x4b5e, 0xe19, 0xd6eb, 0x0, 0x0);
        gbc.writeMem(0x4c49, { 0x94 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1c9c, gbc.sp());
        EXPECT(0x4c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0394
        gbc.setState(0x9c77, 0xab35, 0x4220, 0xc5c6, 0x9b6c, 0xed34, 0x0, 0x1);
        gbc.writeMem(0x9c77, { 0x94 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xab35, gbc.sp());
        EXPECT(0x9c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9c77));
        // 94 0395
        gbc.setState(0xc70a, 0xf17c, 0x5250, 0x6691, 0xb2dd, 0x8fe9, 0x0, 0x0);
        gbc.writeMem(0xc70a, { 0x94 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf17c, gbc.sp());
        EXPECT(0xc70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc70a));
        // 94 0397
        gbc.setState(0x5860, 0x3bae, 0xc610, 0x7e04, 0x588f, 0x854, 0x0, 0x1);
        gbc.writeMem(0x5860, { 0x94 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3bae, gbc.sp());
        EXPECT(0x5861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 0398
        gbc.setState(0x4c32, 0xec54, 0x310, 0x6a31, 0x663d, 0x8a99, 0x0, 0x0);
        gbc.writeMem(0x4c32, { 0x94 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xec54, gbc.sp());
        EXPECT(0x4c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 0399
        gbc.setState(0xc266, 0xa0b5, 0x18b0, 0xc7cd, 0x9a54, 0xfb07, 0x1, 0x1);
        gbc.writeMem(0xc266, { 0x94 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa0b5, gbc.sp());
        EXPECT(0xc267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc266));
        // 94 039A
        gbc.setState(0x6b26, 0xdbcb, 0xacb0, 0x3617, 0x79ce, 0xa00a, 0x0, 0x0);
        gbc.writeMem(0x6b26, { 0x94 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdbcb, gbc.sp());
        EXPECT(0x6b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 039B
        gbc.setState(0xd4d8, 0x81d2, 0x7080, 0xbc3a, 0xfdce, 0xf272, 0x1, 0x1);
        gbc.writeMem(0xd4d8, { 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x81d2, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd4d8));
        // 94 039C
        gbc.setState(0x2bf0, 0x1c9b, 0x9b10, 0x8c5d, 0xfb2, 0xe377, 0x0, 0x1);
        gbc.writeMem(0x2bf0, { 0x94 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1c9b, gbc.sp());
        EXPECT(0x2bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 039D
        gbc.setState(0xdfc6, 0xe40c, 0x6e30, 0xe290, 0xf91c, 0x5aba, 0x1, 0x1);
        gbc.writeMem(0xdfc6, { 0x94 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe40c, gbc.sp());
        EXPECT(0xdfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdfc6));
        // 94 039E
        gbc.setState(0x9751, 0x1693, 0x4540, 0x9362, 0x3305, 0x6a5d, 0x1, 0x1);
        gbc.writeMem(0x9751, { 0x94 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1693, gbc.sp());
        EXPECT(0x9752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9751));
        // 94 039F
        gbc.setState(0xa7be, 0x2a14, 0x3040, 0x2f14, 0x710b, 0x6b0d, 0x1, 0x0);
        gbc.writeMem(0xa7be, { 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2a14, gbc.sp());
        EXPECT(0xa7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa7be));
        // 94 03A0
        gbc.setState(0xbdf3, 0x7297, 0x7960, 0x5510, 0xd831, 0x55, 0x1, 0x0);
        gbc.writeMem(0xbdf3, { 0x94 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7297, gbc.sp());
        EXPECT(0xbdf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbdf3));
        // 94 03A1
        gbc.setState(0xe80d, 0x25af, 0xf9f0, 0x2c74, 0xeaba, 0x2a9b, 0x0, 0x1);
        gbc.writeMem(0xe80d, { 0x94 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x25af, gbc.sp());
        EXPECT(0xe80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe80d));
        // 94 03A2
        gbc.setState(0xd97b, 0x55a5, 0x5650, 0x8440, 0xa355, 0x261a, 0x0, 0x1);
        gbc.writeMem(0xd97b, { 0x94 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x55a5, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd97b));
        // 94 03A4
        gbc.setState(0x7bfe, 0xbbdc, 0xd950, 0x398f, 0xb77b, 0x5f65, 0x0, 0x1);
        gbc.writeMem(0x7bfe, { 0x94 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbbdc, gbc.sp());
        EXPECT(0x7bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03A5
        gbc.setState(0xa55d, 0xb0c, 0xe310, 0xb7d5, 0x3301, 0x3ecc, 0x1, 0x1);
        gbc.writeMem(0xa55d, { 0x94 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb0c, gbc.sp());
        EXPECT(0xa55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa55d));
        // 94 03A7
        gbc.setState(0xa4af, 0x4e9f, 0x2770, 0xd8a2, 0xd49c, 0xbcb3, 0x1, 0x1);
        gbc.writeMem(0xa4af, { 0x94 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4e9f, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa4af));
        // 94 03A8
        gbc.setState(0x64a0, 0x2513, 0x91d0, 0xef2a, 0x76db, 0xdc88, 0x0, 0x1);
        gbc.writeMem(0x64a0, { 0x94 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2513, gbc.sp());
        EXPECT(0x64a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03A9
        gbc.setState(0x6b12, 0xab0d, 0x1680, 0x87c2, 0xae81, 0x6668, 0x0, 0x0);
        gbc.writeMem(0x6b12, { 0x94 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xab0d, gbc.sp());
        EXPECT(0x6b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03AA
        gbc.setState(0x1ef2, 0xbd, 0x4f40, 0xe5a1, 0x71c7, 0xca84, 0x1, 0x1);
        gbc.writeMem(0x1ef2, { 0x94 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbd, gbc.sp());
        EXPECT(0x1ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03AB
        gbc.setState(0xe2f8, 0x56c2, 0x1f50, 0x1abe, 0xb77e, 0xb157, 0x0, 0x1);
        gbc.writeMem(0xe2f8, { 0x94 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x56c2, gbc.sp());
        EXPECT(0xe2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe2f8));
        // 94 03AC
        gbc.setState(0x67c5, 0x2dfe, 0x30f0, 0xd552, 0xfb30, 0x1dc5, 0x0, 0x1);
        gbc.writeMem(0x67c5, { 0x94 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2dfe, gbc.sp());
        EXPECT(0x67c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03AD
        gbc.setState(0xc072, 0xec15, 0xf260, 0x16e3, 0xacc9, 0x831a, 0x0, 0x1);
        gbc.writeMem(0xc072, { 0x94 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xec15, gbc.sp());
        EXPECT(0xc073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc072));
        // 94 03AE
        gbc.setState(0xaf15, 0x53ea, 0x25b0, 0x72de, 0xff6d, 0xf078, 0x0, 0x0);
        gbc.writeMem(0xaf15, { 0x94 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x53ea, gbc.sp());
        EXPECT(0xaf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaf15));
        // 94 03AF
        gbc.setState(0xde5b, 0xb578, 0x1270, 0x84e5, 0xf3ba, 0xff5e, 0x0, 0x0);
        gbc.writeMem(0xde5b, { 0x94 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb578, gbc.sp());
        EXPECT(0xde5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xde5b));
        // 94 03B0
        gbc.setState(0x75e2, 0xdf19, 0xa710, 0x6a54, 0x1f89, 0x44bb, 0x1, 0x1);
        gbc.writeMem(0x75e2, { 0x94 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdf19, gbc.sp());
        EXPECT(0x75e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03B1
        gbc.setState(0x53b0, 0x27b3, 0xcfb0, 0x422b, 0xc926, 0x4496, 0x0, 0x1);
        gbc.writeMem(0x53b0, { 0x94 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x27b3, gbc.sp());
        EXPECT(0x53b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03B2
        gbc.setState(0xb71, 0xb10, 0x8310, 0x5f66, 0x6b37, 0xf359, 0x1, 0x1);
        gbc.writeMem(0xb71, { 0x94 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0xb72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03B3
        gbc.setState(0x9f20, 0x5f99, 0x54b0, 0x60a2, 0xea16, 0x9395, 0x0, 0x1);
        gbc.writeMem(0x9f20, { 0x94 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5f99, gbc.sp());
        EXPECT(0x9f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9f20));
        // 94 03B4
        gbc.setState(0x48e3, 0x1ebb, 0x6a40, 0x444d, 0x520e, 0xf1, 0x1, 0x1);
        gbc.writeMem(0x48e3, { 0x94 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1ebb, gbc.sp());
        EXPECT(0x48e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03B5
        gbc.setState(0x8c43, 0x9c5d, 0x890, 0xeeec, 0x9c61, 0x912d, 0x0, 0x0);
        gbc.writeMem(0x8c43, { 0x94 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9c5d, gbc.sp());
        EXPECT(0x8c44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8c43));
        // 94 03B6
        gbc.setState(0xde3c, 0x9081, 0x7940, 0xfabe, 0xb898, 0x223e, 0x1, 0x1);
        gbc.writeMem(0xde3c, { 0x94 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9081, gbc.sp());
        EXPECT(0xde3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xde3c));
        // 94 03B7
        gbc.setState(0x2bb0, 0xc991, 0x7e80, 0xb876, 0x9055, 0xdaef, 0x0, 0x1);
        gbc.writeMem(0x2bb0, { 0x94 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc991, gbc.sp());
        EXPECT(0x2bb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03B8
        gbc.setState(0x99b0, 0x417c, 0x2ec0, 0xe45b, 0x3a23, 0x4241, 0x0, 0x0);
        gbc.writeMem(0x99b0, { 0x94 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x417c, gbc.sp());
        EXPECT(0x99b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x99b0));
        // 94 03B9
        gbc.setState(0xb099, 0x9180, 0x6c10, 0x1da3, 0xee28, 0xa134, 0x1, 0x1);
        gbc.writeMem(0xb099, { 0x94 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9180, gbc.sp());
        EXPECT(0xb09a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb099));
        // 94 03BA
        gbc.setState(0xe7b, 0xf7ba, 0x3ec0, 0x6b0e, 0xe81, 0x3bb7, 0x1, 0x0);
        gbc.writeMem(0xe7b, { 0x94 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf7ba, gbc.sp());
        EXPECT(0xe7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03BB
        gbc.setState(0x9b5a, 0x2fc9, 0xb9f0, 0xc379, 0xdcf8, 0x8d40, 0x1, 0x0);
        gbc.writeMem(0x9b5a, { 0x94 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2fc9, gbc.sp());
        EXPECT(0x9b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9b5a));
        // 94 03BC
        gbc.setState(0xa7aa, 0x4b93, 0x8330, 0xaa2b, 0xa95e, 0xadb9, 0x1, 0x0);
        gbc.writeMem(0xa7aa, { 0x94 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4b93, gbc.sp());
        EXPECT(0xa7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa7aa));
        // 94 03BD
        gbc.setState(0xdbe2, 0x6f4e, 0x98e0, 0x7b65, 0x388d, 0x1a9e, 0x1, 0x0);
        gbc.writeMem(0xdbe2, { 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6f4e, gbc.sp());
        EXPECT(0xdbe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdbe2));
        // 94 03BE
        gbc.setState(0x5042, 0x145, 0xcf30, 0x365f, 0x15cc, 0xd6e3, 0x0, 0x1);
        gbc.writeMem(0x5042, { 0x94 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x145, gbc.sp());
        EXPECT(0x5043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03BF
        gbc.setState(0x7695, 0x51f2, 0x84b0, 0xc009, 0x22f3, 0x1b5d, 0x0, 0x0);
        gbc.writeMem(0x7695, { 0x94 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x51f2, gbc.sp());
        EXPECT(0x7696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03C0
        gbc.setState(0xcad0, 0x192c, 0x6ae0, 0x1a81, 0xe420, 0x10d1, 0x0, 0x1);
        gbc.writeMem(0xcad0, { 0x94 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x192c, gbc.sp());
        EXPECT(0xcad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xcad0));
        // 94 03C1
        gbc.setState(0xd198, 0xefb4, 0xdcc0, 0xc5f7, 0xa946, 0xa5f, 0x0, 0x1);
        gbc.writeMem(0xd198, { 0x94 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0xd199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xd198));
        // 94 03C2
        gbc.setState(0x46d3, 0x8375, 0x1070, 0x11e8, 0xa419, 0xf4cf, 0x1, 0x0);
        gbc.writeMem(0x46d3, { 0x94 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8375, gbc.sp());
        EXPECT(0x46d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03C3
        gbc.setState(0x928d, 0xe45c, 0x58d0, 0x58d5, 0xfda0, 0xa015, 0x0, 0x1);
        gbc.writeMem(0x928d, { 0x94 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe45c, gbc.sp());
        EXPECT(0x928e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x928d));
        // 94 03C4
        gbc.setState(0x84ef, 0x9dd3, 0xec70, 0x3388, 0x7125, 0x6bd2, 0x0, 0x1);
        gbc.writeMem(0x84ef, { 0x94 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9dd3, gbc.sp());
        EXPECT(0x84f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x84ef));
        // 94 03C5
        gbc.setState(0xebec, 0xeee9, 0x6430, 0x7087, 0x4ed2, 0x297d, 0x1, 0x1);
        gbc.writeMem(0xebec, { 0x94 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xeee9, gbc.sp());
        EXPECT(0xebed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xebec));
        // 94 03C6
        gbc.setState(0x1bff, 0xd97c, 0x6620, 0x8a49, 0x4297, 0x852f, 0x1, 0x1);
        gbc.writeMem(0x1bff, { 0x94 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd97c, gbc.sp());
        EXPECT(0x1c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03C7
        gbc.setState(0xaa02, 0x27d8, 0x7360, 0x6140, 0x2071, 0x7f40, 0x0, 0x1);
        gbc.writeMem(0xaa02, { 0x94 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x27d8, gbc.sp());
        EXPECT(0xaa03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xaa02));
        // 94 03C8
        gbc.setState(0x31ab, 0xa59c, 0x8640, 0x130b, 0xe6bd, 0xd86c, 0x0, 0x1);
        gbc.writeMem(0x31ab, { 0x94 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa59c, gbc.sp());
        EXPECT(0x31ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03C9
        gbc.setState(0x5b66, 0xf953, 0x8b40, 0x707f, 0x6c9f, 0x7bef, 0x0, 0x0);
        gbc.writeMem(0x5b66, { 0x94 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf953, gbc.sp());
        EXPECT(0x5b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03CA
        gbc.setState(0x83cb, 0xfcf1, 0x82b0, 0xb805, 0xb888, 0x9aed, 0x1, 0x1);
        gbc.writeMem(0x83cb, { 0x94 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfcf1, gbc.sp());
        EXPECT(0x83cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x83cb));
        // 94 03CB
        gbc.setState(0x513a, 0xe02d, 0xe760, 0xcb2b, 0xa8cf, 0x5873, 0x0, 0x0);
        gbc.writeMem(0x513a, { 0x94 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe02d, gbc.sp());
        EXPECT(0x513b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03CC
        gbc.setState(0xa937, 0x5406, 0xf5b0, 0xb3c0, 0xd031, 0x3ad8, 0x0, 0x1);
        gbc.writeMem(0xa937, { 0x94 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5406, gbc.sp());
        EXPECT(0xa938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa937));
        // 94 03CD
        gbc.setState(0x2535, 0xe339, 0x36f0, 0x65a6, 0xa66, 0xb851, 0x0, 0x0);
        gbc.writeMem(0x2535, { 0x94 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe339, gbc.sp());
        EXPECT(0x2536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03CE
        gbc.setState(0xe224, 0x8894, 0xcfc0, 0x8094, 0xc032, 0xaef, 0x1, 0x0);
        gbc.writeMem(0xe224, { 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8894, gbc.sp());
        EXPECT(0xe225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe224));
        // 94 03CF
        gbc.setState(0x522e, 0xfbbc, 0x98f0, 0xee68, 0x8f8e, 0x54e6, 0x0, 0x1);
        gbc.writeMem(0x522e, { 0x94 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfbbc, gbc.sp());
        EXPECT(0x522f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03D0
        gbc.setState(0x4b48, 0x5141, 0x9e10, 0x2c92, 0xd8f2, 0x4231, 0x1, 0x1);
        gbc.writeMem(0x4b48, { 0x94 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5141, gbc.sp());
        EXPECT(0x4b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03D1
        gbc.setState(0x11ae, 0xfb49, 0xb870, 0x946a, 0x9680, 0xa01f, 0x1, 0x0);
        gbc.writeMem(0x11ae, { 0x94 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfb49, gbc.sp());
        EXPECT(0x11af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03D2
        gbc.setState(0xe2d1, 0x8fc, 0x7be0, 0xa049, 0xc6e4, 0x41ab, 0x1, 0x0);
        gbc.writeMem(0xe2d1, { 0x94 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8fc, gbc.sp());
        EXPECT(0xe2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe2d1));
        // 94 03D3
        gbc.setState(0x94aa, 0x97e2, 0x4340, 0x3cb5, 0x7278, 0xf5fa, 0x1, 0x1);
        gbc.writeMem(0x94aa, { 0x94 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x97e2, gbc.sp());
        EXPECT(0x94ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x94aa));
        // 94 03D4
        gbc.setState(0x9b9d, 0x649c, 0xd150, 0x31fb, 0x591e, 0x11cf, 0x0, 0x1);
        gbc.writeMem(0x9b9d, { 0x94 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x649c, gbc.sp());
        EXPECT(0x9b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9b9d));
        // 94 03D5
        gbc.setState(0xc5c9, 0x39e6, 0xed30, 0x1919, 0xbf1e, 0xe3a2, 0x1, 0x1);
        gbc.writeMem(0xc5c9, { 0x94 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x39e6, gbc.sp());
        EXPECT(0xc5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc5c9));
        // 94 03D6
        gbc.setState(0x32e5, 0xc52d, 0xe0, 0xd9be, 0xbc2b, 0x3b2f, 0x0, 0x1);
        gbc.writeMem(0x32e5, { 0x94 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc52d, gbc.sp());
        EXPECT(0x32e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03D7
        gbc.setState(0xddf3, 0xabb0, 0x5870, 0xe583, 0x7d75, 0x946, 0x1, 0x1);
        gbc.writeMem(0xddf3, { 0x94 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xabb0, gbc.sp());
        EXPECT(0xddf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xddf3));
        // 94 03D8
        gbc.setState(0x3208, 0xc183, 0xfcc0, 0x5fc2, 0xaa0, 0x1052, 0x0, 0x1);
        gbc.writeMem(0x3208, { 0x94 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc183, gbc.sp());
        EXPECT(0x3209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03D9
        gbc.setState(0x2ef4, 0x1a59, 0x3590, 0x710b, 0xa59d, 0x166b, 0x0, 0x0);
        gbc.writeMem(0x2ef4, { 0x94 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1a59, gbc.sp());
        EXPECT(0x2ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03DA
        gbc.setState(0xb868, 0xae16, 0x4730, 0x26f, 0xf06e, 0x73b8, 0x1, 0x0);
        gbc.writeMem(0xb868, { 0x94 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xae16, gbc.sp());
        EXPECT(0xb869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb868));
        // 94 03DB
        gbc.setState(0x56c8, 0x18cd, 0x53e0, 0x8bbb, 0x4704, 0x9b7f, 0x0, 0x0);
        gbc.writeMem(0x56c8, { 0x94 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x18cd, gbc.sp());
        EXPECT(0x56c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03DC
        gbc.setState(0x99d2, 0x62ac, 0x6000, 0xad5d, 0x2f8b, 0x10e3, 0x0, 0x0);
        gbc.writeMem(0x99d2, { 0x94 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x62ac, gbc.sp());
        EXPECT(0x99d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x99d2));
        // 94 03DD
        gbc.setState(0x5a80, 0x7e8c, 0x55e0, 0x126e, 0xc450, 0x420, 0x0, 0x1);
        gbc.writeMem(0x5a80, { 0x94 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7e8c, gbc.sp());
        EXPECT(0x5a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03DE
        gbc.setState(0x20b2, 0x3de7, 0x7e00, 0x30af, 0xae75, 0xf00c, 0x1, 0x0);
        gbc.writeMem(0x20b2, { 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3de7, gbc.sp());
        EXPECT(0x20b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03DF
        gbc.setState(0x2718, 0x47fd, 0xba70, 0x212c, 0x3ec4, 0xd3b, 0x1, 0x1);
        gbc.writeMem(0x2718, { 0x94 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x47fd, gbc.sp());
        EXPECT(0x2719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03E0
        gbc.setState(0xdde8, 0xb1ec, 0x2b40, 0x2d6, 0x2060, 0x5e33, 0x1, 0x0);
        gbc.writeMem(0xdde8, { 0x94 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb1ec, gbc.sp());
        EXPECT(0xdde9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xdde8));
        // 94 03E1
        gbc.setState(0x2a80, 0x1cf1, 0x5240, 0xca25, 0xf55c, 0x50f5, 0x0, 0x0);
        gbc.writeMem(0x2a80, { 0x94 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1cf1, gbc.sp());
        EXPECT(0x2a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03E2
        gbc.setState(0x9d3a, 0x2a4, 0x4300, 0x9e21, 0x612f, 0xe641, 0x0, 0x1);
        gbc.writeMem(0x9d3a, { 0x94 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2a4, gbc.sp());
        EXPECT(0x9d3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x9d3a));
        // 94 03E3
        gbc.setState(0x1abb, 0x6806, 0x53a0, 0xfffe, 0xa0b3, 0x5653, 0x1, 0x0);
        gbc.writeMem(0x1abb, { 0x94 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6806, gbc.sp());
        EXPECT(0x1abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03E4
        gbc.setState(0x20c, 0xa1b7, 0xdf50, 0x944c, 0x103b, 0x5197, 0x0, 0x1);
        gbc.writeMem(0x20c, { 0x94 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa1b7, gbc.sp());
        EXPECT(0x20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 94 03E5
        gbc.setState(0xa64a, 0xc81f, 0x91a0, 0xaf96, 0xd2a5, 0x145b, 0x1, 0x0);
        gbc.writeMem(0xa64a, { 0x94 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc81f, gbc.sp());
        EXPECT(0xa64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa64a));
        // 94 03E6
        gbc.setState(0x1dbe, 0xce94, 0xa590, 0xbac5, 0x106f, 0xe52d, 0x0, 0x0);
        gbc.writeMem(0x1dbe, { 0x94 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xce94, gbc.sp());
        EXPECT(0x1dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 94 03E7
        gbc.setState(0xe1b6, 0x6b8b, 0xbd50, 0x7489, 0x6a9d, 0x523d, 0x0, 0x1);
        gbc.writeMem(0xe1b6, { 0x94 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6b8b, gbc.sp());
        EXPECT(0xe1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xe1b6));
    }
