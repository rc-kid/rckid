    TEST(gbcemu, opcode_88) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 88 0000
        gbc.setState(0xaf55, 0x5a49, 0x1e00, 0x49b8, 0x241c, 0x818e, 0x1, 0x0);
        gbc.writeMem(0xaf55, { 0x88 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5a49, gbc.sp());
        EXPECT(0xaf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaf55));
        // 88 0001
        gbc.setState(0xa080, 0x68ce, 0xf080, 0xf1ff, 0xd24c, 0x3766, 0x0, 0x0);
        gbc.writeMem(0xa080, { 0x88 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x68ce, gbc.sp());
        EXPECT(0xa081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa080));
        // 88 0002
        gbc.setState(0xb423, 0x4922, 0x4330, 0xcaa0, 0x37ba, 0x6c8f, 0x1, 0x1);
        gbc.writeMem(0xb423, { 0x88 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4922, gbc.sp());
        EXPECT(0xb424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb423));
        // 88 0003
        gbc.setState(0xe23, 0xdab, 0x6460, 0xdf83, 0x2deb, 0xd37, 0x1, 0x1);
        gbc.writeMem(0xe23, { 0x88 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0xe24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0004
        gbc.setState(0xd8bb, 0xf0ce, 0xcb30, 0x1d54, 0x86cb, 0xfb67, 0x1, 0x1);
        gbc.writeMem(0xd8bb, { 0x88 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf0ce, gbc.sp());
        EXPECT(0xd8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd8bb));
        // 88 0005
        gbc.setState(0x28b9, 0xd25d, 0x2850, 0xaa4b, 0xa7e8, 0x6aa5, 0x0, 0x0);
        gbc.writeMem(0x28b9, { 0x88 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd25d, gbc.sp());
        EXPECT(0x28ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0006
        gbc.setState(0x15, 0xd589, 0xa220, 0x5907, 0x7a58, 0xd030, 0x1, 0x0);
        gbc.writeMem(0x15, { 0x88 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd589, gbc.sp());
        EXPECT(0x16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0007
        gbc.setState(0x7f4d, 0xaae7, 0xa5b0, 0x571a, 0x5490, 0x73b4, 0x0, 0x0);
        gbc.writeMem(0x7f4d, { 0x88 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaae7, gbc.sp());
        EXPECT(0x7f4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0008
        gbc.setState(0x14ba, 0xd64f, 0x3e50, 0x599e, 0x849f, 0xb71b, 0x0, 0x1);
        gbc.writeMem(0x14ba, { 0x88 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd64f, gbc.sp());
        EXPECT(0x14bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0009
        gbc.setState(0xe411, 0xf636, 0xe3e0, 0x3dda, 0x9d0d, 0xa753, 0x1, 0x1);
        gbc.writeMem(0xe411, { 0x88 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf636, gbc.sp());
        EXPECT(0xe412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe411));
        // 88 000A
        gbc.setState(0x777c, 0x195c, 0x3190, 0x55c4, 0xeb5e, 0xac5a, 0x0, 0x1);
        gbc.writeMem(0x777c, { 0x88 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x195c, gbc.sp());
        EXPECT(0x777d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 000C
        gbc.setState(0x7f26, 0x6d97, 0x4100, 0x48ad, 0x3915, 0xa66f, 0x1, 0x1);
        gbc.writeMem(0x7f26, { 0x88 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6d97, gbc.sp());
        EXPECT(0x7f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 000D
        gbc.setState(0x8b70, 0x5b20, 0xde20, 0x6127, 0x6ba4, 0x7135, 0x1, 0x0);
        gbc.writeMem(0x8b70, { 0x88 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5b20, gbc.sp());
        EXPECT(0x8b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8b70));
        // 88 000E
        gbc.setState(0x6ff, 0x594e, 0x9070, 0xa974, 0x91b7, 0x607d, 0x0, 0x0);
        gbc.writeMem(0x6ff, { 0x88 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x594e, gbc.sp());
        EXPECT(0x700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 000F
        gbc.setState(0x24d3, 0xc5e9, 0x2cf0, 0xbc9, 0xe1b0, 0xe733, 0x0, 0x1);
        gbc.writeMem(0x24d3, { 0x88 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc5e9, gbc.sp());
        EXPECT(0x24d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0010
        gbc.setState(0x5d4d, 0x3c71, 0x2f00, 0x2af4, 0x8990, 0x46c9, 0x0, 0x0);
        gbc.writeMem(0x5d4d, { 0x88 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3c71, gbc.sp());
        EXPECT(0x5d4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0011
        gbc.setState(0x45f9, 0x85ca, 0x43b0, 0x2dd, 0xfbcb, 0xef59, 0x0, 0x1);
        gbc.writeMem(0x45f9, { 0x88 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x85ca, gbc.sp());
        EXPECT(0x45fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0012
        gbc.setState(0xed9f, 0x57c7, 0x26a0, 0x1810, 0x11e4, 0xe274, 0x0, 0x0);
        gbc.writeMem(0xed9f, { 0x88 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x57c7, gbc.sp());
        EXPECT(0xeda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xed9f));
        // 88 0013
        gbc.setState(0x90d9, 0x4f51, 0x3d50, 0xb41b, 0x163e, 0xf500, 0x1, 0x0);
        gbc.writeMem(0x90d9, { 0x88 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4f51, gbc.sp());
        EXPECT(0x90da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x90d9));
        // 88 0014
        gbc.setState(0x5012, 0x794, 0xe610, 0xd1c6, 0xfe06, 0x57a7, 0x0, 0x0);
        gbc.writeMem(0x5012, { 0x88 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x794, gbc.sp());
        EXPECT(0x5013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0015
        gbc.setState(0x5faf, 0xf1ce, 0xfdf0, 0xacb3, 0x4b81, 0xdbfa, 0x0, 0x0);
        gbc.writeMem(0x5faf, { 0x88 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf1ce, gbc.sp());
        EXPECT(0x5fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0016
        gbc.setState(0x318f, 0xdc0c, 0x9720, 0x349a, 0x5102, 0x7017, 0x1, 0x0);
        gbc.writeMem(0x318f, { 0x88 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdc0c, gbc.sp());
        EXPECT(0x3190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0017
        gbc.setState(0x7d9f, 0xfe11, 0x52d0, 0xc72b, 0xb962, 0x9255, 0x0, 0x1);
        gbc.writeMem(0x7d9f, { 0x88 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfe11, gbc.sp());
        EXPECT(0x7da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0018
        gbc.setState(0x52d3, 0xc3e1, 0xa9c0, 0x2b79, 0xd217, 0x7e37, 0x1, 0x0);
        gbc.writeMem(0x52d3, { 0x88 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc3e1, gbc.sp());
        EXPECT(0x52d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0019
        gbc.setState(0xd9c0, 0x5474, 0x8000, 0xf6db, 0x3b98, 0xedd7, 0x1, 0x0);
        gbc.writeMem(0xd9c0, { 0x88 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5474, gbc.sp());
        EXPECT(0xd9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd9c0));
        // 88 001A
        gbc.setState(0x3fb4, 0xf93e, 0x85f0, 0xdc83, 0x449b, 0x86d7, 0x1, 0x0);
        gbc.writeMem(0x3fb4, { 0x88 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf93e, gbc.sp());
        EXPECT(0x3fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 001B
        gbc.setState(0x69e9, 0x261e, 0xb9c0, 0x2c28, 0x2973, 0xefe6, 0x1, 0x1);
        gbc.writeMem(0x69e9, { 0x88 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x261e, gbc.sp());
        EXPECT(0x69ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 001C
        gbc.setState(0x3ef6, 0x4428, 0x7fc0, 0xccc2, 0xfcec, 0xb39b, 0x0, 0x0);
        gbc.writeMem(0x3ef6, { 0x88 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4428, gbc.sp());
        EXPECT(0x3ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 001D
        gbc.setState(0x9287, 0x683c, 0x66d0, 0x1180, 0x136b, 0x1dfc, 0x1, 0x1);
        gbc.writeMem(0x9287, { 0x88 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x683c, gbc.sp());
        EXPECT(0x9288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9287));
        // 88 001E
        gbc.setState(0x2400, 0x20a8, 0x7660, 0xd420, 0x81fd, 0x733d, 0x1, 0x0);
        gbc.writeMem(0x2400, { 0x88 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x20a8, gbc.sp());
        EXPECT(0x2401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 001F
        gbc.setState(0x5217, 0x40bd, 0xc8d0, 0xcf9, 0x9a8a, 0x85db, 0x0, 0x1);
        gbc.writeMem(0x5217, { 0x88 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x40bd, gbc.sp());
        EXPECT(0x5218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0021
        gbc.setState(0x9888, 0x9e47, 0x8f10, 0xe697, 0xca1d, 0xa4d1, 0x0, 0x1);
        gbc.writeMem(0x9888, { 0x88 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9e47, gbc.sp());
        EXPECT(0x9889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9888));
        // 88 0022
        gbc.setState(0x6e1a, 0x971, 0x9bd0, 0x7e37, 0x54a5, 0xc48f, 0x0, 0x1);
        gbc.writeMem(0x6e1a, { 0x88 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x971, gbc.sp());
        EXPECT(0x6e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0023
        gbc.setState(0x4342, 0x3656, 0x2b70, 0xb67d, 0x5d0b, 0xc08d, 0x0, 0x1);
        gbc.writeMem(0x4342, { 0x88 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3656, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0024
        gbc.setState(0x4da7, 0x4cbb, 0xc2d0, 0xa7e4, 0x5e28, 0x8937, 0x0, 0x1);
        gbc.writeMem(0x4da7, { 0x88 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4cbb, gbc.sp());
        EXPECT(0x4da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0025
        gbc.setState(0x2d0d, 0xb164, 0xb3e0, 0x618d, 0xf855, 0x5719, 0x1, 0x0);
        gbc.writeMem(0x2d0d, { 0x88 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb164, gbc.sp());
        EXPECT(0x2d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0026
        gbc.setState(0x2bb7, 0x4d1e, 0xf720, 0x2f91, 0xedc3, 0x65ab, 0x1, 0x1);
        gbc.writeMem(0x2bb7, { 0x88 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4d1e, gbc.sp());
        EXPECT(0x2bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0027
        gbc.setState(0x4e8b, 0xe1f, 0xcc80, 0x2821, 0x4b8f, 0x3ddb, 0x1, 0x1);
        gbc.writeMem(0x4e8b, { 0x88 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe1f, gbc.sp());
        EXPECT(0x4e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0028
        gbc.setState(0xa0b, 0xb471, 0xfbd0, 0x64da, 0x3adf, 0xe505, 0x1, 0x1);
        gbc.writeMem(0xa0b, { 0x88 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb471, gbc.sp());
        EXPECT(0xa0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0029
        gbc.setState(0x97f3, 0x75e9, 0xaae0, 0x5eaf, 0x7c9e, 0x5bdd, 0x0, 0x1);
        gbc.writeMem(0x97f3, { 0x88 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x75e9, gbc.sp());
        EXPECT(0x97f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x97f3));
        // 88 002B
        gbc.setState(0xa902, 0x2564, 0xfbb0, 0x17e5, 0x80e9, 0x47c8, 0x1, 0x1);
        gbc.writeMem(0xa902, { 0x88 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2564, gbc.sp());
        EXPECT(0xa903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa902));
        // 88 002C
        gbc.setState(0xc639, 0xb262, 0x5140, 0x2c54, 0xbf19, 0xf521, 0x0, 0x0);
        gbc.writeMem(0xc639, { 0x88 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb262, gbc.sp());
        EXPECT(0xc63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc639));
        // 88 002D
        gbc.setState(0x70e1, 0x70a4, 0xb800, 0x7631, 0xe31e, 0x9077, 0x1, 0x1);
        gbc.writeMem(0x70e1, { 0x88 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x70a4, gbc.sp());
        EXPECT(0x70e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 002E
        gbc.setState(0xb4d8, 0x7c91, 0x64b0, 0x6494, 0xe9df, 0x71bb, 0x1, 0x1);
        gbc.writeMem(0xb4d8, { 0x88 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7c91, gbc.sp());
        EXPECT(0xb4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb4d8));
        // 88 002F
        gbc.setState(0xe80c, 0x5723, 0xd000, 0x26f4, 0x52ad, 0xa2b, 0x0, 0x1);
        gbc.writeMem(0xe80c, { 0x88 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5723, gbc.sp());
        EXPECT(0xe80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe80c));
        // 88 0030
        gbc.setState(0xfed, 0xd7c1, 0x4e50, 0xd77b, 0xa4ab, 0x462c, 0x1, 0x1);
        gbc.writeMem(0xfed, { 0x88 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd7c1, gbc.sp());
        EXPECT(0xfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0031
        gbc.setState(0xdcb4, 0xc031, 0xec0, 0x6717, 0xd126, 0xa4ab, 0x0, 0x1);
        gbc.writeMem(0xdcb4, { 0x88 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc031, gbc.sp());
        EXPECT(0xdcb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdcb4));
        // 88 0032
        gbc.setState(0xba6b, 0xb7bb, 0x23e0, 0x664, 0x80e8, 0xed3c, 0x1, 0x0);
        gbc.writeMem(0xba6b, { 0x88 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb7bb, gbc.sp());
        EXPECT(0xba6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xba6b));
        // 88 0033
        gbc.setState(0xd18c, 0x12c9, 0x7b40, 0x7a08, 0x1f9b, 0x2f7, 0x1, 0x0);
        gbc.writeMem(0xd18c, { 0x88 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x12c9, gbc.sp());
        EXPECT(0xd18d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd18c));
        // 88 0034
        gbc.setState(0x448d, 0x4cae, 0xf7d0, 0x56f6, 0x8611, 0x6e02, 0x0, 0x1);
        gbc.writeMem(0x448d, { 0x88 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4cae, gbc.sp());
        EXPECT(0x448e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0036
        gbc.setState(0x5284, 0x90f9, 0x7110, 0xcdaa, 0x6bda, 0x2d1f, 0x1, 0x1);
        gbc.writeMem(0x5284, { 0x88 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x90f9, gbc.sp());
        EXPECT(0x5285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0038
        gbc.setState(0x2348, 0x7c, 0x50a0, 0x2f0c, 0x225b, 0xbcd1, 0x0, 0x1);
        gbc.writeMem(0x2348, { 0x88 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7c, gbc.sp());
        EXPECT(0x2349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0039
        gbc.setState(0x3471, 0x64d3, 0x6c30, 0x6bdb, 0x3732, 0x6c84, 0x1, 0x0);
        gbc.writeMem(0x3471, { 0x88 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x64d3, gbc.sp());
        EXPECT(0x3472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 003A
        gbc.setState(0x3e57, 0xd50c, 0x5de0, 0x3e23, 0x729a, 0x6581, 0x1, 0x1);
        gbc.writeMem(0x3e57, { 0x88 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd50c, gbc.sp());
        EXPECT(0x3e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 003B
        gbc.setState(0xae79, 0xb771, 0x5690, 0xdb75, 0xb3e0, 0x7509, 0x1, 0x1);
        gbc.writeMem(0xae79, { 0x88 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb771, gbc.sp());
        EXPECT(0xae7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xae79));
        // 88 003C
        gbc.setState(0xbac, 0xbbbf, 0xeb90, 0xf890, 0x68a6, 0x1ed3, 0x0, 0x1);
        gbc.writeMem(0xbac, { 0x88 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbbbf, gbc.sp());
        EXPECT(0xbad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 003D
        gbc.setState(0xb78a, 0x6b0d, 0x75a0, 0xc5e3, 0x1ca1, 0x77bf, 0x1, 0x0);
        gbc.writeMem(0xb78a, { 0x88 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6b0d, gbc.sp());
        EXPECT(0xb78b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb78a));
        // 88 003E
        gbc.setState(0x547b, 0x885d, 0x2620, 0xc607, 0xd599, 0xfe94, 0x0, 0x1);
        gbc.writeMem(0x547b, { 0x88 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x885d, gbc.sp());
        EXPECT(0x547c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 003F
        gbc.setState(0xbd0d, 0xf4d0, 0xfab0, 0xf0c4, 0x9162, 0x75bb, 0x1, 0x1);
        gbc.writeMem(0xbd0d, { 0x88 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf4d0, gbc.sp());
        EXPECT(0xbd0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbd0d));
        // 88 0040
        gbc.setState(0xc403, 0xb112, 0x49b0, 0x6b3, 0xaa02, 0xda93, 0x1, 0x1);
        gbc.writeMem(0xc403, { 0x88 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb112, gbc.sp());
        EXPECT(0xc404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc403));
        // 88 0041
        gbc.setState(0xba58, 0xf808, 0x5840, 0x992a, 0x597b, 0x4ff3, 0x0, 0x1);
        gbc.writeMem(0xba58, { 0x88 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf808, gbc.sp());
        EXPECT(0xba59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xba58));
        // 88 0042
        gbc.setState(0x59b5, 0x44e2, 0x7350, 0x7016, 0xce82, 0x2029, 0x0, 0x0);
        gbc.writeMem(0x59b5, { 0x88 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x44e2, gbc.sp());
        EXPECT(0x59b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0043
        gbc.setState(0x4ca0, 0x54d5, 0x89f0, 0x1910, 0xfa59, 0x7753, 0x0, 0x0);
        gbc.writeMem(0x4ca0, { 0x88 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x54d5, gbc.sp());
        EXPECT(0x4ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0045
        gbc.setState(0xd767, 0x4f5b, 0x5120, 0x68d8, 0x50b9, 0xcfdf, 0x1, 0x1);
        gbc.writeMem(0xd767, { 0x88 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4f5b, gbc.sp());
        EXPECT(0xd768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd767));
        // 88 0046
        gbc.setState(0xb272, 0x9d97, 0xdf00, 0xeb42, 0xe354, 0x72c0, 0x1, 0x1);
        gbc.writeMem(0xb272, { 0x88 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9d97, gbc.sp());
        EXPECT(0xb273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb272));
        // 88 0047
        gbc.setState(0x7c35, 0x5f31, 0x6660, 0x1da, 0x3985, 0x3854, 0x1, 0x0);
        gbc.writeMem(0x7c35, { 0x88 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5f31, gbc.sp());
        EXPECT(0x7c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0048
        gbc.setState(0x31f1, 0x26b5, 0x9ce0, 0x81ab, 0x4e1d, 0x3c07, 0x1, 0x0);
        gbc.writeMem(0x31f1, { 0x88 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x26b5, gbc.sp());
        EXPECT(0x31f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0049
        gbc.setState(0xd77b, 0x258f, 0xbeb0, 0xc7c, 0x2ffd, 0xbc25, 0x0, 0x1);
        gbc.writeMem(0xd77b, { 0x88 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x258f, gbc.sp());
        EXPECT(0xd77c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd77b));
        // 88 004A
        gbc.setState(0x141c, 0x5350, 0x6700, 0x6dc8, 0xb259, 0x1054, 0x1, 0x0);
        gbc.writeMem(0x141c, { 0x88 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5350, gbc.sp());
        EXPECT(0x141d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 004B
        gbc.setState(0xb073, 0x3af6, 0x1bf0, 0x5c37, 0x36b7, 0x980a, 0x1, 0x0);
        gbc.writeMem(0xb073, { 0x88 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3af6, gbc.sp());
        EXPECT(0xb074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb073));
        // 88 004C
        gbc.setState(0x3259, 0xc306, 0x1f90, 0x74ad, 0xa69f, 0x3b22, 0x0, 0x1);
        gbc.writeMem(0x3259, { 0x88 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc306, gbc.sp());
        EXPECT(0x325a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 004D
        gbc.setState(0x159d, 0xde4, 0xd4f0, 0x3614, 0x79a0, 0xdd0f, 0x0, 0x1);
        gbc.writeMem(0x159d, { 0x88 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xde4, gbc.sp());
        EXPECT(0x159e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 004E
        gbc.setState(0x893c, 0x2cba, 0x4ed0, 0xe317, 0x1b04, 0xd465, 0x1, 0x0);
        gbc.writeMem(0x893c, { 0x88 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2cba, gbc.sp());
        EXPECT(0x893d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x893c));
        // 88 004F
        gbc.setState(0x6160, 0x9e58, 0x18a0, 0x591, 0xcb7f, 0x424f, 0x0, 0x1);
        gbc.writeMem(0x6160, { 0x88 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9e58, gbc.sp());
        EXPECT(0x6161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0050
        gbc.setState(0x45d4, 0xd233, 0x2480, 0x22cc, 0xf0b7, 0x81d7, 0x0, 0x0);
        gbc.writeMem(0x45d4, { 0x88 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd233, gbc.sp());
        EXPECT(0x45d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0051
        gbc.setState(0xc1c8, 0x82a6, 0xb890, 0xce06, 0x407e, 0xa4a6, 0x1, 0x1);
        gbc.writeMem(0xc1c8, { 0x88 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x82a6, gbc.sp());
        EXPECT(0xc1c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc1c8));
        // 88 0052
        gbc.setState(0xb573, 0x36c5, 0xea50, 0xc5b0, 0x7f87, 0xe85d, 0x0, 0x1);
        gbc.writeMem(0xb573, { 0x88 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x36c5, gbc.sp());
        EXPECT(0xb574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb573));
        // 88 0053
        gbc.setState(0x921a, 0x5fb2, 0xfc10, 0x541c, 0x48a0, 0x9f64, 0x1, 0x0);
        gbc.writeMem(0x921a, { 0x88 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5fb2, gbc.sp());
        EXPECT(0x921b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x921a));
        // 88 0054
        gbc.setState(0xc201, 0xa0, 0xb1f0, 0xf90c, 0xea49, 0x376f, 0x0, 0x0);
        gbc.writeMem(0xc201, { 0x88 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa0, gbc.sp());
        EXPECT(0xc202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc201));
        // 88 0055
        gbc.setState(0x7305, 0xdabb, 0x9160, 0x17c7, 0x913b, 0x6bf, 0x0, 0x1);
        gbc.writeMem(0x7305, { 0x88 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdabb, gbc.sp());
        EXPECT(0x7306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0056
        gbc.setState(0x83f7, 0x3bc3, 0x4710, 0xf63, 0xeb84, 0x2bc1, 0x1, 0x1);
        gbc.writeMem(0x83f7, { 0x88 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3bc3, gbc.sp());
        EXPECT(0x83f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x83f7));
        // 88 0057
        gbc.setState(0x3687, 0x6a44, 0x10a0, 0xb564, 0x3bdf, 0xe7cb, 0x0, 0x0);
        gbc.writeMem(0x3687, { 0x88 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6a44, gbc.sp());
        EXPECT(0x3688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0058
        gbc.setState(0xb7b9, 0x1eae, 0x4cc0, 0xe8e7, 0xc565, 0x3b33, 0x0, 0x1);
        gbc.writeMem(0xb7b9, { 0x88 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1eae, gbc.sp());
        EXPECT(0xb7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb7b9));
        // 88 0059
        gbc.setState(0x12cd, 0xb2b1, 0xdb20, 0x48c, 0xd75f, 0x1999, 0x0, 0x0);
        gbc.writeMem(0x12cd, { 0x88 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb2b1, gbc.sp());
        EXPECT(0x12ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 005A
        gbc.setState(0x141c, 0xcd34, 0x4120, 0xc4c0, 0xcba8, 0xd4ff, 0x0, 0x1);
        gbc.writeMem(0x141c, { 0x88 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcd34, gbc.sp());
        EXPECT(0x141d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 005B
        gbc.setState(0x5eb5, 0x152b, 0x5c20, 0x9d3d, 0x5d19, 0xa3ce, 0x0, 0x1);
        gbc.writeMem(0x5eb5, { 0x88 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x152b, gbc.sp());
        EXPECT(0x5eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 005C
        gbc.setState(0xec13, 0xe3a3, 0x5d00, 0x19e3, 0x45f8, 0x94eb, 0x0, 0x0);
        gbc.writeMem(0xec13, { 0x88 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe3a3, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xec13));
        // 88 005D
        gbc.setState(0xe4d8, 0x46e8, 0xf5e0, 0x7092, 0xec74, 0xf95e, 0x1, 0x0);
        gbc.writeMem(0xe4d8, { 0x88 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x46e8, gbc.sp());
        EXPECT(0xe4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe4d8));
        // 88 005E
        gbc.setState(0xef5f, 0xfbae, 0x57e0, 0xcb21, 0x8af9, 0xa845, 0x1, 0x0);
        gbc.writeMem(0xef5f, { 0x88 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfbae, gbc.sp());
        EXPECT(0xef60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xef5f));
        // 88 005F
        gbc.setState(0x439d, 0x4242, 0x7550, 0x5e85, 0xeb65, 0x7834, 0x1, 0x1);
        gbc.writeMem(0x439d, { 0x88 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4242, gbc.sp());
        EXPECT(0x439e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0060
        gbc.setState(0xbbe4, 0xd9e3, 0x2c0, 0x3029, 0x75c1, 0x30c, 0x1, 0x0);
        gbc.writeMem(0xbbe4, { 0x88 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd9e3, gbc.sp());
        EXPECT(0xbbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbbe4));
        // 88 0061
        gbc.setState(0x5728, 0x65dd, 0x4110, 0xd4c7, 0x987, 0x67f9, 0x1, 0x1);
        gbc.writeMem(0x5728, { 0x88 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x65dd, gbc.sp());
        EXPECT(0x5729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0062
        gbc.setState(0x18d1, 0xd4c5, 0x5dc0, 0xb51d, 0x952d, 0x84fd, 0x0, 0x0);
        gbc.writeMem(0x18d1, { 0x88 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd4c5, gbc.sp());
        EXPECT(0x18d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0063
        gbc.setState(0x5921, 0x993a, 0x3e40, 0xae0f, 0x547f, 0x94e3, 0x0, 0x0);
        gbc.writeMem(0x5921, { 0x88 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x993a, gbc.sp());
        EXPECT(0x5922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0064
        gbc.setState(0x7304, 0xe270, 0x8aa0, 0xae6f, 0x7cb6, 0xaf7, 0x1, 0x0);
        gbc.writeMem(0x7304, { 0x88 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe270, gbc.sp());
        EXPECT(0x7305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0065
        gbc.setState(0x8d8e, 0xeab5, 0x2160, 0x4f13, 0x6cab, 0xdf5c, 0x0, 0x0);
        gbc.writeMem(0x8d8e, { 0x88 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xeab5, gbc.sp());
        EXPECT(0x8d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8d8e));
        // 88 0067
        gbc.setState(0x5177, 0xb616, 0x9010, 0x1dad, 0xe9, 0x15cf, 0x1, 0x1);
        gbc.writeMem(0x5177, { 0x88 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb616, gbc.sp());
        EXPECT(0x5178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0068
        gbc.setState(0x532d, 0xb369, 0xa610, 0xae44, 0xc3e, 0xad2a, 0x0, 0x0);
        gbc.writeMem(0x532d, { 0x88 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb369, gbc.sp());
        EXPECT(0x532e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 006A
        gbc.setState(0x28f4, 0x60fc, 0xd2e0, 0xb652, 0x14b3, 0xad89, 0x0, 0x0);
        gbc.writeMem(0x28f4, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x60fc, gbc.sp());
        EXPECT(0x28f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 006B
        gbc.setState(0xb0f1, 0x373, 0x2db0, 0x222a, 0x5aa, 0x754a, 0x0, 0x1);
        gbc.writeMem(0xb0f1, { 0x88 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x373, gbc.sp());
        EXPECT(0xb0f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb0f1));
        // 88 006C
        gbc.setState(0x8ec9, 0xc60e, 0x8640, 0xd533, 0x74da, 0xe58c, 0x0, 0x0);
        gbc.writeMem(0x8ec9, { 0x88 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc60e, gbc.sp());
        EXPECT(0x8eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8ec9));
        // 88 006D
        gbc.setState(0xaf52, 0x15a6, 0xcae0, 0x41b2, 0xefaa, 0x1ffc, 0x1, 0x1);
        gbc.writeMem(0xaf52, { 0x88 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x15a6, gbc.sp());
        EXPECT(0xaf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaf52));
        // 88 006F
        gbc.setState(0x7302, 0x8c8c, 0x4690, 0x709b, 0x7cd0, 0x1ebd, 0x0, 0x0);
        gbc.writeMem(0x7302, { 0x88 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8c8c, gbc.sp());
        EXPECT(0x7303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0070
        gbc.setState(0xe837, 0xc381, 0x3800, 0x668, 0x2d32, 0x2c97, 0x0, 0x0);
        gbc.writeMem(0xe837, { 0x88 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc381, gbc.sp());
        EXPECT(0xe838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe837));
        // 88 0071
        gbc.setState(0x37d5, 0xee63, 0xcd30, 0x3d5e, 0x760d, 0x3904, 0x1, 0x0);
        gbc.writeMem(0x37d5, { 0x88 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xee63, gbc.sp());
        EXPECT(0x37d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0072
        gbc.setState(0x55de, 0x6d42, 0x22d0, 0x1548, 0x541, 0xb5a7, 0x0, 0x0);
        gbc.writeMem(0x55de, { 0x88 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6d42, gbc.sp());
        EXPECT(0x55df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0073
        gbc.setState(0x93ef, 0xbd98, 0x7010, 0xeb81, 0xd80e, 0x1e2f, 0x1, 0x1);
        gbc.writeMem(0x93ef, { 0x88 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbd98, gbc.sp());
        EXPECT(0x93f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x93ef));
        // 88 0074
        gbc.setState(0xc121, 0xbb6e, 0xcc80, 0x38b2, 0x4629, 0x9a38, 0x1, 0x0);
        gbc.writeMem(0xc121, { 0x88 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbb6e, gbc.sp());
        EXPECT(0xc122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc121));
        // 88 0075
        gbc.setState(0x3282, 0xf96e, 0xa2b0, 0xf672, 0xa4c9, 0xa, 0x1, 0x0);
        gbc.writeMem(0x3282, { 0x88 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf96e, gbc.sp());
        EXPECT(0x3283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0076
        gbc.setState(0xcfc6, 0xdbc7, 0x50a0, 0x6d75, 0x357f, 0xf041, 0x0, 0x1);
        gbc.writeMem(0xcfc6, { 0x88 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdbc7, gbc.sp());
        EXPECT(0xcfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcfc6));
        // 88 0077
        gbc.setState(0xafb2, 0x8961, 0xe220, 0x89ec, 0x1b6a, 0xe5da, 0x1, 0x1);
        gbc.writeMem(0xafb2, { 0x88 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8961, gbc.sp());
        EXPECT(0xafb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xafb2));
        // 88 0078
        gbc.setState(0xe7fe, 0xdbf3, 0xc770, 0x7108, 0x8f7b, 0x2549, 0x0, 0x1);
        gbc.writeMem(0xe7fe, { 0x88 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdbf3, gbc.sp());
        EXPECT(0xe7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe7fe));
        // 88 0079
        gbc.setState(0x9afa, 0x187a, 0x6260, 0x1383, 0xd5d6, 0xfd7f, 0x1, 0x1);
        gbc.writeMem(0x9afa, { 0x88 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x187a, gbc.sp());
        EXPECT(0x9afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9afa));
        // 88 007A
        gbc.setState(0x1388, 0x6010, 0xb550, 0x1c32, 0x39bf, 0x3b2, 0x1, 0x1);
        gbc.writeMem(0x1388, { 0x88 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6010, gbc.sp());
        EXPECT(0x1389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 007B
        gbc.setState(0x4a21, 0x5e1a, 0xb200, 0x1a21, 0xc978, 0x7c49, 0x1, 0x0);
        gbc.writeMem(0x4a21, { 0x88 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5e1a, gbc.sp());
        EXPECT(0x4a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 007C
        gbc.setState(0xe14, 0x98f6, 0x2ec0, 0xcdec, 0x352a, 0x9741, 0x0, 0x1);
        gbc.writeMem(0xe14, { 0x88 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x98f6, gbc.sp());
        EXPECT(0xe15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 007D
        gbc.setState(0x2c84, 0xafb2, 0x7cd0, 0x112f, 0x37a1, 0xc02f, 0x1, 0x1);
        gbc.writeMem(0x2c84, { 0x88 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xafb2, gbc.sp());
        EXPECT(0x2c85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 007E
        gbc.setState(0x99a2, 0xf5d9, 0x5430, 0xbb35, 0x9ec0, 0x15f6, 0x1, 0x0);
        gbc.writeMem(0x99a2, { 0x88 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf5d9, gbc.sp());
        EXPECT(0x99a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x99a2));
        // 88 007F
        gbc.setState(0x81a6, 0xbe46, 0x7ba0, 0x62a5, 0x64b3, 0x1fa5, 0x1, 0x1);
        gbc.writeMem(0x81a6, { 0x88 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbe46, gbc.sp());
        EXPECT(0x81a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x81a6));
        // 88 0080
        gbc.setState(0x3964, 0x6783, 0xfe50, 0xb61d, 0x3dbf, 0xba3d, 0x0, 0x0);
        gbc.writeMem(0x3964, { 0x88 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6783, gbc.sp());
        EXPECT(0x3965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0081
        gbc.setState(0xb089, 0x81f0, 0x13c0, 0x3452, 0xab9b, 0x3d2b, 0x0, 0x1);
        gbc.writeMem(0xb089, { 0x88 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x81f0, gbc.sp());
        EXPECT(0xb08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb089));
        // 88 0082
        gbc.setState(0xbf56, 0x6220, 0x90f0, 0xcf1, 0xb624, 0x6457, 0x1, 0x1);
        gbc.writeMem(0xbf56, { 0x88 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6220, gbc.sp());
        EXPECT(0xbf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbf56));
        // 88 0083
        gbc.setState(0x889f, 0x67d, 0xfa70, 0x37ab, 0xc151, 0x5a54, 0x1, 0x1);
        gbc.writeMem(0x889f, { 0x88 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x67d, gbc.sp());
        EXPECT(0x88a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x889f));
        // 88 0084
        gbc.setState(0xd0ce, 0x5416, 0x8430, 0x3ed3, 0x30c2, 0xcbd5, 0x0, 0x1);
        gbc.writeMem(0xd0ce, { 0x88 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5416, gbc.sp());
        EXPECT(0xd0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd0ce));
        // 88 0085
        gbc.setState(0xdca4, 0x9ebc, 0x84a0, 0xe9ca, 0x7690, 0xcd06, 0x1, 0x1);
        gbc.writeMem(0xdca4, { 0x88 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9ebc, gbc.sp());
        EXPECT(0xdca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdca4));
        // 88 0086
        gbc.setState(0xbda, 0xbecc, 0x9a90, 0xc6f9, 0xd294, 0x8fef, 0x0, 0x1);
        gbc.writeMem(0xbda, { 0x88 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbecc, gbc.sp());
        EXPECT(0xbdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0087
        gbc.setState(0xda8a, 0x5f45, 0x26d0, 0xc536, 0x35c4, 0xd7f9, 0x0, 0x0);
        gbc.writeMem(0xda8a, { 0x88 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5f45, gbc.sp());
        EXPECT(0xda8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xda8a));
        // 88 0088
        gbc.setState(0xd839, 0x501, 0x97f0, 0x3976, 0xb0bf, 0xa839, 0x0, 0x0);
        gbc.writeMem(0xd839, { 0x88 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x501, gbc.sp());
        EXPECT(0xd83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd839));
        // 88 0089
        gbc.setState(0x5278, 0xab45, 0xbc30, 0xd6c5, 0x92c, 0x6aec, 0x0, 0x0);
        gbc.writeMem(0x5278, { 0x88 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xab45, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 008A
        gbc.setState(0x76df, 0x7e73, 0x9980, 0xb807, 0x6ac5, 0xe01e, 0x1, 0x0);
        gbc.writeMem(0x76df, { 0x88 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7e73, gbc.sp());
        EXPECT(0x76e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 008B
        gbc.setState(0xde88, 0x4ace, 0x2420, 0xd6ce, 0x8948, 0x4e77, 0x1, 0x0);
        gbc.writeMem(0xde88, { 0x88 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4ace, gbc.sp());
        EXPECT(0xde89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xde88));
        // 88 008C
        gbc.setState(0xcbc2, 0x3427, 0xfb20, 0x9a76, 0xcaa6, 0x3e32, 0x1, 0x0);
        gbc.writeMem(0xcbc2, { 0x88 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3427, gbc.sp());
        EXPECT(0xcbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcbc2));
        // 88 008D
        gbc.setState(0xab7, 0x635c, 0x7a90, 0x8a50, 0x37e0, 0x64a4, 0x1, 0x1);
        gbc.writeMem(0xab7, { 0x88 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x635c, gbc.sp());
        EXPECT(0xab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 008E
        gbc.setState(0xc7c0, 0xf450, 0x7b80, 0x5fbf, 0xdb5d, 0xfa62, 0x1, 0x0);
        gbc.writeMem(0xc7c0, { 0x88 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf450, gbc.sp());
        EXPECT(0xc7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc7c0));
        // 88 008F
        gbc.setState(0x6dea, 0xf3ed, 0x8190, 0x73d7, 0x3b76, 0x766c, 0x1, 0x0);
        gbc.writeMem(0x6dea, { 0x88 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf3ed, gbc.sp());
        EXPECT(0x6deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0090
        gbc.setState(0x963c, 0xfac6, 0xd170, 0xd5c8, 0x7697, 0xc734, 0x1, 0x1);
        gbc.writeMem(0x963c, { 0x88 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfac6, gbc.sp());
        EXPECT(0x963d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x963c));
        // 88 0091
        gbc.setState(0xc74d, 0x839c, 0xb490, 0x2ddf, 0x2efc, 0xda19, 0x0, 0x1);
        gbc.writeMem(0xc74d, { 0x88 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x839c, gbc.sp());
        EXPECT(0xc74e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc74d));
        // 88 0092
        gbc.setState(0x6912, 0xc7b, 0x1fa0, 0xa7b1, 0x3c75, 0xed68, 0x1, 0x0);
        gbc.writeMem(0x6912, { 0x88 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc7b, gbc.sp());
        EXPECT(0x6913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0093
        gbc.setState(0x2322, 0xc264, 0x13a0, 0x2a8b, 0x74b7, 0x540b, 0x1, 0x0);
        gbc.writeMem(0x2322, { 0x88 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc264, gbc.sp());
        EXPECT(0x2323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0095
        gbc.setState(0x7815, 0xc103, 0x4b90, 0x2bd6, 0x66ae, 0x16bd, 0x1, 0x0);
        gbc.writeMem(0x7815, { 0x88 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc103, gbc.sp());
        EXPECT(0x7816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0096
        gbc.setState(0x6dbb, 0x5f27, 0x9520, 0xc705, 0x7042, 0x10c8, 0x1, 0x0);
        gbc.writeMem(0x6dbb, { 0x88 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5f27, gbc.sp());
        EXPECT(0x6dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0097
        gbc.setState(0xec52, 0x680a, 0x5730, 0x2d4e, 0xb434, 0x5f5e, 0x0, 0x0);
        gbc.writeMem(0xec52, { 0x88 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x680a, gbc.sp());
        EXPECT(0xec53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xec52));
        // 88 0098
        gbc.setState(0x9676, 0xc032, 0xa210, 0xd696, 0xa537, 0x6081, 0x0, 0x0);
        gbc.writeMem(0x9676, { 0x88 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc032, gbc.sp());
        EXPECT(0x9677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9676));
        // 88 0099
        gbc.setState(0x334d, 0xf6fe, 0x5880, 0xf8ab, 0xf1ba, 0x1e12, 0x0, 0x1);
        gbc.writeMem(0x334d, { 0x88 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf6fe, gbc.sp());
        EXPECT(0x334e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 009A
        gbc.setState(0x9587, 0x63b0, 0x27d0, 0xc917, 0x8862, 0x67e8, 0x1, 0x0);
        gbc.writeMem(0x9587, { 0x88 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x63b0, gbc.sp());
        EXPECT(0x9588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9587));
        // 88 009B
        gbc.setState(0x79ae, 0x6ca9, 0xbdc0, 0x73ae, 0xe6c8, 0x2d2e, 0x0, 0x1);
        gbc.writeMem(0x79ae, { 0x88 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6ca9, gbc.sp());
        EXPECT(0x79af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 009C
        gbc.setState(0x26c1, 0x2b86, 0x59d0, 0x8062, 0x146e, 0x6ebc, 0x1, 0x0);
        gbc.writeMem(0x26c1, { 0x88 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2b86, gbc.sp());
        EXPECT(0x26c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 009D
        gbc.setState(0x8e1b, 0x4bf5, 0xd5f0, 0xb458, 0x5237, 0x1f7b, 0x0, 0x0);
        gbc.writeMem(0x8e1b, { 0x88 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4bf5, gbc.sp());
        EXPECT(0x8e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8e1b));
        // 88 009E
        gbc.setState(0x980e, 0xc5ec, 0xf770, 0x8245, 0x99a8, 0x620c, 0x1, 0x1);
        gbc.writeMem(0x980e, { 0x88 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc5ec, gbc.sp());
        EXPECT(0x980f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x980e));
        // 88 009F
        gbc.setState(0x4ed0, 0xf43d, 0x4070, 0x69ea, 0x48c5, 0xee96, 0x0, 0x0);
        gbc.writeMem(0x4ed0, { 0x88 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf43d, gbc.sp());
        EXPECT(0x4ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00A0
        gbc.setState(0x543e, 0x7a72, 0xa3f0, 0x8dff, 0x54a7, 0x6473, 0x1, 0x0);
        gbc.writeMem(0x543e, { 0x88 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7a72, gbc.sp());
        EXPECT(0x543f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00A1
        gbc.setState(0x9d8f, 0x7b4a, 0x8fc0, 0xcdaf, 0xef50, 0xa85f, 0x1, 0x1);
        gbc.writeMem(0x9d8f, { 0x88 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7b4a, gbc.sp());
        EXPECT(0x9d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9d8f));
        // 88 00A2
        gbc.setState(0x422c, 0x1b80, 0x2380, 0x260e, 0x5ca9, 0x43fe, 0x1, 0x1);
        gbc.writeMem(0x422c, { 0x88 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1b80, gbc.sp());
        EXPECT(0x422d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00A3
        gbc.setState(0x17e5, 0x56bc, 0x63a0, 0xca6f, 0x9804, 0x3da8, 0x0, 0x0);
        gbc.writeMem(0x17e5, { 0x88 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x56bc, gbc.sp());
        EXPECT(0x17e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00A4
        gbc.setState(0xdf80, 0x6d99, 0x8650, 0x14d5, 0xaa4, 0x3868, 0x0, 0x0);
        gbc.writeMem(0xdf80, { 0x88 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6d99, gbc.sp());
        EXPECT(0xdf81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdf80));
        // 88 00A5
        gbc.setState(0x9b56, 0x4f34, 0xef00, 0x983e, 0x5959, 0x15b1, 0x0, 0x0);
        gbc.writeMem(0x9b56, { 0x88 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4f34, gbc.sp());
        EXPECT(0x9b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9b56));
        // 88 00A6
        gbc.setState(0x1f2b, 0x9ddc, 0x3710, 0x3e80, 0xa363, 0x8db9, 0x0, 0x0);
        gbc.writeMem(0x1f2b, { 0x88 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9ddc, gbc.sp());
        EXPECT(0x1f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00A7
        gbc.setState(0xd315, 0x85be, 0x7390, 0xdee2, 0x74a2, 0x8cde, 0x1, 0x0);
        gbc.writeMem(0xd315, { 0x88 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x85be, gbc.sp());
        EXPECT(0xd316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd315));
        // 88 00A9
        gbc.setState(0xbbca, 0x1ebb, 0x18a0, 0x4440, 0x7130, 0x8ffe, 0x0, 0x1);
        gbc.writeMem(0xbbca, { 0x88 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1ebb, gbc.sp());
        EXPECT(0xbbcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbbca));
        // 88 00AA
        gbc.setState(0x4742, 0x5de4, 0x1ed0, 0xed94, 0xe6de, 0x3f55, 0x0, 0x1);
        gbc.writeMem(0x4742, { 0x88 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5de4, gbc.sp());
        EXPECT(0x4743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00AB
        gbc.setState(0xc24b, 0x17a3, 0x4310, 0x780b, 0xb85a, 0x730c, 0x0, 0x1);
        gbc.writeMem(0xc24b, { 0x88 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x17a3, gbc.sp());
        EXPECT(0xc24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc24b));
        // 88 00AC
        gbc.setState(0x5b65, 0xe8d, 0x5080, 0xff8c, 0x4a92, 0x8b6f, 0x1, 0x1);
        gbc.writeMem(0x5b65, { 0x88 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe8d, gbc.sp());
        EXPECT(0x5b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00AD
        gbc.setState(0x388d, 0x14a9, 0x9d90, 0x982b, 0xef97, 0xc4e8, 0x0, 0x1);
        gbc.writeMem(0x388d, { 0x88 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x14a9, gbc.sp());
        EXPECT(0x388e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00AE
        gbc.setState(0x1b0b, 0xbd5, 0xa50, 0x1bc0, 0x35c5, 0xea6a, 0x0, 0x0);
        gbc.writeMem(0x1b0b, { 0x88 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbd5, gbc.sp());
        EXPECT(0x1b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00AF
        gbc.setState(0xbec9, 0x5dae, 0x8f80, 0xce89, 0x2aed, 0x490d, 0x1, 0x1);
        gbc.writeMem(0xbec9, { 0x88 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5dae, gbc.sp());
        EXPECT(0xbeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbec9));
        // 88 00B0
        gbc.setState(0x5ba3, 0x21bd, 0x9560, 0x9d33, 0x52c8, 0x4c55, 0x0, 0x1);
        gbc.writeMem(0x5ba3, { 0x88 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x21bd, gbc.sp());
        EXPECT(0x5ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00B2
        gbc.setState(0x2a5f, 0x7a0b, 0x4030, 0x1729, 0x8caa, 0x4811, 0x0, 0x1);
        gbc.writeMem(0x2a5f, { 0x88 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7a0b, gbc.sp());
        EXPECT(0x2a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00B3
        gbc.setState(0x1ee6, 0xa09a, 0x5a30, 0xbf72, 0xf5e3, 0x166f, 0x0, 0x1);
        gbc.writeMem(0x1ee6, { 0x88 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa09a, gbc.sp());
        EXPECT(0x1ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00B4
        gbc.setState(0x91b6, 0xf28f, 0x9310, 0x26f5, 0x8096, 0xb539, 0x1, 0x0);
        gbc.writeMem(0x91b6, { 0x88 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf28f, gbc.sp());
        EXPECT(0x91b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x91b6));
        // 88 00B5
        gbc.setState(0x57e3, 0xc819, 0xe5b0, 0x9dc7, 0x763c, 0x7ad6, 0x0, 0x1);
        gbc.writeMem(0x57e3, { 0x88 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc819, gbc.sp());
        EXPECT(0x57e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00B6
        gbc.setState(0x7cf4, 0x16b4, 0xe550, 0x7042, 0x9cc9, 0xc461, 0x1, 0x0);
        gbc.writeMem(0x7cf4, { 0x88 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x16b4, gbc.sp());
        EXPECT(0x7cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00B7
        gbc.setState(0x5834, 0x6ab4, 0x8250, 0x8c2, 0x3e50, 0x431b, 0x0, 0x1);
        gbc.writeMem(0x5834, { 0x88 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6ab4, gbc.sp());
        EXPECT(0x5835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00B8
        gbc.setState(0x85ca, 0xf1a9, 0xe290, 0x6493, 0x33f1, 0xa55c, 0x1, 0x1);
        gbc.writeMem(0x85ca, { 0x88 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf1a9, gbc.sp());
        EXPECT(0x85cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x85ca));
        // 88 00B9
        gbc.setState(0x28ea, 0xabe, 0xf810, 0x8116, 0x1996, 0xc140, 0x1, 0x1);
        gbc.writeMem(0x28ea, { 0x88 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xabe, gbc.sp());
        EXPECT(0x28eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00BA
        gbc.setState(0xa5bc, 0x91c7, 0x98e0, 0xad5c, 0x5579, 0x53c2, 0x0, 0x1);
        gbc.writeMem(0xa5bc, { 0x88 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x91c7, gbc.sp());
        EXPECT(0xa5bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa5bc));
        // 88 00BB
        gbc.setState(0xa679, 0xfa66, 0x62c0, 0x41, 0x6afa, 0x7870, 0x1, 0x1);
        gbc.writeMem(0xa679, { 0x88 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfa66, gbc.sp());
        EXPECT(0xa67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa679));
        // 88 00BC
        gbc.setState(0x2c71, 0x7c2b, 0x7e50, 0xe4ea, 0xca12, 0x9091, 0x1, 0x0);
        gbc.writeMem(0x2c71, { 0x88 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7c2b, gbc.sp());
        EXPECT(0x2c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00BD
        gbc.setState(0x4172, 0x1d99, 0xd3c0, 0xdbd8, 0x805a, 0xf6e9, 0x1, 0x1);
        gbc.writeMem(0x4172, { 0x88 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1d99, gbc.sp());
        EXPECT(0x4173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00BE
        gbc.setState(0x3035, 0xb869, 0x9630, 0xf2e4, 0x1f5b, 0x949f, 0x0, 0x0);
        gbc.writeMem(0x3035, { 0x88 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb869, gbc.sp());
        EXPECT(0x3036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00BF
        gbc.setState(0x407f, 0xcbcf, 0x260, 0xc582, 0xc57e, 0x6b06, 0x0, 0x1);
        gbc.writeMem(0x407f, { 0x88 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcbcf, gbc.sp());
        EXPECT(0x4080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00C0
        gbc.setState(0x80bc, 0xe628, 0x5bb0, 0xe27f, 0xa6db, 0x522e, 0x1, 0x1);
        gbc.writeMem(0x80bc, { 0x88 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe628, gbc.sp());
        EXPECT(0x80bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x80bc));
        // 88 00C1
        gbc.setState(0xd59c, 0x5de8, 0xa980, 0x1808, 0xca7f, 0x5b46, 0x0, 0x1);
        gbc.writeMem(0xd59c, { 0x88 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5de8, gbc.sp());
        EXPECT(0xd59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd59c));
        // 88 00C2
        gbc.setState(0xbbfc, 0xa31f, 0xf600, 0xbc1, 0x260a, 0x5f99, 0x1, 0x0);
        gbc.writeMem(0xbbfc, { 0x88 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa31f, gbc.sp());
        EXPECT(0xbbfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbbfc));
        // 88 00C3
        gbc.setState(0xb200, 0xe98f, 0x6bc0, 0x1572, 0xd94d, 0x56ab, 0x1, 0x0);
        gbc.writeMem(0xb200, { 0x88 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe98f, gbc.sp());
        EXPECT(0xb201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb200));
        // 88 00C4
        gbc.setState(0x9bca, 0x2807, 0x8a30, 0x6d4e, 0xac1d, 0xa1e3, 0x0, 0x0);
        gbc.writeMem(0x9bca, { 0x88 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2807, gbc.sp());
        EXPECT(0x9bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9bca));
        // 88 00C5
        gbc.setState(0xc235, 0xd312, 0x8030, 0x8c51, 0x9984, 0x6250, 0x0, 0x0);
        gbc.writeMem(0xc235, { 0x88 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd312, gbc.sp());
        EXPECT(0xc236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc235));
        // 88 00C6
        gbc.setState(0x1fdb, 0x759a, 0x25d0, 0x9906, 0xe282, 0x3d6e, 0x0, 0x1);
        gbc.writeMem(0x1fdb, { 0x88 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x759a, gbc.sp());
        EXPECT(0x1fdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00C7
        gbc.setState(0x2e56, 0x3a7, 0x30e0, 0x9ea1, 0x8edb, 0x4c4e, 0x1, 0x1);
        gbc.writeMem(0x2e56, { 0x88 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3a7, gbc.sp());
        EXPECT(0x2e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00C8
        gbc.setState(0x165a, 0xefc2, 0x6cb0, 0x6ff0, 0xd06, 0x25ba, 0x1, 0x0);
        gbc.writeMem(0x165a, { 0x88 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xefc2, gbc.sp());
        EXPECT(0x165b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00C9
        gbc.setState(0xe3b3, 0xee7, 0x2d90, 0x5848, 0xd791, 0xc3e7, 0x0, 0x1);
        gbc.writeMem(0xe3b3, { 0x88 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xee7, gbc.sp());
        EXPECT(0xe3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe3b3));
        // 88 00CA
        gbc.setState(0x80d8, 0x5b17, 0x41c0, 0x319, 0x3298, 0xd996, 0x1, 0x0);
        gbc.writeMem(0x80d8, { 0x88 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5b17, gbc.sp());
        EXPECT(0x80d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x80d8));
        // 88 00CB
        gbc.setState(0xbac1, 0xee22, 0x89c0, 0x2960, 0x5934, 0x3776, 0x0, 0x0);
        gbc.writeMem(0xbac1, { 0x88 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xee22, gbc.sp());
        EXPECT(0xbac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbac1));
        // 88 00CC
        gbc.setState(0x32c4, 0x82f, 0x16e0, 0x12d7, 0x5346, 0xff61, 0x1, 0x1);
        gbc.writeMem(0x32c4, { 0x88 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x82f, gbc.sp());
        EXPECT(0x32c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00CD
        gbc.setState(0x96b6, 0xeed4, 0xb170, 0xc6a5, 0xe29f, 0x1d25, 0x1, 0x0);
        gbc.writeMem(0x96b6, { 0x88 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xeed4, gbc.sp());
        EXPECT(0x96b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x96b6));
        // 88 00CE
        gbc.setState(0x784e, 0x8baa, 0xa440, 0xfe55, 0x4953, 0xb692, 0x0, 0x1);
        gbc.writeMem(0x784e, { 0x88 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8baa, gbc.sp());
        EXPECT(0x784f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00CF
        gbc.setState(0x37d, 0xc4e7, 0xdb60, 0xb79f, 0x4207, 0xd8be, 0x0, 0x1);
        gbc.writeMem(0x37d, { 0x88 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc4e7, gbc.sp());
        EXPECT(0x37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00D0
        gbc.setState(0x4697, 0x42ba, 0xfdd0, 0xbb18, 0x85df, 0x23d7, 0x0, 0x1);
        gbc.writeMem(0x4697, { 0x88 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x42ba, gbc.sp());
        EXPECT(0x4698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00D1
        gbc.setState(0x129f, 0x717b, 0xe7a0, 0x1a03, 0xc1b7, 0x6605, 0x1, 0x0);
        gbc.writeMem(0x129f, { 0x88 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x717b, gbc.sp());
        EXPECT(0x12a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00D2
        gbc.setState(0x2c99, 0xe3b2, 0x4e60, 0xb648, 0x33b1, 0x13a, 0x1, 0x1);
        gbc.writeMem(0x2c99, { 0x88 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe3b2, gbc.sp());
        EXPECT(0x2c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00D3
        gbc.setState(0xab33, 0x5507, 0xd5b0, 0xb527, 0x9585, 0x1b30, 0x1, 0x0);
        gbc.writeMem(0xab33, { 0x88 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5507, gbc.sp());
        EXPECT(0xab34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xab33));
        // 88 00D4
        gbc.setState(0x952b, 0xa30c, 0xf870, 0x7eef, 0xf60d, 0x8055, 0x0, 0x0);
        gbc.writeMem(0x952b, { 0x88 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa30c, gbc.sp());
        EXPECT(0x952c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x952b));
        // 88 00D6
        gbc.setState(0xd14f, 0x5515, 0x5f0, 0xe5b6, 0x266c, 0x1455, 0x1, 0x1);
        gbc.writeMem(0xd14f, { 0x88 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5515, gbc.sp());
        EXPECT(0xd150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd14f));
        // 88 00D7
        gbc.setState(0x1f6d, 0xb32f, 0x1e50, 0x17e3, 0x2b1b, 0x4d64, 0x1, 0x0);
        gbc.writeMem(0x1f6d, { 0x88 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb32f, gbc.sp());
        EXPECT(0x1f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00D8
        gbc.setState(0x294c, 0xe63c, 0xa120, 0x3bb2, 0x2d9, 0xb171, 0x1, 0x0);
        gbc.writeMem(0x294c, { 0x88 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe63c, gbc.sp());
        EXPECT(0x294d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00D9
        gbc.setState(0xb703, 0x2633, 0x16f0, 0x897e, 0x9600, 0x763b, 0x0, 0x1);
        gbc.writeMem(0xb703, { 0x88 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2633, gbc.sp());
        EXPECT(0xb704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb703));
        // 88 00DA
        gbc.setState(0x6537, 0x646f, 0xf120, 0xe34c, 0xf1a7, 0x9e98, 0x0, 0x0);
        gbc.writeMem(0x6537, { 0x88 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x646f, gbc.sp());
        EXPECT(0x6538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00DB
        gbc.setState(0xddc5, 0xe4a6, 0x83e0, 0x545d, 0x3486, 0x328f, 0x1, 0x1);
        gbc.writeMem(0xddc5, { 0x88 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe4a6, gbc.sp());
        EXPECT(0xddc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xddc5));
        // 88 00DC
        gbc.setState(0x25b9, 0x6550, 0xb9a0, 0x85b5, 0xf72, 0xfc35, 0x1, 0x0);
        gbc.writeMem(0x25b9, { 0x88 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6550, gbc.sp());
        EXPECT(0x25ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00DD
        gbc.setState(0xdf4, 0x9052, 0xdb10, 0xbb16, 0xcdb3, 0xa8eb, 0x0, 0x1);
        gbc.writeMem(0xdf4, { 0x88 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9052, gbc.sp());
        EXPECT(0xdf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00DE
        gbc.setState(0xd13a, 0x4436, 0x7a70, 0xf772, 0xc1ef, 0xc225, 0x0, 0x1);
        gbc.writeMem(0xd13a, { 0x88 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4436, gbc.sp());
        EXPECT(0xd13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd13a));
        // 88 00DF
        gbc.setState(0xac3d, 0xd05b, 0x4870, 0x4dbd, 0xb599, 0x8a3b, 0x0, 0x1);
        gbc.writeMem(0xac3d, { 0x88 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd05b, gbc.sp());
        EXPECT(0xac3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xac3d));
        // 88 00E0
        gbc.setState(0x54f7, 0xf09, 0x54f0, 0x7953, 0x5f65, 0xfd35, 0x0, 0x0);
        gbc.writeMem(0x54f7, { 0x88 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf09, gbc.sp());
        EXPECT(0x54f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00E1
        gbc.setState(0x28af, 0x5096, 0x6ec0, 0xd982, 0xe202, 0x2a1c, 0x1, 0x0);
        gbc.writeMem(0x28af, { 0x88 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5096, gbc.sp());
        EXPECT(0x28b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00E2
        gbc.setState(0x1a37, 0x2d9, 0x3590, 0x3474, 0x1ccd, 0x14c5, 0x0, 0x1);
        gbc.writeMem(0x1a37, { 0x88 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2d9, gbc.sp());
        EXPECT(0x1a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00E3
        gbc.setState(0x992e, 0x83ea, 0x55f0, 0x78c7, 0x64d, 0x53a4, 0x0, 0x0);
        gbc.writeMem(0x992e, { 0x88 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x83ea, gbc.sp());
        EXPECT(0x992f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x992e));
        // 88 00E4
        gbc.setState(0xb61d, 0x2f78, 0xff80, 0xaa82, 0x84b9, 0x14e6, 0x0, 0x1);
        gbc.writeMem(0xb61d, { 0x88 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2f78, gbc.sp());
        EXPECT(0xb61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb61d));
        // 88 00E5
        gbc.setState(0xdcb2, 0xef9f, 0xbc70, 0x5da1, 0xdf8b, 0x7830, 0x1, 0x0);
        gbc.writeMem(0xdcb2, { 0x88 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xef9f, gbc.sp());
        EXPECT(0xdcb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdcb2));
        // 88 00E6
        gbc.setState(0xd441, 0x5223, 0xc010, 0xcbcb, 0xf898, 0x1ef0, 0x1, 0x0);
        gbc.writeMem(0xd441, { 0x88 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5223, gbc.sp());
        EXPECT(0xd442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd441));
        // 88 00E7
        gbc.setState(0x71ab, 0x90cf, 0x3190, 0x9e90, 0xb190, 0x1da, 0x1, 0x1);
        gbc.writeMem(0x71ab, { 0x88 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x90cf, gbc.sp());
        EXPECT(0x71ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00E9
        gbc.setState(0x1f7d, 0xfd4d, 0x4a70, 0xd74a, 0x68a4, 0xf3ef, 0x0, 0x0);
        gbc.writeMem(0x1f7d, { 0x88 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfd4d, gbc.sp());
        EXPECT(0x1f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00EA
        gbc.setState(0xaa16, 0x2818, 0x50b0, 0xe9ad, 0xa7c3, 0x6fc6, 0x0, 0x0);
        gbc.writeMem(0xaa16, { 0x88 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2818, gbc.sp());
        EXPECT(0xaa17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaa16));
        // 88 00EB
        gbc.setState(0x7226, 0x3f3c, 0xb160, 0xf59d, 0x1c39, 0x4507, 0x0, 0x0);
        gbc.writeMem(0x7226, { 0x88 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3f3c, gbc.sp());
        EXPECT(0x7227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00EC
        gbc.setState(0x2e06, 0xf277, 0x92f0, 0xfc90, 0x5af7, 0xc664, 0x1, 0x0);
        gbc.writeMem(0x2e06, { 0x88 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf277, gbc.sp());
        EXPECT(0x2e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00ED
        gbc.setState(0x9edc, 0xc3a3, 0xd660, 0xec3c, 0xea4f, 0xf40a, 0x1, 0x1);
        gbc.writeMem(0x9edc, { 0x88 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc3a3, gbc.sp());
        EXPECT(0x9edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9edc));
        // 88 00EE
        gbc.setState(0x1d0e, 0x10b3, 0xc250, 0xea31, 0x320, 0xcc7f, 0x0, 0x1);
        gbc.writeMem(0x1d0e, { 0x88 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x10b3, gbc.sp());
        EXPECT(0x1d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00EF
        gbc.setState(0x66f8, 0x47a, 0x9d00, 0x1cd3, 0xfcfb, 0xb163, 0x0, 0x0);
        gbc.writeMem(0x66f8, { 0x88 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x47a, gbc.sp());
        EXPECT(0x66f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00F0
        gbc.setState(0x909f, 0xf1f6, 0xb200, 0xbe3c, 0xa662, 0x46f7, 0x1, 0x0);
        gbc.writeMem(0x909f, { 0x88 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf1f6, gbc.sp());
        EXPECT(0x90a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x909f));
        // 88 00F1
        gbc.setState(0x72cc, 0x6265, 0x8f50, 0xf73, 0xd3f7, 0xf836, 0x1, 0x0);
        gbc.writeMem(0x72cc, { 0x88 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6265, gbc.sp());
        EXPECT(0x72cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00F2
        gbc.setState(0xb08d, 0x4aec, 0xa450, 0xbd31, 0xf94d, 0xd1f9, 0x0, 0x1);
        gbc.writeMem(0xb08d, { 0x88 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4aec, gbc.sp());
        EXPECT(0xb08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb08d));
        // 88 00F3
        gbc.setState(0xbeb, 0x956, 0xf1f0, 0xcb83, 0x4f4e, 0xe87a, 0x0, 0x0);
        gbc.writeMem(0xbeb, { 0x88 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x956, gbc.sp());
        EXPECT(0xbec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00F5
        gbc.setState(0x44d4, 0x38e9, 0x8450, 0xebec, 0xf99a, 0x87f4, 0x1, 0x1);
        gbc.writeMem(0x44d4, { 0x88 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x38e9, gbc.sp());
        EXPECT(0x44d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00F6
        gbc.setState(0x440e, 0xb46b, 0xb960, 0x9b58, 0x961d, 0x53ff, 0x0, 0x0);
        gbc.writeMem(0x440e, { 0x88 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb46b, gbc.sp());
        EXPECT(0x440f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00F7
        gbc.setState(0x44c9, 0x4889, 0x2900, 0x95bb, 0x5bcd, 0xfb2f, 0x0, 0x1);
        gbc.writeMem(0x44c9, { 0x88 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4889, gbc.sp());
        EXPECT(0x44ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00F8
        gbc.setState(0x6669, 0x9b5e, 0x9680, 0x9dd8, 0x386c, 0x14eb, 0x1, 0x1);
        gbc.writeMem(0x6669, { 0x88 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9b5e, gbc.sp());
        EXPECT(0x666a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 00F9
        gbc.setState(0xe09d, 0x2e2f, 0xc0, 0x1499, 0x2a29, 0xac20, 0x0, 0x0);
        gbc.writeMem(0xe09d, { 0x88 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2e2f, gbc.sp());
        EXPECT(0xe09e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe09d));
        // 88 00FA
        gbc.setState(0x1ab1, 0x3fea, 0x7910, 0x664f, 0xb86f, 0x842b, 0x0, 0x1);
        gbc.writeMem(0x1ab1, { 0x88 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3fea, gbc.sp());
        EXPECT(0x1ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00FB
        gbc.setState(0xd380, 0x4206, 0x17f0, 0x471e, 0xd362, 0x716c, 0x1, 0x1);
        gbc.writeMem(0xd380, { 0x88 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4206, gbc.sp());
        EXPECT(0xd381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd380));
        // 88 00FC
        gbc.setState(0x294a, 0x2a0d, 0xa630, 0xf77, 0x4589, 0xbc69, 0x1, 0x0);
        gbc.writeMem(0x294a, { 0x88 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2a0d, gbc.sp());
        EXPECT(0x294b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00FD
        gbc.setState(0xb8a6, 0x520f, 0xfd90, 0xad10, 0x486f, 0x5a64, 0x0, 0x1);
        gbc.writeMem(0xb8a6, { 0x88 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x520f, gbc.sp());
        EXPECT(0xb8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb8a6));
        // 88 00FE
        gbc.setState(0x51cf, 0x522a, 0x5ce0, 0x261, 0xee51, 0xe38d, 0x0, 0x0);
        gbc.writeMem(0x51cf, { 0x88 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x522a, gbc.sp());
        EXPECT(0x51d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 00FF
        gbc.setState(0xf29, 0x7f08, 0xccf0, 0xe5ca, 0x6a17, 0x47c2, 0x1, 0x0);
        gbc.writeMem(0xf29, { 0x88 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7f08, gbc.sp());
        EXPECT(0xf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0100
        gbc.setState(0xab37, 0xf0d9, 0xf340, 0x360a, 0xfe65, 0x8cd8, 0x1, 0x0);
        gbc.writeMem(0xab37, { 0x88 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf0d9, gbc.sp());
        EXPECT(0xab38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xab37));
        // 88 0101
        gbc.setState(0x8b9d, 0xb4af, 0x18a0, 0xb701, 0xe345, 0x59a8, 0x1, 0x0);
        gbc.writeMem(0x8b9d, { 0x88 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb4af, gbc.sp());
        EXPECT(0x8b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8b9d));
        // 88 0102
        gbc.setState(0x47d9, 0xdcb7, 0xe160, 0x58ee, 0x3859, 0xf4cc, 0x1, 0x0);
        gbc.writeMem(0x47d9, { 0x88 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdcb7, gbc.sp());
        EXPECT(0x47da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0103
        gbc.setState(0x9ac7, 0x9670, 0xa750, 0xe81, 0xc9a3, 0x463f, 0x0, 0x0);
        gbc.writeMem(0x9ac7, { 0x88 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9670, gbc.sp());
        EXPECT(0x9ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9ac7));
        // 88 0104
        gbc.setState(0x3404, 0x4e87, 0x2480, 0xd3cb, 0x13fe, 0x8491, 0x0, 0x0);
        gbc.writeMem(0x3404, { 0x88 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4e87, gbc.sp());
        EXPECT(0x3405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0105
        gbc.setState(0xa276, 0x9360, 0x48d0, 0x6b83, 0x6e9c, 0x8957, 0x0, 0x0);
        gbc.writeMem(0xa276, { 0x88 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9360, gbc.sp());
        EXPECT(0xa277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa276));
        // 88 0106
        gbc.setState(0x2726, 0xedb0, 0xf1d0, 0x2128, 0x63bc, 0xeb17, 0x1, 0x1);
        gbc.writeMem(0x2726, { 0x88 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xedb0, gbc.sp());
        EXPECT(0x2727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0107
        gbc.setState(0x5300, 0xbf60, 0x7250, 0x63d8, 0x2ae4, 0xf022, 0x1, 0x0);
        gbc.writeMem(0x5300, { 0x88 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbf60, gbc.sp());
        EXPECT(0x5301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0109
        gbc.setState(0xc617, 0x3f0e, 0xd980, 0x7b2a, 0x58bc, 0x48d9, 0x0, 0x0);
        gbc.writeMem(0xc617, { 0x88 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3f0e, gbc.sp());
        EXPECT(0xc618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc617));
        // 88 010A
        gbc.setState(0x1a64, 0xa4ab, 0x3b70, 0x9167, 0x8d65, 0xa030, 0x0, 0x1);
        gbc.writeMem(0x1a64, { 0x88 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa4ab, gbc.sp());
        EXPECT(0x1a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 010B
        gbc.setState(0xcc1d, 0x14b2, 0x1170, 0x85d8, 0x501c, 0x35ee, 0x1, 0x0);
        gbc.writeMem(0xcc1d, { 0x88 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x14b2, gbc.sp());
        EXPECT(0xcc1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcc1d));
        // 88 010C
        gbc.setState(0xea72, 0x8c40, 0x77c0, 0x800d, 0xb0f7, 0x920f, 0x1, 0x0);
        gbc.writeMem(0xea72, { 0x88 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8c40, gbc.sp());
        EXPECT(0xea73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xea72));
        // 88 010D
        gbc.setState(0x6e33, 0x925b, 0xeca0, 0x992d, 0x25e2, 0x696b, 0x0, 0x1);
        gbc.writeMem(0x6e33, { 0x88 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x925b, gbc.sp());
        EXPECT(0x6e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 010E
        gbc.setState(0x1914, 0xc144, 0xf500, 0xd9e6, 0x4ce, 0x6fbc, 0x0, 0x0);
        gbc.writeMem(0x1914, { 0x88 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc144, gbc.sp());
        EXPECT(0x1915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 010F
        gbc.setState(0x7ffa, 0x3e02, 0x79d0, 0x69cb, 0xb60, 0xc20d, 0x0, 0x1);
        gbc.writeMem(0x7ffa, { 0x88 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3e02, gbc.sp());
        EXPECT(0x7ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0110
        gbc.setState(0x425f, 0x14ce, 0x2d60, 0x9389, 0x2e2e, 0x21ac, 0x1, 0x0);
        gbc.writeMem(0x425f, { 0x88 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x14ce, gbc.sp());
        EXPECT(0x4260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0111
        gbc.setState(0x397f, 0x59a4, 0x5760, 0xe388, 0xc034, 0xf548, 0x0, 0x0);
        gbc.writeMem(0x397f, { 0x88 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x59a4, gbc.sp());
        EXPECT(0x3980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0112
        gbc.setState(0x8d0c, 0x44b, 0xbb90, 0x32bd, 0x1178, 0x7f95, 0x1, 0x0);
        gbc.writeMem(0x8d0c, { 0x88 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x44b, gbc.sp());
        EXPECT(0x8d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8d0c));
        // 88 0113
        gbc.setState(0x1c62, 0x71a1, 0xef20, 0xfcde, 0x3603, 0x2618, 0x1, 0x1);
        gbc.writeMem(0x1c62, { 0x88 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x71a1, gbc.sp());
        EXPECT(0x1c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0114
        gbc.setState(0xa72c, 0x6a73, 0xf890, 0x93db, 0x180b, 0xccb9, 0x1, 0x0);
        gbc.writeMem(0xa72c, { 0x88 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6a73, gbc.sp());
        EXPECT(0xa72d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa72c));
        // 88 0115
        gbc.setState(0xa8c, 0xf645, 0x2b10, 0x2dd4, 0x58fe, 0xc277, 0x0, 0x0);
        gbc.writeMem(0xa8c, { 0x88 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf645, gbc.sp());
        EXPECT(0xa8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0116
        gbc.setState(0x822f, 0xb3ef, 0x8620, 0x7d4, 0x753c, 0x2ba, 0x0, 0x0);
        gbc.writeMem(0x822f, { 0x88 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb3ef, gbc.sp());
        EXPECT(0x8230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x822f));
        // 88 0117
        gbc.setState(0xcb15, 0x9d15, 0xcb60, 0xe8a7, 0xa92a, 0x116b, 0x1, 0x1);
        gbc.writeMem(0xcb15, { 0x88 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9d15, gbc.sp());
        EXPECT(0xcb16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcb15));
        // 88 0118
        gbc.setState(0xd30d, 0x3002, 0xb80, 0xa315, 0xcbd1, 0xbc4, 0x0, 0x1);
        gbc.writeMem(0xd30d, { 0x88 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3002, gbc.sp());
        EXPECT(0xd30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd30d));
        // 88 0119
        gbc.setState(0x50b8, 0xd675, 0xfaa0, 0x1f8d, 0x3721, 0xc1fe, 0x1, 0x1);
        gbc.writeMem(0x50b8, { 0x88 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd675, gbc.sp());
        EXPECT(0x50b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 011A
        gbc.setState(0x47ad, 0x5c6c, 0x1220, 0x295a, 0x167, 0x6252, 0x1, 0x1);
        gbc.writeMem(0x47ad, { 0x88 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5c6c, gbc.sp());
        EXPECT(0x47ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 011B
        gbc.setState(0x67a2, 0xa8cc, 0x85c0, 0xaac8, 0xff85, 0x624e, 0x1, 0x1);
        gbc.writeMem(0x67a2, { 0x88 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa8cc, gbc.sp());
        EXPECT(0x67a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 011D
        gbc.setState(0xe8e5, 0x7a85, 0x2260, 0xa056, 0x69b7, 0x5ed2, 0x1, 0x0);
        gbc.writeMem(0xe8e5, { 0x88 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7a85, gbc.sp());
        EXPECT(0xe8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe8e5));
        // 88 011F
        gbc.setState(0xab40, 0xaa65, 0xe8d0, 0x2dd7, 0x1de7, 0xbc13, 0x1, 0x0);
        gbc.writeMem(0xab40, { 0x88 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaa65, gbc.sp());
        EXPECT(0xab41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xab40));
        // 88 0120
        gbc.setState(0xcf2, 0x1ee, 0xf1a0, 0x521, 0x6863, 0xf60e, 0x0, 0x1);
        gbc.writeMem(0xcf2, { 0x88 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1ee, gbc.sp());
        EXPECT(0xcf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0121
        gbc.setState(0xac3b, 0xdf29, 0x9090, 0x8375, 0x4a5b, 0x80ec, 0x0, 0x0);
        gbc.writeMem(0xac3b, { 0x88 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdf29, gbc.sp());
        EXPECT(0xac3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xac3b));
        // 88 0122
        gbc.setState(0xb03f, 0xaf8d, 0xd50, 0xce7b, 0x9a46, 0xf2ab, 0x0, 0x1);
        gbc.writeMem(0xb03f, { 0x88 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xaf8d, gbc.sp());
        EXPECT(0xb040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb03f));
        // 88 0123
        gbc.setState(0xe5cb, 0x10ad, 0x10e0, 0x8ec8, 0x54dd, 0x40a1, 0x0, 0x1);
        gbc.writeMem(0xe5cb, { 0x88 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x10ad, gbc.sp());
        EXPECT(0xe5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe5cb));
        // 88 0124
        gbc.setState(0x182f, 0x750a, 0x67c0, 0x5bf9, 0x7d7e, 0x4932, 0x1, 0x1);
        gbc.writeMem(0x182f, { 0x88 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x750a, gbc.sp());
        EXPECT(0x1830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0125
        gbc.setState(0xc83d, 0x2a08, 0xd720, 0xf5ee, 0xded6, 0x87ce, 0x1, 0x0);
        gbc.writeMem(0xc83d, { 0x88 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2a08, gbc.sp());
        EXPECT(0xc83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc83d));
        // 88 0126
        gbc.setState(0x98f4, 0x3e3e, 0x3340, 0xcf6f, 0x8ca2, 0xb723, 0x1, 0x0);
        gbc.writeMem(0x98f4, { 0x88 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3e3e, gbc.sp());
        EXPECT(0x98f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x98f4));
        // 88 0127
        gbc.setState(0xd51f, 0x529d, 0xf150, 0x9c0c, 0x4daa, 0x8c24, 0x1, 0x0);
        gbc.writeMem(0xd51f, { 0x88 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x529d, gbc.sp());
        EXPECT(0xd520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd51f));
        // 88 0128
        gbc.setState(0x2db5, 0xd885, 0x7960, 0xc83c, 0x36b8, 0xc56e, 0x1, 0x0);
        gbc.writeMem(0x2db5, { 0x88 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd885, gbc.sp());
        EXPECT(0x2db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0129
        gbc.setState(0xc3fa, 0x9e57, 0x9e80, 0xf994, 0xff32, 0xc8ea, 0x0, 0x0);
        gbc.writeMem(0xc3fa, { 0x88 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9e57, gbc.sp());
        EXPECT(0xc3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc3fa));
        // 88 012A
        gbc.setState(0xac72, 0x3096, 0x17e0, 0x885f, 0xcdf5, 0xfb0b, 0x0, 0x0);
        gbc.writeMem(0xac72, { 0x88 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3096, gbc.sp());
        EXPECT(0xac73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xac72));
        // 88 012B
        gbc.setState(0x3a55, 0xe9fc, 0xa670, 0x1975, 0x68e7, 0x6ac1, 0x1, 0x1);
        gbc.writeMem(0x3a55, { 0x88 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe9fc, gbc.sp());
        EXPECT(0x3a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 012C
        gbc.setState(0xaf4b, 0x873e, 0x89e0, 0xdc2d, 0xf3eb, 0x9121, 0x1, 0x1);
        gbc.writeMem(0xaf4b, { 0x88 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x873e, gbc.sp());
        EXPECT(0xaf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaf4b));
        // 88 012D
        gbc.setState(0xe91b, 0x7812, 0x86d0, 0x4df0, 0xe68, 0x89ed, 0x0, 0x1);
        gbc.writeMem(0xe91b, { 0x88 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7812, gbc.sp());
        EXPECT(0xe91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe91b));
        // 88 012E
        gbc.setState(0x2d53, 0xa859, 0x8f80, 0xfa8d, 0x42a0, 0x7ed0, 0x1, 0x0);
        gbc.writeMem(0x2d53, { 0x88 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa859, gbc.sp());
        EXPECT(0x2d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0130
        gbc.setState(0xe693, 0xd98b, 0xb2f0, 0x1be5, 0xf1bd, 0xa9a8, 0x1, 0x1);
        gbc.writeMem(0xe693, { 0x88 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd98b, gbc.sp());
        EXPECT(0xe694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe693));
        // 88 0131
        gbc.setState(0xd223, 0xe071, 0xb510, 0xdcdc, 0xd0a9, 0xa5d1, 0x1, 0x1);
        gbc.writeMem(0xd223, { 0x88 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe071, gbc.sp());
        EXPECT(0xd224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd223));
        // 88 0132
        gbc.setState(0x4dca, 0xdeae, 0x5d60, 0xedb4, 0xe89f, 0xb88e, 0x1, 0x1);
        gbc.writeMem(0x4dca, { 0x88 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdeae, gbc.sp());
        EXPECT(0x4dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0133
        gbc.setState(0x520c, 0xb6c2, 0x5820, 0x2d73, 0xb6ed, 0x927, 0x1, 0x0);
        gbc.writeMem(0x520c, { 0x88 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb6c2, gbc.sp());
        EXPECT(0x520d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0134
        gbc.setState(0x4cc2, 0x8532, 0x6400, 0xd26c, 0xc929, 0xcdd3, 0x0, 0x0);
        gbc.writeMem(0x4cc2, { 0x88 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8532, gbc.sp());
        EXPECT(0x4cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0135
        gbc.setState(0x84f, 0xcf3, 0xc5d0, 0x4234, 0x643e, 0xbab9, 0x1, 0x1);
        gbc.writeMem(0x84f, { 0x88 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcf3, gbc.sp());
        EXPECT(0x850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0136
        gbc.setState(0x5403, 0x1f68, 0xa500, 0x52df, 0xe74f, 0xe3a9, 0x1, 0x1);
        gbc.writeMem(0x5403, { 0x88 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1f68, gbc.sp());
        EXPECT(0x5404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0137
        gbc.setState(0x9d90, 0xccb6, 0xb2b0, 0x1c8d, 0xbefb, 0x4c3d, 0x0, 0x1);
        gbc.writeMem(0x9d90, { 0x88 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xccb6, gbc.sp());
        EXPECT(0x9d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9d90));
        // 88 0138
        gbc.setState(0xe837, 0x865d, 0x52d0, 0xa8a5, 0x642c, 0x6743, 0x1, 0x0);
        gbc.writeMem(0xe837, { 0x88 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x865d, gbc.sp());
        EXPECT(0xe838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe837));
        // 88 0139
        gbc.setState(0x1a1e, 0x77e9, 0xf5a0, 0x91ac, 0xfbc3, 0x6928, 0x1, 0x1);
        gbc.writeMem(0x1a1e, { 0x88 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x77e9, gbc.sp());
        EXPECT(0x1a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 013A
        gbc.setState(0xb6fd, 0x60bd, 0xf6d0, 0x7da9, 0x471d, 0x839a, 0x1, 0x0);
        gbc.writeMem(0xb6fd, { 0x88 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x60bd, gbc.sp());
        EXPECT(0xb6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb6fd));
        // 88 013B
        gbc.setState(0x2103, 0x2ac2, 0x2bb0, 0xdbbe, 0xfb40, 0xdbe0, 0x0, 0x1);
        gbc.writeMem(0x2103, { 0x88 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2ac2, gbc.sp());
        EXPECT(0x2104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 013C
        gbc.setState(0xa208, 0xcdf, 0x24e0, 0x2f4d, 0x36d0, 0xd803, 0x1, 0x0);
        gbc.writeMem(0xa208, { 0x88 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcdf, gbc.sp());
        EXPECT(0xa209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa208));
        // 88 013D
        gbc.setState(0x839b, 0x11e, 0xcd00, 0x3c03, 0x33cb, 0x72f9, 0x1, 0x0);
        gbc.writeMem(0x839b, { 0x88 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x11e, gbc.sp());
        EXPECT(0x839c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x839b));
        // 88 013F
        gbc.setState(0x7119, 0xfb7b, 0xf8a0, 0xcee3, 0x4087, 0x9c3e, 0x1, 0x0);
        gbc.writeMem(0x7119, { 0x88 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfb7b, gbc.sp());
        EXPECT(0x711a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0140
        gbc.setState(0x9284, 0xdb82, 0x7f10, 0xdd19, 0x4d8, 0x18af, 0x0, 0x0);
        gbc.writeMem(0x9284, { 0x88 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdb82, gbc.sp());
        EXPECT(0x9285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9284));
        // 88 0141
        gbc.setState(0xa98b, 0x4ea5, 0x6a10, 0xd8de, 0x93bd, 0xaef4, 0x0, 0x0);
        gbc.writeMem(0xa98b, { 0x88 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4ea5, gbc.sp());
        EXPECT(0xa98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa98b));
        // 88 0142
        gbc.setState(0x80ac, 0x2ae6, 0xe1d0, 0x4c2b, 0x6938, 0x33c4, 0x1, 0x0);
        gbc.writeMem(0x80ac, { 0x88 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2ae6, gbc.sp());
        EXPECT(0x80ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x80ac));
        // 88 0143
        gbc.setState(0x6750, 0xbdeb, 0x45e0, 0xaa9b, 0x4769, 0x2d8d, 0x1, 0x1);
        gbc.writeMem(0x6750, { 0x88 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbdeb, gbc.sp());
        EXPECT(0x6751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0144
        gbc.setState(0x47cd, 0x35a7, 0x4de0, 0xdb89, 0x95b7, 0x753c, 0x1, 0x1);
        gbc.writeMem(0x47cd, { 0x88 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x35a7, gbc.sp());
        EXPECT(0x47ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0145
        gbc.setState(0x6156, 0xe368, 0x9240, 0x29be, 0x8de7, 0x1cd6, 0x0, 0x0);
        gbc.writeMem(0x6156, { 0x88 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe368, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0146
        gbc.setState(0x6d8e, 0x9740, 0xa580, 0x2987, 0xe1be, 0x28be, 0x0, 0x1);
        gbc.writeMem(0x6d8e, { 0x88 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9740, gbc.sp());
        EXPECT(0x6d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0147
        gbc.setState(0x304, 0x59e0, 0x1c40, 0xb277, 0x47c4, 0x19e3, 0x0, 0x1);
        gbc.writeMem(0x304, { 0x88 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x59e0, gbc.sp());
        EXPECT(0x305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0148
        gbc.setState(0x4474, 0xe9bf, 0xe050, 0x8f73, 0xb9bc, 0xe1ff, 0x1, 0x0);
        gbc.writeMem(0x4474, { 0x88 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe9bf, gbc.sp());
        EXPECT(0x4475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0149
        gbc.setState(0x5a7d, 0xaf7c, 0xb960, 0x85b7, 0x5a22, 0x7175, 0x1, 0x0);
        gbc.writeMem(0x5a7d, { 0x88 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaf7c, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 014B
        gbc.setState(0x8d5e, 0x6ef5, 0xe6d0, 0xdc5b, 0xe50b, 0x447f, 0x1, 0x0);
        gbc.writeMem(0x8d5e, { 0x88 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6ef5, gbc.sp());
        EXPECT(0x8d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8d5e));
        // 88 014C
        gbc.setState(0xab29, 0xa4a, 0x8a40, 0x3fb2, 0xdb46, 0x35aa, 0x1, 0x0);
        gbc.writeMem(0xab29, { 0x88 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa4a, gbc.sp());
        EXPECT(0xab2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xab29));
        // 88 014D
        gbc.setState(0x8b97, 0xdd7c, 0xfaa0, 0x7c7a, 0xb131, 0x2584, 0x1, 0x1);
        gbc.writeMem(0x8b97, { 0x88 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdd7c, gbc.sp());
        EXPECT(0x8b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8b97));
        // 88 014E
        gbc.setState(0xa073, 0xb298, 0x8f70, 0x637c, 0x917f, 0xdf86, 0x1, 0x1);
        gbc.writeMem(0xa073, { 0x88 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb298, gbc.sp());
        EXPECT(0xa074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa073));
        // 88 014F
        gbc.setState(0x2c56, 0xa233, 0x3aa0, 0x48d5, 0xe8a4, 0x2625, 0x0, 0x1);
        gbc.writeMem(0x2c56, { 0x88 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa233, gbc.sp());
        EXPECT(0x2c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0150
        gbc.setState(0xea1a, 0x5e1f, 0x6a60, 0x7d02, 0x67ca, 0x5d36, 0x0, 0x1);
        gbc.writeMem(0xea1a, { 0x88 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5e1f, gbc.sp());
        EXPECT(0xea1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xea1a));
        // 88 0151
        gbc.setState(0xba7e, 0x107b, 0xeb40, 0x4d58, 0xd115, 0x17b9, 0x0, 0x0);
        gbc.writeMem(0xba7e, { 0x88 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x107b, gbc.sp());
        EXPECT(0xba7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xba7e));
        // 88 0152
        gbc.setState(0xba50, 0x1bd7, 0x92e0, 0xe448, 0x3f23, 0xf45d, 0x1, 0x1);
        gbc.writeMem(0xba50, { 0x88 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1bd7, gbc.sp());
        EXPECT(0xba51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xba50));
        // 88 0153
        gbc.setState(0x83f9, 0xa26f, 0xfa20, 0x16f5, 0x1521, 0x70fe, 0x0, 0x0);
        gbc.writeMem(0x83f9, { 0x88 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa26f, gbc.sp());
        EXPECT(0x83fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x83f9));
        // 88 0154
        gbc.setState(0x37d4, 0xd958, 0x22e0, 0x1d3f, 0x4605, 0xeefe, 0x0, 0x0);
        gbc.writeMem(0x37d4, { 0x88 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd958, gbc.sp());
        EXPECT(0x37d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0156
        gbc.setState(0xd8ef, 0xfda5, 0x6c40, 0x9361, 0x5620, 0x5f03, 0x0, 0x0);
        gbc.writeMem(0xd8ef, { 0x88 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfda5, gbc.sp());
        EXPECT(0xd8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd8ef));
        // 88 0158
        gbc.setState(0xb906, 0x1fad, 0xfe50, 0x8e20, 0x16e9, 0xfb17, 0x0, 0x0);
        gbc.writeMem(0xb906, { 0x88 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1fad, gbc.sp());
        EXPECT(0xb907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb906));
        // 88 0159
        gbc.setState(0x12b1, 0xed8e, 0x1bb0, 0x2ab2, 0xe3df, 0x57c1, 0x0, 0x0);
        gbc.writeMem(0x12b1, { 0x88 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xed8e, gbc.sp());
        EXPECT(0x12b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 015A
        gbc.setState(0x595e, 0x18c6, 0x79e0, 0x507f, 0xb7e8, 0x6b1b, 0x0, 0x1);
        gbc.writeMem(0x595e, { 0x88 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x18c6, gbc.sp());
        EXPECT(0x595f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 015C
        gbc.setState(0xb4ea, 0xa7f7, 0x5280, 0xd9e1, 0x281a, 0xe449, 0x0, 0x0);
        gbc.writeMem(0xb4ea, { 0x88 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa7f7, gbc.sp());
        EXPECT(0xb4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb4ea));
        // 88 015D
        gbc.setState(0x1631, 0x1509, 0xbd80, 0x286a, 0x9aa1, 0xad06, 0x0, 0x1);
        gbc.writeMem(0x1631, { 0x88 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1509, gbc.sp());
        EXPECT(0x1632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 015E
        gbc.setState(0xb709, 0xa5b0, 0x4590, 0x1727, 0xa1f5, 0xfefe, 0x0, 0x0);
        gbc.writeMem(0xb709, { 0x88 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa5b0, gbc.sp());
        EXPECT(0xb70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb709));
        // 88 015F
        gbc.setState(0x15e7, 0x6b00, 0xcb30, 0x578f, 0x3d9, 0x774e, 0x1, 0x0);
        gbc.writeMem(0x15e7, { 0x88 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6b00, gbc.sp());
        EXPECT(0x15e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0160
        gbc.setState(0x38a5, 0x524f, 0x3330, 0x6baa, 0xa46f, 0x4b8a, 0x0, 0x0);
        gbc.writeMem(0x38a5, { 0x88 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x524f, gbc.sp());
        EXPECT(0x38a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0161
        gbc.setState(0x39c7, 0xd114, 0xc5f0, 0x250b, 0x732b, 0xdd0c, 0x0, 0x1);
        gbc.writeMem(0x39c7, { 0x88 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd114, gbc.sp());
        EXPECT(0x39c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0162
        gbc.setState(0x3a20, 0x4e92, 0xdd90, 0x76da, 0x4811, 0xc455, 0x1, 0x0);
        gbc.writeMem(0x3a20, { 0x88 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4e92, gbc.sp());
        EXPECT(0x3a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0163
        gbc.setState(0x37d0, 0x1cc4, 0xe5f0, 0xd84f, 0x97f1, 0x295b, 0x0, 0x0);
        gbc.writeMem(0x37d0, { 0x88 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1cc4, gbc.sp());
        EXPECT(0x37d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0164
        gbc.setState(0x8cf7, 0xb89b, 0x7160, 0x2d8b, 0xed60, 0x3a1c, 0x0, 0x0);
        gbc.writeMem(0x8cf7, { 0x88 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb89b, gbc.sp());
        EXPECT(0x8cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8cf7));
        // 88 0165
        gbc.setState(0x7bdd, 0x9ed9, 0x8640, 0x6fde, 0x5c1e, 0xde36, 0x1, 0x1);
        gbc.writeMem(0x7bdd, { 0x88 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9ed9, gbc.sp());
        EXPECT(0x7bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0166
        gbc.setState(0xccd3, 0xbf4f, 0x2220, 0x843d, 0x47fc, 0xd8af, 0x0, 0x0);
        gbc.writeMem(0xccd3, { 0x88 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbf4f, gbc.sp());
        EXPECT(0xccd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xccd3));
        // 88 0167
        gbc.setState(0x3dd8, 0x3a85, 0xf730, 0x7b09, 0xf8d2, 0xe664, 0x0, 0x0);
        gbc.writeMem(0x3dd8, { 0x88 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3a85, gbc.sp());
        EXPECT(0x3dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0168
        gbc.setState(0x656f, 0x17f1, 0xac40, 0xfac5, 0x9ae4, 0x4bd1, 0x1, 0x1);
        gbc.writeMem(0x656f, { 0x88 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x17f1, gbc.sp());
        EXPECT(0x6570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0169
        gbc.setState(0xeb1b, 0x2380, 0xc180, 0x8b90, 0x72b1, 0x5a5e, 0x1, 0x0);
        gbc.writeMem(0xeb1b, { 0x88 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2380, gbc.sp());
        EXPECT(0xeb1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xeb1b));
        // 88 016A
        gbc.setState(0xa393, 0xf569, 0x22a0, 0x2db9, 0xb8bb, 0x11a9, 0x0, 0x0);
        gbc.writeMem(0xa393, { 0x88 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf569, gbc.sp());
        EXPECT(0xa394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa393));
        // 88 016B
        gbc.setState(0xa5ec, 0x53ad, 0x4bb0, 0x5065, 0x651b, 0xf9d6, 0x0, 0x0);
        gbc.writeMem(0xa5ec, { 0x88 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x53ad, gbc.sp());
        EXPECT(0xa5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa5ec));
        // 88 016C
        gbc.setState(0x9cc1, 0xf460, 0x55c0, 0xd092, 0x3057, 0xfa7e, 0x1, 0x1);
        gbc.writeMem(0x9cc1, { 0x88 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf460, gbc.sp());
        EXPECT(0x9cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9cc1));
        // 88 016D
        gbc.setState(0xc538, 0x1afc, 0x3400, 0x6b6b, 0x8a94, 0x378e, 0x1, 0x0);
        gbc.writeMem(0xc538, { 0x88 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1afc, gbc.sp());
        EXPECT(0xc539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc538));
        // 88 016E
        gbc.setState(0x39e6, 0x4f92, 0xe730, 0xdbf0, 0x6fea, 0xa22a, 0x1, 0x1);
        gbc.writeMem(0x39e6, { 0x88 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4f92, gbc.sp());
        EXPECT(0x39e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0170
        gbc.setState(0x20a8, 0xfde4, 0xf2d0, 0xb3f0, 0x5b4f, 0x4285, 0x1, 0x0);
        gbc.writeMem(0x20a8, { 0x88 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfde4, gbc.sp());
        EXPECT(0x20a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0171
        gbc.setState(0xaccf, 0xcb1d, 0x90e0, 0xb603, 0xb8df, 0x4b8c, 0x1, 0x0);
        gbc.writeMem(0xaccf, { 0x88 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcb1d, gbc.sp());
        EXPECT(0xacd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaccf));
        // 88 0172
        gbc.setState(0x2ee8, 0x162a, 0xf650, 0x3b0e, 0xfdc2, 0x4baa, 0x1, 0x0);
        gbc.writeMem(0x2ee8, { 0x88 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x162a, gbc.sp());
        EXPECT(0x2ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0173
        gbc.setState(0x3200, 0x41a5, 0x9ca0, 0x7244, 0x560f, 0x689f, 0x1, 0x0);
        gbc.writeMem(0x3200, { 0x88 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x41a5, gbc.sp());
        EXPECT(0x3201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0174
        gbc.setState(0x7337, 0xa2aa, 0x76c0, 0xabfe, 0x4d03, 0xd2e8, 0x1, 0x0);
        gbc.writeMem(0x7337, { 0x88 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa2aa, gbc.sp());
        EXPECT(0x7338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0175
        gbc.setState(0x2f54, 0xc04e, 0xee0, 0x77c5, 0x3f77, 0x890f, 0x1, 0x0);
        gbc.writeMem(0x2f54, { 0x88 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc04e, gbc.sp());
        EXPECT(0x2f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0178
        gbc.setState(0x98e, 0x1dfb, 0x40f0, 0x8706, 0xe5d9, 0x52da, 0x1, 0x0);
        gbc.writeMem(0x98e, { 0x88 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1dfb, gbc.sp());
        EXPECT(0x98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0179
        gbc.setState(0xaf6c, 0x730c, 0x8e30, 0x8e19, 0x35c8, 0x4ce8, 0x1, 0x1);
        gbc.writeMem(0xaf6c, { 0x88 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x730c, gbc.sp());
        EXPECT(0xaf6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaf6c));
        // 88 017A
        gbc.setState(0xe764, 0xc068, 0x4520, 0xc1c3, 0x7cb1, 0x25fd, 0x0, 0x1);
        gbc.writeMem(0xe764, { 0x88 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc068, gbc.sp());
        EXPECT(0xe765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe764));
        // 88 017B
        gbc.setState(0x4fe, 0x2e6f, 0x20d0, 0xe71, 0x95e8, 0xb676, 0x0, 0x1);
        gbc.writeMem(0x4fe, { 0x88 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2e6f, gbc.sp());
        EXPECT(0x4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 017C
        gbc.setState(0x629f, 0x437e, 0xff00, 0xc040, 0x2986, 0x6e42, 0x0, 0x0);
        gbc.writeMem(0x629f, { 0x88 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x437e, gbc.sp());
        EXPECT(0x62a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 017D
        gbc.setState(0xbc9a, 0x636d, 0x33b0, 0x8639, 0x9c13, 0x5086, 0x1, 0x1);
        gbc.writeMem(0xbc9a, { 0x88 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x636d, gbc.sp());
        EXPECT(0xbc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbc9a));
        // 88 017E
        gbc.setState(0xde51, 0x253, 0x7e50, 0x86a2, 0xaced, 0x661e, 0x1, 0x1);
        gbc.writeMem(0xde51, { 0x88 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x253, gbc.sp());
        EXPECT(0xde52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xde51));
        // 88 017F
        gbc.setState(0xd19d, 0xfa7d, 0x300, 0x8336, 0x2854, 0xa9f8, 0x0, 0x0);
        gbc.writeMem(0xd19d, { 0x88 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfa7d, gbc.sp());
        EXPECT(0xd19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd19d));
        // 88 0180
        gbc.setState(0xc0d5, 0xf1b7, 0x5d40, 0xaf2, 0xd488, 0x63f9, 0x1, 0x1);
        gbc.writeMem(0xc0d5, { 0x88 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf1b7, gbc.sp());
        EXPECT(0xc0d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc0d5));
        // 88 0181
        gbc.setState(0x582d, 0x55e4, 0x5520, 0xaf19, 0x3b68, 0x2006, 0x0, 0x0);
        gbc.writeMem(0x582d, { 0x88 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x55e4, gbc.sp());
        EXPECT(0x582e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0182
        gbc.setState(0xdc28, 0xdc78, 0x260, 0x8e93, 0x93cc, 0xa6a9, 0x0, 0x1);
        gbc.writeMem(0xdc28, { 0x88 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdc78, gbc.sp());
        EXPECT(0xdc29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdc28));
        // 88 0183
        gbc.setState(0x66ae, 0x4eb, 0x42e0, 0xb033, 0x5659, 0x8d5e, 0x1, 0x1);
        gbc.writeMem(0x66ae, { 0x88 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4eb, gbc.sp());
        EXPECT(0x66af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0184
        gbc.setState(0x4bc4, 0x422c, 0x5150, 0x708, 0x80c4, 0xfa0f, 0x0, 0x0);
        gbc.writeMem(0x4bc4, { 0x88 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x422c, gbc.sp());
        EXPECT(0x4bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0185
        gbc.setState(0x2d7, 0x14ee, 0x9080, 0xd190, 0x22dd, 0x3a3e, 0x1, 0x0);
        gbc.writeMem(0x2d7, { 0x88 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x14ee, gbc.sp());
        EXPECT(0x2d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0186
        gbc.setState(0x7c2e, 0x7ea1, 0xf160, 0x581f, 0x52e1, 0xf0d1, 0x1, 0x1);
        gbc.writeMem(0x7c2e, { 0x88 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7ea1, gbc.sp());
        EXPECT(0x7c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0189
        gbc.setState(0x9b73, 0x4a83, 0x20f0, 0x3592, 0x9ad0, 0x10d4, 0x1, 0x1);
        gbc.writeMem(0x9b73, { 0x88 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0x9b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9b73));
        // 88 018A
        gbc.setState(0xcb75, 0xf3b4, 0xa5c0, 0x3c37, 0x9631, 0x3c6a, 0x0, 0x1);
        gbc.writeMem(0xcb75, { 0x88 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf3b4, gbc.sp());
        EXPECT(0xcb76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcb75));
        // 88 018B
        gbc.setState(0x29cc, 0xc62, 0x5680, 0xc798, 0x6615, 0xce11, 0x0, 0x1);
        gbc.writeMem(0x29cc, { 0x88 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc62, gbc.sp());
        EXPECT(0x29cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 018C
        gbc.setState(0x351, 0xc1ab, 0x8290, 0x68ac, 0x869d, 0x2004, 0x0, 0x0);
        gbc.writeMem(0x351, { 0x88 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc1ab, gbc.sp());
        EXPECT(0x352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 018D
        gbc.setState(0x450, 0xbfab, 0xc720, 0xbb00, 0xa6e4, 0x8e30, 0x1, 0x1);
        gbc.writeMem(0x450, { 0x88 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbfab, gbc.sp());
        EXPECT(0x451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 018E
        gbc.setState(0x7c60, 0xdab7, 0xaff0, 0x8e49, 0x47a0, 0xae4b, 0x0, 0x0);
        gbc.writeMem(0x7c60, { 0x88 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xdab7, gbc.sp());
        EXPECT(0x7c61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 018F
        gbc.setState(0xa150, 0x79ef, 0x4900, 0x2359, 0x494, 0x163b, 0x1, 0x0);
        gbc.writeMem(0xa150, { 0x88 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x79ef, gbc.sp());
        EXPECT(0xa151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa150));
        // 88 0190
        gbc.setState(0xd2e0, 0x8474, 0x85a0, 0x8c50, 0x7123, 0xb2aa, 0x0, 0x0);
        gbc.writeMem(0xd2e0, { 0x88 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8474, gbc.sp());
        EXPECT(0xd2e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd2e0));
        // 88 0191
        gbc.setState(0xcebd, 0x9433, 0xdd60, 0x5255, 0x6aa5, 0x32df, 0x1, 0x0);
        gbc.writeMem(0xcebd, { 0x88 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9433, gbc.sp());
        EXPECT(0xcebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcebd));
        // 88 0192
        gbc.setState(0xdbe4, 0xc803, 0x60a0, 0x39ac, 0x5ac8, 0xbaa9, 0x1, 0x0);
        gbc.writeMem(0xdbe4, { 0x88 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc803, gbc.sp());
        EXPECT(0xdbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdbe4));
        // 88 0193
        gbc.setState(0x8318, 0xa866, 0x4a00, 0xfc97, 0xd284, 0xcd83, 0x1, 0x1);
        gbc.writeMem(0x8318, { 0x88 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa866, gbc.sp());
        EXPECT(0x8319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8318));
        // 88 0194
        gbc.setState(0x1a21, 0x91c5, 0xbc50, 0x5ec6, 0x67bb, 0xc0cd, 0x1, 0x0);
        gbc.writeMem(0x1a21, { 0x88 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x91c5, gbc.sp());
        EXPECT(0x1a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0195
        gbc.setState(0xd850, 0x7984, 0xf950, 0xd311, 0x8ac5, 0x55cc, 0x0, 0x1);
        gbc.writeMem(0xd850, { 0x88 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7984, gbc.sp());
        EXPECT(0xd851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd850));
        // 88 0196
        gbc.setState(0x64cf, 0x97ae, 0x38f0, 0x341a, 0xf5f0, 0xc812, 0x1, 0x0);
        gbc.writeMem(0x64cf, { 0x88 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x97ae, gbc.sp());
        EXPECT(0x64d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0197
        gbc.setState(0x9978, 0x2298, 0xf390, 0xd62e, 0xef21, 0x86d6, 0x0, 0x1);
        gbc.writeMem(0x9978, { 0x88 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2298, gbc.sp());
        EXPECT(0x9979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9978));
        // 88 0198
        gbc.setState(0x5517, 0xbaf, 0x7580, 0x8f2e, 0x1c27, 0xffd2, 0x1, 0x1);
        gbc.writeMem(0x5517, { 0x88 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbaf, gbc.sp());
        EXPECT(0x5518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0199
        gbc.setState(0xb12d, 0xb55a, 0xf0a0, 0x9053, 0x54a2, 0x5d43, 0x1, 0x0);
        gbc.writeMem(0xb12d, { 0x88 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb55a, gbc.sp());
        EXPECT(0xb12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb12d));
        // 88 019A
        gbc.setState(0xd201, 0xfbd0, 0x3b80, 0x3d03, 0xec5d, 0xfbab, 0x1, 0x0);
        gbc.writeMem(0xd201, { 0x88 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfbd0, gbc.sp());
        EXPECT(0xd202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd201));
        // 88 019B
        gbc.setState(0xd643, 0x4ad5, 0x2360, 0xd43c, 0xfe69, 0x54b4, 0x1, 0x0);
        gbc.writeMem(0xd643, { 0x88 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4ad5, gbc.sp());
        EXPECT(0xd644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd643));
        // 88 019C
        gbc.setState(0x8bb1, 0x29bb, 0x47b0, 0xb459, 0x58d1, 0xd73, 0x1, 0x1);
        gbc.writeMem(0x8bb1, { 0x88 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x29bb, gbc.sp());
        EXPECT(0x8bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8bb1));
        // 88 019D
        gbc.setState(0x409a, 0x1d69, 0x45c0, 0xd5a8, 0xd435, 0x521f, 0x0, 0x1);
        gbc.writeMem(0x409a, { 0x88 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1d69, gbc.sp());
        EXPECT(0x409b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 019E
        gbc.setState(0x85b0, 0xa854, 0x8f30, 0xbee4, 0xe05c, 0x8ddc, 0x1, 0x1);
        gbc.writeMem(0x85b0, { 0x88 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa854, gbc.sp());
        EXPECT(0x85b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x85b0));
        // 88 019F
        gbc.setState(0x39b0, 0x821e, 0xf2b0, 0x9487, 0x2721, 0xd6dd, 0x0, 0x1);
        gbc.writeMem(0x39b0, { 0x88 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x821e, gbc.sp());
        EXPECT(0x39b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01A0
        gbc.setState(0x6921, 0x3658, 0xe970, 0x55d8, 0xe55d, 0x3d50, 0x1, 0x0);
        gbc.writeMem(0x6921, { 0x88 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3658, gbc.sp());
        EXPECT(0x6922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01A1
        gbc.setState(0xb12a, 0x486, 0x78c0, 0x740b, 0x66f1, 0x2569, 0x0, 0x1);
        gbc.writeMem(0xb12a, { 0x88 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x486, gbc.sp());
        EXPECT(0xb12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb12a));
        // 88 01A2
        gbc.setState(0x118f, 0x281e, 0x98a0, 0xb855, 0xba07, 0x9615, 0x1, 0x0);
        gbc.writeMem(0x118f, { 0x88 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x281e, gbc.sp());
        EXPECT(0x1190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01A3
        gbc.setState(0xecbd, 0xc387, 0x2e0, 0x3393, 0xfd9b, 0x3ad1, 0x0, 0x0);
        gbc.writeMem(0xecbd, { 0x88 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc387, gbc.sp());
        EXPECT(0xecbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xecbd));
        // 88 01A4
        gbc.setState(0x68d5, 0x92e5, 0xa280, 0x139e, 0x6cb3, 0x572d, 0x1, 0x0);
        gbc.writeMem(0x68d5, { 0x88 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x92e5, gbc.sp());
        EXPECT(0x68d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01A5
        gbc.setState(0x2d10, 0xea31, 0xc2e0, 0xf741, 0x3b99, 0x58d, 0x0, 0x0);
        gbc.writeMem(0x2d10, { 0x88 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xea31, gbc.sp());
        EXPECT(0x2d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01A6
        gbc.setState(0x1731, 0x25f0, 0xa340, 0xed99, 0xec2, 0x5836, 0x0, 0x1);
        gbc.writeMem(0x1731, { 0x88 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x25f0, gbc.sp());
        EXPECT(0x1732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01A7
        gbc.setState(0x7dd0, 0xdb1f, 0x8fb0, 0x7e90, 0xab16, 0xce, 0x1, 0x1);
        gbc.writeMem(0x7dd0, { 0x88 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdb1f, gbc.sp());
        EXPECT(0x7dd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01A8
        gbc.setState(0x4ac3, 0x4690, 0x9fd0, 0x2cb, 0x8a4e, 0x2029, 0x0, 0x0);
        gbc.writeMem(0x4ac3, { 0x88 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4690, gbc.sp());
        EXPECT(0x4ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01A9
        gbc.setState(0x290e, 0x112e, 0xaab0, 0x4301, 0x1813, 0x9a03, 0x1, 0x1);
        gbc.writeMem(0x290e, { 0x88 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x112e, gbc.sp());
        EXPECT(0x290f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01AA
        gbc.setState(0xa1be, 0x2ec4, 0xea60, 0x895f, 0x59d7, 0xeaf6, 0x1, 0x0);
        gbc.writeMem(0xa1be, { 0x88 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2ec4, gbc.sp());
        EXPECT(0xa1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa1be));
        // 88 01AB
        gbc.setState(0x11ff, 0x59da, 0x2c40, 0xef60, 0x72d5, 0x62ba, 0x1, 0x0);
        gbc.writeMem(0x11ff, { 0x88 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x59da, gbc.sp());
        EXPECT(0x1200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01AC
        gbc.setState(0x187b, 0xa341, 0x2ef0, 0x5ef5, 0xc3a, 0xe1d4, 0x1, 0x1);
        gbc.writeMem(0x187b, { 0x88 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa341, gbc.sp());
        EXPECT(0x187c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01AD
        gbc.setState(0x411, 0x686, 0x4fa0, 0xa7fd, 0xc10a, 0xa5a2, 0x1, 0x0);
        gbc.writeMem(0x411, { 0x88 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x686, gbc.sp());
        EXPECT(0x412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01AE
        gbc.setState(0xa44d, 0xff05, 0xafa0, 0xe5e9, 0x6159, 0xf621, 0x0, 0x0);
        gbc.writeMem(0xa44d, { 0x88 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xff05, gbc.sp());
        EXPECT(0xa44e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa44d));
        // 88 01AF
        gbc.setState(0xcc46, 0x4c2c, 0x370, 0xec8e, 0x3ea8, 0x48c1, 0x0, 0x0);
        gbc.writeMem(0xcc46, { 0x88 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4c2c, gbc.sp());
        EXPECT(0xcc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcc46));
        // 88 01B0
        gbc.setState(0x712f, 0x327b, 0x6b40, 0x99b8, 0xde23, 0xdedb, 0x0, 0x1);
        gbc.writeMem(0x712f, { 0x88 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x327b, gbc.sp());
        EXPECT(0x7130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01B1
        gbc.setState(0x465, 0x722c, 0x8020, 0x88bd, 0x51df, 0x1519, 0x0, 0x0);
        gbc.writeMem(0x465, { 0x88 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x722c, gbc.sp());
        EXPECT(0x466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01B2
        gbc.setState(0x53ce, 0x4228, 0x3dd0, 0x4ad8, 0x732a, 0x4f1b, 0x0, 0x1);
        gbc.writeMem(0x53ce, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4228, gbc.sp());
        EXPECT(0x53cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01B3
        gbc.setState(0x2e7f, 0xbc7f, 0x53c0, 0x68c, 0x67d9, 0x9366, 0x1, 0x0);
        gbc.writeMem(0x2e7f, { 0x88 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xbc7f, gbc.sp());
        EXPECT(0x2e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01B4
        gbc.setState(0xea31, 0x514c, 0x1840, 0x1dbb, 0xc84c, 0x9e7c, 0x1, 0x0);
        gbc.writeMem(0xea31, { 0x88 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x514c, gbc.sp());
        EXPECT(0xea32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xea31));
        // 88 01B5
        gbc.setState(0x117c, 0x6a68, 0x8690, 0x1753, 0x1145, 0xa52f, 0x0, 0x1);
        gbc.writeMem(0x117c, { 0x88 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6a68, gbc.sp());
        EXPECT(0x117d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01B6
        gbc.setState(0x38dc, 0x29d1, 0x5020, 0x8827, 0x7318, 0x7408, 0x0, 0x0);
        gbc.writeMem(0x38dc, { 0x88 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x29d1, gbc.sp());
        EXPECT(0x38dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01B7
        gbc.setState(0x1ad7, 0x2ef0, 0x1630, 0x5e50, 0x61f3, 0x3c2f, 0x1, 0x0);
        gbc.writeMem(0x1ad7, { 0x88 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2ef0, gbc.sp());
        EXPECT(0x1ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01B8
        gbc.setState(0x4bcd, 0xca1c, 0x8590, 0x2686, 0x8a90, 0x5376, 0x1, 0x0);
        gbc.writeMem(0x4bcd, { 0x88 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xca1c, gbc.sp());
        EXPECT(0x4bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01B9
        gbc.setState(0x92eb, 0x49f2, 0x94f0, 0x25cc, 0x9460, 0xcc17, 0x1, 0x1);
        gbc.writeMem(0x92eb, { 0x88 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x49f2, gbc.sp());
        EXPECT(0x92ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x92eb));
        // 88 01BA
        gbc.setState(0x1818, 0xebdb, 0x5480, 0x4f25, 0x6850, 0xdb81, 0x1, 0x0);
        gbc.writeMem(0x1818, { 0x88 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xebdb, gbc.sp());
        EXPECT(0x1819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01BB
        gbc.setState(0x5ace, 0xbe9b, 0x6250, 0x2f26, 0x9ae3, 0x1145, 0x1, 0x0);
        gbc.writeMem(0x5ace, { 0x88 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbe9b, gbc.sp());
        EXPECT(0x5acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01BC
        gbc.setState(0x845a, 0xecf4, 0xd2f0, 0x200f, 0x89fe, 0xadf9, 0x1, 0x1);
        gbc.writeMem(0x845a, { 0x88 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xecf4, gbc.sp());
        EXPECT(0x845b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x845a));
        // 88 01BD
        gbc.setState(0x1764, 0xb475, 0x15b0, 0xdadd, 0xbd59, 0xf4c8, 0x0, 0x1);
        gbc.writeMem(0x1764, { 0x88 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb475, gbc.sp());
        EXPECT(0x1765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01BE
        gbc.setState(0xf3f, 0xc3dc, 0x1dd0, 0xa394, 0x2d1b, 0xa551, 0x1, 0x1);
        gbc.writeMem(0xf3f, { 0x88 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc3dc, gbc.sp());
        EXPECT(0xf40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01BF
        gbc.setState(0xebfb, 0x16b2, 0x6c30, 0x5824, 0x624a, 0xe7da, 0x1, 0x0);
        gbc.writeMem(0xebfb, { 0x88 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x16b2, gbc.sp());
        EXPECT(0xebfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xebfb));
        // 88 01C0
        gbc.setState(0x8359, 0x3625, 0x3010, 0x21e3, 0x5103, 0x8f51, 0x0, 0x1);
        gbc.writeMem(0x8359, { 0x88 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3625, gbc.sp());
        EXPECT(0x835a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8359));
        // 88 01C1
        gbc.setState(0x9159, 0x8c9, 0x8af0, 0xcb9b, 0x3673, 0xfd5b, 0x0, 0x1);
        gbc.writeMem(0x9159, { 0x88 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8c9, gbc.sp());
        EXPECT(0x915a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9159));
        // 88 01C2
        gbc.setState(0x3248, 0x32b3, 0x4200, 0x68c4, 0x18db, 0xd97d, 0x1, 0x1);
        gbc.writeMem(0x3248, { 0x88 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x32b3, gbc.sp());
        EXPECT(0x3249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01C3
        gbc.setState(0x194d, 0x3df3, 0x950, 0x8880, 0xa374, 0x6abf, 0x0, 0x1);
        gbc.writeMem(0x194d, { 0x88 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3df3, gbc.sp());
        EXPECT(0x194e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01C4
        gbc.setState(0x7877, 0x9e15, 0x7640, 0x5c8a, 0x9884, 0x6f20, 0x0, 0x0);
        gbc.writeMem(0x7877, { 0x88 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9e15, gbc.sp());
        EXPECT(0x7878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01C5
        gbc.setState(0xcb6f, 0x6d60, 0xfef0, 0xccc3, 0x8dbf, 0xff32, 0x0, 0x0);
        gbc.writeMem(0xcb6f, { 0x88 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6d60, gbc.sp());
        EXPECT(0xcb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcb6f));
        // 88 01C6
        gbc.setState(0xd7bb, 0xddbe, 0x3650, 0xe04f, 0x16e9, 0x9543, 0x0, 0x1);
        gbc.writeMem(0xd7bb, { 0x88 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xddbe, gbc.sp());
        EXPECT(0xd7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd7bb));
        // 88 01C7
        gbc.setState(0xdcb3, 0xff24, 0xead0, 0x8679, 0x7c4f, 0x8df3, 0x1, 0x1);
        gbc.writeMem(0xdcb3, { 0x88 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xff24, gbc.sp());
        EXPECT(0xdcb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdcb3));
        // 88 01C8
        gbc.setState(0xe3a6, 0x860d, 0x8830, 0xd05e, 0xe6b6, 0x2d9c, 0x1, 0x1);
        gbc.writeMem(0xe3a6, { 0x88 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x860d, gbc.sp());
        EXPECT(0xe3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe3a6));
        // 88 01C9
        gbc.setState(0xaf7, 0x6803, 0x13c0, 0xf707, 0x5f11, 0xba72, 0x1, 0x1);
        gbc.writeMem(0xaf7, { 0x88 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6803, gbc.sp());
        EXPECT(0xaf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01CA
        gbc.setState(0xcebe, 0xbdf9, 0x6480, 0x11b, 0x5ffb, 0x6292, 0x0, 0x1);
        gbc.writeMem(0xcebe, { 0x88 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbdf9, gbc.sp());
        EXPECT(0xcebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcebe));
        // 88 01CB
        gbc.setState(0x8b02, 0xfb25, 0x9090, 0xf9, 0x2e33, 0xcd57, 0x1, 0x0);
        gbc.writeMem(0x8b02, { 0x88 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfb25, gbc.sp());
        EXPECT(0x8b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8b02));
        // 88 01CC
        gbc.setState(0x1e95, 0x7b9, 0x4840, 0x3c71, 0x8d91, 0xb46e, 0x1, 0x1);
        gbc.writeMem(0x1e95, { 0x88 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7b9, gbc.sp());
        EXPECT(0x1e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01CD
        gbc.setState(0x9a4, 0xf169, 0x4690, 0x66c, 0x8436, 0x7742, 0x0, 0x0);
        gbc.writeMem(0x9a4, { 0x88 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xf169, gbc.sp());
        EXPECT(0x9a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01CE
        gbc.setState(0x98bd, 0x586a, 0xbb90, 0x836c, 0x7775, 0xd4f6, 0x1, 0x0);
        gbc.writeMem(0x98bd, { 0x88 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x586a, gbc.sp());
        EXPECT(0x98be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x98bd));
        // 88 01CF
        gbc.setState(0xddb7, 0xf649, 0x3d80, 0xe9bf, 0x83f4, 0x5f40, 0x1, 0x1);
        gbc.writeMem(0xddb7, { 0x88 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf649, gbc.sp());
        EXPECT(0xddb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xddb7));
        // 88 01D0
        gbc.setState(0x157a, 0x198a, 0xd3b0, 0xe161, 0x83f1, 0xc16e, 0x1, 0x0);
        gbc.writeMem(0x157a, { 0x88 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x198a, gbc.sp());
        EXPECT(0x157b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01D1
        gbc.setState(0x684f, 0x8225, 0x4fd0, 0x3c26, 0x682e, 0x57bb, 0x0, 0x1);
        gbc.writeMem(0x684f, { 0x88 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8225, gbc.sp());
        EXPECT(0x6850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01D2
        gbc.setState(0x6f71, 0xa913, 0x3f70, 0xf823, 0xa152, 0xc26e, 0x1, 0x0);
        gbc.writeMem(0x6f71, { 0x88 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa913, gbc.sp());
        EXPECT(0x6f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01D3
        gbc.setState(0xdc5e, 0xdc50, 0x80b0, 0x199b, 0xf907, 0x68c1, 0x1, 0x1);
        gbc.writeMem(0xdc5e, { 0x88 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdc50, gbc.sp());
        EXPECT(0xdc5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdc5e));
        // 88 01D4
        gbc.setState(0x9d85, 0x67df, 0x6310, 0x51c9, 0x5ec1, 0xe319, 0x1, 0x1);
        gbc.writeMem(0x9d85, { 0x88 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x67df, gbc.sp());
        EXPECT(0x9d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9d85));
        // 88 01D6
        gbc.setState(0x8027, 0x76f, 0xc550, 0xab27, 0xebfa, 0x50bd, 0x0, 0x0);
        gbc.writeMem(0x8027, { 0x88 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x76f, gbc.sp());
        EXPECT(0x8028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8027));
        // 88 01D7
        gbc.setState(0x7084, 0xeb4e, 0xde70, 0x6ae2, 0x6682, 0x1871, 0x0, 0x0);
        gbc.writeMem(0x7084, { 0x88 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeb4e, gbc.sp());
        EXPECT(0x7085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01D8
        gbc.setState(0x9909, 0xf5a6, 0x2cc0, 0x140, 0x8139, 0xfda3, 0x0, 0x0);
        gbc.writeMem(0x9909, { 0x88 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf5a6, gbc.sp());
        EXPECT(0x990a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9909));
        // 88 01D9
        gbc.setState(0xca70, 0xae57, 0x4080, 0xe7e1, 0x2105, 0x260c, 0x0, 0x0);
        gbc.writeMem(0xca70, { 0x88 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xae57, gbc.sp());
        EXPECT(0xca71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xca70));
        // 88 01DA
        gbc.setState(0xd8e2, 0xefe0, 0xe250, 0x885c, 0x8568, 0x5060, 0x0, 0x1);
        gbc.writeMem(0xd8e2, { 0x88 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xefe0, gbc.sp());
        EXPECT(0xd8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd8e2));
        // 88 01DB
        gbc.setState(0xd0ae, 0x751b, 0x8e80, 0x519b, 0xc0a6, 0x234d, 0x1, 0x1);
        gbc.writeMem(0xd0ae, { 0x88 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x751b, gbc.sp());
        EXPECT(0xd0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd0ae));
        // 88 01DC
        gbc.setState(0xe006, 0xf3fe, 0xcf40, 0x45bd, 0xbb9, 0xa205, 0x1, 0x0);
        gbc.writeMem(0xe006, { 0x88 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf3fe, gbc.sp());
        EXPECT(0xe007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe006));
        // 88 01DD
        gbc.setState(0xafe7, 0x46e0, 0x15a0, 0x45d3, 0xb070, 0x3b4f, 0x0, 0x1);
        gbc.writeMem(0xafe7, { 0x88 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x46e0, gbc.sp());
        EXPECT(0xafe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xafe7));
        // 88 01DE
        gbc.setState(0x1059, 0xbc0c, 0xa510, 0xcb51, 0x4232, 0x70a0, 0x0, 0x0);
        gbc.writeMem(0x1059, { 0x88 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbc0c, gbc.sp());
        EXPECT(0x105a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01DF
        gbc.setState(0x8352, 0x12d6, 0x7340, 0x1902, 0x11e, 0x5e6b, 0x1, 0x1);
        gbc.writeMem(0x8352, { 0x88 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x12d6, gbc.sp());
        EXPECT(0x8353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8352));
        // 88 01E0
        gbc.setState(0xcb2, 0x56f4, 0x5070, 0x9254, 0x4a3d, 0x7d8c, 0x1, 0x1);
        gbc.writeMem(0xcb2, { 0x88 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x56f4, gbc.sp());
        EXPECT(0xcb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01E2
        gbc.setState(0xbdac, 0x498, 0x5080, 0xee1e, 0x46ba, 0x6128, 0x0, 0x1);
        gbc.writeMem(0xbdac, { 0x88 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x498, gbc.sp());
        EXPECT(0xbdad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbdac));
        // 88 01E3
        gbc.setState(0x1119, 0x7975, 0xf7c0, 0xf749, 0x97de, 0xd2c7, 0x1, 0x0);
        gbc.writeMem(0x1119, { 0x88 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7975, gbc.sp());
        EXPECT(0x111a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01E4
        gbc.setState(0x3673, 0xbd57, 0x1260, 0x5927, 0x69cf, 0xacf5, 0x1, 0x0);
        gbc.writeMem(0x3673, { 0x88 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbd57, gbc.sp());
        EXPECT(0x3674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01E5
        gbc.setState(0x430, 0x9cef, 0x4ec0, 0x4e5f, 0x9686, 0x3d9e, 0x1, 0x1);
        gbc.writeMem(0x430, { 0x88 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9cef, gbc.sp());
        EXPECT(0x431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01E6
        gbc.setState(0x6e7c, 0x3cf7, 0x9410, 0x9bba, 0xf9b9, 0x4a83, 0x0, 0x0);
        gbc.writeMem(0x6e7c, { 0x88 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3cf7, gbc.sp());
        EXPECT(0x6e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01E7
        gbc.setState(0x8120, 0xf813, 0xc710, 0x57e9, 0x9bf8, 0x58b2, 0x0, 0x1);
        gbc.writeMem(0x8120, { 0x88 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf813, gbc.sp());
        EXPECT(0x8121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8120));
        // 88 01E8
        gbc.setState(0x4140, 0x649b, 0xed0, 0x3f4c, 0xfe33, 0xdb4b, 0x0, 0x1);
        gbc.writeMem(0x4140, { 0x88 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x649b, gbc.sp());
        EXPECT(0x4141, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01E9
        gbc.setState(0x16a, 0x2216, 0xbd90, 0xe971, 0xe4ad, 0xb772, 0x1, 0x1);
        gbc.writeMem(0x16a, { 0x88 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2216, gbc.sp());
        EXPECT(0x16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01EA
        gbc.setState(0x1c24, 0x9c3d, 0xae90, 0xa8fc, 0x8aa1, 0xf1e7, 0x1, 0x1);
        gbc.writeMem(0x1c24, { 0x88 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9c3d, gbc.sp());
        EXPECT(0x1c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01EB
        gbc.setState(0x33de, 0xfbfc, 0x8ab0, 0x2e1e, 0x7b2e, 0x11a, 0x0, 0x1);
        gbc.writeMem(0x33de, { 0x88 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfbfc, gbc.sp());
        EXPECT(0x33df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01ED
        gbc.setState(0x5608, 0x594b, 0x9ce0, 0x3d99, 0x405f, 0xcfbd, 0x0, 0x0);
        gbc.writeMem(0x5608, { 0x88 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x594b, gbc.sp());
        EXPECT(0x5609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01EE
        gbc.setState(0x2067, 0x8eb7, 0xb40, 0x1d07, 0xd566, 0x9e55, 0x1, 0x1);
        gbc.writeMem(0x2067, { 0x88 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8eb7, gbc.sp());
        EXPECT(0x2068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01EF
        gbc.setState(0x3bc6, 0xde8d, 0x65d0, 0x32dd, 0xe0a3, 0xf887, 0x0, 0x0);
        gbc.writeMem(0x3bc6, { 0x88 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xde8d, gbc.sp());
        EXPECT(0x3bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01F0
        gbc.setState(0x62aa, 0x37cb, 0x2620, 0x6682, 0xdc58, 0x1107, 0x1, 0x1);
        gbc.writeMem(0x62aa, { 0x88 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x37cb, gbc.sp());
        EXPECT(0x62ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01F1
        gbc.setState(0x54e2, 0xd20b, 0xe3b0, 0xd50e, 0x19f4, 0xc721, 0x1, 0x0);
        gbc.writeMem(0x54e2, { 0x88 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd20b, gbc.sp());
        EXPECT(0x54e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 01F2
        gbc.setState(0xe4f7, 0xe6ec, 0x7e60, 0x8a2f, 0x9e5d, 0xa770, 0x1, 0x1);
        gbc.writeMem(0xe4f7, { 0x88 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe6ec, gbc.sp());
        EXPECT(0xe4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe4f7));
        // 88 01F3
        gbc.setState(0x9532, 0xd8de, 0x5e0, 0x49a, 0xa11d, 0xe274, 0x0, 0x0);
        gbc.writeMem(0x9532, { 0x88 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd8de, gbc.sp());
        EXPECT(0x9533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9532));
        // 88 01F4
        gbc.setState(0x2b12, 0x92ea, 0x1420, 0x3379, 0x8b29, 0x49c5, 0x1, 0x1);
        gbc.writeMem(0x2b12, { 0x88 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x92ea, gbc.sp());
        EXPECT(0x2b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01F5
        gbc.setState(0x8568, 0xa1b2, 0x39c0, 0x7063, 0xf2bf, 0x357, 0x0, 0x1);
        gbc.writeMem(0x8568, { 0x88 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa1b2, gbc.sp());
        EXPECT(0x8569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8568));
        // 88 01F6
        gbc.setState(0x5ab4, 0xa24b, 0x2460, 0x452f, 0xec88, 0x8ac2, 0x1, 0x1);
        gbc.writeMem(0x5ab4, { 0x88 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa24b, gbc.sp());
        EXPECT(0x5ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01F7
        gbc.setState(0xbddb, 0x6b43, 0x1ec0, 0xb12b, 0xe934, 0x8df9, 0x1, 0x0);
        gbc.writeMem(0xbddb, { 0x88 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6b43, gbc.sp());
        EXPECT(0xbddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbddb));
        // 88 01F8
        gbc.setState(0xaf4f, 0x21a5, 0x3370, 0xd564, 0xf03c, 0x9e2f, 0x0, 0x1);
        gbc.writeMem(0xaf4f, { 0x88 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x21a5, gbc.sp());
        EXPECT(0xaf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaf4f));
        // 88 01F9
        gbc.setState(0x5305, 0x470f, 0xbd0, 0x2e42, 0xc48, 0xff6b, 0x0, 0x1);
        gbc.writeMem(0x5305, { 0x88 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x470f, gbc.sp());
        EXPECT(0x5306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01FA
        gbc.setState(0xa997, 0xb40, 0x4660, 0x9af2, 0x4539, 0x6f8c, 0x0, 0x0);
        gbc.writeMem(0xa997, { 0x88 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb40, gbc.sp());
        EXPECT(0xa998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa997));
        // 88 01FB
        gbc.setState(0x465b, 0xbf9c, 0x4b70, 0x6d13, 0x3406, 0x3774, 0x1, 0x1);
        gbc.writeMem(0x465b, { 0x88 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbf9c, gbc.sp());
        EXPECT(0x465c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 01FC
        gbc.setState(0xb02e, 0x2621, 0xc7b0, 0x27d0, 0xd992, 0x3f7e, 0x0, 0x0);
        gbc.writeMem(0xb02e, { 0x88 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2621, gbc.sp());
        EXPECT(0xb02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb02e));
        // 88 01FD
        gbc.setState(0xea40, 0xaa4c, 0x96e0, 0x694c, 0x9a2c, 0xe0be, 0x1, 0x0);
        gbc.writeMem(0xea40, { 0x88 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xaa4c, gbc.sp());
        EXPECT(0xea41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xea40));
        // 88 01FE
        gbc.setState(0x8018, 0xbf9a, 0x1d0, 0x3dae, 0x6e13, 0x116f, 0x0, 0x0);
        gbc.writeMem(0x8018, { 0x88 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbf9a, gbc.sp());
        EXPECT(0x8019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8018));
        // 88 01FF
        gbc.setState(0x83b1, 0x9c69, 0x1950, 0x38d2, 0xccdc, 0xf978, 0x0, 0x1);
        gbc.writeMem(0x83b1, { 0x88 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9c69, gbc.sp());
        EXPECT(0x83b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x83b1));
        // 88 0200
        gbc.setState(0xcac2, 0xe21a, 0xabe0, 0x21cb, 0x732e, 0x369e, 0x0, 0x0);
        gbc.writeMem(0xcac2, { 0x88 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe21a, gbc.sp());
        EXPECT(0xcac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcac2));
        // 88 0201
        gbc.setState(0xd3c4, 0xd5b6, 0x80, 0x69b0, 0xf178, 0xdb31, 0x1, 0x1);
        gbc.writeMem(0xd3c4, { 0x88 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd5b6, gbc.sp());
        EXPECT(0xd3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd3c4));
        // 88 0202
        gbc.setState(0xe302, 0xdbc0, 0xdf80, 0xb1fd, 0xddf9, 0x25a9, 0x0, 0x0);
        gbc.writeMem(0xe302, { 0x88 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdbc0, gbc.sp());
        EXPECT(0xe303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe302));
        // 88 0203
        gbc.setState(0xa831, 0xb61d, 0x8ca0, 0x3e82, 0xce66, 0x5b43, 0x0, 0x0);
        gbc.writeMem(0xa831, { 0x88 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb61d, gbc.sp());
        EXPECT(0xa832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa831));
        // 88 0204
        gbc.setState(0x6f4e, 0x1dc6, 0xbbc0, 0x44a2, 0x5d8f, 0x16c0, 0x0, 0x0);
        gbc.writeMem(0x6f4e, { 0x88 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1dc6, gbc.sp());
        EXPECT(0x6f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0206
        gbc.setState(0x838e, 0xe325, 0xaa90, 0x4c38, 0x784, 0x6f3b, 0x0, 0x0);
        gbc.writeMem(0x838e, { 0x88 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe325, gbc.sp());
        EXPECT(0x838f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x838e));
        // 88 0207
        gbc.setState(0x57f5, 0x4996, 0xde20, 0x49fe, 0xe4d7, 0xa08a, 0x0, 0x0);
        gbc.writeMem(0x57f5, { 0x88 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4996, gbc.sp());
        EXPECT(0x57f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0208
        gbc.setState(0x619a, 0xb65, 0x38d0, 0x86fb, 0x9757, 0x283, 0x0, 0x0);
        gbc.writeMem(0x619a, { 0x88 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb65, gbc.sp());
        EXPECT(0x619b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0209
        gbc.setState(0xa92f, 0x2d43, 0x8000, 0x21db, 0x2f36, 0xff39, 0x1, 0x0);
        gbc.writeMem(0xa92f, { 0x88 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2d43, gbc.sp());
        EXPECT(0xa930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa92f));
        // 88 020A
        gbc.setState(0xc478, 0x48c3, 0xe9b0, 0xfb62, 0xdec3, 0xa4ef, 0x1, 0x1);
        gbc.writeMem(0xc478, { 0x88 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x48c3, gbc.sp());
        EXPECT(0xc479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc478));
        // 88 020B
        gbc.setState(0x899c, 0x76b, 0x73c0, 0x85e2, 0x89fa, 0x25f6, 0x0, 0x0);
        gbc.writeMem(0x899c, { 0x88 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x76b, gbc.sp());
        EXPECT(0x899d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x899c));
        // 88 020C
        gbc.setState(0xd83c, 0x4781, 0xec0, 0x9659, 0x86ed, 0x16f0, 0x1, 0x1);
        gbc.writeMem(0xd83c, { 0x88 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4781, gbc.sp());
        EXPECT(0xd83d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd83c));
        // 88 020D
        gbc.setState(0xbb20, 0x397d, 0x8690, 0x2d84, 0xd2fc, 0xda60, 0x1, 0x0);
        gbc.writeMem(0xbb20, { 0x88 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x397d, gbc.sp());
        EXPECT(0xbb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbb20));
        // 88 020E
        gbc.setState(0x6cd8, 0x7e2e, 0x6380, 0xf4, 0x81d8, 0xcdd9, 0x1, 0x0);
        gbc.writeMem(0x6cd8, { 0x88 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7e2e, gbc.sp());
        EXPECT(0x6cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 020F
        gbc.setState(0x2a5e, 0xbb6e, 0xb750, 0x6f09, 0x8b5c, 0xba43, 0x0, 0x1);
        gbc.writeMem(0x2a5e, { 0x88 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbb6e, gbc.sp());
        EXPECT(0x2a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0210
        gbc.setState(0x9df0, 0x63c7, 0x30d0, 0xaabe, 0xa677, 0xf3d9, 0x1, 0x1);
        gbc.writeMem(0x9df0, { 0x88 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x63c7, gbc.sp());
        EXPECT(0x9df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9df0));
        // 88 0211
        gbc.setState(0xadfc, 0xd524, 0xea70, 0x402e, 0x7a89, 0xf0d5, 0x0, 0x1);
        gbc.writeMem(0xadfc, { 0x88 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd524, gbc.sp());
        EXPECT(0xadfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xadfc));
        // 88 0212
        gbc.setState(0xbf07, 0x4c7e, 0x70b0, 0x5241, 0xb186, 0xad2d, 0x1, 0x0);
        gbc.writeMem(0xbf07, { 0x88 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4c7e, gbc.sp());
        EXPECT(0xbf08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbf07));
        // 88 0214
        gbc.setState(0x8c3c, 0x3fed, 0x41e0, 0x350e, 0xaa2c, 0xbb88, 0x0, 0x1);
        gbc.writeMem(0x8c3c, { 0x88 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3fed, gbc.sp());
        EXPECT(0x8c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8c3c));
        // 88 0215
        gbc.setState(0x75a6, 0xf7c4, 0xf020, 0x96e, 0xb58d, 0x526, 0x0, 0x0);
        gbc.writeMem(0x75a6, { 0x88 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf7c4, gbc.sp());
        EXPECT(0x75a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0216
        gbc.setState(0xbc36, 0x92a5, 0x7ed0, 0xd5f7, 0x2a00, 0xfc53, 0x0, 0x1);
        gbc.writeMem(0xbc36, { 0x88 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x92a5, gbc.sp());
        EXPECT(0xbc37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbc36));
        // 88 0217
        gbc.setState(0x9d21, 0x6e40, 0xcab0, 0x9e42, 0x13a7, 0x4c34, 0x0, 0x1);
        gbc.writeMem(0x9d21, { 0x88 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6e40, gbc.sp());
        EXPECT(0x9d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9d21));
        // 88 0218
        gbc.setState(0xc0, 0x25c9, 0x650, 0xaa4, 0xeafb, 0x6487, 0x1, 0x1);
        gbc.writeMem(0xc0, { 0x88 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x25c9, gbc.sp());
        EXPECT(0xc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0219
        gbc.setState(0x3595, 0x162b, 0xcce0, 0x87a4, 0x69a, 0x5650, 0x0, 0x1);
        gbc.writeMem(0x3595, { 0x88 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x162b, gbc.sp());
        EXPECT(0x3596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 021A
        gbc.setState(0x9801, 0xd03f, 0x8d40, 0xb389, 0x7c41, 0xa0db, 0x0, 0x1);
        gbc.writeMem(0x9801, { 0x88 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd03f, gbc.sp());
        EXPECT(0x9802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9801));
        // 88 021B
        gbc.setState(0xcebc, 0xc05e, 0x6900, 0x6d36, 0x96f3, 0x1e1, 0x0, 0x1);
        gbc.writeMem(0xcebc, { 0x88 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc05e, gbc.sp());
        EXPECT(0xcebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcebc));
        // 88 021C
        gbc.setState(0x476d, 0x44d1, 0x950, 0x8add, 0xeac1, 0x3251, 0x1, 0x0);
        gbc.writeMem(0x476d, { 0x88 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x44d1, gbc.sp());
        EXPECT(0x476e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 021D
        gbc.setState(0xd026, 0x6ede, 0x6f40, 0xa4, 0xa97c, 0xf6c3, 0x0, 0x1);
        gbc.writeMem(0xd026, { 0x88 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6ede, gbc.sp());
        EXPECT(0xd027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd026));
        // 88 021E
        gbc.setState(0xeff0, 0x4a31, 0xff10, 0xb91f, 0xdc8e, 0x9ee4, 0x0, 0x1);
        gbc.writeMem(0xeff0, { 0x88 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4a31, gbc.sp());
        EXPECT(0xeff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xeff0));
        // 88 021F
        gbc.setState(0x84c3, 0xdae4, 0x35e0, 0x7f9a, 0x1598, 0x794, 0x0, 0x1);
        gbc.writeMem(0x84c3, { 0x88 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdae4, gbc.sp());
        EXPECT(0x84c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x84c3));
        // 88 0220
        gbc.setState(0xcfb, 0xf090, 0x5c90, 0x87e8, 0x8a02, 0x3c5e, 0x0, 0x0);
        gbc.writeMem(0xcfb, { 0x88 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf090, gbc.sp());
        EXPECT(0xcfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0221
        gbc.setState(0x520c, 0xbd2, 0x5230, 0xc85c, 0xefc7, 0xaf3e, 0x1, 0x0);
        gbc.writeMem(0x520c, { 0x88 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbd2, gbc.sp());
        EXPECT(0x520d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0222
        gbc.setState(0xcd75, 0x615f, 0xd310, 0x1712, 0xf72a, 0x8288, 0x0, 0x1);
        gbc.writeMem(0xcd75, { 0x88 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x615f, gbc.sp());
        EXPECT(0xcd76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcd75));
        // 88 0223
        gbc.setState(0xdd49, 0x8bd, 0x8d10, 0x6760, 0xb2cc, 0xd59a, 0x1, 0x0);
        gbc.writeMem(0xdd49, { 0x88 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8bd, gbc.sp());
        EXPECT(0xdd4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdd49));
        // 88 0225
        gbc.setState(0x8a61, 0xc62c, 0x8f50, 0x2601, 0xda05, 0xcd04, 0x1, 0x1);
        gbc.writeMem(0x8a61, { 0x88 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc62c, gbc.sp());
        EXPECT(0x8a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8a61));
        // 88 0226
        gbc.setState(0xd10d, 0x36f4, 0xf60, 0x5c56, 0xb2e, 0xfddd, 0x0, 0x0);
        gbc.writeMem(0xd10d, { 0x88 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x36f4, gbc.sp());
        EXPECT(0xd10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd10d));
        // 88 0227
        gbc.setState(0xcaf2, 0x9587, 0x44f0, 0xa2e1, 0x6873, 0xe502, 0x0, 0x1);
        gbc.writeMem(0xcaf2, { 0x88 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9587, gbc.sp());
        EXPECT(0xcaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcaf2));
        // 88 0228
        gbc.setState(0x3523, 0xa426, 0x22c0, 0x7c9, 0x185c, 0xcca3, 0x1, 0x1);
        gbc.writeMem(0x3523, { 0x88 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa426, gbc.sp());
        EXPECT(0x3524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0229
        gbc.setState(0x5985, 0x2f0c, 0x15a0, 0x6a7a, 0xf93a, 0xd3ff, 0x1, 0x1);
        gbc.writeMem(0x5985, { 0x88 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2f0c, gbc.sp());
        EXPECT(0x5986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 022A
        gbc.setState(0x8380, 0x6e64, 0xf5d0, 0xd094, 0x73d6, 0x752, 0x1, 0x1);
        gbc.writeMem(0x8380, { 0x88 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6e64, gbc.sp());
        EXPECT(0x8381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8380));
        // 88 022B
        gbc.setState(0xdafd, 0x247b, 0x7030, 0xf2f, 0x6c8a, 0x58b5, 0x0, 0x1);
        gbc.writeMem(0xdafd, { 0x88 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x247b, gbc.sp());
        EXPECT(0xdafe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdafd));
        // 88 022C
        gbc.setState(0x6cad, 0xcb21, 0x64a0, 0x6fcd, 0x131d, 0xc4fa, 0x1, 0x0);
        gbc.writeMem(0x6cad, { 0x88 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcb21, gbc.sp());
        EXPECT(0x6cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 022E
        gbc.setState(0xdc3, 0xe401, 0x2d70, 0xa75d, 0x6982, 0x809f, 0x0, 0x1);
        gbc.writeMem(0xdc3, { 0x88 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe401, gbc.sp());
        EXPECT(0xdc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 022F
        gbc.setState(0x53d5, 0x2a82, 0x24a0, 0x5934, 0xdbcd, 0x4b24, 0x0, 0x0);
        gbc.writeMem(0x53d5, { 0x88 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2a82, gbc.sp());
        EXPECT(0x53d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0230
        gbc.setState(0xa7f6, 0x6fee, 0x67a0, 0xcc35, 0x11ff, 0x9b43, 0x1, 0x1);
        gbc.writeMem(0xa7f6, { 0x88 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6fee, gbc.sp());
        EXPECT(0xa7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa7f6));
        // 88 0231
        gbc.setState(0xef8f, 0xbcec, 0xb010, 0x9b5, 0x928d, 0x696e, 0x1, 0x0);
        gbc.writeMem(0xef8f, { 0x88 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbcec, gbc.sp());
        EXPECT(0xef90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xef8f));
        // 88 0232
        gbc.setState(0xcea4, 0x23f7, 0x49c0, 0x3823, 0x80b7, 0x9bfe, 0x1, 0x0);
        gbc.writeMem(0xcea4, { 0x88 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x23f7, gbc.sp());
        EXPECT(0xcea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcea4));
        // 88 0234
        gbc.setState(0xef1f, 0x6699, 0x7360, 0x4919, 0xd14b, 0xad96, 0x0, 0x1);
        gbc.writeMem(0xef1f, { 0x88 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6699, gbc.sp());
        EXPECT(0xef20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xef1f));
        // 88 0236
        gbc.setState(0x7ce6, 0x1204, 0x21a0, 0xb8e8, 0xf2f7, 0xdd0b, 0x1, 0x0);
        gbc.writeMem(0x7ce6, { 0x88 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1204, gbc.sp());
        EXPECT(0x7ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0237
        gbc.setState(0x4eff, 0x75db, 0x7380, 0xafa3, 0x71f3, 0x4150, 0x0, 0x1);
        gbc.writeMem(0x4eff, { 0x88 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x75db, gbc.sp());
        EXPECT(0x4f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0238
        gbc.setState(0xb0c5, 0x1446, 0xfbe0, 0xecfc, 0xfb44, 0x1d94, 0x0, 0x1);
        gbc.writeMem(0xb0c5, { 0x88 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1446, gbc.sp());
        EXPECT(0xb0c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb0c5));
        // 88 0239
        gbc.setState(0x232e, 0xfa02, 0xc520, 0xf6f5, 0x668c, 0xf74, 0x1, 0x0);
        gbc.writeMem(0x232e, { 0x88 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xfa02, gbc.sp());
        EXPECT(0x232f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 023A
        gbc.setState(0x1b52, 0xe496, 0x91c0, 0x95a6, 0xd51d, 0x229c, 0x1, 0x0);
        gbc.writeMem(0x1b52, { 0x88 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe496, gbc.sp());
        EXPECT(0x1b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 023B
        gbc.setState(0x898a, 0xd10e, 0x7c30, 0x1209, 0x1414, 0x6d2f, 0x1, 0x0);
        gbc.writeMem(0x898a, { 0x88 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd10e, gbc.sp());
        EXPECT(0x898b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x898a));
        // 88 023C
        gbc.setState(0x54cd, 0xae5c, 0xbdf0, 0x973b, 0x674d, 0xe2c9, 0x0, 0x0);
        gbc.writeMem(0x54cd, { 0x88 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xae5c, gbc.sp());
        EXPECT(0x54ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 023D
        gbc.setState(0x2371, 0xebd1, 0xab00, 0x5a7, 0x2b69, 0x362d, 0x0, 0x1);
        gbc.writeMem(0x2371, { 0x88 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xebd1, gbc.sp());
        EXPECT(0x2372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 023E
        gbc.setState(0x9c21, 0x608e, 0x2c30, 0x5fef, 0x651, 0x5e71, 0x1, 0x1);
        gbc.writeMem(0x9c21, { 0x88 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x608e, gbc.sp());
        EXPECT(0x9c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9c21));
        // 88 0240
        gbc.setState(0x3b38, 0x7113, 0xda0, 0x6b9b, 0x4fde, 0xd383, 0x0, 0x0);
        gbc.writeMem(0x3b38, { 0x88 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7113, gbc.sp());
        EXPECT(0x3b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0242
        gbc.setState(0x44a0, 0xd9ef, 0x9e20, 0xa153, 0xf2af, 0xbe41, 0x0, 0x1);
        gbc.writeMem(0x44a0, { 0x88 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd9ef, gbc.sp());
        EXPECT(0x44a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0243
        gbc.setState(0x2047, 0x4883, 0x59f0, 0x539f, 0x5c06, 0x3e33, 0x1, 0x0);
        gbc.writeMem(0x2047, { 0x88 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4883, gbc.sp());
        EXPECT(0x2048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0244
        gbc.setState(0x3f9a, 0x2de2, 0xe180, 0x4fee, 0xd989, 0x52c, 0x0, 0x1);
        gbc.writeMem(0x3f9a, { 0x88 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2de2, gbc.sp());
        EXPECT(0x3f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0245
        gbc.setState(0xd6f, 0xc679, 0x5fb0, 0x6320, 0xc9ff, 0x8263, 0x1, 0x0);
        gbc.writeMem(0xd6f, { 0x88 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc679, gbc.sp());
        EXPECT(0xd70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0246
        gbc.setState(0x9c8e, 0xe98f, 0x8010, 0x1ad6, 0x68bf, 0x61ef, 0x1, 0x1);
        gbc.writeMem(0x9c8e, { 0x88 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe98f, gbc.sp());
        EXPECT(0x9c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9c8e));
        // 88 0247
        gbc.setState(0xc5a2, 0x7d9a, 0x78b0, 0xa666, 0x3628, 0xb91e, 0x0, 0x1);
        gbc.writeMem(0xc5a2, { 0x88 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7d9a, gbc.sp());
        EXPECT(0xc5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc5a2));
        // 88 0248
        gbc.setState(0xe933, 0x1a00, 0x13a0, 0x8403, 0x89a8, 0x8a3d, 0x0, 0x0);
        gbc.writeMem(0xe933, { 0x88 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1a00, gbc.sp());
        EXPECT(0xe934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe933));
        // 88 0249
        gbc.setState(0xe03e, 0x9393, 0x33c0, 0x9127, 0xddd1, 0xf5cc, 0x0, 0x0);
        gbc.writeMem(0xe03e, { 0x88 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9393, gbc.sp());
        EXPECT(0xe03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe03e));
        // 88 024A
        gbc.setState(0x3b24, 0x5cd9, 0x9130, 0xd653, 0xcd12, 0xaf6d, 0x0, 0x0);
        gbc.writeMem(0x3b24, { 0x88 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5cd9, gbc.sp());
        EXPECT(0x3b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 024B
        gbc.setState(0x4306, 0x4e2d, 0x65f0, 0x9d23, 0xfd12, 0x973, 0x0, 0x0);
        gbc.writeMem(0x4306, { 0x88 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4e2d, gbc.sp());
        EXPECT(0x4307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 024C
        gbc.setState(0xc318, 0xd80b, 0x9f0, 0x5688, 0xebd6, 0xe082, 0x0, 0x0);
        gbc.writeMem(0xc318, { 0x88 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd80b, gbc.sp());
        EXPECT(0xc319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc318));
        // 88 024D
        gbc.setState(0xe43a, 0xbea9, 0x9370, 0xa98e, 0xbc8c, 0x551, 0x0, 0x0);
        gbc.writeMem(0xe43a, { 0x88 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbea9, gbc.sp());
        EXPECT(0xe43b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe43a));
        // 88 024E
        gbc.setState(0x13ab, 0x472c, 0xbcb0, 0x3d43, 0x3b41, 0x70ca, 0x0, 0x0);
        gbc.writeMem(0x13ab, { 0x88 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x472c, gbc.sp());
        EXPECT(0x13ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 024F
        gbc.setState(0x9345, 0x2893, 0xe980, 0xf75b, 0x2d3a, 0xb46c, 0x0, 0x1);
        gbc.writeMem(0x9345, { 0x88 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2893, gbc.sp());
        EXPECT(0x9346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9345));
        // 88 0250
        gbc.setState(0x5c0, 0x6b19, 0x5d40, 0xb8f2, 0x98b2, 0xe0e5, 0x1, 0x1);
        gbc.writeMem(0x5c0, { 0x88 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6b19, gbc.sp());
        EXPECT(0x5c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0251
        gbc.setState(0xd5db, 0xd60f, 0x3730, 0xb9fc, 0xadf1, 0x9b4b, 0x0, 0x1);
        gbc.writeMem(0xd5db, { 0x88 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd60f, gbc.sp());
        EXPECT(0xd5dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd5db));
        // 88 0252
        gbc.setState(0xa7d8, 0xf0aa, 0x7330, 0x2212, 0x467d, 0xb950, 0x1, 0x0);
        gbc.writeMem(0xa7d8, { 0x88 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf0aa, gbc.sp());
        EXPECT(0xa7d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa7d8));
        // 88 0253
        gbc.setState(0x6b0, 0xee5c, 0x2270, 0xa2a8, 0x7b2f, 0x615e, 0x0, 0x0);
        gbc.writeMem(0x6b0, { 0x88 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xee5c, gbc.sp());
        EXPECT(0x6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0254
        gbc.setState(0xac8d, 0xa457, 0x5a50, 0x787d, 0xd306, 0xbcd6, 0x0, 0x1);
        gbc.writeMem(0xac8d, { 0x88 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa457, gbc.sp());
        EXPECT(0xac8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xac8d));
        // 88 0255
        gbc.setState(0xe199, 0xc407, 0x40, 0xefa3, 0x25cc, 0x76ef, 0x0, 0x0);
        gbc.writeMem(0xe199, { 0x88 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc407, gbc.sp());
        EXPECT(0xe19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe199));
        // 88 0256
        gbc.setState(0x6ead, 0x7c48, 0x8070, 0x8bd, 0xd21c, 0x5833, 0x1, 0x1);
        gbc.writeMem(0x6ead, { 0x88 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7c48, gbc.sp());
        EXPECT(0x6eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0257
        gbc.setState(0x8317, 0xf2e, 0xa490, 0x1542, 0x687d, 0xb3e4, 0x0, 0x0);
        gbc.writeMem(0x8317, { 0x88 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf2e, gbc.sp());
        EXPECT(0x8318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8317));
        // 88 0258
        gbc.setState(0xd70c, 0xaf8c, 0x3cf0, 0xf87f, 0xa51d, 0xf114, 0x0, 0x1);
        gbc.writeMem(0xd70c, { 0x88 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaf8c, gbc.sp());
        EXPECT(0xd70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd70c));
        // 88 0259
        gbc.setState(0xdd87, 0x1f8e, 0x5900, 0xd210, 0x949b, 0x6285, 0x0, 0x1);
        gbc.writeMem(0xdd87, { 0x88 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1f8e, gbc.sp());
        EXPECT(0xdd88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdd87));
        // 88 025A
        gbc.setState(0x54ef, 0xec66, 0xe660, 0x7228, 0x3cb7, 0x1275, 0x1, 0x0);
        gbc.writeMem(0x54ef, { 0x88 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xec66, gbc.sp());
        EXPECT(0x54f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 025B
        gbc.setState(0x82ca, 0xd46a, 0x6aa0, 0x1af1, 0x4ebd, 0x782c, 0x0, 0x0);
        gbc.writeMem(0x82ca, { 0x88 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd46a, gbc.sp());
        EXPECT(0x82cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x82ca));
        // 88 025C
        gbc.setState(0x3ea6, 0xaff3, 0x8020, 0x75fe, 0x89f4, 0xd8f, 0x0, 0x0);
        gbc.writeMem(0x3ea6, { 0x88 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaff3, gbc.sp());
        EXPECT(0x3ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 025D
        gbc.setState(0x9855, 0x48d5, 0xc640, 0xdfea, 0x1eeb, 0x8073, 0x0, 0x0);
        gbc.writeMem(0x9855, { 0x88 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x48d5, gbc.sp());
        EXPECT(0x9856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9855));
        // 88 025E
        gbc.setState(0x1661, 0x9c4e, 0xf6d0, 0x4767, 0x2d0f, 0xd8e5, 0x1, 0x0);
        gbc.writeMem(0x1661, { 0x88 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9c4e, gbc.sp());
        EXPECT(0x1662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 025F
        gbc.setState(0x2992, 0xc6a8, 0xfbd0, 0x25ff, 0x48d2, 0x8610, 0x1, 0x0);
        gbc.writeMem(0x2992, { 0x88 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc6a8, gbc.sp());
        EXPECT(0x2993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0261
        gbc.setState(0xc73f, 0xa320, 0x9200, 0x2090, 0xd29c, 0x5231, 0x1, 0x0);
        gbc.writeMem(0xc73f, { 0x88 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa320, gbc.sp());
        EXPECT(0xc740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc73f));
        // 88 0262
        gbc.setState(0xc549, 0x937f, 0xac80, 0x78a9, 0xa028, 0x952c, 0x0, 0x0);
        gbc.writeMem(0xc549, { 0x88 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x937f, gbc.sp());
        EXPECT(0xc54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc549));
        // 88 0263
        gbc.setState(0xbda9, 0xaba8, 0x2220, 0x6e31, 0xb649, 0x89d9, 0x1, 0x0);
        gbc.writeMem(0xbda9, { 0x88 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xaba8, gbc.sp());
        EXPECT(0xbdaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbda9));
        // 88 0264
        gbc.setState(0xc589, 0x8ecb, 0x0, 0xe70e, 0x5461, 0x2dc5, 0x1, 0x0);
        gbc.writeMem(0xc589, { 0x88 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8ecb, gbc.sp());
        EXPECT(0xc58a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc589));
        // 88 0265
        gbc.setState(0xbfce, 0x9f9b, 0xb220, 0x91c8, 0x72c7, 0xa37f, 0x1, 0x1);
        gbc.writeMem(0xbfce, { 0x88 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9f9b, gbc.sp());
        EXPECT(0xbfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbfce));
        // 88 0266
        gbc.setState(0xd76f, 0x195b, 0xba50, 0x755c, 0x494c, 0x65a5, 0x0, 0x0);
        gbc.writeMem(0xd76f, { 0x88 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x195b, gbc.sp());
        EXPECT(0xd770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd76f));
        // 88 0267
        gbc.setState(0x39a1, 0x23c1, 0xbe20, 0xa51a, 0x68f5, 0x6e0f, 0x0, 0x1);
        gbc.writeMem(0x39a1, { 0x88 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x23c1, gbc.sp());
        EXPECT(0x39a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0268
        gbc.setState(0xb468, 0x6eb2, 0x4f50, 0x98c, 0xa497, 0x4d07, 0x0, 0x1);
        gbc.writeMem(0xb468, { 0x88 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6eb2, gbc.sp());
        EXPECT(0xb469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb468));
        // 88 026A
        gbc.setState(0x170b, 0xdb8b, 0x2990, 0x2a65, 0xfc4, 0x874a, 0x0, 0x0);
        gbc.writeMem(0x170b, { 0x88 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdb8b, gbc.sp());
        EXPECT(0x170c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 026B
        gbc.setState(0xd915, 0xd171, 0xd910, 0x700e, 0x4e2b, 0x8f1b, 0x0, 0x1);
        gbc.writeMem(0xd915, { 0x88 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd171, gbc.sp());
        EXPECT(0xd916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd915));
        // 88 026C
        gbc.setState(0x8954, 0xfc7a, 0x88b0, 0xa8f, 0xc548, 0x58ec, 0x1, 0x0);
        gbc.writeMem(0x8954, { 0x88 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfc7a, gbc.sp());
        EXPECT(0x8955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8954));
        // 88 026D
        gbc.setState(0xea8, 0xdcf2, 0x16d0, 0xce3f, 0x2c0c, 0xc58f, 0x0, 0x1);
        gbc.writeMem(0xea8, { 0x88 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdcf2, gbc.sp());
        EXPECT(0xea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 026E
        gbc.setState(0xa738, 0x10ee, 0x5810, 0x1524, 0xc9ec, 0x8ad7, 0x1, 0x0);
        gbc.writeMem(0xa738, { 0x88 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x10ee, gbc.sp());
        EXPECT(0xa739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa738));
        // 88 026F
        gbc.setState(0x95d6, 0xf3d7, 0x1e40, 0xcd5a, 0xc4bb, 0xb743, 0x1, 0x0);
        gbc.writeMem(0x95d6, { 0x88 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf3d7, gbc.sp());
        EXPECT(0x95d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x95d6));
        // 88 0270
        gbc.setState(0xb912, 0x3d4e, 0x6420, 0x1187, 0xafe6, 0xa8f4, 0x1, 0x0);
        gbc.writeMem(0xb912, { 0x88 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3d4e, gbc.sp());
        EXPECT(0xb913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb912));
        // 88 0271
        gbc.setState(0xaabd, 0xfa0c, 0x1ca0, 0xdddd, 0xa1c8, 0x6aac, 0x0, 0x1);
        gbc.writeMem(0xaabd, { 0x88 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xfa0c, gbc.sp());
        EXPECT(0xaabe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaabd));
        // 88 0272
        gbc.setState(0xe356, 0xd22d, 0xe30, 0x4de9, 0xc63d, 0xe98e, 0x0, 0x0);
        gbc.writeMem(0xe356, { 0x88 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd22d, gbc.sp());
        EXPECT(0xe357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe356));
        // 88 0273
        gbc.setState(0xe126, 0x60b9, 0x9240, 0x36c2, 0xb78e, 0x4f03, 0x0, 0x0);
        gbc.writeMem(0xe126, { 0x88 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x60b9, gbc.sp());
        EXPECT(0xe127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe126));
        // 88 0274
        gbc.setState(0xd4f7, 0x5641, 0xfd50, 0xb97d, 0x99d0, 0x83ec, 0x1, 0x1);
        gbc.writeMem(0xd4f7, { 0x88 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5641, gbc.sp());
        EXPECT(0xd4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd4f7));
        // 88 0275
        gbc.setState(0x7889, 0xf15a, 0x9000, 0xe80a, 0xd258, 0xe0e, 0x1, 0x1);
        gbc.writeMem(0x7889, { 0x88 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf15a, gbc.sp());
        EXPECT(0x788a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0276
        gbc.setState(0xc509, 0xf1e2, 0x340, 0x2c10, 0x8287, 0x14e7, 0x1, 0x0);
        gbc.writeMem(0xc509, { 0x88 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf1e2, gbc.sp());
        EXPECT(0xc50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc509));
        // 88 0277
        gbc.setState(0xa85b, 0x4f78, 0xa7b0, 0x984d, 0xdd8b, 0x9158, 0x1, 0x1);
        gbc.writeMem(0xa85b, { 0x88 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4f78, gbc.sp());
        EXPECT(0xa85c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa85b));
        // 88 0278
        gbc.setState(0xb40b, 0x9859, 0xfc00, 0xf230, 0x7642, 0x3ef1, 0x1, 0x0);
        gbc.writeMem(0xb40b, { 0x88 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9859, gbc.sp());
        EXPECT(0xb40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb40b));
        // 88 0279
        gbc.setState(0x96ed, 0xe49a, 0x6140, 0x7a78, 0xe42c, 0x2b27, 0x0, 0x1);
        gbc.writeMem(0x96ed, { 0x88 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe49a, gbc.sp());
        EXPECT(0x96ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x96ed));
        // 88 027A
        gbc.setState(0x92d4, 0x9a39, 0xeef0, 0xabf0, 0x6f83, 0xf6e8, 0x1, 0x1);
        gbc.writeMem(0x92d4, { 0x88 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9a39, gbc.sp());
        EXPECT(0x92d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x92d4));
        // 88 027B
        gbc.setState(0x1378, 0x3a2, 0x91d0, 0xf244, 0xfb25, 0x464b, 0x0, 0x0);
        gbc.writeMem(0x1378, { 0x88 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3a2, gbc.sp());
        EXPECT(0x1379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 027C
        gbc.setState(0x7f0c, 0xd543, 0xf610, 0x9e5c, 0xd5ca, 0x95fd, 0x0, 0x0);
        gbc.writeMem(0x7f0c, { 0x88 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd543, gbc.sp());
        EXPECT(0x7f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 027D
        gbc.setState(0x180d, 0x51c0, 0x3430, 0x114e, 0x1e0e, 0xfeae, 0x0, 0x1);
        gbc.writeMem(0x180d, { 0x88 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x51c0, gbc.sp());
        EXPECT(0x180e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 027E
        gbc.setState(0x181f, 0x2a5f, 0xd5e0, 0xd32d, 0x9fde, 0x5567, 0x1, 0x1);
        gbc.writeMem(0x181f, { 0x88 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2a5f, gbc.sp());
        EXPECT(0x1820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 027F
        gbc.setState(0x9344, 0x6bc3, 0x6420, 0xbe58, 0x2802, 0x6784, 0x0, 0x0);
        gbc.writeMem(0x9344, { 0x88 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6bc3, gbc.sp());
        EXPECT(0x9345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9344));
        // 88 0280
        gbc.setState(0x1317, 0x3433, 0x740, 0x86e1, 0xd0b5, 0x65be, 0x1, 0x0);
        gbc.writeMem(0x1317, { 0x88 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3433, gbc.sp());
        EXPECT(0x1318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0281
        gbc.setState(0x7301, 0xfee8, 0x3400, 0xa75d, 0xd0c2, 0xb12b, 0x0, 0x1);
        gbc.writeMem(0x7301, { 0x88 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfee8, gbc.sp());
        EXPECT(0x7302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0282
        gbc.setState(0x8b7b, 0x661c, 0x9000, 0xfe87, 0x402f, 0x8133, 0x1, 0x0);
        gbc.writeMem(0x8b7b, { 0x88 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x661c, gbc.sp());
        EXPECT(0x8b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8b7b));
        // 88 0283
        gbc.setState(0x5f75, 0xa0bf, 0x54d0, 0x57fb, 0x683d, 0x3dcb, 0x1, 0x0);
        gbc.writeMem(0x5f75, { 0x88 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa0bf, gbc.sp());
        EXPECT(0x5f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0284
        gbc.setState(0xca2, 0x3daa, 0xda70, 0x852a, 0x7ced, 0x51d7, 0x1, 0x1);
        gbc.writeMem(0xca2, { 0x88 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3daa, gbc.sp());
        EXPECT(0xca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0286
        gbc.setState(0x2560, 0xd4a, 0xb890, 0x8476, 0x2ec0, 0x1168, 0x1, 0x1);
        gbc.writeMem(0x2560, { 0x88 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd4a, gbc.sp());
        EXPECT(0x2561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0287
        gbc.setState(0xc95b, 0x33bd, 0xb6c0, 0xa0e9, 0x4fa, 0xf2a2, 0x0, 0x1);
        gbc.writeMem(0xc95b, { 0x88 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x33bd, gbc.sp());
        EXPECT(0xc95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc95b));
        // 88 0289
        gbc.setState(0x6ef7, 0x134b, 0x23a0, 0x1a91, 0xbea8, 0x516f, 0x1, 0x1);
        gbc.writeMem(0x6ef7, { 0x88 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x134b, gbc.sp());
        EXPECT(0x6ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 028A
        gbc.setState(0xb7e3, 0x1c1a, 0x8b00, 0xdd54, 0xc7da, 0xf7a4, 0x0, 0x0);
        gbc.writeMem(0xb7e3, { 0x88 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1c1a, gbc.sp());
        EXPECT(0xb7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb7e3));
        // 88 028B
        gbc.setState(0xb59d, 0x861e, 0x5b50, 0x446e, 0x4cd9, 0xaa91, 0x0, 0x1);
        gbc.writeMem(0xb59d, { 0x88 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x861e, gbc.sp());
        EXPECT(0xb59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb59d));
        // 88 028C
        gbc.setState(0x6d7b, 0xaa2b, 0x5c30, 0xb1b2, 0xcac2, 0x87a7, 0x1, 0x1);
        gbc.writeMem(0x6d7b, { 0x88 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xaa2b, gbc.sp());
        EXPECT(0x6d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 028D
        gbc.setState(0xe186, 0x4fe1, 0xe280, 0x3b6b, 0x281, 0x19fb, 0x1, 0x1);
        gbc.writeMem(0xe186, { 0x88 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4fe1, gbc.sp());
        EXPECT(0xe187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe186));
        // 88 028E
        gbc.setState(0x5d93, 0xd03f, 0x9a40, 0xd7d6, 0x874b, 0xdd94, 0x0, 0x1);
        gbc.writeMem(0x5d93, { 0x88 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd03f, gbc.sp());
        EXPECT(0x5d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 028F
        gbc.setState(0xdff9, 0x7aff, 0x5530, 0xc4f7, 0xa6cc, 0xe504, 0x1, 0x1);
        gbc.writeMem(0xdff9, { 0x88 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7aff, gbc.sp());
        EXPECT(0xdffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdff9));
        // 88 0290
        gbc.setState(0x406b, 0xf0a7, 0x40, 0xc702, 0xc3ff, 0x37cf, 0x1, 0x0);
        gbc.writeMem(0x406b, { 0x88 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf0a7, gbc.sp());
        EXPECT(0x406c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0292
        gbc.setState(0x9f94, 0xe476, 0xbf40, 0x5ca6, 0x2260, 0x34f7, 0x1, 0x1);
        gbc.writeMem(0x9f94, { 0x88 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe476, gbc.sp());
        EXPECT(0x9f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9f94));
        // 88 0294
        gbc.setState(0xe17a, 0x9c35, 0xdd90, 0x830e, 0xa5ec, 0x8c65, 0x0, 0x1);
        gbc.writeMem(0xe17a, { 0x88 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9c35, gbc.sp());
        EXPECT(0xe17b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe17a));
        // 88 0295
        gbc.setState(0x73fd, 0x9e16, 0xe9b0, 0x75b6, 0x3739, 0x732a, 0x1, 0x0);
        gbc.writeMem(0x73fd, { 0x88 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9e16, gbc.sp());
        EXPECT(0x73fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0296
        gbc.setState(0x98d3, 0xbee0, 0x58a0, 0x52ba, 0x98f9, 0x284f, 0x1, 0x0);
        gbc.writeMem(0x98d3, { 0x88 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbee0, gbc.sp());
        EXPECT(0x98d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x98d3));
        // 88 0297
        gbc.setState(0xdd3f, 0x34a6, 0xcc20, 0xefd1, 0xf219, 0x1bbe, 0x0, 0x1);
        gbc.writeMem(0xdd3f, { 0x88 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x34a6, gbc.sp());
        EXPECT(0xdd40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdd3f));
        // 88 0298
        gbc.setState(0x1066, 0x1e46, 0xf120, 0x2f4a, 0x119b, 0xede4, 0x0, 0x0);
        gbc.writeMem(0x1066, { 0x88 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1e46, gbc.sp());
        EXPECT(0x1067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0299
        gbc.setState(0x7c20, 0xc8d0, 0xcae0, 0xb61, 0x2030, 0x39fb, 0x1, 0x0);
        gbc.writeMem(0x7c20, { 0x88 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc8d0, gbc.sp());
        EXPECT(0x7c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 029A
        gbc.setState(0xe0dc, 0x40d2, 0x1850, 0x7b19, 0xf648, 0x4a07, 0x1, 0x1);
        gbc.writeMem(0xe0dc, { 0x88 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x40d2, gbc.sp());
        EXPECT(0xe0dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe0dc));
        // 88 029B
        gbc.setState(0xb52d, 0x85a0, 0x7000, 0x483e, 0x339e, 0x68c3, 0x0, 0x1);
        gbc.writeMem(0xb52d, { 0x88 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x85a0, gbc.sp());
        EXPECT(0xb52e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb52d));
        // 88 029C
        gbc.setState(0x17fe, 0x97a0, 0x4350, 0x5a9b, 0x1046, 0x6c90, 0x1, 0x1);
        gbc.writeMem(0x17fe, { 0x88 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x97a0, gbc.sp());
        EXPECT(0x17ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 029D
        gbc.setState(0xeb58, 0xcd8b, 0xeaf0, 0xa7de, 0x7b78, 0xcc23, 0x1, 0x1);
        gbc.writeMem(0xeb58, { 0x88 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcd8b, gbc.sp());
        EXPECT(0xeb59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xeb58));
        // 88 029E
        gbc.setState(0x8977, 0x5adc, 0xa3d0, 0xa757, 0x745d, 0xb086, 0x0, 0x1);
        gbc.writeMem(0x8977, { 0x88 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5adc, gbc.sp());
        EXPECT(0x8978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8977));
        // 88 029F
        gbc.setState(0x1936, 0x2a3e, 0xf410, 0x300, 0xfb87, 0xfdc9, 0x1, 0x1);
        gbc.writeMem(0x1936, { 0x88 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2a3e, gbc.sp());
        EXPECT(0x1937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02A0
        gbc.setState(0xb84a, 0xc0c8, 0xbd20, 0x17f8, 0xe7b8, 0x6fa, 0x1, 0x1);
        gbc.writeMem(0xb84a, { 0x88 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc0c8, gbc.sp());
        EXPECT(0xb84b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb84a));
        // 88 02A2
        gbc.setState(0xb601, 0x8ba3, 0x9e20, 0xf40a, 0x6d4a, 0x98d3, 0x1, 0x0);
        gbc.writeMem(0xb601, { 0x88 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8ba3, gbc.sp());
        EXPECT(0xb602, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb601));
        // 88 02A3
        gbc.setState(0x44bc, 0x8eb7, 0x6ad0, 0x5595, 0xf41d, 0xe283, 0x0, 0x1);
        gbc.writeMem(0x44bc, { 0x88 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8eb7, gbc.sp());
        EXPECT(0x44bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02A4
        gbc.setState(0x4409, 0xb4e2, 0xeb00, 0x195e, 0x7bfa, 0x4659, 0x1, 0x1);
        gbc.writeMem(0x4409, { 0x88 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb4e2, gbc.sp());
        EXPECT(0x440a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02A5
        gbc.setState(0x44e5, 0x595c, 0xe8d0, 0x8465, 0x5e87, 0xa906, 0x0, 0x0);
        gbc.writeMem(0x44e5, { 0x88 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x595c, gbc.sp());
        EXPECT(0x44e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02A6
        gbc.setState(0x85b1, 0x5380, 0xbf90, 0xd941, 0x4168, 0x7c1c, 0x0, 0x0);
        gbc.writeMem(0x85b1, { 0x88 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5380, gbc.sp());
        EXPECT(0x85b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x85b1));
        // 88 02A7
        gbc.setState(0xef16, 0x848f, 0x5b20, 0xa559, 0x889e, 0xe308, 0x1, 0x0);
        gbc.writeMem(0xef16, { 0x88 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x848f, gbc.sp());
        EXPECT(0xef17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xef16));
        // 88 02A8
        gbc.setState(0xb3ce, 0xe8cd, 0x8fd0, 0xfe18, 0xb52e, 0xad9e, 0x0, 0x0);
        gbc.writeMem(0xb3ce, { 0x88 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe8cd, gbc.sp());
        EXPECT(0xb3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb3ce));
        // 88 02A9
        gbc.setState(0xb395, 0x4626, 0x8ff0, 0x6fc, 0x304f, 0xda7b, 0x0, 0x1);
        gbc.writeMem(0xb395, { 0x88 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4626, gbc.sp());
        EXPECT(0xb396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb395));
        // 88 02AA
        gbc.setState(0xc125, 0x3bd7, 0x290, 0x43c6, 0xb2d9, 0x2dc1, 0x1, 0x0);
        gbc.writeMem(0xc125, { 0x88 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3bd7, gbc.sp());
        EXPECT(0xc126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc125));
        // 88 02AB
        gbc.setState(0x411b, 0xcda4, 0x33f0, 0x7fd, 0x75bd, 0xc29d, 0x1, 0x1);
        gbc.writeMem(0x411b, { 0x88 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcda4, gbc.sp());
        EXPECT(0x411c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02AC
        gbc.setState(0x1b81, 0x489e, 0xb580, 0xd390, 0x26e1, 0x6f7b, 0x0, 0x0);
        gbc.writeMem(0x1b81, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x489e, gbc.sp());
        EXPECT(0x1b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02AD
        gbc.setState(0xe0ca, 0xbdf3, 0x9da0, 0x7f37, 0x50c7, 0x419f, 0x1, 0x0);
        gbc.writeMem(0xe0ca, { 0x88 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbdf3, gbc.sp());
        EXPECT(0xe0cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe0ca));
        // 88 02AE
        gbc.setState(0x609, 0xed71, 0xba40, 0xe1a, 0x553b, 0xf571, 0x1, 0x0);
        gbc.writeMem(0x609, { 0x88 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xed71, gbc.sp());
        EXPECT(0x60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02AF
        gbc.setState(0x8676, 0x6640, 0x7fd0, 0xcc16, 0xd31f, 0x673e, 0x0, 0x1);
        gbc.writeMem(0x8676, { 0x88 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6640, gbc.sp());
        EXPECT(0x8677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8676));
        // 88 02B0
        gbc.setState(0x783c, 0xe5, 0x96c0, 0x31fd, 0xfd1a, 0x8700, 0x1, 0x1);
        gbc.writeMem(0x783c, { 0x88 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe5, gbc.sp());
        EXPECT(0x783d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02B1
        gbc.setState(0xed6d, 0xd791, 0x7980, 0x95e9, 0xc7fd, 0x340d, 0x1, 0x1);
        gbc.writeMem(0xed6d, { 0x88 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd791, gbc.sp());
        EXPECT(0xed6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xed6d));
        // 88 02B3
        gbc.setState(0x7866, 0x9e34, 0x3ea0, 0x98e, 0xfa02, 0x1907, 0x1, 0x1);
        gbc.writeMem(0x7866, { 0x88 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9e34, gbc.sp());
        EXPECT(0x7867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02B4
        gbc.setState(0xb247, 0x9461, 0xe2e0, 0x43fa, 0xab66, 0xeda1, 0x0, 0x0);
        gbc.writeMem(0xb247, { 0x88 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9461, gbc.sp());
        EXPECT(0xb248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb247));
        // 88 02B5
        gbc.setState(0xb9ed, 0x4815, 0x4f20, 0x38f7, 0xef8b, 0xa315, 0x1, 0x1);
        gbc.writeMem(0xb9ed, { 0x88 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4815, gbc.sp());
        EXPECT(0xb9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb9ed));
        // 88 02B6
        gbc.setState(0xbb7d, 0x8197, 0x28f0, 0x7934, 0x4be7, 0x6566, 0x1, 0x1);
        gbc.writeMem(0xbb7d, { 0x88 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8197, gbc.sp());
        EXPECT(0xbb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbb7d));
        // 88 02B7
        gbc.setState(0x7012, 0x6e25, 0xfe00, 0xfd42, 0x8d4, 0x8744, 0x0, 0x0);
        gbc.writeMem(0x7012, { 0x88 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6e25, gbc.sp());
        EXPECT(0x7013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02B8
        gbc.setState(0x53f1, 0x24e, 0x7ba0, 0x2aec, 0xe552, 0xf5dd, 0x1, 0x1);
        gbc.writeMem(0x53f1, { 0x88 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x24e, gbc.sp());
        EXPECT(0x53f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02B9
        gbc.setState(0xa198, 0xe924, 0xf90, 0x6e29, 0xeee6, 0xfa64, 0x0, 0x1);
        gbc.writeMem(0xa198, { 0x88 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe924, gbc.sp());
        EXPECT(0xa199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa198));
        // 88 02BA
        gbc.setState(0x5bbe, 0xb0f2, 0xecf0, 0x966b, 0x5aea, 0x70b4, 0x1, 0x0);
        gbc.writeMem(0x5bbe, { 0x88 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb0f2, gbc.sp());
        EXPECT(0x5bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02BB
        gbc.setState(0x65a6, 0xd67c, 0x2c20, 0x1bbb, 0x9a6b, 0x8939, 0x0, 0x0);
        gbc.writeMem(0x65a6, { 0x88 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd67c, gbc.sp());
        EXPECT(0x65a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02BC
        gbc.setState(0x8bd7, 0x8edc, 0x8940, 0x80d6, 0x4dcb, 0x423b, 0x0, 0x0);
        gbc.writeMem(0x8bd7, { 0x88 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8edc, gbc.sp());
        EXPECT(0x8bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8bd7));
        // 88 02BD
        gbc.setState(0x37d3, 0x12b4, 0x5670, 0x7911, 0xbb4c, 0x43cf, 0x1, 0x0);
        gbc.writeMem(0x37d3, { 0x88 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x12b4, gbc.sp());
        EXPECT(0x37d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02BE
        gbc.setState(0x55b9, 0x4809, 0xce60, 0xabaa, 0x91a1, 0x8759, 0x0, 0x0);
        gbc.writeMem(0x55b9, { 0x88 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4809, gbc.sp());
        EXPECT(0x55ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02BF
        gbc.setState(0x99de, 0x14f8, 0xb510, 0x3497, 0x30e, 0x8960, 0x0, 0x1);
        gbc.writeMem(0x99de, { 0x88 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x14f8, gbc.sp());
        EXPECT(0x99df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x99de));
        // 88 02C1
        gbc.setState(0xba95, 0xacb0, 0x5850, 0x76fa, 0xc877, 0x6a6e, 0x1, 0x1);
        gbc.writeMem(0xba95, { 0x88 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xacb0, gbc.sp());
        EXPECT(0xba96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xba95));
        // 88 02C2
        gbc.setState(0x8fa2, 0x17ce, 0xcbf0, 0xd87a, 0x8263, 0xcdf7, 0x1, 0x1);
        gbc.writeMem(0x8fa2, { 0x88 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x17ce, gbc.sp());
        EXPECT(0x8fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8fa2));
        // 88 02C3
        gbc.setState(0x1f29, 0xdb24, 0xce70, 0xbfb9, 0x9fef, 0x328d, 0x1, 0x0);
        gbc.writeMem(0x1f29, { 0x88 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdb24, gbc.sp());
        EXPECT(0x1f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02C4
        gbc.setState(0x683, 0xe56d, 0x7fa0, 0xcbd1, 0x2714, 0xbae8, 0x0, 0x0);
        gbc.writeMem(0x683, { 0x88 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe56d, gbc.sp());
        EXPECT(0x684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02C5
        gbc.setState(0x5cf6, 0xf289, 0x5d30, 0xb706, 0x9f0e, 0xe786, 0x1, 0x0);
        gbc.writeMem(0x5cf6, { 0x88 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf289, gbc.sp());
        EXPECT(0x5cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02C6
        gbc.setState(0xb9fd, 0xbe36, 0x7280, 0x2850, 0xb8a0, 0x73a, 0x1, 0x1);
        gbc.writeMem(0xb9fd, { 0x88 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbe36, gbc.sp());
        EXPECT(0xb9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb9fd));
        // 88 02C7
        gbc.setState(0xb19a, 0x1d81, 0x9060, 0x5e02, 0x9fc1, 0xeb9f, 0x1, 0x0);
        gbc.writeMem(0xb19a, { 0x88 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1d81, gbc.sp());
        EXPECT(0xb19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb19a));
        // 88 02C8
        gbc.setState(0x3e4c, 0x996e, 0x9550, 0xf06, 0xcef2, 0x47d1, 0x0, 0x0);
        gbc.writeMem(0x3e4c, { 0x88 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x996e, gbc.sp());
        EXPECT(0x3e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02C9
        gbc.setState(0x2d25, 0x1fce, 0x4fe0, 0x992d, 0xeb99, 0xb2ae, 0x1, 0x1);
        gbc.writeMem(0x2d25, { 0x88 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1fce, gbc.sp());
        EXPECT(0x2d26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02CA
        gbc.setState(0x49a9, 0xf64b, 0xdc00, 0x4fd3, 0xc40b, 0x931c, 0x0, 0x1);
        gbc.writeMem(0x49a9, { 0x88 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf64b, gbc.sp());
        EXPECT(0x49aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02CB
        gbc.setState(0xcc12, 0x6692, 0xc2c0, 0x5ec0, 0x9193, 0x7bcf, 0x1, 0x1);
        gbc.writeMem(0xcc12, { 0x88 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6692, gbc.sp());
        EXPECT(0xcc13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcc12));
        // 88 02CD
        gbc.setState(0xa889, 0xa093, 0x4600, 0x73ea, 0x690d, 0x1937, 0x1, 0x0);
        gbc.writeMem(0xa889, { 0x88 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa093, gbc.sp());
        EXPECT(0xa88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa889));
        // 88 02CE
        gbc.setState(0x4133, 0x936d, 0x7ce0, 0x8821, 0xf020, 0xe8f8, 0x1, 0x1);
        gbc.writeMem(0x4133, { 0x88 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x936d, gbc.sp());
        EXPECT(0x4134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02CF
        gbc.setState(0xaa23, 0x156f, 0x3020, 0x87d4, 0x889a, 0x706a, 0x0, 0x0);
        gbc.writeMem(0xaa23, { 0x88 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x156f, gbc.sp());
        EXPECT(0xaa24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xaa23));
        // 88 02D0
        gbc.setState(0xe6fa, 0x814e, 0xe0c0, 0xca04, 0xd8f7, 0xa90a, 0x0, 0x0);
        gbc.writeMem(0xe6fa, { 0x88 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x814e, gbc.sp());
        EXPECT(0xe6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe6fa));
        // 88 02D1
        gbc.setState(0x6a39, 0xf951, 0x8640, 0x51f1, 0x595d, 0xc224, 0x0, 0x0);
        gbc.writeMem(0x6a39, { 0x88 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf951, gbc.sp());
        EXPECT(0x6a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02D2
        gbc.setState(0x820a, 0x1c00, 0xaef0, 0x1cf5, 0x4803, 0xec37, 0x1, 0x1);
        gbc.writeMem(0x820a, { 0x88 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1c00, gbc.sp());
        EXPECT(0x820b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x820a));
        // 88 02D3
        gbc.setState(0xc5ad, 0x730, 0x2ee0, 0x2aea, 0x51c, 0xad87, 0x0, 0x1);
        gbc.writeMem(0xc5ad, { 0x88 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x730, gbc.sp());
        EXPECT(0xc5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc5ad));
        // 88 02D5
        gbc.setState(0xdf70, 0x85ce, 0x870, 0x5b1f, 0xf3a5, 0x9cd8, 0x0, 0x1);
        gbc.writeMem(0xdf70, { 0x88 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x85ce, gbc.sp());
        EXPECT(0xdf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xdf70));
        // 88 02D6
        gbc.setState(0x5523, 0xcbd2, 0x6f50, 0x58af, 0x6337, 0x9f2, 0x1, 0x0);
        gbc.writeMem(0x5523, { 0x88 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcbd2, gbc.sp());
        EXPECT(0x5524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02D7
        gbc.setState(0x72d8, 0xb6ce, 0x2830, 0xb121, 0xe205, 0x6371, 0x0, 0x1);
        gbc.writeMem(0x72d8, { 0x88 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb6ce, gbc.sp());
        EXPECT(0x72d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02D8
        gbc.setState(0x9064, 0x155c, 0x7950, 0x5d58, 0x803c, 0xddd4, 0x0, 0x1);
        gbc.writeMem(0x9064, { 0x88 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x155c, gbc.sp());
        EXPECT(0x9065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9064));
        // 88 02D9
        gbc.setState(0xe178, 0xa731, 0x7870, 0x1e3c, 0x978e, 0xe9a0, 0x1, 0x1);
        gbc.writeMem(0xe178, { 0x88 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa731, gbc.sp());
        EXPECT(0xe179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe178));
        // 88 02DB
        gbc.setState(0xe99f, 0x211f, 0x7aa0, 0x7fb9, 0x435a, 0xe29c, 0x1, 0x1);
        gbc.writeMem(0xe99f, { 0x88 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x211f, gbc.sp());
        EXPECT(0xe9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe99f));
        // 88 02DC
        gbc.setState(0x8ac4, 0xd7d9, 0x1580, 0xc53b, 0x9499, 0xdce2, 0x0, 0x1);
        gbc.writeMem(0x8ac4, { 0x88 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd7d9, gbc.sp());
        EXPECT(0x8ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8ac4));
        // 88 02DD
        gbc.setState(0x8498, 0x6510, 0xdda0, 0x5e23, 0x46ac, 0x3609, 0x1, 0x0);
        gbc.writeMem(0x8498, { 0x88 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6510, gbc.sp());
        EXPECT(0x8499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8498));
        // 88 02DE
        gbc.setState(0xe049, 0x2fce, 0x42c0, 0x2cd7, 0xdfb8, 0x5898, 0x1, 0x1);
        gbc.writeMem(0xe049, { 0x88 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2fce, gbc.sp());
        EXPECT(0xe04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe049));
        // 88 02DF
        gbc.setState(0x1a56, 0x87e0, 0xd9e0, 0xc70f, 0xc1bd, 0xd8, 0x0, 0x0);
        gbc.writeMem(0x1a56, { 0x88 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x87e0, gbc.sp());
        EXPECT(0x1a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02E0
        gbc.setState(0x6ac7, 0x6a65, 0x9370, 0x72a, 0x3fc5, 0x1b8e, 0x1, 0x1);
        gbc.writeMem(0x6ac7, { 0x88 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6a65, gbc.sp());
        EXPECT(0x6ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02E1
        gbc.setState(0x879d, 0x8484, 0x76c0, 0xb5c8, 0x8d36, 0xad0a, 0x1, 0x0);
        gbc.writeMem(0x879d, { 0x88 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8484, gbc.sp());
        EXPECT(0x879e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x879d));
        // 88 02E2
        gbc.setState(0x784f, 0x893, 0xac70, 0xe2e8, 0x8da2, 0x52f0, 0x0, 0x0);
        gbc.writeMem(0x784f, { 0x88 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x893, gbc.sp());
        EXPECT(0x7850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02E3
        gbc.setState(0xa975, 0x547e, 0x1360, 0x93b6, 0x67e3, 0xd0d2, 0x0, 0x0);
        gbc.writeMem(0xa975, { 0x88 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x547e, gbc.sp());
        EXPECT(0xa976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa975));
        // 88 02E4
        gbc.setState(0x7b04, 0xbf40, 0x4450, 0x1851, 0x2456, 0x84a0, 0x0, 0x0);
        gbc.writeMem(0x7b04, { 0x88 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbf40, gbc.sp());
        EXPECT(0x7b05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02E5
        gbc.setState(0xb1d2, 0xa808, 0xa370, 0x99f6, 0x2837, 0xaed8, 0x1, 0x0);
        gbc.writeMem(0xb1d2, { 0x88 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa808, gbc.sp());
        EXPECT(0xb1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb1d2));
        // 88 02E6
        gbc.setState(0xe52f, 0xa6ea, 0xd730, 0xc7f2, 0x4f09, 0xf93e, 0x0, 0x0);
        gbc.writeMem(0xe52f, { 0x88 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa6ea, gbc.sp());
        EXPECT(0xe530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe52f));
        // 88 02E7
        gbc.setState(0x3643, 0x60eb, 0xd610, 0xd157, 0xcf5e, 0x14fe, 0x1, 0x1);
        gbc.writeMem(0x3643, { 0x88 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x60eb, gbc.sp());
        EXPECT(0x3644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02E8
        gbc.setState(0xc409, 0x6281, 0x5530, 0xadd0, 0xfc68, 0x425d, 0x1, 0x1);
        gbc.writeMem(0xc409, { 0x88 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6281, gbc.sp());
        EXPECT(0xc40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc409));
        // 88 02E9
        gbc.setState(0x8c81, 0xb5fd, 0x5660, 0xd318, 0xedd0, 0xa4d, 0x1, 0x0);
        gbc.writeMem(0x8c81, { 0x88 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb5fd, gbc.sp());
        EXPECT(0x8c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8c81));
        // 88 02EA
        gbc.setState(0x69cc, 0x4b12, 0x7320, 0x6722, 0xcce, 0xe614, 0x1, 0x0);
        gbc.writeMem(0x69cc, { 0x88 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4b12, gbc.sp());
        EXPECT(0x69cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02EB
        gbc.setState(0xa1eb, 0x7f9f, 0xd920, 0x5c54, 0x36c6, 0xab72, 0x1, 0x1);
        gbc.writeMem(0xa1eb, { 0x88 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7f9f, gbc.sp());
        EXPECT(0xa1ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa1eb));
        // 88 02EC
        gbc.setState(0xc8f4, 0x937a, 0x2070, 0xacbc, 0x9cf9, 0x561, 0x1, 0x0);
        gbc.writeMem(0xc8f4, { 0x88 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x937a, gbc.sp());
        EXPECT(0xc8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc8f4));
        // 88 02ED
        gbc.setState(0xc9b7, 0x23c6, 0x8f00, 0xa3eb, 0xc8d7, 0xb304, 0x1, 0x0);
        gbc.writeMem(0xc9b7, { 0x88 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x23c6, gbc.sp());
        EXPECT(0xc9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc9b7));
        // 88 02EE
        gbc.setState(0x8107, 0x3ed7, 0x9060, 0x73e8, 0x9c51, 0x290f, 0x0, 0x0);
        gbc.writeMem(0x8107, { 0x88 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3ed7, gbc.sp());
        EXPECT(0x8108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8107));
        // 88 02EF
        gbc.setState(0xe3f4, 0xce01, 0xc160, 0xd077, 0xea0d, 0x31f, 0x1, 0x1);
        gbc.writeMem(0xe3f4, { 0x88 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xce01, gbc.sp());
        EXPECT(0xe3f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe3f4));
        // 88 02F0
        gbc.setState(0xe341, 0xd211, 0x6a30, 0x6846, 0xbaab, 0x4dd5, 0x1, 0x0);
        gbc.writeMem(0xe341, { 0x88 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd211, gbc.sp());
        EXPECT(0xe342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe341));
        // 88 02F1
        gbc.setState(0xe3b9, 0xcca2, 0x27b0, 0x33e6, 0x8754, 0xcc44, 0x0, 0x0);
        gbc.writeMem(0xe3b9, { 0x88 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcca2, gbc.sp());
        EXPECT(0xe3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe3b9));
        // 88 02F2
        gbc.setState(0xed75, 0x6c10, 0x6030, 0x3634, 0x19e0, 0x2607, 0x0, 0x0);
        gbc.writeMem(0xed75, { 0x88 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6c10, gbc.sp());
        EXPECT(0xed76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xed75));
        // 88 02F3
        gbc.setState(0xa27, 0x2df4, 0xec50, 0xa951, 0xb8a7, 0x100b, 0x0, 0x1);
        gbc.writeMem(0xa27, { 0x88 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2df4, gbc.sp());
        EXPECT(0xa28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02F4
        gbc.setState(0x83ac, 0x910f, 0xb320, 0x3aed, 0x779d, 0x4202, 0x1, 0x0);
        gbc.writeMem(0x83ac, { 0x88 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x910f, gbc.sp());
        EXPECT(0x83ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x83ac));
        // 88 02F5
        gbc.setState(0x7397, 0xaba4, 0x4b90, 0x2194, 0x4c76, 0x898b, 0x1, 0x1);
        gbc.writeMem(0x7397, { 0x88 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xaba4, gbc.sp());
        EXPECT(0x7398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02F6
        gbc.setState(0x67fc, 0xe2a, 0x25a0, 0x1f62, 0x59f6, 0xc43e, 0x0, 0x0);
        gbc.writeMem(0x67fc, { 0x88 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe2a, gbc.sp());
        EXPECT(0x67fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02F7
        gbc.setState(0x79e7, 0x8279, 0xaf40, 0xa05c, 0xb599, 0x11f7, 0x1, 0x1);
        gbc.writeMem(0x79e7, { 0x88 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8279, gbc.sp());
        EXPECT(0x79e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02F8
        gbc.setState(0x12f4, 0x8245, 0xc6f0, 0x1015, 0x8d65, 0xd795, 0x1, 0x1);
        gbc.writeMem(0x12f4, { 0x88 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8245, gbc.sp());
        EXPECT(0x12f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02F9
        gbc.setState(0x219a, 0xa4fd, 0x38d0, 0xbd84, 0xcc3b, 0x9759, 0x1, 0x0);
        gbc.writeMem(0x219a, { 0x88 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa4fd, gbc.sp());
        EXPECT(0x219b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02FA
        gbc.setState(0xf9e, 0xa2e9, 0x1a20, 0xfa81, 0x5d74, 0x2556, 0x1, 0x1);
        gbc.writeMem(0xf9e, { 0x88 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa2e9, gbc.sp());
        EXPECT(0xf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02FB
        gbc.setState(0x4dbb, 0xa5c3, 0x5bf0, 0x6190, 0x18f8, 0xba39, 0x1, 0x1);
        gbc.writeMem(0x4dbb, { 0x88 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa5c3, gbc.sp());
        EXPECT(0x4dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02FC
        gbc.setState(0x3b72, 0xe570, 0x8eb0, 0xa70b, 0x9efd, 0x93be, 0x0, 0x1);
        gbc.writeMem(0x3b72, { 0x88 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe570, gbc.sp());
        EXPECT(0x3b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 02FD
        gbc.setState(0x7a01, 0x1139, 0x46b0, 0x6894, 0xf18c, 0x32e6, 0x1, 0x0);
        gbc.writeMem(0x7a01, { 0x88 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1139, gbc.sp());
        EXPECT(0x7a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02FE
        gbc.setState(0x2f89, 0xad3d, 0xef60, 0x3ff, 0x5951, 0x25da, 0x1, 0x0);
        gbc.writeMem(0x2f89, { 0x88 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xad3d, gbc.sp());
        EXPECT(0x2f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 02FF
        gbc.setState(0x7eaf, 0x1992, 0x9ed0, 0x5c92, 0x6b46, 0x2e23, 0x1, 0x1);
        gbc.writeMem(0x7eaf, { 0x88 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1992, gbc.sp());
        EXPECT(0x7eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0300
        gbc.setState(0x6aa0, 0x9e4d, 0xf950, 0xb0b9, 0xbf9, 0xeb79, 0x0, 0x1);
        gbc.writeMem(0x6aa0, { 0x88 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9e4d, gbc.sp());
        EXPECT(0x6aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0301
        gbc.setState(0x1227, 0xa79f, 0x24d0, 0xd5da, 0x642a, 0x609f, 0x1, 0x1);
        gbc.writeMem(0x1227, { 0x88 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa79f, gbc.sp());
        EXPECT(0x1228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0302
        gbc.setState(0x8c89, 0x5ae3, 0x7b0, 0x5f02, 0x3a0b, 0x6d3c, 0x1, 0x0);
        gbc.writeMem(0x8c89, { 0x88 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5ae3, gbc.sp());
        EXPECT(0x8c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8c89));
        // 88 0303
        gbc.setState(0x188b, 0x9d9b, 0x5ff0, 0x8ffb, 0x68e9, 0xd786, 0x0, 0x1);
        gbc.writeMem(0x188b, { 0x88 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9d9b, gbc.sp());
        EXPECT(0x188c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0304
        gbc.setState(0x215b, 0xf164, 0xa5b0, 0x59d9, 0xe9a4, 0x83fa, 0x1, 0x0);
        gbc.writeMem(0x215b, { 0x88 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf164, gbc.sp());
        EXPECT(0x215c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0305
        gbc.setState(0xba50, 0x4e07, 0xa750, 0x4780, 0x9fb, 0xdfe3, 0x0, 0x0);
        gbc.writeMem(0xba50, { 0x88 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4e07, gbc.sp());
        EXPECT(0xba51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xba50));
        // 88 0306
        gbc.setState(0xd30, 0x60f1, 0xff60, 0xac53, 0x4ecf, 0x222c, 0x0, 0x1);
        gbc.writeMem(0xd30, { 0x88 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x60f1, gbc.sp());
        EXPECT(0xd31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0307
        gbc.setState(0x4707, 0xd439, 0xd4b0, 0x99c9, 0xd752, 0x4bc5, 0x0, 0x0);
        gbc.writeMem(0x4707, { 0x88 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd439, gbc.sp());
        EXPECT(0x4708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0308
        gbc.setState(0x60d2, 0x6c2d, 0x7490, 0x1aae, 0x9874, 0x27e2, 0x0, 0x1);
        gbc.writeMem(0x60d2, { 0x88 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6c2d, gbc.sp());
        EXPECT(0x60d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0309
        gbc.setState(0xe81, 0xa41f, 0xdc0, 0x89c3, 0xb9e8, 0x9189, 0x1, 0x1);
        gbc.writeMem(0xe81, { 0x88 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa41f, gbc.sp());
        EXPECT(0xe82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 030A
        gbc.setState(0xcc4d, 0xee20, 0x65f0, 0x1b14, 0xf7d2, 0x82fe, 0x1, 0x1);
        gbc.writeMem(0xcc4d, { 0x88 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xee20, gbc.sp());
        EXPECT(0xcc4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcc4d));
        // 88 030B
        gbc.setState(0x8f7e, 0xe0a4, 0xc8a0, 0xe0a5, 0x43ef, 0x2b80, 0x0, 0x0);
        gbc.writeMem(0x8f7e, { 0x88 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe0a4, gbc.sp());
        EXPECT(0x8f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8f7e));
        // 88 030C
        gbc.setState(0x5071, 0xc0c0, 0xa3b0, 0xa273, 0x8d85, 0x9122, 0x0, 0x0);
        gbc.writeMem(0x5071, { 0x88 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc0c0, gbc.sp());
        EXPECT(0x5072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 030D
        gbc.setState(0x83ad, 0xcda3, 0x97f0, 0x18a2, 0x4a79, 0x4c0b, 0x1, 0x1);
        gbc.writeMem(0x83ad, { 0x88 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcda3, gbc.sp());
        EXPECT(0x83ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x83ad));
        // 88 030E
        gbc.setState(0xd002, 0x65c3, 0xbaf0, 0xac7f, 0x38a8, 0x8665, 0x1, 0x1);
        gbc.writeMem(0xd002, { 0x88 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x65c3, gbc.sp());
        EXPECT(0xd003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd002));
        // 88 030F
        gbc.setState(0x16fd, 0x92e9, 0x2400, 0x8183, 0xb190, 0xd7e8, 0x1, 0x1);
        gbc.writeMem(0x16fd, { 0x88 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x92e9, gbc.sp());
        EXPECT(0x16fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0310
        gbc.setState(0x1760, 0xbd41, 0xb320, 0xd467, 0x48a5, 0x87f3, 0x0, 0x1);
        gbc.writeMem(0x1760, { 0x88 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbd41, gbc.sp());
        EXPECT(0x1761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0311
        gbc.setState(0xd812, 0x8cfd, 0xf110, 0xebb1, 0x68bf, 0x19db, 0x1, 0x1);
        gbc.writeMem(0xd812, { 0x88 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8cfd, gbc.sp());
        EXPECT(0xd813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd812));
        // 88 0312
        gbc.setState(0x7750, 0x80d2, 0x9610, 0x52fb, 0x404f, 0x9083, 0x0, 0x0);
        gbc.writeMem(0x7750, { 0x88 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x80d2, gbc.sp());
        EXPECT(0x7751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0313
        gbc.setState(0xd0f2, 0x9643, 0x2720, 0x9050, 0x4d37, 0xf4e, 0x0, 0x0);
        gbc.writeMem(0xd0f2, { 0x88 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9643, gbc.sp());
        EXPECT(0xd0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd0f2));
        // 88 0314
        gbc.setState(0xcf2f, 0x1380, 0x5130, 0x4f7, 0x84a6, 0x8dac, 0x1, 0x1);
        gbc.writeMem(0xcf2f, { 0x88 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1380, gbc.sp());
        EXPECT(0xcf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcf2f));
        // 88 0315
        gbc.setState(0xa185, 0xdb5, 0x310, 0x3c51, 0x4b8, 0x89f6, 0x1, 0x1);
        gbc.writeMem(0xa185, { 0x88 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdb5, gbc.sp());
        EXPECT(0xa186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa185));
        // 88 0316
        gbc.setState(0x16a3, 0x9c7a, 0xe40, 0x1f49, 0x6d3, 0xbe67, 0x1, 0x0);
        gbc.writeMem(0x16a3, { 0x88 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9c7a, gbc.sp());
        EXPECT(0x16a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0318
        gbc.setState(0xa413, 0x5dd8, 0xbdd0, 0x3d15, 0xbb99, 0xa1bf, 0x0, 0x1);
        gbc.writeMem(0xa413, { 0x88 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5dd8, gbc.sp());
        EXPECT(0xa414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa413));
        // 88 0319
        gbc.setState(0x6070, 0x629a, 0x38e0, 0x35b7, 0xa8f2, 0xd516, 0x1, 0x0);
        gbc.writeMem(0x6070, { 0x88 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x629a, gbc.sp());
        EXPECT(0x6071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 031A
        gbc.setState(0x2448, 0xc542, 0xb030, 0xdd34, 0xd4f7, 0x4642, 0x1, 0x0);
        gbc.writeMem(0x2448, { 0x88 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc542, gbc.sp());
        EXPECT(0x2449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 031B
        gbc.setState(0x5080, 0x1dc5, 0x6690, 0x4e7e, 0x2bee, 0x6478, 0x1, 0x0);
        gbc.writeMem(0x5080, { 0x88 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1dc5, gbc.sp());
        EXPECT(0x5081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 031C
        gbc.setState(0x1a98, 0x28e, 0x55b0, 0xfbe0, 0xc59e, 0x3e86, 0x1, 0x0);
        gbc.writeMem(0x1a98, { 0x88 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x28e, gbc.sp());
        EXPECT(0x1a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 031D
        gbc.setState(0x4b2c, 0xbbe3, 0x7770, 0xf13, 0xbe70, 0x43d3, 0x1, 0x1);
        gbc.writeMem(0x4b2c, { 0x88 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbbe3, gbc.sp());
        EXPECT(0x4b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 031E
        gbc.setState(0x21fd, 0x9ccc, 0x69f0, 0x70dc, 0x1ee8, 0xd50c, 0x1, 0x0);
        gbc.writeMem(0x21fd, { 0x88 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9ccc, gbc.sp());
        EXPECT(0x21fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 031F
        gbc.setState(0x2cb, 0xc150, 0x95d0, 0x71a4, 0x5b52, 0x4d4, 0x0, 0x1);
        gbc.writeMem(0x2cb, { 0x88 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc150, gbc.sp());
        EXPECT(0x2cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0320
        gbc.setState(0xe4f8, 0xf8b9, 0x22e0, 0x140d, 0xe69b, 0x8f68, 0x0, 0x1);
        gbc.writeMem(0xe4f8, { 0x88 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf8b9, gbc.sp());
        EXPECT(0xe4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe4f8));
        // 88 0322
        gbc.setState(0xe82c, 0xed8b, 0x2290, 0x73c, 0x97f1, 0x54b3, 0x0, 0x1);
        gbc.writeMem(0xe82c, { 0x88 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xed8b, gbc.sp());
        EXPECT(0xe82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe82c));
        // 88 0324
        gbc.setState(0x299b, 0xc926, 0xa000, 0x1eeb, 0x2949, 0xb76d, 0x1, 0x1);
        gbc.writeMem(0x299b, { 0x88 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc926, gbc.sp());
        EXPECT(0x299c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0325
        gbc.setState(0x573d, 0xa95c, 0xf080, 0x20b9, 0x65b3, 0x4ba9, 0x1, 0x0);
        gbc.writeMem(0x573d, { 0x88 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa95c, gbc.sp());
        EXPECT(0x573e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0326
        gbc.setState(0x570a, 0x4e88, 0xb1d0, 0xcb1f, 0x8f47, 0xa8f, 0x1, 0x0);
        gbc.writeMem(0x570a, { 0x88 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4e88, gbc.sp());
        EXPECT(0x570b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0327
        gbc.setState(0x3767, 0x472e, 0x5e60, 0x5e5e, 0x7707, 0xb003, 0x1, 0x1);
        gbc.writeMem(0x3767, { 0x88 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x472e, gbc.sp());
        EXPECT(0x3768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0328
        gbc.setState(0x5c33, 0xc35b, 0xff20, 0xc423, 0xbbf8, 0xa0cc, 0x0, 0x0);
        gbc.writeMem(0x5c33, { 0x88 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc35b, gbc.sp());
        EXPECT(0x5c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0329
        gbc.setState(0x687c, 0x7675, 0x6900, 0xf6a9, 0x9f92, 0xc700, 0x0, 0x0);
        gbc.writeMem(0x687c, { 0x88 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7675, gbc.sp());
        EXPECT(0x687d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 032A
        gbc.setState(0xbb65, 0xbe26, 0x86e0, 0xba1b, 0x5d90, 0xf23d, 0x1, 0x1);
        gbc.writeMem(0xbb65, { 0x88 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbe26, gbc.sp());
        EXPECT(0xbb66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbb65));
        // 88 032B
        gbc.setState(0x2451, 0x2363, 0xcd60, 0xca6d, 0x4dfc, 0x2044, 0x0, 0x1);
        gbc.writeMem(0x2451, { 0x88 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2363, gbc.sp());
        EXPECT(0x2452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 032C
        gbc.setState(0x4abc, 0xa0cd, 0xf410, 0x350, 0x852e, 0xb8eb, 0x1, 0x0);
        gbc.writeMem(0x4abc, { 0x88 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa0cd, gbc.sp());
        EXPECT(0x4abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 032D
        gbc.setState(0x7ca7, 0x9524, 0x3fa0, 0x73ed, 0xdb9f, 0xa1af, 0x1, 0x1);
        gbc.writeMem(0x7ca7, { 0x88 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9524, gbc.sp());
        EXPECT(0x7ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 032E
        gbc.setState(0xeffb, 0x2ddf, 0x6000, 0xab44, 0x5eae, 0x3e5f, 0x1, 0x1);
        gbc.writeMem(0xeffb, { 0x88 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2ddf, gbc.sp());
        EXPECT(0xeffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xeffb));
        // 88 032F
        gbc.setState(0x41da, 0x7fa5, 0x6ae0, 0xa95f, 0xd35d, 0xfab2, 0x1, 0x1);
        gbc.writeMem(0x41da, { 0x88 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7fa5, gbc.sp());
        EXPECT(0x41db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0330
        gbc.setState(0xb51b, 0x1bdf, 0xe230, 0x70f5, 0x483a, 0x50e2, 0x0, 0x1);
        gbc.writeMem(0xb51b, { 0x88 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1bdf, gbc.sp());
        EXPECT(0xb51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb51b));
        // 88 0331
        gbc.setState(0x6b03, 0xf6d7, 0x4c10, 0xc31e, 0x8583, 0x9aae, 0x1, 0x0);
        gbc.writeMem(0x6b03, { 0x88 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf6d7, gbc.sp());
        EXPECT(0x6b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0332
        gbc.setState(0xebc7, 0x1174, 0x20a0, 0xdd95, 0xa1dd, 0x408a, 0x0, 0x0);
        gbc.writeMem(0xebc7, { 0x88 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1174, gbc.sp());
        EXPECT(0xebc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xebc7));
        // 88 0333
        gbc.setState(0x74d2, 0xb04e, 0x7290, 0x229c, 0x2071, 0x9a93, 0x0, 0x0);
        gbc.writeMem(0x74d2, { 0x88 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb04e, gbc.sp());
        EXPECT(0x74d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0334
        gbc.setState(0x6ca2, 0x995a, 0xf20, 0x98b9, 0x2368, 0x7f13, 0x0, 0x1);
        gbc.writeMem(0x6ca2, { 0x88 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x995a, gbc.sp());
        EXPECT(0x6ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0335
        gbc.setState(0x7ee0, 0xed97, 0x8570, 0xa18d, 0xa2c6, 0xd9a0, 0x1, 0x0);
        gbc.writeMem(0x7ee0, { 0x88 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xed97, gbc.sp());
        EXPECT(0x7ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0336
        gbc.setState(0xb522, 0x14e3, 0xe3f0, 0x9c2b, 0x857b, 0xa682, 0x1, 0x1);
        gbc.writeMem(0xb522, { 0x88 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x14e3, gbc.sp());
        EXPECT(0xb523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb522));
        // 88 0337
        gbc.setState(0x833b, 0x5203, 0xb240, 0xff29, 0xa6b4, 0xb3e6, 0x0, 0x0);
        gbc.writeMem(0x833b, { 0x88 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5203, gbc.sp());
        EXPECT(0x833c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x833b));
        // 88 0338
        gbc.setState(0xe961, 0x9b89, 0xcd90, 0xfb34, 0xa151, 0xc45, 0x1, 0x1);
        gbc.writeMem(0xe961, { 0x88 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9b89, gbc.sp());
        EXPECT(0xe962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe961));
        // 88 0339
        gbc.setState(0xb2f3, 0x2202, 0x2ff0, 0xd7e3, 0xee83, 0xe512, 0x1, 0x0);
        gbc.writeMem(0xb2f3, { 0x88 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2202, gbc.sp());
        EXPECT(0xb2f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb2f3));
        // 88 033A
        gbc.setState(0x3c16, 0xcd34, 0xc160, 0x5971, 0x6c78, 0x47f7, 0x1, 0x1);
        gbc.writeMem(0x3c16, { 0x88 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcd34, gbc.sp());
        EXPECT(0x3c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 033B
        gbc.setState(0x5492, 0x634, 0x6540, 0xc2b8, 0xe222, 0x7769, 0x1, 0x0);
        gbc.writeMem(0x5492, { 0x88 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x634, gbc.sp());
        EXPECT(0x5493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 033C
        gbc.setState(0x94f, 0xd3ae, 0xe120, 0x59af, 0x3bed, 0x76aa, 0x0, 0x0);
        gbc.writeMem(0x94f, { 0x88 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd3ae, gbc.sp());
        EXPECT(0x950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 033D
        gbc.setState(0x651b, 0xc108, 0x6960, 0x8e28, 0x2180, 0x934b, 0x0, 0x1);
        gbc.writeMem(0x651b, { 0x88 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc108, gbc.sp());
        EXPECT(0x651c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 033E
        gbc.setState(0xb67b, 0xb61d, 0xfdd0, 0xba55, 0xabcb, 0x7be3, 0x1, 0x0);
        gbc.writeMem(0xb67b, { 0x88 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb61d, gbc.sp());
        EXPECT(0xb67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb67b));
        // 88 033F
        gbc.setState(0x74ce, 0xeb1a, 0xc260, 0x11be, 0x18f2, 0xeba7, 0x1, 0x1);
        gbc.writeMem(0x74ce, { 0x88 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xeb1a, gbc.sp());
        EXPECT(0x74cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0340
        gbc.setState(0x99b8, 0x211f, 0x71b0, 0x6086, 0x5164, 0xa7a2, 0x1, 0x1);
        gbc.writeMem(0x99b8, { 0x88 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x211f, gbc.sp());
        EXPECT(0x99b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x99b8));
        // 88 0341
        gbc.setState(0x3975, 0x3844, 0x7640, 0xfcf0, 0xd6de, 0x2af3, 0x0, 0x1);
        gbc.writeMem(0x3975, { 0x88 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3844, gbc.sp());
        EXPECT(0x3976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0342
        gbc.setState(0x9b0e, 0x1bc3, 0x49e0, 0xb13b, 0x9d8f, 0xabaa, 0x1, 0x1);
        gbc.writeMem(0x9b0e, { 0x88 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1bc3, gbc.sp());
        EXPECT(0x9b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9b0e));
        // 88 0343
        gbc.setState(0xa7a2, 0x2cc5, 0xd440, 0x8987, 0x1839, 0x1c18, 0x0, 0x1);
        gbc.writeMem(0xa7a2, { 0x88 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2cc5, gbc.sp());
        EXPECT(0xa7a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa7a2));
        // 88 0344
        gbc.setState(0x590e, 0x9149, 0xd5c0, 0xc936, 0x8d8, 0x306b, 0x1, 0x0);
        gbc.writeMem(0x590e, { 0x88 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9149, gbc.sp());
        EXPECT(0x590f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0345
        gbc.setState(0xecdc, 0xd8d5, 0x6a30, 0x2a8a, 0x9ced, 0x7d1d, 0x0, 0x1);
        gbc.writeMem(0xecdc, { 0x88 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd8d5, gbc.sp());
        EXPECT(0xecdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xecdc));
        // 88 0346
        gbc.setState(0x9a7c, 0x87d6, 0x18d0, 0xd36e, 0x1a04, 0xd509, 0x0, 0x1);
        gbc.writeMem(0x9a7c, { 0x88 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x87d6, gbc.sp());
        EXPECT(0x9a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9a7c));
        // 88 0347
        gbc.setState(0x1b72, 0xbef8, 0x6970, 0xc935, 0xb3be, 0xe63a, 0x0, 0x0);
        gbc.writeMem(0x1b72, { 0x88 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbef8, gbc.sp());
        EXPECT(0x1b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0348
        gbc.setState(0x249, 0x8b79, 0xf60, 0x77f3, 0x3d9b, 0x27dd, 0x1, 0x0);
        gbc.writeMem(0x249, { 0x88 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8b79, gbc.sp());
        EXPECT(0x24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0349
        gbc.setState(0x4e6, 0x7c7d, 0x9980, 0xdc1c, 0x8dd6, 0xdf5d, 0x0, 0x1);
        gbc.writeMem(0x4e6, { 0x88 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7c7d, gbc.sp());
        EXPECT(0x4e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 034A
        gbc.setState(0x62b4, 0xf077, 0xbd40, 0x78eb, 0x7d7c, 0xe87c, 0x0, 0x0);
        gbc.writeMem(0x62b4, { 0x88 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf077, gbc.sp());
        EXPECT(0x62b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 034B
        gbc.setState(0x9a66, 0xf4b5, 0x2c20, 0x4596, 0x173b, 0x3506, 0x0, 0x0);
        gbc.writeMem(0x9a66, { 0x88 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf4b5, gbc.sp());
        EXPECT(0x9a67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9a66));
        // 88 034C
        gbc.setState(0x4f95, 0x966c, 0xdc20, 0x29de, 0xd50, 0xecf1, 0x0, 0x0);
        gbc.writeMem(0x4f95, { 0x88 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x966c, gbc.sp());
        EXPECT(0x4f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 034D
        gbc.setState(0xe574, 0x233c, 0x50d0, 0x94bf, 0x180, 0x604e, 0x1, 0x0);
        gbc.writeMem(0xe574, { 0x88 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x233c, gbc.sp());
        EXPECT(0xe575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe574));
        // 88 034E
        gbc.setState(0xe6a4, 0xf312, 0x30f0, 0xa28a, 0x5c93, 0x68e1, 0x0, 0x1);
        gbc.writeMem(0xe6a4, { 0x88 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf312, gbc.sp());
        EXPECT(0xe6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe6a4));
        // 88 034F
        gbc.setState(0x12d8, 0xd208, 0x3bb0, 0xaf4, 0x7a6e, 0xb539, 0x0, 0x0);
        gbc.writeMem(0x12d8, { 0x88 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd208, gbc.sp());
        EXPECT(0x12d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0350
        gbc.setState(0x51a4, 0x7faf, 0xb410, 0x2edb, 0x3b47, 0xeb35, 0x1, 0x1);
        gbc.writeMem(0x51a4, { 0x88 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7faf, gbc.sp());
        EXPECT(0x51a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0352
        gbc.setState(0x31e9, 0xe271, 0xa9f0, 0x83a3, 0x3250, 0xd067, 0x0, 0x1);
        gbc.writeMem(0x31e9, { 0x88 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe271, gbc.sp());
        EXPECT(0x31ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0353
        gbc.setState(0x3a5a, 0xc7c6, 0x7c20, 0x26ca, 0xe78a, 0xba34, 0x0, 0x1);
        gbc.writeMem(0x3a5a, { 0x88 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc7c6, gbc.sp());
        EXPECT(0x3a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0354
        gbc.setState(0x3847, 0x3930, 0xede0, 0xd830, 0xd6fc, 0x65b4, 0x1, 0x1);
        gbc.writeMem(0x3847, { 0x88 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3930, gbc.sp());
        EXPECT(0x3848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0355
        gbc.setState(0x85fa, 0xf0b5, 0x9c90, 0x1ab7, 0xb23, 0x475d, 0x0, 0x1);
        gbc.writeMem(0x85fa, { 0x88 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf0b5, gbc.sp());
        EXPECT(0x85fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x85fa));
        // 88 0356
        gbc.setState(0x6d1f, 0x349b, 0xfa0, 0xa2fd, 0x14ea, 0xfee6, 0x0, 0x0);
        gbc.writeMem(0x6d1f, { 0x88 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x349b, gbc.sp());
        EXPECT(0x6d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0357
        gbc.setState(0x18d4, 0xfd96, 0x8e70, 0x93e9, 0xb8e5, 0x35cb, 0x1, 0x0);
        gbc.writeMem(0x18d4, { 0x88 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfd96, gbc.sp());
        EXPECT(0x18d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0358
        gbc.setState(0xd9c4, 0xe87a, 0x6050, 0x9ba4, 0x842b, 0xce97, 0x0, 0x1);
        gbc.writeMem(0xd9c4, { 0x88 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe87a, gbc.sp());
        EXPECT(0xd9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd9c4));
        // 88 0359
        gbc.setState(0xa4a, 0xcdbc, 0xffe0, 0x6584, 0xe6e9, 0xb4d5, 0x1, 0x0);
        gbc.writeMem(0xa4a, { 0x88 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcdbc, gbc.sp());
        EXPECT(0xa4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 035A
        gbc.setState(0x22e1, 0xa78f, 0x15d0, 0xf8d8, 0x8828, 0x8904, 0x1, 0x1);
        gbc.writeMem(0x22e1, { 0x88 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa78f, gbc.sp());
        EXPECT(0x22e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 035B
        gbc.setState(0xc29b, 0x5a4f, 0x3d60, 0xc20c, 0x7cb2, 0x38a4, 0x1, 0x0);
        gbc.writeMem(0xc29b, { 0x88 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5a4f, gbc.sp());
        EXPECT(0xc29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc29b));
        // 88 035C
        gbc.setState(0xc227, 0x7776, 0x61c0, 0x54a2, 0xa99a, 0xf715, 0x0, 0x0);
        gbc.writeMem(0xc227, { 0x88 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7776, gbc.sp());
        EXPECT(0xc228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc227));
        // 88 035D
        gbc.setState(0xd37d, 0x2963, 0x6180, 0x3490, 0xd225, 0x4b55, 0x1, 0x1);
        gbc.writeMem(0xd37d, { 0x88 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2963, gbc.sp());
        EXPECT(0xd37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd37d));
        // 88 035F
        gbc.setState(0xefeb, 0xaf66, 0xb210, 0xffe4, 0xf7bd, 0xfe4e, 0x1, 0x1);
        gbc.writeMem(0xefeb, { 0x88 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaf66, gbc.sp());
        EXPECT(0xefec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xefeb));
        // 88 0360
        gbc.setState(0xbaf8, 0xea0a, 0xf1e0, 0xea82, 0x84d4, 0x8b1d, 0x0, 0x0);
        gbc.writeMem(0xbaf8, { 0x88 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xea0a, gbc.sp());
        EXPECT(0xbaf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbaf8));
        // 88 0361
        gbc.setState(0xc8a5, 0x5a8a, 0x49d0, 0x95be, 0x7a93, 0xd275, 0x0, 0x1);
        gbc.writeMem(0xc8a5, { 0x88 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5a8a, gbc.sp());
        EXPECT(0xc8a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc8a5));
        // 88 0362
        gbc.setState(0x80cc, 0x96be, 0x4070, 0x9a7b, 0xd2c0, 0xda9d, 0x0, 0x0);
        gbc.writeMem(0x80cc, { 0x88 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x96be, gbc.sp());
        EXPECT(0x80cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x80cc));
        // 88 0363
        gbc.setState(0x5fff, 0xca3a, 0x5c0, 0xb365, 0xf26d, 0x89e2, 0x0, 0x0);
        gbc.writeMem(0x5fff, { 0x88 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xca3a, gbc.sp());
        EXPECT(0x6000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0364
        gbc.setState(0x35ba, 0xa2d, 0xb1d0, 0x5e63, 0xa2bd, 0x6db0, 0x0, 0x0);
        gbc.writeMem(0x35ba, { 0x88 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa2d, gbc.sp());
        EXPECT(0x35bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0365
        gbc.setState(0xe65a, 0x8e92, 0x2150, 0xda8b, 0xa9ef, 0x26ee, 0x0, 0x0);
        gbc.writeMem(0xe65a, { 0x88 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8e92, gbc.sp());
        EXPECT(0xe65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe65a));
        // 88 0366
        gbc.setState(0xc890, 0x2670, 0x77f0, 0x9c88, 0x6811, 0xdcde, 0x0, 0x1);
        gbc.writeMem(0xc890, { 0x88 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2670, gbc.sp());
        EXPECT(0xc891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc890));
        // 88 0367
        gbc.setState(0x1f7e, 0x83d, 0xc480, 0x7663, 0x1b3, 0xdfe0, 0x0, 0x0);
        gbc.writeMem(0x1f7e, { 0x88 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x83d, gbc.sp());
        EXPECT(0x1f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0368
        gbc.setState(0x97f8, 0x1bf4, 0xa2f0, 0x1c00, 0x65ff, 0xf871, 0x1, 0x0);
        gbc.writeMem(0x97f8, { 0x88 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1bf4, gbc.sp());
        EXPECT(0x97f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x97f8));
        // 88 0369
        gbc.setState(0xc25d, 0xe795, 0x5360, 0x5cd1, 0xdf6d, 0xa616, 0x0, 0x0);
        gbc.writeMem(0xc25d, { 0x88 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe795, gbc.sp());
        EXPECT(0xc25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc25d));
        // 88 036A
        gbc.setState(0x2d0d, 0x26c0, 0x91b0, 0x3cd4, 0xe400, 0xe3b2, 0x1, 0x0);
        gbc.writeMem(0x2d0d, { 0x88 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x26c0, gbc.sp());
        EXPECT(0x2d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 036B
        gbc.setState(0x4ac5, 0x6937, 0x9d50, 0xb65f, 0x66c6, 0x1dc9, 0x0, 0x1);
        gbc.writeMem(0x4ac5, { 0x88 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6937, gbc.sp());
        EXPECT(0x4ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 036C
        gbc.setState(0x2b6a, 0x4525, 0xa5a0, 0xdce0, 0x1a73, 0x9b, 0x0, 0x0);
        gbc.writeMem(0x2b6a, { 0x88 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4525, gbc.sp());
        EXPECT(0x2b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 036D
        gbc.setState(0xc87, 0x9c3f, 0x2d90, 0x1cf0, 0xb927, 0x9d9b, 0x0, 0x0);
        gbc.writeMem(0xc87, { 0x88 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9c3f, gbc.sp());
        EXPECT(0xc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 036E
        gbc.setState(0xccd5, 0xb690, 0x9a90, 0x8d76, 0xaf46, 0xdd67, 0x1, 0x0);
        gbc.writeMem(0xccd5, { 0x88 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb690, gbc.sp());
        EXPECT(0xccd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xccd5));
        // 88 036F
        gbc.setState(0x6fe8, 0x709b, 0x9350, 0xc11d, 0x5011, 0xad0e, 0x1, 0x0);
        gbc.writeMem(0x6fe8, { 0x88 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x709b, gbc.sp());
        EXPECT(0x6fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0370
        gbc.setState(0xa754, 0xb844, 0xe710, 0x30f8, 0x8cb5, 0x50cf, 0x0, 0x0);
        gbc.writeMem(0xa754, { 0x88 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb844, gbc.sp());
        EXPECT(0xa755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa754));
        // 88 0371
        gbc.setState(0xd787, 0xa211, 0xd370, 0x2ee2, 0x7106, 0x666c, 0x1, 0x0);
        gbc.writeMem(0xd787, { 0x88 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa211, gbc.sp());
        EXPECT(0xd788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd787));
        // 88 0372
        gbc.setState(0xe892, 0x42c5, 0x7000, 0xb6fd, 0x2e39, 0x66d8, 0x1, 0x1);
        gbc.writeMem(0xe892, { 0x88 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x42c5, gbc.sp());
        EXPECT(0xe893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe892));
        // 88 0374
        gbc.setState(0x8919, 0xac5e, 0x3f40, 0x985, 0xef94, 0x265f, 0x1, 0x0);
        gbc.writeMem(0x8919, { 0x88 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xac5e, gbc.sp());
        EXPECT(0x891a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8919));
        // 88 0375
        gbc.setState(0x175a, 0xfd72, 0x2740, 0x4fd8, 0xca0d, 0x38d6, 0x1, 0x0);
        gbc.writeMem(0x175a, { 0x88 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfd72, gbc.sp());
        EXPECT(0x175b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0376
        gbc.setState(0x366d, 0x7fb5, 0xbe90, 0x6240, 0xcd8e, 0x33fc, 0x0, 0x0);
        gbc.writeMem(0x366d, { 0x88 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7fb5, gbc.sp());
        EXPECT(0x366e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0377
        gbc.setState(0x1674, 0x5d71, 0x3ff0, 0xff35, 0xf6b0, 0xf52, 0x0, 0x0);
        gbc.writeMem(0x1674, { 0x88 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5d71, gbc.sp());
        EXPECT(0x1675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0378
        gbc.setState(0x792, 0x6870, 0xd590, 0xb888, 0xe131, 0x2c07, 0x1, 0x1);
        gbc.writeMem(0x792, { 0x88 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6870, gbc.sp());
        EXPECT(0x793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0379
        gbc.setState(0x8d56, 0x486c, 0x2450, 0xf93a, 0x7a85, 0xfd2b, 0x0, 0x1);
        gbc.writeMem(0x8d56, { 0x88 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x486c, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8d56));
        // 88 037A
        gbc.setState(0x1b48, 0x8e49, 0xfb00, 0xb28f, 0xa6d8, 0x4b98, 0x0, 0x0);
        gbc.writeMem(0x1b48, { 0x88 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8e49, gbc.sp());
        EXPECT(0x1b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 037C
        gbc.setState(0xa665, 0x2c5c, 0x6fd0, 0xf595, 0x71e3, 0xd61f, 0x1, 0x0);
        gbc.writeMem(0xa665, { 0x88 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2c5c, gbc.sp());
        EXPECT(0xa666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa665));
        // 88 037D
        gbc.setState(0xd0a8, 0xad85, 0x53a0, 0xcbd1, 0x70de, 0xb69b, 0x0, 0x1);
        gbc.writeMem(0xd0a8, { 0x88 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xad85, gbc.sp());
        EXPECT(0xd0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd0a8));
        // 88 037E
        gbc.setState(0x323a, 0x5060, 0x56f0, 0x46a0, 0x97d0, 0xda40, 0x0, 0x1);
        gbc.writeMem(0x323a, { 0x88 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5060, gbc.sp());
        EXPECT(0x323b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 037F
        gbc.setState(0x813a, 0x8840, 0xc150, 0x106a, 0xad2a, 0x9ebc, 0x1, 0x0);
        gbc.writeMem(0x813a, { 0x88 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8840, gbc.sp());
        EXPECT(0x813b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x813a));
        // 88 0380
        gbc.setState(0xa8f3, 0x7cf7, 0xdab0, 0x9f3e, 0xcb5b, 0x596b, 0x0, 0x0);
        gbc.writeMem(0xa8f3, { 0x88 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7cf7, gbc.sp());
        EXPECT(0xa8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa8f3));
        // 88 0382
        gbc.setState(0xcfb0, 0xcb54, 0xddf0, 0x5e66, 0x8f1c, 0x31bc, 0x1, 0x0);
        gbc.writeMem(0xcfb0, { 0x88 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcb54, gbc.sp());
        EXPECT(0xcfb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xcfb0));
        // 88 0383
        gbc.setState(0x8453, 0x87e9, 0x7fe0, 0x22bc, 0xe173, 0x6cde, 0x1, 0x0);
        gbc.writeMem(0x8453, { 0x88 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x87e9, gbc.sp());
        EXPECT(0x8454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8453));
        // 88 0384
        gbc.setState(0x951a, 0xdf71, 0xa140, 0x581f, 0x3aea, 0xe5f3, 0x1, 0x0);
        gbc.writeMem(0x951a, { 0x88 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdf71, gbc.sp());
        EXPECT(0x951b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x951a));
        // 88 0385
        gbc.setState(0x784d, 0xf3e7, 0xf30, 0x884d, 0xac4f, 0x172b, 0x1, 0x1);
        gbc.writeMem(0x784d, { 0x88 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf3e7, gbc.sp());
        EXPECT(0x784e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0386
        gbc.setState(0x6f58, 0x14ac, 0x86e0, 0x3d3c, 0xd5dd, 0xbc89, 0x0, 0x0);
        gbc.writeMem(0x6f58, { 0x88 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x14ac, gbc.sp());
        EXPECT(0x6f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0387
        gbc.setState(0x8709, 0xc5d8, 0x1470, 0x9219, 0x3baa, 0xe335, 0x0, 0x1);
        gbc.writeMem(0x8709, { 0x88 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc5d8, gbc.sp());
        EXPECT(0x870a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8709));
        // 88 0388
        gbc.setState(0x320d, 0x60a9, 0x380, 0x8be5, 0xdfe, 0x37de, 0x0, 0x0);
        gbc.writeMem(0x320d, { 0x88 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x60a9, gbc.sp());
        EXPECT(0x320e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0389
        gbc.setState(0xa970, 0x8e04, 0x7ad0, 0x836e, 0x7cd2, 0x968e, 0x1, 0x1);
        gbc.writeMem(0xa970, { 0x88 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8e04, gbc.sp());
        EXPECT(0xa971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa970));
        // 88 038A
        gbc.setState(0x7ffe, 0xb3ed, 0x1460, 0x951b, 0x3f45, 0x64b4, 0x0, 0x0);
        gbc.writeMem(0x7ffe, { 0x88 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb3ed, gbc.sp());
        EXPECT(0x7fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 038B
        gbc.setState(0xd885, 0xa97d, 0x2ac0, 0x5a74, 0xb702, 0xd0ff, 0x1, 0x1);
        gbc.writeMem(0xd885, { 0x88 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa97d, gbc.sp());
        EXPECT(0xd886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd885));
        // 88 038C
        gbc.setState(0x4f40, 0x598f, 0xe170, 0xcaf2, 0xe2ea, 0x7c55, 0x1, 0x0);
        gbc.writeMem(0x4f40, { 0x88 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x598f, gbc.sp());
        EXPECT(0x4f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 038D
        gbc.setState(0x6f61, 0x31e, 0xfd70, 0xaa0f, 0x8112, 0x578, 0x0, 0x0);
        gbc.writeMem(0x6f61, { 0x88 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x31e, gbc.sp());
        EXPECT(0x6f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 038E
        gbc.setState(0xb12b, 0x3756, 0x1a40, 0x3b5a, 0xe948, 0xaa6b, 0x0, 0x1);
        gbc.writeMem(0xb12b, { 0x88 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3756, gbc.sp());
        EXPECT(0xb12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb12b));
        // 88 038F
        gbc.setState(0x909, 0x1c5f, 0xeba0, 0x24a2, 0x5955, 0x881c, 0x1, 0x1);
        gbc.writeMem(0x909, { 0x88 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1c5f, gbc.sp());
        EXPECT(0x90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0390
        gbc.setState(0x44fb, 0xac3e, 0x99c0, 0x9084, 0xe92, 0xda5, 0x1, 0x0);
        gbc.writeMem(0x44fb, { 0x88 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xac3e, gbc.sp());
        EXPECT(0x44fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0391
        gbc.setState(0xa237, 0x6f30, 0x9940, 0xa796, 0xc624, 0x4da3, 0x0, 0x0);
        gbc.writeMem(0xa237, { 0x88 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6f30, gbc.sp());
        EXPECT(0xa238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa237));
        // 88 0392
        gbc.setState(0x2ec9, 0x24db, 0x2020, 0x9dfd, 0xba8d, 0x3375, 0x0, 0x1);
        gbc.writeMem(0x2ec9, { 0x88 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x24db, gbc.sp());
        EXPECT(0x2eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0393
        gbc.setState(0x1a06, 0x3683, 0x4930, 0xcf52, 0x3bd3, 0xb8a0, 0x1, 0x0);
        gbc.writeMem(0x1a06, { 0x88 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3683, gbc.sp());
        EXPECT(0x1a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0394
        gbc.setState(0x662a, 0x8a57, 0x6a30, 0x2acd, 0xa006, 0xca6c, 0x0, 0x0);
        gbc.writeMem(0x662a, { 0x88 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8a57, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0395
        gbc.setState(0x5f4c, 0x5361, 0xcd10, 0x18c, 0xe685, 0xa574, 0x1, 0x0);
        gbc.writeMem(0x5f4c, { 0x88 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5361, gbc.sp());
        EXPECT(0x5f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0396
        gbc.setState(0xe87, 0x52da, 0x7380, 0xb5b5, 0x84a8, 0xca29, 0x1, 0x0);
        gbc.writeMem(0xe87, { 0x88 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x52da, gbc.sp());
        EXPECT(0xe88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 0397
        gbc.setState(0x6084, 0x6fdc, 0x32d0, 0x7a88, 0x38ec, 0xb421, 0x1, 0x0);
        gbc.writeMem(0x6084, { 0x88 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6fdc, gbc.sp());
        EXPECT(0x6085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 0398
        gbc.setState(0xb6ac, 0x8269, 0x4960, 0x7278, 0xd6a, 0x4386, 0x0, 0x1);
        gbc.writeMem(0xb6ac, { 0x88 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8269, gbc.sp());
        EXPECT(0xb6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb6ac));
        // 88 0399
        gbc.setState(0x264, 0x3339, 0xc140, 0x1ce6, 0xbed3, 0xc658, 0x0, 0x1);
        gbc.writeMem(0x264, { 0x88 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3339, gbc.sp());
        EXPECT(0x265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 039A
        gbc.setState(0x1d81, 0x2915, 0x100, 0x6971, 0x8b62, 0x9fba, 0x0, 0x1);
        gbc.writeMem(0x1d81, { 0x88 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2915, gbc.sp());
        EXPECT(0x1d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 039B
        gbc.setState(0x7c7a, 0xefe1, 0x5fc0, 0x9c2d, 0x676e, 0x9652, 0x1, 0x0);
        gbc.writeMem(0x7c7a, { 0x88 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xefe1, gbc.sp());
        EXPECT(0x7c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 039C
        gbc.setState(0x2cad, 0x9c78, 0xb700, 0x52a0, 0x2f49, 0x82ba, 0x0, 0x0);
        gbc.writeMem(0x2cad, { 0x88 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9c78, gbc.sp());
        EXPECT(0x2cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 039D
        gbc.setState(0x7b82, 0xd06a, 0x5300, 0x6e4a, 0x3b93, 0xc93c, 0x1, 0x1);
        gbc.writeMem(0x7b82, { 0x88 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd06a, gbc.sp());
        EXPECT(0x7b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 039E
        gbc.setState(0x1358, 0x77e0, 0xe0a0, 0x7b48, 0xb514, 0xd7a9, 0x1, 0x0);
        gbc.writeMem(0x1358, { 0x88 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x77e0, gbc.sp());
        EXPECT(0x1359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 039F
        gbc.setState(0xd65a, 0xb9aa, 0x4240, 0xb2af, 0x77b, 0xbd40, 0x0, 0x1);
        gbc.writeMem(0xd65a, { 0x88 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb9aa, gbc.sp());
        EXPECT(0xd65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd65a));
        // 88 03A0
        gbc.setState(0x6f3d, 0x6667, 0xfee0, 0x686b, 0x5858, 0x62d2, 0x1, 0x0);
        gbc.writeMem(0x6f3d, { 0x88 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6667, gbc.sp());
        EXPECT(0x6f3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03A1
        gbc.setState(0xbbdb, 0x38b6, 0x9c10, 0x82d0, 0x1078, 0x296f, 0x1, 0x0);
        gbc.writeMem(0xbbdb, { 0x88 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x38b6, gbc.sp());
        EXPECT(0xbbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbbdb));
        // 88 03A2
        gbc.setState(0x5e10, 0xb85d, 0x6f30, 0xe2ef, 0x2276, 0xe309, 0x1, 0x0);
        gbc.writeMem(0x5e10, { 0x88 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb85d, gbc.sp());
        EXPECT(0x5e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03A3
        gbc.setState(0x1663, 0x4be6, 0xfbf0, 0x6647, 0x860e, 0x7c95, 0x0, 0x1);
        gbc.writeMem(0x1663, { 0x88 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4be6, gbc.sp());
        EXPECT(0x1664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03A4
        gbc.setState(0x8975, 0x5084, 0xc0a0, 0xdc3e, 0xd7aa, 0x9600, 0x1, 0x1);
        gbc.writeMem(0x8975, { 0x88 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5084, gbc.sp());
        EXPECT(0x8976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8975));
        // 88 03A5
        gbc.setState(0x856e, 0xd197, 0xf8c0, 0x8e18, 0x73af, 0xf82a, 0x0, 0x1);
        gbc.writeMem(0x856e, { 0x88 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd197, gbc.sp());
        EXPECT(0x856f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x856e));
        // 88 03A7
        gbc.setState(0x9ac0, 0x579f, 0x4b50, 0xb6b3, 0x2965, 0x8f3b, 0x0, 0x0);
        gbc.writeMem(0x9ac0, { 0x88 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x579f, gbc.sp());
        EXPECT(0x9ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9ac0));
        // 88 03A8
        gbc.setState(0x7c84, 0xa478, 0xbfb0, 0x96ac, 0xb616, 0x6c0, 0x0, 0x1);
        gbc.writeMem(0x7c84, { 0x88 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa478, gbc.sp());
        EXPECT(0x7c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03A9
        gbc.setState(0x681b, 0xe7cb, 0x8540, 0xa39, 0x9ce7, 0x991, 0x1, 0x0);
        gbc.writeMem(0x681b, { 0x88 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe7cb, gbc.sp());
        EXPECT(0x681c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03AA
        gbc.setState(0x8677, 0x2f19, 0x5090, 0x8da8, 0xe605, 0x3006, 0x0, 0x1);
        gbc.writeMem(0x8677, { 0x88 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2f19, gbc.sp());
        EXPECT(0x8678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8677));
        // 88 03AB
        gbc.setState(0x2bb, 0x6075, 0x2ca0, 0x811c, 0x1ffd, 0xa3fe, 0x0, 0x1);
        gbc.writeMem(0x2bb, { 0x88 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6075, gbc.sp());
        EXPECT(0x2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03AC
        gbc.setState(0x7ce0, 0x3850, 0x2a00, 0x48ab, 0x4597, 0x59cc, 0x0, 0x0);
        gbc.writeMem(0x7ce0, { 0x88 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3850, gbc.sp());
        EXPECT(0x7ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03AD
        gbc.setState(0x207, 0x5c65, 0xc540, 0xef72, 0xf642, 0xd492, 0x1, 0x1);
        gbc.writeMem(0x207, { 0x88 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5c65, gbc.sp());
        EXPECT(0x208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03AE
        gbc.setState(0x9a78, 0x8f46, 0x3040, 0x146c, 0x6480, 0x1a5a, 0x0, 0x0);
        gbc.writeMem(0x9a78, { 0x88 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8f46, gbc.sp());
        EXPECT(0x9a79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9a78));
        // 88 03AF
        gbc.setState(0x498e, 0xc110, 0xaa0, 0x4f33, 0x13c4, 0xd05c, 0x1, 0x1);
        gbc.writeMem(0x498e, { 0x88 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc110, gbc.sp());
        EXPECT(0x498f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03B0
        gbc.setState(0x750a, 0x49c0, 0x6bb0, 0x9c01, 0xb620, 0x860e, 0x0, 0x1);
        gbc.writeMem(0x750a, { 0x88 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x49c0, gbc.sp());
        EXPECT(0x750b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03B1
        gbc.setState(0x5f28, 0x8a2d, 0x16d0, 0xa677, 0xe3b8, 0xa656, 0x1, 0x1);
        gbc.writeMem(0x5f28, { 0x88 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8a2d, gbc.sp());
        EXPECT(0x5f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03B2
        gbc.setState(0xe468, 0x5f97, 0xb860, 0xdc33, 0x1d8f, 0xca1a, 0x0, 0x0);
        gbc.writeMem(0xe468, { 0x88 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5f97, gbc.sp());
        EXPECT(0xe469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe468));
        // 88 03B3
        gbc.setState(0x7ddd, 0xa52b, 0xa020, 0xe9a1, 0x31eb, 0x761c, 0x1, 0x0);
        gbc.writeMem(0x7ddd, { 0x88 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa52b, gbc.sp());
        EXPECT(0x7dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03B4
        gbc.setState(0x477b, 0x1f6f, 0xbb60, 0x7c87, 0x8f43, 0x605e, 0x1, 0x1);
        gbc.writeMem(0x477b, { 0x88 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1f6f, gbc.sp());
        EXPECT(0x477c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03B5
        gbc.setState(0xe94b, 0xdd96, 0x8710, 0x5f72, 0x2b00, 0x4fbc, 0x0, 0x1);
        gbc.writeMem(0xe94b, { 0x88 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdd96, gbc.sp());
        EXPECT(0xe94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe94b));
        // 88 03B6
        gbc.setState(0x4ff9, 0x7c59, 0x1a60, 0x394e, 0xc7f5, 0x138b, 0x0, 0x1);
        gbc.writeMem(0x4ff9, { 0x88 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7c59, gbc.sp());
        EXPECT(0x4ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03B8
        gbc.setState(0x1224, 0x28ae, 0x3d30, 0x5793, 0xb949, 0x69cc, 0x1, 0x0);
        gbc.writeMem(0x1224, { 0x88 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x28ae, gbc.sp());
        EXPECT(0x1225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03B9
        gbc.setState(0xa090, 0x1e9, 0xebb0, 0x2447, 0x1051, 0x8733, 0x0, 0x1);
        gbc.writeMem(0xa090, { 0x88 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1e9, gbc.sp());
        EXPECT(0xa091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa090));
        // 88 03BA
        gbc.setState(0x371e, 0xe1e8, 0x1ac0, 0x6aa, 0xd581, 0xe4e, 0x0, 0x0);
        gbc.writeMem(0x371e, { 0x88 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe1e8, gbc.sp());
        EXPECT(0x371f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03BB
        gbc.setState(0xa879, 0x5b46, 0x2380, 0x2e94, 0xc260, 0xe938, 0x0, 0x1);
        gbc.writeMem(0xa879, { 0x88 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5b46, gbc.sp());
        EXPECT(0xa87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa879));
        // 88 03BC
        gbc.setState(0x8bf4, 0x21da, 0x3c60, 0xa428, 0x147c, 0xeeec, 0x0, 0x1);
        gbc.writeMem(0x8bf4, { 0x88 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x21da, gbc.sp());
        EXPECT(0x8bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8bf4));
        // 88 03BD
        gbc.setState(0x23df, 0xa19a, 0x3f20, 0x8a0d, 0xcd15, 0x11e8, 0x1, 0x1);
        gbc.writeMem(0x23df, { 0x88 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa19a, gbc.sp());
        EXPECT(0x23e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03BE
        gbc.setState(0x4529, 0x5b93, 0x2290, 0xc70, 0x31a4, 0x1456, 0x1, 0x1);
        gbc.writeMem(0x4529, { 0x88 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5b93, gbc.sp());
        EXPECT(0x452a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03BF
        gbc.setState(0x6a77, 0xdfa3, 0xe660, 0xf03f, 0x3208, 0x4eb8, 0x0, 0x0);
        gbc.writeMem(0x6a77, { 0x88 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdfa3, gbc.sp());
        EXPECT(0x6a78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03C1
        gbc.setState(0x91c7, 0x3703, 0x8920, 0xb6ef, 0x41f2, 0x2f79, 0x1, 0x1);
        gbc.writeMem(0x91c7, { 0x88 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3703, gbc.sp());
        EXPECT(0x91c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x91c7));
        // 88 03C2
        gbc.setState(0xad2f, 0xcd3, 0xc540, 0xa4b2, 0xc71d, 0x67ab, 0x1, 0x1);
        gbc.writeMem(0xad2f, { 0x88 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcd3, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xad2f));
        // 88 03C3
        gbc.setState(0x9369, 0x9d8, 0x2060, 0x2e, 0xff41, 0xa781, 0x1, 0x1);
        gbc.writeMem(0x9369, { 0x88 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9d8, gbc.sp());
        EXPECT(0x936a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9369));
        // 88 03C4
        gbc.setState(0x8659, 0xa722, 0x2780, 0xf506, 0x9e3f, 0x67df, 0x1, 0x0);
        gbc.writeMem(0x8659, { 0x88 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa722, gbc.sp());
        EXPECT(0x865a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8659));
        // 88 03C5
        gbc.setState(0x95dd, 0xdd59, 0x14c0, 0x5d51, 0x7ca8, 0xaca9, 0x0, 0x1);
        gbc.writeMem(0x95dd, { 0x88 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdd59, gbc.sp());
        EXPECT(0x95de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x95dd));
        // 88 03C6
        gbc.setState(0x36de, 0x85e9, 0x1da0, 0x7eb9, 0x3a85, 0xb1f3, 0x1, 0x1);
        gbc.writeMem(0x36de, { 0x88 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x85e9, gbc.sp());
        EXPECT(0x36df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03C8
        gbc.setState(0xc8a6, 0x8dc5, 0x8af0, 0x548d, 0xa10, 0xdf2f, 0x0, 0x0);
        gbc.writeMem(0xc8a6, { 0x88 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8dc5, gbc.sp());
        EXPECT(0xc8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc8a6));
        // 88 03C9
        gbc.setState(0x90b, 0xffe9, 0x4230, 0xc490, 0x7c71, 0x7007, 0x1, 0x0);
        gbc.writeMem(0x90b, { 0x88 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xffe9, gbc.sp());
        EXPECT(0x90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03CA
        gbc.setState(0x6d07, 0x5705, 0xbb0, 0xa56d, 0xbea2, 0xbdd9, 0x1, 0x0);
        gbc.writeMem(0x6d07, { 0x88 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5705, gbc.sp());
        EXPECT(0x6d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03CB
        gbc.setState(0x9449, 0xf99f, 0x8420, 0xb0c3, 0xf374, 0x75e0, 0x1, 0x0);
        gbc.writeMem(0x9449, { 0x88 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf99f, gbc.sp());
        EXPECT(0x944a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9449));
        // 88 03CC
        gbc.setState(0xc502, 0x7a5e, 0x9b00, 0xe3dd, 0xd10b, 0x5e77, 0x1, 0x0);
        gbc.writeMem(0xc502, { 0x88 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7a5e, gbc.sp());
        EXPECT(0xc503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc502));
        // 88 03CD
        gbc.setState(0x9267, 0x2655, 0xb320, 0x120e, 0x487e, 0x584e, 0x1, 0x1);
        gbc.writeMem(0x9267, { 0x88 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2655, gbc.sp());
        EXPECT(0x9268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9267));
        // 88 03CE
        gbc.setState(0x4870, 0x3b0b, 0x7e70, 0x7a88, 0x16f5, 0x3c4d, 0x0, 0x1);
        gbc.writeMem(0x4870, { 0x88 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3b0b, gbc.sp());
        EXPECT(0x4871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03CF
        gbc.setState(0xd4ad, 0xa63d, 0xbb20, 0x4947, 0x749c, 0x830b, 0x1, 0x1);
        gbc.writeMem(0xd4ad, { 0x88 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa63d, gbc.sp());
        EXPECT(0xd4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd4ad));
        // 88 03D0
        gbc.setState(0x372c, 0x9495, 0xe870, 0x3119, 0x351, 0xd381, 0x1, 0x0);
        gbc.writeMem(0x372c, { 0x88 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9495, gbc.sp());
        EXPECT(0x372d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03D1
        gbc.setState(0x85b9, 0x3af9, 0xd30, 0xd028, 0x1290, 0xae9e, 0x0, 0x0);
        gbc.writeMem(0x85b9, { 0x88 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0x85ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x85b9));
        // 88 03D2
        gbc.setState(0x3f50, 0x99ec, 0x680, 0x4b08, 0xfe44, 0xa8fe, 0x0, 0x0);
        gbc.writeMem(0x3f50, { 0x88 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x99ec, gbc.sp());
        EXPECT(0x3f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03D4
        gbc.setState(0x4327, 0xaff2, 0xba60, 0x8d47, 0xeda8, 0x363d, 0x1, 0x1);
        gbc.writeMem(0x4327, { 0x88 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xaff2, gbc.sp());
        EXPECT(0x4328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03D5
        gbc.setState(0xc198, 0x3cb, 0xd940, 0xbea1, 0x4be8, 0x8eac, 0x0, 0x0);
        gbc.writeMem(0xc198, { 0x88 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3cb, gbc.sp());
        EXPECT(0xc199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xc198));
        // 88 03D6
        gbc.setState(0xe4c6, 0xae64, 0xab80, 0x48d8, 0x9771, 0x395d, 0x0, 0x1);
        gbc.writeMem(0xe4c6, { 0x88 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xae64, gbc.sp());
        EXPECT(0xe4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe4c6));
        // 88 03D8
        gbc.setState(0x3189, 0x888e, 0xb490, 0xed43, 0xf840, 0xd6ab, 0x1, 0x1);
        gbc.writeMem(0x3189, { 0x88 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x888e, gbc.sp());
        EXPECT(0x318a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03D9
        gbc.setState(0x8046, 0x86f7, 0x88e0, 0xccdc, 0x2baa, 0xee72, 0x0, 0x0);
        gbc.writeMem(0x8046, { 0x88 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x86f7, gbc.sp());
        EXPECT(0x8047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x8046));
        // 88 03DA
        gbc.setState(0xbf5a, 0xf81d, 0x8530, 0xf5d5, 0x5b40, 0xf6d3, 0x0, 0x0);
        gbc.writeMem(0xbf5a, { 0x88 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf81d, gbc.sp());
        EXPECT(0xbf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xbf5a));
        // 88 03DB
        gbc.setState(0xa643, 0x49bf, 0x8e90, 0x5302, 0xfb57, 0x2404, 0x1, 0x0);
        gbc.writeMem(0xa643, { 0x88 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x49bf, gbc.sp());
        EXPECT(0xa644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xa643));
        // 88 03DC
        gbc.setState(0x52d6, 0x262c, 0x81d0, 0xcb43, 0x4b9c, 0xaa38, 0x0, 0x0);
        gbc.writeMem(0x52d6, { 0x88 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x262c, gbc.sp());
        EXPECT(0x52d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03DD
        gbc.setState(0x7d32, 0x220d, 0x590, 0x39a0, 0xf8ab, 0x9c4, 0x1, 0x0);
        gbc.writeMem(0x7d32, { 0x88 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x220d, gbc.sp());
        EXPECT(0x7d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03DE
        gbc.setState(0xe433, 0x8e8f, 0x9490, 0xdc9e, 0x4695, 0xb82a, 0x1, 0x1);
        gbc.writeMem(0xe433, { 0x88 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8e8f, gbc.sp());
        EXPECT(0xe434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xe433));
        // 88 03DF
        gbc.setState(0x9240, 0x4121, 0x9b40, 0x1b7, 0x297a, 0x1f85, 0x0, 0x1);
        gbc.writeMem(0x9240, { 0x88 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4121, gbc.sp());
        EXPECT(0x9241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9240));
        // 88 03E0
        gbc.setState(0x3df4, 0x6340, 0x58f0, 0xbd0c, 0xa6f9, 0xcc39, 0x1, 0x0);
        gbc.writeMem(0x3df4, { 0x88 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6340, gbc.sp());
        EXPECT(0x3df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03E1
        gbc.setState(0x1f6e, 0xaf4, 0x1000, 0x4572, 0xaef6, 0x63d3, 0x0, 0x1);
        gbc.writeMem(0x1f6e, { 0x88 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xaf4, gbc.sp());
        EXPECT(0x1f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 88 03E2
        gbc.setState(0x75c3, 0xa9f6, 0xa420, 0xc5f9, 0x789e, 0xae8c, 0x0, 0x1);
        gbc.writeMem(0x75c3, { 0x88 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa9f6, gbc.sp());
        EXPECT(0x75c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03E3
        gbc.setState(0xd04b, 0xc017, 0x4890, 0x6584, 0xe59, 0x704f, 0x1, 0x0);
        gbc.writeMem(0xd04b, { 0x88 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc017, gbc.sp());
        EXPECT(0xd04c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xd04b));
        // 88 03E4
        gbc.setState(0x68a4, 0x7b5, 0xf980, 0x9ed3, 0x9b93, 0xa85f, 0x1, 0x1);
        gbc.writeMem(0x68a4, { 0x88 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7b5, gbc.sp());
        EXPECT(0x68a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03E5
        gbc.setState(0x995b, 0xe86d, 0x29d0, 0x78d3, 0xaa3e, 0xf0bb, 0x0, 0x1);
        gbc.writeMem(0x995b, { 0x88 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe86d, gbc.sp());
        EXPECT(0x995c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x995b));
        // 88 03E6
        gbc.setState(0x3bec, 0x8957, 0xf590, 0xab7f, 0xd018, 0x7afa, 0x1, 0x0);
        gbc.writeMem(0x3bec, { 0x88 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8957, gbc.sp());
        EXPECT(0x3bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 88 03E7
        gbc.setState(0x1fde, 0xd019, 0x7380, 0x3ba8, 0xec3c, 0x9b1f, 0x0, 0x1);
        gbc.writeMem(0x1fde, { 0x88 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd019, gbc.sp());
        EXPECT(0x1fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
