#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_eb)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_eb) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB EB 0000
        gbc.setState(0x4235, 0xc613, 0xbb80, 0x21af, 0x6443, 0x5558, 0x0, 0x1);
        gbc.writeMem(0x4235, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc613);
        EXPECT(gbc.pc(), 0x4237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0001
        gbc.setState(0x4ad7, 0xa8c3, 0xde50, 0x1a65, 0x20df, 0x4465, 0x1, 0x1);
        gbc.writeMem(0x4ad7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa8c3);
        EXPECT(gbc.pc(), 0x4ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0002
        gbc.setState(0x2ad6, 0x5098, 0x1110, 0x4af2, 0x226b, 0xa469, 0x0, 0x1);
        gbc.writeMem(0x2ad6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5098);
        EXPECT(gbc.pc(), 0x2ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0003
        gbc.setState(0xc1eb, 0xeaf5, 0x980, 0x1da5, 0xefb0, 0x516c, 0x0, 0x0);
        gbc.writeMem(0xc1eb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xeaf5);
        EXPECT(gbc.pc(), 0xc1ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1eb), 0xcb);
        EXPECT(gbc.readMem(0xc1ec), 0xeb);
        // CB EB 0004
        gbc.setState(0x4245, 0x2785, 0xb4a0, 0x5a89, 0xc1d0, 0x41e, 0x0, 0x1);
        gbc.writeMem(0x4245, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2785);
        EXPECT(gbc.pc(), 0x4247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0005
        gbc.setState(0x7520, 0xc218, 0x75a0, 0x85ee, 0x967e, 0xd5, 0x0, 0x1);
        gbc.writeMem(0x7520, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc218);
        EXPECT(gbc.pc(), 0x7522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0006
        gbc.setState(0xaa8b, 0xbcd9, 0x8ec0, 0x2e11, 0x8317, 0x32e7, 0x1, 0x0);
        gbc.writeMem(0xaa8b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbcd9);
        EXPECT(gbc.pc(), 0xaa8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa8b), 0xcb);
        EXPECT(gbc.readMem(0xaa8c), 0xeb);
        // CB EB 0007
        gbc.setState(0x9f46, 0x99c, 0x1870, 0x7137, 0x30b8, 0xa1e9, 0x0, 0x1);
        gbc.writeMem(0x9f46, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x99c);
        EXPECT(gbc.pc(), 0x9f48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f46), 0xcb);
        EXPECT(gbc.readMem(0x9f47), 0xeb);
        // CB EB 0009
        gbc.setState(0xafa1, 0x7113, 0x1910, 0xf666, 0x64aa, 0x830b, 0x0, 0x1);
        gbc.writeMem(0xafa1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7113);
        EXPECT(gbc.pc(), 0xafa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafa1), 0xcb);
        EXPECT(gbc.readMem(0xafa2), 0xeb);
        // CB EB 000A
        gbc.setState(0x5e39, 0x11fc, 0xe3f0, 0x605f, 0x58fc, 0x7228, 0x0, 0x0);
        gbc.writeMem(0x5e39, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x11fc);
        EXPECT(gbc.pc(), 0x5e3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 000B
        gbc.setState(0xe20b, 0x426b, 0x9800, 0x461d, 0x996a, 0x1621, 0x1, 0x0);
        gbc.writeMem(0xe20b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x426b);
        EXPECT(gbc.pc(), 0xe20d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe20b), 0xcb);
        EXPECT(gbc.readMem(0xe20c), 0xeb);
        // CB EB 000C
        gbc.setState(0xb2b2, 0xefc2, 0xf230, 0xfdcc, 0xb64b, 0x4588, 0x0, 0x1);
        gbc.writeMem(0xb2b2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xefc2);
        EXPECT(gbc.pc(), 0xb2b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b2), 0xcb);
        EXPECT(gbc.readMem(0xb2b3), 0xeb);
        // CB EB 000D
        gbc.setState(0x231b, 0xd658, 0xfe80, 0x3650, 0xdafa, 0xffd7, 0x1, 0x0);
        gbc.writeMem(0x231b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd658);
        EXPECT(gbc.pc(), 0x231d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 000E
        gbc.setState(0x6902, 0xa45, 0x5110, 0x981e, 0xf012, 0x88c8, 0x1, 0x0);
        gbc.writeMem(0x6902, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa45);
        EXPECT(gbc.pc(), 0x6904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 000F
        gbc.setState(0x6248, 0x874e, 0x2da0, 0x1e19, 0x25d1, 0xc970, 0x1, 0x0);
        gbc.writeMem(0x6248, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x874e);
        EXPECT(gbc.pc(), 0x624a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0010
        gbc.setState(0x674f, 0xe74b, 0x4090, 0xbaee, 0x1a5a, 0x4c55, 0x0, 0x0);
        gbc.writeMem(0x674f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe74b);
        EXPECT(gbc.pc(), 0x6751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0011
        gbc.setState(0x214d, 0x85ec, 0x7a60, 0xc56, 0x3687, 0x2070, 0x1, 0x1);
        gbc.writeMem(0x214d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x85ec);
        EXPECT(gbc.pc(), 0x214f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0012
        gbc.setState(0x5ac4, 0x12d0, 0x8620, 0x514e, 0x1bd0, 0xdcb9, 0x1, 0x0);
        gbc.writeMem(0x5ac4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x12d0);
        EXPECT(gbc.pc(), 0x5ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0013
        gbc.setState(0x276c, 0xe9ac, 0x4cd0, 0x7ccf, 0xeee5, 0xd2d7, 0x0, 0x0);
        gbc.writeMem(0x276c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe9ac);
        EXPECT(gbc.pc(), 0x276e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0014
        gbc.setState(0x2f63, 0x2c74, 0x3f20, 0x1628, 0xdba0, 0x1e3d, 0x1, 0x1);
        gbc.writeMem(0x2f63, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2c74);
        EXPECT(gbc.pc(), 0x2f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0016
        gbc.setState(0xe660, 0x6a07, 0xee30, 0x9e8, 0x8e17, 0x62b3, 0x1, 0x1);
        gbc.writeMem(0xe660, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6a07);
        EXPECT(gbc.pc(), 0xe662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe660), 0xcb);
        EXPECT(gbc.readMem(0xe661), 0xeb);
        // CB EB 0017
        gbc.setState(0x9e21, 0xc2c6, 0x6c80, 0x461f, 0x8b7, 0x6bb0, 0x1, 0x1);
        gbc.writeMem(0x9e21, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc2c6);
        EXPECT(gbc.pc(), 0x9e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e21), 0xcb);
        EXPECT(gbc.readMem(0x9e22), 0xeb);
        // CB EB 0018
        gbc.setState(0x3e44, 0xc57c, 0x86b0, 0x3c66, 0x983c, 0x30f9, 0x0, 0x0);
        gbc.writeMem(0x3e44, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc57c);
        EXPECT(gbc.pc(), 0x3e46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0019
        gbc.setState(0x82ca, 0x659e, 0xb8f0, 0xa771, 0x3a02, 0xab37, 0x0, 0x1);
        gbc.writeMem(0x82ca, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x659e);
        EXPECT(gbc.pc(), 0x82cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ca), 0xcb);
        EXPECT(gbc.readMem(0x82cb), 0xeb);
        // CB EB 001A
        gbc.setState(0xaa79, 0xa313, 0x95a0, 0xbae3, 0x5524, 0x812, 0x0, 0x0);
        gbc.writeMem(0xaa79, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa313);
        EXPECT(gbc.pc(), 0xaa7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa79), 0xcb);
        EXPECT(gbc.readMem(0xaa7a), 0xeb);
        // CB EB 001B
        gbc.setState(0x3e7c, 0x5e6a, 0x60a0, 0x5d95, 0xc6f6, 0x32b3, 0x0, 0x0);
        gbc.writeMem(0x3e7c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5e6a);
        EXPECT(gbc.pc(), 0x3e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 001C
        gbc.setState(0x67ba, 0x6a6e, 0xd9a0, 0xbe12, 0xcd34, 0x1611, 0x1, 0x1);
        gbc.writeMem(0x67ba, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6a6e);
        EXPECT(gbc.pc(), 0x67bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 001D
        gbc.setState(0x5357, 0x32a6, 0x7310, 0x7792, 0xd4a1, 0xdfbc, 0x0, 0x1);
        gbc.writeMem(0x5357, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x32a6);
        EXPECT(gbc.pc(), 0x5359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 001E
        gbc.setState(0x20a4, 0x9367, 0x3ed0, 0x3dd3, 0x2acb, 0xc550, 0x0, 0x1);
        gbc.writeMem(0x20a4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9367);
        EXPECT(gbc.pc(), 0x20a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 001F
        gbc.setState(0x3fcc, 0xdde8, 0x8760, 0xf1a7, 0x3f97, 0x9c65, 0x0, 0x0);
        gbc.writeMem(0x3fcc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdde8);
        EXPECT(gbc.pc(), 0x3fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0020
        gbc.setState(0x9469, 0xb983, 0x6c20, 0xa66e, 0x2574, 0xeb14, 0x0, 0x1);
        gbc.writeMem(0x9469, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb983);
        EXPECT(gbc.pc(), 0x946b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9469), 0xcb);
        EXPECT(gbc.readMem(0x946a), 0xeb);
        // CB EB 0021
        gbc.setState(0xc85e, 0x6788, 0x17b0, 0x9dea, 0x311d, 0xeec, 0x1, 0x1);
        gbc.writeMem(0xc85e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6788);
        EXPECT(gbc.pc(), 0xc860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc85e), 0xcb);
        EXPECT(gbc.readMem(0xc85f), 0xeb);
        // CB EB 0023
        gbc.setState(0x1261, 0xd20c, 0x1eb0, 0x6963, 0x37c1, 0x1b30, 0x1, 0x0);
        gbc.writeMem(0x1261, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd20c);
        EXPECT(gbc.pc(), 0x1263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0024
        gbc.setState(0x7540, 0xd413, 0x1e80, 0x96f4, 0x1d4, 0xd813, 0x1, 0x1);
        gbc.writeMem(0x7540, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd413);
        EXPECT(gbc.pc(), 0x7542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0025
        gbc.setState(0xe26b, 0x44b, 0xb520, 0x69b2, 0x5df3, 0x66f1, 0x0, 0x0);
        gbc.writeMem(0xe26b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x44b);
        EXPECT(gbc.pc(), 0xe26d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26b), 0xcb);
        EXPECT(gbc.readMem(0xe26c), 0xeb);
        // CB EB 0026
        gbc.setState(0x5987, 0xd272, 0x5ed0, 0x71c6, 0x5c7d, 0x265b, 0x0, 0x0);
        gbc.writeMem(0x5987, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd272);
        EXPECT(gbc.pc(), 0x5989);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0027
        gbc.setState(0x7ff3, 0xb54f, 0xb310, 0x2424, 0xeb86, 0xe861, 0x0, 0x0);
        gbc.writeMem(0x7ff3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb54f);
        EXPECT(gbc.pc(), 0x7ff5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0028
        gbc.setState(0x5348, 0xef8a, 0x2cc0, 0xed02, 0x6b07, 0x3b54, 0x1, 0x1);
        gbc.writeMem(0x5348, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xef8a);
        EXPECT(gbc.pc(), 0x534a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0029
        gbc.setState(0xe948, 0xd247, 0xca90, 0x5f10, 0xc052, 0x10d2, 0x1, 0x0);
        gbc.writeMem(0xe948, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd247);
        EXPECT(gbc.pc(), 0xe94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe948), 0xcb);
        EXPECT(gbc.readMem(0xe949), 0xeb);
        // CB EB 002A
        gbc.setState(0xe139, 0x1beb, 0xfb80, 0xd2b3, 0x8c12, 0xe9b2, 0x0, 0x1);
        gbc.writeMem(0xe139, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1beb);
        EXPECT(gbc.pc(), 0xe13b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe139), 0xcb);
        EXPECT(gbc.readMem(0xe13a), 0xeb);
        // CB EB 002B
        gbc.setState(0x6e97, 0x16f9, 0x7390, 0x687a, 0x8569, 0x7b2a, 0x0, 0x1);
        gbc.writeMem(0x6e97, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x16f9);
        EXPECT(gbc.pc(), 0x6e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 002C
        gbc.setState(0x5005, 0x6da, 0x5f00, 0x1f02, 0x46cb, 0xc404, 0x1, 0x1);
        gbc.writeMem(0x5005, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6da);
        EXPECT(gbc.pc(), 0x5007);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 002D
        gbc.setState(0x119f, 0xa74e, 0x5070, 0xda7a, 0xda55, 0xfb4, 0x1, 0x1);
        gbc.writeMem(0x119f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa74e);
        EXPECT(gbc.pc(), 0x11a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 002E
        gbc.setState(0x915b, 0xa1e9, 0xf920, 0x4e29, 0x6e6a, 0xa8c4, 0x1, 0x0);
        gbc.writeMem(0x915b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa1e9);
        EXPECT(gbc.pc(), 0x915d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x915b), 0xcb);
        EXPECT(gbc.readMem(0x915c), 0xeb);
        // CB EB 002F
        gbc.setState(0xa9c0, 0x634e, 0xeb50, 0x905b, 0x5141, 0x2fb5, 0x0, 0x0);
        gbc.writeMem(0xa9c0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x634e);
        EXPECT(gbc.pc(), 0xa9c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9c0), 0xcb);
        EXPECT(gbc.readMem(0xa9c1), 0xeb);
        // CB EB 0030
        gbc.setState(0xde55, 0x7187, 0xbd0, 0xcc16, 0xec0b, 0xda43, 0x1, 0x0);
        gbc.writeMem(0xde55, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7187);
        EXPECT(gbc.pc(), 0xde57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde55), 0xcb);
        EXPECT(gbc.readMem(0xde56), 0xeb);
        // CB EB 0031
        gbc.setState(0xe90d, 0xf64, 0x2b0, 0x156e, 0x85c8, 0xe2fd, 0x0, 0x1);
        gbc.writeMem(0xe90d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf64);
        EXPECT(gbc.pc(), 0xe90f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe90d), 0xcb);
        EXPECT(gbc.readMem(0xe90e), 0xeb);
        // CB EB 0032
        gbc.setState(0x8bda, 0xd991, 0xd2c0, 0xa157, 0x65b7, 0xd386, 0x1, 0x0);
        gbc.writeMem(0x8bda, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd991);
        EXPECT(gbc.pc(), 0x8bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bda), 0xcb);
        EXPECT(gbc.readMem(0x8bdb), 0xeb);
        // CB EB 0033
        gbc.setState(0xa890, 0x5382, 0x4400, 0x9f29, 0xc898, 0x156a, 0x0, 0x0);
        gbc.writeMem(0xa890, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5382);
        EXPECT(gbc.pc(), 0xa892);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa890), 0xcb);
        EXPECT(gbc.readMem(0xa891), 0xeb);
        // CB EB 0034
        gbc.setState(0x4923, 0xc89b, 0xfc40, 0x73e5, 0xca03, 0xb9cc, 0x1, 0x0);
        gbc.writeMem(0x4923, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc89b);
        EXPECT(gbc.pc(), 0x4925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0035
        gbc.setState(0xd239, 0x9e9d, 0xc090, 0x23ed, 0x3b03, 0xe205, 0x1, 0x0);
        gbc.writeMem(0xd239, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9e9d);
        EXPECT(gbc.pc(), 0xd23b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd239), 0xcb);
        EXPECT(gbc.readMem(0xd23a), 0xeb);
        // CB EB 0036
        gbc.setState(0xd44, 0x3d07, 0x8690, 0xe729, 0xe480, 0x764a, 0x1, 0x1);
        gbc.writeMem(0xd44, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3d07);
        EXPECT(gbc.pc(), 0xd46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0037
        gbc.setState(0xbfa5, 0x3769, 0x1770, 0xd243, 0x154a, 0x7761, 0x1, 0x0);
        gbc.writeMem(0xbfa5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3769);
        EXPECT(gbc.pc(), 0xbfa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa5), 0xcb);
        EXPECT(gbc.readMem(0xbfa6), 0xeb);
        // CB EB 0038
        gbc.setState(0x322a, 0x17df, 0x2210, 0xb31c, 0xf6c6, 0xb9b5, 0x1, 0x0);
        gbc.writeMem(0x322a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x17df);
        EXPECT(gbc.pc(), 0x322c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0039
        gbc.setState(0x5018, 0x99ec, 0x5570, 0x6060, 0xb343, 0xb1c9, 0x0, 0x1);
        gbc.writeMem(0x5018, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x99ec);
        EXPECT(gbc.pc(), 0x501a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 003A
        gbc.setState(0xdae2, 0x56f, 0xa1b0, 0x9c16, 0x3111, 0x90e0, 0x1, 0x0);
        gbc.writeMem(0xdae2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x56f);
        EXPECT(gbc.pc(), 0xdae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae2), 0xcb);
        EXPECT(gbc.readMem(0xdae3), 0xeb);
        // CB EB 003B
        gbc.setState(0xc75f, 0x8ea7, 0x9460, 0xc9e6, 0x6488, 0x3607, 0x1, 0x0);
        gbc.writeMem(0xc75f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8ea7);
        EXPECT(gbc.pc(), 0xc761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc75f), 0xcb);
        EXPECT(gbc.readMem(0xc760), 0xeb);
        // CB EB 003C
        gbc.setState(0xbaad, 0xa97f, 0x8790, 0x49a2, 0x8056, 0x4a98, 0x0, 0x1);
        gbc.writeMem(0xbaad, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa97f);
        EXPECT(gbc.pc(), 0xbaaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaad), 0xcb);
        EXPECT(gbc.readMem(0xbaae), 0xeb);
        // CB EB 003D
        gbc.setState(0xd42, 0x6203, 0x9600, 0x22ba, 0x800c, 0x33c2, 0x0, 0x1);
        gbc.writeMem(0xd42, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6203);
        EXPECT(gbc.pc(), 0xd44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 003E
        gbc.setState(0xca30, 0x4b32, 0xcf10, 0x6ece, 0xa7df, 0xf3cf, 0x0, 0x1);
        gbc.writeMem(0xca30, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x4b32);
        EXPECT(gbc.pc(), 0xca32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca30), 0xcb);
        EXPECT(gbc.readMem(0xca31), 0xeb);
        // CB EB 003F
        gbc.setState(0x9375, 0xd199, 0xe950, 0xc038, 0xc7e6, 0x54f8, 0x0, 0x1);
        gbc.writeMem(0x9375, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd199);
        EXPECT(gbc.pc(), 0x9377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9375), 0xcb);
        EXPECT(gbc.readMem(0x9376), 0xeb);
        // CB EB 0040
        gbc.setState(0x83ec, 0x6294, 0x96a0, 0xac09, 0x2053, 0xbbc4, 0x0, 0x1);
        gbc.writeMem(0x83ec, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6294);
        EXPECT(gbc.pc(), 0x83ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ec), 0xcb);
        EXPECT(gbc.readMem(0x83ed), 0xeb);
        // CB EB 0042
        gbc.setState(0xba56, 0x32d3, 0x7db0, 0xba9d, 0xfb20, 0x7cd0, 0x0, 0x1);
        gbc.writeMem(0xba56, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x32d3);
        EXPECT(gbc.pc(), 0xba58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba56), 0xcb);
        EXPECT(gbc.readMem(0xba57), 0xeb);
        // CB EB 0043
        gbc.setState(0x824c, 0xc998, 0xf120, 0x2208, 0xb6a3, 0xcef, 0x1, 0x1);
        gbc.writeMem(0x824c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc998);
        EXPECT(gbc.pc(), 0x824e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x824c), 0xcb);
        EXPECT(gbc.readMem(0x824d), 0xeb);
        // CB EB 0044
        gbc.setState(0x8154, 0x34bd, 0x6780, 0x110e, 0xdb54, 0xbb6, 0x0, 0x1);
        gbc.writeMem(0x8154, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x34bd);
        EXPECT(gbc.pc(), 0x8156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8154), 0xcb);
        EXPECT(gbc.readMem(0x8155), 0xeb);
        // CB EB 0045
        gbc.setState(0x9593, 0x6179, 0xd130, 0x25f, 0x15fd, 0xebac, 0x1, 0x1);
        gbc.writeMem(0x9593, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6179);
        EXPECT(gbc.pc(), 0x9595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9593), 0xcb);
        EXPECT(gbc.readMem(0x9594), 0xeb);
        // CB EB 0046
        gbc.setState(0x564f, 0x3058, 0xe470, 0x4225, 0x5529, 0x769f, 0x0, 0x0);
        gbc.writeMem(0x564f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3058);
        EXPECT(gbc.pc(), 0x5651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0047
        gbc.setState(0x6cc1, 0x9723, 0x98f0, 0x30d1, 0x1278, 0x75f4, 0x0, 0x1);
        gbc.writeMem(0x6cc1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9723);
        EXPECT(gbc.pc(), 0x6cc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0048
        gbc.setState(0xa0db, 0x2f79, 0x5a80, 0x6796, 0xc226, 0x46c3, 0x0, 0x0);
        gbc.writeMem(0xa0db, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2f79);
        EXPECT(gbc.pc(), 0xa0dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0db), 0xcb);
        EXPECT(gbc.readMem(0xa0dc), 0xeb);
        // CB EB 0049
        gbc.setState(0xdab, 0xb061, 0xcdd0, 0x7d5a, 0xd50e, 0x3207, 0x1, 0x1);
        gbc.writeMem(0xdab, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb061);
        EXPECT(gbc.pc(), 0xdad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 004A
        gbc.setState(0x982c, 0x4d5f, 0x7530, 0x46b4, 0xdf4f, 0x3e73, 0x0, 0x1);
        gbc.writeMem(0x982c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4d5f);
        EXPECT(gbc.pc(), 0x982e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x982c), 0xcb);
        EXPECT(gbc.readMem(0x982d), 0xeb);
        // CB EB 004B
        gbc.setState(0x71fa, 0x970c, 0xbf10, 0xccf8, 0x727e, 0x5771, 0x1, 0x1);
        gbc.writeMem(0x71fa, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x970c);
        EXPECT(gbc.pc(), 0x71fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 004C
        gbc.setState(0xec5c, 0xec7c, 0xd4e0, 0x181c, 0xec99, 0xa658, 0x1, 0x1);
        gbc.writeMem(0xec5c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xec7c);
        EXPECT(gbc.pc(), 0xec5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec5c), 0xcb);
        EXPECT(gbc.readMem(0xec5d), 0xeb);
        // CB EB 004D
        gbc.setState(0xde67, 0xbb4a, 0x2a0, 0x6219, 0x5256, 0x1f19, 0x0, 0x0);
        gbc.writeMem(0xde67, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbb4a);
        EXPECT(gbc.pc(), 0xde69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde67), 0xcb);
        EXPECT(gbc.readMem(0xde68), 0xeb);
        // CB EB 004E
        gbc.setState(0xda33, 0x42b7, 0x1580, 0xfeb6, 0xcb0e, 0x1929, 0x0, 0x1);
        gbc.writeMem(0xda33, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x42b7);
        EXPECT(gbc.pc(), 0xda35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda33), 0xcb);
        EXPECT(gbc.readMem(0xda34), 0xeb);
        // CB EB 004F
        gbc.setState(0x6064, 0xec4e, 0x8180, 0xecd0, 0x1b23, 0xce76, 0x0, 0x1);
        gbc.writeMem(0x6064, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xec4e);
        EXPECT(gbc.pc(), 0x6066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0050
        gbc.setState(0x33d9, 0xfb2d, 0x59c0, 0xf901, 0x53a9, 0x272f, 0x1, 0x0);
        gbc.writeMem(0x33d9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfb2d);
        EXPECT(gbc.pc(), 0x33db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0051
        gbc.setState(0xb83e, 0x917, 0x2780, 0x20d9, 0xdeb6, 0x6a20, 0x1, 0x0);
        gbc.writeMem(0xb83e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x917);
        EXPECT(gbc.pc(), 0xb840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb83e), 0xcb);
        EXPECT(gbc.readMem(0xb83f), 0xeb);
        // CB EB 0052
        gbc.setState(0xd715, 0xd85b, 0xef10, 0xf886, 0xbce4, 0x33d8, 0x0, 0x0);
        gbc.writeMem(0xd715, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd85b);
        EXPECT(gbc.pc(), 0xd717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd715), 0xcb);
        EXPECT(gbc.readMem(0xd716), 0xeb);
        // CB EB 0053
        gbc.setState(0xa942, 0x6d68, 0xec30, 0x8c0c, 0xf9b0, 0xaca6, 0x0, 0x0);
        gbc.writeMem(0xa942, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6d68);
        EXPECT(gbc.pc(), 0xa944);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa942), 0xcb);
        EXPECT(gbc.readMem(0xa943), 0xeb);
        // CB EB 0054
        gbc.setState(0x8928, 0x5679, 0xa780, 0xcadd, 0x9185, 0x71e0, 0x0, 0x1);
        gbc.writeMem(0x8928, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5679);
        EXPECT(gbc.pc(), 0x892a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8928), 0xcb);
        EXPECT(gbc.readMem(0x8929), 0xeb);
        // CB EB 0055
        gbc.setState(0x9bf8, 0xf316, 0xccc0, 0xbf35, 0xd104, 0xdd1b, 0x1, 0x0);
        gbc.writeMem(0x9bf8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf316);
        EXPECT(gbc.pc(), 0x9bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf8), 0xcb);
        EXPECT(gbc.readMem(0x9bf9), 0xeb);
        // CB EB 0057
        gbc.setState(0x7a5c, 0xe7e6, 0x6860, 0x65f8, 0x65fe, 0xd30c, 0x1, 0x0);
        gbc.writeMem(0x7a5c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe7e6);
        EXPECT(gbc.pc(), 0x7a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0058
        gbc.setState(0x19b7, 0xf651, 0xceb0, 0xe0a5, 0x5090, 0x2145, 0x0, 0x0);
        gbc.writeMem(0x19b7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf651);
        EXPECT(gbc.pc(), 0x19b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0059
        gbc.setState(0x6f1b, 0xaeb6, 0xc180, 0x8fac, 0xd11d, 0xfd89, 0x1, 0x0);
        gbc.writeMem(0x6f1b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xaeb6);
        EXPECT(gbc.pc(), 0x6f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 005A
        gbc.setState(0xd7ac, 0xfc0d, 0x1310, 0xd1a5, 0xdd7d, 0x9aa3, 0x1, 0x1);
        gbc.writeMem(0xd7ac, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfc0d);
        EXPECT(gbc.pc(), 0xd7ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ac), 0xcb);
        EXPECT(gbc.readMem(0xd7ad), 0xeb);
        // CB EB 005B
        gbc.setState(0x98d8, 0xcc7b, 0x4bc0, 0x6312, 0x3f01, 0xcaaa, 0x1, 0x0);
        gbc.writeMem(0x98d8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcc7b);
        EXPECT(gbc.pc(), 0x98da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d8), 0xcb);
        EXPECT(gbc.readMem(0x98d9), 0xeb);
        // CB EB 005C
        gbc.setState(0x811e, 0x2924, 0x4cb0, 0xa944, 0xe54d, 0xec72, 0x1, 0x1);
        gbc.writeMem(0x811e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2924);
        EXPECT(gbc.pc(), 0x8120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x811e), 0xcb);
        EXPECT(gbc.readMem(0x811f), 0xeb);
        // CB EB 005D
        gbc.setState(0x6bf5, 0x94ed, 0x3c60, 0x92ad, 0x9c7d, 0x96c4, 0x1, 0x0);
        gbc.writeMem(0x6bf5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x94ed);
        EXPECT(gbc.pc(), 0x6bf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 005E
        gbc.setState(0x6a6a, 0x8623, 0x1320, 0x1aaa, 0xea56, 0xa22f, 0x0, 0x1);
        gbc.writeMem(0x6a6a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8623);
        EXPECT(gbc.pc(), 0x6a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 005F
        gbc.setState(0x947d, 0x2328, 0x6f00, 0xb0d3, 0x9d59, 0x41f1, 0x1, 0x1);
        gbc.writeMem(0x947d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2328);
        EXPECT(gbc.pc(), 0x947f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947d), 0xcb);
        EXPECT(gbc.readMem(0x947e), 0xeb);
        // CB EB 0060
        gbc.setState(0xdd7d, 0x767e, 0xd080, 0xec9e, 0x613c, 0x12ba, 0x1, 0x1);
        gbc.writeMem(0xdd7d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x767e);
        EXPECT(gbc.pc(), 0xdd7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd7d), 0xcb);
        EXPECT(gbc.readMem(0xdd7e), 0xeb);
        // CB EB 0061
        gbc.setState(0xebe1, 0x7dc, 0xae50, 0xcf44, 0xda9d, 0x5f1c, 0x1, 0x0);
        gbc.writeMem(0xebe1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7dc);
        EXPECT(gbc.pc(), 0xebe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebe1), 0xcb);
        EXPECT(gbc.readMem(0xebe2), 0xeb);
        // CB EB 0062
        gbc.setState(0x6bfc, 0x934, 0x2560, 0x22e0, 0x306b, 0x1012, 0x0, 0x0);
        gbc.writeMem(0x6bfc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x934);
        EXPECT(gbc.pc(), 0x6bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0063
        gbc.setState(0x6564, 0x288f, 0x18d0, 0xd4c1, 0x12ee, 0x15c4, 0x1, 0x1);
        gbc.writeMem(0x6564, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x288f);
        EXPECT(gbc.pc(), 0x6566);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0064
        gbc.setState(0x582, 0x8e1a, 0x7860, 0x6190, 0x848, 0x8958, 0x1, 0x0);
        gbc.writeMem(0x582, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8e1a);
        EXPECT(gbc.pc(), 0x584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0065
        gbc.setState(0xd867, 0xc4bf, 0xdae0, 0x6676, 0x308c, 0x6df, 0x1, 0x0);
        gbc.writeMem(0xd867, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc4bf);
        EXPECT(gbc.pc(), 0xd869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd867), 0xcb);
        EXPECT(gbc.readMem(0xd868), 0xeb);
        // CB EB 0066
        gbc.setState(0x9751, 0x2635, 0xa250, 0x9e43, 0xe700, 0xb2f2, 0x0, 0x1);
        gbc.writeMem(0x9751, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2635);
        EXPECT(gbc.pc(), 0x9753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9751), 0xcb);
        EXPECT(gbc.readMem(0x9752), 0xeb);
        // CB EB 0067
        gbc.setState(0x3a74, 0xee2d, 0x23e0, 0x7eea, 0x3677, 0xf4cf, 0x1, 0x1);
        gbc.writeMem(0x3a74, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xee2d);
        EXPECT(gbc.pc(), 0x3a76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0068
        gbc.setState(0xa6b9, 0xddd4, 0x7d00, 0xf99f, 0xadb9, 0xbc0f, 0x0, 0x0);
        gbc.writeMem(0xa6b9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xddd4);
        EXPECT(gbc.pc(), 0xa6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b9), 0xcb);
        EXPECT(gbc.readMem(0xa6ba), 0xeb);
        // CB EB 0069
        gbc.setState(0x9809, 0x94f1, 0x5410, 0xee2d, 0x1c3f, 0xdcc7, 0x0, 0x1);
        gbc.writeMem(0x9809, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x94f1);
        EXPECT(gbc.pc(), 0x980b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9809), 0xcb);
        EXPECT(gbc.readMem(0x980a), 0xeb);
        // CB EB 006A
        gbc.setState(0x83d9, 0x538f, 0xc530, 0x8336, 0xd9f5, 0x2f67, 0x1, 0x0);
        gbc.writeMem(0x83d9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x538f);
        EXPECT(gbc.pc(), 0x83db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83d9), 0xcb);
        EXPECT(gbc.readMem(0x83da), 0xeb);
        // CB EB 006B
        gbc.setState(0x6ab7, 0x8605, 0x9b80, 0x33a6, 0x5edc, 0xce51, 0x0, 0x1);
        gbc.writeMem(0x6ab7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8605);
        EXPECT(gbc.pc(), 0x6ab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 006C
        gbc.setState(0x4be2, 0x12b8, 0x58a0, 0x3a4f, 0xce68, 0xbd32, 0x1, 0x1);
        gbc.writeMem(0x4be2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x12b8);
        EXPECT(gbc.pc(), 0x4be4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 006D
        gbc.setState(0x8151, 0x3280, 0x7ea0, 0x9c63, 0xc3f1, 0x6a1c, 0x1, 0x1);
        gbc.writeMem(0x8151, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3280);
        EXPECT(gbc.pc(), 0x8153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8151), 0xcb);
        EXPECT(gbc.readMem(0x8152), 0xeb);
        // CB EB 006F
        gbc.setState(0x7b1a, 0x9e9b, 0xeab0, 0x6078, 0xe665, 0xd268, 0x0, 0x1);
        gbc.writeMem(0x7b1a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9e9b);
        EXPECT(gbc.pc(), 0x7b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0070
        gbc.setState(0xa6c2, 0x8be, 0xdf70, 0x454a, 0xcdeb, 0x81b5, 0x0, 0x0);
        gbc.writeMem(0xa6c2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8be);
        EXPECT(gbc.pc(), 0xa6c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6c2), 0xcb);
        EXPECT(gbc.readMem(0xa6c3), 0xeb);
        // CB EB 0071
        gbc.setState(0xc482, 0x91e8, 0xc250, 0xb49b, 0x7887, 0x81a, 0x1, 0x0);
        gbc.writeMem(0xc482, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x91e8);
        EXPECT(gbc.pc(), 0xc484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc482), 0xcb);
        EXPECT(gbc.readMem(0xc483), 0xeb);
        // CB EB 0072
        gbc.setState(0x7bff, 0xbcb4, 0xebb0, 0x2e89, 0x4886, 0x1f84, 0x1, 0x0);
        gbc.writeMem(0x7bff, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbcb4);
        EXPECT(gbc.pc(), 0x7c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0073
        gbc.setState(0x5d6e, 0x67f3, 0x87b0, 0xb7fc, 0x24fa, 0x5650, 0x1, 0x0);
        gbc.writeMem(0x5d6e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x67f3);
        EXPECT(gbc.pc(), 0x5d70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0074
        gbc.setState(0x880d, 0xa98d, 0x3d0, 0x7a4e, 0x7f96, 0x43e0, 0x1, 0x0);
        gbc.writeMem(0x880d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa98d);
        EXPECT(gbc.pc(), 0x880f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x880d), 0xcb);
        EXPECT(gbc.readMem(0x880e), 0xeb);
        // CB EB 0075
        gbc.setState(0x213a, 0xd33e, 0x46b0, 0x7066, 0xdfad, 0xdddb, 0x1, 0x0);
        gbc.writeMem(0x213a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd33e);
        EXPECT(gbc.pc(), 0x213c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0076
        gbc.setState(0x93ce, 0x1e77, 0xd840, 0x8296, 0x6c4f, 0x4e0e, 0x0, 0x0);
        gbc.writeMem(0x93ce, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1e77);
        EXPECT(gbc.pc(), 0x93d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ce), 0xcb);
        EXPECT(gbc.readMem(0x93cf), 0xeb);
        // CB EB 0077
        gbc.setState(0x1767, 0xb4af, 0xd80, 0x266f, 0x9a92, 0x44b9, 0x1, 0x1);
        gbc.writeMem(0x1767, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb4af);
        EXPECT(gbc.pc(), 0x1769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0078
        gbc.setState(0xd032, 0xa054, 0xe80, 0x76d4, 0x5129, 0xb767, 0x0, 0x1);
        gbc.writeMem(0xd032, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa054);
        EXPECT(gbc.pc(), 0xd034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd032), 0xcb);
        EXPECT(gbc.readMem(0xd033), 0xeb);
        // CB EB 0079
        gbc.setState(0x3191, 0xdc21, 0x30, 0x853e, 0x29db, 0x818f, 0x1, 0x0);
        gbc.writeMem(0x3191, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xdc21);
        EXPECT(gbc.pc(), 0x3193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 007A
        gbc.setState(0xbc30, 0x2ed9, 0xf820, 0x6210, 0x6052, 0xab17, 0x1, 0x0);
        gbc.writeMem(0xbc30, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2ed9);
        EXPECT(gbc.pc(), 0xbc32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc30), 0xcb);
        EXPECT(gbc.readMem(0xbc31), 0xeb);
        // CB EB 007B
        gbc.setState(0x5706, 0xc8c1, 0xc0e0, 0x173, 0xe23d, 0xed4f, 0x0, 0x0);
        gbc.writeMem(0x5706, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc8c1);
        EXPECT(gbc.pc(), 0x5708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 007C
        gbc.setState(0x9109, 0xd8b6, 0x8980, 0x9671, 0x7890, 0xbcb9, 0x0, 0x0);
        gbc.writeMem(0x9109, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd8b6);
        EXPECT(gbc.pc(), 0x910b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9109), 0xcb);
        EXPECT(gbc.readMem(0x910a), 0xeb);
        // CB EB 007D
        gbc.setState(0xc6de, 0x6e53, 0xf340, 0xee26, 0x24e5, 0xb615, 0x1, 0x0);
        gbc.writeMem(0xc6de, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6e53);
        EXPECT(gbc.pc(), 0xc6e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6de), 0xcb);
        EXPECT(gbc.readMem(0xc6df), 0xeb);
        // CB EB 007E
        gbc.setState(0x5c74, 0x7793, 0x7a30, 0x2cc9, 0x6d19, 0x4ad, 0x1, 0x1);
        gbc.writeMem(0x5c74, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7793);
        EXPECT(gbc.pc(), 0x5c76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 007F
        gbc.setState(0xd29f, 0x75ad, 0xbeb0, 0x9314, 0x3dc5, 0xa7fa, 0x1, 0x1);
        gbc.writeMem(0xd29f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x75ad);
        EXPECT(gbc.pc(), 0xd2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd29f), 0xcb);
        EXPECT(gbc.readMem(0xd2a0), 0xeb);
        // CB EB 0080
        gbc.setState(0xd2b1, 0xb1f2, 0xfaa0, 0xea51, 0xafe2, 0x54db, 0x1, 0x0);
        gbc.writeMem(0xd2b1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb1f2);
        EXPECT(gbc.pc(), 0xd2b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b1), 0xcb);
        EXPECT(gbc.readMem(0xd2b2), 0xeb);
        // CB EB 0081
        gbc.setState(0xcc1, 0x8c68, 0x4b00, 0xa225, 0x3a7b, 0x4844, 0x1, 0x1);
        gbc.writeMem(0xcc1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8c68);
        EXPECT(gbc.pc(), 0xcc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0082
        gbc.setState(0x6adb, 0x1928, 0xc7b0, 0xb691, 0xbe9, 0x4ffb, 0x0, 0x1);
        gbc.writeMem(0x6adb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1928);
        EXPECT(gbc.pc(), 0x6add);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0083
        gbc.setState(0x4e8c, 0xc762, 0x310, 0xf823, 0xf318, 0xc9b9, 0x1, 0x0);
        gbc.writeMem(0x4e8c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc762);
        EXPECT(gbc.pc(), 0x4e8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0084
        gbc.setState(0xa047, 0x4e3a, 0x2ed0, 0xfb9, 0x9ebf, 0xe6ec, 0x1, 0x0);
        gbc.writeMem(0xa047, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4e3a);
        EXPECT(gbc.pc(), 0xa049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa047), 0xcb);
        EXPECT(gbc.readMem(0xa048), 0xeb);
        // CB EB 0085
        gbc.setState(0xe444, 0x8a03, 0x95d0, 0xd963, 0x5dc7, 0xb6c4, 0x1, 0x1);
        gbc.writeMem(0xe444, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8a03);
        EXPECT(gbc.pc(), 0xe446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe444), 0xcb);
        EXPECT(gbc.readMem(0xe445), 0xeb);
        // CB EB 0086
        gbc.setState(0x2731, 0x98c2, 0x9ec0, 0xd97b, 0xeb6d, 0xa594, 0x0, 0x1);
        gbc.writeMem(0x2731, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x98c2);
        EXPECT(gbc.pc(), 0x2733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0087
        gbc.setState(0x1962, 0x38ea, 0x5d00, 0x75bf, 0xf6ac, 0x6115, 0x1, 0x0);
        gbc.writeMem(0x1962, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x38ea);
        EXPECT(gbc.pc(), 0x1964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0088
        gbc.setState(0xee3f, 0x25, 0xf310, 0xcb62, 0x56b0, 0x25e9, 0x0, 0x0);
        gbc.writeMem(0xee3f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x25);
        EXPECT(gbc.pc(), 0xee41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3f), 0xcb);
        EXPECT(gbc.readMem(0xee40), 0xeb);
        // CB EB 0089
        gbc.setState(0xcf26, 0x8ee7, 0x3b00, 0x60ea, 0xa937, 0xfc7f, 0x0, 0x1);
        gbc.writeMem(0xcf26, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8ee7);
        EXPECT(gbc.pc(), 0xcf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf26), 0xcb);
        EXPECT(gbc.readMem(0xcf27), 0xeb);
        // CB EB 008A
        gbc.setState(0xbf9d, 0x2192, 0xa0e0, 0xd795, 0xdf4b, 0x1b1e, 0x1, 0x1);
        gbc.writeMem(0xbf9d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2192);
        EXPECT(gbc.pc(), 0xbf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf9d), 0xcb);
        EXPECT(gbc.readMem(0xbf9e), 0xeb);
        // CB EB 008B
        gbc.setState(0xc359, 0x816d, 0xb540, 0x3234, 0xd471, 0xe178, 0x0, 0x0);
        gbc.writeMem(0xc359, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x816d);
        EXPECT(gbc.pc(), 0xc35b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc359), 0xcb);
        EXPECT(gbc.readMem(0xc35a), 0xeb);
        // CB EB 008C
        gbc.setState(0x1777, 0xbbe0, 0xc0e0, 0xfe73, 0x83fc, 0x3f2e, 0x0, 0x0);
        gbc.writeMem(0x1777, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbbe0);
        EXPECT(gbc.pc(), 0x1779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 008D
        gbc.setState(0x2bc2, 0xb45e, 0xf860, 0xc6b5, 0xaf3a, 0x5b1c, 0x0, 0x0);
        gbc.writeMem(0x2bc2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb45e);
        EXPECT(gbc.pc(), 0x2bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 008F
        gbc.setState(0x298c, 0x8f0e, 0x8050, 0x53ef, 0x86b5, 0xdd53, 0x1, 0x1);
        gbc.writeMem(0x298c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8f0e);
        EXPECT(gbc.pc(), 0x298e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0090
        gbc.setState(0x6213, 0x189e, 0x2590, 0x3cad, 0xdb48, 0xb87, 0x0, 0x1);
        gbc.writeMem(0x6213, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x189e);
        EXPECT(gbc.pc(), 0x6215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0091
        gbc.setState(0xd5e6, 0xba85, 0x1970, 0x7494, 0x7bb3, 0x572a, 0x0, 0x0);
        gbc.writeMem(0xd5e6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xba85);
        EXPECT(gbc.pc(), 0xd5e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5e6), 0xcb);
        EXPECT(gbc.readMem(0xd5e7), 0xeb);
        // CB EB 0092
        gbc.setState(0x6f2d, 0x2613, 0xc90, 0x3a44, 0xe539, 0xfc3a, 0x1, 0x0);
        gbc.writeMem(0x6f2d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2613);
        EXPECT(gbc.pc(), 0x6f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0093
        gbc.setState(0x9e98, 0xc233, 0xdca0, 0x6a95, 0xbabf, 0x5aad, 0x1, 0x1);
        gbc.writeMem(0x9e98, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc233);
        EXPECT(gbc.pc(), 0x9e9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e98), 0xcb);
        EXPECT(gbc.readMem(0x9e99), 0xeb);
        // CB EB 0094
        gbc.setState(0x8ce, 0x8b74, 0x3750, 0x1819, 0xac44, 0x4118, 0x0, 0x1);
        gbc.writeMem(0x8ce, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8b74);
        EXPECT(gbc.pc(), 0x8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0095
        gbc.setState(0x6a9a, 0x2c3, 0xc380, 0xc8b4, 0xe5e8, 0x597, 0x1, 0x0);
        gbc.writeMem(0x6a9a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2c3);
        EXPECT(gbc.pc(), 0x6a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0096
        gbc.setState(0x1f55, 0xfd2b, 0xe1d0, 0x2235, 0x9a48, 0x19e9, 0x0, 0x0);
        gbc.writeMem(0x1f55, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfd2b);
        EXPECT(gbc.pc(), 0x1f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0097
        gbc.setState(0xe24d, 0x955d, 0x3710, 0xd66c, 0xa640, 0xffef, 0x1, 0x1);
        gbc.writeMem(0xe24d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x955d);
        EXPECT(gbc.pc(), 0xe24f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe24d), 0xcb);
        EXPECT(gbc.readMem(0xe24e), 0xeb);
        // CB EB 0098
        gbc.setState(0xbc69, 0x8ed7, 0xa2b0, 0xc199, 0x9f31, 0xaa25, 0x0, 0x1);
        gbc.writeMem(0xbc69, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8ed7);
        EXPECT(gbc.pc(), 0xbc6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc69), 0xcb);
        EXPECT(gbc.readMem(0xbc6a), 0xeb);
        // CB EB 0099
        gbc.setState(0xdf15, 0x4577, 0xfd80, 0x624d, 0x95f2, 0xece1, 0x0, 0x1);
        gbc.writeMem(0xdf15, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4577);
        EXPECT(gbc.pc(), 0xdf17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf15), 0xcb);
        EXPECT(gbc.readMem(0xdf16), 0xeb);
        // CB EB 009A
        gbc.setState(0xbe39, 0xf525, 0x20d0, 0x6afa, 0x6143, 0xc762, 0x0, 0x0);
        gbc.writeMem(0xbe39, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf525);
        EXPECT(gbc.pc(), 0xbe3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe39), 0xcb);
        EXPECT(gbc.readMem(0xbe3a), 0xeb);
        // CB EB 009B
        gbc.setState(0x82d0, 0x5dc0, 0xf1d0, 0xe5a5, 0x496c, 0xc089, 0x1, 0x1);
        gbc.writeMem(0x82d0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x5dc0);
        EXPECT(gbc.pc(), 0x82d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d0), 0xcb);
        EXPECT(gbc.readMem(0x82d1), 0xeb);
        // CB EB 009C
        gbc.setState(0xd671, 0xfcaa, 0xc170, 0x739c, 0xae9c, 0xa8d5, 0x0, 0x0);
        gbc.writeMem(0xd671, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfcaa);
        EXPECT(gbc.pc(), 0xd673);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd671), 0xcb);
        EXPECT(gbc.readMem(0xd672), 0xeb);
        // CB EB 009D
        gbc.setState(0x2771, 0x3eb, 0x65a0, 0x585c, 0x7cf0, 0xb183, 0x1, 0x1);
        gbc.writeMem(0x2771, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3eb);
        EXPECT(gbc.pc(), 0x2773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 009E
        gbc.setState(0x3e7a, 0xef53, 0x56a0, 0x5541, 0xdd31, 0x73a7, 0x1, 0x0);
        gbc.writeMem(0x3e7a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xef53);
        EXPECT(gbc.pc(), 0x3e7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 009F
        gbc.setState(0xcd10, 0xea9c, 0x3850, 0xb76d, 0x262, 0x1a1f, 0x1, 0x0);
        gbc.writeMem(0xcd10, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xea9c);
        EXPECT(gbc.pc(), 0xcd12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd10), 0xcb);
        EXPECT(gbc.readMem(0xcd11), 0xeb);
        // CB EB 00A0
        gbc.setState(0xeb3d, 0xf9b9, 0xa760, 0x76d0, 0x2be0, 0x3204, 0x0, 0x0);
        gbc.writeMem(0xeb3d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf9b9);
        EXPECT(gbc.pc(), 0xeb3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb3d), 0xcb);
        EXPECT(gbc.readMem(0xeb3e), 0xeb);
        // CB EB 00A1
        gbc.setState(0x6bce, 0xe15f, 0x5430, 0xbc3e, 0x8fef, 0x1dff, 0x0, 0x0);
        gbc.writeMem(0x6bce, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe15f);
        EXPECT(gbc.pc(), 0x6bd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00A2
        gbc.setState(0x4e58, 0xef9c, 0x1190, 0x6110, 0xdcd9, 0xfd8a, 0x0, 0x0);
        gbc.writeMem(0x4e58, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xef9c);
        EXPECT(gbc.pc(), 0x4e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00A4
        gbc.setState(0x29d5, 0xc29, 0x6da0, 0x946c, 0x5cc, 0x8a9d, 0x0, 0x1);
        gbc.writeMem(0x29d5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc29);
        EXPECT(gbc.pc(), 0x29d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00A5
        gbc.setState(0xe4d9, 0x4b2e, 0x7690, 0xa1d2, 0x710, 0x8673, 0x0, 0x0);
        gbc.writeMem(0xe4d9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4b2e);
        EXPECT(gbc.pc(), 0xe4db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d9), 0xcb);
        EXPECT(gbc.readMem(0xe4da), 0xeb);
        // CB EB 00A6
        gbc.setState(0x1765, 0x9223, 0x62b0, 0xb4da, 0x8665, 0x429b, 0x0, 0x0);
        gbc.writeMem(0x1765, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9223);
        EXPECT(gbc.pc(), 0x1767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00A7
        gbc.setState(0x91, 0xa896, 0x8410, 0x252b, 0x5820, 0xb606, 0x0, 0x1);
        gbc.writeMem(0x91, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa896);
        EXPECT(gbc.pc(), 0x93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00A8
        gbc.setState(0x4261, 0xc4f7, 0x22a0, 0xc9fe, 0x5f5c, 0x2a30, 0x1, 0x1);
        gbc.writeMem(0x4261, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc4f7);
        EXPECT(gbc.pc(), 0x4263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00A9
        gbc.setState(0x2a7c, 0xbf58, 0x1040, 0xf191, 0x9187, 0xbfed, 0x1, 0x0);
        gbc.writeMem(0x2a7c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbf58);
        EXPECT(gbc.pc(), 0x2a7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00AA
        gbc.setState(0x2fc4, 0x607e, 0xca40, 0xdf2f, 0x93f4, 0x1aeb, 0x0, 0x0);
        gbc.writeMem(0x2fc4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x607e);
        EXPECT(gbc.pc(), 0x2fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00AB
        gbc.setState(0x6a8, 0x7e01, 0x6270, 0xa7d7, 0xb48, 0xe4c5, 0x1, 0x0);
        gbc.writeMem(0x6a8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7e01);
        EXPECT(gbc.pc(), 0x6aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00AC
        gbc.setState(0x37a8, 0x8414, 0xa030, 0x1cd0, 0x9cff, 0xf959, 0x0, 0x1);
        gbc.writeMem(0x37a8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8414);
        EXPECT(gbc.pc(), 0x37aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00AD
        gbc.setState(0xf6b, 0xd4f0, 0xb270, 0xf4a3, 0x2263, 0xb2c5, 0x0, 0x1);
        gbc.writeMem(0xf6b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd4f0);
        EXPECT(gbc.pc(), 0xf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00AE
        gbc.setState(0xebc5, 0xeb4d, 0xbe70, 0x89e2, 0xef31, 0x1ec, 0x1, 0x1);
        gbc.writeMem(0xebc5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xeb4d);
        EXPECT(gbc.pc(), 0xebc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc5), 0xcb);
        EXPECT(gbc.readMem(0xebc6), 0xeb);
        // CB EB 00AF
        gbc.setState(0xfe3, 0xd476, 0xbba0, 0xc532, 0x79fa, 0xa15, 0x1, 0x1);
        gbc.writeMem(0xfe3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd476);
        EXPECT(gbc.pc(), 0xfe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00B0
        gbc.setState(0x9059, 0xd073, 0x1ab0, 0x4db8, 0x5d1c, 0xed75, 0x1, 0x0);
        gbc.writeMem(0x9059, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd073);
        EXPECT(gbc.pc(), 0x905b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9059), 0xcb);
        EXPECT(gbc.readMem(0x905a), 0xeb);
        // CB EB 00B1
        gbc.setState(0x238f, 0xd255, 0x7c0, 0x5e4c, 0xe0c6, 0x6232, 0x0, 0x1);
        gbc.writeMem(0x238f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd255);
        EXPECT(gbc.pc(), 0x2391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00B2
        gbc.setState(0x5b16, 0xcc91, 0x50a0, 0x846a, 0x3401, 0xb77d, 0x1, 0x0);
        gbc.writeMem(0x5b16, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcc91);
        EXPECT(gbc.pc(), 0x5b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00B3
        gbc.setState(0x5fb8, 0x37c2, 0xa600, 0xfc51, 0xa8fe, 0xb03a, 0x1, 0x0);
        gbc.writeMem(0x5fb8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x37c2);
        EXPECT(gbc.pc(), 0x5fba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00B4
        gbc.setState(0x32ff, 0x69e, 0xc3d0, 0xd5c6, 0xbacf, 0x4fe3, 0x1, 0x1);
        gbc.writeMem(0x32ff, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x69e);
        EXPECT(gbc.pc(), 0x3301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00B5
        gbc.setState(0x9980, 0x6b00, 0x63e0, 0xbf7b, 0x7976, 0x1bc3, 0x0, 0x1);
        gbc.writeMem(0x9980, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6b00);
        EXPECT(gbc.pc(), 0x9982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9980), 0xcb);
        EXPECT(gbc.readMem(0x9981), 0xeb);
        // CB EB 00B6
        gbc.setState(0xbe02, 0x1e7f, 0x68b0, 0x4210, 0xf8c7, 0xede8, 0x1, 0x1);
        gbc.writeMem(0xbe02, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1e7f);
        EXPECT(gbc.pc(), 0xbe04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe02), 0xcb);
        EXPECT(gbc.readMem(0xbe03), 0xeb);
        // CB EB 00B7
        gbc.setState(0x4ec9, 0x5738, 0x8df0, 0x7477, 0x7a2b, 0x709d, 0x1, 0x1);
        gbc.writeMem(0x4ec9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5738);
        EXPECT(gbc.pc(), 0x4ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00B8
        gbc.setState(0x1af2, 0xa8fd, 0xb4a0, 0xd83d, 0x4640, 0xbcea, 0x0, 0x1);
        gbc.writeMem(0x1af2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa8fd);
        EXPECT(gbc.pc(), 0x1af4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00B9
        gbc.setState(0x2a55, 0x1ef1, 0xbf50, 0x60cf, 0xe247, 0x7faa, 0x0, 0x0);
        gbc.writeMem(0x2a55, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1ef1);
        EXPECT(gbc.pc(), 0x2a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00BB
        gbc.setState(0xbbee, 0x9ce8, 0x20f0, 0x90d9, 0x9b2b, 0xbb1, 0x1, 0x0);
        gbc.writeMem(0xbbee, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9ce8);
        EXPECT(gbc.pc(), 0xbbf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbee), 0xcb);
        EXPECT(gbc.readMem(0xbbef), 0xeb);
        // CB EB 00BC
        gbc.setState(0xe0b5, 0x5272, 0xf5e0, 0x9876, 0x3d33, 0xfe94, 0x0, 0x1);
        gbc.writeMem(0xe0b5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5272);
        EXPECT(gbc.pc(), 0xe0b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0b5), 0xcb);
        EXPECT(gbc.readMem(0xe0b6), 0xeb);
        // CB EB 00BD
        gbc.setState(0xe147, 0x34a8, 0x3db0, 0xc9d2, 0x5319, 0xdeaa, 0x1, 0x0);
        gbc.writeMem(0xe147, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x34a8);
        EXPECT(gbc.pc(), 0xe149);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe147), 0xcb);
        EXPECT(gbc.readMem(0xe148), 0xeb);
        // CB EB 00BE
        gbc.setState(0x84cc, 0xae0d, 0x94d0, 0x880a, 0xa973, 0xc61a, 0x0, 0x0);
        gbc.writeMem(0x84cc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xae0d);
        EXPECT(gbc.pc(), 0x84ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84cc), 0xcb);
        EXPECT(gbc.readMem(0x84cd), 0xeb);
        // CB EB 00BF
        gbc.setState(0x1d2, 0x298a, 0x5960, 0x7e2, 0x33a9, 0x874a, 0x1, 0x0);
        gbc.writeMem(0x1d2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x298a);
        EXPECT(gbc.pc(), 0x1d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00C0
        gbc.setState(0x5445, 0xda3d, 0xad90, 0x7ca9, 0x3518, 0x550, 0x0, 0x1);
        gbc.writeMem(0x5445, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xda3d);
        EXPECT(gbc.pc(), 0x5447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00C1
        gbc.setState(0x81cf, 0x3913, 0x7b10, 0x47a3, 0x8f8b, 0x88bb, 0x1, 0x1);
        gbc.writeMem(0x81cf, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3913);
        EXPECT(gbc.pc(), 0x81d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81cf), 0xcb);
        EXPECT(gbc.readMem(0x81d0), 0xeb);
        // CB EB 00C2
        gbc.setState(0x56e5, 0x96f5, 0x17e0, 0x6d79, 0xfd90, 0x87aa, 0x1, 0x1);
        gbc.writeMem(0x56e5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x96f5);
        EXPECT(gbc.pc(), 0x56e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00C4
        gbc.setState(0x8a5a, 0xd5d, 0xe600, 0xfdcb, 0xdeea, 0xbc88, 0x0, 0x0);
        gbc.writeMem(0x8a5a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd5d);
        EXPECT(gbc.pc(), 0x8a5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5a), 0xcb);
        EXPECT(gbc.readMem(0x8a5b), 0xeb);
        // CB EB 00C5
        gbc.setState(0xb5ed, 0xecd1, 0x8e80, 0x536d, 0x3848, 0x6ff7, 0x0, 0x1);
        gbc.writeMem(0xb5ed, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xecd1);
        EXPECT(gbc.pc(), 0xb5ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ed), 0xcb);
        EXPECT(gbc.readMem(0xb5ee), 0xeb);
        // CB EB 00C6
        gbc.setState(0xa84a, 0x4457, 0x31c0, 0xf41a, 0xcf3a, 0xdfec, 0x0, 0x1);
        gbc.writeMem(0xa84a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4457);
        EXPECT(gbc.pc(), 0xa84c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa84a), 0xcb);
        EXPECT(gbc.readMem(0xa84b), 0xeb);
        // CB EB 00C7
        gbc.setState(0x30e6, 0xcc25, 0xfd30, 0xa7c9, 0x5c29, 0xc405, 0x0, 0x0);
        gbc.writeMem(0x30e6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xcc25);
        EXPECT(gbc.pc(), 0x30e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00C8
        gbc.setState(0xb56a, 0xb459, 0x1a10, 0x2c2b, 0x7c64, 0xdf31, 0x0, 0x1);
        gbc.writeMem(0xb56a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb459);
        EXPECT(gbc.pc(), 0xb56c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56a), 0xcb);
        EXPECT(gbc.readMem(0xb56b), 0xeb);
        // CB EB 00C9
        gbc.setState(0x79d1, 0xbda7, 0x5cb0, 0x41a5, 0xc4b5, 0x96f5, 0x1, 0x0);
        gbc.writeMem(0x79d1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbda7);
        EXPECT(gbc.pc(), 0x79d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00CA
        gbc.setState(0xc2d7, 0x9b23, 0x1b0, 0xce82, 0x9955, 0x3cd5, 0x0, 0x1);
        gbc.writeMem(0xc2d7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9b23);
        EXPECT(gbc.pc(), 0xc2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d7), 0xcb);
        EXPECT(gbc.readMem(0xc2d8), 0xeb);
        // CB EB 00CC
        gbc.setState(0x898a, 0xecbf, 0xffb0, 0x19b9, 0xc258, 0xa7a7, 0x0, 0x1);
        gbc.writeMem(0x898a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xecbf);
        EXPECT(gbc.pc(), 0x898c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x898a), 0xcb);
        EXPECT(gbc.readMem(0x898b), 0xeb);
        // CB EB 00CD
        gbc.setState(0xb8d7, 0x8e9a, 0x7580, 0x9772, 0xe4a9, 0xac4, 0x0, 0x0);
        gbc.writeMem(0xb8d7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8e9a);
        EXPECT(gbc.pc(), 0xb8d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d7), 0xcb);
        EXPECT(gbc.readMem(0xb8d8), 0xeb);
        // CB EB 00CE
        gbc.setState(0xef8d, 0xcad9, 0x39b0, 0x8788, 0x88fe, 0x62de, 0x1, 0x0);
        gbc.writeMem(0xef8d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xcad9);
        EXPECT(gbc.pc(), 0xef8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8d), 0xcb);
        EXPECT(gbc.readMem(0xef8e), 0xeb);
        // CB EB 00CF
        gbc.setState(0xea23, 0x7d44, 0x7e30, 0xac3b, 0xef77, 0xbfd9, 0x0, 0x1);
        gbc.writeMem(0xea23, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7d44);
        EXPECT(gbc.pc(), 0xea25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea23), 0xcb);
        EXPECT(gbc.readMem(0xea24), 0xeb);
        // CB EB 00D0
        gbc.setState(0x640e, 0x6e30, 0x9370, 0xbacf, 0x33b3, 0xbe1f, 0x0, 0x0);
        gbc.writeMem(0x640e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6e30);
        EXPECT(gbc.pc(), 0x6410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00D2
        gbc.setState(0x51c3, 0x66c9, 0x12e0, 0x9c57, 0xf8fd, 0xd241, 0x1, 0x1);
        gbc.writeMem(0x51c3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x66c9);
        EXPECT(gbc.pc(), 0x51c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00D3
        gbc.setState(0x8b80, 0xc2a, 0x4fe0, 0xf2dd, 0xac9e, 0x5a52, 0x1, 0x0);
        gbc.writeMem(0x8b80, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc2a);
        EXPECT(gbc.pc(), 0x8b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b80), 0xcb);
        EXPECT(gbc.readMem(0x8b81), 0xeb);
        // CB EB 00D4
        gbc.setState(0x2c8f, 0xb365, 0xfbf0, 0xfb01, 0x8b98, 0x65e9, 0x0, 0x0);
        gbc.writeMem(0x2c8f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb365);
        EXPECT(gbc.pc(), 0x2c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00D5
        gbc.setState(0x66ba, 0x5d95, 0xdb70, 0x80df, 0x916a, 0x7e79, 0x0, 0x1);
        gbc.writeMem(0x66ba, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5d95);
        EXPECT(gbc.pc(), 0x66bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00D6
        gbc.setState(0xa7c, 0x12e5, 0xed50, 0xb3af, 0xd725, 0x2cc5, 0x1, 0x1);
        gbc.writeMem(0xa7c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x12e5);
        EXPECT(gbc.pc(), 0xa7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00D7
        gbc.setState(0xaaa3, 0x1001, 0xb540, 0x6e33, 0x238d, 0x6301, 0x0, 0x1);
        gbc.writeMem(0xaaa3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1001);
        EXPECT(gbc.pc(), 0xaaa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa3), 0xcb);
        EXPECT(gbc.readMem(0xaaa4), 0xeb);
        // CB EB 00D8
        gbc.setState(0x9677, 0x2b86, 0x5710, 0x5662, 0xd62e, 0x8f96, 0x0, 0x0);
        gbc.writeMem(0x9677, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2b86);
        EXPECT(gbc.pc(), 0x9679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9677), 0xcb);
        EXPECT(gbc.readMem(0x9678), 0xeb);
        // CB EB 00D9
        gbc.setState(0x51d2, 0x3634, 0xe5a0, 0x8ced, 0x1886, 0x1bca, 0x0, 0x0);
        gbc.writeMem(0x51d2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3634);
        EXPECT(gbc.pc(), 0x51d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00DA
        gbc.setState(0x8c88, 0x119d, 0xb1f0, 0x9f86, 0xc81a, 0xa6e8, 0x1, 0x0);
        gbc.writeMem(0x8c88, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x119d);
        EXPECT(gbc.pc(), 0x8c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c88), 0xcb);
        EXPECT(gbc.readMem(0x8c89), 0xeb);
        // CB EB 00DB
        gbc.setState(0x7949, 0x346b, 0x1920, 0xea, 0x1c4, 0x8d71, 0x0, 0x0);
        gbc.writeMem(0x7949, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x346b);
        EXPECT(gbc.pc(), 0x794b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00DC
        gbc.setState(0xdf2, 0xced1, 0x31f0, 0x71a3, 0xd35a, 0xaeb2, 0x0, 0x0);
        gbc.writeMem(0xdf2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xced1);
        EXPECT(gbc.pc(), 0xdf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00DD
        gbc.setState(0x9b8f, 0xf67b, 0x2a90, 0x88a1, 0xcc02, 0x7fb2, 0x0, 0x1);
        gbc.writeMem(0x9b8f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf67b);
        EXPECT(gbc.pc(), 0x9b91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b8f), 0xcb);
        EXPECT(gbc.readMem(0x9b90), 0xeb);
        // CB EB 00DF
        gbc.setState(0x3db2, 0x7de0, 0xb970, 0x5748, 0x2cdd, 0x30c7, 0x1, 0x0);
        gbc.writeMem(0x3db2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7de0);
        EXPECT(gbc.pc(), 0x3db4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00E0
        gbc.setState(0x20fb, 0x971b, 0xbc40, 0xae15, 0xaa50, 0x6d15, 0x1, 0x0);
        gbc.writeMem(0x20fb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x971b);
        EXPECT(gbc.pc(), 0x20fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00E1
        gbc.setState(0xa44f, 0x919d, 0x87b0, 0x75f0, 0x548, 0xd0ce, 0x0, 0x1);
        gbc.writeMem(0xa44f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x919d);
        EXPECT(gbc.pc(), 0xa451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44f), 0xcb);
        EXPECT(gbc.readMem(0xa450), 0xeb);
        // CB EB 00E3
        gbc.setState(0x9307, 0x4c, 0x9b40, 0x9a36, 0x86b0, 0xd25, 0x1, 0x1);
        gbc.writeMem(0x9307, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4c);
        EXPECT(gbc.pc(), 0x9309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9307), 0xcb);
        EXPECT(gbc.readMem(0x9308), 0xeb);
        // CB EB 00E4
        gbc.setState(0x5518, 0x20f0, 0x5ff0, 0xf642, 0xe509, 0x9efe, 0x1, 0x1);
        gbc.writeMem(0x5518, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x20f0);
        EXPECT(gbc.pc(), 0x551a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00E5
        gbc.setState(0xd446, 0x7a5c, 0xbfb0, 0x9e64, 0x5e76, 0xc057, 0x1, 0x1);
        gbc.writeMem(0xd446, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7a5c);
        EXPECT(gbc.pc(), 0xd448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd446), 0xcb);
        EXPECT(gbc.readMem(0xd447), 0xeb);
        // CB EB 00E6
        gbc.setState(0xea2c, 0xf1e6, 0x98c0, 0x831b, 0x5b56, 0x9c65, 0x1, 0x1);
        gbc.writeMem(0xea2c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xf1e6);
        EXPECT(gbc.pc(), 0xea2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea2c), 0xcb);
        EXPECT(gbc.readMem(0xea2d), 0xeb);
        // CB EB 00E7
        gbc.setState(0x3353, 0xc725, 0x2150, 0xff5c, 0xf0f3, 0x24d9, 0x0, 0x1);
        gbc.writeMem(0x3353, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc725);
        EXPECT(gbc.pc(), 0x3355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00E8
        gbc.setState(0x4454, 0x4276, 0xb100, 0x2dbf, 0xcebe, 0xbe22, 0x0, 0x1);
        gbc.writeMem(0x4454, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4276);
        EXPECT(gbc.pc(), 0x4456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00EA
        gbc.setState(0x8c7a, 0x17e4, 0x7580, 0x724c, 0xb048, 0xa13b, 0x0, 0x0);
        gbc.writeMem(0x8c7a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x17e4);
        EXPECT(gbc.pc(), 0x8c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7a), 0xcb);
        EXPECT(gbc.readMem(0x8c7b), 0xeb);
        // CB EB 00EB
        gbc.setState(0xa057, 0x8740, 0x7f50, 0x625b, 0x48a9, 0x8ad3, 0x0, 0x1);
        gbc.writeMem(0xa057, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8740);
        EXPECT(gbc.pc(), 0xa059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa057), 0xcb);
        EXPECT(gbc.readMem(0xa058), 0xeb);
        // CB EB 00EC
        gbc.setState(0x83e6, 0x7e6e, 0xdcc0, 0x71f9, 0x2065, 0x4f, 0x0, 0x0);
        gbc.writeMem(0x83e6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7e6e);
        EXPECT(gbc.pc(), 0x83e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e6), 0xcb);
        EXPECT(gbc.readMem(0x83e7), 0xeb);
        // CB EB 00ED
        gbc.setState(0xbf55, 0x507, 0x8e0, 0xedc7, 0xfc31, 0xfd04, 0x1, 0x0);
        gbc.writeMem(0xbf55, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x507);
        EXPECT(gbc.pc(), 0xbf57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf55), 0xcb);
        EXPECT(gbc.readMem(0xbf56), 0xeb);
        // CB EB 00EE
        gbc.setState(0x3793, 0x1af3, 0x4ae0, 0x633e, 0x5541, 0x71bc, 0x0, 0x1);
        gbc.writeMem(0x3793, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1af3);
        EXPECT(gbc.pc(), 0x3795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00EF
        gbc.setState(0x64e6, 0x42b0, 0x7330, 0x5138, 0x8a1b, 0xec5f, 0x0, 0x1);
        gbc.writeMem(0x64e6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x42b0);
        EXPECT(gbc.pc(), 0x64e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00F0
        gbc.setState(0x1fd5, 0x5a0a, 0x5570, 0x19be, 0x51c2, 0x8943, 0x0, 0x1);
        gbc.writeMem(0x1fd5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5a0a);
        EXPECT(gbc.pc(), 0x1fd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00F1
        gbc.setState(0x18, 0x456b, 0xdca0, 0xbf2f, 0xe9ca, 0x8360, 0x1, 0x0);
        gbc.writeMem(0x18, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x456b);
        EXPECT(gbc.pc(), 0x1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00F2
        gbc.setState(0xbf8a, 0xbd1d, 0x4750, 0x390e, 0x22d9, 0xf652, 0x1, 0x0);
        gbc.writeMem(0xbf8a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xbd1d);
        EXPECT(gbc.pc(), 0xbf8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf8a), 0xcb);
        EXPECT(gbc.readMem(0xbf8b), 0xeb);
        // CB EB 00F3
        gbc.setState(0x8311, 0x37ca, 0xe2c0, 0xa705, 0xe197, 0x8e0e, 0x0, 0x1);
        gbc.writeMem(0x8311, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x37ca);
        EXPECT(gbc.pc(), 0x8313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8311), 0xcb);
        EXPECT(gbc.readMem(0x8312), 0xeb);
        // CB EB 00F4
        gbc.setState(0x1e82, 0x897c, 0x46d0, 0xd9d8, 0xe647, 0xa769, 0x0, 0x0);
        gbc.writeMem(0x1e82, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x897c);
        EXPECT(gbc.pc(), 0x1e84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00F5
        gbc.setState(0x548, 0xfeac, 0xcb60, 0xc534, 0xd019, 0x6498, 0x0, 0x0);
        gbc.writeMem(0x548, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfeac);
        EXPECT(gbc.pc(), 0x54a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00F6
        gbc.setState(0xe496, 0x548b, 0x6770, 0xa67b, 0x1250, 0xd20e, 0x1, 0x1);
        gbc.writeMem(0xe496, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x548b);
        EXPECT(gbc.pc(), 0xe498);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe496), 0xcb);
        EXPECT(gbc.readMem(0xe497), 0xeb);
        // CB EB 00F7
        gbc.setState(0x35b4, 0xaaf, 0x7bd0, 0x4dd0, 0xa9f2, 0x5af5, 0x0, 0x0);
        gbc.writeMem(0x35b4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xaaf);
        EXPECT(gbc.pc(), 0x35b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 00F8
        gbc.setState(0x8eea, 0x79ef, 0x9210, 0xe14, 0x3218, 0xad96, 0x1, 0x0);
        gbc.writeMem(0x8eea, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x79ef);
        EXPECT(gbc.pc(), 0x8eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eea), 0xcb);
        EXPECT(gbc.readMem(0x8eeb), 0xeb);
        // CB EB 00FA
        gbc.setState(0xb269, 0x2e94, 0x6e60, 0x715c, 0xde8b, 0x9242, 0x0, 0x1);
        gbc.writeMem(0xb269, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2e94);
        EXPECT(gbc.pc(), 0xb26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb269), 0xcb);
        EXPECT(gbc.readMem(0xb26a), 0xeb);
        // CB EB 00FB
        gbc.setState(0xa49a, 0x1343, 0x83a0, 0x5956, 0xde9d, 0xfb47, 0x1, 0x1);
        gbc.writeMem(0xa49a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1343);
        EXPECT(gbc.pc(), 0xa49c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49a), 0xcb);
        EXPECT(gbc.readMem(0xa49b), 0xeb);
        // CB EB 00FC
        gbc.setState(0x24b, 0x77a3, 0x5000, 0xe089, 0x9400, 0x594e, 0x1, 0x1);
        gbc.writeMem(0x24b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x77a3);
        EXPECT(gbc.pc(), 0x24d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00FD
        gbc.setState(0xcddc, 0x55ee, 0x1fe0, 0x7795, 0x211d, 0xa594, 0x1, 0x0);
        gbc.writeMem(0xcddc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x55ee);
        EXPECT(gbc.pc(), 0xcdde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcddc), 0xcb);
        EXPECT(gbc.readMem(0xcddd), 0xeb);
        // CB EB 00FE
        gbc.setState(0x10d2, 0x917, 0x31a0, 0x9530, 0xe6f8, 0xcc8b, 0x1, 0x0);
        gbc.writeMem(0x10d2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x917);
        EXPECT(gbc.pc(), 0x10d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 00FF
        gbc.setState(0x4b8d, 0x1b2d, 0x7f70, 0x994c, 0xe2fc, 0xd8da, 0x0, 0x0);
        gbc.writeMem(0x4b8d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1b2d);
        EXPECT(gbc.pc(), 0x4b8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0100
        gbc.setState(0x711c, 0x703e, 0x2b10, 0xe58, 0x6e7a, 0x1397, 0x1, 0x0);
        gbc.writeMem(0x711c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x703e);
        EXPECT(gbc.pc(), 0x711e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0101
        gbc.setState(0x2ea1, 0x8e1e, 0xf100, 0xd248, 0xf603, 0x99d0, 0x1, 0x0);
        gbc.writeMem(0x2ea1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8e1e);
        EXPECT(gbc.pc(), 0x2ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0102
        gbc.setState(0x9a4b, 0xa00b, 0xad0, 0xbe5d, 0xf650, 0xd0cc, 0x1, 0x1);
        gbc.writeMem(0x9a4b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa00b);
        EXPECT(gbc.pc(), 0x9a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4b), 0xcb);
        EXPECT(gbc.readMem(0x9a4c), 0xeb);
        // CB EB 0103
        gbc.setState(0xc81c, 0xe3d1, 0x7510, 0xf965, 0x6f26, 0x6dca, 0x0, 0x0);
        gbc.writeMem(0xc81c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe3d1);
        EXPECT(gbc.pc(), 0xc81e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc81c), 0xcb);
        EXPECT(gbc.readMem(0xc81d), 0xeb);
        // CB EB 0104
        gbc.setState(0x7732, 0xaecc, 0x9630, 0xcd93, 0x7025, 0x74ce, 0x1, 0x0);
        gbc.writeMem(0x7732, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xaecc);
        EXPECT(gbc.pc(), 0x7734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0105
        gbc.setState(0x3c09, 0x7d5a, 0x82a0, 0x16c3, 0xbdb0, 0x866, 0x1, 0x1);
        gbc.writeMem(0x3c09, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7d5a);
        EXPECT(gbc.pc(), 0x3c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0106
        gbc.setState(0xad43, 0x7321, 0x65e0, 0x6922, 0x21af, 0x584c, 0x0, 0x0);
        gbc.writeMem(0xad43, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7321);
        EXPECT(gbc.pc(), 0xad45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad43), 0xcb);
        EXPECT(gbc.readMem(0xad44), 0xeb);
        // CB EB 0107
        gbc.setState(0x2b91, 0xdd4f, 0x1ae0, 0x8ef6, 0xb08f, 0x619d, 0x1, 0x1);
        gbc.writeMem(0x2b91, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdd4f);
        EXPECT(gbc.pc(), 0x2b93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0109
        gbc.setState(0xa1c3, 0xbaa9, 0x49e0, 0xf200, 0xecb7, 0xc4bf, 0x1, 0x1);
        gbc.writeMem(0xa1c3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbaa9);
        EXPECT(gbc.pc(), 0xa1c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1c3), 0xcb);
        EXPECT(gbc.readMem(0xa1c4), 0xeb);
        // CB EB 010A
        gbc.setState(0x3bb8, 0x8ffe, 0x9900, 0x3d4e, 0xe550, 0x9c8d, 0x1, 0x1);
        gbc.writeMem(0x3bb8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8ffe);
        EXPECT(gbc.pc(), 0x3bba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 010C
        gbc.setState(0xead8, 0x36ac, 0x4e40, 0x5e2f, 0x43dc, 0x697f, 0x1, 0x1);
        gbc.writeMem(0xead8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x36ac);
        EXPECT(gbc.pc(), 0xeada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead8), 0xcb);
        EXPECT(gbc.readMem(0xead9), 0xeb);
        // CB EB 010D
        gbc.setState(0x9160, 0xb2f, 0x6130, 0x25c4, 0x5ab8, 0x1547, 0x0, 0x1);
        gbc.writeMem(0x9160, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb2f);
        EXPECT(gbc.pc(), 0x9162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9160), 0xcb);
        EXPECT(gbc.readMem(0x9161), 0xeb);
        // CB EB 010E
        gbc.setState(0x4c48, 0x8105, 0x7a40, 0x5072, 0xae31, 0x724b, 0x0, 0x1);
        gbc.writeMem(0x4c48, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8105);
        EXPECT(gbc.pc(), 0x4c4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 010F
        gbc.setState(0x3969, 0x58b9, 0xb3b0, 0xaf03, 0x9a1b, 0xb5f7, 0x1, 0x1);
        gbc.writeMem(0x3969, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x58b9);
        EXPECT(gbc.pc(), 0x396b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0110
        gbc.setState(0xeeb9, 0xfbe4, 0xf4f0, 0x96e1, 0x8c52, 0x7867, 0x0, 0x0);
        gbc.writeMem(0xeeb9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfbe4);
        EXPECT(gbc.pc(), 0xeebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb9), 0xcb);
        EXPECT(gbc.readMem(0xeeba), 0xeb);
        // CB EB 0111
        gbc.setState(0xaf7, 0x7ccf, 0x9a50, 0xbf48, 0xa39f, 0x7e9e, 0x0, 0x0);
        gbc.writeMem(0xaf7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7ccf);
        EXPECT(gbc.pc(), 0xaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0112
        gbc.setState(0x8070, 0x95a, 0x13d0, 0x21bb, 0x4f9a, 0x3f6f, 0x0, 0x1);
        gbc.writeMem(0x8070, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x95a);
        EXPECT(gbc.pc(), 0x8072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8070), 0xcb);
        EXPECT(gbc.readMem(0x8071), 0xeb);
        // CB EB 0113
        gbc.setState(0xd471, 0x46b8, 0xdbd0, 0xf866, 0x7d3, 0x6999, 0x1, 0x1);
        gbc.writeMem(0xd471, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x46b8);
        EXPECT(gbc.pc(), 0xd473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd471), 0xcb);
        EXPECT(gbc.readMem(0xd472), 0xeb);
        // CB EB 0114
        gbc.setState(0xec43, 0xb050, 0x2610, 0xc43a, 0x9f9c, 0xdbb2, 0x0, 0x1);
        gbc.writeMem(0xec43, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb050);
        EXPECT(gbc.pc(), 0xec45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec43), 0xcb);
        EXPECT(gbc.readMem(0xec44), 0xeb);
        // CB EB 0117
        gbc.setState(0x94a0, 0xd2af, 0x5680, 0x2850, 0x768c, 0x481e, 0x0, 0x1);
        gbc.writeMem(0x94a0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd2af);
        EXPECT(gbc.pc(), 0x94a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94a0), 0xcb);
        EXPECT(gbc.readMem(0x94a1), 0xeb);
        // CB EB 0118
        gbc.setState(0xa26, 0x24f8, 0xe500, 0xc95, 0x25eb, 0x11, 0x1, 0x1);
        gbc.writeMem(0xa26, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x24f8);
        EXPECT(gbc.pc(), 0xa28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0119
        gbc.setState(0x8f76, 0x461f, 0xe4e0, 0x7196, 0x8450, 0xf19e, 0x0, 0x0);
        gbc.writeMem(0x8f76, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x461f);
        EXPECT(gbc.pc(), 0x8f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f76), 0xcb);
        EXPECT(gbc.readMem(0x8f77), 0xeb);
        // CB EB 011A
        gbc.setState(0xe310, 0xe7dd, 0x4a90, 0x3a2a, 0x2bcc, 0xc48f, 0x1, 0x1);
        gbc.writeMem(0xe310, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe7dd);
        EXPECT(gbc.pc(), 0xe312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe310), 0xcb);
        EXPECT(gbc.readMem(0xe311), 0xeb);
        // CB EB 011B
        gbc.setState(0x9df5, 0xb0b4, 0xa820, 0x4846, 0xe682, 0xaa34, 0x0, 0x1);
        gbc.writeMem(0x9df5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb0b4);
        EXPECT(gbc.pc(), 0x9df7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df5), 0xcb);
        EXPECT(gbc.readMem(0x9df6), 0xeb);
        // CB EB 011D
        gbc.setState(0xb5be, 0x2f53, 0x3fb0, 0xec98, 0xa657, 0x907d, 0x1, 0x1);
        gbc.writeMem(0xb5be, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2f53);
        EXPECT(gbc.pc(), 0xb5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5be), 0xcb);
        EXPECT(gbc.readMem(0xb5bf), 0xeb);
        // CB EB 011E
        gbc.setState(0x6f61, 0xd6f7, 0x3260, 0x3534, 0x7c44, 0x47e5, 0x1, 0x0);
        gbc.writeMem(0x6f61, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd6f7);
        EXPECT(gbc.pc(), 0x6f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 011F
        gbc.setState(0xa369, 0xbf86, 0x99b0, 0x456c, 0x5bbc, 0xb42, 0x0, 0x0);
        gbc.writeMem(0xa369, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xbf86);
        EXPECT(gbc.pc(), 0xa36b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa369), 0xcb);
        EXPECT(gbc.readMem(0xa36a), 0xeb);
        // CB EB 0120
        gbc.setState(0xabdc, 0x8625, 0xbb10, 0x8fc4, 0x660f, 0x37c7, 0x0, 0x0);
        gbc.writeMem(0xabdc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8625);
        EXPECT(gbc.pc(), 0xabde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabdc), 0xcb);
        EXPECT(gbc.readMem(0xabdd), 0xeb);
        // CB EB 0121
        gbc.setState(0xe256, 0x17b0, 0x39c0, 0x89f8, 0xf5c7, 0xa37b, 0x0, 0x1);
        gbc.writeMem(0xe256, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x17b0);
        EXPECT(gbc.pc(), 0xe258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe256), 0xcb);
        EXPECT(gbc.readMem(0xe257), 0xeb);
        // CB EB 0122
        gbc.setState(0x379f, 0xcebe, 0x1d50, 0xb2d7, 0x59a6, 0xbbc7, 0x1, 0x0);
        gbc.writeMem(0x379f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xcebe);
        EXPECT(gbc.pc(), 0x37a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0123
        gbc.setState(0x521e, 0x9553, 0x7d40, 0x87ee, 0x3f10, 0x9f15, 0x0, 0x0);
        gbc.writeMem(0x521e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9553);
        EXPECT(gbc.pc(), 0x5220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0124
        gbc.setState(0xe, 0x954c, 0xd710, 0x91fc, 0x372, 0xe924, 0x0, 0x0);
        gbc.writeMem(0xe, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x954c);
        EXPECT(gbc.pc(), 0x10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0125
        gbc.setState(0x883c, 0x1bb0, 0x74f0, 0x4e36, 0x128b, 0x8305, 0x0, 0x0);
        gbc.writeMem(0x883c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1bb0);
        EXPECT(gbc.pc(), 0x883e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x883c), 0xcb);
        EXPECT(gbc.readMem(0x883d), 0xeb);
        // CB EB 0126
        gbc.setState(0x37bd, 0x1d26, 0xb1b0, 0xaab6, 0x25ba, 0xbdd9, 0x0, 0x1);
        gbc.writeMem(0x37bd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1d26);
        EXPECT(gbc.pc(), 0x37bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0127
        gbc.setState(0x2e7f, 0xe6e9, 0x7640, 0x5ddb, 0x1556, 0xcd5d, 0x0, 0x0);
        gbc.writeMem(0x2e7f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe6e9);
        EXPECT(gbc.pc(), 0x2e81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0128
        gbc.setState(0x7992, 0xcaa8, 0xcf50, 0x61cc, 0x837f, 0x4de3, 0x1, 0x0);
        gbc.writeMem(0x7992, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcaa8);
        EXPECT(gbc.pc(), 0x7994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0129
        gbc.setState(0xa6d3, 0x3ca6, 0xa0e0, 0x6190, 0xf513, 0xa7ac, 0x0, 0x0);
        gbc.writeMem(0xa6d3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3ca6);
        EXPECT(gbc.pc(), 0xa6d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d3), 0xcb);
        EXPECT(gbc.readMem(0xa6d4), 0xeb);
        // CB EB 012A
        gbc.setState(0x3d29, 0xa3c7, 0xdc10, 0x769f, 0x9c17, 0xbbac, 0x0, 0x1);
        gbc.writeMem(0x3d29, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa3c7);
        EXPECT(gbc.pc(), 0x3d2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 012B
        gbc.setState(0xbdce, 0x610c, 0x8790, 0xc447, 0xe784, 0xf21f, 0x1, 0x1);
        gbc.writeMem(0xbdce, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x610c);
        EXPECT(gbc.pc(), 0xbdd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdce), 0xcb);
        EXPECT(gbc.readMem(0xbdcf), 0xeb);
        // CB EB 012C
        gbc.setState(0xdc7d, 0x126b, 0xdc00, 0xc049, 0xc632, 0xc3fd, 0x1, 0x1);
        gbc.writeMem(0xdc7d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x126b);
        EXPECT(gbc.pc(), 0xdc7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc7d), 0xcb);
        EXPECT(gbc.readMem(0xdc7e), 0xeb);
        // CB EB 012E
        gbc.setState(0x1711, 0x3777, 0x8870, 0x1388, 0x63a9, 0x8ef4, 0x0, 0x0);
        gbc.writeMem(0x1711, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3777);
        EXPECT(gbc.pc(), 0x1713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 012F
        gbc.setState(0x2a2a, 0x8063, 0x15c0, 0x29b4, 0x747, 0xcbe6, 0x1, 0x0);
        gbc.writeMem(0x2a2a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8063);
        EXPECT(gbc.pc(), 0x2a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0130
        gbc.setState(0x1213, 0x1c96, 0x7f70, 0x8f0a, 0xb359, 0x4d4c, 0x0, 0x1);
        gbc.writeMem(0x1213, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1c96);
        EXPECT(gbc.pc(), 0x1215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0131
        gbc.setState(0x6bed, 0x58bb, 0xd770, 0xacd7, 0xb18b, 0x419, 0x1, 0x1);
        gbc.writeMem(0x6bed, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x58bb);
        EXPECT(gbc.pc(), 0x6bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0132
        gbc.setState(0x58b5, 0xa417, 0xc6b0, 0x75cc, 0x3d83, 0x80d0, 0x0, 0x1);
        gbc.writeMem(0x58b5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa417);
        EXPECT(gbc.pc(), 0x58b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0133
        gbc.setState(0xd7ba, 0x2ed5, 0xa160, 0x417d, 0xdbd3, 0xb408, 0x0, 0x0);
        gbc.writeMem(0xd7ba, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2ed5);
        EXPECT(gbc.pc(), 0xd7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ba), 0xcb);
        EXPECT(gbc.readMem(0xd7bb), 0xeb);
        // CB EB 0134
        gbc.setState(0xaa7d, 0xcfaf, 0xb330, 0x216, 0xab47, 0x1918, 0x0, 0x0);
        gbc.writeMem(0xaa7d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xcfaf);
        EXPECT(gbc.pc(), 0xaa7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa7d), 0xcb);
        EXPECT(gbc.readMem(0xaa7e), 0xeb);
        // CB EB 0135
        gbc.setState(0xac00, 0x2760, 0xc150, 0x183a, 0xcc19, 0x5285, 0x0, 0x0);
        gbc.writeMem(0xac00, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2760);
        EXPECT(gbc.pc(), 0xac02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac00), 0xcb);
        EXPECT(gbc.readMem(0xac01), 0xeb);
        // CB EB 0136
        gbc.setState(0x7d91, 0x240f, 0xc3f0, 0x4620, 0x5530, 0x1a3f, 0x0, 0x1);
        gbc.writeMem(0x7d91, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x240f);
        EXPECT(gbc.pc(), 0x7d93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0137
        gbc.setState(0xc2b6, 0xe033, 0x56a0, 0x9996, 0x6214, 0x8237, 0x0, 0x1);
        gbc.writeMem(0xc2b6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe033);
        EXPECT(gbc.pc(), 0xc2b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2b6), 0xcb);
        EXPECT(gbc.readMem(0xc2b7), 0xeb);
        // CB EB 0138
        gbc.setState(0xe2e6, 0x5909, 0x2ae0, 0x6392, 0x636b, 0x308a, 0x0, 0x1);
        gbc.writeMem(0xe2e6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5909);
        EXPECT(gbc.pc(), 0xe2e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e6), 0xcb);
        EXPECT(gbc.readMem(0xe2e7), 0xeb);
        // CB EB 0139
        gbc.setState(0xc16b, 0x7750, 0xe830, 0x4444, 0x2754, 0x26d1, 0x0, 0x0);
        gbc.writeMem(0xc16b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7750);
        EXPECT(gbc.pc(), 0xc16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc16b), 0xcb);
        EXPECT(gbc.readMem(0xc16c), 0xeb);
        // CB EB 013A
        gbc.setState(0xba21, 0x7b44, 0xca00, 0x2244, 0x739b, 0x9ad6, 0x1, 0x1);
        gbc.writeMem(0xba21, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7b44);
        EXPECT(gbc.pc(), 0xba23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba21), 0xcb);
        EXPECT(gbc.readMem(0xba22), 0xeb);
        // CB EB 013B
        gbc.setState(0xa0a1, 0x6d9c, 0x4870, 0x73ab, 0x9846, 0x38a5, 0x0, 0x0);
        gbc.writeMem(0xa0a1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6d9c);
        EXPECT(gbc.pc(), 0xa0a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a1), 0xcb);
        EXPECT(gbc.readMem(0xa0a2), 0xeb);
        // CB EB 013C
        gbc.setState(0xb3c3, 0x9e0f, 0x5e80, 0x2507, 0xbbf8, 0x1d68, 0x0, 0x0);
        gbc.writeMem(0xb3c3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9e0f);
        EXPECT(gbc.pc(), 0xb3c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3c3), 0xcb);
        EXPECT(gbc.readMem(0xb3c4), 0xeb);
        // CB EB 013E
        gbc.setState(0x7502, 0xdc7c, 0x7f40, 0xe172, 0x9993, 0x4706, 0x1, 0x0);
        gbc.writeMem(0x7502, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdc7c);
        EXPECT(gbc.pc(), 0x7504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 013F
        gbc.setState(0x1288, 0x60d3, 0x50c0, 0x17dc, 0xb2a7, 0x6cd, 0x1, 0x1);
        gbc.writeMem(0x1288, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x60d3);
        EXPECT(gbc.pc(), 0x128a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0140
        gbc.setState(0x5cc8, 0x6fa5, 0x6730, 0x7388, 0xf3ac, 0x2299, 0x0, 0x0);
        gbc.writeMem(0x5cc8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6fa5);
        EXPECT(gbc.pc(), 0x5cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0141
        gbc.setState(0x9487, 0x50ea, 0x6f40, 0x645b, 0x51e2, 0x1ae1, 0x1, 0x0);
        gbc.writeMem(0x9487, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x50ea);
        EXPECT(gbc.pc(), 0x9489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9487), 0xcb);
        EXPECT(gbc.readMem(0x9488), 0xeb);
        // CB EB 0142
        gbc.setState(0xb6cd, 0x5515, 0x89b0, 0x9ef9, 0xac64, 0x9b5e, 0x1, 0x1);
        gbc.writeMem(0xb6cd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5515);
        EXPECT(gbc.pc(), 0xb6cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6cd), 0xcb);
        EXPECT(gbc.readMem(0xb6ce), 0xeb);
        // CB EB 0143
        gbc.setState(0xce5c, 0xf7f3, 0x8f80, 0x7039, 0x5b6e, 0xf53e, 0x1, 0x1);
        gbc.writeMem(0xce5c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf7f3);
        EXPECT(gbc.pc(), 0xce5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce5c), 0xcb);
        EXPECT(gbc.readMem(0xce5d), 0xeb);
        // CB EB 0144
        gbc.setState(0x6346, 0xbf88, 0xdad0, 0x9754, 0xc744, 0x10fb, 0x1, 0x1);
        gbc.writeMem(0x6346, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbf88);
        EXPECT(gbc.pc(), 0x6348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0145
        gbc.setState(0x9ecd, 0x2c12, 0xcdd0, 0x336f, 0x6180, 0x2317, 0x1, 0x1);
        gbc.writeMem(0x9ecd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2c12);
        EXPECT(gbc.pc(), 0x9ecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ecd), 0xcb);
        EXPECT(gbc.readMem(0x9ece), 0xeb);
        // CB EB 0146
        gbc.setState(0x3417, 0x586a, 0x7120, 0xc90, 0x7aa5, 0x94d4, 0x1, 0x1);
        gbc.writeMem(0x3417, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x586a);
        EXPECT(gbc.pc(), 0x3419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0147
        gbc.setState(0x1b79, 0x981c, 0xd6c0, 0x8303, 0xdba9, 0x9c6f, 0x1, 0x0);
        gbc.writeMem(0x1b79, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x981c);
        EXPECT(gbc.pc(), 0x1b7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0148
        gbc.setState(0x96f8, 0x152d, 0x54b0, 0x3834, 0x3661, 0x3087, 0x1, 0x0);
        gbc.writeMem(0x96f8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x152d);
        EXPECT(gbc.pc(), 0x96fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96f8), 0xcb);
        EXPECT(gbc.readMem(0x96f9), 0xeb);
        // CB EB 0149
        gbc.setState(0x704e, 0xceaa, 0x8df0, 0xfe1, 0x7f51, 0x87e5, 0x0, 0x0);
        gbc.writeMem(0x704e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xceaa);
        EXPECT(gbc.pc(), 0x7050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 014A
        gbc.setState(0x294b, 0x9d2a, 0x36e0, 0x1e85, 0xabf6, 0xaf93, 0x1, 0x1);
        gbc.writeMem(0x294b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9d2a);
        EXPECT(gbc.pc(), 0x294d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 014B
        gbc.setState(0x8ba5, 0x36a4, 0xf030, 0x334, 0xc417, 0x6f83, 0x1, 0x1);
        gbc.writeMem(0x8ba5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x36a4);
        EXPECT(gbc.pc(), 0x8ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba5), 0xcb);
        EXPECT(gbc.readMem(0x8ba6), 0xeb);
        // CB EB 014C
        gbc.setState(0x83ab, 0xdfed, 0x3700, 0x2278, 0x147b, 0x6bea, 0x1, 0x1);
        gbc.writeMem(0x83ab, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xdfed);
        EXPECT(gbc.pc(), 0x83ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ab), 0xcb);
        EXPECT(gbc.readMem(0x83ac), 0xeb);
        // CB EB 014D
        gbc.setState(0xe203, 0x1907, 0xeb40, 0xd86b, 0x3d0d, 0xd8c7, 0x0, 0x0);
        gbc.writeMem(0xe203, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1907);
        EXPECT(gbc.pc(), 0xe205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe203), 0xcb);
        EXPECT(gbc.readMem(0xe204), 0xeb);
        // CB EB 014F
        gbc.setState(0xab50, 0xa50d, 0x6940, 0x23bc, 0x9892, 0x1f98, 0x0, 0x0);
        gbc.writeMem(0xab50, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa50d);
        EXPECT(gbc.pc(), 0xab52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab50), 0xcb);
        EXPECT(gbc.readMem(0xab51), 0xeb);
        // CB EB 0150
        gbc.setState(0x558e, 0xb940, 0xabc0, 0x7698, 0x5d6e, 0x742c, 0x0, 0x1);
        gbc.writeMem(0x558e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb940);
        EXPECT(gbc.pc(), 0x5590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0151
        gbc.setState(0xafc3, 0xc020, 0x6730, 0x4270, 0x4310, 0xadaf, 0x0, 0x0);
        gbc.writeMem(0xafc3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc020);
        EXPECT(gbc.pc(), 0xafc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafc3), 0xcb);
        EXPECT(gbc.readMem(0xafc4), 0xeb);
        // CB EB 0152
        gbc.setState(0x214e, 0xb1d0, 0x5820, 0x3230, 0xff84, 0xab08, 0x1, 0x0);
        gbc.writeMem(0x214e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb1d0);
        EXPECT(gbc.pc(), 0x2150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0153
        gbc.setState(0x92f1, 0xa7c4, 0x3680, 0xdace, 0x11aa, 0x2ebf, 0x1, 0x1);
        gbc.writeMem(0x92f1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa7c4);
        EXPECT(gbc.pc(), 0x92f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f1), 0xcb);
        EXPECT(gbc.readMem(0x92f2), 0xeb);
        // CB EB 0154
        gbc.setState(0x4695, 0x8538, 0xe170, 0x78ef, 0x12c7, 0xfa2f, 0x1, 0x0);
        gbc.writeMem(0x4695, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8538);
        EXPECT(gbc.pc(), 0x4697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0155
        gbc.setState(0xe6fc, 0x82a0, 0x8f10, 0xd5ba, 0x8963, 0x5671, 0x0, 0x0);
        gbc.writeMem(0xe6fc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x82a0);
        EXPECT(gbc.pc(), 0xe6fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6fc), 0xcb);
        EXPECT(gbc.readMem(0xe6fd), 0xeb);
        // CB EB 0156
        gbc.setState(0xb47, 0x670d, 0x18e0, 0xde74, 0xbc3e, 0xa3fe, 0x0, 0x0);
        gbc.writeMem(0xb47, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x670d);
        EXPECT(gbc.pc(), 0xb49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0157
        gbc.setState(0x3624, 0xdc63, 0x66c0, 0xafee, 0x23eb, 0xb983, 0x1, 0x1);
        gbc.writeMem(0x3624, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdc63);
        EXPECT(gbc.pc(), 0x3626);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0158
        gbc.setState(0xe07c, 0x3453, 0x6d90, 0xbf91, 0x4c3f, 0x71a5, 0x1, 0x1);
        gbc.writeMem(0xe07c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3453);
        EXPECT(gbc.pc(), 0xe07e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe07c), 0xcb);
        EXPECT(gbc.readMem(0xe07d), 0xeb);
        // CB EB 0159
        gbc.setState(0x5bd9, 0xc309, 0x3f10, 0x99d1, 0x2f7f, 0xe0fa, 0x1, 0x0);
        gbc.writeMem(0x5bd9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc309);
        EXPECT(gbc.pc(), 0x5bdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 015A
        gbc.setState(0x6664, 0xb6f5, 0x8990, 0xacca, 0xb079, 0xfc88, 0x0, 0x1);
        gbc.writeMem(0x6664, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb6f5);
        EXPECT(gbc.pc(), 0x6666);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 015B
        gbc.setState(0xd9f, 0xc6f9, 0x24b0, 0xa762, 0x3252, 0x7949, 0x0, 0x0);
        gbc.writeMem(0xd9f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc6f9);
        EXPECT(gbc.pc(), 0xda1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 015C
        gbc.setState(0x7183, 0xaea3, 0xb1c0, 0x5e00, 0x18a2, 0x4b9b, 0x1, 0x1);
        gbc.writeMem(0x7183, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xaea3);
        EXPECT(gbc.pc(), 0x7185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 015E
        gbc.setState(0xd11b, 0xb413, 0x8490, 0xfbd8, 0x53fc, 0x89e, 0x0, 0x1);
        gbc.writeMem(0xd11b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb413);
        EXPECT(gbc.pc(), 0xd11d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11b), 0xcb);
        EXPECT(gbc.readMem(0xd11c), 0xeb);
        // CB EB 0160
        gbc.setState(0x6a2e, 0x7b86, 0x7770, 0x42b3, 0xf47, 0x1e3a, 0x0, 0x1);
        gbc.writeMem(0x6a2e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7b86);
        EXPECT(gbc.pc(), 0x6a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0161
        gbc.setState(0x765d, 0x82ab, 0x610, 0x3507, 0x6a44, 0x96, 0x1, 0x0);
        gbc.writeMem(0x765d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x82ab);
        EXPECT(gbc.pc(), 0x765f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0162
        gbc.setState(0xa8d8, 0x13c5, 0x95b0, 0x2b1d, 0xe691, 0x7afe, 0x1, 0x0);
        gbc.writeMem(0xa8d8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x13c5);
        EXPECT(gbc.pc(), 0xa8da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8d8), 0xcb);
        EXPECT(gbc.readMem(0xa8d9), 0xeb);
        // CB EB 0163
        gbc.setState(0x72aa, 0x33ba, 0xc780, 0xb0fa, 0x1e67, 0x412a, 0x0, 0x1);
        gbc.writeMem(0x72aa, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x33ba);
        EXPECT(gbc.pc(), 0x72ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0164
        gbc.setState(0x291a, 0x6e20, 0x7270, 0x1444, 0x9ddf, 0x8069, 0x1, 0x0);
        gbc.writeMem(0x291a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6e20);
        EXPECT(gbc.pc(), 0x291c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0165
        gbc.setState(0x328c, 0xac0c, 0xe460, 0x50b4, 0x429, 0xa97f, 0x0, 0x0);
        gbc.writeMem(0x328c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xac0c);
        EXPECT(gbc.pc(), 0x328e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0166
        gbc.setState(0x2558, 0x2989, 0xa910, 0x392, 0x14eb, 0xcdba, 0x1, 0x1);
        gbc.writeMem(0x2558, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2989);
        EXPECT(gbc.pc(), 0x255a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0167
        gbc.setState(0xb560, 0x9e8a, 0x3830, 0x84a9, 0x7fba, 0x685b, 0x0, 0x1);
        gbc.writeMem(0xb560, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9e8a);
        EXPECT(gbc.pc(), 0xb562);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb560), 0xcb);
        EXPECT(gbc.readMem(0xb561), 0xeb);
        // CB EB 0168
        gbc.setState(0x4af2, 0xf3c7, 0xb100, 0xc581, 0x81c0, 0x32ae, 0x1, 0x1);
        gbc.writeMem(0x4af2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf3c7);
        EXPECT(gbc.pc(), 0x4af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0169
        gbc.setState(0x690f, 0x493, 0xc770, 0xf251, 0xc627, 0xee7b, 0x1, 0x0);
        gbc.writeMem(0x690f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x493);
        EXPECT(gbc.pc(), 0x6911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 016A
        gbc.setState(0x7765, 0x24cd, 0x1ec0, 0x2c26, 0x2fd6, 0xee52, 0x0, 0x0);
        gbc.writeMem(0x7765, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x24cd);
        EXPECT(gbc.pc(), 0x7767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 016B
        gbc.setState(0x32, 0x2cb0, 0x75b0, 0x281c, 0xc488, 0x6bf8, 0x1, 0x1);
        gbc.writeMem(0x32, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x2cb0);
        EXPECT(gbc.pc(), 0x34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 016C
        gbc.setState(0x1141, 0x1336, 0xe00, 0x7e19, 0xfcde, 0x1100, 0x1, 0x1);
        gbc.writeMem(0x1141, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1336);
        EXPECT(gbc.pc(), 0x1143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 016D
        gbc.setState(0x7b2c, 0x965a, 0x78b0, 0x2a45, 0xdb47, 0x3966, 0x1, 0x1);
        gbc.writeMem(0x7b2c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x965a);
        EXPECT(gbc.pc(), 0x7b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 016E
        gbc.setState(0x2ee8, 0x5131, 0xbc80, 0x2c0, 0x3cfe, 0x5744, 0x1, 0x0);
        gbc.writeMem(0x2ee8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5131);
        EXPECT(gbc.pc(), 0x2eea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0170
        gbc.setState(0xe1f9, 0xd9d0, 0xb170, 0x3cf4, 0x43a7, 0x7a4f, 0x0, 0x0);
        gbc.writeMem(0xe1f9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd9d0);
        EXPECT(gbc.pc(), 0xe1fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f9), 0xcb);
        EXPECT(gbc.readMem(0xe1fa), 0xeb);
        // CB EB 0171
        gbc.setState(0x27af, 0x42aa, 0x9af0, 0x7716, 0xa581, 0x9c81, 0x0, 0x1);
        gbc.writeMem(0x27af, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x42aa);
        EXPECT(gbc.pc(), 0x27b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0172
        gbc.setState(0x5e78, 0xcd04, 0xba70, 0xf316, 0xccd5, 0x777e, 0x1, 0x1);
        gbc.writeMem(0x5e78, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xcd04);
        EXPECT(gbc.pc(), 0x5e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0173
        gbc.setState(0x4a6c, 0xd50b, 0x84a0, 0x732c, 0x68d1, 0x7e54, 0x1, 0x1);
        gbc.writeMem(0x4a6c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd50b);
        EXPECT(gbc.pc(), 0x4a6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0174
        gbc.setState(0x5914, 0x6c9, 0x1c20, 0x2814, 0xc444, 0x234, 0x0, 0x1);
        gbc.writeMem(0x5914, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6c9);
        EXPECT(gbc.pc(), 0x5916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0175
        gbc.setState(0xc0b8, 0xf0c5, 0xaa80, 0x398c, 0xb0c6, 0xcdf5, 0x0, 0x0);
        gbc.writeMem(0xc0b8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf0c5);
        EXPECT(gbc.pc(), 0xc0ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0b8), 0xcb);
        EXPECT(gbc.readMem(0xc0b9), 0xeb);
        // CB EB 0176
        gbc.setState(0xa02b, 0xc866, 0xbd60, 0xc5d4, 0xca20, 0xb5bc, 0x0, 0x1);
        gbc.writeMem(0xa02b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc866);
        EXPECT(gbc.pc(), 0xa02d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02b), 0xcb);
        EXPECT(gbc.readMem(0xa02c), 0xeb);
        // CB EB 0177
        gbc.setState(0xef8c, 0xbe2c, 0x3170, 0xbe26, 0x691e, 0x7d33, 0x0, 0x1);
        gbc.writeMem(0xef8c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xbe2c);
        EXPECT(gbc.pc(), 0xef8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8c), 0xcb);
        EXPECT(gbc.readMem(0xef8d), 0xeb);
        // CB EB 0178
        gbc.setState(0xda8a, 0x69fc, 0xfe20, 0x7e4e, 0x476e, 0xfcdd, 0x1, 0x0);
        gbc.writeMem(0xda8a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x69fc);
        EXPECT(gbc.pc(), 0xda8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8a), 0xcb);
        EXPECT(gbc.readMem(0xda8b), 0xeb);
        // CB EB 0179
        gbc.setState(0x8782, 0x3faf, 0x6520, 0x4b62, 0x563f, 0xda06, 0x0, 0x1);
        gbc.writeMem(0x8782, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3faf);
        EXPECT(gbc.pc(), 0x8784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8782), 0xcb);
        EXPECT(gbc.readMem(0x8783), 0xeb);
        // CB EB 017A
        gbc.setState(0xa94a, 0x168c, 0x2820, 0x658a, 0x1d67, 0x2235, 0x0, 0x0);
        gbc.writeMem(0xa94a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x168c);
        EXPECT(gbc.pc(), 0xa94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa94a), 0xcb);
        EXPECT(gbc.readMem(0xa94b), 0xeb);
        // CB EB 017B
        gbc.setState(0x33c9, 0x74af, 0x2b30, 0xfe1e, 0xced5, 0x7484, 0x0, 0x0);
        gbc.writeMem(0x33c9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x74af);
        EXPECT(gbc.pc(), 0x33cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 017C
        gbc.setState(0xec75, 0xb5ce, 0x5890, 0x259, 0xa5e4, 0x4728, 0x1, 0x1);
        gbc.writeMem(0xec75, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb5ce);
        EXPECT(gbc.pc(), 0xec77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec75), 0xcb);
        EXPECT(gbc.readMem(0xec76), 0xeb);
        // CB EB 017D
        gbc.setState(0x194e, 0xc80d, 0x7b50, 0x8593, 0xed32, 0xf8fc, 0x1, 0x1);
        gbc.writeMem(0x194e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc80d);
        EXPECT(gbc.pc(), 0x1950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 017E
        gbc.setState(0x56c2, 0x826, 0xcda0, 0x6df1, 0xad92, 0xe471, 0x0, 0x1);
        gbc.writeMem(0x56c2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x826);
        EXPECT(gbc.pc(), 0x56c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 017F
        gbc.setState(0x9918, 0xc3e0, 0x6470, 0x6b57, 0x344b, 0x816c, 0x0, 0x1);
        gbc.writeMem(0x9918, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc3e0);
        EXPECT(gbc.pc(), 0x991a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9918), 0xcb);
        EXPECT(gbc.readMem(0x9919), 0xeb);
        // CB EB 0180
        gbc.setState(0x500a, 0x6b67, 0xf200, 0x84ea, 0xba00, 0xdba7, 0x0, 0x0);
        gbc.writeMem(0x500a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6b67);
        EXPECT(gbc.pc(), 0x500c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0181
        gbc.setState(0x25e9, 0x671, 0x6b40, 0xe3, 0xb060, 0x3068, 0x1, 0x1);
        gbc.writeMem(0x25e9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x671);
        EXPECT(gbc.pc(), 0x25eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0182
        gbc.setState(0x9292, 0xca9c, 0xa310, 0xb9cd, 0xc3b, 0xd851, 0x1, 0x0);
        gbc.writeMem(0x9292, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xca9c);
        EXPECT(gbc.pc(), 0x9294);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9292), 0xcb);
        EXPECT(gbc.readMem(0x9293), 0xeb);
        // CB EB 0183
        gbc.setState(0x368c, 0xfa4, 0x8970, 0xf4c4, 0x92f3, 0xe91f, 0x1, 0x1);
        gbc.writeMem(0x368c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfa4);
        EXPECT(gbc.pc(), 0x368e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0185
        gbc.setState(0x4182, 0x9f1e, 0xe0c0, 0xdd96, 0x815, 0x854a, 0x0, 0x1);
        gbc.writeMem(0x4182, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9f1e);
        EXPECT(gbc.pc(), 0x4184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0186
        gbc.setState(0xc5d, 0x1a69, 0x89d0, 0xdc37, 0x325e, 0x6fe3, 0x1, 0x0);
        gbc.writeMem(0xc5d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1a69);
        EXPECT(gbc.pc(), 0xc5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0187
        gbc.setState(0xc6b5, 0xa274, 0x9090, 0xeba4, 0x8c8f, 0x4a96, 0x1, 0x0);
        gbc.writeMem(0xc6b5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa274);
        EXPECT(gbc.pc(), 0xc6b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b5), 0xcb);
        EXPECT(gbc.readMem(0xc6b6), 0xeb);
        // CB EB 0188
        gbc.setState(0xc1ab, 0xac0c, 0xdd50, 0xb17d, 0x804e, 0x86cd, 0x0, 0x0);
        gbc.writeMem(0xc1ab, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xac0c);
        EXPECT(gbc.pc(), 0xc1ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1ab), 0xcb);
        EXPECT(gbc.readMem(0xc1ac), 0xeb);
        // CB EB 0189
        gbc.setState(0x75a9, 0x98cd, 0x5590, 0x1adc, 0x1fff, 0x3025, 0x0, 0x1);
        gbc.writeMem(0x75a9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x98cd);
        EXPECT(gbc.pc(), 0x75ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 018A
        gbc.setState(0x4385, 0x86da, 0xb600, 0x2c45, 0x7f68, 0xe7a2, 0x0, 0x1);
        gbc.writeMem(0x4385, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x86da);
        EXPECT(gbc.pc(), 0x4387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 018B
        gbc.setState(0xb302, 0xb8f5, 0xf390, 0xf8c8, 0xbb88, 0x2f27, 0x0, 0x1);
        gbc.writeMem(0xb302, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb8f5);
        EXPECT(gbc.pc(), 0xb304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb302), 0xcb);
        EXPECT(gbc.readMem(0xb303), 0xeb);
        // CB EB 018C
        gbc.setState(0x3223, 0x2a39, 0x9f80, 0x5fb9, 0x761c, 0x88bf, 0x0, 0x0);
        gbc.writeMem(0x3223, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2a39);
        EXPECT(gbc.pc(), 0x3225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 018D
        gbc.setState(0xb0ba, 0x7a6b, 0x5340, 0x899, 0x79ca, 0xab95, 0x1, 0x0);
        gbc.writeMem(0xb0ba, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7a6b);
        EXPECT(gbc.pc(), 0xb0bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ba), 0xcb);
        EXPECT(gbc.readMem(0xb0bb), 0xeb);
        // CB EB 018E
        gbc.setState(0x9f7b, 0xcb03, 0xe8b0, 0xf622, 0xfdbe, 0x9e3c, 0x0, 0x1);
        gbc.writeMem(0x9f7b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xcb03);
        EXPECT(gbc.pc(), 0x9f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f7b), 0xcb);
        EXPECT(gbc.readMem(0x9f7c), 0xeb);
        // CB EB 018F
        gbc.setState(0x479f, 0xb3a9, 0x6710, 0x8faf, 0xd575, 0x9174, 0x0, 0x0);
        gbc.writeMem(0x479f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb3a9);
        EXPECT(gbc.pc(), 0x47a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0190
        gbc.setState(0xd999, 0x5754, 0xfdf0, 0xd6bf, 0x758, 0x366a, 0x0, 0x1);
        gbc.writeMem(0xd999, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5754);
        EXPECT(gbc.pc(), 0xd99b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd999), 0xcb);
        EXPECT(gbc.readMem(0xd99a), 0xeb);
        // CB EB 0191
        gbc.setState(0x7907, 0x43ca, 0x93d0, 0xc8a8, 0xf8a8, 0x4cb, 0x0, 0x1);
        gbc.writeMem(0x7907, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x43ca);
        EXPECT(gbc.pc(), 0x7909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0192
        gbc.setState(0xa3, 0x90af, 0x3e40, 0x84ee, 0x3d6a, 0xef9e, 0x1, 0x1);
        gbc.writeMem(0xa3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x90af);
        EXPECT(gbc.pc(), 0xa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0193
        gbc.setState(0xd189, 0x5067, 0x6cd0, 0xaf24, 0x599b, 0x7744, 0x1, 0x0);
        gbc.writeMem(0xd189, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5067);
        EXPECT(gbc.pc(), 0xd18b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd189), 0xcb);
        EXPECT(gbc.readMem(0xd18a), 0xeb);
        // CB EB 0194
        gbc.setState(0x1098, 0xfa27, 0x8e0, 0xbb1a, 0xc134, 0xa1b1, 0x1, 0x1);
        gbc.writeMem(0x1098, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xfa27);
        EXPECT(gbc.pc(), 0x109a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0195
        gbc.setState(0x8fc3, 0x4528, 0x1c20, 0x991f, 0xa0da, 0xfec7, 0x0, 0x0);
        gbc.writeMem(0x8fc3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4528);
        EXPECT(gbc.pc(), 0x8fc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc3), 0xcb);
        EXPECT(gbc.readMem(0x8fc4), 0xeb);
        // CB EB 0196
        gbc.setState(0xe5f4, 0x6749, 0x1510, 0xf99e, 0xfe16, 0xb90f, 0x1, 0x1);
        gbc.writeMem(0xe5f4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6749);
        EXPECT(gbc.pc(), 0xe5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f4), 0xcb);
        EXPECT(gbc.readMem(0xe5f5), 0xeb);
        // CB EB 0197
        gbc.setState(0x496e, 0xf6bd, 0xd30, 0x7b55, 0x91ae, 0xc901, 0x0, 0x1);
        gbc.writeMem(0x496e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf6bd);
        EXPECT(gbc.pc(), 0x4970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0198
        gbc.setState(0xcfa9, 0x66d, 0xf7e0, 0x6a51, 0xbe69, 0x9870, 0x0, 0x0);
        gbc.writeMem(0xcfa9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x66d);
        EXPECT(gbc.pc(), 0xcfab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfa9), 0xcb);
        EXPECT(gbc.readMem(0xcfaa), 0xeb);
        // CB EB 0199
        gbc.setState(0x9ef3, 0x8ab6, 0x4490, 0x4995, 0xd0c, 0xac95, 0x0, 0x1);
        gbc.writeMem(0x9ef3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8ab6);
        EXPECT(gbc.pc(), 0x9ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef3), 0xcb);
        EXPECT(gbc.readMem(0x9ef4), 0xeb);
        // CB EB 019A
        gbc.setState(0xb7a8, 0x2b42, 0x7820, 0x4f89, 0x5e5, 0xddcb, 0x1, 0x1);
        gbc.writeMem(0xb7a8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2b42);
        EXPECT(gbc.pc(), 0xb7aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a8), 0xcb);
        EXPECT(gbc.readMem(0xb7a9), 0xeb);
        // CB EB 019B
        gbc.setState(0xa224, 0xcca3, 0xdd80, 0x5d9a, 0x3551, 0xfc1b, 0x1, 0x1);
        gbc.writeMem(0xa224, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xcca3);
        EXPECT(gbc.pc(), 0xa226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa224), 0xcb);
        EXPECT(gbc.readMem(0xa225), 0xeb);
        // CB EB 019C
        gbc.setState(0x6672, 0xea94, 0x6e20, 0x8539, 0x8240, 0x8e6b, 0x1, 0x1);
        gbc.writeMem(0x6672, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xea94);
        EXPECT(gbc.pc(), 0x6674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 019D
        gbc.setState(0xa84e, 0xcd5d, 0xe130, 0xd74e, 0xa291, 0x5676, 0x0, 0x1);
        gbc.writeMem(0xa84e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcd5d);
        EXPECT(gbc.pc(), 0xa850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa84e), 0xcb);
        EXPECT(gbc.readMem(0xa84f), 0xeb);
        // CB EB 019E
        gbc.setState(0x3ad9, 0xe17b, 0xa40, 0x771, 0xe656, 0x16d6, 0x0, 0x0);
        gbc.writeMem(0x3ad9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe17b);
        EXPECT(gbc.pc(), 0x3adb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 019F
        gbc.setState(0x215a, 0x9e46, 0xf6a0, 0x1434, 0xa587, 0xc345, 0x0, 0x1);
        gbc.writeMem(0x215a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9e46);
        EXPECT(gbc.pc(), 0x215c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01A0
        gbc.setState(0x3d36, 0x5bd0, 0x6d70, 0x293b, 0x5156, 0x4723, 0x0, 0x1);
        gbc.writeMem(0x3d36, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5bd0);
        EXPECT(gbc.pc(), 0x3d38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01A2
        gbc.setState(0x6cfe, 0x684c, 0x4570, 0x21d6, 0x978a, 0x3727, 0x1, 0x0);
        gbc.writeMem(0x6cfe, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x684c);
        EXPECT(gbc.pc(), 0x6d00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01A3
        gbc.setState(0x7b4a, 0x976e, 0x3ac0, 0x4a3d, 0x4d4e, 0x123d, 0x0, 0x1);
        gbc.writeMem(0x7b4a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x976e);
        EXPECT(gbc.pc(), 0x7b4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01A4
        gbc.setState(0xdf23, 0x1cf7, 0xc530, 0x3276, 0x7ce, 0x52d6, 0x1, 0x0);
        gbc.writeMem(0xdf23, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x1cf7);
        EXPECT(gbc.pc(), 0xdf25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf23), 0xcb);
        EXPECT(gbc.readMem(0xdf24), 0xeb);
        // CB EB 01A6
        gbc.setState(0x8cc9, 0xb088, 0x350, 0xa1ce, 0x6f85, 0x7758, 0x0, 0x0);
        gbc.writeMem(0x8cc9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb088);
        EXPECT(gbc.pc(), 0x8ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc9), 0xcb);
        EXPECT(gbc.readMem(0x8cca), 0xeb);
        // CB EB 01A7
        gbc.setState(0x62a1, 0xde7c, 0xb240, 0x9114, 0xdf2f, 0xe94d, 0x1, 0x1);
        gbc.writeMem(0x62a1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xde7c);
        EXPECT(gbc.pc(), 0x62a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01A8
        gbc.setState(0xbddc, 0xa559, 0x4f10, 0x777d, 0x463, 0x8110, 0x0, 0x1);
        gbc.writeMem(0xbddc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa559);
        EXPECT(gbc.pc(), 0xbdde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbddc), 0xcb);
        EXPECT(gbc.readMem(0xbddd), 0xeb);
        // CB EB 01A9
        gbc.setState(0x9ee5, 0x36b9, 0x5210, 0x617c, 0x28cf, 0x8ccf, 0x0, 0x1);
        gbc.writeMem(0x9ee5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x36b9);
        EXPECT(gbc.pc(), 0x9ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee5), 0xcb);
        EXPECT(gbc.readMem(0x9ee6), 0xeb);
        // CB EB 01AA
        gbc.setState(0xaecf, 0xbd8, 0x1ec0, 0x6a9d, 0xafb5, 0xed04, 0x0, 0x1);
        gbc.writeMem(0xaecf, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbd8);
        EXPECT(gbc.pc(), 0xaed1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaecf), 0xcb);
        EXPECT(gbc.readMem(0xaed0), 0xeb);
        // CB EB 01AB
        gbc.setState(0x737f, 0x84a3, 0x7d00, 0x78b9, 0xf17c, 0x56cd, 0x0, 0x1);
        gbc.writeMem(0x737f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x84a3);
        EXPECT(gbc.pc(), 0x7381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01AC
        gbc.setState(0xdca9, 0xca2f, 0x1520, 0x54b6, 0x116b, 0x159d, 0x1, 0x1);
        gbc.writeMem(0xdca9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xca2f);
        EXPECT(gbc.pc(), 0xdcab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca9), 0xcb);
        EXPECT(gbc.readMem(0xdcaa), 0xeb);
        // CB EB 01AD
        gbc.setState(0x89ff, 0xf15f, 0x5e10, 0x9069, 0x9aee, 0x84d0, 0x1, 0x0);
        gbc.writeMem(0x89ff, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf15f);
        EXPECT(gbc.pc(), 0x8a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ff), 0xcb);
        EXPECT(gbc.readMem(0x8a00), 0xeb);
        // CB EB 01AE
        gbc.setState(0x62c5, 0xadfc, 0x5c10, 0xf16b, 0x5c5a, 0x7700, 0x0, 0x0);
        gbc.writeMem(0x62c5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xadfc);
        EXPECT(gbc.pc(), 0x62c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01AF
        gbc.setState(0x6b6d, 0x1301, 0xe1b0, 0x80c4, 0x6e55, 0xf16c, 0x0, 0x0);
        gbc.writeMem(0x6b6d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1301);
        EXPECT(gbc.pc(), 0x6b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01B0
        gbc.setState(0x45ab, 0x3805, 0xcfb0, 0x57ea, 0x8bb0, 0x3a69, 0x1, 0x1);
        gbc.writeMem(0x45ab, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3805);
        EXPECT(gbc.pc(), 0x45ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01B1
        gbc.setState(0x193d, 0x78c1, 0x8630, 0x236a, 0xb2aa, 0x62a8, 0x1, 0x1);
        gbc.writeMem(0x193d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x78c1);
        EXPECT(gbc.pc(), 0x193f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01B2
        gbc.setState(0x58f0, 0xe4f9, 0x9610, 0x6cb0, 0xdbc7, 0x65de, 0x1, 0x0);
        gbc.writeMem(0x58f0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe4f9);
        EXPECT(gbc.pc(), 0x58f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01B3
        gbc.setState(0xb44d, 0x93b0, 0x7830, 0x4438, 0xaa3b, 0x9ea3, 0x1, 0x1);
        gbc.writeMem(0xb44d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x93b0);
        EXPECT(gbc.pc(), 0xb44f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb44d), 0xcb);
        EXPECT(gbc.readMem(0xb44e), 0xeb);
        // CB EB 01B4
        gbc.setState(0x2b1a, 0x1ba7, 0x9e90, 0x360a, 0xef05, 0x4808, 0x0, 0x0);
        gbc.writeMem(0x2b1a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1ba7);
        EXPECT(gbc.pc(), 0x2b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01B5
        gbc.setState(0xc9c3, 0xf294, 0x47d0, 0x7068, 0xbb4f, 0xe21a, 0x1, 0x1);
        gbc.writeMem(0xc9c3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf294);
        EXPECT(gbc.pc(), 0xc9c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c3), 0xcb);
        EXPECT(gbc.readMem(0xc9c4), 0xeb);
        // CB EB 01B6
        gbc.setState(0x63e5, 0xcae4, 0x6fb0, 0xb7b3, 0x9d42, 0xaa15, 0x1, 0x1);
        gbc.writeMem(0x63e5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xcae4);
        EXPECT(gbc.pc(), 0x63e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01B7
        gbc.setState(0x390d, 0xf890, 0x32e0, 0x3829, 0x6cfe, 0xb130, 0x1, 0x1);
        gbc.writeMem(0x390d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf890);
        EXPECT(gbc.pc(), 0x390f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01B8
        gbc.setState(0xc134, 0x79b1, 0xda90, 0x462c, 0xa3f9, 0xf2e7, 0x0, 0x1);
        gbc.writeMem(0xc134, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x79b1);
        EXPECT(gbc.pc(), 0xc136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc134), 0xcb);
        EXPECT(gbc.readMem(0xc135), 0xeb);
        // CB EB 01BA
        gbc.setState(0x3374, 0xd0f9, 0x2da0, 0x1c07, 0x2a48, 0x7872, 0x1, 0x0);
        gbc.writeMem(0x3374, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd0f9);
        EXPECT(gbc.pc(), 0x3376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01BB
        gbc.setState(0x6126, 0xb2d5, 0x7260, 0x25e3, 0x4dfe, 0x790e, 0x0, 0x1);
        gbc.writeMem(0x6126, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb2d5);
        EXPECT(gbc.pc(), 0x6128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01BC
        gbc.setState(0x679a, 0xb6a6, 0x9ac0, 0xaefa, 0xf2f1, 0xa9d4, 0x1, 0x1);
        gbc.writeMem(0x679a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb6a6);
        EXPECT(gbc.pc(), 0x679c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01BD
        gbc.setState(0x4637, 0xe347, 0x99e0, 0x4ba5, 0xa079, 0xf0cb, 0x1, 0x0);
        gbc.writeMem(0x4637, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe347);
        EXPECT(gbc.pc(), 0x4639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01BE
        gbc.setState(0x9cd3, 0x48d2, 0xe400, 0xe333, 0xa690, 0x27d3, 0x0, 0x1);
        gbc.writeMem(0x9cd3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x48d2);
        EXPECT(gbc.pc(), 0x9cd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd3), 0xcb);
        EXPECT(gbc.readMem(0x9cd4), 0xeb);
        // CB EB 01BF
        gbc.setState(0x730b, 0x9607, 0x7ec0, 0xd045, 0x5ec4, 0x4fe, 0x0, 0x1);
        gbc.writeMem(0x730b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9607);
        EXPECT(gbc.pc(), 0x730d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01C0
        gbc.setState(0x5d24, 0x93d4, 0x6120, 0x93fd, 0x887b, 0x2343, 0x0, 0x1);
        gbc.writeMem(0x5d24, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x93d4);
        EXPECT(gbc.pc(), 0x5d26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01C1
        gbc.setState(0x5faf, 0xcc01, 0xc1d0, 0xe501, 0x4807, 0x8b02, 0x1, 0x0);
        gbc.writeMem(0x5faf, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcc01);
        EXPECT(gbc.pc(), 0x5fb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01C2
        gbc.setState(0x9ac, 0x6ef, 0x70a0, 0xf0b1, 0x35c8, 0x8ef4, 0x1, 0x1);
        gbc.writeMem(0x9ac, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x6ef);
        EXPECT(gbc.pc(), 0x9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01C3
        gbc.setState(0x5e77, 0x2470, 0xb10, 0xce82, 0x8181, 0xd7dc, 0x1, 0x1);
        gbc.writeMem(0x5e77, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2470);
        EXPECT(gbc.pc(), 0x5e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01C5
        gbc.setState(0x91eb, 0x98ab, 0xe4d0, 0xe856, 0x7faa, 0xc524, 0x0, 0x1);
        gbc.writeMem(0x91eb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x98ab);
        EXPECT(gbc.pc(), 0x91ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91eb), 0xcb);
        EXPECT(gbc.readMem(0x91ec), 0xeb);
        // CB EB 01C6
        gbc.setState(0x8183, 0x3e64, 0xb520, 0xadf5, 0x1b42, 0xc8ad, 0x0, 0x1);
        gbc.writeMem(0x8183, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3e64);
        EXPECT(gbc.pc(), 0x8185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8183), 0xcb);
        EXPECT(gbc.readMem(0x8184), 0xeb);
        // CB EB 01C7
        gbc.setState(0xeb52, 0x8bda, 0xb30, 0x4442, 0xdcdc, 0xeee5, 0x1, 0x0);
        gbc.writeMem(0xeb52, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x8bda);
        EXPECT(gbc.pc(), 0xeb54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb52), 0xcb);
        EXPECT(gbc.readMem(0xeb53), 0xeb);
        // CB EB 01C8
        gbc.setState(0x7756, 0x7d34, 0x0, 0x804a, 0x8a4c, 0x3f18, 0x0, 0x1);
        gbc.writeMem(0x7756, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7d34);
        EXPECT(gbc.pc(), 0x7758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01C9
        gbc.setState(0x6327, 0x88f7, 0xc2f0, 0x960d, 0x5553, 0x9d82, 0x0, 0x1);
        gbc.writeMem(0x6327, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x88f7);
        EXPECT(gbc.pc(), 0x6329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01CA
        gbc.setState(0x1cc0, 0x1beb, 0x22f0, 0x599f, 0x3353, 0x3946, 0x0, 0x0);
        gbc.writeMem(0x1cc0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1beb);
        EXPECT(gbc.pc(), 0x1cc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01CB
        gbc.setState(0x6b86, 0xe7f, 0x1e50, 0x639d, 0xcb18, 0x3960, 0x1, 0x0);
        gbc.writeMem(0x6b86, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe7f);
        EXPECT(gbc.pc(), 0x6b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01CC
        gbc.setState(0x8f1d, 0x9434, 0x77e0, 0x8fb6, 0xe5d6, 0x20c6, 0x0, 0x1);
        gbc.writeMem(0x8f1d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9434);
        EXPECT(gbc.pc(), 0x8f1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1d), 0xcb);
        EXPECT(gbc.readMem(0x8f1e), 0xeb);
        // CB EB 01CD
        gbc.setState(0x6482, 0xdd5e, 0x7c50, 0xf724, 0xdb0a, 0x298, 0x0, 0x1);
        gbc.writeMem(0x6482, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdd5e);
        EXPECT(gbc.pc(), 0x6484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01CE
        gbc.setState(0x6b5a, 0x8fea, 0x300, 0xb162, 0x3185, 0x88e8, 0x0, 0x1);
        gbc.writeMem(0x6b5a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8fea);
        EXPECT(gbc.pc(), 0x6b5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01CF
        gbc.setState(0x396e, 0xa0d8, 0x1e30, 0x3406, 0x7b85, 0xb561, 0x1, 0x1);
        gbc.writeMem(0x396e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa0d8);
        EXPECT(gbc.pc(), 0x3970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01D1
        gbc.setState(0x52af, 0x831b, 0x160, 0xfc1a, 0x77e0, 0xae09, 0x1, 0x1);
        gbc.writeMem(0x52af, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x831b);
        EXPECT(gbc.pc(), 0x52b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01D2
        gbc.setState(0xfd, 0xe9b3, 0x90c0, 0x994, 0xd6cd, 0xb0aa, 0x1, 0x0);
        gbc.writeMem(0xfd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe9b3);
        EXPECT(gbc.pc(), 0xff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01D3
        gbc.setState(0x3b7a, 0xc1fb, 0xb4e0, 0xeb34, 0x243c, 0xff0, 0x1, 0x0);
        gbc.writeMem(0x3b7a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc1fb);
        EXPECT(gbc.pc(), 0x3b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01D4
        gbc.setState(0xac77, 0xf524, 0x8960, 0x3b8b, 0xcbef, 0xdc2d, 0x0, 0x0);
        gbc.writeMem(0xac77, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf524);
        EXPECT(gbc.pc(), 0xac79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac77), 0xcb);
        EXPECT(gbc.readMem(0xac78), 0xeb);
        // CB EB 01D5
        gbc.setState(0x5805, 0x735e, 0x3120, 0xd4f9, 0xf5ed, 0xd0df, 0x0, 0x0);
        gbc.writeMem(0x5805, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x735e);
        EXPECT(gbc.pc(), 0x5807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01D6
        gbc.setState(0x251e, 0x97a, 0xbb00, 0x2549, 0xde99, 0xedfe, 0x1, 0x1);
        gbc.writeMem(0x251e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x97a);
        EXPECT(gbc.pc(), 0x2520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01D7
        gbc.setState(0x7a88, 0xd578, 0xba00, 0xae42, 0x1957, 0xbe5b, 0x0, 0x1);
        gbc.writeMem(0x7a88, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd578);
        EXPECT(gbc.pc(), 0x7a8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01D8
        gbc.setState(0x2244, 0x8b90, 0xd750, 0x7412, 0x9e54, 0xdf7d, 0x1, 0x0);
        gbc.writeMem(0x2244, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x8b90);
        EXPECT(gbc.pc(), 0x2246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01D9
        gbc.setState(0x2bc, 0x59ab, 0x30a0, 0xcee5, 0xf9f, 0xadff, 0x1, 0x1);
        gbc.writeMem(0x2bc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x59ab);
        EXPECT(gbc.pc(), 0x2be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01DB
        gbc.setState(0xa5ec, 0x82c1, 0xfe10, 0x882, 0x346c, 0xf0d8, 0x1, 0x0);
        gbc.writeMem(0xa5ec, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x82c1);
        EXPECT(gbc.pc(), 0xa5ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ec), 0xcb);
        EXPECT(gbc.readMem(0xa5ed), 0xeb);
        // CB EB 01DC
        gbc.setState(0xb18e, 0xd991, 0xb340, 0xbf2b, 0x1502, 0xe0f6, 0x1, 0x1);
        gbc.writeMem(0xb18e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd991);
        EXPECT(gbc.pc(), 0xb190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb18e), 0xcb);
        EXPECT(gbc.readMem(0xb18f), 0xeb);
        // CB EB 01DD
        gbc.setState(0xc79, 0x7408, 0x3cd0, 0x49e0, 0x3942, 0x283b, 0x1, 0x1);
        gbc.writeMem(0xc79, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7408);
        EXPECT(gbc.pc(), 0xc7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01DE
        gbc.setState(0x1252, 0xe6f4, 0x3520, 0x1b48, 0x72c4, 0x8c3, 0x1, 0x0);
        gbc.writeMem(0x1252, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe6f4);
        EXPECT(gbc.pc(), 0x1254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01DF
        gbc.setState(0x57b0, 0x43dd, 0x91b0, 0xb5a3, 0x391d, 0x6afd, 0x1, 0x0);
        gbc.writeMem(0x57b0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x43dd);
        EXPECT(gbc.pc(), 0x57b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01E0
        gbc.setState(0x5bb, 0xfb5b, 0xa180, 0x8aee, 0x3a30, 0x2d1e, 0x0, 0x0);
        gbc.writeMem(0x5bb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfb5b);
        EXPECT(gbc.pc(), 0x5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01E1
        gbc.setState(0x774, 0xde5, 0xda0, 0x59bc, 0x63dc, 0x55f6, 0x1, 0x1);
        gbc.writeMem(0x774, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xde5);
        EXPECT(gbc.pc(), 0x776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01E2
        gbc.setState(0x5e3b, 0x92ff, 0xb3d0, 0x2c15, 0xfed9, 0xfc5d, 0x1, 0x0);
        gbc.writeMem(0x5e3b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x92ff);
        EXPECT(gbc.pc(), 0x5e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01E3
        gbc.setState(0x7b4b, 0x4814, 0xa5a0, 0x8125, 0xe3e0, 0x9526, 0x1, 0x0);
        gbc.writeMem(0x7b4b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4814);
        EXPECT(gbc.pc(), 0x7b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01E4
        gbc.setState(0x2abf, 0xfa8d, 0x13b0, 0x7e7f, 0xfc0d, 0x1493, 0x0, 0x0);
        gbc.writeMem(0x2abf, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfa8d);
        EXPECT(gbc.pc(), 0x2ac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01E5
        gbc.setState(0xceca, 0x1bc4, 0x77d0, 0x20f6, 0x18b8, 0x9544, 0x1, 0x0);
        gbc.writeMem(0xceca, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1bc4);
        EXPECT(gbc.pc(), 0xcecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceca), 0xcb);
        EXPECT(gbc.readMem(0xcecb), 0xeb);
        // CB EB 01E6
        gbc.setState(0x981b, 0xd683, 0xada0, 0x7e91, 0x428b, 0x499f, 0x0, 0x1);
        gbc.writeMem(0x981b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd683);
        EXPECT(gbc.pc(), 0x981d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x981b), 0xcb);
        EXPECT(gbc.readMem(0x981c), 0xeb);
        // CB EB 01E7
        gbc.setState(0xb84c, 0xc54a, 0xcb90, 0xfe2f, 0xa038, 0xfc9a, 0x0, 0x0);
        gbc.writeMem(0xb84c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc54a);
        EXPECT(gbc.pc(), 0xb84e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb84c), 0xcb);
        EXPECT(gbc.readMem(0xb84d), 0xeb);
        // CB EB 01E8
        gbc.setState(0x7b0d, 0x82c4, 0x6540, 0xf2a7, 0xeaad, 0xe10f, 0x1, 0x1);
        gbc.writeMem(0x7b0d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x82c4);
        EXPECT(gbc.pc(), 0x7b0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01E9
        gbc.setState(0x1fa7, 0xb7c3, 0xaf00, 0x2b9c, 0x8f4b, 0xbf54, 0x0, 0x0);
        gbc.writeMem(0x1fa7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb7c3);
        EXPECT(gbc.pc(), 0x1fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01EA
        gbc.setState(0x3ac7, 0x5518, 0xfd60, 0x2666, 0x647b, 0xfa8b, 0x1, 0x1);
        gbc.writeMem(0x3ac7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5518);
        EXPECT(gbc.pc(), 0x3ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01EB
        gbc.setState(0x6038, 0x59c, 0xa2e0, 0xba65, 0xdaa7, 0xdaa7, 0x0, 0x0);
        gbc.writeMem(0x6038, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x59c);
        EXPECT(gbc.pc(), 0x603a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01EC
        gbc.setState(0xd545, 0xdcb4, 0x9cb0, 0x44de, 0x861a, 0xca31, 0x0, 0x0);
        gbc.writeMem(0xd545, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdcb4);
        EXPECT(gbc.pc(), 0xd547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd545), 0xcb);
        EXPECT(gbc.readMem(0xd546), 0xeb);
        // CB EB 01ED
        gbc.setState(0x3c04, 0xa856, 0x8740, 0x3461, 0x5fad, 0x3bc9, 0x1, 0x0);
        gbc.writeMem(0x3c04, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa856);
        EXPECT(gbc.pc(), 0x3c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01EE
        gbc.setState(0xc818, 0x966, 0x2c80, 0xa42a, 0x73be, 0x1224, 0x0, 0x0);
        gbc.writeMem(0xc818, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x966);
        EXPECT(gbc.pc(), 0xc81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc818), 0xcb);
        EXPECT(gbc.readMem(0xc819), 0xeb);
        // CB EB 01EF
        gbc.setState(0xb5bc, 0x71f3, 0x67d0, 0xf52b, 0x8a96, 0x6180, 0x0, 0x0);
        gbc.writeMem(0xb5bc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x71f3);
        EXPECT(gbc.pc(), 0xb5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5bc), 0xcb);
        EXPECT(gbc.readMem(0xb5bd), 0xeb);
        // CB EB 01F0
        gbc.setState(0xc8f7, 0x10c8, 0x4720, 0xcb20, 0xc65a, 0xbb99, 0x0, 0x1);
        gbc.writeMem(0xc8f7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x10c8);
        EXPECT(gbc.pc(), 0xc8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f7), 0xcb);
        EXPECT(gbc.readMem(0xc8f8), 0xeb);
        // CB EB 01F1
        gbc.setState(0x10c4, 0x4139, 0xe5e0, 0x197b, 0x19dc, 0xe728, 0x0, 0x0);
        gbc.writeMem(0x10c4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4139);
        EXPECT(gbc.pc(), 0x10c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01F2
        gbc.setState(0xbb89, 0x6c72, 0xfe90, 0x7e2b, 0xdda2, 0xc625, 0x1, 0x0);
        gbc.writeMem(0xbb89, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6c72);
        EXPECT(gbc.pc(), 0xbb8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb89), 0xcb);
        EXPECT(gbc.readMem(0xbb8a), 0xeb);
        // CB EB 01F3
        gbc.setState(0x7166, 0xc4fa, 0xb940, 0x44ab, 0xbf44, 0x10e8, 0x1, 0x0);
        gbc.writeMem(0x7166, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc4fa);
        EXPECT(gbc.pc(), 0x7168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01F4
        gbc.setState(0x837d, 0x27a2, 0x7710, 0xf791, 0xdc7c, 0x14d5, 0x0, 0x1);
        gbc.writeMem(0x837d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x27a2);
        EXPECT(gbc.pc(), 0x837f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x837d), 0xcb);
        EXPECT(gbc.readMem(0x837e), 0xeb);
        // CB EB 01F5
        gbc.setState(0xb0ff, 0x8dbe, 0x8a60, 0xef73, 0x111b, 0x8f0c, 0x0, 0x1);
        gbc.writeMem(0xb0ff, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8dbe);
        EXPECT(gbc.pc(), 0xb101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0ff), 0xcb);
        EXPECT(gbc.readMem(0xb100), 0xeb);
        // CB EB 01F6
        gbc.setState(0x7dce, 0xfe86, 0x5090, 0xbd1f, 0x3162, 0xba35, 0x1, 0x0);
        gbc.writeMem(0x7dce, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfe86);
        EXPECT(gbc.pc(), 0x7dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01F7
        gbc.setState(0x151b, 0x8cee, 0x8d40, 0xb22e, 0xba3, 0x472b, 0x1, 0x1);
        gbc.writeMem(0x151b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8cee);
        EXPECT(gbc.pc(), 0x151d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01F8
        gbc.setState(0x1c40, 0x382b, 0xc190, 0xa9fb, 0xc1dc, 0xb7a5, 0x0, 0x0);
        gbc.writeMem(0x1c40, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x382b);
        EXPECT(gbc.pc(), 0x1c42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01F9
        gbc.setState(0x1d0f, 0x61c8, 0x45d0, 0x41ac, 0x258, 0x28a9, 0x1, 0x0);
        gbc.writeMem(0x1d0f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x61c8);
        EXPECT(gbc.pc(), 0x1d11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 01FA
        gbc.setState(0xa36c, 0x7f30, 0xdc50, 0xa2e2, 0xc21b, 0x5ba7, 0x0, 0x1);
        gbc.writeMem(0xa36c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7f30);
        EXPECT(gbc.pc(), 0xa36e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa36c), 0xcb);
        EXPECT(gbc.readMem(0xa36d), 0xeb);
        // CB EB 01FB
        gbc.setState(0xdc00, 0xefd1, 0xfba0, 0x1c05, 0xdbf8, 0x7ab, 0x0, 0x1);
        gbc.writeMem(0xdc00, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xefd1);
        EXPECT(gbc.pc(), 0xdc02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc00), 0xcb);
        EXPECT(gbc.readMem(0xdc01), 0xeb);
        // CB EB 01FC
        gbc.setState(0xeb06, 0xdd4c, 0xe100, 0xd6bb, 0x9372, 0xe210, 0x0, 0x0);
        gbc.writeMem(0xeb06, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xdd4c);
        EXPECT(gbc.pc(), 0xeb08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb06), 0xcb);
        EXPECT(gbc.readMem(0xeb07), 0xeb);
        // CB EB 01FD
        gbc.setState(0x1260, 0x5347, 0xe80, 0xcc92, 0x1049, 0x5a2d, 0x1, 0x0);
        gbc.writeMem(0x1260, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5347);
        EXPECT(gbc.pc(), 0x1262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 01FE
        gbc.setState(0xaed6, 0xf936, 0x8e30, 0xd224, 0xbb0e, 0x6d7d, 0x0, 0x0);
        gbc.writeMem(0xaed6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf936);
        EXPECT(gbc.pc(), 0xaed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed6), 0xcb);
        EXPECT(gbc.readMem(0xaed7), 0xeb);
        // CB EB 01FF
        gbc.setState(0x38a8, 0x6692, 0xd700, 0x2a38, 0xac8a, 0xcb80, 0x1, 0x0);
        gbc.writeMem(0x38a8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6692);
        EXPECT(gbc.pc(), 0x38aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0200
        gbc.setState(0xe6b6, 0x6242, 0xd7c0, 0xf8ce, 0x49e1, 0xd56, 0x1, 0x1);
        gbc.writeMem(0xe6b6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6242);
        EXPECT(gbc.pc(), 0xe6b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b6), 0xcb);
        EXPECT(gbc.readMem(0xe6b7), 0xeb);
        // CB EB 0201
        gbc.setState(0xf1, 0x4ab3, 0x8040, 0x765e, 0x517, 0x49b3, 0x0, 0x0);
        gbc.writeMem(0xf1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4ab3);
        EXPECT(gbc.pc(), 0xf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0202
        gbc.setState(0xe701, 0xc43b, 0x99d0, 0xf047, 0x3510, 0x71d1, 0x0, 0x0);
        gbc.writeMem(0xe701, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc43b);
        EXPECT(gbc.pc(), 0xe703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe701), 0xcb);
        EXPECT(gbc.readMem(0xe702), 0xeb);
        // CB EB 0203
        gbc.setState(0x2326, 0xdebb, 0x2660, 0xf18b, 0xa744, 0xde44, 0x0, 0x1);
        gbc.writeMem(0x2326, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdebb);
        EXPECT(gbc.pc(), 0x2328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0204
        gbc.setState(0xe852, 0x42ef, 0x8100, 0x6b2e, 0xb75d, 0xaccb, 0x0, 0x0);
        gbc.writeMem(0xe852, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x42ef);
        EXPECT(gbc.pc(), 0xe854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe852), 0xcb);
        EXPECT(gbc.readMem(0xe853), 0xeb);
        // CB EB 0205
        gbc.setState(0x4424, 0x1e5b, 0x9000, 0xdc4b, 0xc60e, 0x3bcf, 0x0, 0x1);
        gbc.writeMem(0x4424, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1e5b);
        EXPECT(gbc.pc(), 0x4426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0206
        gbc.setState(0x1d94, 0x81cd, 0x5970, 0x3340, 0xdcf9, 0x4cc8, 0x1, 0x1);
        gbc.writeMem(0x1d94, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x81cd);
        EXPECT(gbc.pc(), 0x1d96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0207
        gbc.setState(0x9cd3, 0xaa3d, 0x3fd0, 0x2461, 0x73b1, 0xf110, 0x0, 0x0);
        gbc.writeMem(0x9cd3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xaa3d);
        EXPECT(gbc.pc(), 0x9cd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd3), 0xcb);
        EXPECT(gbc.readMem(0x9cd4), 0xeb);
        // CB EB 0208
        gbc.setState(0xb705, 0x898f, 0x2670, 0x2d8a, 0x789d, 0xb82f, 0x0, 0x0);
        gbc.writeMem(0xb705, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x898f);
        EXPECT(gbc.pc(), 0xb707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb705), 0xcb);
        EXPECT(gbc.readMem(0xb706), 0xeb);
        // CB EB 0209
        gbc.setState(0xee2, 0x64d1, 0xf220, 0x9375, 0x27af, 0xb0c3, 0x1, 0x0);
        gbc.writeMem(0xee2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x64d1);
        EXPECT(gbc.pc(), 0xee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 020A
        gbc.setState(0xea56, 0xc12b, 0xfb30, 0xca2f, 0xb5b4, 0x63d0, 0x0, 0x1);
        gbc.writeMem(0xea56, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xc12b);
        EXPECT(gbc.pc(), 0xea58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea56), 0xcb);
        EXPECT(gbc.readMem(0xea57), 0xeb);
        // CB EB 020B
        gbc.setState(0xc593, 0xdec4, 0xa780, 0x9f6a, 0x87be, 0xec75, 0x0, 0x0);
        gbc.writeMem(0xc593, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xdec4);
        EXPECT(gbc.pc(), 0xc595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc593), 0xcb);
        EXPECT(gbc.readMem(0xc594), 0xeb);
        // CB EB 020C
        gbc.setState(0xaba4, 0x3474, 0xca80, 0x4cad, 0x82e3, 0xfd36, 0x1, 0x1);
        gbc.writeMem(0xaba4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3474);
        EXPECT(gbc.pc(), 0xaba6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba4), 0xcb);
        EXPECT(gbc.readMem(0xaba5), 0xeb);
        // CB EB 020D
        gbc.setState(0x2f6e, 0xf1f, 0xcb40, 0x7cf5, 0x71ae, 0x8c8a, 0x1, 0x1);
        gbc.writeMem(0x2f6e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf1f);
        EXPECT(gbc.pc(), 0x2f70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 020E
        gbc.setState(0x9d70, 0x90f9, 0x8cd0, 0x17c7, 0xbd4a, 0x318e, 0x1, 0x0);
        gbc.writeMem(0x9d70, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x90f9);
        EXPECT(gbc.pc(), 0x9d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d70), 0xcb);
        EXPECT(gbc.readMem(0x9d71), 0xeb);
        // CB EB 020F
        gbc.setState(0xceb, 0x3796, 0x4b70, 0x9717, 0xe63b, 0xa30a, 0x0, 0x1);
        gbc.writeMem(0xceb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3796);
        EXPECT(gbc.pc(), 0xced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0210
        gbc.setState(0x2fdc, 0x9046, 0x51b0, 0xe667, 0x65ff, 0xe27f, 0x1, 0x1);
        gbc.writeMem(0x2fdc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9046);
        EXPECT(gbc.pc(), 0x2fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0211
        gbc.setState(0x82bc, 0x4697, 0x630, 0xb574, 0xc6b4, 0x86c9, 0x0, 0x1);
        gbc.writeMem(0x82bc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4697);
        EXPECT(gbc.pc(), 0x82be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82bc), 0xcb);
        EXPECT(gbc.readMem(0x82bd), 0xeb);
        // CB EB 0212
        gbc.setState(0xa0f5, 0x2fd, 0x4950, 0x588, 0x7c86, 0xfff6, 0x0, 0x1);
        gbc.writeMem(0xa0f5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2fd);
        EXPECT(gbc.pc(), 0xa0f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f5), 0xcb);
        EXPECT(gbc.readMem(0xa0f6), 0xeb);
        // CB EB 0213
        gbc.setState(0xdc18, 0xe079, 0x8970, 0x1d09, 0x7120, 0x21c0, 0x0, 0x0);
        gbc.writeMem(0xdc18, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe079);
        EXPECT(gbc.pc(), 0xdc1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc18), 0xcb);
        EXPECT(gbc.readMem(0xdc19), 0xeb);
        // CB EB 0214
        gbc.setState(0x8f55, 0x1137, 0x62f0, 0x338c, 0x61f8, 0xa3a5, 0x0, 0x1);
        gbc.writeMem(0x8f55, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1137);
        EXPECT(gbc.pc(), 0x8f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f55), 0xcb);
        EXPECT(gbc.readMem(0x8f56), 0xeb);
        // CB EB 0215
        gbc.setState(0xbd93, 0xbdd8, 0xe300, 0xfffa, 0x4276, 0xde02, 0x1, 0x1);
        gbc.writeMem(0xbd93, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbdd8);
        EXPECT(gbc.pc(), 0xbd95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd93), 0xcb);
        EXPECT(gbc.readMem(0xbd94), 0xeb);
        // CB EB 0216
        gbc.setState(0xcaa2, 0xe276, 0x4a50, 0xe441, 0x27e7, 0xbac6, 0x1, 0x0);
        gbc.writeMem(0xcaa2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe276);
        EXPECT(gbc.pc(), 0xcaa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaa2), 0xcb);
        EXPECT(gbc.readMem(0xcaa3), 0xeb);
        // CB EB 0217
        gbc.setState(0x6755, 0xdec4, 0x5ff0, 0xefcd, 0xe2a8, 0xf3d5, 0x0, 0x0);
        gbc.writeMem(0x6755, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdec4);
        EXPECT(gbc.pc(), 0x6757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0218
        gbc.setState(0x831a, 0x2c37, 0x60b0, 0x531d, 0xb751, 0xbce0, 0x1, 0x0);
        gbc.writeMem(0x831a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2c37);
        EXPECT(gbc.pc(), 0x831c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x831a), 0xcb);
        EXPECT(gbc.readMem(0x831b), 0xeb);
        // CB EB 0219
        gbc.setState(0xaaa8, 0x8391, 0x99b0, 0x5744, 0x31b2, 0x2f64, 0x0, 0x1);
        gbc.writeMem(0xaaa8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8391);
        EXPECT(gbc.pc(), 0xaaaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa8), 0xcb);
        EXPECT(gbc.readMem(0xaaa9), 0xeb);
        // CB EB 021B
        gbc.setState(0xc2fd, 0x4366, 0xa870, 0xafa9, 0x592d, 0xdb25, 0x1, 0x0);
        gbc.writeMem(0xc2fd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4366);
        EXPECT(gbc.pc(), 0xc2ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2fd), 0xcb);
        EXPECT(gbc.readMem(0xc2fe), 0xeb);
        // CB EB 021C
        gbc.setState(0xa2db, 0x8bcd, 0x3720, 0xc060, 0xaca8, 0xa638, 0x0, 0x0);
        gbc.writeMem(0xa2db, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8bcd);
        EXPECT(gbc.pc(), 0xa2dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2db), 0xcb);
        EXPECT(gbc.readMem(0xa2dc), 0xeb);
        // CB EB 021D
        gbc.setState(0x4f2e, 0x45f1, 0xf9c0, 0xe180, 0xda4f, 0x71ca, 0x1, 0x1);
        gbc.writeMem(0x4f2e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x45f1);
        EXPECT(gbc.pc(), 0x4f30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 021E
        gbc.setState(0xe73b, 0xd51, 0x2120, 0xd152, 0xef99, 0xaa80, 0x1, 0x0);
        gbc.writeMem(0xe73b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd51);
        EXPECT(gbc.pc(), 0xe73d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe73b), 0xcb);
        EXPECT(gbc.readMem(0xe73c), 0xeb);
        // CB EB 021F
        gbc.setState(0x8bda, 0xffc, 0xe7e0, 0xad63, 0x12da, 0x5e65, 0x1, 0x0);
        gbc.writeMem(0x8bda, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xffc);
        EXPECT(gbc.pc(), 0x8bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bda), 0xcb);
        EXPECT(gbc.readMem(0x8bdb), 0xeb);
        // CB EB 0220
        gbc.setState(0x982e, 0x7014, 0xcda0, 0xaa84, 0x972b, 0x8b33, 0x1, 0x1);
        gbc.writeMem(0x982e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7014);
        EXPECT(gbc.pc(), 0x9830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x982e), 0xcb);
        EXPECT(gbc.readMem(0x982f), 0xeb);
        // CB EB 0221
        gbc.setState(0xa279, 0xe921, 0x2ac0, 0xa25b, 0x6dae, 0x5b3, 0x1, 0x0);
        gbc.writeMem(0xa279, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe921);
        EXPECT(gbc.pc(), 0xa27b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa279), 0xcb);
        EXPECT(gbc.readMem(0xa27a), 0xeb);
        // CB EB 0222
        gbc.setState(0x8b8e, 0x2fa6, 0x7910, 0x6d3d, 0x5017, 0x7018, 0x0, 0x1);
        gbc.writeMem(0x8b8e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2fa6);
        EXPECT(gbc.pc(), 0x8b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b8e), 0xcb);
        EXPECT(gbc.readMem(0x8b8f), 0xeb);
        // CB EB 0223
        gbc.setState(0x9c27, 0x2b4e, 0x1d00, 0x60be, 0xde33, 0x492d, 0x0, 0x1);
        gbc.writeMem(0x9c27, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2b4e);
        EXPECT(gbc.pc(), 0x9c29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c27), 0xcb);
        EXPECT(gbc.readMem(0x9c28), 0xeb);
        // CB EB 0224
        gbc.setState(0x85a0, 0xd159, 0x9660, 0x7d95, 0x960f, 0x2ad3, 0x1, 0x0);
        gbc.writeMem(0x85a0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd159);
        EXPECT(gbc.pc(), 0x85a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a0), 0xcb);
        EXPECT(gbc.readMem(0x85a1), 0xeb);
        // CB EB 0225
        gbc.setState(0x5833, 0x97b6, 0xf7e0, 0xd0cc, 0xc9b5, 0xe2e4, 0x1, 0x1);
        gbc.writeMem(0x5833, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x97b6);
        EXPECT(gbc.pc(), 0x5835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0226
        gbc.setState(0x76a8, 0x21bf, 0x7480, 0xd3dd, 0x8eea, 0x1288, 0x0, 0x0);
        gbc.writeMem(0x76a8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x21bf);
        EXPECT(gbc.pc(), 0x76aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0227
        gbc.setState(0x4e89, 0x32a5, 0x9ac0, 0xb03d, 0x4a82, 0xec18, 0x0, 0x1);
        gbc.writeMem(0x4e89, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x32a5);
        EXPECT(gbc.pc(), 0x4e8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0228
        gbc.setState(0x1c8b, 0x9e96, 0x3e20, 0x9ef3, 0xa7c3, 0x19c6, 0x0, 0x0);
        gbc.writeMem(0x1c8b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9e96);
        EXPECT(gbc.pc(), 0x1c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0229
        gbc.setState(0x5728, 0x1940, 0x4ce0, 0xdf4e, 0x5baf, 0xfa2f, 0x0, 0x0);
        gbc.writeMem(0x5728, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x1940);
        EXPECT(gbc.pc(), 0x572a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 022A
        gbc.setState(0xac18, 0x364f, 0x42d0, 0x46ac, 0x945e, 0xdbfc, 0x1, 0x1);
        gbc.writeMem(0xac18, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x364f);
        EXPECT(gbc.pc(), 0xac1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac18), 0xcb);
        EXPECT(gbc.readMem(0xac19), 0xeb);
        // CB EB 022B
        gbc.setState(0x74f7, 0xbdb9, 0xc00, 0x5358, 0x322d, 0x7612, 0x0, 0x0);
        gbc.writeMem(0x74f7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xbdb9);
        EXPECT(gbc.pc(), 0x74f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 022C
        gbc.setState(0x4e4b, 0x5c36, 0x5140, 0x22fb, 0xe019, 0xf5ec, 0x1, 0x1);
        gbc.writeMem(0x4e4b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5c36);
        EXPECT(gbc.pc(), 0x4e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 022D
        gbc.setState(0xad1e, 0x35d2, 0xb570, 0x6153, 0x61a3, 0xc781, 0x0, 0x0);
        gbc.writeMem(0xad1e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x35d2);
        EXPECT(gbc.pc(), 0xad20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad1e), 0xcb);
        EXPECT(gbc.readMem(0xad1f), 0xeb);
        // CB EB 022E
        gbc.setState(0x2d06, 0x6374, 0xb2e0, 0x95f9, 0xc1eb, 0xb1dd, 0x1, 0x1);
        gbc.writeMem(0x2d06, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6374);
        EXPECT(gbc.pc(), 0x2d08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 022F
        gbc.setState(0x45e3, 0x33d6, 0x7c20, 0xdda6, 0xfeeb, 0xb72e, 0x0, 0x1);
        gbc.writeMem(0x45e3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x33d6);
        EXPECT(gbc.pc(), 0x45e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0230
        gbc.setState(0xe9eb, 0xf9a0, 0x1160, 0x9dd0, 0x406c, 0x181b, 0x1, 0x0);
        gbc.writeMem(0xe9eb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf9a0);
        EXPECT(gbc.pc(), 0xe9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9eb), 0xcb);
        EXPECT(gbc.readMem(0xe9ec), 0xeb);
        // CB EB 0231
        gbc.setState(0xebdf, 0xb9ac, 0x3d20, 0xe3d2, 0xe723, 0x55b1, 0x1, 0x0);
        gbc.writeMem(0xebdf, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb9ac);
        EXPECT(gbc.pc(), 0xebe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebdf), 0xcb);
        EXPECT(gbc.readMem(0xebe0), 0xeb);
        // CB EB 0232
        gbc.setState(0x1e35, 0xbfb3, 0x38c0, 0x1a0c, 0xde60, 0x24c1, 0x1, 0x1);
        gbc.writeMem(0x1e35, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbfb3);
        EXPECT(gbc.pc(), 0x1e37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0234
        gbc.setState(0x4ff8, 0xa751, 0x4ce0, 0xf8d8, 0x80d3, 0x249, 0x1, 0x0);
        gbc.writeMem(0x4ff8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa751);
        EXPECT(gbc.pc(), 0x4ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0235
        gbc.setState(0xa78d, 0xb5e0, 0xeda0, 0x2af6, 0xc5b, 0xfba3, 0x0, 0x1);
        gbc.writeMem(0xa78d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb5e0);
        EXPECT(gbc.pc(), 0xa78f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa78d), 0xcb);
        EXPECT(gbc.readMem(0xa78e), 0xeb);
        // CB EB 0236
        gbc.setState(0x3705, 0x69ad, 0x8170, 0x3d5c, 0x3400, 0x3184, 0x1, 0x0);
        gbc.writeMem(0x3705, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x69ad);
        EXPECT(gbc.pc(), 0x3707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0237
        gbc.setState(0x598b, 0xb61c, 0x3280, 0x7899, 0x4235, 0x7895, 0x0, 0x1);
        gbc.writeMem(0x598b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb61c);
        EXPECT(gbc.pc(), 0x598d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0238
        gbc.setState(0xbf9, 0x5c66, 0xc540, 0xabc4, 0xd778, 0xe30b, 0x0, 0x0);
        gbc.writeMem(0xbf9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5c66);
        EXPECT(gbc.pc(), 0xbfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0239
        gbc.setState(0x467d, 0x4708, 0x3e70, 0x8143, 0x44ca, 0x5486, 0x0, 0x0);
        gbc.writeMem(0x467d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4708);
        EXPECT(gbc.pc(), 0x467f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 023A
        gbc.setState(0x22a9, 0x686e, 0xb620, 0x4e2a, 0x425a, 0xf765, 0x1, 0x1);
        gbc.writeMem(0x22a9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x686e);
        EXPECT(gbc.pc(), 0x22ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 023B
        gbc.setState(0x6a70, 0xb757, 0xe380, 0x1dc6, 0xae40, 0x24fe, 0x1, 0x0);
        gbc.writeMem(0x6a70, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb757);
        EXPECT(gbc.pc(), 0x6a72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 023C
        gbc.setState(0xdf99, 0xaf0a, 0xada0, 0xeea7, 0x51c1, 0x83c9, 0x1, 0x1);
        gbc.writeMem(0xdf99, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xaf0a);
        EXPECT(gbc.pc(), 0xdf9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf99), 0xcb);
        EXPECT(gbc.readMem(0xdf9a), 0xeb);
        // CB EB 023D
        gbc.setState(0x85dd, 0xb0d1, 0x8b0, 0x114a, 0x1340, 0xbb1, 0x0, 0x0);
        gbc.writeMem(0x85dd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb0d1);
        EXPECT(gbc.pc(), 0x85df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85dd), 0xcb);
        EXPECT(gbc.readMem(0x85de), 0xeb);
        // CB EB 023E
        gbc.setState(0x6a22, 0x39e, 0x4530, 0xdd1b, 0x7e8c, 0xbda3, 0x1, 0x0);
        gbc.writeMem(0x6a22, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x39e);
        EXPECT(gbc.pc(), 0x6a24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 023F
        gbc.setState(0x79a7, 0xa290, 0x2d40, 0xff30, 0x1d90, 0x90a8, 0x0, 0x1);
        gbc.writeMem(0x79a7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa290);
        EXPECT(gbc.pc(), 0x79a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0240
        gbc.setState(0x112c, 0xc3c6, 0x4fc0, 0x8ae, 0xbbe8, 0xa708, 0x1, 0x0);
        gbc.writeMem(0x112c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc3c6);
        EXPECT(gbc.pc(), 0x112e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0241
        gbc.setState(0x7335, 0x51de, 0x4100, 0xa85f, 0x288c, 0xb768, 0x1, 0x1);
        gbc.writeMem(0x7335, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x51de);
        EXPECT(gbc.pc(), 0x7337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0242
        gbc.setState(0xe62e, 0xac3e, 0x4650, 0x952c, 0x9900, 0x77b0, 0x1, 0x0);
        gbc.writeMem(0xe62e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xac3e);
        EXPECT(gbc.pc(), 0xe630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62e), 0xcb);
        EXPECT(gbc.readMem(0xe62f), 0xeb);
        // CB EB 0243
        gbc.setState(0x380e, 0x6870, 0x6800, 0x89c8, 0xe334, 0x8418, 0x1, 0x1);
        gbc.writeMem(0x380e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6870);
        EXPECT(gbc.pc(), 0x3810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0244
        gbc.setState(0x19cc, 0x54b, 0xcab0, 0x9f62, 0x474e, 0xea0a, 0x1, 0x1);
        gbc.writeMem(0x19cc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x54b);
        EXPECT(gbc.pc(), 0x19ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0245
        gbc.setState(0x2346, 0xdadd, 0x4270, 0x8513, 0xb462, 0xfd42, 0x0, 0x1);
        gbc.writeMem(0x2346, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdadd);
        EXPECT(gbc.pc(), 0x2348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0246
        gbc.setState(0x5b93, 0xb9f9, 0x6450, 0x9e3e, 0x49f6, 0x94d3, 0x0, 0x1);
        gbc.writeMem(0x5b93, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb9f9);
        EXPECT(gbc.pc(), 0x5b95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0247
        gbc.setState(0xd5db, 0x7deb, 0x350, 0x5310, 0x3eaf, 0x7da9, 0x0, 0x1);
        gbc.writeMem(0xd5db, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7deb);
        EXPECT(gbc.pc(), 0xd5dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5db), 0xcb);
        EXPECT(gbc.readMem(0xd5dc), 0xeb);
        // CB EB 0248
        gbc.setState(0x1d80, 0x4c71, 0xe080, 0xb8a9, 0xc5eb, 0x1cae, 0x1, 0x0);
        gbc.writeMem(0x1d80, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4c71);
        EXPECT(gbc.pc(), 0x1d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0249
        gbc.setState(0xd8a3, 0xed75, 0x8a20, 0x5c7a, 0x5579, 0x44bf, 0x0, 0x0);
        gbc.writeMem(0xd8a3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xed75);
        EXPECT(gbc.pc(), 0xd8a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8a3), 0xcb);
        EXPECT(gbc.readMem(0xd8a4), 0xeb);
        // CB EB 024A
        gbc.setState(0x1d4f, 0xe5c9, 0x6410, 0xfac7, 0xe438, 0xcaa5, 0x1, 0x0);
        gbc.writeMem(0x1d4f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe5c9);
        EXPECT(gbc.pc(), 0x1d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 024B
        gbc.setState(0x5ba7, 0x3858, 0xd6a0, 0xcea8, 0x5e40, 0x9c, 0x0, 0x1);
        gbc.writeMem(0x5ba7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3858);
        EXPECT(gbc.pc(), 0x5ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 024C
        gbc.setState(0xcfd2, 0xdb75, 0x8120, 0xe102, 0x47a, 0xf6b6, 0x0, 0x1);
        gbc.writeMem(0xcfd2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdb75);
        EXPECT(gbc.pc(), 0xcfd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd2), 0xcb);
        EXPECT(gbc.readMem(0xcfd3), 0xeb);
        // CB EB 024D
        gbc.setState(0xc70a, 0xf8b8, 0x2e50, 0x7040, 0x70b2, 0x975f, 0x1, 0x1);
        gbc.writeMem(0xc70a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf8b8);
        EXPECT(gbc.pc(), 0xc70c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc70a), 0xcb);
        EXPECT(gbc.readMem(0xc70b), 0xeb);
        // CB EB 024E
        gbc.setState(0x8497, 0x27a2, 0xcd40, 0x99bd, 0xa1ab, 0x2120, 0x0, 0x1);
        gbc.writeMem(0x8497, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x27a2);
        EXPECT(gbc.pc(), 0x8499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8497), 0xcb);
        EXPECT(gbc.readMem(0x8498), 0xeb);
        // CB EB 024F
        gbc.setState(0xe6dd, 0xb0ee, 0x6a20, 0x6741, 0xa019, 0x64b9, 0x0, 0x0);
        gbc.writeMem(0xe6dd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb0ee);
        EXPECT(gbc.pc(), 0xe6df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6dd), 0xcb);
        EXPECT(gbc.readMem(0xe6de), 0xeb);
        // CB EB 0250
        gbc.setState(0xd556, 0x62b6, 0xbbb0, 0xe473, 0x3a4a, 0x62ea, 0x0, 0x0);
        gbc.writeMem(0xd556, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x62b6);
        EXPECT(gbc.pc(), 0xd558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd556), 0xcb);
        EXPECT(gbc.readMem(0xd557), 0xeb);
        // CB EB 0251
        gbc.setState(0x61ea, 0x454b, 0xb730, 0xf307, 0x3c99, 0x6871, 0x0, 0x0);
        gbc.writeMem(0x61ea, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x454b);
        EXPECT(gbc.pc(), 0x61ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0252
        gbc.setState(0x74c9, 0xa4c9, 0x2e60, 0xd180, 0xf9a9, 0x315f, 0x0, 0x0);
        gbc.writeMem(0x74c9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa4c9);
        EXPECT(gbc.pc(), 0x74cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0253
        gbc.setState(0x6a61, 0xaa83, 0xdd60, 0xdb48, 0xbb26, 0x1903, 0x0, 0x0);
        gbc.writeMem(0x6a61, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xaa83);
        EXPECT(gbc.pc(), 0x6a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0254
        gbc.setState(0xbede, 0xb2de, 0xb440, 0x80ab, 0x5ddb, 0xa99e, 0x0, 0x1);
        gbc.writeMem(0xbede, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb2de);
        EXPECT(gbc.pc(), 0xbee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbede), 0xcb);
        EXPECT(gbc.readMem(0xbedf), 0xeb);
        // CB EB 0255
        gbc.setState(0x6e3, 0x5622, 0x90e0, 0xafe1, 0x7807, 0x2648, 0x1, 0x1);
        gbc.writeMem(0x6e3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5622);
        EXPECT(gbc.pc(), 0x6e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0256
        gbc.setState(0xb59d, 0x4317, 0xb9d0, 0xcc11, 0x907e, 0xd4b, 0x1, 0x0);
        gbc.writeMem(0xb59d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4317);
        EXPECT(gbc.pc(), 0xb59f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb59d), 0xcb);
        EXPECT(gbc.readMem(0xb59e), 0xeb);
        // CB EB 0257
        gbc.setState(0x4e2f, 0xecc6, 0x33f0, 0x536e, 0x3157, 0x7e59, 0x0, 0x0);
        gbc.writeMem(0x4e2f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xecc6);
        EXPECT(gbc.pc(), 0x4e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0259
        gbc.setState(0x1e69, 0x6b6a, 0x63f0, 0xf850, 0x76d8, 0x726, 0x0, 0x0);
        gbc.writeMem(0x1e69, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6b6a);
        EXPECT(gbc.pc(), 0x1e6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 025A
        gbc.setState(0x34bc, 0xec35, 0xeb90, 0x1a99, 0x8f2, 0x65c0, 0x1, 0x1);
        gbc.writeMem(0x34bc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xec35);
        EXPECT(gbc.pc(), 0x34be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 025B
        gbc.setState(0x49b5, 0x97c7, 0x1630, 0xd297, 0x182b, 0x50d6, 0x0, 0x0);
        gbc.writeMem(0x49b5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x97c7);
        EXPECT(gbc.pc(), 0x49b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 025C
        gbc.setState(0x1573, 0x8d95, 0x97c0, 0x36e5, 0xb39, 0x184b, 0x0, 0x0);
        gbc.writeMem(0x1573, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8d95);
        EXPECT(gbc.pc(), 0x1575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 025D
        gbc.setState(0xef2a, 0x6690, 0xb790, 0x4ae2, 0xb10e, 0xcdba, 0x0, 0x1);
        gbc.writeMem(0xef2a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6690);
        EXPECT(gbc.pc(), 0xef2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2a), 0xcb);
        EXPECT(gbc.readMem(0xef2b), 0xeb);
        // CB EB 025E
        gbc.setState(0xbe69, 0xd272, 0x97a0, 0x89d0, 0xd0c8, 0x33ce, 0x1, 0x0);
        gbc.writeMem(0xbe69, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd272);
        EXPECT(gbc.pc(), 0xbe6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe69), 0xcb);
        EXPECT(gbc.readMem(0xbe6a), 0xeb);
        // CB EB 025F
        gbc.setState(0x872e, 0xd7de, 0xd4f0, 0xdbb7, 0xead9, 0xaa49, 0x0, 0x0);
        gbc.writeMem(0x872e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd7de);
        EXPECT(gbc.pc(), 0x8730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x872e), 0xcb);
        EXPECT(gbc.readMem(0x872f), 0xeb);
        // CB EB 0260
        gbc.setState(0x1001, 0x33bf, 0x18a0, 0x2ee2, 0x50f5, 0x6375, 0x1, 0x1);
        gbc.writeMem(0x1001, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x33bf);
        EXPECT(gbc.pc(), 0x1003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0261
        gbc.setState(0xec5c, 0x97ac, 0x2e90, 0x5787, 0xc636, 0x671c, 0x0, 0x0);
        gbc.writeMem(0xec5c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x97ac);
        EXPECT(gbc.pc(), 0xec5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec5c), 0xcb);
        EXPECT(gbc.readMem(0xec5d), 0xeb);
        // CB EB 0262
        gbc.setState(0x3c2e, 0x2d50, 0x1ce0, 0x5e88, 0xf195, 0x8d7d, 0x1, 0x1);
        gbc.writeMem(0x3c2e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2d50);
        EXPECT(gbc.pc(), 0x3c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0263
        gbc.setState(0xc075, 0x6085, 0xbf20, 0x89c0, 0x8989, 0x906a, 0x1, 0x1);
        gbc.writeMem(0xc075, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6085);
        EXPECT(gbc.pc(), 0xc077);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc075), 0xcb);
        EXPECT(gbc.readMem(0xc076), 0xeb);
        // CB EB 0264
        gbc.setState(0x401, 0x91e3, 0x7f40, 0x5afa, 0xf092, 0x5db7, 0x0, 0x0);
        gbc.writeMem(0x401, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x91e3);
        EXPECT(gbc.pc(), 0x403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0265
        gbc.setState(0xce4a, 0xa1df, 0xb080, 0xe935, 0xdd64, 0xeb43, 0x1, 0x0);
        gbc.writeMem(0xce4a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa1df);
        EXPECT(gbc.pc(), 0xce4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce4a), 0xcb);
        EXPECT(gbc.readMem(0xce4b), 0xeb);
        // CB EB 0267
        gbc.setState(0x6ec5, 0xf13f, 0x9930, 0xd2fb, 0xcca5, 0x8c6, 0x0, 0x1);
        gbc.writeMem(0x6ec5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf13f);
        EXPECT(gbc.pc(), 0x6ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0268
        gbc.setState(0x686f, 0xcf91, 0xb670, 0x6a54, 0x457f, 0x8f66, 0x1, 0x1);
        gbc.writeMem(0x686f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcf91);
        EXPECT(gbc.pc(), 0x6871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0269
        gbc.setState(0x9d5b, 0xe53c, 0xbf50, 0x5334, 0xebe7, 0x45ba, 0x1, 0x0);
        gbc.writeMem(0x9d5b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe53c);
        EXPECT(gbc.pc(), 0x9d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d5b), 0xcb);
        EXPECT(gbc.readMem(0x9d5c), 0xeb);
        // CB EB 026A
        gbc.setState(0x9a8a, 0x5736, 0x150, 0x9cf4, 0x50a2, 0x1d0e, 0x0, 0x0);
        gbc.writeMem(0x9a8a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5736);
        EXPECT(gbc.pc(), 0x9a8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a8a), 0xcb);
        EXPECT(gbc.readMem(0x9a8b), 0xeb);
        // CB EB 026B
        gbc.setState(0xd2ea, 0xfc07, 0x5da0, 0x98ba, 0x6d94, 0x23fa, 0x1, 0x1);
        gbc.writeMem(0xd2ea, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfc07);
        EXPECT(gbc.pc(), 0xd2ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ea), 0xcb);
        EXPECT(gbc.readMem(0xd2eb), 0xeb);
        // CB EB 026C
        gbc.setState(0x1a0e, 0xc1a7, 0x31e0, 0x257d, 0x35c7, 0xb24e, 0x0, 0x1);
        gbc.writeMem(0x1a0e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc1a7);
        EXPECT(gbc.pc(), 0x1a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 026D
        gbc.setState(0x80cd, 0x4bea, 0xec30, 0x28ce, 0xdc0f, 0xe8fe, 0x1, 0x1);
        gbc.writeMem(0x80cd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4bea);
        EXPECT(gbc.pc(), 0x80cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80cd), 0xcb);
        EXPECT(gbc.readMem(0x80ce), 0xeb);
        // CB EB 026E
        gbc.setState(0x26ec, 0x1831, 0x79b0, 0xc99e, 0x2b73, 0x2b16, 0x0, 0x0);
        gbc.writeMem(0x26ec, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1831);
        EXPECT(gbc.pc(), 0x26ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 026F
        gbc.setState(0x6e57, 0x9ae8, 0x7db0, 0xdf02, 0x5343, 0xee12, 0x0, 0x1);
        gbc.writeMem(0x6e57, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9ae8);
        EXPECT(gbc.pc(), 0x6e59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0270
        gbc.setState(0xa07c, 0x90c2, 0x93d0, 0xe118, 0x72dc, 0x63d5, 0x1, 0x0);
        gbc.writeMem(0xa07c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x90c2);
        EXPECT(gbc.pc(), 0xa07e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa07c), 0xcb);
        EXPECT(gbc.readMem(0xa07d), 0xeb);
        // CB EB 0271
        gbc.setState(0x65fc, 0xad0e, 0xb580, 0x8676, 0x4f8b, 0x4eca, 0x0, 0x1);
        gbc.writeMem(0x65fc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xad0e);
        EXPECT(gbc.pc(), 0x65fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0272
        gbc.setState(0xb9f8, 0x1cd7, 0x1fc0, 0xa29c, 0xa0f6, 0x8d, 0x0, 0x0);
        gbc.writeMem(0xb9f8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1cd7);
        EXPECT(gbc.pc(), 0xb9fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f8), 0xcb);
        EXPECT(gbc.readMem(0xb9f9), 0xeb);
        // CB EB 0273
        gbc.setState(0xa4a7, 0x1f37, 0x5df0, 0xc218, 0x2272, 0x8a8b, 0x0, 0x1);
        gbc.writeMem(0xa4a7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1f37);
        EXPECT(gbc.pc(), 0xa4a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a7), 0xcb);
        EXPECT(gbc.readMem(0xa4a8), 0xeb);
        // CB EB 0274
        gbc.setState(0xd0dd, 0x3167, 0x3be0, 0xd842, 0xfa0e, 0xf8cd, 0x1, 0x1);
        gbc.writeMem(0xd0dd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x3167);
        EXPECT(gbc.pc(), 0xd0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0dd), 0xcb);
        EXPECT(gbc.readMem(0xd0de), 0xeb);
        // CB EB 0275
        gbc.setState(0xaa0d, 0xd280, 0x18b0, 0x6537, 0xac5f, 0x54e1, 0x1, 0x1);
        gbc.writeMem(0xaa0d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd280);
        EXPECT(gbc.pc(), 0xaa0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa0d), 0xcb);
        EXPECT(gbc.readMem(0xaa0e), 0xeb);
        // CB EB 0276
        gbc.setState(0x6305, 0xb2dd, 0xfb50, 0xc646, 0x3bb5, 0xe7c1, 0x1, 0x1);
        gbc.writeMem(0x6305, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb2dd);
        EXPECT(gbc.pc(), 0x6307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0277
        gbc.setState(0xb91e, 0xfb8e, 0xa4f0, 0xde86, 0xfe3b, 0x869b, 0x0, 0x0);
        gbc.writeMem(0xb91e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xfb8e);
        EXPECT(gbc.pc(), 0xb920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb91e), 0xcb);
        EXPECT(gbc.readMem(0xb91f), 0xeb);
        // CB EB 0278
        gbc.setState(0xec4d, 0xee29, 0x7db0, 0xf4c3, 0x1e79, 0x96f7, 0x0, 0x0);
        gbc.writeMem(0xec4d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xee29);
        EXPECT(gbc.pc(), 0xec4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec4d), 0xcb);
        EXPECT(gbc.readMem(0xec4e), 0xeb);
        // CB EB 0279
        gbc.setState(0x1b1c, 0x6499, 0x3bd0, 0x1b57, 0x69db, 0x9f95, 0x1, 0x1);
        gbc.writeMem(0x1b1c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6499);
        EXPECT(gbc.pc(), 0x1b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 027A
        gbc.setState(0x164a, 0x57f1, 0x9f10, 0x9dc, 0x7fe8, 0xdbe9, 0x1, 0x0);
        gbc.writeMem(0x164a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x57f1);
        EXPECT(gbc.pc(), 0x164c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 027B
        gbc.setState(0xb5f8, 0x68dc, 0x8190, 0x47a3, 0x8918, 0x1f94, 0x0, 0x1);
        gbc.writeMem(0xb5f8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x68dc);
        EXPECT(gbc.pc(), 0xb5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f8), 0xcb);
        EXPECT(gbc.readMem(0xb5f9), 0xeb);
        // CB EB 027C
        gbc.setState(0xa5d8, 0x8ddc, 0x4550, 0x1608, 0x8012, 0x40e6, 0x1, 0x1);
        gbc.writeMem(0xa5d8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8ddc);
        EXPECT(gbc.pc(), 0xa5da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d8), 0xcb);
        EXPECT(gbc.readMem(0xa5d9), 0xeb);
        // CB EB 027D
        gbc.setState(0xd4c5, 0x1026, 0xc970, 0x283e, 0x2dc6, 0xfe57, 0x1, 0x0);
        gbc.writeMem(0xd4c5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1026);
        EXPECT(gbc.pc(), 0xd4c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4c5), 0xcb);
        EXPECT(gbc.readMem(0xd4c6), 0xeb);
        // CB EB 027E
        gbc.setState(0x70a6, 0x3e82, 0x8b60, 0x64f2, 0x7f8a, 0x2d5f, 0x1, 0x1);
        gbc.writeMem(0x70a6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3e82);
        EXPECT(gbc.pc(), 0x70a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 027F
        gbc.setState(0xb306, 0x6ca6, 0x2620, 0x79af, 0x4add, 0xc48d, 0x1, 0x1);
        gbc.writeMem(0xb306, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6ca6);
        EXPECT(gbc.pc(), 0xb308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb306), 0xcb);
        EXPECT(gbc.readMem(0xb307), 0xeb);
        // CB EB 0280
        gbc.setState(0x28f8, 0x84b5, 0x93b0, 0xf86c, 0xd28b, 0x2c33, 0x0, 0x1);
        gbc.writeMem(0x28f8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x84b5);
        EXPECT(gbc.pc(), 0x28fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0281
        gbc.setState(0xb6b4, 0xc99d, 0x5ec0, 0x123f, 0x5723, 0xd554, 0x1, 0x0);
        gbc.writeMem(0xb6b4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc99d);
        EXPECT(gbc.pc(), 0xb6b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6b4), 0xcb);
        EXPECT(gbc.readMem(0xb6b5), 0xeb);
        // CB EB 0282
        gbc.setState(0x6754, 0x815f, 0x5340, 0x6697, 0x659f, 0x2da9, 0x0, 0x0);
        gbc.writeMem(0x6754, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x815f);
        EXPECT(gbc.pc(), 0x6756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0284
        gbc.setState(0xeab2, 0x35b0, 0xcdb0, 0x5539, 0x6449, 0xc6ff, 0x1, 0x0);
        gbc.writeMem(0xeab2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x35b0);
        EXPECT(gbc.pc(), 0xeab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab2), 0xcb);
        EXPECT(gbc.readMem(0xeab3), 0xeb);
        // CB EB 0285
        gbc.setState(0x75e1, 0xb0b8, 0xf40, 0x88c8, 0x179e, 0xc15e, 0x0, 0x1);
        gbc.writeMem(0x75e1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb0b8);
        EXPECT(gbc.pc(), 0x75e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0286
        gbc.setState(0xba8d, 0xe64a, 0xca10, 0x1209, 0x83b9, 0x8f16, 0x1, 0x1);
        gbc.writeMem(0xba8d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe64a);
        EXPECT(gbc.pc(), 0xba8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba8d), 0xcb);
        EXPECT(gbc.readMem(0xba8e), 0xeb);
        // CB EB 0287
        gbc.setState(0x1e20, 0xcdd6, 0xaae0, 0x330a, 0x8ce8, 0x14f1, 0x0, 0x0);
        gbc.writeMem(0x1e20, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcdd6);
        EXPECT(gbc.pc(), 0x1e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0288
        gbc.setState(0x705f, 0x411f, 0xcc60, 0x991a, 0xe718, 0x7b18, 0x0, 0x0);
        gbc.writeMem(0x705f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x411f);
        EXPECT(gbc.pc(), 0x7061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0289
        gbc.setState(0x8dc6, 0xa0c, 0x3e60, 0xc8d3, 0x8f09, 0x8785, 0x1, 0x0);
        gbc.writeMem(0x8dc6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa0c);
        EXPECT(gbc.pc(), 0x8dc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc6), 0xcb);
        EXPECT(gbc.readMem(0x8dc7), 0xeb);
        // CB EB 028A
        gbc.setState(0x369, 0x6167, 0x5070, 0x1e12, 0x388f, 0xc306, 0x0, 0x1);
        gbc.writeMem(0x369, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6167);
        EXPECT(gbc.pc(), 0x36b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 028B
        gbc.setState(0xe5a4, 0x6e31, 0xaeb0, 0x2bc7, 0xa173, 0x1582, 0x1, 0x1);
        gbc.writeMem(0xe5a4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6e31);
        EXPECT(gbc.pc(), 0xe5a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a4), 0xcb);
        EXPECT(gbc.readMem(0xe5a5), 0xeb);
        // CB EB 028C
        gbc.setState(0xe710, 0x9e0b, 0x1120, 0xc6ea, 0x6516, 0x64f3, 0x1, 0x1);
        gbc.writeMem(0xe710, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9e0b);
        EXPECT(gbc.pc(), 0xe712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe710), 0xcb);
        EXPECT(gbc.readMem(0xe711), 0xeb);
        // CB EB 028D
        gbc.setState(0xdb40, 0xa9c5, 0x10b0, 0x5a9, 0x9b06, 0x588a, 0x0, 0x0);
        gbc.writeMem(0xdb40, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa9c5);
        EXPECT(gbc.pc(), 0xdb42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb40), 0xcb);
        EXPECT(gbc.readMem(0xdb41), 0xeb);
        // CB EB 028E
        gbc.setState(0xbd39, 0xa67a, 0xfd70, 0x8887, 0x14a, 0x6b63, 0x0, 0x0);
        gbc.writeMem(0xbd39, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa67a);
        EXPECT(gbc.pc(), 0xbd3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd39), 0xcb);
        EXPECT(gbc.readMem(0xbd3a), 0xeb);
        // CB EB 028F
        gbc.setState(0x935b, 0x84e9, 0x94f0, 0x958c, 0xfe2d, 0x844d, 0x1, 0x0);
        gbc.writeMem(0x935b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x84e9);
        EXPECT(gbc.pc(), 0x935d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x935b), 0xcb);
        EXPECT(gbc.readMem(0x935c), 0xeb);
        // CB EB 0290
        gbc.setState(0xe1e7, 0x555, 0x24a0, 0x2533, 0xf7a7, 0xb671, 0x0, 0x0);
        gbc.writeMem(0xe1e7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x555);
        EXPECT(gbc.pc(), 0xe1e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e7), 0xcb);
        EXPECT(gbc.readMem(0xe1e8), 0xeb);
        // CB EB 0291
        gbc.setState(0x1a62, 0x248, 0xecc0, 0x86a2, 0x6413, 0x7aec, 0x0, 0x0);
        gbc.writeMem(0x1a62, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x248);
        EXPECT(gbc.pc(), 0x1a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0292
        gbc.setState(0xed83, 0x6c9a, 0x9530, 0x98d8, 0xf33d, 0x24a6, 0x0, 0x0);
        gbc.writeMem(0xed83, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6c9a);
        EXPECT(gbc.pc(), 0xed85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed83), 0xcb);
        EXPECT(gbc.readMem(0xed84), 0xeb);
        // CB EB 0293
        gbc.setState(0x1c3c, 0xdfd2, 0xd850, 0x6d57, 0x6877, 0xf270, 0x0, 0x0);
        gbc.writeMem(0x1c3c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdfd2);
        EXPECT(gbc.pc(), 0x1c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0294
        gbc.setState(0xa7ea, 0xde78, 0x1e20, 0x54ff, 0x22e4, 0xc70, 0x0, 0x0);
        gbc.writeMem(0xa7ea, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xde78);
        EXPECT(gbc.pc(), 0xa7ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ea), 0xcb);
        EXPECT(gbc.readMem(0xa7eb), 0xeb);
        // CB EB 0295
        gbc.setState(0x136f, 0x2507, 0xffc0, 0xfdc6, 0xdd45, 0x8655, 0x1, 0x1);
        gbc.writeMem(0x136f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2507);
        EXPECT(gbc.pc(), 0x1371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0296
        gbc.setState(0x7619, 0xc498, 0x1a80, 0x216, 0x446c, 0xf270, 0x1, 0x1);
        gbc.writeMem(0x7619, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc498);
        EXPECT(gbc.pc(), 0x761b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0297
        gbc.setState(0x731d, 0x4cbb, 0x50c0, 0xc89c, 0x9416, 0x3634, 0x1, 0x1);
        gbc.writeMem(0x731d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4cbb);
        EXPECT(gbc.pc(), 0x731f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0298
        gbc.setState(0x40ac, 0xbe8b, 0xb170, 0xe78, 0x7a99, 0x4730, 0x1, 0x0);
        gbc.writeMem(0x40ac, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xbe8b);
        EXPECT(gbc.pc(), 0x40ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0299
        gbc.setState(0x7f4e, 0xd82b, 0x8eb0, 0x13f9, 0x1bf1, 0x67b5, 0x0, 0x0);
        gbc.writeMem(0x7f4e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd82b);
        EXPECT(gbc.pc(), 0x7f50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 029A
        gbc.setState(0xde7a, 0x4b01, 0xa030, 0x2860, 0xe2e0, 0x2776, 0x1, 0x1);
        gbc.writeMem(0xde7a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4b01);
        EXPECT(gbc.pc(), 0xde7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7a), 0xcb);
        EXPECT(gbc.readMem(0xde7b), 0xeb);
        // CB EB 029B
        gbc.setState(0x2392, 0x236, 0xed90, 0xe13e, 0x4488, 0x6f0d, 0x1, 0x0);
        gbc.writeMem(0x2392, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x236);
        EXPECT(gbc.pc(), 0x2394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 029C
        gbc.setState(0xef42, 0xc04c, 0x1ac0, 0x4b39, 0xc615, 0x7cb8, 0x1, 0x0);
        gbc.writeMem(0xef42, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc04c);
        EXPECT(gbc.pc(), 0xef44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef42), 0xcb);
        EXPECT(gbc.readMem(0xef43), 0xeb);
        // CB EB 029D
        gbc.setState(0xcdbf, 0x7893, 0x2e90, 0xfdbe, 0xdfc9, 0x2810, 0x0, 0x1);
        gbc.writeMem(0xcdbf, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7893);
        EXPECT(gbc.pc(), 0xcdc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdbf), 0xcb);
        EXPECT(gbc.readMem(0xcdc0), 0xeb);
        // CB EB 029E
        gbc.setState(0x6d6a, 0xd22c, 0x1c10, 0xddc2, 0x87bf, 0x51e9, 0x1, 0x1);
        gbc.writeMem(0x6d6a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd22c);
        EXPECT(gbc.pc(), 0x6d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 029F
        gbc.setState(0x6f00, 0xcfb2, 0xa190, 0x7805, 0x84f, 0x2fcd, 0x1, 0x1);
        gbc.writeMem(0x6f00, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xcfb2);
        EXPECT(gbc.pc(), 0x6f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02A0
        gbc.setState(0xe0e, 0xcab4, 0x87c0, 0x7e9e, 0xaed0, 0xf1e0, 0x0, 0x0);
        gbc.writeMem(0xe0e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcab4);
        EXPECT(gbc.pc(), 0xe10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02A2
        gbc.setState(0x70a0, 0xb3e2, 0x1db0, 0x681b, 0x5ffa, 0x7ba, 0x0, 0x0);
        gbc.writeMem(0x70a0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb3e2);
        EXPECT(gbc.pc(), 0x70a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02A3
        gbc.setState(0x9573, 0x6ed7, 0xe480, 0xeb57, 0x4270, 0xb486, 0x1, 0x0);
        gbc.writeMem(0x9573, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6ed7);
        EXPECT(gbc.pc(), 0x9575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9573), 0xcb);
        EXPECT(gbc.readMem(0x9574), 0xeb);
        // CB EB 02A4
        gbc.setState(0x8976, 0x1bc1, 0x8fa0, 0x53c8, 0xf66b, 0xf10b, 0x0, 0x1);
        gbc.writeMem(0x8976, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1bc1);
        EXPECT(gbc.pc(), 0x8978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8976), 0xcb);
        EXPECT(gbc.readMem(0x8977), 0xeb);
        // CB EB 02A5
        gbc.setState(0x3482, 0xc9c7, 0xdb10, 0x84b7, 0x9742, 0x1870, 0x1, 0x0);
        gbc.writeMem(0x3482, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc9c7);
        EXPECT(gbc.pc(), 0x3484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02A7
        gbc.setState(0xc8d2, 0x2713, 0x7360, 0x32e9, 0x5961, 0x1209, 0x0, 0x0);
        gbc.writeMem(0xc8d2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2713);
        EXPECT(gbc.pc(), 0xc8d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d2), 0xcb);
        EXPECT(gbc.readMem(0xc8d3), 0xeb);
        // CB EB 02A8
        gbc.setState(0x1f2, 0xd31, 0x7c80, 0xa9f0, 0xaa17, 0xad4, 0x1, 0x0);
        gbc.writeMem(0x1f2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd31);
        EXPECT(gbc.pc(), 0x1f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02A9
        gbc.setState(0x27fa, 0xf38e, 0xcf10, 0xc774, 0xf51f, 0xb557, 0x0, 0x0);
        gbc.writeMem(0x27fa, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf38e);
        EXPECT(gbc.pc(), 0x27fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02AA
        gbc.setState(0x207e, 0x959, 0xd480, 0xb594, 0xc8f6, 0x3653, 0x1, 0x0);
        gbc.writeMem(0x207e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x959);
        EXPECT(gbc.pc(), 0x2080);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02AB
        gbc.setState(0x92d9, 0xf72a, 0xed50, 0x3686, 0x188e, 0xb824, 0x0, 0x1);
        gbc.writeMem(0x92d9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf72a);
        EXPECT(gbc.pc(), 0x92db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d9), 0xcb);
        EXPECT(gbc.readMem(0x92da), 0xeb);
        // CB EB 02AC
        gbc.setState(0x6d4b, 0x6b40, 0xf9e0, 0xdf86, 0xf7a0, 0xe3a0, 0x1, 0x0);
        gbc.writeMem(0x6d4b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6b40);
        EXPECT(gbc.pc(), 0x6d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02AD
        gbc.setState(0x66bd, 0x9286, 0xef30, 0x822b, 0xb412, 0xc555, 0x1, 0x0);
        gbc.writeMem(0x66bd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9286);
        EXPECT(gbc.pc(), 0x66bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02AE
        gbc.setState(0xe26a, 0xa2ae, 0xcba0, 0xae1, 0x89a3, 0x39eb, 0x0, 0x0);
        gbc.writeMem(0xe26a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa2ae);
        EXPECT(gbc.pc(), 0xe26c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26a), 0xcb);
        EXPECT(gbc.readMem(0xe26b), 0xeb);
        // CB EB 02AF
        gbc.setState(0x96a3, 0x7744, 0x85f0, 0x59aa, 0x2ca1, 0x1756, 0x0, 0x1);
        gbc.writeMem(0x96a3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7744);
        EXPECT(gbc.pc(), 0x96a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a3), 0xcb);
        EXPECT(gbc.readMem(0x96a4), 0xeb);
        // CB EB 02B0
        gbc.setState(0x7cb4, 0xaabe, 0x90d0, 0x177c, 0xbf2, 0xca2, 0x1, 0x1);
        gbc.writeMem(0x7cb4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xaabe);
        EXPECT(gbc.pc(), 0x7cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02B1
        gbc.setState(0xdf7d, 0xf0c0, 0x9c40, 0x9906, 0x59d5, 0xef71, 0x1, 0x1);
        gbc.writeMem(0xdf7d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf0c0);
        EXPECT(gbc.pc(), 0xdf7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf7d), 0xcb);
        EXPECT(gbc.readMem(0xdf7e), 0xeb);
        // CB EB 02B2
        gbc.setState(0x795f, 0x7153, 0x6850, 0xd266, 0x324b, 0xe381, 0x0, 0x0);
        gbc.writeMem(0x795f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7153);
        EXPECT(gbc.pc(), 0x7961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02B3
        gbc.setState(0x77de, 0xdcaa, 0x27a0, 0x617c, 0xeffd, 0xa66d, 0x0, 0x1);
        gbc.writeMem(0x77de, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xdcaa);
        EXPECT(gbc.pc(), 0x77e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02B4
        gbc.setState(0x7eb8, 0x7a68, 0xc4f0, 0x4aed, 0xa5b7, 0x55e1, 0x1, 0x1);
        gbc.writeMem(0x7eb8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7a68);
        EXPECT(gbc.pc(), 0x7eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02B6
        gbc.setState(0xccd8, 0x9023, 0x6d80, 0x8b70, 0x1f4b, 0x87bb, 0x1, 0x0);
        gbc.writeMem(0xccd8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9023);
        EXPECT(gbc.pc(), 0xccda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd8), 0xcb);
        EXPECT(gbc.readMem(0xccd9), 0xeb);
        // CB EB 02B7
        gbc.setState(0x5002, 0x5a9d, 0xb3a0, 0xab17, 0xc24e, 0x5ba, 0x0, 0x0);
        gbc.writeMem(0x5002, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5a9d);
        EXPECT(gbc.pc(), 0x5004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02B8
        gbc.setState(0x4ffa, 0xfcf4, 0xb1f0, 0xbb1, 0xb48d, 0xb54f, 0x0, 0x1);
        gbc.writeMem(0x4ffa, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xfcf4);
        EXPECT(gbc.pc(), 0x4ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02B9
        gbc.setState(0xc5de, 0x8a4, 0xe760, 0x49b, 0x37ae, 0x8b26, 0x1, 0x1);
        gbc.writeMem(0xc5de, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8a4);
        EXPECT(gbc.pc(), 0xc5e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5de), 0xcb);
        EXPECT(gbc.readMem(0xc5df), 0xeb);
        // CB EB 02BA
        gbc.setState(0xb253, 0x6e38, 0x10e0, 0xeec4, 0xac6a, 0x64ef, 0x0, 0x1);
        gbc.writeMem(0xb253, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6e38);
        EXPECT(gbc.pc(), 0xb255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb253), 0xcb);
        EXPECT(gbc.readMem(0xb254), 0xeb);
        // CB EB 02BB
        gbc.setState(0x8ebb, 0x2887, 0x6cc0, 0x13ce, 0x22b6, 0x8c9e, 0x1, 0x0);
        gbc.writeMem(0x8ebb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2887);
        EXPECT(gbc.pc(), 0x8ebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebb), 0xcb);
        EXPECT(gbc.readMem(0x8ebc), 0xeb);
        // CB EB 02BC
        gbc.setState(0x242b, 0x8f95, 0xd9e0, 0x11d9, 0x2e27, 0x9c79, 0x0, 0x0);
        gbc.writeMem(0x242b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8f95);
        EXPECT(gbc.pc(), 0x242d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02BD
        gbc.setState(0x93eb, 0x5bda, 0x52e0, 0xe885, 0xa85e, 0x92b4, 0x1, 0x0);
        gbc.writeMem(0x93eb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5bda);
        EXPECT(gbc.pc(), 0x93ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93eb), 0xcb);
        EXPECT(gbc.readMem(0x93ec), 0xeb);
        // CB EB 02BE
        gbc.setState(0x2762, 0xe022, 0xd350, 0xe895, 0x62a1, 0x9b0, 0x0, 0x0);
        gbc.writeMem(0x2762, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe022);
        EXPECT(gbc.pc(), 0x2764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02BF
        gbc.setState(0x45c5, 0x7127, 0x4160, 0x5ac2, 0x70f0, 0x3694, 0x0, 0x1);
        gbc.writeMem(0x45c5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7127);
        EXPECT(gbc.pc(), 0x45c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02C0
        gbc.setState(0x1fe5, 0xff6a, 0xebf0, 0x1ff4, 0x97d3, 0xa779, 0x1, 0x1);
        gbc.writeMem(0x1fe5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xff6a);
        EXPECT(gbc.pc(), 0x1fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02C1
        gbc.setState(0x7245, 0xc71a, 0xf7a0, 0xea46, 0x2dd1, 0x990d, 0x0, 0x0);
        gbc.writeMem(0x7245, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc71a);
        EXPECT(gbc.pc(), 0x7247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02C2
        gbc.setState(0x19ec, 0xbc04, 0x83d0, 0xc06d, 0xdd7a, 0x58ac, 0x1, 0x0);
        gbc.writeMem(0x19ec, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbc04);
        EXPECT(gbc.pc(), 0x19ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02C5
        gbc.setState(0x1fb2, 0x9f81, 0x8e80, 0xedc9, 0x4fd0, 0xdcc0, 0x1, 0x1);
        gbc.writeMem(0x1fb2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9f81);
        EXPECT(gbc.pc(), 0x1fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02C7
        gbc.setState(0xbaae, 0x727a, 0x4e40, 0x7e3c, 0x75a8, 0x6cfe, 0x1, 0x1);
        gbc.writeMem(0xbaae, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x727a);
        EXPECT(gbc.pc(), 0xbab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaae), 0xcb);
        EXPECT(gbc.readMem(0xbaaf), 0xeb);
        // CB EB 02C8
        gbc.setState(0xe9b2, 0x4f19, 0xd010, 0x3d27, 0xe64d, 0x1e6e, 0x1, 0x0);
        gbc.writeMem(0xe9b2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4f19);
        EXPECT(gbc.pc(), 0xe9b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b2), 0xcb);
        EXPECT(gbc.readMem(0xe9b3), 0xeb);
        // CB EB 02C9
        gbc.setState(0xaac0, 0xb807, 0xf2c0, 0x4808, 0xe864, 0x8e83, 0x0, 0x0);
        gbc.writeMem(0xaac0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb807);
        EXPECT(gbc.pc(), 0xaac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac0), 0xcb);
        EXPECT(gbc.readMem(0xaac1), 0xeb);
        // CB EB 02CA
        gbc.setState(0xe8be, 0x4226, 0xe760, 0xadf, 0x540e, 0xd282, 0x0, 0x1);
        gbc.writeMem(0xe8be, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4226);
        EXPECT(gbc.pc(), 0xe8c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8be), 0xcb);
        EXPECT(gbc.readMem(0xe8bf), 0xeb);
        // CB EB 02CB
        gbc.setState(0xb5b5, 0x7d76, 0x7420, 0x2164, 0x2a58, 0x87a7, 0x0, 0x1);
        gbc.writeMem(0xb5b5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7d76);
        EXPECT(gbc.pc(), 0xb5b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b5), 0xcb);
        EXPECT(gbc.readMem(0xb5b6), 0xeb);
        // CB EB 02CC
        gbc.setState(0x782d, 0xb3a6, 0xf930, 0xdfa6, 0xcda7, 0x2e4f, 0x0, 0x1);
        gbc.writeMem(0x782d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb3a6);
        EXPECT(gbc.pc(), 0x782f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02CD
        gbc.setState(0xc835, 0x68a2, 0x7430, 0x4ecf, 0xa1ba, 0x3b68, 0x0, 0x1);
        gbc.writeMem(0xc835, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x68a2);
        EXPECT(gbc.pc(), 0xc837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc835), 0xcb);
        EXPECT(gbc.readMem(0xc836), 0xeb);
        // CB EB 02CE
        gbc.setState(0x7fbb, 0x4c67, 0x10d0, 0x3d8f, 0xafb3, 0x55b5, 0x0, 0x1);
        gbc.writeMem(0x7fbb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4c67);
        EXPECT(gbc.pc(), 0x7fbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02CF
        gbc.setState(0xa63e, 0xb266, 0x1a30, 0x8b66, 0xadf2, 0x5982, 0x0, 0x0);
        gbc.writeMem(0xa63e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb266);
        EXPECT(gbc.pc(), 0xa640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63e), 0xcb);
        EXPECT(gbc.readMem(0xa63f), 0xeb);
        // CB EB 02D0
        gbc.setState(0x2562, 0xd83f, 0x7e50, 0xed1a, 0xd8e6, 0x87da, 0x0, 0x0);
        gbc.writeMem(0x2562, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd83f);
        EXPECT(gbc.pc(), 0x2564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02D1
        gbc.setState(0xae91, 0x5ba2, 0xb760, 0xe88d, 0x7a9a, 0x9cd6, 0x1, 0x0);
        gbc.writeMem(0xae91, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5ba2);
        EXPECT(gbc.pc(), 0xae93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae91), 0xcb);
        EXPECT(gbc.readMem(0xae92), 0xeb);
        // CB EB 02D2
        gbc.setState(0xa593, 0x8cb6, 0x5e70, 0x697e, 0xdf61, 0xc368, 0x0, 0x0);
        gbc.writeMem(0xa593, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8cb6);
        EXPECT(gbc.pc(), 0xa595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa593), 0xcb);
        EXPECT(gbc.readMem(0xa594), 0xeb);
        // CB EB 02D3
        gbc.setState(0xe2c6, 0xab73, 0x11a0, 0x284, 0xdf7a, 0xaa6, 0x0, 0x0);
        gbc.writeMem(0xe2c6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xab73);
        EXPECT(gbc.pc(), 0xe2c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c6), 0xcb);
        EXPECT(gbc.readMem(0xe2c7), 0xeb);
        // CB EB 02D4
        gbc.setState(0x90a4, 0xb3cc, 0x7250, 0x32b1, 0x2f15, 0x79b7, 0x0, 0x0);
        gbc.writeMem(0x90a4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb3cc);
        EXPECT(gbc.pc(), 0x90a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90a4), 0xcb);
        EXPECT(gbc.readMem(0x90a5), 0xeb);
        // CB EB 02D5
        gbc.setState(0x369a, 0xfb72, 0xf320, 0x23a5, 0x37a, 0xc56b, 0x1, 0x0);
        gbc.writeMem(0x369a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xfb72);
        EXPECT(gbc.pc(), 0x369c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02D6
        gbc.setState(0x1a42, 0x20ed, 0xdeb0, 0x8b93, 0x53e2, 0x8cd0, 0x1, 0x1);
        gbc.writeMem(0x1a42, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x20ed);
        EXPECT(gbc.pc(), 0x1a44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02D7
        gbc.setState(0xc290, 0xa8cd, 0x41a0, 0x4eab, 0xc57a, 0x6181, 0x0, 0x1);
        gbc.writeMem(0xc290, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa8cd);
        EXPECT(gbc.pc(), 0xc292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc290), 0xcb);
        EXPECT(gbc.readMem(0xc291), 0xeb);
        // CB EB 02D8
        gbc.setState(0x7d, 0xe862, 0xb40, 0x8739, 0x2746, 0xa7ae, 0x0, 0x0);
        gbc.writeMem(0x7d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe862);
        EXPECT(gbc.pc(), 0x7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02D9
        gbc.setState(0xaf91, 0x909f, 0xbce0, 0xa186, 0x66f8, 0x1131, 0x0, 0x0);
        gbc.writeMem(0xaf91, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x909f);
        EXPECT(gbc.pc(), 0xaf93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf91), 0xcb);
        EXPECT(gbc.readMem(0xaf92), 0xeb);
        // CB EB 02DA
        gbc.setState(0x40a3, 0xb4e9, 0xb6d0, 0xe90d, 0x8782, 0x580d, 0x1, 0x1);
        gbc.writeMem(0x40a3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb4e9);
        EXPECT(gbc.pc(), 0x40a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02DB
        gbc.setState(0x674c, 0x97c7, 0x7720, 0x1f7b, 0x1880, 0x8314, 0x0, 0x0);
        gbc.writeMem(0x674c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x97c7);
        EXPECT(gbc.pc(), 0x674e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02DC
        gbc.setState(0xc11d, 0x28dd, 0x9730, 0xef0a, 0x6bcf, 0x77aa, 0x1, 0x1);
        gbc.writeMem(0xc11d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x28dd);
        EXPECT(gbc.pc(), 0xc11f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc11d), 0xcb);
        EXPECT(gbc.readMem(0xc11e), 0xeb);
        // CB EB 02DD
        gbc.setState(0x4ff0, 0xb495, 0x7f10, 0xb2c0, 0x6dc9, 0x7bb8, 0x1, 0x1);
        gbc.writeMem(0x4ff0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb495);
        EXPECT(gbc.pc(), 0x4ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02DE
        gbc.setState(0xd6e0, 0x5b36, 0x80, 0x7f8a, 0x942c, 0xf3ec, 0x0, 0x1);
        gbc.writeMem(0xd6e0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5b36);
        EXPECT(gbc.pc(), 0xd6e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e0), 0xcb);
        EXPECT(gbc.readMem(0xd6e1), 0xeb);
        // CB EB 02DF
        gbc.setState(0x2931, 0xd2c7, 0x7e00, 0x9383, 0xe174, 0xa52d, 0x0, 0x0);
        gbc.writeMem(0x2931, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd2c7);
        EXPECT(gbc.pc(), 0x2933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02E0
        gbc.setState(0x802e, 0x892f, 0x2220, 0x9eca, 0x6b67, 0xb172, 0x1, 0x0);
        gbc.writeMem(0x802e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x892f);
        EXPECT(gbc.pc(), 0x8030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802e), 0xcb);
        EXPECT(gbc.readMem(0x802f), 0xeb);
        // CB EB 02E2
        gbc.setState(0x401f, 0xbf32, 0x5a40, 0x1efd, 0xaca8, 0x1c8c, 0x0, 0x1);
        gbc.writeMem(0x401f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbf32);
        EXPECT(gbc.pc(), 0x4021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02E3
        gbc.setState(0xfd4, 0xf84c, 0x9150, 0x4968, 0xc433, 0x20a2, 0x1, 0x1);
        gbc.writeMem(0xfd4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf84c);
        EXPECT(gbc.pc(), 0xfd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02E4
        gbc.setState(0x8c1, 0x7dc9, 0x5ed0, 0x698f, 0x8ca9, 0x5f9, 0x0, 0x1);
        gbc.writeMem(0x8c1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7dc9);
        EXPECT(gbc.pc(), 0x8c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02E5
        gbc.setState(0x231d, 0xf122, 0xbb0, 0xa9d6, 0xf741, 0x38e8, 0x0, 0x0);
        gbc.writeMem(0x231d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xf122);
        EXPECT(gbc.pc(), 0x231f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02E6
        gbc.setState(0xd061, 0xb03, 0x12f0, 0xc952, 0x260a, 0x8a3f, 0x1, 0x1);
        gbc.writeMem(0xd061, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb03);
        EXPECT(gbc.pc(), 0xd063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd061), 0xcb);
        EXPECT(gbc.readMem(0xd062), 0xeb);
        // CB EB 02E7
        gbc.setState(0x46eb, 0x9163, 0x3970, 0x1f96, 0x3e35, 0xc2b9, 0x1, 0x0);
        gbc.writeMem(0x46eb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9163);
        EXPECT(gbc.pc(), 0x46ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02E8
        gbc.setState(0x4c8b, 0xa7ca, 0x95e0, 0xab04, 0xc38, 0xc4ff, 0x0, 0x0);
        gbc.writeMem(0x4c8b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa7ca);
        EXPECT(gbc.pc(), 0x4c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02E9
        gbc.setState(0xf6b, 0xb4f4, 0x6cd0, 0x9aab, 0x7495, 0x98e4, 0x0, 0x0);
        gbc.writeMem(0xf6b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb4f4);
        EXPECT(gbc.pc(), 0xf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02EA
        gbc.setState(0x893b, 0x4934, 0xf9d0, 0x89b6, 0x5d76, 0x1620, 0x1, 0x1);
        gbc.writeMem(0x893b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4934);
        EXPECT(gbc.pc(), 0x893d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x893b), 0xcb);
        EXPECT(gbc.readMem(0x893c), 0xeb);
        // CB EB 02EB
        gbc.setState(0x6c16, 0x21ea, 0x5de0, 0x64e, 0x9fe2, 0xcead, 0x0, 0x1);
        gbc.writeMem(0x6c16, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x21ea);
        EXPECT(gbc.pc(), 0x6c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02ED
        gbc.setState(0x46ce, 0x598a, 0xc0, 0xa9d3, 0x5dea, 0x6a4e, 0x0, 0x1);
        gbc.writeMem(0x46ce, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x598a);
        EXPECT(gbc.pc(), 0x46d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02EE
        gbc.setState(0xec38, 0xc2c7, 0xfbd0, 0x3411, 0xaa6b, 0x113b, 0x0, 0x0);
        gbc.writeMem(0xec38, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc2c7);
        EXPECT(gbc.pc(), 0xec3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec38), 0xcb);
        EXPECT(gbc.readMem(0xec39), 0xeb);
        // CB EB 02EF
        gbc.setState(0x5bdf, 0xb15b, 0x230, 0x8300, 0xdf1, 0x470d, 0x1, 0x0);
        gbc.writeMem(0x5bdf, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb15b);
        EXPECT(gbc.pc(), 0x5be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02F0
        gbc.setState(0xb89e, 0x74a5, 0xfd30, 0x2bda, 0xdf5a, 0x71ce, 0x0, 0x0);
        gbc.writeMem(0xb89e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x74a5);
        EXPECT(gbc.pc(), 0xb8a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89e), 0xcb);
        EXPECT(gbc.readMem(0xb89f), 0xeb);
        // CB EB 02F1
        gbc.setState(0x743, 0xf7de, 0xa070, 0x42bf, 0xca80, 0x1bb3, 0x1, 0x0);
        gbc.writeMem(0x743, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf7de);
        EXPECT(gbc.pc(), 0x745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02F2
        gbc.setState(0xa3b1, 0xbc09, 0x4330, 0x3e7e, 0x144, 0x7293, 0x0, 0x0);
        gbc.writeMem(0xa3b1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbc09);
        EXPECT(gbc.pc(), 0xa3b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b1), 0xcb);
        EXPECT(gbc.readMem(0xa3b2), 0xeb);
        // CB EB 02F3
        gbc.setState(0x1579, 0xfb7c, 0xe530, 0xdd71, 0x2c38, 0x3ec0, 0x0, 0x1);
        gbc.writeMem(0x1579, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfb7c);
        EXPECT(gbc.pc(), 0x157b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02F4
        gbc.setState(0x1b09, 0xe690, 0xa600, 0xab89, 0xc518, 0x8684, 0x1, 0x0);
        gbc.writeMem(0x1b09, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe690);
        EXPECT(gbc.pc(), 0x1b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02F5
        gbc.setState(0x99d4, 0xa7a8, 0xb810, 0xff07, 0x6f84, 0x92c7, 0x0, 0x0);
        gbc.writeMem(0x99d4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa7a8);
        EXPECT(gbc.pc(), 0x99d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d4), 0xcb);
        EXPECT(gbc.readMem(0x99d5), 0xeb);
        // CB EB 02F6
        gbc.setState(0xa1e2, 0xe810, 0xfe80, 0x8611, 0xd907, 0x1ed6, 0x1, 0x0);
        gbc.writeMem(0xa1e2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe810);
        EXPECT(gbc.pc(), 0xa1e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e2), 0xcb);
        EXPECT(gbc.readMem(0xa1e3), 0xeb);
        // CB EB 02F7
        gbc.setState(0x34d8, 0xf941, 0xe2e0, 0x7d1d, 0xa803, 0x5b7b, 0x0, 0x1);
        gbc.writeMem(0x34d8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf941);
        EXPECT(gbc.pc(), 0x34da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02F8
        gbc.setState(0xd7f8, 0x6496, 0x8840, 0x623a, 0x9f6c, 0x101d, 0x0, 0x1);
        gbc.writeMem(0xd7f8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6496);
        EXPECT(gbc.pc(), 0xd7fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7f8), 0xcb);
        EXPECT(gbc.readMem(0xd7f9), 0xeb);
        // CB EB 02FA
        gbc.setState(0x561, 0x2ea2, 0xe000, 0x5fea, 0xf253, 0x9221, 0x1, 0x1);
        gbc.writeMem(0x561, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2ea2);
        EXPECT(gbc.pc(), 0x563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02FB
        gbc.setState(0x1151, 0xce61, 0x11e0, 0xce97, 0x6988, 0xaa9c, 0x0, 0x0);
        gbc.writeMem(0x1151, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xce61);
        EXPECT(gbc.pc(), 0x1153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02FC
        gbc.setState(0x5c5a, 0x6d88, 0xc50, 0xe6ef, 0x5f, 0x1793, 0x0, 0x1);
        gbc.writeMem(0x5c5a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6d88);
        EXPECT(gbc.pc(), 0x5c5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 02FD
        gbc.setState(0x4b2a, 0x28ed, 0xe420, 0x7662, 0x9b71, 0x520e, 0x1, 0x1);
        gbc.writeMem(0x4b2a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x28ed);
        EXPECT(gbc.pc(), 0x4b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 02FE
        gbc.setState(0x9512, 0x308, 0xb970, 0x5f43, 0x7fd7, 0x4cda, 0x1, 0x1);
        gbc.writeMem(0x9512, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x308);
        EXPECT(gbc.pc(), 0x9514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9512), 0xcb);
        EXPECT(gbc.readMem(0x9513), 0xeb);
        // CB EB 02FF
        gbc.setState(0x2ac3, 0x4248, 0x2b0, 0xe1e4, 0x6975, 0xdcbf, 0x0, 0x1);
        gbc.writeMem(0x2ac3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4248);
        EXPECT(gbc.pc(), 0x2ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0300
        gbc.setState(0xd99e, 0xfce9, 0x17e0, 0x413a, 0x956c, 0xe8af, 0x1, 0x0);
        gbc.writeMem(0xd99e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfce9);
        EXPECT(gbc.pc(), 0xd9a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd99e), 0xcb);
        EXPECT(gbc.readMem(0xd99f), 0xeb);
        // CB EB 0301
        gbc.setState(0xd35a, 0x260d, 0x9d20, 0xa8e2, 0xb8d4, 0xab4b, 0x1, 0x1);
        gbc.writeMem(0xd35a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x260d);
        EXPECT(gbc.pc(), 0xd35c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd35a), 0xcb);
        EXPECT(gbc.readMem(0xd35b), 0xeb);
        // CB EB 0302
        gbc.setState(0xac2, 0x8ccf, 0x3650, 0xa60f, 0xbd23, 0x2281, 0x1, 0x1);
        gbc.writeMem(0xac2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x8ccf);
        EXPECT(gbc.pc(), 0xac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0303
        gbc.setState(0x99cc, 0x89ba, 0x32d0, 0xce9a, 0x8432, 0x1a32, 0x0, 0x1);
        gbc.writeMem(0x99cc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x89ba);
        EXPECT(gbc.pc(), 0x99ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99cc), 0xcb);
        EXPECT(gbc.readMem(0x99cd), 0xeb);
        // CB EB 0304
        gbc.setState(0xee0b, 0xbd54, 0xa030, 0x3649, 0xa8fa, 0xae4d, 0x1, 0x1);
        gbc.writeMem(0xee0b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbd54);
        EXPECT(gbc.pc(), 0xee0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee0b), 0xcb);
        EXPECT(gbc.readMem(0xee0c), 0xeb);
        // CB EB 0305
        gbc.setState(0xda9f, 0x3654, 0xc90, 0x36cd, 0xab07, 0x6782, 0x0, 0x1);
        gbc.writeMem(0xda9f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3654);
        EXPECT(gbc.pc(), 0xdaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda9f), 0xcb);
        EXPECT(gbc.readMem(0xdaa0), 0xeb);
        // CB EB 0306
        gbc.setState(0xdfc6, 0x398d, 0x7d20, 0xeb02, 0x9e20, 0x4325, 0x0, 0x0);
        gbc.writeMem(0xdfc6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x398d);
        EXPECT(gbc.pc(), 0xdfc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc6), 0xcb);
        EXPECT(gbc.readMem(0xdfc7), 0xeb);
        // CB EB 0307
        gbc.setState(0x289b, 0x43ee, 0x7c50, 0xef61, 0x9899, 0xc4c0, 0x0, 0x0);
        gbc.writeMem(0x289b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x43ee);
        EXPECT(gbc.pc(), 0x289d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0308
        gbc.setState(0xd6c0, 0xbab, 0x5b00, 0x9a23, 0x7e81, 0x3b39, 0x1, 0x0);
        gbc.writeMem(0xd6c0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbab);
        EXPECT(gbc.pc(), 0xd6c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c0), 0xcb);
        EXPECT(gbc.readMem(0xd6c1), 0xeb);
        // CB EB 0309
        gbc.setState(0x5901, 0xb1a7, 0x7940, 0x8ec1, 0x70fa, 0x25c, 0x1, 0x1);
        gbc.writeMem(0x5901, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb1a7);
        EXPECT(gbc.pc(), 0x5903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 030A
        gbc.setState(0xcc53, 0xd65, 0x4a70, 0xd8b0, 0xbcda, 0xb581, 0x1, 0x0);
        gbc.writeMem(0xcc53, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd65);
        EXPECT(gbc.pc(), 0xcc55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc53), 0xcb);
        EXPECT(gbc.readMem(0xcc54), 0xeb);
        // CB EB 030B
        gbc.setState(0x5a3f, 0x5201, 0x10f0, 0xfd5b, 0x4439, 0x5509, 0x1, 0x1);
        gbc.writeMem(0x5a3f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5201);
        EXPECT(gbc.pc(), 0x5a41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 030C
        gbc.setState(0x6d9a, 0x1283, 0xf8d0, 0x804b, 0x8b22, 0x12f1, 0x1, 0x0);
        gbc.writeMem(0x6d9a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1283);
        EXPECT(gbc.pc(), 0x6d9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 030D
        gbc.setState(0xda7a, 0x6351, 0xdd30, 0x9184, 0xaf5, 0x7a36, 0x1, 0x1);
        gbc.writeMem(0xda7a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6351);
        EXPECT(gbc.pc(), 0xda7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda7a), 0xcb);
        EXPECT(gbc.readMem(0xda7b), 0xeb);
        // CB EB 030E
        gbc.setState(0x266a, 0x7d8f, 0xfdc0, 0xe461, 0x89a5, 0xd0e1, 0x1, 0x0);
        gbc.writeMem(0x266a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7d8f);
        EXPECT(gbc.pc(), 0x266c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 030F
        gbc.setState(0x5993, 0xf496, 0xc270, 0x93aa, 0x66b5, 0xbbb5, 0x1, 0x0);
        gbc.writeMem(0x5993, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf496);
        EXPECT(gbc.pc(), 0x5995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0310
        gbc.setState(0x4e2c, 0xb91b, 0x1d90, 0x9f6, 0x713c, 0x2281, 0x0, 0x0);
        gbc.writeMem(0x4e2c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb91b);
        EXPECT(gbc.pc(), 0x4e2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0311
        gbc.setState(0x2534, 0x4863, 0xe5d0, 0x359b, 0xc6bb, 0x2328, 0x0, 0x1);
        gbc.writeMem(0x2534, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4863);
        EXPECT(gbc.pc(), 0x2536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0312
        gbc.setState(0x4208, 0xfd36, 0x7490, 0x457d, 0xc136, 0xbc8e, 0x0, 0x0);
        gbc.writeMem(0x4208, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfd36);
        EXPECT(gbc.pc(), 0x420a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0313
        gbc.setState(0xab41, 0xeab9, 0xa420, 0xa7bd, 0x65cb, 0x8a81, 0x1, 0x1);
        gbc.writeMem(0xab41, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xeab9);
        EXPECT(gbc.pc(), 0xab43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab41), 0xcb);
        EXPECT(gbc.readMem(0xab42), 0xeb);
        // CB EB 0314
        gbc.setState(0x74d9, 0xddea, 0x2420, 0x31a8, 0x650e, 0xda61, 0x0, 0x0);
        gbc.writeMem(0x74d9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xddea);
        EXPECT(gbc.pc(), 0x74db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0315
        gbc.setState(0x5313, 0x2219, 0xec20, 0xf3fa, 0x5ad1, 0x6cb0, 0x1, 0x0);
        gbc.writeMem(0x5313, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2219);
        EXPECT(gbc.pc(), 0x5315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0316
        gbc.setState(0x80e8, 0x5e8b, 0x3550, 0xa890, 0xe640, 0xfa4e, 0x1, 0x0);
        gbc.writeMem(0x80e8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5e8b);
        EXPECT(gbc.pc(), 0x80ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e8), 0xcb);
        EXPECT(gbc.readMem(0x80e9), 0xeb);
        // CB EB 0317
        gbc.setState(0x620d, 0xc7df, 0x8040, 0xf270, 0x5ad1, 0xb6c6, 0x0, 0x0);
        gbc.writeMem(0x620d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc7df);
        EXPECT(gbc.pc(), 0x620f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0318
        gbc.setState(0x53f6, 0xad89, 0x9b20, 0x7dd3, 0x906f, 0xf834, 0x1, 0x0);
        gbc.writeMem(0x53f6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xad89);
        EXPECT(gbc.pc(), 0x53f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0319
        gbc.setState(0xc9c7, 0x56cb, 0xc790, 0x79d5, 0xf763, 0x40d5, 0x1, 0x0);
        gbc.writeMem(0xc9c7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x56cb);
        EXPECT(gbc.pc(), 0xc9c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c7), 0xcb);
        EXPECT(gbc.readMem(0xc9c8), 0xeb);
        // CB EB 031A
        gbc.setState(0x2546, 0xf61d, 0x5060, 0x3df, 0x2e60, 0x94a6, 0x1, 0x1);
        gbc.writeMem(0x2546, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf61d);
        EXPECT(gbc.pc(), 0x2548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 031B
        gbc.setState(0xea23, 0x2c79, 0x1160, 0xafeb, 0xc231, 0x305b, 0x1, 0x1);
        gbc.writeMem(0xea23, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2c79);
        EXPECT(gbc.pc(), 0xea25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea23), 0xcb);
        EXPECT(gbc.readMem(0xea24), 0xeb);
        // CB EB 031C
        gbc.setState(0xcd4e, 0x546a, 0x7cc0, 0xd3fd, 0x1c9f, 0x38c0, 0x0, 0x0);
        gbc.writeMem(0xcd4e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x546a);
        EXPECT(gbc.pc(), 0xcd50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd4e), 0xcb);
        EXPECT(gbc.readMem(0xcd4f), 0xeb);
        // CB EB 031D
        gbc.setState(0xc062, 0x943c, 0x73c0, 0xb760, 0x6b54, 0x530, 0x0, 0x0);
        gbc.writeMem(0xc062, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x943c);
        EXPECT(gbc.pc(), 0xc064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc062), 0xcb);
        EXPECT(gbc.readMem(0xc063), 0xeb);
        // CB EB 031E
        gbc.setState(0x8d46, 0x3985, 0xa340, 0xf09a, 0x473e, 0x2e8e, 0x0, 0x1);
        gbc.writeMem(0x8d46, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3985);
        EXPECT(gbc.pc(), 0x8d48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d46), 0xcb);
        EXPECT(gbc.readMem(0x8d47), 0xeb);
        // CB EB 031F
        gbc.setState(0x8c5d, 0x2d47, 0x2060, 0xb9a4, 0x36cb, 0xddb2, 0x1, 0x1);
        gbc.writeMem(0x8c5d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2d47);
        EXPECT(gbc.pc(), 0x8c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c5d), 0xcb);
        EXPECT(gbc.readMem(0x8c5e), 0xeb);
        // CB EB 0320
        gbc.setState(0x8acb, 0xb9c0, 0xb5e0, 0x1fb9, 0x164c, 0xcf40, 0x0, 0x0);
        gbc.writeMem(0x8acb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb9c0);
        EXPECT(gbc.pc(), 0x8acd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8acb), 0xcb);
        EXPECT(gbc.readMem(0x8acc), 0xeb);
        // CB EB 0321
        gbc.setState(0x464e, 0x8227, 0x3f70, 0xf82b, 0x9f1d, 0x54bf, 0x0, 0x0);
        gbc.writeMem(0x464e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8227);
        EXPECT(gbc.pc(), 0x4650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0322
        gbc.setState(0xe502, 0x949f, 0xf260, 0x8cdb, 0x1be4, 0x456a, 0x1, 0x1);
        gbc.writeMem(0xe502, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x949f);
        EXPECT(gbc.pc(), 0xe504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe502), 0xcb);
        EXPECT(gbc.readMem(0xe503), 0xeb);
        // CB EB 0323
        gbc.setState(0xa682, 0x3362, 0x45a0, 0x1ba4, 0x106e, 0xfe45, 0x0, 0x1);
        gbc.writeMem(0xa682, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3362);
        EXPECT(gbc.pc(), 0xa684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa682), 0xcb);
        EXPECT(gbc.readMem(0xa683), 0xeb);
        // CB EB 0324
        gbc.setState(0xbb16, 0xc979, 0x51a0, 0xba29, 0x1b1a, 0x774e, 0x1, 0x1);
        gbc.writeMem(0xbb16, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc979);
        EXPECT(gbc.pc(), 0xbb18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb16), 0xcb);
        EXPECT(gbc.readMem(0xbb17), 0xeb);
        // CB EB 0325
        gbc.setState(0x6c94, 0xdcac, 0x4720, 0xb3cf, 0xe912, 0xb9bc, 0x0, 0x1);
        gbc.writeMem(0x6c94, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdcac);
        EXPECT(gbc.pc(), 0x6c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0326
        gbc.setState(0xe329, 0xe6ea, 0x3b80, 0xce8c, 0x60d2, 0xca85, 0x1, 0x0);
        gbc.writeMem(0xe329, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe6ea);
        EXPECT(gbc.pc(), 0xe32b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe329), 0xcb);
        EXPECT(gbc.readMem(0xe32a), 0xeb);
        // CB EB 0327
        gbc.setState(0xb876, 0x795d, 0x3400, 0xc061, 0x58b3, 0x58, 0x1, 0x0);
        gbc.writeMem(0xb876, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x795d);
        EXPECT(gbc.pc(), 0xb878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb876), 0xcb);
        EXPECT(gbc.readMem(0xb877), 0xeb);
        // CB EB 0328
        gbc.setState(0x505b, 0xeba3, 0x9ad0, 0x33df, 0x8a30, 0x64bc, 0x1, 0x1);
        gbc.writeMem(0x505b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xeba3);
        EXPECT(gbc.pc(), 0x505d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0329
        gbc.setState(0x5f52, 0x45bc, 0xff90, 0x6350, 0x4a72, 0x681, 0x0, 0x1);
        gbc.writeMem(0x5f52, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x45bc);
        EXPECT(gbc.pc(), 0x5f54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 032A
        gbc.setState(0x2489, 0xf411, 0xf5a0, 0xb3b8, 0x9d3c, 0xc770, 0x0, 0x1);
        gbc.writeMem(0x2489, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf411);
        EXPECT(gbc.pc(), 0x248b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 032B
        gbc.setState(0xc407, 0x454c, 0xfab0, 0x524d, 0x79f5, 0x161f, 0x0, 0x0);
        gbc.writeMem(0xc407, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x454c);
        EXPECT(gbc.pc(), 0xc409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc407), 0xcb);
        EXPECT(gbc.readMem(0xc408), 0xeb);
        // CB EB 032C
        gbc.setState(0x9fee, 0x89fe, 0x2780, 0x85ce, 0x3dd9, 0x5d6, 0x0, 0x0);
        gbc.writeMem(0x9fee, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x89fe);
        EXPECT(gbc.pc(), 0x9ff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fee), 0xcb);
        EXPECT(gbc.readMem(0x9fef), 0xeb);
        // CB EB 032D
        gbc.setState(0x28d8, 0xa0e2, 0x840, 0xfcf8, 0xbe55, 0x75fc, 0x1, 0x1);
        gbc.writeMem(0x28d8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa0e2);
        EXPECT(gbc.pc(), 0x28da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 032E
        gbc.setState(0xc5c5, 0x30f0, 0x9eb0, 0x6d22, 0x2045, 0xc5ab, 0x1, 0x1);
        gbc.writeMem(0xc5c5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x30f0);
        EXPECT(gbc.pc(), 0xc5c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c5), 0xcb);
        EXPECT(gbc.readMem(0xc5c6), 0xeb);
        // CB EB 032F
        gbc.setState(0x6370, 0x3469, 0xf380, 0x3ea9, 0x4332, 0x744e, 0x1, 0x1);
        gbc.writeMem(0x6370, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3469);
        EXPECT(gbc.pc(), 0x6372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0330
        gbc.setState(0xe3be, 0xbb39, 0xc8f0, 0x1c15, 0xd653, 0xad4, 0x0, 0x0);
        gbc.writeMem(0xe3be, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbb39);
        EXPECT(gbc.pc(), 0xe3c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3be), 0xcb);
        EXPECT(gbc.readMem(0xe3bf), 0xeb);
        // CB EB 0331
        gbc.setState(0x832a, 0xb7ad, 0xb0, 0xe50, 0x8c89, 0xcefb, 0x1, 0x0);
        gbc.writeMem(0x832a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb7ad);
        EXPECT(gbc.pc(), 0x832c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x832a), 0xcb);
        EXPECT(gbc.readMem(0x832b), 0xeb);
        // CB EB 0332
        gbc.setState(0x9579, 0x99e, 0x9630, 0x3a42, 0xdf5d, 0x11f1, 0x1, 0x1);
        gbc.writeMem(0x9579, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x99e);
        EXPECT(gbc.pc(), 0x957b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9579), 0xcb);
        EXPECT(gbc.readMem(0x957a), 0xeb);
        // CB EB 0333
        gbc.setState(0x26ee, 0xcb84, 0xb850, 0x93a1, 0x2cbb, 0xb7e5, 0x0, 0x1);
        gbc.writeMem(0x26ee, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcb84);
        EXPECT(gbc.pc(), 0x26f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0334
        gbc.setState(0x44d3, 0x502d, 0x1890, 0xbb91, 0xf0ca, 0xf5, 0x0, 0x1);
        gbc.writeMem(0x44d3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x502d);
        EXPECT(gbc.pc(), 0x44d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0335
        gbc.setState(0x9d02, 0xe596, 0xa150, 0x8360, 0xcd7c, 0xf7d6, 0x0, 0x0);
        gbc.writeMem(0x9d02, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe596);
        EXPECT(gbc.pc(), 0x9d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d02), 0xcb);
        EXPECT(gbc.readMem(0x9d03), 0xeb);
        // CB EB 0336
        gbc.setState(0xb194, 0xe0e7, 0xc5b0, 0x82fb, 0x3b4a, 0xb056, 0x0, 0x1);
        gbc.writeMem(0xb194, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe0e7);
        EXPECT(gbc.pc(), 0xb196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb194), 0xcb);
        EXPECT(gbc.readMem(0xb195), 0xeb);
        // CB EB 0337
        gbc.setState(0x18ad, 0x8679, 0x4170, 0x5345, 0xf40d, 0x4846, 0x0, 0x0);
        gbc.writeMem(0x18ad, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8679);
        EXPECT(gbc.pc(), 0x18af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0338
        gbc.setState(0xbb2d, 0x4c17, 0x58f0, 0x1530, 0xb629, 0xcfdf, 0x0, 0x0);
        gbc.writeMem(0xbb2d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4c17);
        EXPECT(gbc.pc(), 0xbb2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb2d), 0xcb);
        EXPECT(gbc.readMem(0xbb2e), 0xeb);
        // CB EB 0339
        gbc.setState(0xebac, 0x9f7f, 0x7d60, 0xc977, 0x8d30, 0x2769, 0x1, 0x1);
        gbc.writeMem(0xebac, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9f7f);
        EXPECT(gbc.pc(), 0xebae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebac), 0xcb);
        EXPECT(gbc.readMem(0xebad), 0xeb);
        // CB EB 033A
        gbc.setState(0x610, 0xf63f, 0x71b0, 0xa308, 0x1ce2, 0x1dbf, 0x1, 0x1);
        gbc.writeMem(0x610, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf63f);
        EXPECT(gbc.pc(), 0x612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 033B
        gbc.setState(0x8072, 0xfe99, 0xd120, 0x4282, 0x9fd5, 0xfeb9, 0x1, 0x1);
        gbc.writeMem(0x8072, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xfe99);
        EXPECT(gbc.pc(), 0x8074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8072), 0xcb);
        EXPECT(gbc.readMem(0x8073), 0xeb);
        // CB EB 033C
        gbc.setState(0xa81, 0x9d91, 0x43d0, 0x4128, 0xa5ac, 0xa3, 0x0, 0x1);
        gbc.writeMem(0xa81, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9d91);
        EXPECT(gbc.pc(), 0xa83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 033D
        gbc.setState(0x3854, 0x19e3, 0xd720, 0xca5b, 0x7f0e, 0xd59b, 0x0, 0x0);
        gbc.writeMem(0x3854, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x19e3);
        EXPECT(gbc.pc(), 0x3856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 033E
        gbc.setState(0xbf73, 0x4b48, 0x38f0, 0xb5eb, 0x724b, 0x4728, 0x0, 0x0);
        gbc.writeMem(0xbf73, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4b48);
        EXPECT(gbc.pc(), 0xbf75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf73), 0xcb);
        EXPECT(gbc.readMem(0xbf74), 0xeb);
        // CB EB 033F
        gbc.setState(0x1c07, 0x4b67, 0x8830, 0xfaf, 0x10b1, 0xfb90, 0x1, 0x1);
        gbc.writeMem(0x1c07, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4b67);
        EXPECT(gbc.pc(), 0x1c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0340
        gbc.setState(0x831c, 0x4964, 0x4a70, 0x1615, 0x91df, 0xda58, 0x0, 0x1);
        gbc.writeMem(0x831c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4964);
        EXPECT(gbc.pc(), 0x831e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x831c), 0xcb);
        EXPECT(gbc.readMem(0x831d), 0xeb);
        // CB EB 0341
        gbc.setState(0xb52d, 0x3099, 0x5b60, 0xa785, 0xbf8c, 0x659c, 0x1, 0x1);
        gbc.writeMem(0xb52d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3099);
        EXPECT(gbc.pc(), 0xb52f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb52d), 0xcb);
        EXPECT(gbc.readMem(0xb52e), 0xeb);
        // CB EB 0342
        gbc.setState(0x7eb0, 0x6ae7, 0xf080, 0x19e6, 0xe353, 0x5aea, 0x0, 0x0);
        gbc.writeMem(0x7eb0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6ae7);
        EXPECT(gbc.pc(), 0x7eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0343
        gbc.setState(0x6c33, 0x531b, 0xdca0, 0x559e, 0xbaff, 0x7461, 0x0, 0x0);
        gbc.writeMem(0x6c33, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x531b);
        EXPECT(gbc.pc(), 0x6c35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0344
        gbc.setState(0xce7d, 0x2d1b, 0xdfa0, 0xe429, 0x8fd5, 0xe056, 0x1, 0x1);
        gbc.writeMem(0xce7d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2d1b);
        EXPECT(gbc.pc(), 0xce7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce7d), 0xcb);
        EXPECT(gbc.readMem(0xce7e), 0xeb);
        // CB EB 0345
        gbc.setState(0xc013, 0x1578, 0xa260, 0x613b, 0xc4bc, 0xe53e, 0x0, 0x0);
        gbc.writeMem(0xc013, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1578);
        EXPECT(gbc.pc(), 0xc015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc013), 0xcb);
        EXPECT(gbc.readMem(0xc014), 0xeb);
        // CB EB 0346
        gbc.setState(0x17f5, 0xa3f3, 0x4b90, 0xcfa3, 0x72d9, 0x81d4, 0x0, 0x1);
        gbc.writeMem(0x17f5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa3f3);
        EXPECT(gbc.pc(), 0x17f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0347
        gbc.setState(0x3046, 0xaae5, 0xbd0, 0x7bcb, 0x1dd8, 0xc690, 0x1, 0x1);
        gbc.writeMem(0x3046, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaae5);
        EXPECT(gbc.pc(), 0x3048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0348
        gbc.setState(0x6c9f, 0x4d17, 0x6d00, 0x624a, 0xb81b, 0xebd2, 0x0, 0x1);
        gbc.writeMem(0x6c9f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4d17);
        EXPECT(gbc.pc(), 0x6ca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0349
        gbc.setState(0xc12c, 0x2698, 0xd540, 0x10a4, 0x248, 0x1200, 0x0, 0x0);
        gbc.writeMem(0xc12c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2698);
        EXPECT(gbc.pc(), 0xc12e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc12c), 0xcb);
        EXPECT(gbc.readMem(0xc12d), 0xeb);
        // CB EB 034A
        gbc.setState(0xdc72, 0xd67e, 0xdd30, 0xbc23, 0x38ef, 0x613c, 0x1, 0x1);
        gbc.writeMem(0xdc72, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd67e);
        EXPECT(gbc.pc(), 0xdc74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc72), 0xcb);
        EXPECT(gbc.readMem(0xdc73), 0xeb);
        // CB EB 034B
        gbc.setState(0x783b, 0x2345, 0x8e20, 0x13ea, 0xbe59, 0x793f, 0x1, 0x0);
        gbc.writeMem(0x783b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2345);
        EXPECT(gbc.pc(), 0x783d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 034C
        gbc.setState(0xb23f, 0x6439, 0xb410, 0xab78, 0xc41, 0xee88, 0x0, 0x1);
        gbc.writeMem(0xb23f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6439);
        EXPECT(gbc.pc(), 0xb241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb23f), 0xcb);
        EXPECT(gbc.readMem(0xb240), 0xeb);
        // CB EB 034D
        gbc.setState(0x6b95, 0xa4be, 0x6b0, 0x4726, 0x9b1b, 0xbe1e, 0x0, 0x0);
        gbc.writeMem(0x6b95, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa4be);
        EXPECT(gbc.pc(), 0x6b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 034E
        gbc.setState(0xb5e4, 0x6596, 0xe700, 0x3418, 0xcec7, 0x9c94, 0x0, 0x1);
        gbc.writeMem(0xb5e4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6596);
        EXPECT(gbc.pc(), 0xb5e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e4), 0xcb);
        EXPECT(gbc.readMem(0xb5e5), 0xeb);
        // CB EB 034F
        gbc.setState(0xe6c5, 0x968c, 0xc750, 0x49d8, 0xefef, 0x5a64, 0x1, 0x1);
        gbc.writeMem(0xe6c5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x968c);
        EXPECT(gbc.pc(), 0xe6c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c5), 0xcb);
        EXPECT(gbc.readMem(0xe6c6), 0xeb);
        // CB EB 0350
        gbc.setState(0x6b2f, 0xc9a9, 0x3bb0, 0xeec4, 0xa318, 0xef99, 0x1, 0x0);
        gbc.writeMem(0x6b2f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc9a9);
        EXPECT(gbc.pc(), 0x6b31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0351
        gbc.setState(0x46ca, 0x737c, 0xa550, 0x5da9, 0xb3a0, 0x5c06, 0x0, 0x1);
        gbc.writeMem(0x46ca, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x737c);
        EXPECT(gbc.pc(), 0x46cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0352
        gbc.setState(0x79cb, 0xc49c, 0x8490, 0xae84, 0x9f9e, 0x75ef, 0x0, 0x0);
        gbc.writeMem(0x79cb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc49c);
        EXPECT(gbc.pc(), 0x79cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0353
        gbc.setState(0xb3d7, 0xd793, 0x1840, 0x6b70, 0xd57b, 0x4c71, 0x1, 0x1);
        gbc.writeMem(0xb3d7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd793);
        EXPECT(gbc.pc(), 0xb3d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d7), 0xcb);
        EXPECT(gbc.readMem(0xb3d8), 0xeb);
        // CB EB 0354
        gbc.setState(0xddf6, 0xc6ee, 0xb1a0, 0x2c78, 0xa46f, 0x4d01, 0x1, 0x0);
        gbc.writeMem(0xddf6, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc6ee);
        EXPECT(gbc.pc(), 0xddf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf6), 0xcb);
        EXPECT(gbc.readMem(0xddf7), 0xeb);
        // CB EB 0355
        gbc.setState(0xd8b2, 0x731c, 0x2e40, 0xdc0f, 0x903a, 0xcde4, 0x1, 0x1);
        gbc.writeMem(0xd8b2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x731c);
        EXPECT(gbc.pc(), 0xd8b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b2), 0xcb);
        EXPECT(gbc.readMem(0xd8b3), 0xeb);
        // CB EB 0356
        gbc.setState(0x6332, 0xfc3d, 0xc7b0, 0x4500, 0xcd13, 0x83e4, 0x0, 0x1);
        gbc.writeMem(0x6332, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xfc3d);
        EXPECT(gbc.pc(), 0x6334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0357
        gbc.setState(0xbcdf, 0xb2b5, 0x2710, 0x45ad, 0x46c5, 0x9d8, 0x0, 0x0);
        gbc.writeMem(0xbcdf, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb2b5);
        EXPECT(gbc.pc(), 0xbce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcdf), 0xcb);
        EXPECT(gbc.readMem(0xbce0), 0xeb);
        // CB EB 0358
        gbc.setState(0x9da, 0x4aa0, 0xae00, 0xf79e, 0x9de4, 0x8720, 0x0, 0x0);
        gbc.writeMem(0x9da, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4aa0);
        EXPECT(gbc.pc(), 0x9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 035A
        gbc.setState(0x48dd, 0xafee, 0xa8e0, 0xce1c, 0x3971, 0x3847, 0x0, 0x0);
        gbc.writeMem(0x48dd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xafee);
        EXPECT(gbc.pc(), 0x48df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 035B
        gbc.setState(0xb1f7, 0x3792, 0xf140, 0x8507, 0x5a2c, 0xa6f9, 0x0, 0x1);
        gbc.writeMem(0xb1f7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3792);
        EXPECT(gbc.pc(), 0xb1f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f7), 0xcb);
        EXPECT(gbc.readMem(0xb1f8), 0xeb);
        // CB EB 035C
        gbc.setState(0x2a81, 0xa933, 0x92a0, 0xfe7b, 0x48ad, 0x2f9f, 0x0, 0x1);
        gbc.writeMem(0x2a81, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa933);
        EXPECT(gbc.pc(), 0x2a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 035D
        gbc.setState(0x8fa1, 0xfe3e, 0xd8f0, 0x4439, 0x22b9, 0x917e, 0x0, 0x0);
        gbc.writeMem(0x8fa1, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfe3e);
        EXPECT(gbc.pc(), 0x8fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa1), 0xcb);
        EXPECT(gbc.readMem(0x8fa2), 0xeb);
        // CB EB 035E
        gbc.setState(0xbd9a, 0xd667, 0xa400, 0xce2a, 0x5707, 0xcd26, 0x0, 0x1);
        gbc.writeMem(0xbd9a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd667);
        EXPECT(gbc.pc(), 0xbd9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd9a), 0xcb);
        EXPECT(gbc.readMem(0xbd9b), 0xeb);
        // CB EB 035F
        gbc.setState(0x4a79, 0xa23e, 0xf640, 0xc974, 0x9ab1, 0xd48f, 0x1, 0x0);
        gbc.writeMem(0x4a79, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa23e);
        EXPECT(gbc.pc(), 0x4a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0360
        gbc.setState(0x1b96, 0x6f35, 0xdbe0, 0x761, 0x4a08, 0xc752, 0x1, 0x0);
        gbc.writeMem(0x1b96, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6f35);
        EXPECT(gbc.pc(), 0x1b98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0361
        gbc.setState(0xea9, 0xed08, 0xcc10, 0x522b, 0x2d15, 0x726b, 0x0, 0x1);
        gbc.writeMem(0xea9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xed08);
        EXPECT(gbc.pc(), 0xeab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0362
        gbc.setState(0xe887, 0xb9b9, 0xd5b0, 0x62ca, 0x11bc, 0x7d6, 0x1, 0x0);
        gbc.writeMem(0xe887, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb9b9);
        EXPECT(gbc.pc(), 0xe889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe887), 0xcb);
        EXPECT(gbc.readMem(0xe888), 0xeb);
        // CB EB 0363
        gbc.setState(0x5713, 0x23b7, 0x8270, 0xcb45, 0xe03c, 0x30f4, 0x1, 0x0);
        gbc.writeMem(0x5713, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x23b7);
        EXPECT(gbc.pc(), 0x5715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0364
        gbc.setState(0x90bc, 0xb70e, 0xd690, 0x663c, 0x8e68, 0xfa4c, 0x0, 0x0);
        gbc.writeMem(0x90bc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb70e);
        EXPECT(gbc.pc(), 0x90be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90bc), 0xcb);
        EXPECT(gbc.readMem(0x90bd), 0xeb);
        // CB EB 0365
        gbc.setState(0xaaa0, 0x31e3, 0xb920, 0x2aa7, 0x407c, 0x245d, 0x0, 0x1);
        gbc.writeMem(0xaaa0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x31e3);
        EXPECT(gbc.pc(), 0xaaa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa0), 0xcb);
        EXPECT(gbc.readMem(0xaaa1), 0xeb);
        // CB EB 0366
        gbc.setState(0xc834, 0x329e, 0xa380, 0x908d, 0xa726, 0x82fb, 0x0, 0x1);
        gbc.writeMem(0xc834, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x329e);
        EXPECT(gbc.pc(), 0xc836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc834), 0xcb);
        EXPECT(gbc.readMem(0xc835), 0xeb);
        // CB EB 0367
        gbc.setState(0x4b5b, 0x968, 0x8e0, 0x8cd7, 0xd4da, 0x303d, 0x0, 0x1);
        gbc.writeMem(0x4b5b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x968);
        EXPECT(gbc.pc(), 0x4b5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0368
        gbc.setState(0x3e83, 0xbce6, 0xbe30, 0x2d95, 0x2fd3, 0xbbdc, 0x0, 0x1);
        gbc.writeMem(0x3e83, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbce6);
        EXPECT(gbc.pc(), 0x3e85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0369
        gbc.setState(0xa260, 0xf7d1, 0xef60, 0xaf4, 0x202, 0xf854, 0x1, 0x1);
        gbc.writeMem(0xa260, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf7d1);
        EXPECT(gbc.pc(), 0xa262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa260), 0xcb);
        EXPECT(gbc.readMem(0xa261), 0xeb);
        // CB EB 036A
        gbc.setState(0x38e3, 0xfbfb, 0x74f0, 0x564b, 0xe616, 0x8424, 0x0, 0x1);
        gbc.writeMem(0x38e3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xfbfb);
        EXPECT(gbc.pc(), 0x38e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 036B
        gbc.setState(0x9172, 0x25a4, 0x3910, 0x3cef, 0xb8af, 0xfe39, 0x1, 0x0);
        gbc.writeMem(0x9172, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x25a4);
        EXPECT(gbc.pc(), 0x9174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9172), 0xcb);
        EXPECT(gbc.readMem(0x9173), 0xeb);
        // CB EB 036C
        gbc.setState(0x3c0c, 0x1d0c, 0x5d40, 0x783c, 0xc3c7, 0x9451, 0x1, 0x0);
        gbc.writeMem(0x3c0c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1d0c);
        EXPECT(gbc.pc(), 0x3c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 036E
        gbc.setState(0xa69, 0x738e, 0xd500, 0xbc9, 0x6f4b, 0xb41d, 0x0, 0x0);
        gbc.writeMem(0xa69, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x738e);
        EXPECT(gbc.pc(), 0xa6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 036F
        gbc.setState(0x7853, 0x23dc, 0xa8f0, 0xc52f, 0x8495, 0xea77, 0x0, 0x1);
        gbc.writeMem(0x7853, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x23dc);
        EXPECT(gbc.pc(), 0x7855);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0370
        gbc.setState(0x6797, 0x9c8c, 0xbc70, 0xbff, 0xc226, 0x61fc, 0x0, 0x0);
        gbc.writeMem(0x6797, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9c8c);
        EXPECT(gbc.pc(), 0x6799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0371
        gbc.setState(0xffe, 0x4c32, 0x6b20, 0x7e3c, 0xf311, 0xd65b, 0x0, 0x0);
        gbc.writeMem(0xffe, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4c32);
        EXPECT(gbc.pc(), 0x1000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0372
        gbc.setState(0x7302, 0x533a, 0x3670, 0x4b71, 0x5f84, 0xeb80, 0x0, 0x0);
        gbc.writeMem(0x7302, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x533a);
        EXPECT(gbc.pc(), 0x7304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0373
        gbc.setState(0xa5ef, 0xb5dd, 0x5a10, 0xf57f, 0x8a82, 0x4aa1, 0x1, 0x1);
        gbc.writeMem(0xa5ef, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb5dd);
        EXPECT(gbc.pc(), 0xa5f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ef), 0xcb);
        EXPECT(gbc.readMem(0xa5f0), 0xeb);
        // CB EB 0374
        gbc.setState(0xce4a, 0x1444, 0x1540, 0xd70e, 0xf637, 0x30d5, 0x0, 0x0);
        gbc.writeMem(0xce4a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1444);
        EXPECT(gbc.pc(), 0xce4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce4a), 0xcb);
        EXPECT(gbc.readMem(0xce4b), 0xeb);
        // CB EB 0376
        gbc.setState(0x57e7, 0xd465, 0xd5a0, 0xeb9f, 0xa8a6, 0x9793, 0x0, 0x0);
        gbc.writeMem(0x57e7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd465);
        EXPECT(gbc.pc(), 0x57e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0377
        gbc.setState(0x6396, 0x97c6, 0x9ac0, 0xc9d7, 0x29a1, 0x786e, 0x0, 0x1);
        gbc.writeMem(0x6396, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x97c6);
        EXPECT(gbc.pc(), 0x6398);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0378
        gbc.setState(0x8f46, 0x521b, 0xa630, 0x6f69, 0xccdd, 0xb217, 0x1, 0x1);
        gbc.writeMem(0x8f46, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x521b);
        EXPECT(gbc.pc(), 0x8f48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f46), 0xcb);
        EXPECT(gbc.readMem(0x8f47), 0xeb);
        // CB EB 0379
        gbc.setState(0xb026, 0xcad4, 0x3160, 0x6a20, 0xfb8b, 0x89f7, 0x0, 0x1);
        gbc.writeMem(0xb026, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcad4);
        EXPECT(gbc.pc(), 0xb028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb026), 0xcb);
        EXPECT(gbc.readMem(0xb027), 0xeb);
        // CB EB 037A
        gbc.setState(0x14c8, 0xc48b, 0xa6a0, 0x70f0, 0x8e3, 0x7eb5, 0x1, 0x0);
        gbc.writeMem(0x14c8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc48b);
        EXPECT(gbc.pc(), 0x14ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 037B
        gbc.setState(0xec26, 0x9174, 0xe280, 0xbc00, 0x57a7, 0xfad6, 0x0, 0x0);
        gbc.writeMem(0xec26, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9174);
        EXPECT(gbc.pc(), 0xec28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec26), 0xcb);
        EXPECT(gbc.readMem(0xec27), 0xeb);
        // CB EB 037C
        gbc.setState(0x71e3, 0x76e0, 0x15d0, 0x58f3, 0x7417, 0xd3c7, 0x1, 0x0);
        gbc.writeMem(0x71e3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x76e0);
        EXPECT(gbc.pc(), 0x71e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 037D
        gbc.setState(0x5e56, 0xd07c, 0x6b80, 0xe8f8, 0x2693, 0x1d5, 0x1, 0x1);
        gbc.writeMem(0x5e56, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd07c);
        EXPECT(gbc.pc(), 0x5e58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 037E
        gbc.setState(0x6f74, 0x38e8, 0x4580, 0x64b8, 0xc56a, 0xe353, 0x0, 0x0);
        gbc.writeMem(0x6f74, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x38e8);
        EXPECT(gbc.pc(), 0x6f76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 037F
        gbc.setState(0xb089, 0xb8ee, 0xef70, 0x43ee, 0x566a, 0x4f70, 0x1, 0x0);
        gbc.writeMem(0xb089, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb8ee);
        EXPECT(gbc.pc(), 0xb08b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb089), 0xcb);
        EXPECT(gbc.readMem(0xb08a), 0xeb);
        // CB EB 0380
        gbc.setState(0xadb5, 0x8f08, 0x53c0, 0xf627, 0x386b, 0x16aa, 0x0, 0x0);
        gbc.writeMem(0xadb5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8f08);
        EXPECT(gbc.pc(), 0xadb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb5), 0xcb);
        EXPECT(gbc.readMem(0xadb6), 0xeb);
        // CB EB 0381
        gbc.setState(0x70d4, 0xffa7, 0xe600, 0xb765, 0x53c6, 0xfb72, 0x1, 0x1);
        gbc.writeMem(0x70d4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xffa7);
        EXPECT(gbc.pc(), 0x70d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0382
        gbc.setState(0x3e86, 0xa0fe, 0x3540, 0x2118, 0xd57b, 0x798d, 0x1, 0x0);
        gbc.writeMem(0x3e86, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa0fe);
        EXPECT(gbc.pc(), 0x3e88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0383
        gbc.setState(0x644f, 0xa60e, 0xfdc0, 0x6653, 0xd036, 0x185, 0x1, 0x1);
        gbc.writeMem(0x644f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa60e);
        EXPECT(gbc.pc(), 0x6451);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0386
        gbc.setState(0x1920, 0x5809, 0x2020, 0xcd65, 0x3213, 0x30e6, 0x0, 0x0);
        gbc.writeMem(0x1920, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5809);
        EXPECT(gbc.pc(), 0x1922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0387
        gbc.setState(0x77ca, 0x51ee, 0xc990, 0xfd91, 0xe3bd, 0x70a, 0x0, 0x1);
        gbc.writeMem(0x77ca, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x51ee);
        EXPECT(gbc.pc(), 0x77cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0388
        gbc.setState(0x3297, 0xb955, 0xfb00, 0xe564, 0xe468, 0xb5af, 0x1, 0x0);
        gbc.writeMem(0x3297, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb955);
        EXPECT(gbc.pc(), 0x3299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0389
        gbc.setState(0x3c06, 0x8ec0, 0x2070, 0xffd6, 0x87d1, 0xf129, 0x0, 0x0);
        gbc.writeMem(0x3c06, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8ec0);
        EXPECT(gbc.pc(), 0x3c08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 038A
        gbc.setState(0xc6a, 0x8408, 0x9630, 0xfa19, 0xb2e9, 0xf1dd, 0x0, 0x1);
        gbc.writeMem(0xc6a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8408);
        EXPECT(gbc.pc(), 0xc6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 038B
        gbc.setState(0x5d75, 0xee40, 0x2d70, 0x7ec5, 0xaa9e, 0x999b, 0x1, 0x0);
        gbc.writeMem(0x5d75, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xee40);
        EXPECT(gbc.pc(), 0x5d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 038C
        gbc.setState(0xcc62, 0x66b6, 0xbc80, 0x793, 0xcc4, 0x3bf3, 0x0, 0x1);
        gbc.writeMem(0xcc62, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x66b6);
        EXPECT(gbc.pc(), 0xcc64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc62), 0xcb);
        EXPECT(gbc.readMem(0xcc63), 0xeb);
        // CB EB 038D
        gbc.setState(0xe97c, 0x9530, 0x6ee0, 0xf87a, 0x1c7, 0x2664, 0x0, 0x0);
        gbc.writeMem(0xe97c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9530);
        EXPECT(gbc.pc(), 0xe97e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe97c), 0xcb);
        EXPECT(gbc.readMem(0xe97d), 0xeb);
        // CB EB 038E
        gbc.setState(0xeb2c, 0xe05f, 0x4070, 0x6373, 0xc5e2, 0x1ab6, 0x1, 0x0);
        gbc.writeMem(0xeb2c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe05f);
        EXPECT(gbc.pc(), 0xeb2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2c), 0xcb);
        EXPECT(gbc.readMem(0xeb2d), 0xeb);
        // CB EB 038F
        gbc.setState(0x97d5, 0xcdeb, 0xb910, 0xf8bf, 0xaf6c, 0x6b2a, 0x1, 0x0);
        gbc.writeMem(0x97d5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xcdeb);
        EXPECT(gbc.pc(), 0x97d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d5), 0xcb);
        EXPECT(gbc.readMem(0x97d6), 0xeb);
        // CB EB 0390
        gbc.setState(0x4700, 0xc0d1, 0xcc10, 0x81a0, 0x2dee, 0x6035, 0x1, 0x0);
        gbc.writeMem(0x4700, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc0d1);
        EXPECT(gbc.pc(), 0x4702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0391
        gbc.setState(0x313d, 0x60c6, 0xa6e0, 0x5477, 0xa6c0, 0x3443, 0x0, 0x0);
        gbc.writeMem(0x313d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x60c6);
        EXPECT(gbc.pc(), 0x313f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0392
        gbc.setState(0x2bef, 0xe7ed, 0xccb0, 0xbb2, 0xc477, 0x1b72, 0x1, 0x0);
        gbc.writeMem(0x2bef, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe7ed);
        EXPECT(gbc.pc(), 0x2bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0393
        gbc.setState(0x5c77, 0x8022, 0xe1a0, 0x5380, 0xfc7c, 0x8bae, 0x0, 0x1);
        gbc.writeMem(0x5c77, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8022);
        EXPECT(gbc.pc(), 0x5c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0394
        gbc.setState(0x9aaf, 0x844f, 0xfc80, 0x14e9, 0xca20, 0xd3eb, 0x0, 0x1);
        gbc.writeMem(0x9aaf, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x844f);
        EXPECT(gbc.pc(), 0x9ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aaf), 0xcb);
        EXPECT(gbc.readMem(0x9ab0), 0xeb);
        // CB EB 0395
        gbc.setState(0xb504, 0xc6a4, 0x67c0, 0x4d6d, 0x377e, 0xf576, 0x0, 0x1);
        gbc.writeMem(0xb504, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc6a4);
        EXPECT(gbc.pc(), 0xb506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb504), 0xcb);
        EXPECT(gbc.readMem(0xb505), 0xeb);
        // CB EB 0396
        gbc.setState(0x92bd, 0x2f8e, 0xd5f0, 0x6440, 0xbbf7, 0x3184, 0x1, 0x1);
        gbc.writeMem(0x92bd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2f8e);
        EXPECT(gbc.pc(), 0x92bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92bd), 0xcb);
        EXPECT(gbc.readMem(0x92be), 0xeb);
        // CB EB 0397
        gbc.setState(0x3677, 0xa42c, 0x2750, 0xa6c2, 0x9057, 0x606c, 0x1, 0x0);
        gbc.writeMem(0x3677, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa42c);
        EXPECT(gbc.pc(), 0x3679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 0398
        gbc.setState(0xe5b, 0x7912, 0x7600, 0x4d72, 0xcc67, 0xf1b6, 0x1, 0x1);
        gbc.writeMem(0xe5b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7912);
        EXPECT(gbc.pc(), 0xe5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 0399
        gbc.setState(0xc61b, 0x985f, 0x2be0, 0x4970, 0x54b2, 0xe20c, 0x0, 0x1);
        gbc.writeMem(0xc61b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x985f);
        EXPECT(gbc.pc(), 0xc61d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc61b), 0xcb);
        EXPECT(gbc.readMem(0xc61c), 0xeb);
        // CB EB 039A
        gbc.setState(0x8c84, 0x4c8d, 0x9ca0, 0x1e14, 0xa711, 0x887e, 0x1, 0x1);
        gbc.writeMem(0x8c84, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x4c8d);
        EXPECT(gbc.pc(), 0x8c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c84), 0xcb);
        EXPECT(gbc.readMem(0x8c85), 0xeb);
        // CB EB 039B
        gbc.setState(0x9dfe, 0xf165, 0xb4f0, 0xe729, 0x7021, 0x43d9, 0x0, 0x0);
        gbc.writeMem(0x9dfe, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf165);
        EXPECT(gbc.pc(), 0x9e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dfe), 0xcb);
        EXPECT(gbc.readMem(0x9dff), 0xeb);
        // CB EB 039C
        gbc.setState(0x8fe9, 0x1631, 0x3380, 0x45db, 0x1bc8, 0xdcd5, 0x0, 0x1);
        gbc.writeMem(0x8fe9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1631);
        EXPECT(gbc.pc(), 0x8feb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe9), 0xcb);
        EXPECT(gbc.readMem(0x8fea), 0xeb);
        // CB EB 039D
        gbc.setState(0x6266, 0xffd, 0xc860, 0x1751, 0xc0f8, 0x537c, 0x0, 0x1);
        gbc.writeMem(0x6266, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xffd);
        EXPECT(gbc.pc(), 0x6268);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 039E
        gbc.setState(0x166, 0x4d78, 0x8b20, 0x7de, 0xc704, 0x4d0a, 0x1, 0x0);
        gbc.writeMem(0x166, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4d78);
        EXPECT(gbc.pc(), 0x168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 039F
        gbc.setState(0x9874, 0x2ab2, 0x54c0, 0xce15, 0xd1e7, 0x4777, 0x1, 0x1);
        gbc.writeMem(0x9874, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2ab2);
        EXPECT(gbc.pc(), 0x9876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9874), 0xcb);
        EXPECT(gbc.readMem(0x9875), 0xeb);
        // CB EB 03A0
        gbc.setState(0xa53f, 0x6792, 0x3820, 0xb131, 0xdb8b, 0x1818, 0x1, 0x1);
        gbc.writeMem(0xa53f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6792);
        EXPECT(gbc.pc(), 0xa541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa53f), 0xcb);
        EXPECT(gbc.readMem(0xa540), 0xeb);
        // CB EB 03A1
        gbc.setState(0x7b6c, 0xab47, 0x6da0, 0x7235, 0xf74f, 0xdb19, 0x0, 0x1);
        gbc.writeMem(0x7b6c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xab47);
        EXPECT(gbc.pc(), 0x7b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03A2
        gbc.setState(0x4d7d, 0xfc0c, 0xc7e0, 0x8bbe, 0x4c9c, 0x1b93, 0x1, 0x0);
        gbc.writeMem(0x4d7d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfc0c);
        EXPECT(gbc.pc(), 0x4d7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03A3
        gbc.setState(0x45a9, 0x71dd, 0x2370, 0x8126, 0x297b, 0xf37b, 0x1, 0x0);
        gbc.writeMem(0x45a9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x71dd);
        EXPECT(gbc.pc(), 0x45ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03A4
        gbc.setState(0xd6a7, 0xf3ec, 0xb9d0, 0x48c, 0x7667, 0x79f2, 0x0, 0x1);
        gbc.writeMem(0xd6a7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0xd6a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a7), 0xcb);
        EXPECT(gbc.readMem(0xd6a8), 0xeb);
        // CB EB 03A5
        gbc.setState(0x890d, 0x99e4, 0x4bf0, 0x181c, 0x6937, 0x828d, 0x0, 0x1);
        gbc.writeMem(0x890d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x99e4);
        EXPECT(gbc.pc(), 0x890f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x890d), 0xcb);
        EXPECT(gbc.readMem(0x890e), 0xeb);
        // CB EB 03A6
        gbc.setState(0xb869, 0x8605, 0x4fa0, 0xacf2, 0x64be, 0x849a, 0x0, 0x0);
        gbc.writeMem(0xb869, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8605);
        EXPECT(gbc.pc(), 0xb86b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb869), 0xcb);
        EXPECT(gbc.readMem(0xb86a), 0xeb);
        // CB EB 03A7
        gbc.setState(0x2589, 0x15e2, 0x3140, 0xf0d7, 0x5f12, 0xdc10, 0x1, 0x0);
        gbc.writeMem(0x2589, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x15e2);
        EXPECT(gbc.pc(), 0x258b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03A8
        gbc.setState(0xa5d, 0xf29f, 0xe420, 0x613f, 0x55cb, 0xa027, 0x1, 0x1);
        gbc.writeMem(0xa5d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf29f);
        EXPECT(gbc.pc(), 0xa5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03A9
        gbc.setState(0x950c, 0x77a6, 0xd960, 0x4eda, 0x7c17, 0x4bc6, 0x0, 0x0);
        gbc.writeMem(0x950c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x77a6);
        EXPECT(gbc.pc(), 0x950e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950c), 0xcb);
        EXPECT(gbc.readMem(0x950d), 0xeb);
        // CB EB 03AA
        gbc.setState(0xd79c, 0xcb19, 0xe760, 0x4e2f, 0xfd9c, 0x36e6, 0x0, 0x0);
        gbc.writeMem(0xd79c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcb19);
        EXPECT(gbc.pc(), 0xd79e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79c), 0xcb);
        EXPECT(gbc.readMem(0xd79d), 0xeb);
        // CB EB 03AB
        gbc.setState(0x9443, 0xc436, 0xcb30, 0xd3c4, 0xc25e, 0x73e1, 0x0, 0x0);
        gbc.writeMem(0x9443, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc436);
        EXPECT(gbc.pc(), 0x9445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9443), 0xcb);
        EXPECT(gbc.readMem(0x9444), 0xeb);
        // CB EB 03AC
        gbc.setState(0x608a, 0x20a6, 0x9530, 0x7ec5, 0x59ab, 0x7fed, 0x1, 0x1);
        gbc.writeMem(0x608a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x20a6);
        EXPECT(gbc.pc(), 0x608c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03AD
        gbc.setState(0x733a, 0xa993, 0xd380, 0x765b, 0x4d99, 0x5d2b, 0x1, 0x1);
        gbc.writeMem(0x733a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa993);
        EXPECT(gbc.pc(), 0x733c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03AE
        gbc.setState(0x51bd, 0x9fd2, 0x5b30, 0xa84e, 0x76a3, 0xb96f, 0x1, 0x0);
        gbc.writeMem(0x51bd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9fd2);
        EXPECT(gbc.pc(), 0x51bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03AF
        gbc.setState(0x2155, 0xfdec, 0x2070, 0xd808, 0x3829, 0x9954, 0x0, 0x0);
        gbc.writeMem(0x2155, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfdec);
        EXPECT(gbc.pc(), 0x2157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03B0
        gbc.setState(0x80c0, 0x3078, 0xf2c0, 0x1b93, 0x933, 0xc444, 0x1, 0x0);
        gbc.writeMem(0x80c0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3078);
        EXPECT(gbc.pc(), 0x80c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c0), 0xcb);
        EXPECT(gbc.readMem(0x80c1), 0xeb);
        // CB EB 03B1
        gbc.setState(0x441a, 0xf742, 0x7910, 0xbdb1, 0x5cf8, 0xc651, 0x0, 0x0);
        gbc.writeMem(0x441a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf742);
        EXPECT(gbc.pc(), 0x441c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03B2
        gbc.setState(0xadfd, 0xca60, 0x260, 0xa00a, 0x4d36, 0x87df, 0x1, 0x1);
        gbc.writeMem(0xadfd, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xca60);
        EXPECT(gbc.pc(), 0xadff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadfd), 0xcb);
        EXPECT(gbc.readMem(0xadfe), 0xeb);
        // CB EB 03B3
        gbc.setState(0x9af9, 0x20b3, 0x8020, 0xf920, 0xc55c, 0x8837, 0x1, 0x1);
        gbc.writeMem(0x9af9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x20b3);
        EXPECT(gbc.pc(), 0x9afb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af9), 0xcb);
        EXPECT(gbc.readMem(0x9afa), 0xeb);
        // CB EB 03B4
        gbc.setState(0xad9e, 0xd66f, 0xf5b0, 0x49c6, 0xd742, 0x7a6f, 0x1, 0x1);
        gbc.writeMem(0xad9e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd66f);
        EXPECT(gbc.pc(), 0xada0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad9e), 0xcb);
        EXPECT(gbc.readMem(0xad9f), 0xeb);
        // CB EB 03B5
        gbc.setState(0xa967, 0x8fc9, 0x1f00, 0xf888, 0x54c3, 0x2e57, 0x1, 0x1);
        gbc.writeMem(0xa967, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8fc9);
        EXPECT(gbc.pc(), 0xa969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa967), 0xcb);
        EXPECT(gbc.readMem(0xa968), 0xeb);
        // CB EB 03B6
        gbc.setState(0xbff5, 0x9b3e, 0x5d10, 0x31c0, 0xbfb1, 0xab38, 0x1, 0x1);
        gbc.writeMem(0xbff5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9b3e);
        EXPECT(gbc.pc(), 0xbff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff5), 0xcb);
        EXPECT(gbc.readMem(0xbff6), 0xeb);
        // CB EB 03B8
        gbc.setState(0x1860, 0xd98b, 0xc550, 0xd1f4, 0x1e69, 0xfdf3, 0x1, 0x0);
        gbc.writeMem(0x1860, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd98b);
        EXPECT(gbc.pc(), 0x1862);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03B9
        gbc.setState(0x874f, 0x9a7e, 0x73a0, 0xa86f, 0xe968, 0x21b6, 0x0, 0x1);
        gbc.writeMem(0x874f, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9a7e);
        EXPECT(gbc.pc(), 0x8751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874f), 0xcb);
        EXPECT(gbc.readMem(0x8750), 0xeb);
        // CB EB 03BA
        gbc.setState(0x4ebe, 0x699c, 0x7300, 0xeab7, 0x38ad, 0x89de, 0x0, 0x0);
        gbc.writeMem(0x4ebe, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x699c);
        EXPECT(gbc.pc(), 0x4ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03BB
        gbc.setState(0xb778, 0x3e10, 0xb6b0, 0x3197, 0x3c95, 0xc653, 0x0, 0x1);
        gbc.writeMem(0xb778, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3e10);
        EXPECT(gbc.pc(), 0xb77a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb778), 0xcb);
        EXPECT(gbc.readMem(0xb779), 0xeb);
        // CB EB 03BC
        gbc.setState(0xd5bc, 0x8f99, 0x48e0, 0xb168, 0xc7de, 0x7b35, 0x1, 0x1);
        gbc.writeMem(0xd5bc, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8f99);
        EXPECT(gbc.pc(), 0xd5be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5bc), 0xcb);
        EXPECT(gbc.readMem(0xd5bd), 0xeb);
        // CB EB 03BD
        gbc.setState(0x79c0, 0x2dad, 0x8bb0, 0xe13, 0x5a0c, 0xc340, 0x0, 0x1);
        gbc.writeMem(0x79c0, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2dad);
        EXPECT(gbc.pc(), 0x79c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03BE
        gbc.setState(0xe15e, 0xf552, 0x9c50, 0x5310, 0x3020, 0x7ee, 0x1, 0x1);
        gbc.writeMem(0xe15e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf552);
        EXPECT(gbc.pc(), 0xe160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe15e), 0xcb);
        EXPECT(gbc.readMem(0xe15f), 0xeb);
        // CB EB 03BF
        gbc.setState(0x4f2d, 0x4548, 0x84d0, 0xc778, 0x7580, 0xfc53, 0x1, 0x1);
        gbc.writeMem(0x4f2d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4548);
        EXPECT(gbc.pc(), 0x4f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03C0
        gbc.setState(0x640e, 0xd1ea, 0x2a00, 0xb305, 0xae93, 0xe9f3, 0x1, 0x1);
        gbc.writeMem(0x640e, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd1ea);
        EXPECT(gbc.pc(), 0x6410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03C1
        gbc.setState(0x99a, 0xc2c9, 0xbf20, 0xd6f0, 0x19ef, 0x1393, 0x0, 0x0);
        gbc.writeMem(0x99a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc2c9);
        EXPECT(gbc.pc(), 0x99c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03C3
        gbc.setState(0x63a7, 0xc7be, 0xb200, 0xa1fd, 0xc543, 0x2f36, 0x1, 0x1);
        gbc.writeMem(0x63a7, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc7be);
        EXPECT(gbc.pc(), 0x63a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03C4
        gbc.setState(0x5493, 0x1565, 0x7b0, 0x53c6, 0x4411, 0x71e6, 0x0, 0x1);
        gbc.writeMem(0x5493, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1565);
        EXPECT(gbc.pc(), 0x5495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03C5
        gbc.setState(0x81a4, 0x2234, 0x2b10, 0x36bf, 0xdd8e, 0x1bf0, 0x1, 0x0);
        gbc.writeMem(0x81a4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2234);
        EXPECT(gbc.pc(), 0x81a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a4), 0xcb);
        EXPECT(gbc.readMem(0x81a5), 0xeb);
        // CB EB 03C6
        gbc.setState(0x95a, 0x36f, 0xa60, 0xf276, 0x8a9f, 0xcd41, 0x0, 0x0);
        gbc.writeMem(0x95a, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x36f);
        EXPECT(gbc.pc(), 0x95c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03C7
        gbc.setState(0xb769, 0x3e86, 0xdec0, 0x8d2d, 0xcd3f, 0xb54d, 0x1, 0x0);
        gbc.writeMem(0xb769, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3e86);
        EXPECT(gbc.pc(), 0xb76b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb769), 0xcb);
        EXPECT(gbc.readMem(0xb76a), 0xeb);
        // CB EB 03C8
        gbc.setState(0xf49, 0xff0b, 0x7750, 0x4dca, 0x250c, 0xa7df, 0x1, 0x1);
        gbc.writeMem(0xf49, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xff0b);
        EXPECT(gbc.pc(), 0xf4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03C9
        gbc.setState(0x53ba, 0xbe4e, 0xb870, 0x8957, 0x5ce2, 0x5187, 0x0, 0x1);
        gbc.writeMem(0x53ba, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbe4e);
        EXPECT(gbc.pc(), 0x53bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03CA
        gbc.setState(0xc76b, 0x889a, 0x44d0, 0x6025, 0xd17a, 0x22e1, 0x1, 0x1);
        gbc.writeMem(0xc76b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x889a);
        EXPECT(gbc.pc(), 0xc76d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc76b), 0xcb);
        EXPECT(gbc.readMem(0xc76c), 0xeb);
        // CB EB 03CB
        gbc.setState(0x937, 0x295d, 0x9020, 0x79c, 0x7c3c, 0x1eda, 0x1, 0x1);
        gbc.writeMem(0x937, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x295d);
        EXPECT(gbc.pc(), 0x939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03CC
        gbc.setState(0x6bb3, 0x9d08, 0xdba0, 0x169a, 0x68ce, 0x5ec2, 0x0, 0x0);
        gbc.writeMem(0x6bb3, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9d08);
        EXPECT(gbc.pc(), 0x6bb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03CD
        gbc.setState(0x5902, 0x1a7f, 0x820, 0x91cb, 0x5ad, 0xe88a, 0x1, 0x0);
        gbc.writeMem(0x5902, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1a7f);
        EXPECT(gbc.pc(), 0x5904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03CE
        gbc.setState(0x5f24, 0x200e, 0xdc0, 0x25be, 0xd1a7, 0x16e4, 0x1, 0x1);
        gbc.writeMem(0x5f24, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x200e);
        EXPECT(gbc.pc(), 0x5f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03CF
        gbc.setState(0x320b, 0x3af3, 0x45f0, 0x97b7, 0x5edb, 0xd547, 0x1, 0x0);
        gbc.writeMem(0x320b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3af3);
        EXPECT(gbc.pc(), 0x320d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03D0
        gbc.setState(0xae04, 0x3476, 0x3820, 0xa2ea, 0x7b7d, 0x5caa, 0x0, 0x1);
        gbc.writeMem(0xae04, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3476);
        EXPECT(gbc.pc(), 0xae06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae04), 0xcb);
        EXPECT(gbc.readMem(0xae05), 0xeb);
        // CB EB 03D1
        gbc.setState(0x8d47, 0x5734, 0x3dc0, 0x33b4, 0xc37d, 0xc12e, 0x1, 0x1);
        gbc.writeMem(0x8d47, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5734);
        EXPECT(gbc.pc(), 0x8d49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d47), 0xcb);
        EXPECT(gbc.readMem(0x8d48), 0xeb);
        // CB EB 03D2
        gbc.setState(0x1eb4, 0xa8a2, 0x5160, 0xf6cd, 0xd5bb, 0x2f15, 0x1, 0x1);
        gbc.writeMem(0x1eb4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa8a2);
        EXPECT(gbc.pc(), 0x1eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03D3
        gbc.setState(0xabb9, 0x8ff7, 0x7390, 0x156e, 0x15f1, 0x2620, 0x1, 0x1);
        gbc.writeMem(0xabb9, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8ff7);
        EXPECT(gbc.pc(), 0xabbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb9), 0xcb);
        EXPECT(gbc.readMem(0xabba), 0xeb);
        // CB EB 03D4
        gbc.setState(0x857d, 0x31d0, 0x7a0, 0x3264, 0x89c3, 0x51a0, 0x1, 0x1);
        gbc.writeMem(0x857d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x31d0);
        EXPECT(gbc.pc(), 0x857f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x857d), 0xcb);
        EXPECT(gbc.readMem(0x857e), 0xeb);
        // CB EB 03D5
        gbc.setState(0xd9d2, 0xa878, 0x4be0, 0x9682, 0xafb, 0x1037, 0x0, 0x1);
        gbc.writeMem(0xd9d2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa878);
        EXPECT(gbc.pc(), 0xd9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d2), 0xcb);
        EXPECT(gbc.readMem(0xd9d3), 0xeb);
        // CB EB 03D6
        gbc.setState(0x756b, 0xdca5, 0xb6a0, 0x248b, 0x1aaf, 0xe780, 0x1, 0x1);
        gbc.writeMem(0x756b, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdca5);
        EXPECT(gbc.pc(), 0x756d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03D7
        gbc.setState(0xdb81, 0x17b5, 0xc9b0, 0xe9c2, 0x3cf8, 0x52a0, 0x0, 0x1);
        gbc.writeMem(0xdb81, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x17b5);
        EXPECT(gbc.pc(), 0xdb83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb81), 0xcb);
        EXPECT(gbc.readMem(0xdb82), 0xeb);
        // CB EB 03D8
        gbc.setState(0x31e4, 0x9c85, 0x4b90, 0x97e9, 0x7894, 0x7c93, 0x0, 0x1);
        gbc.writeMem(0x31e4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9c85);
        EXPECT(gbc.pc(), 0x31e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03D9
        gbc.setState(0xe2f2, 0xebf2, 0x570, 0x6cc3, 0xb65a, 0xb1ba, 0x1, 0x0);
        gbc.writeMem(0xe2f2, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xebf2);
        EXPECT(gbc.pc(), 0xe2f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2f2), 0xcb);
        EXPECT(gbc.readMem(0xe2f3), 0xeb);
        // CB EB 03DA
        gbc.setState(0x87c, 0xd9d7, 0x68e0, 0x7fce, 0x3436, 0xd441, 0x1, 0x0);
        gbc.writeMem(0x87c, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd9d7);
        EXPECT(gbc.pc(), 0x87e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03DB
        gbc.setState(0x7fd4, 0x95ba, 0x5aa0, 0x1bfc, 0xe60c, 0x8c06, 0x0, 0x0);
        gbc.writeMem(0x7fd4, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x95ba);
        EXPECT(gbc.pc(), 0x7fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03DC
        gbc.setState(0x417d, 0x687b, 0xe60, 0xe091, 0x46d7, 0x2c11, 0x0, 0x0);
        gbc.writeMem(0x417d, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x687b);
        EXPECT(gbc.pc(), 0x417f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03DD
        gbc.setState(0x8aba, 0xe13, 0x87d0, 0x66a2, 0x998c, 0x2fe8, 0x1, 0x1);
        gbc.writeMem(0x8aba, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe13);
        EXPECT(gbc.pc(), 0x8abc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aba), 0xcb);
        EXPECT(gbc.readMem(0x8abb), 0xeb);
        // CB EB 03DE
        gbc.setState(0xad43, 0x4073, 0x7d70, 0xdcfc, 0x249f, 0xf002, 0x0, 0x1);
        gbc.writeMem(0xad43, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4073);
        EXPECT(gbc.pc(), 0xad45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad43), 0xcb);
        EXPECT(gbc.readMem(0xad44), 0xeb);
        // CB EB 03DF
        gbc.setState(0x66c8, 0x29c, 0x4f40, 0xa9a3, 0x168c, 0xa558, 0x1, 0x0);
        gbc.writeMem(0x66c8, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x29c);
        EXPECT(gbc.pc(), 0x66ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03E0
        gbc.setState(0x5a61, 0x836b, 0x2190, 0xbd6e, 0x9574, 0xc9e7, 0x1, 0x0);
        gbc.writeMem(0x5a61, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x836b);
        EXPECT(gbc.pc(), 0x5a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03E1
        gbc.setState(0xae79, 0x4253, 0x4c90, 0x7078, 0x315d, 0x8338, 0x1, 0x0);
        gbc.writeMem(0xae79, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4253);
        EXPECT(gbc.pc(), 0xae7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae79), 0xcb);
        EXPECT(gbc.readMem(0xae7a), 0xeb);
        // CB EB 03E2
        gbc.setState(0x96ce, 0x6de3, 0x9d50, 0x4c99, 0x6f93, 0x4c8f, 0x0, 0x1);
        gbc.writeMem(0x96ce, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6de3);
        EXPECT(gbc.pc(), 0x96d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ce), 0xcb);
        EXPECT(gbc.readMem(0x96cf), 0xeb);
        // CB EB 03E3
        gbc.setState(0xddbf, 0x7df0, 0x9d60, 0x5fc8, 0x556a, 0x154a, 0x1, 0x0);
        gbc.writeMem(0xddbf, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7df0);
        EXPECT(gbc.pc(), 0xddc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddbf), 0xcb);
        EXPECT(gbc.readMem(0xddc0), 0xeb);
        // CB EB 03E4
        gbc.setState(0x8893, 0xed21, 0x33e0, 0x398c, 0x3079, 0x4078, 0x1, 0x1);
        gbc.writeMem(0x8893, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xed21);
        EXPECT(gbc.pc(), 0x8895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8893), 0xcb);
        EXPECT(gbc.readMem(0x8894), 0xeb);
        // CB EB 03E5
        gbc.setState(0x7cb, 0x6f70, 0x330, 0x9b47, 0xd484, 0x247, 0x0, 0x0);
        gbc.writeMem(0x7cb, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6f70);
        EXPECT(gbc.pc(), 0x7cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB EB 03E6
        gbc.setState(0x65b5, 0x13f0, 0x8340, 0x7afc, 0xedbc, 0x8801, 0x0, 0x1);
        gbc.writeMem(0x65b5, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x13f0);
        EXPECT(gbc.pc(), 0x65b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB EB 03E7
        gbc.setState(0x5f70, 0x5013, 0xc720, 0x712b, 0x3eea, 0x2ead, 0x1, 0x0);
        gbc.writeMem(0x5f70, { 0xcb, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5013);
        EXPECT(gbc.pc(), 0x5f72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
